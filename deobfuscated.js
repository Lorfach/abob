(function () {
  const vWindow = window;

  
  var v2 = 210;
  if (v2 >= 13) {
    v2 = 105;
  }
  let v3 = 28;
  var v4 = 17;
  if (v4 > 2) {
    v4 = 117;
  }
  var v5 = 157;
  if (v5 == 6) {
    v5 = 11;
  }
  const vF = function (p2) {
    let v6 = "";
    for (let v7 = 0; v7 < p2.length; v7++) {
      v6 += vWindow.String.fromCharCode(p2[v7] ^ v3++ % 255);
    }
    return v6;
  };
  Math.floor(100[100 .ΔΔⵠᐃⲆΔⲆ]);
  var v8 = 138;
  if (v8 === 7) {
    v8 = 94;
  }
  var v9 = 37;
  if (v9 == 12) {
    v9 = 253;
  }
  Math.floor(18[18 .ⵠⵠⲆᐃᐃⵠᐃ]);
  Math.floor(203[203 .ⲆΔᐃᐃΔⵠᐃⵠᐃ]);
  var v10 = 38;
  if (v10 > 9) {
    v10 = 158;
  }
  var v11 = 211;
  if (v11 > 0) {
    v11 = 242;
  }
  const v12 = 15;
  const v13 = 19;
  const v14 = false;
  const v15 = 16;
  const v16 = true;
  const vV14 = v14;
  const v17 = 10;
  const v18 = 17;
  const v19 = 11;
  const vUndefined = undefined;
  const v20 = 20;
  const v21 = 18;
  const v22 = 100;
  const v23 = 256;
  const v24 = 255;
  const v25 = 13;
  const v26 = 15;
  const v27 = 16;
  const v28 = 14;
  const v29 = 12;
  const v30 = 19;
  const v31 = 12;
  const v32 = 19;
  const v33 = 255;
  const v34 = 11;
  const v35 = 255;
  let v36;
  const v37 = 15;
  const v38 = 20;
  let vVUndefined = vUndefined;
  let vVUndefined2 = vUndefined;
  let vVUndefined3 = vUndefined;
  let v39;
  let vVUndefined4 = vUndefined;
  let vVUndefined5 = vUndefined;
  const v40 = 13;
  let v41;
  let v42;
  let v43 = [];
  let v44 = "_";
  let vVUndefined6 = vUndefined;
  const vV16 = v16;
  let v45;
  let v46;
  let vVUndefined7 = vUndefined;
  let vVUndefined8 = vUndefined;
  let vVUndefined9 = vUndefined;
  const v47 = 16;
  let v48;
  const v49 = 17;
  let v50;
  let vVUndefined10 = vUndefined;
  const vVUndefined11 = vUndefined;
  let vVUndefined12 = vUndefined;
  let vVUndefined13 = vUndefined;
  const vV142 = v14;
  let v51;
  const v52 = 18;
  let v53;
  const v54 = 15;
  let v55;
  let vVUndefined14 = vUndefined;
  const v56 = 100;
  let v57;
  ;
  let v58;
  let vVVUndefined11 = vVUndefined11;
  const v59 = 15;
  let v60;
  let v61;
  let vVVUndefined112 = vVUndefined11;
  let v62;
  let vVVUndefined113 = vVUndefined11;
  const v63 = 12;
  let vVVUndefined114 = vVUndefined11;
  const v64 = 256;
  let vVUndefined15 = vUndefined;
  const v65 = 18;
  const v66 = 17;
  let v67;
  const v68 = 255;
  const vV162 = v16;
  let v69;
  let v70;
  const v71 = 16;
  let v72;
  let v73;
  const v74 = 14;
  let v75;
  const v76 = 20;
  const vVV16 = vV16;
  const vVV14 = vV14;
  const v77 = 255;
  const vVVV14 = vVV14;
  let v78;
  const v79 = 10;
  let vVVUndefined115 = vVUndefined11;
  let vVUndefined16 = vUndefined;
  const v80 = 20;
  let v81;
  let v82;
  let vVUndefined17 = vUndefined;
  const v83 = 19;
  let v84;
  const v85 = 17;
  const v86 = 19;
  let v87;
  let v88;
  let vVUndefined18 = vUndefined;
  let vVVUndefined116 = vVUndefined11;
  const v89 = 12;
  let v90 = 0;
  if (!vWindow.WebAssembly || !vWindow.WebAssembly.instantiate) {
    ⵠᐃⵠⲆᐃΔⲆⵠᐃ();
  }
  const vVV142 = vV14;
  const v91 = {
    Date: Date
  };
  vWindow.WebAssembly.instantiate(Uint8Array.from(vWindow.atob(""), function (p3) {
    return p3.charCodeAt(0);
  }), v91).then(function (p4) {
    v36 = p4.instance;
    vVUndefined = v36.exports;
    vVUndefined3 = vVUndefined.memory;
    vVUndefined2 = vVUndefined3.buffer;
    vVUndefined4 = vVUndefined.__pin;
    v39 = vVUndefined.__unpin;
    vVUndefined5 = vVUndefined.__new;
    v41 = vVUndefined.__collect;
    v44 = "_";
    for (let v92 = 0; v92 < 31; v92++) {
      v43[v92] = vVUndefined[v44 + v92];
    }
    v42 = vVUndefined.__rtti_base;
    vVUndefined6 = new Float32Array(vVUndefined2);
    vVUndefined7 = new Float64Array(vVUndefined2);
    v45 = new BigUint64Array(vVUndefined2);
    v46 = new Uint32Array(vVUndefined2);
    vVUndefined9 = new Uint16Array(vVUndefined2);
    vVUndefined8 = new Uint8Array(vVUndefined2);
    v48 = new BigInt64Array(vVUndefined2);
    vVUndefined10 = new Int32Array(vVUndefined2);
    v50 = new Int16Array(vVUndefined2);
    vVUndefined12 = new Int8Array(vVUndefined2);
    v58 = v43[12];
    v87 = v43[26];
    v61 = v43[16];
    vVVUndefined116 = v43[19];
    v84 = v43[13];
    vVUndefined13 = v43[14];
    v70 = v43[30];
    vVVUndefined11 = v43[24];
    v53 = v43[0];
    v78 = v43[8];
    v75 = v43[17];
    v72 = v43[10];
    vVUndefined18 = v43[21];
    v51 = v43[7];
    vVVUndefined112 = v43[4];
    v81 = v43[20];
    v57 = v43[23];
    vVUndefined17 = v43[28];
    vVUndefined15 = v43[6];
    v62 = v43[18];
    vVUndefined14 = v43[11];
    vVVUndefined115 = v43[2];
    vVVUndefined113 = v43[5];
    v67 = v43[29];
    v55 = v43[1];
    vVVUndefined114 = v43[22];
    v60 = v43[15];
    v73 = v43[27];
    v69 = v43[9];
    v82 = v43[25];
    vVUndefined16 = v43[3];
    v90 = 1;
    if (v88) {
      v88();
    }
  });
  const vF2 = function (p5) {
    return v46[(v42 + 4 >>> 2) + (p5 << 1)];
  };
  const v93 = 11;
  const v94 = 14;
  function f2(p6) {
    return 31 - Math.clz32(p6 >>> 6 & 31);
  }
  const v95 = 13;
  const vVUndefined19 = vUndefined;
  ;
  function f3(p7, p8, p9) {
    if (p9) {
      switch (p7) {
        case 2:
          return vVUndefined6;
        case 3:
          return vVUndefined7;
      }
    } else {
      switch (p7) {
        case 0:
          if (p8) {
            return vVUndefined12;
          } else {
            return vVUndefined8;
          }
        case 1:
          if (p8) {
            return v50;
          } else {
            return vVUndefined9;
          }
        case 2:
          if (p8) {
            return vVUndefined10;
          } else {
            return v46;
          }
        case 3:
          if (p8) {
            return v48;
          } else {
            return v45;
          }
      }
    }
  }
  const v96 = 13;
  const v97 = 18;
  function f4(p10) {
    const v98 = v46[p10 + -8 >>> 2];
    const vVF2 = vF2(v98);
    const vF22 = f2(vVF2);
    let v99 = vVF2 & 4 ? p10 : v46[p10 + 4 >>> 2];
    const v100 = vVF2 & 2 ? v46[p10 + 12 >>> 2] : v46[v99 + -4 >>> 2] >>> vF22;
    return f3(vF22, vVF2 & 2048, vVF2 & 4096).subarray(v99 >>>= vF22, v99 + v100);
  }
  const v101 = 10;
  const v102 = 256;
  const v103 = 15;
  function f5(p11, p12, p13, p14) {
    const v104 = (0 << (p11 & 255)) + (16 << (p11 >> 16 & 255)) + (8 << (p11 >> 8 & 255)) + (24 << (p11 >> 24 & 255));
    const v105 = ~(p12 & 18130) & (p12 | 18130);
    const v106 = ((25700 + p13) * 22695477 + 1) % 4294967296;
    const v107 = ~(p14 & 26495) & p14 | ~(p14 & 26495) & 26495;
    const vXp = f501(v104, v105, v106, v107);
    f42(v104, v105, v106, v107, v104);
    return vXp ^ 37498;
  }
  function f6(p15, p16, p17, p18) {
    v55(vVVVVUndefined212, p15, p16, p17, p18);
    const vF3 = function (p19, p20, p21, p22) {
      v84(vVVVVUndefined212, p19, p20, p21, p22);
      const vF4 = function (p23, p24, p25, p26, p27, p28) {
        vVVUndefined115(vVVVVUndefined212, p23, p24, p25, p26, p27, p28);
        const vNh = f70(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4], v2773[5]);
        (function (p29, p30, p31, p32, p33) {
          v57(vVVVVUndefined212, p29, p30, p31, p32, p33);
          const vOp = f495(v2773[0], v2773[1], v2773[2]);
          f71(v2773[3], v2773[4], v2773[0], v2773[1], v2773[2], v2773[3]);
        })(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4]);
        return ~(vNh & 29453) & vNh | ~(vNh & 29453) & 29453;
      }(v2773[0], v2773[1], v2773[2], v2773[3], v2773[0], v2773[1]);
      const vOp2 = f495(v2773[2], v2773[3], v2773[0]);
      return ((242 + (vF4 ^ vOp2)) * 48271 + 0) % 2147483647;
    }(v2773[0], v2773[1], v2773[2], v2773[3]);
    f37(v2773[0], v2773[1], v2773[2], v2773[3]);
    return (vF3 | 41614) & ~(vF3 & 41614);
  }
  const v108 = 2;
  function f7(p34, p35, p36, p37, p38, p39) {
    const v109 = ~(p34 & 10355) & 10355 | ~(p34 & 10355) & p34;
    const v110 = p35 ^ 9077;
    const v111 = (0 << (p36 >> 16 & 255)) + (8 << (p36 >> 8 & 255)) + (16 << (p36 >> 24 & 255)) + (24 << (p36 & 255));
    const v112 = ((p39 + 54606) * 1103515245 + 12345) % 2147483648;
    const vCC = f517(v109, v110, v111, ~(p37 & 24892) & 24892 | ~(p37 & 24892) & p37, (24 << (p38 >> 16 & 255)) + (8 << (p38 >> 24 & 255)) + (16 << (p38 & 255)) + (0 << (p38 >> 8 & 255)));
    f41(v112, v109, v110, v111);
    return (vCC | 64762) & ~(vCC & 64762);
  }
  const v113 = 15;
  const v114 = 100;
  const v115 = "development";
  const v116 = "production";
  function v616(p40) {
    this.ᐃⵠⲆⲆ = 2147483648;
    this.a = 1103515245;
    this.c = 12345;
    this.state = p40 || Math.floor(Math.random() * (this.ᐃⵠⲆⲆ - 1));
  }
  v616.prototype.random = function () {
    this.state = (this.a * this.state + this.c) % this.ᐃⵠⲆⲆ;
    return this.state / this.ᐃⵠⲆⲆ;
  };
  const v117 = 11;
  const v118 = 18;
  const v119 = 255;
  v616.prototype.ᐃⲆᐃⲆᐃⵠᐃ = function (p41) {
    this.state = p41;
  };
  ᐃΔⲆⵠᐃΔⲆ = 10000;
  ⵠᐃᐃΔⵠΔⵠ = [];
  const v120 = 20;
  const v121 = 17;
  var v122 = new v616();
  const vVVUndefined117 = vVUndefined11;
  v122.ᐃⲆᐃⲆᐃⵠᐃ(new Date().getTime());
  for (var v123 = 0; ᐃΔⲆⵠᐃΔⲆ > v123; v123++) {
    ⵠᐃᐃΔⵠΔⵠ.push(v122.random());
  }
  const v124 = 2;
  const v125 = 12;
  const v126 = 19;
  const v127 = 16;
  function f9(p42, p43, p44, p45, p46) {
    const v128 = ((p42 + 14772) * 2147483629 + 2147483587) % 2147483647;
    const v129 = p43 ^ 63080;
    const v130 = ((p44 + 60304) * 22695477 + 1) % 4294967296;
    const v131 = ~(p45 & 5467) & 5467 | ~(p45 & 5467) & p45;
    const v132 = (p46 | 40165) & ~(p46 & 40165);
    const vF5 = function (p47, p48, p49, p50) {
      const v133 = (p47 | 57611) & ~(p47 & 57611);
      const v134 = ((p48 + 56889) * 1664525 + 1013904223) % 4294967296;
      const v135 = p49 ^ 62842;
      const v136 = ~(p50 & 1179) & p50 | ~(p50 & 1179) & 1179;
      const vOt = f13(v133, v134, v135, v136);
      const vFt = f26(v133, v134, v135, v136);
      f10(v133, v134, v135, v136);
      const v137 = (24 << ((vOt ^ vFt) >> 24 & 255)) + (8 << ((vOt ^ vFt) >> 16 & 255)) + (16 << ((vOt ^ vFt) >> 32 & 255)) + (32 << ((vOt ^ vFt) >> 8 & 255));
      return ~(v137 & 63304) & (v137 | 63304);
    }(v128, v129, v130, v131);
    const vVt = f30(v132, v128, v129, v130, v131);
    return ((28765 + ((16 << ((vF5 ^ vVt) >> 24 & 255)) + (8 << ((vF5 ^ vVt) >> 16 & 255)) + (24 << ((vF5 ^ vVt) >> 32 & 255)) + (32 << ((vF5 ^ vVt) >> 8 & 255)) ^ f34(v132, v128, v129, v130, v131, v132))) * 1664525 + 1013904223) % 4294967296;
  }
  function f10(p51, p52, p53, p54) {
    const v138 = ~(p51 & 59259) & p51 | ~(p51 & 59259) & 59259;
    const v139 = ~(p52 & 56097) & p52 | ~(p52 & 56097) & 56097;
    const v140 = ((43315 + p53) * 1664525 + 1013904223) % 4294967296;
    const v141 = (8 << (p54 >> 24 & 255)) + (32 << (p54 >> 32 & 255)) + (24 << (p54 >> 8 & 255)) + (16 << (p54 >> 16 & 255));
    const vF6 = function (p55, p56, p57, p58, p59, p60) {
      const v142 = p55 ^ 10715;
      const v143 = (24 << (p56 >> 16 & 255)) + (16 << (p56 >> 32 & 255)) + (32 << (p56 >> 8 & 255)) + (8 << (p56 >> 24 & 255));
      const v144 = (8 << (p57 >> 16 & 255)) + (32 << (p57 >> 24 & 255)) + (16 << (p57 >> 8 & 255)) + (24 << (p57 >> 32 & 255));
      const v145 = p58 ^ 40782;
      const v146 = p59 ^ 41301;
      const v147 = ~(p60 & 12091) & (p60 | 12091);
      const vTt = f18(v142, v143, v144, v145, v146, v147);
      f18(v142, v143, v144, v145, v146, v147);
      f25(v142, v143, v144, v145, v146);
      const v148 = (vTt | 3006) & ~(vTt & 3006);
      return ~(v148 & 24460) & (v148 | 24460);
    }(v138, v139, v140, v141, v138, v139);
    const vVt2 = f30(v140, v141, v138, v139, v140);
    f18(v141, v138, v139, v140, v141, v138);
    const v149 = (1013904223 + (26191 + (vF6 ^ vVt2)) * 1664525) % 4294967296;
    return (v149 | 38630) & ~(v149 & 38630);
  }
  function f11(p61, p62, p63, p64, p65, p66) {
    const v150 = ((39488 + p61) * 214013 + 2531011) % 4294967296;
    const v151 = ~(p62 & 49976) & p62 | ~(p62 & 49976) & 49976;
    const v152 = ~(p63 & 35856) & p63 | ~(p63 & 35856) & 35856;
    const v153 = p64 ^ 52219;
    const v154 = (p65 + 3575) % 65503;
    const v155 = ~(p66 & 6932) & p66 | ~(p66 & 6932) & 6932;
    const vJt = f27(v150, v151, v152, v153, v154);
    const vF7 = function (p67, p68, p69, p70, p71, p72) {
      const v156 = p67 ^ 30142;
      const v157 = (p68 + 63025) % 65493;
      const v158 = p69 ^ 30777;
      const v159 = ((45939 + p70) * 22695477 + 1) % 4294967296;
      const v160 = (8 << (p71 >> 16 & 255)) + (32 << (p71 >> 24 & 255)) + (24 << (p71 >> 32 & 255)) + (16 << (p71 >> 8 & 255));
      const v161 = (p72 | 45652) & ~(p72 & 45652);
      const vJt2 = f27(v156, v157, v158, v159, v160);
      f9(v161, v156, v157, v158, v159);
      f23(v160, v161, v156, v157, v158, v159);
      return vJt2 ^ 60048;
    }(v155, v150, v151, v152, v153, v154);
    f20(v155, v150, v151, v152, v153, v154);
    const v162 = (1013904223 + (60709 + (vJt ^ vF7)) * 1664525) % 4294967296;
    return ~(v162 & 42138) & v162 | ~(v162 & 42138) & 42138;
  }
  const v163 = 16;
  function f12(p73, p74, p75, p76, p77) {
    const v164 = (12345 + (23101 + p73) * 1103515245) % 2147483648;
    const v165 = p74 ^ 58614;
    const v166 = ((p75 + 45267) * 214013 + 2531011) % 4294967296;
    const v167 = p76 ^ 40810;
    const v168 = (24 << (p77 >> 24 & 255)) + (8 << (p77 >> 32 & 255)) + (32 << (p77 >> 8 & 255)) + (16 << (p77 >> 16 & 255));
    const v$t = f32(v164, v165);
    const vF10 = f10(v166, v167, v168, v164);
    (function (p78, p79, p80, p81) {
      const v169 = (p78 + 34282) % 65336;
      const v170 = ~(p79 & 45181) & 45181 | ~(p79 & 45181) & p79;
      const v171 = (16 << (p80 >> 8 & 255)) + (32 << (p80 >> 24 & 255)) + (8 << (p80 >> 32 & 255)) + (24 << (p80 >> 16 & 255));
      const v172 = ~(p81 & 25475) & 25475 | ~(p81 & 25475) & p81;
      const vF8 = function (p82, p83) {
        const v173 = ~(p82 & 41406) & p82 | ~(p82 & 41406) & 41406;
        const v174 = ((p83 + 17922) * 1103515245 + 12345) % 2147483648;
        const vEn = f33(v173, v174, v173);
        f19(v174, v173, v174, v173);
        const vBt = f14(v174, v173, v174, v173, v174);
        return ((42346 + (vEn ^ 18573 ^ vBt)) * 2147483629 + 2147483587) % 2147483647;
      }(v169, v170);
      const vYt = f29(v171, v172, v169, v170, v171);
      f32(v172, v169);
      const v175 = (58498 + (vF8 ^ vYt)) % 65531;
    })(v165, v166, v167, v168);
    const v176 = (24 << ((v$t ^ vF10) >> 24 & 255)) + (32 << ((v$t ^ vF10) >> 16 & 255)) + (8 << ((v$t ^ vF10) >> 32 & 255)) + (16 << ((v$t ^ vF10) >> 8 & 255));
    return ~(v176 & 13644) & v176 | ~(v176 & 13644) & 13644;
  }
  function f13(p84, p85, p86, p87) {
    const v177 = p84 ^ 11762;
    const v178 = ~(p85 & 19425) & 19425 | ~(p85 & 19425) & p85;
    return ((55182 + (((17757 + ((32 << ((v177 ^ v178) >> 32 & 255)) + (8 << ((v177 ^ v178) >> 8 & 255)) + (24 << ((v177 ^ v178) >> 24 & 255)) + (16 << ((v177 ^ v178) >> 16 & 255)) ^ (32 << (p86 >> 16 & 255)) + (8 << (p86 >> 32 & 255)) + (24 << (p86 >> 24 & 255)) + (16 << (p86 >> 8 & 255)))) * 1664525 + 1013904223) % 4294967296 ^ (~(p87 & 259) & 259 | ~(p87 & 259) & p87))) * 1664525 + 1013904223) % 4294967296;
  }
  const vVV162 = vV162;
  const v179 = String.fromCharCode;
  const vV179 = v179(101);
  const vV1792 = v179(118);
  const vV1793 = v179(97);
  const vV1794 = v179(108);
  function f14(p88, p89, p90, p91, p92) {
    const v180 = (32 << (p88 >> 24 & 255)) + (16 << (p88 >> 8 & 255)) + (24 << (p88 >> 16 & 255)) + (8 << (p88 >> 32 & 255));
    const v181 = (p89 + 39144) % 65406;
    const v182 = p90 ^ 34575;
    const v183 = ~(p91 & 37841) & p91 | ~(p91 & 37841) & 37841;
    const v184 = (p92 | 25975) & ~(p92 & 25975);
    const vF13 = f13(v180, v181, v182, v183);
    f29(v184, v180, v181, v182, v183);
    f20(v184, v180, v181, v182, v183, v184);
    return (vF13 | 19326) & ~(vF13 & 19326) ^ 36297;
  }
  function f15(p93, p94, p95, p96, p97) {
    const v185 = (24 << (p93 >> 24 & 255)) + (32 << (p93 >> 16 & 255)) + (16 << (p93 >> 8 & 255)) + (8 << (p93 >> 32 & 255));
    const v186 = (12345 + (p94 + 3024) * 1103515245) % 2147483648;
    const v187 = (8 << (p95 >> 8 & 255)) + (32 << (p95 >> 32 & 255)) + (24 << (p95 >> 16 & 255)) + (16 << (p95 >> 24 & 255));
    const v188 = (1 + (p96 + 41324) * 22695477) % 4294967296;
    const v189 = (p97 | 19607) & ~(p97 & 19607);
    const vLt = f28(v185, v186);
    f29(v187, v188, v189, v185, v186);
    f23(v187, v188, v189, v185, v186, v187);
    const v190 = ~(vLt & 49323) & 49323 | ~(vLt & 49323) & vLt;
    return ~(v190 & 46567) & (v190 | 46567);
  }
  const v191 = 0;
  const v192 = 12;
  function f16(p98, p99, p100, p101, p102, p103) {
    const v193 = (1013904223 + (p98 + 28824) * 1664525) % 4294967296;
    const v194 = (1013904223 + (13210 + p99) * 1664525) % 4294967296;
    const v195 = ~(p100 & 32165) & 32165 | ~(p100 & 32165) & p100;
    const v196 = (24 << (p101 >> 24 & 255)) + (16 << (p101 >> 8 & 255)) + (8 << (p101 >> 16 & 255)) + (32 << (p101 >> 32 & 255));
    const v197 = (1 + (39199 + p102) * 22695477) % 4294967296;
    const v198 = p103 ^ 33037;
    const vF9 = function (p104, p105, p106) {
      const v199 = (12345 + (39051 + p104) * 1103515245) % 2147483648;
      const v200 = (p105 | 44117) & ~(p105 & 44117);
      const v201 = (24 << (p106 >> 24 & 255)) + (8 << (p106 >> 16 & 255)) + (16 << (p106 >> 32 & 255)) + (32 << (p106 >> 8 & 255));
      const vJt3 = f21(v199, v200, v201, v199, v200);
      const vNn = f34(v201, v199, v200, v201, v199, v200);
      const vF11 = function (p107, p108) {
        const v202 = (16 << (p107 >> 8 & 255)) + (32 << (p107 >> 16 & 255)) + (8 << (p107 >> 32 & 255)) + (24 << (p107 >> 24 & 255));
        const v203 = (32 << (p108 >> 32 & 255)) + (24 << (p108 >> 24 & 255)) + (8 << (p108 >> 8 & 255)) + (16 << (p108 >> 16 & 255));
        const vEt = f23(v202, v203, v202, v203, v202, v203);
        (function (p109, p110, p111, p112, p113) {
          const v204 = p109 ^ 64570;
          const v205 = (2531011 + (p110 + 41768) * 214013) % 4294967296;
          const v206 = (1013904223 + (p111 + 43923) * 1664525) % 4294967296;
          const v207 = (16 << (p112 >> 32 & 255)) + (8 << (p112 >> 24 & 255)) + (32 << (p112 >> 16 & 255)) + (24 << (p112 >> 8 & 255));
          const v208 = (p113 | 21896) & ~(p113 & 21896);
          const vF12 = function (p114, p115) {
            const v209 = ((p114 + 49468) * 1103515245 + 12345) % 2147483648;
            const v210 = ((p115 + 30513) * 214013 + 2531011) % 4294967296;
            const vF14 = function (p116, p117, p118) {
              const v211 = ((5294 + p116) * 1664525 + 1013904223) % 4294967296;
              const v212 = (p117 | 55665) & ~(p117 & 55665);
              const v213 = (p118 + 54633) % 65404;
              const vF92 = f9(v211, v212, v213, v211, v212);
              (function (p119, p120, p121, p122, p123, p124) {
                const v214 = (2531011 + (p119 + 16955) * 214013) % 4294967296;
                const v215 = ((9436 + p120) * 1103515245 + 12345) % 2147483648;
                const v216 = (p121 | 14774) & ~(p121 & 14774);
                const v217 = (p122 | 48802) & ~(p122 & 48802);
                const v218 = ~(p123 & 24998) & (p123 | 24998);
                const v219 = (8 << (p124 >> 8 & 255)) + (16 << (p124 >> 16 & 255)) + (32 << (p124 >> 32 & 255)) + (24 << (p124 >> 24 & 255));
                const vCt = f17(v214, v215, v216, v217);
                const vYt2 = f29(v218, v219, v214, v215, v216);
                const vCt2 = f17(v217, v218, v219, v214);
              })(v213, v211, v212, v213, v211, v212);
              f26(v213, v211, v212, v213);
              return ~(vF92 & 43875) & (vF92 | 43875) ^ 15116;
            }(v209, v210, v209);
            f25(v210, v209, v210, v209, v210);
            f13(v209, v210, v209, v210);
            return (vF14 | 17943) & ~(vF14 & 17943) ^ 21791;
          }(v204, v205);
          f19(v206, v207, v208, v204);
          const vF15 = f15(v205, v206, v207, v208, v204);
        })(v202, v203, v202, v203, v202);
        f28(v203, v202);
        return (vEt | 58283) & ~(vEt & 58283) ^ 8337;
      }(v201, v199);
      const v220 = (16 << ((vJt3 ^ vNn) >> 32 & 255)) + (24 << ((vJt3 ^ vNn) >> 24 & 255)) + (32 << ((vJt3 ^ vNn) >> 8 & 255)) + (8 << ((vJt3 ^ vNn) >> 16 & 255));
      return (8 << ((v220 ^ vF11) >> 32 & 255)) + (16 << ((v220 ^ vF11) >> 8 & 255)) + (32 << ((v220 ^ vF11) >> 16 & 255)) + (24 << ((v220 ^ vF11) >> 24 & 255));
    }(v193, v194, v195);
    f26(v196, v197, v198, v193);
    return ((34159 + (vF9 ^ 2959 ^ f17(v194, v195, v196, v197))) * 1103515245 + 12345) % 2147483648;
  }
  ;
  function f17(p125, p126, p127, p128) {
    const v221 = ~(p125 & 33107) & (p125 | 33107);
    const v222 = (24 << (p126 >> 32 & 255)) + (32 << (p126 >> 8 & 255)) + (8 << (p126 >> 16 & 255)) + (16 << (p126 >> 24 & 255));
    const v223 = ~(p127 & 32053) & (p127 | 32053);
    const v224 = p128 ^ 12240;
    const vF16 = function (p129, p130, p131, p132) {
      const v225 = (32 << (p129 >> 32 & 255)) + (16 << (p129 >> 16 & 255)) + (24 << (p129 >> 24 & 255)) + (8 << (p129 >> 8 & 255));
      const v226 = (1 + (50595 + p130) * 22695477) % 4294967296;
      const v227 = ~(p131 & 40066) & p131 | ~(p131 & 40066) & 40066;
      const v228 = p132 ^ 18768;
      const vJt4 = f27(v225, v226, v227, v228, v225);
      const vF122 = f12(v226, v227, v228, v225, v226);
      const vMt = f22(v227, v228);
      return ((16767 + ((2531011 + (35287 + (vJt4 ^ vF122)) * 214013) % 4294967296 ^ vMt)) * 1664525 + 1013904223) % 4294967296;
    }(v221, v222, v223, v224);
    f26(v221, v222, v223, v224);
    return (2531011 + (44352 + ((~(vF16 & 64131) & 64131 | ~(vF16 & 64131) & vF16) ^ f27(v221, v222, v223, v224, v221))) * 214013) % 4294967296;
  }
  function f18(p133, p134, p135, p136, p137, p138) {
    const v229 = ~(p133 & 36133) & (p133 | 36133);
    const v230 = (p134 | 13670) & ~(p134 & 13670);
    const v231 = (p135 | 31390) & ~(p135 & 31390);
    const v232 = p136 ^ 64081;
    const v233 = p137 ^ 7550;
    const v234 = (2147483587 + (p138 + 63950) * 2147483629) % 2147483647;
    return (12345 + (36760 + (((62552 + (f31(v229, v230, v231, v232, v233) ^ f26(v234, v229, v230, v231))) * 2147483629 + 2147483587) % 2147483647 ^ f25(v232, v233, v234, v229, v230))) * 1103515245) % 2147483648;
  }
  const v235 = 20;
  const vVVVV14 = vVVV14;
  function f19(p139, p140, p141, p142) {
    const v236 = (p139 | 15432) & ~(p139 & 15432);
    const v237 = p140 ^ 12315;
    const v238 = p141 ^ 38714;
    const v239 = p142 ^ 58084;
    const vF112 = f11(v236, v237, v238, v239, v236, v237);
    f26(v238, v239, v236, v237);
    return ((34681 + ((~(vF112 & 41134) & vF112 | ~(vF112 & 41134) & 41134) ^ f20(v238, v239, v236, v237, v238, v239))) * 214013 + 2531011) % 4294967296;
  }
  const v240 = 12;
  const v241 = 8;
  const v242 = 1;
  function f20(p143, p144, p145, p146, p147, p148) {
    const v243 = p143 ^ 23409;
    const v244 = p144 ^ 26380;
    const v245 = ((p147 + 33017) * 1103515245 + 12345) % 2147483648;
    const v246 = p148 ^ 42490;
    return ((19056 + (f13(v243, v244, p145 ^ 53590, p146 ^ 36633) ^ f13(v245, v246, v243, v244))) * 22695477 + 1) % 4294967296;
  }
  const v247 = 256;
  function f21(p149, p150, p151, p152, p153) {
    const v248 = ((9716 + p149) * 1664525 + 1013904223) % 4294967296;
    const v249 = ~(p150 & 7703) & p150 | ~(p150 & 7703) & 7703;
    const v250 = (p151 | 31275) & ~(p151 & 31275);
    const v251 = ~(p152 & 25693) & 25693 | ~(p152 & 25693) & p152;
    const v252 = (8 << (p153 >> 8 & 255)) + (32 << (p153 >> 24 & 255)) + (24 << (p153 >> 16 & 255)) + (16 << (p153 >> 32 & 255));
    const vF20 = f20(v248, v249, v250, v251, v252, v248);
    const vF132 = f13(v249, v250, v251, v252);
    f33(v248, v249, v250);
    return (24 << ((vF20 ^ vF132) >> 16 & 255)) + (8 << ((vF20 ^ vF132) >> 8 & 255)) + (32 << ((vF20 ^ vF132) >> 24 & 255)) + (16 << ((vF20 ^ vF132) >> 32 & 255)) ^ 31710;
  }
  function f22(p154, p155) {
    const v253 = (2531011 + (p154 + 62874) * 214013) % 4294967296;
    const v254 = (24 << (p155 >> 24 & 255)) + (16 << (p155 >> 32 & 255)) + (8 << (p155 >> 8 & 255)) + (32 << (p155 >> 16 & 255));
    const vF202 = f20(v253, v254, v253, v254, v253, v254);
    const vF203 = f20(v253, v254, v253, v254, v253, v254);
    f13(v253, v254, v253, v254);
    const v255 = (16 << ((vF202 ^ vF203) >> 32 & 255)) + (8 << ((vF202 ^ vF203) >> 24 & 255)) + (24 << ((vF202 ^ vF203) >> 16 & 255)) + (32 << ((vF202 ^ vF203) >> 8 & 255));
    return ~(v255 & 55949) & 55949 | ~(v255 & 55949) & v255;
  }
  const v256 = 16;
  function f23(p156, p157, p158, p159, p160, p161) {
    const v257 = (24 << (p156 >> 24 & 255)) + (32 << (p156 >> 16 & 255)) + (16 << (p156 >> 8 & 255)) + (8 << (p156 >> 32 & 255));
    const v258 = (p157 | 41551) & ~(p157 & 41551);
    const v259 = (24 << (p158 >> 24 & 255)) + (16 << (p158 >> 32 & 255)) + (8 << (p158 >> 16 & 255)) + (32 << (p158 >> 8 & 255));
    const v260 = ~(p159 & 32641) & (p159 | 32641);
    const v261 = ((p160 + 35582) * 214013 + 2531011) % 4294967296;
    const v262 = ~(p161 & 1090) & (p161 | 1090);
    const vNn2 = f34(v257, v258, v259, v260, v261, v262);
    f14(v257, v258, v259, v260, v261);
    f13(v262, v257, v258, v259);
    const v263 = ~(vNn2 & 8077) & 8077 | ~(vNn2 & 8077) & vNn2;
    return ~(v263 & 3708) & (v263 | 3708);
  }
  const v264 = 13;
  function f24(p162) {
    return f16(p162, 8260, 46947, 8004, 37330, 5330);
  }
  const v265 = 11;
  function f25(p163, p164, p165, p166, p167) {
    const v266 = (2147483587 + (p163 + 64762) * 2147483629) % 2147483647;
    const v267 = ((18197 + p164) * 214013 + 2531011) % 4294967296;
    const v268 = (2531011 + (22845 + p165) * 214013) % 4294967296;
    const v269 = (32 << (p166 >> 16 & 255)) + (16 << (p166 >> 8 & 255)) + (8 << (p166 >> 32 & 255)) + (24 << (p166 >> 24 & 255));
    const v270 = ~(p167 & 11999) & p167 | ~(p167 & 11999) & 11999;
    const vF204 = f20(v266, v267, v268, v269, v270, v266);
    const vF23 = f23(v267, v268, v269, v270, v266, v267);
    f13(v268, v269, v270, v266);
    return (8 << ((vF204 ^ vF23) >> 24 & 255)) + (16 << ((vF204 ^ vF23) >> 16 & 255)) + (24 << ((vF204 ^ vF23) >> 8 & 255)) + (32 << ((vF204 ^ vF23) >> 32 & 255)) ^ 35444;
  }
  const v271 = 10;
  const v272 = 18;
  function f26(p168, p169, p170, p171) {
    const v273 = (2147483587 + (37418 + p168) * 2147483629) % 2147483647;
    const v274 = p169 ^ 57623;
    const v275 = ~(p170 & 40280) & p170 | ~(p170 & 40280) & 40280;
    const v276 = ~(p171 & 24601) & p171 | ~(p171 & 24601) & 24601;
    const vLt2 = f28(v273, v274);
    f28(v275, v276);
    f30(v273, v274, v275, v276, v273);
    const v277 = ~(vLt2 & 43902) & 43902 | ~(vLt2 & 43902) & vLt2;
    return (v277 | 8862) & ~(v277 & 8862);
  }
  const v278 = 12;
  function f27(p172, p173, p174, p175, p176) {
    const v279 = p172 ^ 62008;
    const v280 = (24 << (p173 >> 32 & 255)) + (8 << (p173 >> 16 & 255)) + (32 << (p173 >> 8 & 255)) + (16 << (p173 >> 24 & 255));
    const v281 = ((p174 + 46531) * 22695477 + 1) % 4294967296;
    const v282 = ~(p175 & 1884) & 1884 | ~(p175 & 1884) & p175;
    const v283 = ~(p176 & 55588) & 55588 | ~(p176 & 55588) & p176;
    const vF93 = f9(v279, v280, v281, v282, v283);
    f34(v279, v280, v281, v282, v283, v279);
    return ((3037 + (vF93 ^ 57467 ^ f30(v280, v281, v282, v283, v279))) * 1664525 + 1013904223) % 4294967296;
  }
  const v284 = 255;
  function f28(p177, p178) {
    const v285 = ((p177 + 44664) * 1664525 + 1013904223) % 4294967296;
    const v286 = p178 ^ 53080;
    return (1 + (57525 + ((17769 + (f31(v285, v286, v285, v286, v285) ^ f29(v286, v285, v286, v285, v286))) % 65357 ^ f13(v285, v286, v285, v286))) * 22695477) % 4294967296;
  }
  const v287 = 20;
  const v288 = 255;
  const v289 = 12;
  const v290 = 4;
  const v291 = 15;
  function f29(p179, p180, p181, p182, p183) {
    const v292 = ~(p179 & 42203) & p179 | ~(p179 & 42203) & 42203;
    const v293 = p180 ^ 50118;
    const v294 = p181 ^ 41620;
    const v295 = ((p182 + 34240) * 2147483629 + 2147483587) % 2147483647;
    const v296 = (32 << (p183 >> 16 & 255)) + (16 << (p183 >> 8 & 255)) + (8 << (p183 >> 32 & 255)) + (24 << (p183 >> 24 & 255));
    const vNn3 = f34(v292, v293, v294, v295, v296, v292);
    f34(v293, v294, v295, v296, v292, v293);
    return (2531011 + (53616 + ((vNn3 | 43477) & ~(vNn3 & 43477) ^ f13(v294, v295, v296, v292))) * 214013) % 4294967296;
  }
  const vVVV16 = vVV16;
  function f30(p184, p185, p186, p187, p188) {
    const v297 = ((p184 + 49173) * 1103515245 + 12345) % 2147483648;
    const v298 = (p185 + 52922) % 65337;
    const v299 = p186 ^ 25250;
    const v300 = ~(p187 & 10903) & 10903 | ~(p187 & 10903) & p187;
    const v301 = ~(p188 & 33814) & 33814 | ~(p188 & 33814) & p188;
    const vF142 = f14(v297, v298, v299, v300, v301);
    const v$t2 = f32(v297, v298);
    f14(v299, v300, v301, v297, v298);
    const v302 = (1 + (19675 + (vF142 ^ v$t2)) * 22695477) % 4294967296;
    return ~(v302 & 7922) & v302 | ~(v302 & 7922) & 7922;
  }
  function f31(p189, p190, p191, p192, p193) {
    const v303 = (16 << (p189 >> 32 & 255)) + (24 << (p189 >> 24 & 255)) + (8 << (p189 >> 8 & 255)) + (32 << (p189 >> 16 & 255));
    const v304 = p190 ^ 55978;
    const v305 = ((p191 + 2934) * 1664525 + 1013904223) % 4294967296;
    const v306 = ~(p192 & 30642) & (p192 | 30642);
    const v307 = (8 << (p193 >> 8 & 255)) + (24 << (p193 >> 32 & 255)) + (16 << (p193 >> 24 & 255)) + (32 << (p193 >> 16 & 255));
    const vF29 = f29(v303, v304, v305, v306, v307);
    const vF25 = f25(v303, v304, v305, v306, v307);
    f13(v303, v304, v305, v306);
    const v308 = (16 << ((vF29 ^ vF25) >> 32 & 255)) + (24 << ((vF29 ^ vF25) >> 8 & 255)) + (8 << ((vF29 ^ vF25) >> 24 & 255)) + (32 << ((vF29 ^ vF25) >> 16 & 255));
    return ~(v308 & 23686) & (v308 | 23686);
  }
  const v309 = 11;
  function f32(p194, p195) {
    const v310 = p194 ^ 24508;
    const v311 = (16 << (p195 >> 16 & 255)) + (24 << (p195 >> 8 & 255)) + (32 << (p195 >> 32 & 255)) + (8 << (p195 >> 24 & 255));
    const vF152 = f15(v310, v311, v310, v311, v310);
    const vF31 = f31(v311, v310, v311, v310, v311);
    f21(v310, v311, v310, v311, v310);
    const v312 = ((11269 + (vF152 ^ vF31)) * 2147483629 + 2147483587) % 2147483647;
    return ~(v312 & 40927) & 40927 | ~(v312 & 40927) & v312;
  }
  function f33(p196, p197, p198) {
    const v313 = p196 ^ 23323;
    const v314 = (2531011 + (61713 + p197) * 214013) % 4294967296;
    const v315 = (p198 | 24198) & ~(p198 & 24198);
    const vF153 = f15(v313, v314, v315, v313, v314);
    const vF154 = f15(v315, v313, v314, v315, v313);
    f15(v314, v315, v313, v314, v315);
    return (16 << ((vF153 ^ vF154) >> 32 & 255)) + (8 << ((vF153 ^ vF154) >> 8 & 255)) + (24 << ((vF153 ^ vF154) >> 24 & 255)) + (32 << ((vF153 ^ vF154) >> 16 & 255)) ^ 31181;
  }
  const v316 = 19;
  function f34(p199, p200, p201, p202, p203, p204) {
    const v317 = p201 ^ 8102;
    const v318 = (24 << (p202 >> 16 & 255)) + (32 << (p202 >> 32 & 255)) + (8 << (p202 >> 24 & 255)) + (16 << (p202 >> 8 & 255));
    const v319 = ~(p203 & 29687) & 29687 | ~(p203 & 29687) & p203;
    const v320 = (1 + (62237 + p204) * 22695477) % 4294967296;
    const vF222 = f22((p199 + 52483) % 65496, (16 << (p200 >> 16 & 255)) + (24 << (p200 >> 8 & 255)) + (32 << (p200 >> 24 & 255)) + (8 << (p200 >> 32 & 255)));
    const vF223 = f22(v317, v318);
    f22(v319, v320);
    return (45290 + (vF222 ^ vF223)) % 65334 ^ 55575;
  }
  function f35(p205, p206) {
    const v321 = (1 + (p205 + 58494) * 22695477) % 4294967296;
    const v322 = (1 + (p206 + 36540) * 22695477) % 4294967296;
    const vF17 = function (p207, p208, p209) {
      const v323 = (1013904223 + (5572 + p207) * 1664525) % 4294967296;
      const v324 = ((15368 + p208) * 22695477 + 1) % 4294967296;
      const v325 = (8 << (p209 & 255)) + (16 << (p209 >> 16 & 255)) + (0 << (p209 >> 24 & 255)) + (24 << (p209 >> 8 & 255));
      const vF18 = function (p210, p211, p212, p213) {
        const v326 = (1013904223 + (5841 + p210) * 1664525) % 4294967296;
        const v327 = p211 ^ 26779;
        const v328 = ~(p212 & 63337) & 63337 | ~(p212 & 63337) & p212;
        const v329 = p213 ^ 33830;
        const vF19 = function (p214, p215, p216, p217, p218, p219) {
          const v330 = p214 ^ 40884;
          const v331 = (p215 | 20009) & ~(p215 & 20009);
          const v332 = (p218 + 57832) % 65493;
          const v333 = ((p219 + 50212) * 2147483629 + 2147483587) % 2147483647;
          const vXd = f289(v330, v331, ~(p216 & 28371) & p216 | ~(p216 & 28371) & 28371, (p217 | 54810) & ~(p217 & 54810));
          (function (p220, p221, p222, p223) {
            const v334 = ~(p220 & 40474) & p220 | ~(p220 & 40474) & 40474;
            const v335 = ~(p221 & 20392) & (p221 | 20392);
            const v336 = ~(p222 & 35821) & 35821 | ~(p222 & 35821) & p222;
            const v337 = ~(p223 & 60727) & (p223 | 60727);
            const vF52 = f5(v334, v335, v336, v337);
            (function (p224, p225, p226, p227, p228, p229) {
              const v338 = ~(p224 & 42265) & p224 | ~(p224 & 42265) & 42265;
              const v339 = (p225 | 31991) & ~(p225 & 31991);
              const v340 = (1 + (51674 + p226) * 22695477) % 4294967296;
              const v341 = (1 + (p229 + 35869) * 22695477) % 4294967296;
              const vF21 = function (p230, p231, p232, p233, p234) {
                const v342 = ((p230 + 18702) * 214013 + 2531011) % 4294967296;
                const v343 = ~(p231 & 23211) & p231 | ~(p231 & 23211) & 23211;
                const v344 = ~(p232 & 5612) & p232 | ~(p232 & 5612) & 5612;
                const v345 = p233 ^ 43419;
                const v346 = (0 << (p234 >> 24 & 255)) + (8 << (p234 & 255)) + (16 << (p234 >> 8 & 255)) + (24 << (p234 >> 16 & 255));
                const vF24 = function (p235, p236, p237) {
                  const v347 = ~(p235 & 54003) & (p235 | 54003);
                  const v348 = p236 ^ 446;
                  const v349 = p237 ^ 6214;
                  const vXd2 = f289(v347, v348, v349, v347);
                  f63(v348, v349, v347, v348, v349, v347);
                  return vXd2 ^ 27419;
                }(v342, v343, v344);
                f72(v345, v346, v342, v343, v344, v345);
                return vF24 ^ 64779;
              }(v338, v339, v340, (16 << (p227 >> 8 & 255)) + (8 << (p227 >> 16 & 255)) + (24 << (p227 & 255)) + (0 << (p227 >> 24 & 255)), ((p228 + 53402) * 1664525 + 1013904223) % 4294967296);
              f41(v341, v338, v339, v340);
            })(v334, v335, v336, v337, v334, v335);
          })(v332, v333, v330, v331);
          return ~(vXd & 3155) & (vXd | 3155);
        }(v326, v327, v328, v329, v326, v327);
        const vTg = f80(v328, v329, v326, v327);
        return (1013904223 + (14710 + (vF19 ^ vTg)) * 1664525) % 4294967296;
      }(v323, v324, v325, v323);
      f7(v324, v325, v323, v324, v325, v323);
      return ~(vF18 & 19115) & (vF18 | 19115);
    }(v321, v322, v321);
    f42(v322, v321, v322, v321, v322);
    return ~(vF17 & 37922) & (vF17 | 37922);
  }
  const v350 = 11;
  const v351 = 100;
  function f36(p238, p239, p240, p241, p242) {
    const v352 = (0 << (p238 >> 8 & 255)) + (8 << (p238 >> 16 & 255)) + (16 << (p238 & 255)) + (24 << (p238 >> 24 & 255));
    const v353 = p239 ^ 27751;
    const v354 = (1 + (53104 + p240) * 22695477) % 4294967296;
    const v355 = ~(p241 & 27109) & p241 | ~(p241 & 27109) & 27109;
    const v356 = (1 + (p242 + 27644) * 22695477) % 4294967296;
    return (2531011 + (35988 + (function (p243, p244, p245, p246, p247, p248) {
      const v357 = (0 << (p243 >> 16 & 255)) + (24 << (p243 >> 24 & 255)) + (16 << (p243 >> 8 & 255)) + (8 << (p243 & 255));
      const v358 = (24 << (p245 >> 16 & 255)) + (0 << (p245 >> 8 & 255)) + (8 << (p245 >> 24 & 255)) + (16 << (p245 & 255));
      const v359 = ~(p246 & 42158) & p246 | ~(p246 & 42158) & 42158;
      const v360 = (p247 + 61102) % 65294;
      const v361 = (p248 + 18138) % 65365;
      const vEg = f78(v357, ((17500 + p244) * 214013 + 2531011) % 4294967296);
      const vMC = f514(v358, v359, v360, v361, v357);
      return (0 << ((vEg ^ vMC) >> 8 & 255)) + (16 << ((vEg ^ vMC) >> 16 & 255)) + (24 << ((vEg ^ vMC) & 255)) + (8 << ((vEg ^ vMC) >> 24 & 255));
    }(v352, v353, v354, v355, v356, v352) ^ f517(v353, v354, v355, v356, v352))) * 214013) % 4294967296;
  }
  function f37(p249, p250, p251, p252) {
    v78(vVVVVUndefined212, p249, p250, p251, p252);
    const vF26 = function (p253, p254, p255, p256) {
      v70(vVVVVUndefined212, p253, p254, p255, p256);
      const vPC = f516(v2773[0], v2773[1], v2773[2], v2773[3], v2773[0]);
      const vPC2 = f516(v2773[1], v2773[2], v2773[3], v2773[0], v2773[1]);
      return (49584 + (vPC ^ vPC2)) % 65530;
    }(v2773[0], v2773[1], v2773[2], v2773[3]);
    const vYp = f498(v2773[0], v2773[1], v2773[2], v2773[3], v2773[0], v2773[1]);
    return (24 << ((vF26 ^ vYp) >> 24 & 255)) + (16 << ((vF26 ^ vYp) >> 16 & 255)) + (0 << ((vF26 ^ vYp) & 255)) + (8 << ((vF26 ^ vYp) >> 8 & 255));
  }
  function f38(p257, p258) {
    const v362 = (0 << (p257 >> 24 & 255)) + (24 << (p257 >> 8 & 255)) + (16 << (p257 >> 16 & 255)) + (8 << (p257 & 255));
    const v363 = (24 << (p258 >> 16 & 255)) + (0 << (p258 >> 24 & 255)) + (8 << (p258 >> 8 & 255)) + (16 << (p258 & 255));
    return (1013904223 + (30407 + (f514(v362, v363, v362, v363, v362) ^ f514(v363, v362, v363, v362, v363))) * 1664525) % 4294967296;
  }
  const vVUndefined20 = vUndefined;
  const vVVVV16 = vVVV16;
  function f39(p259, p260, p261, p262, p263) {
    vVVUndefined116(vVVVVUndefined212, p259, p260, p261, p262, p263);
    const vF27 = function (p264, p265, p266, p267, p268, p269) {
      v60(vVVVVUndefined212, p264, p265, p266, p267, p268, p269);
      const vCn = f44(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4], v2773[5]);
      f62(v2773[0], v2773[1], v2773[2]);
      return ~(vCn & 40473) & (vCn | 40473);
    }(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4], v2773[0]);
    f74(v2773[1], v2773[2]);
    return (vF27 | 15274) & ~(vF27 & 15274);
  }
  const v364 = 13;
  function f40(p270) {
    return f6(p270, 8815, 46545, 6721);
  }
  function f41(p271, p272, p273, p274) {
    const v365 = p271 ^ 11341;
    const v366 = (8 << (p272 & 255)) + (0 << (p272 >> 8 & 255)) + (24 << (p272 >> 24 & 255)) + (16 << (p272 >> 16 & 255));
    const v367 = ~(p273 & 42753) & p273 | ~(p273 & 42753) & 42753;
    const v368 = (1 + (p274 + 26594) * 22695477) % 4294967296;
    const vF28 = function (p275, p276, p277, p278) {
      const v369 = ~(p275 & 3502) & p275 | ~(p275 & 3502) & 3502;
      const v370 = (p276 | 11949) & ~(p276 & 11949);
      const v371 = (p277 + 45649) % 65327;
      const vF30 = function (p279, p280, p281, p282, p283) {
        const v372 = ((p279 + 27110) * 1103515245 + 12345) % 2147483648;
        const v373 = (p281 | 4652) & ~(p281 & 4652);
        const v374 = (2147483587 + (p282 + 1418) * 2147483629) % 2147483647;
        const v375 = ~(p283 & 30230) & p283 | ~(p283 & 30230) & 30230;
        const vBn = f47(v372, ~(p280 & 51103) & p280 | ~(p280 & 51103) & 51103);
        const vF32 = function (p284, p285, p286, p287) {
          const v376 = (24 << (p284 >> 24 & 255)) + (8 << (p284 >> 8 & 255)) + (16 << (p284 >> 16 & 255)) + (0 << (p284 & 255));
          const v377 = (0 << (p285 >> 16 & 255)) + (8 << (p285 & 255)) + (24 << (p285 >> 8 & 255)) + (16 << (p285 >> 24 & 255));
          const v378 = p286 ^ 38036;
          const vUp = f497(v376, v377, v378, (2531011 + (p287 + 25725) * 214013) % 4294967296, v376);
          const vVC = f513(v377, v378);
          return (59088 + (vUp ^ vVC)) % 65483;
        }(v373, v374, v375, v372);
        return (0 << ((vBn ^ vF32) & 255)) + (8 << ((vBn ^ vF32) >> 8 & 255)) + (24 << ((vBn ^ vF32) >> 16 & 255)) + (16 << ((vBn ^ vF32) >> 24 & 255));
      }(v369, v370, v371, ~(p278 & 29730) & 29730 | ~(p278 & 29730) & p278, v369);
      f47(v370, v371);
      return ~(vF30 & 5110) & (vF30 | 5110);
    }(v365, v366, v367, v368);
    f55(v365, v366, v367, v368);
    return ~(vF28 & 57608) & 57608 | ~(vF28 & 57608) & vF28;
  }
  function f42(p288, p289, p290, p291, p292) {
    const v379 = (24 << (p288 >> 24 & 255)) + (0 << (p288 >> 16 & 255)) + (8 << (p288 & 255)) + (16 << (p288 >> 8 & 255));
    const v380 = (p289 + 39032) % 65358;
    const v381 = p290 ^ 63174;
    const v382 = ~(p291 & 41589) & 41589 | ~(p291 & 41589) & p291;
    const v383 = ~(p292 & 51215) & 51215 | ~(p292 & 51215) & p292;
    const vF41 = f41(v379, v380, v381, v382);
    f7(v383, v379, v380, v381, v382, v383);
    return vF41 ^ 41621;
  }
  function f43(p293, p294, p295) {
    const v384 = ~(p293 & 26378) & p293 | ~(p293 & 26378) & 26378;
    const v385 = (24 << (p294 >> 8 & 255)) + (16 << (p294 >> 24 & 255)) + (0 << (p294 >> 16 & 255)) + (8 << (p294 & 255));
    const v386 = (16 << (p295 & 255)) + (0 << (p295 >> 24 & 255)) + (8 << (p295 >> 16 & 255)) + (24 << (p295 >> 8 & 255));
    const vHh = f72(v384, v385, v386, v384, v385, v386);
    f47(v384, v385);
    return ~(vHh & 20894) & 20894 | ~(vHh & 20894) & vHh;
  }
  function f44(p296, p297, p298, p299, p300, p301) {
    vVUndefined17(vVVVVUndefined212, p296, p297, p298, p299, p300, p301);
    const vMp = f489(v2773[0], v2773[1], v2773[2], v2773[3]);
    f62(v2773[4], v2773[5], v2773[0]);
    return vMp ^ 48352;
  }
  ᐃⵠⵠ = {
    ⲆⲆᐃΔⵠⵠⲆ: () => new Promise((p302, p303) => {
      vWindow.grecaptcha.ready(function () {
        vWindow.grecaptcha.execute("6LdvBaEjAAAAAIKTgdecsZBehRxhVZOIDzG9MvXg", {
          action: "validate_recaptcha"
        }).then(function (p304) {
          p302(p304);
        }).catch(p305 => {
          if (v2262) {
            p302(0);
          } else {
            console.log(vUndefined);
            p303(p305);
          }
        });
      });
    }),
    ⵠΔΔⵠⵠⵠⵠⵠΔ: function (p306) {
      vWindow.open(p306, "_blank").focus();
    },
    ΔᐃⲆΔΔΔⵠ: function (p307) {
      vWindow.open(p307, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes");
    },
    ΔΔΔⲆⵠᐃⲆ: function (p308, p309) {
      for (var v387 in p308) {
        if (p308[v387] != p309[v387]) {
          return vVVVV14;
        }
      }
      return vVV162;
    },
    ΔΔⵠᐃⵠⵠⲆᐃⵠ: function (p310, p311) {
      if (p310.length != p311.length) {
        return v14;
      }
      for (var v388 = 0; v388 < p310.length; v388++) {
        if (typeof p310 == "object") {
          if (!this.ΔΔΔⲆⵠᐃⲆ(p310[v388], p311[v388])) {
            return vV14;
          }
        } else if (p310[v388] != p311[v388]) {
          return false;
        }
      }
      return true;
    },
    ᐃⲆᐃⵠΔᐃᐃ: function (p312, p313) {
      p313.x = p312.x;
      p313.y = p312.y;
    },
    ⲆⲆᐃⵠⵠⲆⵠ: function (p314, p315) {
      return {
        x: p314.x - p315.x,
        y: p314.y - p315.y
      };
    },
    ΔΔᐃⲆⵠⲆⵠⵠΔ: function (p316, p317) {
      p316.x *= p317;
      p316.y *= p317;
    },
    ⵠΔⲆⵠⵠΔΔ: function (p318, p319) {
      return p318.x * p319.x + p318.y * p319.y;
    },
    ᐃΔⵠᐃᐃΔⲆ: function (p320) {
      return Math.sqrt(p320.x * p320.x + p320.y * p320.y);
    },
    sign: function (p321) {
      if (p321 < 0) {
        return -1;
      } else {
        return 1;
      }
    },
    ΔⵠΔᐃⵠⲆΔ: function (p322, p323) {
      return p322.x * p323.y - p322.y * p323.x;
    },
    ⵠᐃⵠᐃⲆⲆⵠ: function (p324, p325, p326, p327) {
      var v389 = p327 - p325;
      var v390 = p326 - p324;
      return Math.atan2(v389, v390);
    },
    ΔᐃⲆⵠᐃⲆⵠ: function (p328, p329) {
      return Math.asin(this.ⵠΔⲆⵠⵠΔΔ(p328, p329) / (this.ᐃΔⵠᐃᐃΔⲆ(p328) * this.ᐃΔⵠᐃᐃΔⲆ(p329))) * this.sign(this.ΔⵠΔᐃⵠⲆΔ(p328, p329));
    },
    ⵠⲆⵠⲆⲆⵠΔ: function (p330) {
      ΔⵠᐃᐃΔⲆⲆ = location.href;
      p330 = p330.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v391 = new RegExp("[\\?&]" + p330 + "=([^&#]*)").exec(ΔⵠᐃᐃΔⲆⲆ);
      if (v391 === null) {
        return null;
      } else {
        return v391[1];
      }
    },
    ⲆⵠΔⵠᐃⵠΔ: function (p331, p332) {
      var v392 = Math.PI * 2;
      p332 = (p332 % v392 + v392) % v392;
      if (Math.abs(p331 - p332) > Math.PI) {
        if (p331 > p332) {
          return p332 + v392;
        } else {
          return p332 - v392;
        }
      } else {
        return p332;
      }
    },
    ᐃⵠᐃⲆⵠΔⲆ: function (p333, p334) {
      return this.ΔᐃⲆⵠᐃⲆⵠ({
        x: 1,
        y: 0
      }, this.ⲆⲆᐃⵠⵠⲆⵠ(p333, p334));
    },
    Ⲇᐃᐃᐃ: function (p335, p336) {
      return Math.sqrt((p336.x - p335.x) * (p336.x - p335.x) + (p336.y - p335.y) * (p336.y - p335.y));
    },
    ⵠⵠⵠᐃᐃᐃⲆ: function (p337, p338) {
      return {
        x: Math.sin(p338) * p337,
        y: Math.cos(p338) * p337
      };
    },
    ΔⲆᐃⵠⵠⲆᐃ: function (p339, p340) {
      p339.x += p340.x;
      p339.y += p340.y;
    },
    ΔⲆⵠⵠᐃⵠᐃ: function (p341, p342) {
      p341.x -= p342.x;
      p341.y -= p342.y;
    },
    ⲆⲆⲆᐃⵠᐃᐃᐃΔ: function (p343, p344, p345) {
      p343.x += p344;
      p343.y += p345;
    },
    ⲆᐃᐃⵠⵠⲆⲆᐃΔ: function (p346, p347, p348) {
      return {
        x: p346.x + p347,
        y: p346.y + p348
      };
    },
    ᐃⲆᐃⵠⵠ: function (p349, p350, p351) {
      p349.x += Math.sin(p351) * p350;
      p349.y += Math.cos(p351) * p350;
    },
    ⲆΔΔΔᐃⲆⲆ: function (p352, p353) {
      return Math.floor((p352 - p353) / 2);
    },
    ⲆⵠⵠᐃΔᐃⲆ: function (p354, p355) {
      return {
        x: (p354.x + p355.x) / 2,
        y: (p354.y + p355.y) / 2
      };
    },
    ⲆᐃⲆⵠΔᐃᐃ: function () {
      if (Math.random() > 0.5) {
        return 1;
      } else {
        return -1;
      }
    },
    ᐃΔⲆⲆΔΔⲆΔⲆ: function (p356, p357, p358) {
      var v393 = this.ⲆᐃⲆⵠΔᐃᐃ();
      var v394 = this.ⲆᐃⲆⵠΔᐃᐃ();
      var v395 = Math.random() * Math.PI / 2;
      return {
        x: Math.floor(p356 + Math.sin(v395) * v393 * p358),
        y: Math.floor(p357 + Math.cos(v395) * v394 * p358)
      };
    },
    ⲆΔΔⲆΔᐃᐃᐃΔ: function (p359, p360, p361, p362) {
      this.x = p359;
      this.y = p360;
      this.w = p361;
      this.ⵠᐃⵠ = p362;
    },
    ΔΔⲆⲆⵠᐃⵠⲆΔ: function (p363) {
      ᐃⵠΔᐃ = [];
      ᐃⵠΔᐃ.push.apply(ᐃⵠΔᐃ, p363);
      var v396 = [];
      while (ᐃⵠΔᐃ.length > 0) {
        var v397 = Math.floor(Math.random() * ᐃⵠΔᐃ.length);
        v396.push(ᐃⵠΔᐃ[v397]);
        ᐃⵠΔᐃ.splice(v397, 1);
      }
      return v396;
    },
    ΔⲆᐃΔⲆⲆⲆ: function (p364) {
      if (p364 >= 20000) {
        p364 = (p364 - 20000) * 1000;
      } else if (p364 >= 10000) {
        p364 = (p364 - 10000) * 100;
      }
      return p364;
    },
    ΔᐃΔⵠⵠΔΔ: function (p365) {
      if (typeof p365 != "number") {
        return "0";
      }
      if (p365 >= 10000) {
        var v398 = Math.floor(Math.log10(p365)) - 2;
        var v399 = Math.max(0, 3 - v398);
        var v400 = Math.floor(p365 / 1000).toString();
        if (v399) {
          for (var v401 = (v400 += "." + (p365 % 1000 / 1000).toString().substring(2).substring(0, v399)).length - 1, v402 = 0; v401 > 0 && v400[v401] == "0"; v401--) {
            v402++;
          }
          if ((v400 = v400.substring(0, v400.length - v402))[v400.length - 1] == ".") {
            v400 = v400.substring(0, v400.length - 1);
          }
        }
        return v400 += "k";
      }
      return p365.toString();
    },
    ᐃΔⵠΔⵠΔⲆ: function (p366) {
      return p366 * (2 - p366);
    },
    ᐃᐃⵠΔΔⲆⵠ: function (p367) {
      return --p367 * p367 * p367 + 1;
    },
    ⵠⵠⲆᐃΔ: function (p368) {
      if (p368 < 0.5) {
        return p368 * 2 * p368;
      } else {
        return (4 - p368 * 2) * p368 - 1;
      }
    },
    ⵠⲆⲆⵠⵠⲆⵠ: function (p369) {
      if (p369 < 0.5) {
        return p369 * 4 * p369 * p369;
      } else {
        return (p369 - 1) * (p369 * 2 - 2) * (p369 * 2 - 2) + 1;
      }
    },
    ΔᐃᐃΔΔΔΔⵠⲆ: function (p370) {
      if (p370 < 0.5) {
        return p370 * 8 * p370 * p370 * p370;
      } else {
        return 1 - --p370 * 8 * p370 * p370 * p370;
      }
    },
    ᐃⲆⵠⲆⵠⲆⲆ: function (p371) {
      return 1 - --p371 * p371 * p371 * p371;
    },
    ΔⵠⲆᐃᐃⵠⵠ: function (p372) {
      return 1 + --p372 * p372 * p372 * p372 * p372;
    },
    ⲆΔⵠᐃ: function (p373, p374, p375, p376, p377, p378) {
      this.ᐃΔⲆ = p373;
      this.ⲆⵠⲆ = p374;
      this.max = p375;
      this.min = p376;
      this.ⵠΔⲆΔⲆᐃᐃ = p377;
      this.ⵠᐃΔΔⵠᐃᐃ = p378;
      this.ᐃΔⵠᐃⵠ = 0;
      this.ⲆᐃⲆ = function () {
        if (this.ᐃΔⲆ) {
          if ((v403 = this.ⲆⵠⲆ + v3026 * this.ⵠΔⲆΔⲆᐃᐃ) > this.max) {
            this.ⲆⵠⲆ = this.max;
            this.ᐃΔⲆ = vV142;
            return true;
          }
          this.ⲆⵠⲆ = v403;
        } else {
          var v403;
          if ((v403 = this.ⲆⵠⲆ - v3026 * this.ⵠᐃΔΔⵠᐃᐃ) < this.min) {
            this.ⲆⵠⲆ = this.min;
            this.ᐃΔⲆ = true;
          } else {
            this.ⲆⵠⲆ = v403;
          }
        }
      };
      return v14;
    },
    ᐃΔⲆⲆᐃ: function (p379, p380, p381, p382, p383, p384) {
      this.ΔⵠⲆⵠⵠ = p379;
      this.ⲆⲆΔΔⵠ = p380;
      this.ᐃΔᐃⲆΔ = p381;
      this.ⵠⵠⵠᐃⲆ = p382;
      this.x = p383;
      this.ΔⵠΔΔⲆ = p384;
      this.ΔⲆⵠᐃⵠⵠᐃ = function () {
        this.x = this.ⵠⵠᐃΔᐃⵠⲆⵠΔ;
        this.ⲆⲆΔΔⵠ = 0;
      };
      this.ᐃᐃⵠⵠⲆ = function (p385) {
        if (p385 !== this.ΔⵠΔΔⲆ) {
          this.ΔⵠΔΔⲆ = p385;
          this.ⵠⵠⵠᐃⲆ = this.x;
          this.ⲆⲆΔΔⵠ = 0;
        }
        if (this.ΔⵠΔΔⲆ !== this.x) {
          this.ⲆⲆΔΔⵠ += v3026;
          if (this.ⲆⲆΔΔⵠ > this.ᐃΔᐃⲆΔ) {
            this.x = this.ΔⵠΔΔⲆ;
          } else {
            var v404 = this.ΔⵠⲆⵠⵠ(this.ⲆⲆΔΔⵠ / this.ᐃΔᐃⲆΔ);
            this.x = this.ⵠⵠⵠᐃⲆ + (this.ΔⵠΔΔⲆ - this.ⵠⵠⵠᐃⲆ) * v404;
          }
        }
      };
    },
    ⲆⵠΔΔΔΔᐃ: function (p386, p387, p388, p389, p390, p391, p392, p393, p394) {
      this.ΔⵠⲆⵠⵠ = p386;
      this.ⲆⲆΔΔⵠ = p387;
      this.ᐃΔᐃⲆΔ = p388;
      this.ⵠⵠⵠᐃⲆ = p389;
      this.ⲆΔΔΔᐃ = p390;
      this.x = p391;
      this.y = p392;
      this.ΔⵠΔΔⲆ = p393;
      this.ᐃΔΔᐃⵠⵠᐃ = p394;
      this.ᐃᐃⵠⵠⲆ = function (p395) {
        if (p395.x != this.ΔⵠΔΔⲆ || p395.y != this.ᐃΔΔᐃⵠⵠᐃ) {
          this.ΔⵠΔΔⲆ = p395.x;
          this.ᐃΔΔᐃⵠⵠᐃ = p395.y;
          this.ⵠⵠⵠᐃⲆ = this.x;
          this.ⲆΔΔΔᐃ = this.y;
          this.ⲆⲆΔΔⵠ = 0;
        }
        if (this.ΔⵠΔΔⲆ != this.x || this.ᐃΔΔᐃⵠⵠᐃ != this.y) {
          this.ⲆⲆΔΔⵠ += v3026;
          if (this.ⲆⲆΔΔⵠ > this.ᐃΔᐃⲆΔ) {
            this.x = this.ΔⵠΔΔⲆ;
            this.y = this.ᐃΔΔᐃⵠⵠᐃ;
          } else {
            var v405 = this.ΔⵠⲆⵠⵠ(this.ⲆⲆΔΔⵠ / this.ᐃΔᐃⲆΔ);
            this.x = this.ⵠⵠⵠᐃⲆ + (this.ΔⵠΔΔⲆ - this.ⵠⵠⵠᐃⲆ) * v405;
            this.y = this.ⲆΔΔΔᐃ + (this.ᐃΔΔᐃⵠⵠᐃ - this.ⲆΔΔΔᐃ) * v405;
          }
        }
      };
    },
    ᐃᐃⵠⵠΔΔⵠ: function (p396) {
      var v406 = "";
      for (var v407 = 0; v407 < p396; v407++) {
        v406 += String.fromCharCode(48 + Math.floor(Math.random() * 74));
      }
      return v406;
    },
    ⲆⲆᐃᐃⲆⲆᐃ: function (p397, p398) {
      p398 ||= location.href;
      p397 = p397.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v408 = new RegExp("[\\?&]" + p397 + "=([^&#]*)").exec(p398);
      if (v408 == null) {
        return null;
      } else {
        return v408[1];
      }
    },
    ⵠΔⵠⲆ: function (p399) {
      let v409 = "";
      const v410 = p399.length;
      for (let v411 = 0; v411 < v410; v411++) {
        v409 += String.fromCharCode(p399[v411]);
      }
      return v409;
    },
    ᐃΔⲆⲆᐃⵠΔ: function (p400, p401) {
      return p400.x >= p401.x && p400.x <= p401.x + p401.w && p400.y >= p401.y && p400.y <= p401.y + p401.ⵠᐃⵠ && vV162;
    },
    ᐃᐃⲆⵠᐃⵠΔ: function (p402, p403, p404, p405, p406, p407, p408, p409) {
      if (Math.max(p402, p406) < Math.min(p403, p407) && Math.max(p404, p408) < Math.min(p405, p409)) {
        return 1;
      } else {
        return 0;
      }
    },
    ⵠΔᐃΔⲆ: function (p410, p411, p412) {
      return (1 - p412) * p410 + p412 * p411;
    },
    ⵠᐃⲆᐃΔⲆᐃ: function (p413) {
      return p413.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
    }
  };
  const vVVVV142 = vVVV14;
  const v412 = 19;
  Math.sign = Math.sign || function (p414) {
    if (p414 === 0) {
      return 0;
    } else if (p414 > 0) {
      return 1;
    } else {
      return -1;
    }
  };
  function f45(p415) {
    return vWindow.String.fromCharCode(p415);
  }
  (function () {
    const v413 = {
      ΔⲆⵠΔⵠⵠⲆ: 9084347,
      ⲆᐃⲆΔᐃΔⲆ: 2062583,
      ᐃⵠΔⵠᐃⵠⲆⲆᐃ: 14338965,
      ᐃᐃᐃᐃⵠΔⲆⵠⲆ: 10892138
    };
  })();
  const v414 = 14;
  const v415 = 256;
  const vVVVVV16 = vVVVV16;
  Math.log10 = Math.log10 || function (p416) {
    return Math.log(p416) / Math.ⵠᐃⲆᐃⲆⲆᐃⵠᐃ;
  };
  const v416 = 17;
  const v417 = 20;
  const v418 = 15;
  function f46(p417, p418, p419, p420, p421) {
    const v419 = (p417 | 60901) & ~(p417 & 60901);
    const v420 = ~(p419 & 25643) & (p419 | 25643);
    const v421 = (2147483587 + (35816 + p420) * 2147483629) % 2147483647;
    const v422 = (p421 | 27747) & ~(p421 & 27747);
    const vVC2 = f513(v419, ((p418 + 52725) * 1103515245 + 12345) % 2147483648);
    f5(v420, v421, v422, v419);
    return ~(vVC2 & 47176) & vVC2 | ~(vVC2 & 47176) & 47176;
  }
  const v423 = 255;
  function f47(p422, p423) {
    return ((33583 + p422) * 22695477 + 1) % 4294967296 ^ 37896;
  }
  (function (p424) {
    var vVVV142 = vVV142;
    if (typeof ᐃᐃᐃⵠᐃᐃᐃ == "function" && ᐃᐃᐃⵠᐃᐃᐃ.ⲆᐃΔⵠᐃⵠⲆΔᐃ) {
      ᐃᐃᐃⵠᐃᐃᐃ(p424);
      vVVV142 = vVV16;
    }
    if (typeof ΔΔᐃⲆΔΔⲆ === "object") {
      ᐃⲆᐃⵠⲆΔᐃⵠΔ.exports = p424();
      vVVV142 = true;
    }
    if (!vVVV142) {
      var v424 = vWindow.ᐃⵠΔΔ;
      var v425 = vWindow.ᐃⵠΔΔ = p424();
      v425.ⵠΔⲆΔᐃΔΔᐃᐃ = function () {
        vWindow.ᐃⵠΔΔ = v424;
        return v425;
      };
    }
  })(function () {
    function e() {
      for (var v426 = 0, v427 = {}; v426 < arguments.length; v426++) {
        var v428 = arguments[v426];
        for (var v429 in v428) {
          v427[v429] = v428[v429];
        }
      }
      return v427;
    }
    return function f49(p425) {
      function f50(p426, p427, p428) {
        var v430;
        if (typeof document != "undefined") {
          if (arguments.length > 1) {
            if (typeof (p428 = e({
              path: "/"
            }, f50.ᐃⵠᐃᐃᐃⵠᐃ, p428)).expires == "number") {
              var v431 = new Date();
              v431.setMilliseconds(v431.getMilliseconds() + p428.expires * 86400000);
              p428.expires = v431;
            }
            try {
              v430 = JSON.stringify(p427);
              if (/^[\{\[]/.test(v430)) {
                p427 = v430;
              }
            } catch (e) {}
            p427 = p425.write ? p425.write(p427, p426) : encodeURIComponent(String(p427)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
            p426 = (p426 = (p426 = encodeURIComponent(String(p426))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
            return document.cookie = [p426, "=", p427, p428.expires ? "; expires=" + p428.expires.toUTCString() : "", p428.path ? "; path=" + p428.path : "", p428.domain ? "; domain=" + p428.domain : "", p428.ΔⲆᐃᐃΔⵠⵠⵠΔ ? "; secure" : ""].join("");
          }
          if (!p426) {
            v430 = {};
          }
          for (var v432 = document.cookie ? document.cookie.split("; ") : [], v433 = /(%[0-9A-Z]{2})+/g, v434 = 0; v434 < v432.length; v434++) {
            var v435 = v432[v434].split("=");
            var v436 = v435.slice(1).join("=");
            if (v436.charAt(0) === "\"") {
              v436 = v436.slice(1, -1);
            }
            try {
              var v437 = v435[0].replace(v433, decodeURIComponent);
              v436 = p425.read ? p425.read(v436, v437) : p425(v436, v437) || v436.replace(v433, decodeURIComponent);
              if (this.json) {
                try {
                  v436 = JSON.parse(v436);
                } catch (e) {}
              }
              if (p426 === v437) {
                v430 = v436;
                break;
              }
              if (!p426) {
                v430[v437] = v436;
              }
            } catch (e) {}
          }
          return v430;
        }
      }
      f50.set = f50;
      f50.get = function (p429) {
        return f50.call(f50, p429);
      };
      f50.ⲆⲆⲆᐃⵠⲆⲆⵠᐃ = function () {
        return f50.apply({
          json: vVVVVV16
        }, [].slice.call(arguments));
      };
      f50.ᐃⵠᐃᐃᐃⵠᐃ = {};
      f50.remove = function (p430, p431) {
        f50(p430, "", e(p431, {
          expires: -1
        }));
      };
      f50.ⲆⲆⵠⲆⵠΔⲆⲆⲆ = f49;
      return f50;
    }(function () {});
  });
  const vVVV162 = vVV16;
  var v438 = document.getElementById("game_canvas");
  var v439 = v438.getContext("2d");
  const v440 = 11;
  var v441 = v438.width;
  var v442 = v438.height;
  const v443 = 20;
  const v444 = 0;
  var v445 = v438.width / 2;
  const v446 = 14;
  const v447 = 19;
  const v448 = 100;
  var v449 = v438.height / 2;
  const v450 = 16;
  var v451 = {
    x: v445,
    y: v449
  };
  const v452 = 14;
  const v453 = 20;
  var v454 = 1;
  function f51(p432) {
    if (p432 > 0) {
      return p432 * p432;
    } else {
      return p432;
    }
  }
  function f52(p433) {
    return vWindow.String.fromCharCode(p433);
  }
  var v455 = 1;
  const v456 = 20;
  var v457 = -1;
  var v458 = "J" + v492;
  var v459 = "S" + v506;
  const v460 = 13;
  const v461 = 17;
  var vVWindow = vWindow;
  const vVUndefined21 = vUndefined;
  var v462;
  const v463 = 18;
  var v464;
  var v465 = (v475 = "O") + "N";
  const v466 = 4;
  const v467 = 17;
  const v468 = 15;
  const vVVV143 = vVV14;
  var vVVWindow = vVWindow;
  const v469 = 100;
  const v470 = 1;
  var v471;
  ;
  const v472 = 255;
  const v473 = 10;
  v459 = "N";
  var v474 = "J";
  var v475 = "O" + v492;
  var vVVVWindow = vVVWindow;
  const v476 = 12;
  const v477 = 13;
  const v478 = 256;
  const v479 = 255;
  var v480;
  var vVVVVWindow = vVVVWindow;
  const v481 = 4;
  v465 = "N" + undefined;
  var vVVVVVWindow = vVVVVWindow;
  const v482 = 15;
  var v483;
  const v484 = 18;
  var v485;
  const v486 = 12;
  const v487 = 8;
  const v488 = 0;
  var vVVVVVVWindow = vVVVVVWindow;
  const v489 = 18;
  var v490;
  const vVVVUndefined117 = vVVUndefined117;
  const v491 = 14;
  const vVVVVV162 = vVVVV16;
  var v492;
  var vVVVVVVVWindow = vVVVVVVWindow;
  const v493 = 1;
  const v494 = 19;
  var v495;
  const v496 = 19;
  const v497 = 20;
  const v498 = 255;
  const vVVVVV142 = vVVVV142;
  var vVVVVVVVVWindow = vVVVVVVVWindow;
  v474 = "O";
  const v499 = 14;
  const v500 = 16;
  const v501 = 11;
  var v502;
  const vVVV1422 = vVV142;
  var v503;
  var v504 = vVVVVVVVVWindow = vVVVVVVVWindow;
  var vV504 = v504;
  const v505 = 10;
  var v506 = "J" + (v502 = "S");
  v438.oncontextmenu = function () {
    return false;
  };
  const v507 = 17;
  const v508 = 4;
  function f53(p434) {
    var v509 = new Image();
    v509.src = p434.toDataURL("image/png");
    v509.width = p434.width;
    v509.height = p434.height;
    v509.ⵠⲆⵠᐃⲆⲆᐃ = 1;
    return v509;
  }
  v458 = "J";
  const v510 = 10;
  const v511 = 17;
  v475 = v465;
  v465 = v492;
  const v512 = 100;
  const vVVVV1422 = vVVV1422;
  const v513 = 13;
  const vVVVVV1422 = vVVVV142;
  v492 = v506;
  const v514 = 15;
  v475 = v506;
  const v515 = 14;
  const v516 = 13;
  v480 = v483 = v506 + (v474 += v458 = v459);
  v459 = v474 + v458;
  const vVVUndefined20 = vVUndefined20;
  v485 = v462 = v464 = v506 + v474;
  const v517 = 20;
  v475 = v506 + v474;
  const v518 = 12;
  v490 = v464;
  v465 = v506 + v474;
  v495 = v471 = v462;
  v474 = v492 = v506;
  v502 = v464;
  const v519 = 14;
  v503 = v462;
  v458 = v475;
  const v520 = 17;
  const v521 = 19;
  var v522 = vWindow.devicePixelRatio || 1;
  var v523 = v439.ΔᐃⵠΔⲆΔⵠᐃᐃ || v439.ⵠᐃΔΔⲆΔⵠΔⵠ || v439.ΔⲆΔᐃⲆᐃᐃⵠᐃ || v439.ΔⵠⵠᐃΔΔⵠⵠⲆ || v439.ⵠᐃᐃΔⲆⵠⵠⵠΔ || 1;
  const v524 = 12;
  function f54() {
    if (v438.width != vWindow.innerWidth) {
      v438.width = vWindow.innerWidth;
      v441 = v438.width;
      v445 = v438.width / 2;
    }
    if (vWindow.innerHeight != v438.height) {
      v438.height = vWindow.innerHeight;
      v442 = v438.height;
      v449 = v438.height / 2;
    }
    v451 = {
      x: v445,
      y: v449
    };
    var v525 = v438.width;
    var v526 = v438.height;
    v455 = v457 === -1 ? v522 / v523 : v457;
    v438.width = v525 * v455;
    v438.height = v526 * v455;
    v438.style.width = v525 + "px";
    v438.style.height = v526 + "px";
    v439.scale(v455, v455);
    if (v2813) {
      v2813.ΔⲆΔ.ⲆⵠⵠⲆⲆⵠⵠ = v525;
      v2813.ΔⲆΔ.ⵠᐃⵠⲆΔⲆΔ = v526;
    }
    if (v3027.ⵠⲆⵠᐃᐃ) {
      v3027.ⲆᐃⲆ();
    } else if (v2811.ⵠⲆⵠᐃᐃ) {
      v2811.ⲆᐃⲆ();
    } else if (v2991.ⵠⲆⵠᐃᐃ) {
      v2991.ⲆᐃⲆ();
    } else if (v2814.ⵠⲆⵠᐃᐃ) {
      v2814.ⲆᐃⲆ();
    }
  }
  var v527 = document.getElementById("game_body");
  v527.ondragstart = function () {
    return vVVVV1422;
  };
  v527.ondrop = function () {
    return false;
  };
  v527.onresize = f54;
  const v528 = 0;
  (function () {
    var v529 = 0;
    for (var v530 = ["ms", "moz", "webkit", "o"], v531 = 0; v531 < v530.length && !vWindow.requestAnimationFrame; ++v531) {
      vWindow.requestAnimationFrame = vWindow[v530[v531] + "RequestAnimationFrame"];
      vWindow.cancelAnimationFrame = vWindow[v530[v531] + "CancelAnimationFrame"] || vWindow[v530[v531] + "CancelRequestAnimationFrame"];
    }
    vWindow.requestAnimationFrame ||= function (p435, p436) {
      var v532 = new Date().getTime();
      var v533 = Math.max(0, 16 - (v532 - v529));
      var v534 = vWindow.setTimeout(function () {
        p435(v532 + v533);
      }, v533);
      v529 = v532 + v533;
      return v534;
    };
    vWindow.cancelAnimationFrame ||= function (p437) {
      clearTimeout(p437);
    };
  })();
  const v535 = 255;
  const v536 = 1;
  function f55(p438, p439, p440, p441) {
    const v537 = (8 << (p438 >> 24 & 255)) + (16 << (p438 >> 16 & 255)) + (0 << (p438 & 255)) + (24 << (p438 >> 8 & 255));
    const v538 = (24 << (p439 >> 16 & 255)) + (8 << (p439 >> 8 & 255)) + (0 << (p439 & 255)) + (16 << (p439 >> 24 & 255));
    const v539 = p440 ^ 17368;
    const v540 = ~(p441 & 45246) & (p441 | 45246);
    return (1 + (30911 + (f67(v537, v538, v539, v540, v537) ^ f514(v538, v539, v540, v537, v538))) * 22695477) % 4294967296;
  }
  function f56(p442, p443, p444, p445, p446) {
    const v541 = ((40904 + p442) * 22695477 + 1) % 4294967296;
    const v542 = p443 ^ 62092;
    const vCC2 = f517(v541, v542, ((19539 + p444) * 22695477 + 1) % 4294967296, (8 << (p445 & 255)) + (0 << (p445 >> 16 & 255)) + (16 << (p445 >> 24 & 255)) + (24 << (p445 >> 8 & 255)), ~(p446 & 2209) & 2209 | ~(p446 & 2209) & p446);
    (function (p447, p448) {
      const v543 = (1 + (56301 + p447) * 22695477) % 4294967296;
      const v544 = p448 ^ 30544;
      const vUp2 = f497(v543, v544, v543, v544, v543);
      const vF33 = function (p449, p450) {
        const v545 = ((p449 + 9633) * 1664525 + 1013904223) % 4294967296;
        const v546 = p450 ^ 63394;
        const vF55 = f55(v545, v546, v545, v546);
        f517(v545, v546, v545, v546, v545);
        return (vF55 | 11108) & ~(vF55 & 11108);
      }(v544, v543);
    })(v541, v542);
    return ~(vCC2 & 47406) & 47406 | ~(vCC2 & 47406) & vCC2;
  }
  const vF34 = function () {
    let v547 = 0;
    let v548 = 0;
    let v549 = 0;
    const v550 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 116, 97, 99, 107]);
    const v551 = ᐃⵠⵠ.ⵠΔⵠⲆ([67, 97, 110, 118, 97, 115, 82, 101, 110, 100, 101, 114, 105, 110, 103, 67, 111, 110, 116, 101, 120, 116, 50, 68]);
    const v552 = ᐃⵠⵠ.ⵠΔⵠⲆ([112, 114, 111, 116, 111, 116, 121, 112, 101]);
    const v553 = ᐃⵠⵠ.ⵠΔⵠⲆ([100, 114, 97, 119, 73, 109, 97, 103, 101]);
    ᐃⵠⵠ.ⵠΔⵠⲆ([103, 108, 111, 98, 97, 108, 65, 108, 112, 104, 97]);
    const v554 = ᐃⵠⵠ.ⵠΔⵠⲆ([117, 115, 101, 114, 115, 99, 114, 105, 112, 116]);
    const v555 = ᐃⵠⵠ.ⵠΔⵠⲆ([105, 110, 100, 101, 120, 79, 102]);
    const v556 = ᐃⵠⵠ.ⵠΔⵠⲆ([77, 97, 116, 104]);
    const v557 = ᐃⵠⵠ.ⵠΔⵠⲆ([103, 101, 116]);
    const v558 = ᐃⵠⵠ.ⵠΔⵠⲆ([79, 98, 106, 101, 99, 116]);
    const v559 = ᐃⵠⵠ.ⵠΔⵠⲆ([104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121]);
    ᐃⵠⵠ.ⵠΔⵠⲆ([99, 101, 105, 108]);
    const v560 = ᐃⵠⵠ.ⵠΔⵠⲆ([102, 108, 111, 111, 114]);
    const v561 = ᐃⵠⵠ.ⵠΔⵠⲆ([87, 101, 98, 83, 111, 99, 107, 101, 116]);
    const v562 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 110, 100]);
    const v563 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 105, 103, 110]);
    const v564 = ᐃⵠⵠ.ⵠΔⵠⲆ([103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114]);
    const v565 = ᐃⵠⵠ.ⵠΔⵠⲆ([102, 105, 108, 108, 82, 101, 99, 116]);
    const v566 = ᐃⵠⵠ.ⵠΔⵠⲆ([103, 117, 105, 102, 121]);
    const v567 = ᐃⵠⵠ.ⵠΔⵠⲆ([101, 118, 97, 108]);
    const v568 = ᐃⵠⵠ.ⵠΔⵠⲆ([111, 112, 116, 105, 111, 110, 115]);
    const v569 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 88, 114, 97, 121]);
    const v570 = ᐃⵠⵠ.ⵠΔⵠⲆ([10]);
    const v571 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 67, 111, 108, 111, 114, 101, 100, 83, 112, 105, 107, 101, 115]);
    const v572 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 83, 112, 105, 107, 101]);
    const v573 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 70, 101, 101, 100]);
    const v574 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 67, 114, 97, 102, 116]);
    const v575 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 82, 101, 99, 121, 99, 108, 101]);
    const v576 = ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 84, 111, 116, 101, 109]);
    ᐃⵠⵠ.ⵠΔⵠⲆ([115, 101, 116, 116, 105, 110, 103, 115, 46, 69, 120, 116, 114, 97, 99, 116, 111, 114, 73, 110, 102, 111]);
    const v577 = ᐃⵠⵠ.ⵠΔⵠⲆ([83, 97, 110, 100, 115, 116, 111, 114, 109, 73, 109, 97, 103, 101]);
    const v578 = ᐃⵠⵠ.ⵠΔⵠⲆ([116, 111, 83, 116, 114, 105, 110, 103]);
    const v579 = ᐃⵠⵠ.ⵠΔⵠⲆ([66, 108, 105, 122, 122, 97, 114, 100, 73, 109, 97, 103, 101]);
    const v580 = ᐃⵠⵠ.ⵠΔⵠⲆ([73, 68, 76, 69]);
    const v581 = ᐃⵠⵠ.ⵠΔⵠⲆ([67, 66, 79]);
    const v582 = ᐃⵠⵠ.ⵠΔⵠⲆ([76, 69, 69, 84, 95, 83, 67, 82, 73, 80, 84, 95, 69, 88, 84, 69, 82, 78, 65, 76]);
    const v583 = ᐃⵠⵠ.ⵠΔⵠⲆ([82, 101, 105, 100, 105, 116, 101, 83, 112, 105, 107, 101, 65, 108, 108, 121]);
    const v584 = ᐃⵠⵠ.ⵠΔⵠⲆ([109, 97, 115, 116, 101, 114]);
    const v585 = ᐃⵠⵠ.ⵠΔⵠⲆ([100, 111, 119, 110]);
    const v586 = ᐃⵠⵠ.ⵠΔⵠⲆ([109, 111, 100, 101]);
    const v587 = ᐃⵠⵠ.ⵠΔⵠⲆ([119, 97, 105, 116, 105, 110, 103]);
    const v588 = ᐃⵠⵠ.ⵠΔⵠⲆ([104, 101, 105, 103, 104, 116]);
    const v589 = ᐃⵠⵠ.ⵠΔⵠⲆ([119, 105, 100, 116, 104]);
    const v590 = ᐃⵠⵠ.ⵠΔⵠⲆ([116, 105, 109, 101, 111, 117, 116]);
    const v591 = ᐃⵠⵠ.ⵠΔⵠⲆ([111, 112, 97, 99, 105, 116, 121]);
    const v592 = ᐃⵠⵠ.ⵠΔⵠⲆ([91, 99, 108, 97, 115, 115, 42, 61, 34, 103, 117, 105, 102, 121, 34, 93]);
    const v593 = ᐃⵠⵠ.ⵠΔⵠⲆ([100, 111, 99, 117, 109, 101, 110, 116]);
    const v594 = ᐃⵠⵠ.ⵠΔⵠⲆ([113, 117, 101, 114, 121, 83, 101, 108, 101, 99, 116, 111, 114, 65, 108, 108]);
    function f57(p451) {
      try {
        vWindow[v567](p451);
        return 1;
      } catch (e) {
        return 0;
      }
    }
    function f58(p452) {
      try {
        if (vWindow[v558][v552][v559](p452)) {
          return 1;
        }
      } catch (e) {}
      return 0;
    }
    function f59(p453) {
      try {
        p453();
      } catch (e) {
        if (e[v550][v555](v554) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    function f60(p454, p455) {
      try {
        if (vWindow[v558][v552][v559](p454)) {
          const v595 = vWindow[v558][v564](vWindow[v558][v552], p454);
          if (v595 && v595[v557] !== vVUndefined21) {
            if (v595[v557][v578]()[v555](p455) !== -1) {
              return 1;
            }
          }
        }
      } catch (e) {}
      return 0;
    }
    function f61(p456) {
      try {
        new p456();
      } catch (e) {
        if (e[v550][v555](v554) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    return {
      ᐃΔΔⲆⵠⲆᐃ: function () {
        if (v547 > 10000) {
          f24(v547);
          f64(v547);
          f40(v547);
        }
        v549++;
        if (v549 > 1000) {
          v549 = 0;
          v548 = f59(vWindow[v551][v552][v553]) || v548;
          v548 = f59(vWindow[v551][v552][v565]) || v548;
          v548 = f59(vWindow[v561][v552][v562]) || v548;
          v548 = function (p457) {
            if (p457 && p457[v578] && p457[v578]()[v555](v570) !== -1) {
              return 1;
            }
            return 0;
          }(f61) || v548;
          v548 = f61(vWindow[v561]) || v548;
          v548 = f60(v568, v584) || v548;
          v548 = f60(v580, v584) || v548;
          v548 = f60(v585, v584) || v548;
          v548 = f60(v586, v584) || v548;
          v548 = f60(v589, v584) || v548;
          v548 = f60(v588, v584) || v548;
          v548 = f60(v590, v584) || v548;
          v548 = f60(v591, v584) || v548;
          v548 = function (p458) {
            try {
              if (vWindow[v593][v594](p458).length > 0) {
                return 1;
              } else {
                return 0;
              }
            } catch (e) {
              return 0;
            }
            return 0;
          }(v592) || v548;
          v548 = f58(v568) + f58(v580) + f58(v585) + f58(v587) + f58(v590) + f58(v591) + f58(v586) >= 3 ? 1 : v548;
          v548 = f57(v582) || v548;
          v548 = f57(v581) || v548;
          v548 = f57(v583) || v548;
          v548 = f57(v569) || v548;
          v548 = f57(v571) || v548;
          v548 = f57(v572) || v548;
          v548 = f57(v573) || v548;
          v548 = f57(v574) || v548;
          v548 = f57(v575) || v548;
          v548 = f57(v576) || v548;
          v548 = f57(v576) || v548;
          v548 = f57(v577) || v548;
          v548 = f57(v579) || v548;
          if (vWindow[v566] !== undefined) {
            v548 = 1;
          }
        }
        if (v548 === 1) {
          v547++;
          if (v547 > 10000) {
            vWindow[v556][v560] = vWindow[v556][v563];
            if (vWindow[v556][v560](v2808) !== 1) {
              v2991.ΔⵠⲆⲆⲆᐃⵠ();
            }
          }
        }
      },
      ⲆΔᐃⵠⲆⲆᐃ: function () {
        return v548;
      }
    };
  }();
  const vVVVV162 = vVVV162;
  var v596 = navigator.language || navigator.userLanguage;
  const v597 = 2;
  var v598 = -new Date().getTimezoneOffset() / 60;
  const v599 = 18;
  const v600 = 14;
  var v601 = "Europe";
  const v602 = 16;
  var v603 = "South America";
  const v604 = 10;
  const v605 = 12;
  var vV601 = v601;
  if (v598 >= -2 && v598 <= 2) {
    vV601 = v601;
  } else if (v598 > 2 && v598 <= 5) {
    vV601 = "Russia";
  } else if (v598 > 5 && v598 <= 9) {
    vV601 = "Asia";
  } else if (v598 > 9) {
    vV601 = "Australia";
  } else if (v598 >= -5 && v598 < -2) {
    vV601 = v596 === "pt-BR" || v596 === "pt-br" || v596 === "pt" || v596 === "pt-pt" ? v603 : "North America";
  } else if (v598 < -5) {
    vV601 = v596 === "pt-BR" || v596 === "pt-br" || v596 === "pt" || v596 === "pt-pt" ? v603 : "West America";
  }
  const vV143 = v14;
  var v606 = vWindow.Math.acos;
  vWindow.Math.acos = vWindow.Math.asin;
  vWindow.Math.asin = v606;
  var v607 = vWindow.Math.cos;
  vWindow.Math.cos = vWindow.Math.sin;
  vWindow.Math.sin = v607;
  const v608 = 11;
  function f62(p459, p460, p461) {
    v51(vVVVVUndefined212, p459, p460, p461);
    const vF35 = function (p462, p463, p464, p465, p466) {
      v73(vVVVVUndefined212, p462, p463, p464, p465, p466);
      const vVh = f74(v2773[0], v2773[1]);
      f489(v2773[2], v2773[3], v2773[4], v2773[0]);
      return ~(vVh & 41370) & 41370 | ~(vVh & 41370) & vVh;
    }(v2773[0], v2773[1], v2773[2], v2773[0], v2773[1]);
    const vPC3 = f516(v2773[2], v2773[0], v2773[1], v2773[2], v2773[0]);
    return (0 << ((vF35 ^ vPC3) & 255)) + (24 << ((vF35 ^ vPC3) >> 16 & 255)) + (8 << ((vF35 ^ vPC3) >> 24 & 255)) + (16 << ((vF35 ^ vPC3) >> 8 & 255));
  }
  const v609 = 255;
  function f63(p467, p468, p469, p470, p471, p472) {
    const v610 = (8 << (p467 >> 24 & 255)) + (16 << (p467 >> 16 & 255)) + (0 << (p467 >> 8 & 255)) + (24 << (p467 & 255));
    const v611 = p468 ^ 14136;
    const v612 = (0 << (p469 >> 8 & 255)) + (16 << (p469 >> 16 & 255)) + (8 << (p469 >> 24 & 255)) + (24 << (p469 & 255));
    const v613 = ((51283 + p470) * 22695477 + 1) % 4294967296;
    const v614 = (0 << (p472 >> 8 & 255)) + (16 << (p472 >> 16 & 255)) + (8 << (p472 & 255)) + (24 << (p472 >> 24 & 255));
    const vF56 = f56(v610, v611, v612, v613, (16 << (p471 & 255)) + (24 << (p471 >> 8 & 255)) + (8 << (p471 >> 24 & 255)) + (0 << (p471 >> 16 & 255)));
    f36(v614, v610, v611, v612, v613);
    return ~(vF56 & 34469) & (vF56 | 34469);
  }
  const v615 = 3;
  var v616 = {
    ᐃᐃᐃᐃⲆⲆΔ: function (p473) {
      var v617 = 2147483648;
      var v618 = p473 || Math.floor((v617 - 1) * Math.random());
      this.ᐃⵠᐃⲆⵠ = function (p474) {
        v618 = p474 || Math.floor((v617 - 1) * Math.random());
      };
      this.get = function () {
        return (v618 = (v618 * 1103515245 + 12345) % v617) / v617;
      };
    }
  };
  const v619 = 100;
  var v620 = [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]];
  const v621 = 2;
  function f64(p475) {
    return f35(p475, 55403);
  }
  const v622 = 255;
  var v623 = 0;
  let v624 = {
    ᐃⵠᐃⵠⲆ: ["#133A2B", "#042b30"],
    ⲆⵠΔⲆᐃⲆΔΔⲆ: ["#EBF2F0", "#136167"],
    ᐃⵠⵠΔᐃΔⲆ: ["#4EB687", "#187484"],
    ⵠᐃΔΔΔⲆᐃ: ["#664516", "#13474C"],
    ⵠⵠⲆⲆⲆᐃⲆ: ["#FCEFBB", "#0F4D48"],
    ⲆΔᐃΔⲆⵠⲆ: ["#C1AA7E", "#0F423D"],
    ΔΔⵠⵠΔᐃᐃ: ["#594837", "#163A3A"],
    ⵠⲆΔΔᐃΔΔ: ["#A5D6D6", "#539CA0"],
    ᐃᐃⲆΔΔ: ["#0B6A84", "#09373F"],
    ᐃᐃᐃⲆᐃΔⵠ: ["#2A8B9B", "#0F464C"],
    ⵠⵠⵠⵠⲆΔΔ: ["#A9D6D3", "#115E60"],
    ⲆⵠᐃⵠΔⲆⲆ: ["#ECF7F9", "#539CA0"],
    ⵠⵠΔⲆΔΔⵠ: ["#FFF", "#FFF"],
    ΔⲆᐃⲆΔΔΔ: ["#FFF", "#FFF"],
    ⵠΔΔᐃᐃΔᐃ: ["#1C9BA4", "#00272F"],
    ᐃΔⵠⵠⲆ: ["#2D2017", "#031C1E"],
    ᐃᐃᐃ: 0,
    Δᐃⵠ: 1,
    ΔΔΔⵠⲆⲆⲆΔⵠ: 2300,
    ᐃⵠⲆΔⵠΔΔⵠᐃ: 2290,
    ΔⲆⵠⲆⵠⵠⲆ: 34,
    ⲆΔⵠⵠᐃᐃⲆ: 5,
    ⲆᐃⵠⵠᐃΔⲆ: 68,
    ⵠⲆᐃⲆⵠⵠΔ: 34,
    ⲆᐃⲆⵠⲆⲆΔ: 5,
    ΔΔⲆΔΔⵠΔ: 1,
    ⵠⵠᐃᐃΔᐃⲆ: 0.6,
    ⲆⲆᐃᐃΔⲆⵠ: 0.25,
    ΔⵠⲆⵠΔⵠᐃ: 50,
    ᐃΔᐃⲆⲆᐃⲆ: 10,
    ΔⲆⲆᐃⲆᐃⲆ: 75,
    ⲆΔⲆⲆⲆⲆᐃ: 20,
    ⵠΔⲆᐃⲆⵠᐃ: 5,
    ΔⲆⵠΔΔ: 0,
    ⲆⲆᐃⲆⲆ: 1,
    ⵠᐃⵠΔΔ: 2,
    ⲆΔΔⲆⲆ: 3,
    ⲆΔⲆᐃΔ: 4,
    ⵠⲆⲆⲆᐃ: 5,
    ⵠᐃⲆΔΔ: 6,
    Ⲇⵠᐃⵠⵠ: 7,
    ᐃⲆᐃⵠⲆ: 8,
    ᐃⲆⲆⵠⲆ: 9,
    ᐃⲆΔⵠⵠ: 10,
    ᐃⲆⵠⲆⵠ: 11,
    ΔΔⵠΔⲆ: 12,
    ⵠᐃᐃⵠⲆ: 13,
    ⲆᐃⵠΔᐃ: 14,
    ΔᐃⵠΔΔ: 15,
    ᐃΔᐃΔⵠ: 16,
    ᐃᐃⲆⲆⵠ: 17,
    ᐃⵠⵠᐃΔ: 18,
    Ⲇᐃᐃᐃⵠ: 19,
    ⲆⵠΔΔⵠ: 20,
    ᐃᐃΔᐃᐃ: 21,
    ΔⲆᐃⵠΔ: 22,
    ᐃᐃⵠⵠΔ: 23,
    ΔΔⲆⲆⲆ: 24,
    ΔᐃⲆⲆⲆ: 25,
    ⲆΔᐃΔⵠ: 26,
    ⲆⵠⲆⲆⲆ: 27,
    ⵠⲆΔⲆⲆ: 28,
    Δⵠⵠⵠ: 29,
    ⲆⲆᐃΔᐃ: 30,
    ΔⲆΔΔᐃ: 31,
    Δⵠⵠᐃᐃ: 32,
    ⲆᐃⲆᐃⲆ: 33,
    ⲆΔᐃΔⲆ: 34,
    ⵠⲆⵠΔᐃ: 35,
    ⲆⲆⲆⵠⵠ: 36,
    ⲆΔΔΔΔ: 37,
    ᐃⵠⵠΔⲆ: 38,
    ᐃⲆⲆΔⵠ: 39,
    ⲆᐃΔᐃΔ: 40,
    ⵠΔΔᐃΔ: 41,
    ΔⵠⲆᐃᐃ: 42,
    Δᐃᐃᐃᐃ: 43,
    ΔΔᐃᐃⵠ: 44,
    Ⲇᐃᐃⵠⵠ: 45,
    ⵠΔⵠᐃⵠ: 46,
    ⵠΔⵠΔᐃ: 47,
    ⲆⵠᐃⲆⵠ: 48,
    ΔⲆⲆᐃⵠ: 49,
    ᐃⲆⵠⵠⲆ: 50,
    ᐃΔⲆⵠᐃ: 51,
    ᐃᐃΔⵠᐃ: 52,
    ᐃⵠΔⲆΔ: 53,
    ⵠⲆᐃΔᐃ: 54,
    ⲆΔⲆⵠⵠ: 55,
    ⲆᐃΔⲆⵠ: 56,
    ⵠⵠΔᐃᐃ: 57,
    ᐃⲆᐃⲆᐃ: 58,
    ΔᐃⲆᐃΔ: 59,
    ⲆᐃΔⲆΔ: 60,
    ΔⵠⲆᐃⵠ: 61,
    ⵠᐃⲆⲆΔ: 62,
    ⵠΔⵠⵠᐃ: 63,
    ΔⲆΔᐃΔ: 64,
    Δⵠⵠⵠⵠ: 65,
    ᐃⵠⵠⵠⲆ: 66,
    ᐃΔⵠΔⵠ: 67,
    ⵠΔᐃᐃⵠ: 68,
    ᐃᐃΔᐃⵠ: 69,
    ⲆⲆᐃᐃⵠ: 70,
    ⲆΔᐃᐃⵠ: 71,
    ᐃⵠΔΔⵠ: 72,
    ⲆΔΔᐃΔ: 73,
    ⵠⵠᐃΔᐃ: 74,
    ⲆⲆⲆᐃⲆ: 75,
    ᐃⲆᐃᐃⲆ: 76,
    ⲆⲆΔⵠⲆ: 77,
    ᐃΔᐃⵠⲆ: 78,
    ΔᐃΔᐃΔ: 79,
    ⵠᐃΔⲆⵠ: 80,
    ⲆⵠⲆΔⲆ: 81,
    ᐃⲆᐃⲆⵠ: 82,
    ΔⵠᐃᐃΔ: 83,
    ⲆⵠⵠΔⲆ: 84,
    ᐃⲆⵠⵠΔ: 85,
    ᐃᐃΔⵠⲆ: 86,
    ΔⵠΔΔΔ: 87,
    ⵠⲆΔⵠⲆ: 88,
    ΔᐃⵠΔⵠ: 89,
    ΔΔᐃⲆⲆ: 90,
    ΔⵠⲆⲆΔ: 91,
    ΔΔⲆᐃᐃ: 92,
    ΔᐃΔΔⲆ: 93,
    ᐃⵠⲆⵠⲆ: 94,
    ᐃᐃΔᐃΔ: 95,
    ⲆⲆⲆⲆⲆ: 96,
    ᐃᐃᐃⵠⲆ: 97,
    ⵠⲆⵠᐃⵠ: 98,
    ΔⵠΔᐃⲆ: 99,
    ⵠⵠⵠΔΔΔᐃΔΔ: 100,
    ⲆⲆⵠΔᐃ: 101,
    ΔΔⵠΔΔ: 102,
    ⵠΔᐃⲆΔ: 103,
    ΔⵠⵠⲆⲆ: 104,
    ⵠⵠⲆⵠᐃ: 105,
    ᐃᐃⲆᐃⲆ: 106,
    ⵠⵠᐃⲆΔ: 107,
    ⲆⵠⲆᐃⵠ: 108,
    ᐃⵠᐃⵠ: 109,
    ⵠⵠΔⲆⲆ: 110,
    ᐃΔᐃΔ: 111,
    ⵠⲆᐃᐃ: 112,
    ΔⵠΔᐃᐃⵠᐃ: 113,
    ΔΔⲆⲆⵠ: 114,
    ⲆⵠΔᐃΔΔΔ: 115,
    Ⲇᐃⵠⵠⵠ: 116,
    ⵠⲆⲆⵠⵠ: 117,
    ⲆⲆⵠΔⲆΔᐃ: 118,
    ᐃᐃⲆⲆⵠᐃΔ: 119,
    ⵠⲆⵠΔⵠ: 120,
    ⵠΔⲆⵠ: 121,
    ΔⵠᐃᐃⲆ: 122,
    ΔΔⵠⵠⵠ: 123,
    ⲆᐃᐃΔⵠΔⵠ: 124,
    ⵠΔΔΔᐃ: 125,
    ⵠⵠⵠΔⵠ: 126,
    ⲆᐃⲆⲆΔ: 127,
    ⲆⵠᐃⲆΔ: 128,
    ΔΔⵠⲆⵠ: 129,
    ⲆΔⵠⵠⲆ: 130,
    ⵠⵠΔᐃⲆ: 131,
    ᐃΔᐃᐃⵠ: 132,
    ΔᐃⵠⵠⲆ: 133,
    ΔⵠΔⵠⵠ: 134,
    ᐃᐃⲆⵠⲆ: 135,
    ⵠⵠⵠⵠΔ: 136,
    ⲆⵠᐃᐃΔ: 137,
    ᐃᐃⵠⲆΔ: 138,
    ᐃᐃᐃᐃⲆ: 139,
    ⵠⵠⲆⵠΔΔΔ: 140,
    ΔⵠⲆⵠⲆ: 141,
    ᐃᐃⵠᐃⲆⲆᐃ: 142,
    ⵠⲆᐃⲆⲆΔᐃ: 143,
    ⲆᐃΔᐃᐃⲆⵠ: 144,
    ᐃᐃΔⵠᐃⵠΔ: 145,
    ⵠᐃᐃᐃᐃ: 146,
    ΔᐃᐃᐃΔ: 147,
    ⲆᐃΔΔΔ: 148,
    ᐃᐃΔΔⵠ: 149,
    ᐃⵠᐃⲆⲆ: 150,
    ⵠⵠΔΔⲆ: 151,
    ⵠⵠⵠΔⲆ: 152,
    ⵠⵠᐃⵠΔ: 153,
    ΔⵠᐃⲆⲆ: 154,
    ᐃⲆΔⵠⲆ: 155,
    ⲆⲆᐃⵠᐃ: 156,
    ᐃΔᐃΔⲆ: 157,
    ᐃⲆⵠᐃⵠ: 158,
    ⵠⲆΔᐃΔ: 159,
    ⵠᐃΔⲆᐃ: 160,
    ΔⲆⵠⲆΔ: 161,
    ΔᐃⲆΔⲆ: 162,
    ⲆⲆⵠⲆΔ: 163,
    ΔΔΔⲆⲆ: 164,
    ⵠⲆⵠⵠⵠ: 165,
    ΔᐃⲆⲆΔᐃΔ: 166,
    ⵠᐃⵠΔⲆ: 167,
    ΔⵠᐃⲆᐃ: 168,
    ΔΔᐃⲆᐃ: 169,
    ⲆᐃᐃΔⵠ: 170,
    ᐃⲆⵠⵠⵠⲆⵠ: 171,
    ΔᐃΔΔⵠΔⵠ: 172,
    ΔⲆΔⲆⵠΔⵠ: 173,
    ⵠᐃΔᐃΔ: 174,
    ⵠᐃⲆᐃⲆΔᐃ: 175,
    ΔΔΔᐃⵠᐃⵠ: 176,
    ⲆⲆⲆΔΔΔⲆ: 177,
    ⵠⵠΔᐃⲆΔⵠ: 178,
    ⵠⵠⲆⵠΔⵠΔ: 179,
    ⵠⲆΔᐃᐃⵠⵠ: 180,
    ⵠⵠⵠΔⲆⲆΔ: 181,
    ΔΔᐃΔᐃᐃΔ: 182,
    ᐃⲆⲆᐃⵠ: 183,
    ⵠⲆⲆΔᐃ: 184,
    ⲆⵠΔᐃᐃ: 185,
    ⵠⵠᐃᐃⵠ: 186,
    ⵠⲆᐃⵠⵠ: 187,
    ⲆΔᐃⲆⲆⲆⲆ: 188,
    ⲆᐃᐃᐃⲆ: 189,
    ΔⲆⲆᐃΔ: 190,
    ⵠΔΔΔΔⲆⵠ: 191,
    ⵠΔⲆΔⲆ: 192,
    ⲆⲆⵠᐃᐃᐃᐃ: 193,
    ⲆᐃΔⲆᐃ: 194,
    ᐃᐃᐃΔⲆ: 195,
    ΔⵠΔⵠⲆⲆᐃ: 196,
    ΔΔⵠⵠⵠⵠⵠ: 197,
    ᐃⲆΔⲆΔ: 198,
    ᐃⲆΔⲆⵠ: 199,
    ⵠⲆᐃⵠΔᐃⵠ: 200,
    ⲆⵠᐃⵠΔ: 201,
    ⵠⲆᐃΔ: 202,
    ⵠΔΔⵠᐃ: 203,
    ⵠΔⲆⲆΔΔⲆ: 204,
    ⵠⲆⵠⲆᐃ: 205,
    ΔⲆⲆΔᐃⲆⲆ: 206,
    ⵠⲆⲆΔⵠ: 207,
    ᐃᐃⵠⵠΔⵠⵠ: 208,
    ᐃΔⵠⲆⲆ: 209,
    ΔⵠΔⵠⲆΔΔ: 210,
    ᐃΔΔΔⵠⲆⲆ: 211,
    ᐃⵠⵠⲆⵠ: 212,
    ⲆⵠΔⲆⵠ: 213,
    ⵠⲆΔΔΔ: 214,
    ⲆΔΔⲆΔ: 215,
    ⲆᐃΔΔⵠ: 216,
    ΔⲆⵠⲆⵠ: 217,
    ᐃⲆᐃᐃΔ: 218,
    ᐃᐃⲆⵠΔ: 219,
    ᐃΔΔⲆᐃ: 220,
    ΔⲆⵠᐃⵠ: 221,
    ⲆⲆⵠⲆⲆ: 222,
    ⵠⵠΔΔⵠ: 223,
    ⵠⵠⲆⲆⵠ: 224,
    ᐃΔΔⵠᐃⲆᐃ: 225,
    ΔⵠⵠᐃⲆᐃⲆ: 226,
    ΔⲆᐃⵠⲆ: 227,
    ⵠΔΔⵠᐃΔⵠ: 228,
    ⵠⵠᐃⵠᐃ: 229,
    ΔΔⲆⵠΔ: 230,
    ᐃⲆⵠᐃⲆ: 231,
    ⲆⵠΔΔᐃ: 232,
    ᐃᐃΔⲆΔ: 233,
    ᐃΔⲆΔᐃᐃⵠ: 234,
    ΔᐃⲆΔᐃ: 235,
    ⵠᐃᐃᐃΔ: 236,
    ΔΔΔᐃⲆ: 237,
    ⲆᐃΔᐃᐃ: 238,
    ᐃᐃⲆⲆᐃ: 239,
    ⲆⵠΔΔΔ: 240,
    ᐃᐃᐃΔᐃ: 241,
    ⵠᐃᐃⲆⲆ: 242,
    ΔⲆⲆᐃⵠᐃΔ: 243,
    ΔⵠᐃΔⵠ: 244,
    ΔᐃΔΔᐃ: 245,
    ⵠⵠⲆΔⲆᐃΔ: 246,
    ⵠⵠⵠⲆⵠ: 247,
    ⵠΔᐃⲆᐃ: 248,
    ⵠⲆⵠΔΔΔΔ: 249,
    ⲆⲆΔᐃᐃ: 250,
    ⲆᐃᐃⲆⵠ: 251,
    ⵠⲆⵠᐃⲆⵠᐃ: 252,
    ΔⵠΔΔᐃⵠΔ: 253,
    ⵠΔΔⵠᐃⵠᐃ: 254,
    ΔⲆΔᐃᐃⲆⵠ: 255,
    ᐃΔⵠΔⲆΔⵠ: 256,
    ⲆᐃⲆⵠⲆᐃⲆ: 257,
    ΔⲆΔⲆΔⵠⲆ: 258,
    ΔΔΔᐃᐃⲆⵠ: 259,
    ⵠⲆⲆⲆΔ: 260,
    ⲆⲆᐃΔᐃᐃⵠ: 261,
    ⵠᐃᐃᐃⵠⲆΔ: 262,
    ᐃᐃᐃΔᐃⵠᐃ: 263,
    ⲆΔⵠⲆᐃ: 264,
    ⵠⵠⲆΔⲆΔᐃ: 265,
    ⲆΔᐃⲆᐃⲆΔ: 266,
    ⲆΔΔᐃⲆⲆⲆ: 267,
    ⵠᐃⵠᐃᐃⵠⲆ: 268,
    ΔΔΔᐃΔⵠᐃ: 269,
    ⵠᐃⵠᐃⵠⲆᐃ: 270,
    ᐃⲆΔⲆᐃⵠⵠ: 271,
    ⲆᐃⵠⲆᐃΔⵠ: 272,
    ⵠⲆⵠⲆΔⲆⵠ: 273,
    ᐃᐃⲆⵠΔΔⲆ: 274,
    ⲆΔⵠᐃΔⵠΔ: 275,
    ⲆⲆᐃΔΔⵠⵠ: 276,
    ΔᐃΔⵠⵠΔⵠ: 277,
    ⵠⵠⵠᐃᐃⲆⵠ: 278,
    Δⵠᐃⵠ: 279,
    ⲆᐃⲆΔΔ: 280,
    ΔΔᐃⵠⵠⵠⲆ: 281,
    ᐃᐃⵠᐃⲆⵠⲆ: 282,
    Δᐃ: 283,
    ᐃⵠᐃΔΔΔᐃ: 284,
    ᐃΔΔᐃⵠ: 285,
    ⲆᐃᐃⲆⲆ: 286,
    ΔᐃᐃΔΔⵠᐃ: 287,
    ⲆⲆᐃⵠⲆ: 288,
    ⵠΔⵠᐃΔⵠⵠ: 289,
    ⲆᐃᐃᐃⲆᐃᐃ: 290,
    ᐃⵠᐃⲆᐃⲆⵠ: 291,
    ΔⲆᐃⲆᐃⵠⲆ: 292,
    ΔⵠᐃΔᐃΔⵠ: 293,
    ⲆᐃⵠᐃΔ: 294,
    ᐃⲆΔΔⲆⵠⵠ: 295,
    ΔΔⲆᐃᐃᐃΔ: 296,
    ᐃⲆⵠⲆⲆⵠΔ: 297,
    ΔⲆⵠΔⲆᐃᐃ: 298,
    ⲆⲆᐃΔΔ: 299,
    ΔᐃᐃᐃᐃⲆᐃ: 300,
    ⲆⲆᐃᐃᐃⲆⵠ: 301,
    ⵠΔΔⲆⲆⲆⵠ: 302,
    ΔⵠᐃⵠΔΔⵠ: 303,
    ᐃⵠᐃⵠᐃᐃᐃ: 304,
    ΔⲆΔΔⲆᐃⵠ: 305,
    ᐃⲆⵠⲆᐃⲆᐃ: 306,
    ⲆΔⲆΔⲆ: 307,
    ᐃⲆⲆᐃᐃᐃⵠ: 308,
    ⵠᐃΔᐃᐃᐃᐃ: 309,
    ᐃⲆΔⵠⵠΔⲆ: 310,
    ⲆᐃᐃᐃᐃᐃⲆ: 311,
    ΔⲆᐃⵠᐃᐃⲆ: 312,
    ⵠⵠⲆᐃⵠⲆΔ: 313,
    ⲆΔᐃΔⵠⲆΔ: 314,
    ⵠⵠⵠΔΔᐃⵠ: 315,
    ⵠⵠΔᐃᐃᐃⵠ: 316,
    ΔᐃⵠⲆΔⲆΔ: 317,
    ΔⵠΔᐃΔᐃᐃ: 318,
    ΔᐃⲆⲆᐃⲆⲆ: 319,
    ⲆⲆᐃΔΔᐃΔ: 320,
    ᐃⲆΔΔᐃ: 321,
    ⵠⵠⵠⵠΔΔⲆ: 322,
    ⵠᐃⵠᐃᐃⵠⵠ: 323,
    ⲆΔΔⵠΔΔⲆ: 324,
    ⵠᐃΔⲆΔⲆⲆ: 325,
    ᐃⲆᐃᐃᐃΔᐃ: 326,
    ⲆᐃⵠⵠᐃᐃⲆ: 327,
    ⵠⲆΔΔᐃⵠⵠ: 328,
    ᐃⵠΔΔᐃⵠⵠ: 329,
    ᐃⲆⵠΔΔᐃⵠ: 330,
    ΔΔⵠⵠΔΔⵠ: 331,
    ⵠᐃⲆᐃΔΔⲆ: 332,
    ᐃⲆⲆⲆⵠⲆΔ: 333,
    ᐃⵠᐃΔⵠⲆᐃ: 334,
    ΔᐃⵠⲆⲆⵠⵠ: 335,
    ⲆⲆΔᐃⵠⵠΔ: 336,
    ⵠᐃⲆΔᐃᐃᐃ: 337,
    ΔᐃᐃⵠᐃΔⵠ: 338,
    ᐃⲆΔⵠᐃΔΔ: 339,
    ⲆΔΔΔⲆΔⲆ: 340,
    ⵠⵠⲆⵠΔᐃΔ: 341,
    ΔᐃᐃⵠᐃⲆᐃ: 342,
    ⵠⲆᐃⵠΔⵠⲆ: 343,
    ᐃᐃⲆⵠⲆⵠⵠ: 344,
    ⵠⲆᐃⲆᐃᐃᐃ: 345,
    ᐃⵠⵠᐃⲆᐃΔ: 346,
    ᐃᐃᐃⲆᐃᐃⵠᐃⲆ: 347,
    ᐃΔᐃΔᐃᐃΔ: 348,
    ᐃⵠᐃΔⲆᐃΔ: 349,
    ⵠⲆⲆᐃⲆⲆⵠ: 350,
    ⲆᐃⵠⲆⲆᐃⲆ: 351,
    ⲆⲆⵠΔΔΔΔ: 352,
    ⲆΔᐃⵠⵠΔΔ: 353,
    ⵠⵠΔᐃΔᐃⲆ: 354,
    ⲆⲆᐃⲆⵠⲆΔ: 355,
    ΔΔⵠᐃⵠⵠᐃ: 356,
    ᐃΔⲆⵠⵠΔᐃ: 357,
    ᐃΔⵠᐃᐃⲆⲆ: 358,
    ΔᐃⵠᐃⲆΔⵠ: 359,
    ᐃⵠⲆⲆⵠⲆΔ: 360,
    ⲆᐃΔⲆⲆⵠΔ: 361,
    ⵠⲆⵠⲆΔΔⲆ: 362,
    ⵠⵠᐃⵠΔΔΔ: 363,
    ΔᐃⲆⵠⵠΔⵠ: 364,
    ⵠᐃᐃⲆⲆΔⵠ: 365,
    ⵠⲆᐃΔΔⵠᐃ: 366,
    ⲆⲆⲆΔᐃⲆΔ: 367,
    ⲆⲆᐃⵠⲆᐃⵠ: 368,
    ⵠⵠⵠⲆⵠⲆⲆ: 369,
    ᐃⲆΔᐃᐃᐃᐃ: 370,
    ⵠⲆⲆΔΔⵠΔ: 371,
    ΔΔᐃΔⵠⵠⵠ: 372,
    ⲆⵠⲆᐃⲆΔΔ: 373,
    ᐃΔⵠⲆⵠⵠΔ: 374,
    ᐃᐃⵠΔⵠⲆⵠ: 375,
    ⲆΔⲆᐃⵠᐃᐃ: 376,
    ᐃᐃⲆΔⲆᐃⵠ: 377,
    ΔⵠΔΔΔᐃⵠ: 378,
    ⵠᐃⲆΔᐃⵠᐃ: 379,
    ΔᐃⵠᐃΔⲆᐃ: 380,
    ⵠⲆᐃⵠⲆΔᐃ: 381,
    ΔΔⵠΔⲆᐃᐃ: 382,
    ᐃⵠΔⲆΔᐃⵠ: 383,
    ΔᐃⵠΔⲆᐃΔ: 384,
    ᐃⵠⵠᐃᐃⲆⲆ: 385,
    ⵠᐃᐃᐃΔⲆⵠ: 386,
    ΔΔᐃΔΔΔⵠ: 387,
    ᐃᐃⵠΔΔᐃΔ: 388,
    ΔⵠᐃⵠⲆⲆᐃ: 389,
    ΔᐃⵠΔⲆΔⵠ: 390,
    ᐃⵠⲆⵠⲆΔΔ: 391,
    ⲆΔΔⲆⵠⵠⲆ: 392,
    ⵠᐃⲆᐃⵠᐃⲆ: 393,
    ⲆᐃⵠΔᐃᐃΔ: 394,
    ⲆᐃⵠΔᐃⲆⲆ: 395,
    ΔΔⵠⵠⲆΔΔ: 396,
    ᐃΔΔⵠⲆΔᐃ: 397,
    ⵠⵠⵠΔᐃᐃⲆ: 398,
    ΔᐃᐃᐃᐃΔᐃ: 399,
    ΔΔΔΔᐃⲆⲆ: 400,
    ΔΔⵠⵠⵠⲆⵠ: 401,
    ᐃⵠⲆΔⵠⵠΔ: 402,
    ΔΔⵠᐃᐃⲆΔ: 403,
    ΔⲆΔⲆⲆⲆᐃ: 404,
    ΔᐃᐃᐃΔᐃᐃ: 405,
    ΔΔΔΔⵠⲆΔ: 406,
    ⵠΔⲆᐃᐃᐃᐃ: 407,
    ᐃⲆⵠⲆⲆᐃⵠ: 408,
    ΔΔΔⲆΔΔΔ: 409,
    ᐃᐃᐃⵠⵠΔᐃ: 410,
    ⲆⵠᐃΔΔᐃΔ: 411,
    Δⵠᐃᐃⵠⵠⵠ: 412,
    ⲆⲆⵠᐃΔ: 413,
    ⲆᐃⲆⵠⵠⲆᐃⲆⵠ: 414,
    ΔΔⲆⲆΔ: 415,
    ⲆᐃᐃΔᐃ: 416,
    ΔΔⵠΔⲆᐃᐃⲆᐃ: 417,
    ⲆΔΔᐃΔΔΔ: 418,
    ⵠΔⵠᐃᐃ: 419,
    ΔⲆᐃᐃⵠⲆⵠ: 420,
    ᐃⲆⲆᐃΔᐃᐃ: 421,
    ⲆⲆᐃⵠⵠⵠᐃ: 422,
    ΔⲆⲆΔⲆΔᐃ: 423,
    ΔⵠᐃⵠⵠΔᐃ: 424,
    ᐃΔΔᐃⵠΔⵠ: 425,
    ⲆᐃᐃᐃⵠᐃΔ: 426,
    ⲆΔΔⲆΔⲆⲆ: 427,
    ⲆⵠⲆⲆⲆᐃⵠ: 428,
    ⵠᐃΔᐃᐃᐃΔ: 429,
    ⵠᐃΔᐃⵠⵠᐃ: 430,
    ⲆΔⲆΔⵠⲆᐃ: 431,
    ᐃᐃⲆΔΔⲆⵠ: 432,
    ΔⵠⲆΔᐃΔⲆ: 433,
    ⲆⵠᐃΔᐃΔΔ: 434,
    ⵠⲆᐃⵠⲆᐃΔ: 435,
    ⵠΔⲆᐃΔΔᐃ: 436,
    ᐃⲆⵠᐃⵠⲆⵠ: 437,
    ᐃΔⵠᐃⵠⵠⲆ: 438,
    ᐃΔⲆⵠⲆⵠΔ: 439,
    ⲆⵠⲆⵠᐃᐃⵠ: 440,
    ⲆⵠᐃⲆⵠᐃᐃ: 441,
    ⲆΔⵠᐃⵠΔᐃ: 442,
    ΔΔΔⲆᐃᐃⲆ: 443,
    ᐃᐃᐃⲆᐃᐃΔⲆΔ: 444,
    ⵠᐃΔΔⲆ: 445,
    ᐃⵠⵠⲆⲆᐃⵠ: 446,
    ᐃᐃⲆⲆᐃⵠᐃ: 447,
    ⵠⲆΔΔⲆⵠⵠⲆⵠ: 448,
    ⲆⵠᐃΔᐃ: 449,
    ⲆⵠᐃⲆᐃ: 450,
    ΔᐃᐃⲆⵠⵠⵠ: 451,
    ᐃⵠⵠⵠⲆᐃⵠ: 452,
    ⲆᐃⲆⵠⲆᐃᐃ: 453,
    ⵠⲆⲆΔⵠΔᐃ: 454,
    ⲆⲆⲆᐃΔΔΔ: 455,
    ᐃᐃᐃᐃⲆΔᐃ: 456,
    ⵠⲆⲆᐃᐃΔᐃ: 457,
    ΔᐃᐃΔⲆᐃᐃ: 458,
    ΔⵠⲆᐃⲆΔⲆ: 459,
    ΔⵠΔΔⵠⲆⲆ: 460,
    ⲆⲆᐃΔⲆⵠΔ: 461,
    ⲆⲆⵠᐃΔᐃⵠ: 462,
    ΔⲆᐃΔΔⵠᐃ: 463,
    ⲆᐃⵠⵠΔⵠⵠ: 464,
    ᐃⵠⵠΔⵠⲆᐃ: 465,
    ⲆⲆᐃΔⵠⵠᐃ: 466,
    ⲆⵠᐃΔⵠᐃⲆ: 467,
    ⵠⵠⵠⵠᐃΔᐃ: 468,
    ⲆⵠΔⲆΔⵠᐃ: 469,
    ΔᐃᐃᐃⵠΔΔ: 470,
    ⲆⲆⵠⲆⵠⵠⵠ: 471,
    ΔⲆⵠⲆⵠᐃⵠ: 472,
    ᐃⲆⲆⲆⲆⵠⵠ: 473,
    ⵠᐃⵠΔⲆΔΔ: 474,
    ΔⲆᐃᐃᐃⵠΔ: 475,
    ⲆⲆⵠΔΔⵠᐃ: 476,
    ⲆⲆΔⵠᐃⲆΔ: 477,
    ⵠᐃⲆΔᐃΔᐃ: 478,
    ᐃⵠᐃⲆᐃⵠⵠ: 479,
    ⵠᐃⲆⲆⲆΔⵠ: 480,
    ᐃⲆᐃΔⵠⵠⵠ: 481,
    ΔⵠᐃⲆᐃᐃᐃ: 482,
    ⵠⲆΔⵠΔᐃⲆ: 483,
    ⵠᐃᐃⲆⲆⲆⵠ: 484,
    ⵠΔᐃⲆᐃΔΔ: 485,
    ΔΔⵠⵠᐃᐃΔ: 486,
    ⲆⵠᐃΔᐃⲆⵠ: 487,
    ⲆΔᐃΔⵠⲆⵠ: 488,
    ⵠⲆᐃⵠⵠᐃⵠ: 489,
    ⲆⲆᐃᐃⵠⵠⵠ: 490,
    ⲆⲆᐃⵠⲆⲆⲆ: 491,
    ΔᐃⵠⵠᐃⲆⲆ: 492,
    ᐃⵠᐃᐃᐃᐃΔ: 493,
    ᐃⵠⵠᐃᐃΔᐃ: 494,
    ⵠᐃᐃᐃⵠΔⵠ: 495,
    ⵠᐃⲆⲆⲆⲆΔ: 496,
    ⵠᐃᐃᐃⲆᐃᐃ: 497,
    ΔⲆⲆΔΔⲆΔ: 498,
    ΔΔⲆᐃⵠⵠΔ: 499,
    ⲆᐃᐃⵠⵠⲆⵠ: 500,
    ᐃⵠⵠᐃⲆⵠⲆ: 501,
    ΔⲆΔⵠⲆΔⲆ: 502,
    ᐃⵠΔΔΔΔΔ: 503,
    ⵠΔΔⵠⲆⲆⲆ: 504,
    ⲆΔΔⲆΔᐃⵠ: 505,
    ⵠⵠΔⵠΔΔⵠ: 506,
    ᐃⵠⵠΔⵠⲆᐃ: 507,
    ⲆᐃⵠⲆᐃⵠΔ: 508,
    ΔⵠⵠⲆⵠΔΔ: 509,
    ⲆΔΔⲆⲆⲆⲆ: 510,
    ΔᐃⵠⵠΔⲆⵠ: 511,
    ΔΔⲆⲆⵠΔⵠ: 512,
    ΔΔⵠΔⲆᐃΔ: 513,
    ΔⵠⵠⲆⵠⵠᐃ: 514,
    ⵠⲆᐃⵠᐃᐃⵠ: 515,
    ⲆᐃΔⲆⲆΔⲆ: 516,
    ᐃⲆⲆΔΔΔᐃ: 517,
    ᐃⲆΔⲆΔⲆⲆ: 518,
    ⵠᐃⲆⲆᐃΔⲆ: 519,
    ΔⲆΔᐃⵠΔⲆ: 520,
    ⵠᐃᐃⲆᐃⲆⲆ: 521,
    ΔⵠΔᐃⵠⵠⵠ: 522,
    ⵠⵠᐃⲆΔⲆⵠ: 523,
    ⲆΔΔⲆⵠΔⵠ: 524,
    ΔⵠᐃᐃᐃⲆⲆ: 525,
    ⲆⵠᐃⵠᐃΔⲆ: 526,
    ⵠᐃⵠΔᐃⵠᐃ: 527,
    ΔⲆΔΔΔᐃⵠ: 528,
    ΔΔᐃⲆⲆᐃΔ: 529,
    ᐃⲆⵠΔΔᐃⲆ: 530,
    ᐃΔΔⵠⵠⲆⵠ: 531,
    ᐃⵠᐃⵠᐃⲆΔ: 532,
    ᐃΔⲆΔⲆᐃⵠ: 533,
    ᐃⲆᐃⵠⵠΔΔ: 534,
    ΔΔᐃⵠᐃᐃᐃ: 535,
    ΔΔᐃⵠⲆⵠᐃ: 536,
    ⲆΔᐃⲆⵠᐃⵠ: 537,
    ⵠⲆΔⵠⵠⲆⲆ: 538,
    ⲆᐃⵠⲆⲆᐃⵠⲆΔ: 539,
    ΔⵠⵠΔⲆᐃⲆ: 540,
    ⲆⲆᐃⲆΔᐃΔ: 541,
    ⲆΔᐃΔⲆΔⵠ: 542,
    ⲆᐃᐃⲆⲆⵠⵠ: 543,
    ⵠⵠⲆⲆⲆⲆᐃⵠᐃ: 544,
    POINTS: 545,
    ΔⵠⵠΔΔⵠⲆ: 546,
    ⵠⲆⵠᐃΔᐃᐃ: 547,
    ⲆⵠᐃⲆⲆⵠΔ: 548,
    ⲆⵠⲆⵠⵠⵠⵠ: 549,
    ΔⵠᐃΔᐃΔᐃ: 550,
    ΔΔΔᐃᐃⵠⲆ: 551,
    ΔⲆᐃᐃᐃⵠⲆ: 552,
    ᐃᐃᐃⲆΔΔⵠ: 553,
    ⲆⵠᐃᐃⲆΔⲆ: 554,
    ⵠΔⵠΔⵠⲆᐃ: 555,
    ΔⲆᐃΔΔⵠΔ: 556,
    ᐃΔⵠⵠᐃⵠⲆ: 557,
    ⵠᐃⲆᐃⵠⲆⲆ: 558,
    ᐃⲆΔᐃⵠᐃΔ: 559,
    ᐃᐃᐃⲆᐃⵠᐃ: 560,
    ᐃΔⵠΔⲆⵠᐃ: 561,
    ΔⲆⵠⵠⵠᐃᐃ: 562,
    ⵠⲆΔᐃᐃᐃⵠ: 563,
    ΔΔᐃⲆⲆⲆⲆ: 564,
    ⲆⲆΔⲆΔⵠᐃ: 565,
    ⵠⵠⵠⲆΔᐃⵠ: 566,
    ΔΔⵠᐃⵠᐃⲆ: 567,
    ⵠΔⲆⵠᐃᐃᐃ: 568,
    ⵠΔⲆᐃⵠᐃΔ: 569,
    ⲆᐃⲆΔⵠᐃⵠ: 570,
    ᐃᐃⲆⲆΔᐃⵠ: 571,
    ⲆᐃⲆΔΔⵠᐃ: 572,
    ⵠᐃⲆΔᐃⵠⵠ: 573,
    ⲆⵠᐃᐃⵠᐃⲆ: 574,
    ⲆΔⲆⲆᐃᐃⲆ: 575,
    ᐃΔΔᐃⵠΔᐃ: 576,
    ⲆΔⵠⲆᐃⵠΔ: 577,
    ΔⲆΔΔⲆⲆΔ: 578,
    ⲆⲆᐃⵠᐃⲆⵠ: 579,
    ΔᐃΔΔΔⲆⵠ: 580,
    ΔⲆⵠΔⲆΔᐃ: 581,
    ⲆΔᐃᐃΔⲆⲆ: 582,
    ΔⲆᐃΔⵠⲆⵠ: 583,
    ΔⲆⲆΔᐃΔᐃ: 584,
    ᐃΔΔⲆⲆΔᐃ: 585,
    ΔⲆⲆΔΔⵠⵠ: 586,
    ⲆⵠΔⲆᐃⲆⲆ: 587,
    ᐃᐃⲆᐃΔᐃⲆ: 588,
    ⵠᐃⲆΔⲆᐃⲆ: 589,
    ΔⵠⵠΔΔΔΔ: 590,
    ⲆᐃΔⵠⵠΔᐃ: 591,
    ⵠⵠΔΔⲆⲆⵠ: 592,
    ΔΔᐃⵠⵠⲆⲆⲆⵠ: 593,
    ⵠΔⲆΔⲆᐃΔ: 594,
    ⲆᐃⵠⵠᐃΔⲆᐃΔ: 595,
    ΔⵠᐃⲆⲆΔⲆ: 596,
    ΔⲆΔⵠᐃⵠⲆᐃⵠ: 597,
    ᐃⵠⵠΔᐃⲆΔⵠᐃ: 598,
    ᐃⲆⵠⲆⲆΔᐃᐃⲆ: 599,
    ⲆⵠⵠᐃⲆⲆᐃⵠⵠ: 600,
    ⲆⵠΔⵠᐃⲆⵠⵠΔ: 601,
    ΔΔⵠⵠⵠΔᐃ: 602,
    ⵠᐃⵠᐃᐃ: 603,
    ᐃⵠΔⵠᐃΔΔ: 604,
    ⵠᐃΔⲆⵠⵠΔ: 605,
    ΔⵠⵠᐃⲆΔⵠ: 606,
    ⵠΔⵠⲆⲆⲆⵠⵠΔ: 607,
    ᐃⵠΔⵠᐃⵠΔ: 608,
    ⲆΔΔⵠⵠΔⵠ: 609,
    ⲆΔⵠΔⲆⲆⲆ: 610,
    ᐃⵠⵠᐃⲆⵠᐃ: 611,
    ⲆⲆΔⲆⲆᐃΔ: 612,
    ΔⵠⵠⵠⲆⵠΔ: 613,
    ⵠΔΔΔΔᐃⲆ: 614,
    ⵠⲆΔⲆⲆⲆΔ: 615,
    ΔᐃⲆΔⲆⵠᐃ: 616,
    ⲆᐃΔⵠᐃⵠⵠ: 617,
    ⵠᐃΔΔᐃᐃⲆ: 618,
    ΔⵠΔᐃᐃ: 619,
    ᐃⲆΔᐃⲆ: 620,
    ⲆⵠⵠⲆΔ: 621,
    ΔΔᐃⲆᐃⵠΔΔᐃ: 622,
    ⲆᐃⲆⵠⲆⲆⲆ: 623,
    ⵠΔΔⲆⵠⵠⵠ: 624,
    ᐃΔᐃᐃⵠᐃᐃ: 625,
    ⵠΔᐃⵠⲆⲆΔ: 626,
    ⲆΔΔⵠⲆΔᐃ: 627,
    ⵠΔᐃᐃⲆⲆᐃ: 628,
    ⵠⵠⲆⵠⲆΔⵠ: 629,
    ⵠⲆΔⲆⲆⲆᐃ: 630,
    ΔΔΔΔᐃⵠⲆ: 631,
    ⲆΔⲆⲆⲆᐃⲆ: 632,
    ⵠᐃⲆᐃΔⵠⵠ: 633,
    ᐃΔⵠᐃΔⵠᐃ: 634,
    ⵠⲆⲆⲆⲆⵠⵠ: 635,
    ⵠⵠᐃⵠⵠΔⲆ: 636,
    ⲆⵠⲆᐃⲆ: 637,
    ᐃᐃⵠᐃΔⲆΔ: 638,
    ΔΔΔⵠⵠⵠᐃ: 639,
    ΔᐃⵠᐃⵠⵠⲆ: 640,
    ΔΔᐃΔᐃΔⲆ: 641,
    ⵠᐃΔᐃⵠᐃⵠ: 642,
    ᐃⵠⵠΔⲆⵠⲆ: 643,
    ⵠⲆΔⲆᐃⵠⲆ: 644,
    ⲆΔⵠⲆⲆΔⲆ: 645,
    ᐃⲆⲆΔᐃⲆΔ: 646,
    ⲆⵠⵠᐃΔᐃⵠ: 647,
    ⲆⵠᐃΔΔⲆᐃ: 648,
    ᐃΔΔΔᐃⲆΔ: 649,
    ΔⲆΔⵠⲆⲆᐃ: 650,
    ⲆⲆΔΔⵠⲆᐃ: 651,
    ⵠⵠᐃⵠⵠᐃⵠ: 652,
    ⵠᐃⵠⵠⲆᐃᐃ: 653,
    ⵠΔⵠⲆΔⲆⲆ: 654,
    ᐃⲆⵠⲆᐃᐃⵠ: 655,
    ⵠᐃΔᐃⵠⲆᐃ: 656,
    ᐃΔΔᐃⵠΔΔ: 657,
    ⵠΔᐃᐃⵠⲆΔ: 658,
    ⲆⲆᐃᐃⲆΔᐃ: 659,
    ΔⵠⲆⲆΔⵠⲆ: 660,
    ⲆⲆⵠΔⵠⲆⵠ: 661,
    ⲆⵠⵠΔΔᐃΔ: 662,
    ᐃᐃⲆⵠⵠⲆΔ: 663,
    ΔⲆᐃΔⲆᐃᐃ: 664,
    ⲆᐃⲆᐃΔΔΔ: 665,
    ⵠⲆⲆᐃⲆᐃᐃ: 666,
    ⲆΔⲆⲆⲆᐃΔ: 667,
    ΔⵠⲆⲆᐃᐃⵠ: 668,
    ᐃᐃᐃⲆⵠᐃⲆ: 669,
    ᐃⲆⲆⵠΔΔⵠ: 670,
    ⵠᐃⵠᐃΔᐃΔ: 671,
    ⵠΔΔᐃⵠⵠⲆ: 672,
    ⵠⲆΔᐃᐃ: 673,
    ⵠⵠΔΔⲆᐃⲆ: 674,
    ᐃⲆⵠⲆⲆⲆⵠ: 675,
    ⲆⲆⲆᐃᐃ: 676,
    ⲆΔⵠΔᐃΔᐃΔⲆ: 677,
    ΔⲆᐃᐃⲆΔΔ: 678,
    ΔⲆΔⵠΔ: 679,
    ᐃⵠΔΔⵠΔΔ: 680,
    ᐃⲆⲆΔⲆⵠⲆ: 681,
    ᐃΔᐃᐃΔⵠⲆ: 682,
    ᐃᐃΔⲆⲆⵠΔ: 683,
    ᐃᐃⲆⵠᐃⵠᐃ: 684,
    ⲆⲆᐃⲆΔⲆⲆ: 685,
    ⵠⵠΔⵠⵠΔⵠ: 686,
    ΔΔⲆⵠⵠΔΔ: 687,
    ᐃⲆᐃⲆⵠΔᐃ: 688,
    ΔⲆⵠⵠᐃⲆᐃ: 689,
    ⲆᐃᐃⲆᐃⵠᐃ: 690,
    ΔΔⲆᐃΔ: 691,
    ⵠΔⵠΔⵠ: 692,
    ⲆΔⵠΔⵠ: 693,
    ⵠᐃⵠⲆᐃ: 694,
    ᐃΔⲆᐃΔ: 695,
    ⲆΔΔᐃⵠⵠⲆ: 696,
    ⵠⲆΔⵠΔⲆⵠ: 697,
    ⲆⲆⲆⲆⲆⵠⵠ: 698,
    ΔⲆΔⵠᐃⵠⵠ: 699,
    ⲆⲆᐃⵠⵠᐃⲆ: 700,
    ᐃᐃⲆΔᐃⲆΔ: 701,
    ⲆⵠᐃⵠⲆᐃΔ: 702,
    ⵠⲆᐃᐃᐃⵠᐃ: 703,
    ᐃⵠⲆⵠᐃᐃᐃ: 704,
    ⵠⲆᐃⲆⵠᐃⲆ: 705,
    ᐃⵠⵠⲆⲆⲆΔ: 706,
    ⵠⵠⲆⲆᐃΔᐃ: 707,
    ᐃᐃᐃⲆⲆᐃⲆ: 708,
    ᐃᐃⵠᐃⵠᐃᐃ: 709,
    ᐃⲆⵠᐃΔⵠΔ: 710,
    ⵠᐃΔΔⲆΔⲆ: 711,
    ᐃⲆⵠΔᐃⵠᐃ: 712,
    ᐃᐃᐃΔⲆⲆᐃ: 713,
    ᐃΔᐃᐃⵠⵠⵠ: 714,
    ⲆΔⲆⲆⵠⵠᐃ: 715,
    ΔⲆⵠΔΔⲆⵠ: 716,
    ᐃᐃΔⵠⲆⲆᐃ: 717,
    ⲆⵠⲆᐃⲆΔⵠ: 718,
    ᐃᐃⵠⵠΔⲆⵠ: 719,
    ᐃᐃⵠⵠΔⲆΔ: 720,
    ΔᐃⲆⵠᐃᐃᐃΔⲆ: 721,
    ΔΔⲆᐃΔΔⲆ: 722,
    ⲆᐃⲆᐃᐃⵠⵠ: 723,
    ᐃⵠⵠⵠⲆⲆⵠ: 724,
    ⲆΔΔⲆⵠᐃⲆ: 725,
    ⵠᐃᐃⲆⵠᐃⲆ: 726,
    ⵠⵠⲆᐃΔΔΔ: 727,
    ⵠⵠⵠⵠⵠⵠᐃ: 728,
    ⲆᐃⵠⲆⵠⲆΔ: 729,
    ᐃⲆⲆᐃᐃΔΔ: 730,
    ⵠⲆⵠⵠⲆⵠᐃ: 731,
    ΔⵠⵠΔⲆⵠⲆ: 732,
    ⵠΔᐃΔⲆⵠΔ: 733,
    ⵠᐃⲆⲆΔⵠΔ: 734,
    ⵠⲆΔᐃᐃⲆⲆ: 735,
    ᐃⵠᐃⲆⲆⵠᐃ: 736,
    ⵠⵠⲆⵠΔᐃⲆ: 737,
    ⲆᐃⲆΔⵠΔⵠ: 738,
    ᐃⵠᐃⵠⵠΔΔ: 739,
    ⵠΔⲆⲆᐃⵠⵠ: 740,
    ⲆᐃⲆᐃⵠⵠⵠ: 741,
    ᐃⵠⵠᐃᐃⲆᐃ: 742,
    ⵠᐃⵠΔⵠⵠᐃ: 743,
    ⲆΔⵠᐃⵠⲆⵠ: 744,
    ⵠⲆᐃⵠⲆⲆⵠ: 745,
    ⲆᐃⲆΔⵠᐃᐃ: 746,
    ᐃⵠⵠΔⵠΔΔ: 747,
    ΔᐃᐃΔⵠᐃΔ: 748,
    ᐃⲆⲆⲆⲆΔΔ: 749,
    ⲆᐃᐃⵠⲆⲆⵠ: 750,
    ⵠᐃⵠΔⵠᐃⲆ: 751,
    ΔᐃΔᐃⲆᐃⲆ: 752,
    ᐃᐃⲆⲆᐃᐃⲆ: 753,
    ⲆΔⲆᐃΔᐃΔ: 754,
    ᐃⲆⵠᐃⵠΔⵠ: 755,
    ⵠⲆⵠᐃⵠᐃᐃ: 756,
    ΔΔᐃΔΔᐃᐃ: 757,
    ᐃⲆᐃΔⲆᐃᐃ: 758,
    ΔᐃΔΔᐃᐃᐃ: 759,
    ⲆⲆᐃΔᐃⵠⲆ: 760,
    ΔⲆⵠⲆᐃⵠⵠ: 761,
    ⲆΔᐃᐃΔᐃⲆ: 762,
    ᐃⵠⲆⲆᐃⲆᐃ: 763,
    ⲆΔⲆΔΔⲆⵠ: 764,
    ΔⲆⲆΔⵠⲆⲆ: 765,
    ⵠᐃᐃᐃⲆΔΔ: 766,
    ΔⵠⵠⲆᐃΔΔ: 767,
    ⵠᐃⵠΔΔⵠⵠ: 768,
    ⵠΔⵠⲆⲆⵠᐃ: 769,
    ⵠΔᐃᐃΔⲆΔ: 770,
    ΔⵠⲆΔΔⲆⲆ: 771,
    ΔΔⲆⵠⵠⲆⵠ: 772,
    ⲆΔⲆᐃΔⵠΔ: 773,
    ⵠⵠᐃᐃᐃⲆΔ: 774,
    ⵠΔⵠⵠⲆⲆⲆ: 775,
    ⲆΔΔᐃⲆᐃⲆ: 776,
    ⵠΔⵠᐃⵠᐃⲆ: 777,
    ΔᐃᐃⲆⲆⲆⲆ: 778,
    ᐃⲆΔⲆⵠⵠᐃ: 779,
    ⵠᐃΔΔΔΔⲆ: 780,
    ᐃΔⵠΔⵠΔΔ: 781,
    ⲆᐃⲆᐃⲆᐃᐃ: 782,
    ⲆⲆΔⲆᐃΔⲆ: 783,
    ⲆΔⵠⵠⵠⵠᐃ: 784,
    ΔᐃᐃⵠⲆᐃⵠ: 785,
    ⲆⲆΔⵠⵠᐃᐃ: 786,
    ΔⵠⵠⵠΔᐃⵠ: 787,
    ⵠΔΔⵠⵠⲆⲆ: 788,
    ⲆⵠⲆᐃΔⵠⲆ: 789,
    ΔⵠᐃΔΔⲆᐃ: 790,
    ⵠⲆⲆⲆΔⲆᐃ: 791,
    ⲆΔΔᐃⲆΔⵠ: 792,
    ᐃΔΔⲆΔ: 793,
    ⲆΔΔⲆⵠⵠΔ: 794,
    ⲆΔⵠΔΔΔΔ: 795,
    ᐃΔᐃⵠⵠ: 796,
    ⲆⵠⲆⲆⵠⲆⵠ: 797,
    ᐃᐃΔⲆⵠΔᐃ: 798,
    ⲆⲆⵠΔⵠΔⵠ: 799,
    ⵠⵠΔᐃᐃⲆⵠ: 800,
    ΔⲆⲆⵠᐃΔᐃ: 801,
    ⲆᐃⲆᐃᐃ: 802,
    ΔⲆΔᐃⲆⵠΔ: 803,
    ΔΔⲆᐃⲆᐃᐃᐃⵠ: 804,
    ΔᐃⵠⲆΔⲆⲆⵠⲆ: 805,
    ᐃⲆᐃⲆᐃᐃⵠⲆⵠ: 806,
    ⲆᐃⲆⲆⵠⲆᐃⵠᐃ: 807,
    ⲆΔⵠᐃⵠΔⲆ: 808,
    ᐃᐃⵠΔⵠⵠΔ: 809,
    Ⲇᐃᐃᐃⵠⵠⵠ: 810,
    ᐃΔᐃᐃᐃⵠᐃ: 811,
    ᐃᐃΔᐃΔᐃΔ: 812,
    ΔⵠⵠⲆⵠΔᐃ: 813,
    ⲆΔᐃⲆᐃᐃΔ: 814,
    ᐃᐃᐃⲆΔΔⲆ: 815,
    ⵠⵠⲆⵠⵠⵠᐃ: 816,
    ᐃⲆⲆΔⲆΔᐃ: 817,
    ⲆᐃΔⵠⲆ: 818,
    ᐃⵠⲆᐃⵠ: 819,
    ΔⵠΔⵠΔΔⵠ: 820,
    ⲆΔΔⵠⲆᐃΔ: 821,
    ᐃⲆⵠⲆΔᐃⵠ: 822,
    ᐃΔⵠᐃⵠⲆΔ: 823,
    ΔΔΔᐃⲆΔΔ: 824,
    ΔᐃᐃⵠⲆᐃⲆ: 825,
    ΔᐃⲆᐃⲆⲆⲆ: 826,
    ⲆΔΔⲆⲆᐃⲆ: 827,
    ΔⲆᐃⲆⵠᐃᐃ: 828,
    ᐃᐃⲆΔⵠᐃΔ: 829,
    ⲆⲆᐃⲆⲆⵠⲆ: 830,
    ⵠⵠⲆᐃⵠⲆⲆ: 831,
    ⵠⵠⲆⲆⵠᐃΔΔⲆ: 832,
    ⲆⵠΔⲆΔΔᐃⲆᐃ: 833,
    ΔᐃⵠⵠⵠⲆᐃ: 834,
    ᐃᐃⵠⲆΔⵠᐃ: 835,
    ΔⵠⵠⲆᐃΔⲆ: 836,
    ⲆⵠΔᐃΔⲆΔ: 837,
    ᐃᐃⵠⵠᐃΔⲆ: 838,
    ᐃΔΔⲆⵠᐃᐃ: 839,
    ΔᐃᐃⲆΔᐃⵠ: 840,
    ΔΔΔⲆⲆΔᐃ: 841,
    ⵠⵠⲆᐃΔⵠⵠ: 842,
    ⲆᐃΔⵠⲆΔⲆ: 843,
    ⵠΔΔΔΔⵠΔ: 844,
    ΔΔᐃⵠⲆᐃⲆ: 845,
    ᐃⵠᐃΔⵠᐃΔ: 846,
    ᐃΔⲆⵠᐃⵠᐃ: 847,
    ΔⲆⵠⲆⲆᐃⲆ: 848,
    ⲆΔⲆᐃᐃⲆⲆ: 849,
    ⲆᐃΔᐃⵠΔⵠ: 850,
    ΔⲆⲆⲆⲆⵠⲆ: 851,
    ᐃᐃⵠᐃᐃΔᐃΔΔ: 852,
    ᐃⵠⲆⲆΔⲆⵠ: 853,
    ⲆᐃΔⵠᐃ: 854,
    ΔᐃᐃΔⲆᐃⲆΔⵠ: 855,
    ⵠⵠΔᐃⵠΔΔⵠΔ: 856,
    ⲆⵠΔⵠΔⲆᐃΔⵠ: 857,
    ᐃΔⵠᐃΔᐃⵠΔᐃ: 858,
    ΔⲆⵠᐃΔᐃΔ: 859,
    ⵠΔⵠΔⲆᐃΔ: 860,
    ⲆⵠⲆΔΔⲆᐃ: 861,
    ⲆΔΔⲆᐃⲆⵠ: 862,
    ΔᐃΔⵠⲆⲆᐃ: 863,
    ᐃⲆⵠΔⵠΔΔⵠΔ: 864,
    ⵠⲆⵠⲆᐃᐃⲆ: 865,
    ⲆᐃⵠΔⵠᐃⵠ: 866,
    ᐃΔᐃⲆΔΔᐃ: 867,
    ΔⵠᐃΔⲆΔⵠ: 868,
    ΔᐃⲆᐃⵠΔⲆ: 869,
    ⲆⵠⵠᐃᐃᐃⲆ: 870,
    ⲆⲆᐃᐃΔⲆⲆ: 871,
    ⵠᐃᐃᐃⵠ: 872,
    ⵠⲆᐃᐃΔΔⵠΔᐃ: 873,
    ΔᐃⵠᐃᐃᐃⲆ: 874,
    ⲆᐃⵠΔⵠⲆⲆ: 875,
    ΔᐃΔᐃᐃΔⵠ: 876,
    ᐃᐃⲆΔⲆᐃⲆ: 877,
    ΔⵠⲆΔΔⲆΔ: 878,
    ⲆᐃᐃΔⲆΔΔ: 879,
    ΔⵠΔⲆⲆΔᐃ: 880,
    ᐃᐃⲆΔⲆΔⵠ: 881,
    ᐃⵠΔⵠΔΔⲆ: 882,
    ⵠᐃⵠⲆᐃᐃΔ: 883,
    ᐃΔᐃⲆⲆⵠΔ: 884,
    ΔⲆⲆΔⲆᐃⲆ: 885,
    ⲆⲆΔⵠᐃᐃᐃ: 886,
    ΔⲆΔⵠⵠ: 887,
    ᐃⲆⲆⵠⲆᐃⲆ: 888,
    ΔᐃⵠᐃΔⲆΔ: 889,
    ΔⵠⵠⵠⲆⵠⵠ: 890,
    ⲆⲆᐃⲆⵠⵠΔ: 891,
    ⵠᐃΔⵠⵠΔⲆ: 892,
    ΔⲆⵠᐃⲆᐃⵠ: 893,
    ⵠⵠᐃⲆⲆⲆᐃ: 894,
    ⵠⲆⲆⵠⵠⲆᐃ: 895,
    ⲆΔᐃⵠΔⲆΔ: 896,
    ⵠᐃⵠΔⵠⲆⵠ: 897,
    ⵠΔᐃΔΔΔⵠ: 898,
    ⵠⵠⲆⲆΔᐃⵠ: 899,
    ᐃᐃⲆΔᐃⵠᐃ: 900,
    ᐃⵠᐃⲆᐃⲆΔ: 901,
    ΔΔⲆⲆΔΔᐃ: 902,
    ⲆⵠΔⵠⵠⵠⵠ: 903,
    ΔⵠⵠⲆⲆⲆΔ: 904,
    ΔᐃΔΔⵠⲆⲆ: 905,
    ᐃⲆⵠΔⵠΔΔ: 906,
    ⵠᐃΔΔᐃⵠᐃ: 907,
    ᐃΔⵠⵠⲆⲆᐃ: 908,
    ⲆᐃⲆᐃᐃⵠⲆ: 909,
    ⵠⲆᐃᐃⲆⵠΔ: 910,
    ᐃΔᐃⲆⵠⲆⲆ: 911,
    ⲆΔⲆⵠᐃⵠⵠ: 912,
    ⲆᐃⵠⲆⵠΔⲆ: 913,
    ᐃᐃⵠᐃΔΔⲆΔⲆ: 914,
    ⲆᐃᐃΔⵠⵠⲆⲆⵠ: 915,
    ⲆΔⵠΔᐃⲆᐃΔᐃ: 916,
    ᐃⵠΔᐃΔᐃᐃⲆᐃ: 917,
    Ⲇⵠⵠᐃⵠᐃⵠ: 918,
    ⲆⲆⲆᐃᐃⵠΔ: 919,
    ᐃⲆⲆⲆΔ: 920,
    ΔΔⵠΔΔⲆᐃ: 921,
    ΔᐃᐃΔΔⵠⵠ: 922,
    ⲆᐃⲆᐃᐃⲆᐃ: 923,
    ᐃⲆΔΔΔⲆⲆ: 924,
    ᐃᐃⲆᐃⵠⲆΔ: 925,
    ⲆⵠΔᐃⲆᐃⲆ: 926,
    ΔᐃᐃⲆᐃΔⵠ: 927,
    ΔΔΔᐃⲆⵠⲆ: 928,
    ⲆᐃⵠᐃᐃⲆⵠ: 929,
    ᐃⲆⵠⲆⲆΔⵠ: 930,
    ΔⵠⲆΔⵠΔⲆ: 931,
    ᐃΔⵠⲆⵠⲆΔ: 932,
    ᐃΔΔᐃᐃⵠᐃ: 933,
    ᐃⲆᐃⲆΔᐃΔ: 934,
    ᐃᐃᐃΔⵠⲆᐃ: 935,
    ᐃᐃΔᐃⵠΔⲆ: 936,
    ᐃᐃΔᐃⵠᐃΔ: 937,
    ᐃⵠⲆΔⲆⵠⵠ: 938,
    ᐃᐃΔΔᐃⵠⵠ: 939,
    ᐃΔⵠΔΔⵠΔΔᐃ: 940,
    ΔⲆΔΔΔ: 941,
    ⲆᐃΔⲆⵠⵠⵠ: 942,
    ⵠΔⵠᐃᐃᐃⲆ: 943,
    ⵠᐃΔⲆⵠᐃⵠ: 944,
    ΔⲆᐃⲆⲆΔⲆ: 945,
    ⲆⵠᐃⲆⵠΔΔ: 946,
    ΔᐃⵠᐃⲆⲆΔ: 947,
    ⲆⵠⵠᐃⲆΔⵠ: 948,
    ΔΔΔⲆⵠᐃⵠ: 949,
    ΔᐃⲆⵠⲆΔⵠ: 950,
    ⲆᐃⵠΔⲆᐃⲆ: 951,
    ΔⲆΔⵠⵠⲆᐃ: 952,
    ⲆⵠⵠⲆⵠΔΔ: 953,
    ᐃΔⵠΔᐃᐃᐃ: 954,
    ⵠΔΔⵠⲆⲆᐃ: 955,
    ΔΔᐃΔⵠΔⲆ: 956,
    ⵠΔⲆΔᐃΔΔ: 957,
    ᐃⲆⲆⲆⲆΔᐃ: 958,
    ⵠⵠⲆⲆΔⵠⵠ: 959,
    ⵠΔⵠⲆΔᐃⵠ: 960,
    ⵠΔⲆΔΔΔΔ: 961,
    ΔⲆΔⲆᐃᐃⲆ: 962,
    ⲆⵠᐃⲆΔⵠⲆ: 963,
    ⲆΔⵠⵠᐃⲆⵠᐃᐃ: 964,
    ᐃΔᐃⵠⵠᐃⲆ: 965,
    ⵠᐃⵠⵠᐃΔⵠ: 966,
    ⲆᐃⲆᐃΔⲆⲆ: 967,
    ⲆᐃΔⵠⲆⵠⲆ: 968,
    ⵠⵠⵠⲆᐃⵠᐃ: 969,
    ΔΔⵠΔⲆᐃⵠ: 970,
    ⵠⲆⲆΔⲆⵠᐃ: 971,
    ⵠΔᐃⲆⲆⲆⵠ: 972,
    ⲆⲆᐃⵠⵠⲆΔ: 973,
    ⵠΔⵠᐃᐃΔⵠ: 974,
    ΔΔⲆΔⵠⵠΔ: 975,
    ΔΔⲆᐃᐃΔⲆ: 976,
    ΔⵠⵠΔᐃⵠΔ: 977,
    ΔΔⵠⲆΔᐃᐃ: 978,
    ᐃΔⵠⲆΔⲆᐃ: 979,
    ᐃΔᐃⲆⵠᐃⲆ: 980,
    ΔᐃⵠΔⵠΔⲆ: 981,
    ᐃⵠᐃΔⲆⲆⵠ: 982,
    ⵠⲆΔⲆⲆᐃⲆ: 983,
    ⲆᐃᐃΔᐃⵠᐃ: 984,
    ⵠⲆⵠᐃⲆᐃⲆ: 985,
    ΔΔᐃᐃΔⲆⵠ: 986,
    ⵠΔᐃⲆᐃⲆᐃ: 987,
    ΔⵠᐃⵠⲆΔⵠ: 988,
    ⲆⵠⲆⵠⵠ: 989,
    ⲆΔΔΔⲆⵠᐃ: 990,
    ⲆΔΔⲆⲆⵠⵠ: 991,
    ⵠᐃⵠΔΔᐃⵠ: 992,
    ⵠⵠⵠⵠⲆⵠⵠ: 993,
    ⵠΔΔᐃΔⵠⵠ: 994,
    ΔⲆⵠⵠⲆΔⲆ: 995,
    ⵠΔⵠⲆᐃⵠⵠ: 996,
    ⲆⲆΔⲆΔⲆΔ: 997,
    ᐃᐃⵠΔⵠᐃⵠ: 998,
    ⲆᐃⲆΔⵠⲆⵠ: 999,
    ⲆᐃⲆΔⵠⵠΔ: 1000,
    ΔⲆⲆᐃΔΔΔ: 1001,
    ⵠⲆⵠⵠΔⵠᐃ: 1002,
    ΔΔΔᐃⵠΔⵠ: 1003,
    ᐃΔⵠᐃⵠᐃΔ: 1004,
    ᐃΔΔⵠΔⵠⲆ: 1005,
    ΔⲆⵠΔᐃΔⵠ: 1006,
    ᐃΔΔⲆᐃᐃⲆ: 1007,
    ΔⲆⵠᐃⵠⵠΔ: 1008,
    ⵠⲆⲆⵠᐃΔⲆ: 1009,
    ⵠⵠⲆⵠᐃᐃᐃ: 1010,
    ᐃⲆⵠᐃⵠᐃΔ: 1011,
    ⵠᐃⵠᐃⵠⵠᐃ: 1012,
    ⵠᐃⲆⲆᐃⲆΔ: 1013,
    ⵠᐃΔΔⲆᐃⲆ: 1014,
    ΔⲆⵠᐃⵠΔⵠ: 1015,
    ⵠΔⵠⲆⵠⵠⵠ: 1016,
    ΔⵠⲆⵠᐃⲆⵠ: 1017,
    ᐃᐃⲆⵠⵠΔⵠ: 1018,
    ⵠⵠΔⲆⲆᐃⵠ: 1019,
    ⵠΔⵠⲆⲆⲆᐃ: 1020,
    ΔⲆⲆⲆΔᐃΔ: 1021,
    ⵠᐃΔⲆⲆᐃΔ: 1022,
    ᐃⵠⲆᐃⵠΔᐃ: 1023,
    ᐃᐃⵠⵠ: 1024,
    ᐃΔⵠⵠ: 1025,
    ⲆΔⵠⲆⵠⲆⲆ: 1026,
    ᐃᐃᐃⵠⲆᐃⲆ: 1027,
    ⵠⲆⲆΔᐃⵠⲆ: 1028,
    ⵠⵠᐃΔⲆⵠΔ: 1029,
    ⲆⲆΔΔⵠΔᐃ: 1030,
    ΔⲆᐃⲆᐃⵠΔ: 1031,
    ᐃⵠΔᐃⲆⲆΔ: 1032,
    ᐃⲆⲆⵠΔ: 1033,
    Δᐃⵠⵠᐃᐃᐃ: 1034,
    ΔⵠⵠΔᐃ: 1035,
    ⲆⲆⲆᐃⲆΔⵠ: 1036,
    ΔⲆⵠⵠΔ: 1037,
    ᐃⲆΔⵠΔᐃᐃ: 1038,
    ⵠⵠⲆᐃⵠ: 1039,
    ΔⲆᐃΔᐃⲆⲆ: 1040,
    ⲆΔⵠᐃᐃ: 1041,
    ⵠᐃⵠΔⵠ: 1042,
    ΔΔΔⲆⲆⵠᐃ: 1043,
    ⵠΔᐃΔΔⵠᐃ: 1044,
    ⵠᐃΔⵠᐃⵠⲆ: 1045,
    ΔᐃⵠΔⲆⲆⲆ: 1046,
    ᐃᐃᐃᐃᐃᐃΔ: 1047,
    ⵠⲆⲆᐃΔΔᐃ: 1048,
    ⵠᐃᐃⲆΔⲆΔ: 1049,
    ⲆΔⲆⵠⲆⵠⲆ: 1050,
    ᐃⲆΔΔⲆΔⲆ: 1051,
    ᐃΔⲆⵠΔ: 1052,
    ⲆᐃⵠⲆⵠΔᐃ: 1053,
    ᐃⲆⵠᐃⲆ: 1054,
    ⵠⲆΔⵠⵠᐃΔ: 1055,
    ΔⲆΔΔΔᐃΔ: 1056,
    ⵠΔᐃⵠΔᐃΔ: 1057,
    ΔᐃⲆΔΔⵠᐃ: 1058,
    ᐃⵠᐃⵠΔⲆⵠ: 1059,
    ⲆᐃΔΔΔⵠⵠ: 1060,
    ΔⵠᐃᐃΔⵠⲆⵠⵠ: 1061,
    ᐃΔᐃᐃᐃⲆⵠ: 1062,
    ⵠⲆⲆⵠΔΔⲆ: 1063,
    ⲆΔᐃⵠᐃΔⵠᐃⵠ: 1064,
    ΔⵠⵠⵠⲆⲆⲆ: 1065,
    ⵠⲆⵠⲆᐃⲆᐃ: 1066,
    ΔⵠⵠᐃᐃᐃΔ: 1067,
    ⲆⲆⲆⲆᐃⲆⵠ: 1068,
    ⲆⵠΔΔᐃ: 1069,
    ΔᐃⲆᐃⲆⵠᐃ: 1070,
    ⲆΔⵠΔᐃᐃΔ: 1071,
    ⵠⵠⲆΔᐃⲆᐃ: 1072,
    ⲆᐃⵠᐃΔⲆᐃ: 1073,
    ᐃᐃⲆⲆᐃⲆΔ: 1074,
    ⵠΔⵠᐃⲆⲆⵠ: 1075,
    ⲆᐃΔⲆΔᐃΔ: 1076,
    ᐃⵠⲆⵠⲆⵠᐃ: 1077,
    ΔΔᐃᐃΔΔⲆ: 1078,
    ᐃⵠΔᐃⲆᐃΔ: 1079,
    ᐃⵠⲆⵠⲆΔᐃ: 1080,
    ᐃⲆΔᐃⵠΔⲆ: 1081,
    ⲆⲆⲆⵠΔᐃΔ: 1082,
    ⲆᐃⲆⵠᐃⵠᐃ: 1083,
    ᐃᐃΔⲆΔ: 1084,
    ⵠⲆⲆΔΔⲆⵠ: 1085,
    ΔⲆⲆⵠᐃⲆΔ: 1086,
    ΔΔⵠⵠⵠΔⵠ: 1087,
    ΔᐃⵠΔⵠᐃⲆ: 1088,
    ⲆⵠⵠⵠⲆΔᐃ: 1089,
    ᐃΔᐃⵠⵠᐃΔ: 1090,
    ⵠⲆⵠⲆᐃΔⲆ: 1091,
    ΔⵠⲆⲆΔΔΔ: 1092,
    ⲆⵠⵠᐃⲆⵠⵠ: 1093,
    ⵠⲆⵠΔⲆΔⲆ: 1094,
    ⲆΔΔᐃᐃΔⵠ: 1095,
    ᐃΔΔΔᐃΔⲆ: 1096,
    ΔΔⵠⵠⲆᐃΔ: 1097,
    ⲆⲆⲆⵠⵠⵠⲆ: 1098,
    ΔᐃⲆΔᐃ: 1099,
    ⵠⲆΔΔⲆΔⲆ: 1100,
    ⵠⵠⲆΔᐃⲆΔ: 1101,
    ᐃⵠᐃⵠΔᐃⲆ: 1102,
    ᐃⵠΔΔΔᐃⲆ: 1103,
    ΔⲆᐃΔⵠᐃⵠ: 1104,
    ᐃΔⲆⵠⲆᐃΔ: 1105,
    ΔⲆΔᐃΔΔΔ: 1106,
    ⵠΔⵠⵠⵠᐃⵠ: 1107,
    ⲆⲆⲆᐃⲆⲆⵠ: 1108,
    ΔⵠⵠⲆᐃⵠᐃ: 1109,
    ᐃⲆⲆⵠᐃΔⲆ: 1110,
    ΔᐃⲆⲆᐃᐃΔ: 1111,
    ΔⵠⲆΔⵠⲆᐃ: 1112,
    ΔⲆΔᐃⲆⲆⲆ: 1113,
    ⵠΔⲆᐃΔᐃⵠ: 1114,
    ΔⲆΔᐃΔᐃⲆ: 1115,
    ⵠΔⵠᐃⲆⵠⲆ: 1116,
    ᐃⵠⲆᐃΔⵠⵠ: 1117,
    ᐃⵠⵠΔᐃΔΔ: 1118,
    ΔⵠᐃⲆᐃᐃⲆ: 1119,
    ⲆᐃΔᐃᐃ: 1120,
    ⵠᐃᐃⲆⲆᐃⲆ: 1121,
    ⵠᐃⵠⲆΔⲆⲆ: 1122,
    ᐃⵠΔⲆᐃⲆⲆ: 1123,
    ΔⲆⲆᐃⵠⲆᐃ: 1124,
    ΔΔⲆⵠⲆΔⲆ: 1125,
    ⵠⲆⲆΔΔΔᐃ: 1126,
    ⲆΔΔⵠⲆΔⲆ: 1127,
    ⲆᐃΔΔΔⲆⲆ: 1128,
    ᐃⲆⵠΔⵠⲆᐃ: 1129,
    ⵠⵠⲆⵠⲆΔΔ: 1130,
    ᐃⲆΔᐃᐃⵠᐃ: 1131,
    Δⵠⵠᐃⵠⵠᐃ: 1132,
    ⵠⲆᐃⲆΔⲆΔ: 1133,
    ΔⲆⲆΔⵠᐃⲆ: 1134,
    ᐃⲆΔⵠΔⲆⲆ: 1135,
    ⲆⲆΔᐃᐃΔΔ: 1136,
    ΔᐃΔⲆⵠⵠᐃ: 1137,
    ᐃⲆᐃⲆⲆⲆⵠ: 1138,
    ⲆⵠⲆᐃⲆⵠⵠ: 1139,
    ⲆⲆⲆⲆΔᐃⵠ: 1140,
    ⵠⵠΔⵠᐃᐃⲆ: 1141,
    ⵠⵠⲆⲆᐃⲆᐃ: 1142,
    ᐃᐃΔⲆΔⲆⲆ: 1143,
    ⲆΔⵠⲆⵠⵠⲆ: 1144,
    ΔᐃΔⲆⲆΔΔ: 1145,
    ᐃⵠⵠᐃⲆⵠⵠ: 1146,
    ᐃⵠᐃⵠⵠⲆᐃ: 1147,
    Δⵠⵠⵠⵠᐃᐃ: 1148,
    ΔΔΔⲆΔᐃΔ: ["#E9CF96", "#144940"],
    ᐃΔΔΔⵠⲆⵠ: 1149,
    ⵠᐃᐃⵠᐃⵠΔ: 1150,
    ⲆⵠⵠᐃΔⵠⲆ: 1151,
    ⲆⲆᐃⲆⲆᐃᐃ: 1152,
    ⵠⲆᐃⲆΔᐃⲆ: 1153,
    ᐃΔᐃᐃΔΔΔ: 1154,
    ΔⲆⲆⲆᐃᐃΔ: 1155,
    ⵠᐃΔᐃⵠ: 1156,
    ΔⲆⵠⵠⲆΔᐃ: 1157,
    ⵠⲆᐃᐃⲆΔᐃ: 1158,
    ⲆⵠⵠᐃᐃⲆΔ: 1159,
    ΔΔⵠᐃⵠⵠΔ: 1160,
    ᐃᐃΔⲆΔᐃⵠ: 1161,
    ΔⵠⵠⵠⵠⵠΔ: 1162,
    ᐃⲆⲆⲆᐃᐃⲆ: 1163,
    ᐃᐃᐃⲆᐃⲆᐃ: 1164,
    ΔⵠΔΔΔΔᐃ: 1165,
    ⲆⲆᐃⵠᐃᐃⵠ: 1166,
    ⲆΔᐃᐃⲆⵠΔ: 1167,
    ᐃⵠⲆⵠⲆΔⲆ: 1168,
    ⲆΔⲆᐃᐃⵠⵠ: 1169,
    ᐃⲆᐃΔⵠΔⲆ: 1170,
    ΔⵠᐃᐃⲆᐃᐃ: 1171,
    ᐃⲆΔΔⵠⵠᐃ: 1172,
    ⲆⲆᐃⲆⵠⵠⵠ: 1173,
    ᐃᐃᐃᐃΔⵠⵠ: 1174,
    ᐃᐃⵠᐃⲆΔΔ: 1175,
    ⲆⵠⵠᐃⲆΔᐃ: 1176,
    ⵠᐃⲆⵠⲆΔⵠ: 1177,
    ⵠⵠΔΔⵠᐃⵠ: 1178,
    ⲆⲆΔⵠⵠᐃⵠ: 1179,
    ΔᐃΔᐃᐃⵠⵠ: 1180,
    ᐃⵠΔⲆⵠΔᐃ: 1181,
    ⲆΔΔⲆᐃⵠⵠ: 1182,
    ᐃⲆᐃΔΔⲆⵠ: 1183,
    ΔⲆΔᐃⲆⵠⲆ: 1184,
    ⵠⲆᐃᐃᐃⵠⲆ: 1185,
    ᐃⲆⲆΔⵠⲆᐃ: 1186,
    ⵠᐃᐃⵠᐃᐃΔ: 1187,
    ᐃⵠⲆΔⲆⲆⵠ: 1188,
    ⵠΔΔᐃᐃⵠⲆ: 1189,
    ⲆᐃⲆⵠΔⵠⵠ: 1190,
    ⲆⵠⵠⲆⵠⲆⲆ: 1191,
    ⵠⵠⵠⵠΔᐃᐃ: 1192,
    ΔⵠⵠΔⲆᐃⵠ: 1193,
    ⵠᐃⲆᐃΔⲆⲆ: 1194,
    ᐃⲆⲆⵠⵠⲆᐃ: 1195,
    ΔΔᐃⲆⵠᐃⲆ: 1196,
    ΔΔⵠⲆᐃᐃⲆ: 1197,
    ⲆᐃΔⲆΔⲆΔ: 1198,
    ⲆᐃⲆΔⵠⵠⵠ: 1199,
    ᐃᐃⲆᐃⲆⵠᐃ: 1200,
    Δᐃᐃⵠᐃⵠᐃ: 1201,
    ΔᐃⲆⲆᐃΔⵠ: 1202,
    ΔⵠⵠᐃⵠⲆᐃ: 1203,
    ⵠᐃⵠⵠⲆⵠΔ: 1204,
    ᐃᐃⲆⵠⲆⲆᐃ: 1205,
    ᐃΔⲆⵠⲆⵠᐃ: 1206,
    ⲆᐃΔΔΔᐃⲆ: 1207,
    ᐃⲆΔⲆᐃᐃΔ: 1208,
    ΔⲆΔⵠⲆⲆⵠ: 1209,
    ⵠⵠΔᐃⵠΔᐃ: 1210,
    ΔⵠⵠⲆⲆⵠᐃ: 1211,
    ΔⵠⵠⵠᐃⵠⲆ: 1212,
    ᐃΔⵠⵠΔⵠⵠ: 1213,
    ΔⲆⲆⲆΔΔᐃ: 1214,
    ᐃΔΔⵠⵠΔΔ: 1215,
    ⲆᐃΔⲆᐃᐃᐃ: 1216,
    ΔΔΔⲆⵠⵠΔ: 1217,
    Δᐃᐃᐃⵠ: 1218,
    ΔⵠⵠΔΔⵠᐃ: 1219,
    ⵠΔᐃⲆᐃ: 1220,
    ⵠⵠⵠⵠⲆᐃᐃ: 1221,
    ΔⲆⵠᐃΔⵠᐃ: 1222,
    ⵠⲆⵠΔⵠⵠⲆ: 1223,
    ᐃⲆΔⵠⲆⲆᐃ: 1224,
    ᐃᐃΔᐃⵠΔⵠ: 1225,
    ⲆᐃΔⵠⲆⲆⵠ: 1226,
    ΔΔⲆⵠΔᐃᐃ: 1227,
    ⲆΔⵠΔᐃᐃⲆ: 1228,
    ⵠᐃⵠⵠⲆᐃⲆ: 1229,
    ΔⵠⵠⵠⲆΔⵠ: 1230,
    ΔⵠΔΔΔⲆⲆ: 1231,
    ΔⵠⲆⵠΔΔⲆ: 1232,
    ⲆⵠⲆᐃⲆΔⲆ: 1233,
    ΔⲆⵠⲆⲆⵠΔ: 1234,
    ᐃⵠⲆΔΔᐃⲆ: 1235,
    ᐃᐃᐃⲆⲆⵠΔ: 1236,
    ᐃᐃΔⵠⵠᐃⵠ: 1237,
    ⵠᐃᐃⲆᐃⲆᐃ: 1238,
    ΔᐃΔΔᐃⲆᐃ: 1239,
    ΔΔⲆᐃⵠΔᐃ: 1240,
    ΔⲆⲆⲆᐃⲆᐃ: 1241,
    ⵠⵠΔᐃⲆΔⲆ: 1242,
    ⲆΔⵠⵠΔⵠⲆ: 1243,
    ᐃⵠⲆⵠⲆᐃΔ: 1244,
    ⲆᐃⲆᐃΔᐃⲆ: 1245,
    ⵠⲆΔΔⵠⲆⲆ: 1246,
    ᐃᐃⵠⲆⲆⲆᐃ: 1247,
    ⲆⲆⵠᐃΔΔΔ: 1248,
    ⵠΔⵠΔⲆⲆⲆ: 1249,
    ⵠⵠⵠⵠⲆΔⲆ: 1250,
    ᐃΔⵠⵠⵠΔⲆ: 1251,
    ᐃΔᐃⵠⲆⵠⵠ: 1252,
    ᐃⲆᐃᐃⲆⲆⲆ: 1253,
    ᐃⵠⲆⵠᐃⲆⲆ: 1254,
    ⵠΔⵠΔⵠᐃⵠ: 1255,
    ⵠⵠⲆᐃΔⵠᐃ: 1256,
    ΔᐃⵠⵠΔⲆⲆ: 1257,
    ᐃⲆᐃⵠΔᐃⵠ: 1258,
    ᐃⲆⵠΔⲆΔᐃ: 1259,
    ΔᐃΔⵠⵠⲆⵠ: 1260,
    ⲆⵠΔΔΔⵠⵠ: 1261,
    ᐃΔⵠΔᐃᐃⲆ: 1262,
    ⵠⵠⵠⲆΔΔΔ: 1263,
    ᐃⲆⲆᐃⲆⲆᐃ: 1264,
    ⵠⲆⵠᐃΔⵠⲆ: 1265,
    ΔⵠⲆΔⲆΔᐃ: 1266,
    ⲆᐃΔⵠⵠⲆⲆ: 1267,
    ΔⵠⵠⵠⲆⵠⲆ: 1268,
    ΔΔⵠΔⵠᐃᐃ: 1269,
    ⵠᐃΔᐃⵠⲆΔ: 1270,
    ΔᐃⲆⵠⵠᐃΔ: 1271,
    ⲆⵠᐃᐃᐃⲆΔ: 1272,
    ⵠⲆⲆⵠⲆΔΔ: 1273
  };
  v623 = 0;
  var v625 = {
    ⲆⲆᐃⵠⲆ: 0,
    ⵠΔⵠⵠΔ: 1,
    ⲆᐃΔⲆⲆ: 2,
    ΔΔⲆⲆⵠ: 3,
    ᐃⲆᐃⵠⲆ: 4,
    ⲆⲆᐃⲆⲆ: 5,
    ⲆΔΔⲆⲆ: 6,
    ⲆΔⲆᐃΔ: 7,
    ΔⲆΔΔᐃ: 8,
    Δⵠⵠᐃᐃ: 9,
    ⵠⲆⵠΔᐃ: 10,
    ⲆⲆⲆⵠⵠ: 11,
    ⲆΔΔΔΔ: 12,
    ᐃⵠⵠΔⲆ: 13,
    ᐃⲆⲆΔⵠ: 14,
    Ⲇᐃᐃⵠⵠ: 15,
    ⵠΔⵠᐃⵠ: 16,
    ᐃⲆⵠⵠⲆ: 17,
    ᐃΔⲆⵠᐃ: 18,
    ᐃᐃΔⵠᐃ: 19,
    ⲆΔⵠⵠⲆ: 20,
    ΔⲆⲆᐃⵠ: 21,
    ᐃⵠΔⲆΔ: 22,
    ⵠⲆᐃΔᐃ: 23,
    ⵠⲆΔⲆⲆ: 24,
    ΔΔⵠΔⲆ: 25,
    ⵠᐃᐃⵠⲆ: 26,
    ⲆᐃⵠΔᐃ: 27,
    ΔᐃⵠΔΔ: 28,
    ⲆᐃⲆᐃⲆ: 29,
    ⲆΔᐃΔⲆ: 30,
    ᐃΔᐃΔⵠ: 31,
    ᐃᐃⲆⲆⵠ: 32,
    ᐃⵠⵠᐃΔ: 33,
    ⵠⵠΔᐃᐃ: 34,
    ΔⲆⵠΔΔ: 35,
    ⵠⲆⲆⲆᐃ: 36,
    ⵠᐃⲆΔΔ: 37,
    ⲆⲆᐃΔᐃ: 38,
    Ⲇᐃᐃᐃⵠ: 39,
    ⲆᐃᐃⲆⵠ: 40,
    ᐃΔᐃᐃⵠ: 41,
    ᐃᐃΔⵠⵠ: 42,
    ⲆΔᐃⵠⵠ: 43,
    ΔⵠᐃΔᐃ: 44,
    ⵠᐃᐃΔⲆ: 45,
    ⵠΔⵠⲆⲆ: 46,
    ⲆᐃⵠⲆⲆ: 47,
    ᐃⲆᐃⵠᐃ: 48,
    ⵠⲆⲆⵠⵠ: 49,
    ᐃᐃⵠⲆΔ: 50,
    ⵠⲆᐃΔⲆ: 51,
    ΔᐃⵠⵠⲆ: 52,
    ⵠⵠⵠⵠΔ: 53,
    ᐃᐃᐃΔⲆ: 54,
    ΔᐃⲆΔⲆ: 55,
    ⲆⲆⵠⲆΔ: 56,
    ΔΔΔⲆⲆ: 57,
    ⵠⲆⵠⵠⵠ: 58,
    ΔⵠᐃᐃⲆ: 59,
    ΔⲆⵠⲆⵠ: 60,
    ᐃᐃⲆΔᐃ: 61,
    ΔΔⵠⵠᐃ: 62,
    ᐃⵠⵠΔΔ: 63,
    ⵠΔⲆⵠΔ: 64,
    ΔⵠΔⲆΔ: 65,
    ᐃⲆᐃᐃΔ: 66,
    ⵠᐃΔⲆᐃ: 67,
    ΔⵠᐃⲆᐃ: 68,
    ΔΔᐃⲆᐃ: 69,
    ⲆᐃᐃΔⵠ: 70,
    ΔΔⵠⵠⵠ: 71,
    ᐃᐃⲆⵠΔ: 72,
    ᐃⵠⵠⲆⵠ: 73,
    ⲆⵠΔⲆⵠ: 74,
    ⵠⲆΔΔΔ: 75,
    ⲆΔΔⲆΔ: 76,
    ⲆᐃΔΔⵠ: 77,
    ᐃΔΔⲆᐃ: 78,
    ⵠᐃⵠΔⲆ: 79,
    ᐃᐃⵠⵠΔ: 80,
    ΔΔⲆⲆⲆ: 81,
    ᐃⲆᐃⲆⵠ: 82,
    ᐃⲆΔⵠⵠ: 83,
    ᐃⲆⵠⲆⵠ: 84,
    ⲆᐃΔᐃΔ: 85,
    ⵠⲆΔⵠⲆ: 86,
    ᐃⲆᐃⲆᐃ: 87,
    ΔᐃⲆⲆⲆ: 88,
    ⲆΔᐃΔⵠ: 89,
    ⲆⵠⲆⲆⲆ: 90,
    Δᐃᐃᐃᐃ: 91,
    ΔΔᐃᐃⵠ: 92,
    ⲆⵠᐃⲆⵠ: 93,
    ⵠΔⵠΔᐃ: 94,
    ⲆⵠΔΔⵠ: 95,
    ᐃᐃΔᐃᐃ: 96,
    ΔⲆᐃⵠΔ: 97,
    ⵠᐃΔⲆⵠ: 98,
    ⲆⵠⲆΔⲆ: 99,
    Δⵠⵠⵠ: 100,
    ⵠⲆⵠΔⵠ: 101,
    ΔᐃᐃᐃΔ: 102,
    ⲆᐃΔΔΔ: 103,
    ᐃⲆⵠᐃⵠ: 104,
    ⵠⲆΔᐃΔ: 105,
    ⵠΔΔΔᐃ: 106,
    ΔⲆⲆᐃΔ: 107,
    ΔⲆⵠᐃⵠ: 108,
    ΔⵠⲆⵠⲆ: 109,
    ⲆⵠᐃⲆΔ: 110,
    ⲆᐃⲆⲆΔ: 111,
    ᐃⲆⵠΔⲆⲆⲆ: 112,
    ᐃᐃᐃⲆᐃΔᐃ: 113,
    ᐃᐃⲆⵠⲆ: 114,
    ⵠⵠΔΔⲆ: 115,
    ⵠⵠⵠΔⲆ: 116,
    ⵠⵠᐃⵠΔ: 117,
    ΔⵠᐃⲆⲆ: 118,
    ᐃⲆΔⵠⲆ: 119,
    ⲆⲆᐃⵠᐃ: 120,
    ᐃΔᐃΔⲆ: 121,
    ⲆΔⲆⵠⵠ: 122,
    ⲆᐃΔⲆⵠ: 123,
    ⵠΔΔΔⲆ: 124,
    ᐃⲆⲆⵠⵠ: 125,
    ΔᐃⲆᐃΔ: 126,
    ⲆᐃΔⲆΔ: 127,
    ΔⵠⲆᐃⵠ: 128,
    ⵠᐃⲆⲆΔ: 129,
    ⵠΔⵠⵠᐃ: 130,
    ΔⲆΔᐃΔ: 131,
    ⲆⲆⵠΔᐃ: 132,
    Δⵠⵠⵠⵠ: 133,
    ΔΔⵠΔΔ: 134,
    ᐃⵠⵠⵠⲆ: 135,
    ⵠΔᐃⲆΔ: 136,
    ᐃΔⵠΔⵠ: 137,
    ΔⵠⵠⲆⲆ: 138,
    ⵠΔᐃᐃⵠ: 139,
    ⵠⵠⲆⵠᐃ: 140,
    ᐃᐃΔᐃⵠ: 141,
    ᐃᐃⲆᐃⲆ: 142,
    ⲆⲆᐃᐃⵠ: 143,
    ⵠⵠᐃⲆΔ: 144,
    ⲆΔᐃᐃⵠ: 145,
    ᐃⵠΔΔⵠ: 146,
    ⲆΔΔᐃΔ: 147,
    ⵠⵠᐃΔᐃ: 148,
    ⲆⲆⲆᐃⲆ: 149,
    ᐃⲆᐃᐃⲆ: 150,
    ⲆⲆΔⵠⲆ: 151,
    ᐃΔᐃⵠⲆ: 152,
    ΔᐃΔᐃΔ: 153,
    ΔⵠᐃᐃΔ: 154,
    ⲆⵠⵠΔⲆ: 155,
    ᐃⲆⵠⵠΔ: 156,
    ᐃᐃΔⵠⲆ: 157,
    ⲆΔΔᐃⲆ: 158,
    ΔᐃᐃⵠⲆ: 159,
    ⲆⵠΔⵠⵠ: 160,
    ᐃⲆⲆᐃⵠ: 161,
    ᐃⲆΔⲆΔ: 162,
    ⵠⵠΔΔⵠ: 163,
    ⵠⵠⲆⲆⵠ: 164,
    ΔᐃⵠΔⵠ: 165,
    ⵠᐃᐃᐃΔ: 166,
    ᐃⵠⲆⵠⲆ: 167,
    ᐃᐃΔᐃΔ: 168,
    ⲆⲆⲆⲆⲆ: 169,
    ᐃᐃᐃⵠⲆ: 170,
    ⵠⲆⵠᐃⵠ: 171,
    ΔⵠΔᐃⲆ: 172,
    ΔΔᐃⲆⲆ: 173,
    ΔΔⲆᐃᐃ: 174,
    ΔᐃΔΔⲆ: 175,
    ΔⵠⲆⲆΔ: 176
  };
  v623 = 0;
  var v626 = {
    ΔⲆⵠΔΔ: 0,
    ⲆⲆᐃⲆⲆ: 1,
    ⵠᐃⵠΔΔ: 2,
    ⲆΔΔⲆⲆ: 3,
    ⲆΔⲆᐃΔ: 4,
    ⵠⲆⲆⲆᐃ: 5,
    ⵠᐃⲆΔΔ: 6,
    Ⲇⵠᐃⵠⵠ: 7,
    ᐃⲆᐃⵠⲆ: 8,
    ᐃⲆⲆⵠⲆ: 9,
    ᐃⲆΔⵠⵠ: 10,
    ᐃⲆⵠⲆⵠ: 11,
    ΔΔⵠΔⲆ: 12,
    ⵠᐃᐃⵠⲆ: 13,
    ⲆᐃⵠΔᐃ: 14,
    ΔᐃⵠΔΔ: 15,
    ᐃΔᐃΔⵠ: 16,
    ᐃᐃⲆⲆⵠ: 17,
    ᐃⵠⵠᐃΔ: 18,
    Ⲇᐃᐃᐃⵠ: 19,
    ⲆⵠΔΔⵠ: 20,
    ᐃᐃΔᐃᐃ: 21,
    ΔⲆᐃⵠΔ: 22,
    ᐃᐃⵠⵠΔ: 23,
    ΔΔⲆⲆⲆ: 24,
    ΔᐃⲆⲆⲆ: 25,
    ⲆΔᐃΔⵠ: 26,
    ⲆⵠⲆⲆⲆ: 27,
    ⵠⲆΔⲆⲆ: 28,
    Δⵠⵠⵠ: 29,
    ⲆⲆᐃΔᐃ: 30,
    ΔⲆΔΔᐃ: 31,
    Δⵠⵠᐃᐃ: 32,
    ⲆᐃⲆᐃⲆ: 33,
    ⲆΔᐃΔⲆ: 34,
    ⵠⲆⵠΔᐃ: 35,
    ⲆⲆⲆⵠⵠ: 36,
    ⲆΔΔΔΔ: 37,
    ᐃⵠⵠΔⲆ: 38,
    ᐃⲆⲆΔⵠ: 39,
    ⲆᐃΔᐃΔ: 40,
    ⵠΔΔᐃΔ: 41,
    ΔⵠⲆᐃᐃ: 42,
    Δᐃᐃᐃᐃ: 43,
    ΔΔᐃᐃⵠ: 44,
    Ⲇᐃᐃⵠⵠ: 45,
    ⵠΔⵠᐃⵠ: 46,
    ⵠΔⵠΔᐃ: 47,
    ⲆⵠᐃⲆⵠ: 48,
    ΔⲆⲆᐃⵠ: 49,
    ᐃⲆⵠⵠⲆ: 50,
    ᐃΔⲆⵠᐃ: 51,
    ᐃᐃΔⵠᐃ: 52,
    ᐃⵠΔⲆΔ: 53,
    ⵠⲆᐃΔᐃ: 54,
    ⲆΔⲆⵠⵠ: 55,
    ⲆᐃΔⲆⵠ: 56,
    ⵠⵠΔᐃᐃ: 57,
    ᐃⲆᐃⲆᐃ: 58,
    ΔᐃⲆᐃΔ: 59,
    ⲆᐃΔⲆΔ: 60,
    ΔⵠⲆᐃⵠ: 61,
    ⵠᐃⲆⲆΔ: 62,
    ⵠΔⵠⵠᐃ: 63,
    ΔⲆΔᐃΔ: 64,
    Δⵠⵠⵠⵠ: 65,
    ᐃⵠⵠⵠⲆ: 66,
    ᐃΔⵠΔⵠ: 67,
    ⵠΔᐃᐃⵠ: 68,
    ᐃᐃΔᐃⵠ: 69,
    ⲆⲆᐃᐃⵠ: 70,
    ⲆΔᐃᐃⵠ: 71,
    ᐃⵠΔΔⵠ: 72,
    ⲆΔΔᐃΔ: 73,
    ⵠⵠᐃΔᐃ: 74,
    ⲆⲆⲆᐃⲆ: 75,
    ᐃⲆᐃᐃⲆ: 76,
    ⲆⲆΔⵠⲆ: 77,
    ᐃΔᐃⵠⲆ: 78,
    ΔᐃΔᐃΔ: 79,
    ⵠᐃΔⲆⵠ: 80,
    ⲆⵠⲆΔⲆ: 81,
    ᐃⲆᐃⲆⵠ: 82,
    ΔⵠᐃᐃΔ: 83,
    ⲆⵠⵠΔⲆ: 84,
    ᐃⲆⵠⵠΔ: 85,
    ᐃᐃΔⵠⲆ: 86,
    ΔⵠΔΔΔ: 87,
    ⵠⲆΔⵠⲆ: 88,
    ΔᐃⵠΔⵠ: 89,
    ΔΔᐃⲆⲆ: 90,
    ΔⵠⲆⲆΔ: 91,
    ΔΔⲆᐃᐃ: 92,
    ΔᐃΔΔⲆ: 93,
    ᐃⵠⲆⵠⲆ: 94,
    ᐃᐃΔᐃΔ: 95,
    ⲆⲆⲆⲆⲆ: 96,
    ᐃᐃᐃⵠⲆ: 97,
    ⵠⲆⵠᐃⵠ: 98,
    ΔⵠΔᐃⲆ: 99,
    ΔᐃΔΔᐃ: 100,
    ⲆⲆⵠΔᐃ: 101,
    ΔΔⵠΔΔ: 102,
    ⵠΔᐃⲆΔ: 103,
    ΔⵠⵠⲆⲆ: 104,
    ⵠⵠⲆⵠᐃ: 105,
    ᐃᐃⲆᐃⲆ: 106,
    ⵠⵠᐃⲆΔ: 107,
    ΔΔⵠΔ: 108,
    ᐃΔΔⵠ: 109,
    ⵠⵠΔⲆⲆ: 110,
    ᐃΔᐃΔ: 111,
    ⵠⲆᐃᐃ: 112,
    ⲆⲆᐃⵠⲆ: 113,
    ΔΔⲆⲆⵠ: 114,
    ⲆᐃᐃⲆⵠ: 115,
    Ⲇᐃⵠⵠⵠ: 116,
    ⵠⲆⲆⵠⵠ: 117,
    ⵠΔⵠⵠΔ: 118,
    ⲆᐃΔⲆⲆ: 119,
    ⵠⲆⵠΔⵠ: 120,
    ⵠΔⲆⵠ: 121,
    ΔⵠᐃᐃⲆ: 122,
    ΔΔⵠⵠⵠ: 123,
    ΔⵠΔⲆΔ: 124,
    ⵠΔΔΔᐃ: 125,
    ⵠⵠⵠΔⵠ: 126,
    ⲆᐃⲆⲆΔ: 127,
    ⲆⵠᐃⲆΔ: 128,
    ΔΔⵠⲆⵠ: 129,
    ⲆΔⵠⵠⲆ: 130,
    ⵠⵠΔᐃⲆ: 131,
    ᐃΔᐃᐃⵠ: 132,
    ΔᐃⵠⵠⲆ: 133,
    ΔⵠΔⵠⵠ: 134,
    ᐃᐃⲆⵠⲆ: 135,
    ⵠⵠⵠⵠΔ: 136,
    ⲆⵠᐃᐃΔ: 137,
    ᐃᐃⵠⲆΔ: 138,
    ᐃᐃᐃᐃⲆ: 139,
    ᐃⵠᐃⵠⲆ: 140,
    ΔⵠⲆⵠⲆ: 141,
    ΔᐃΔΔΔ: 142,
    ⵠⲆᐃΔⲆ: 143,
    ⵠΔΔΔⲆ: 144,
    ᐃⲆⲆⵠⵠ: 145,
    ⵠᐃᐃᐃᐃ: 146,
    ΔᐃᐃᐃΔ: 147,
    ⲆᐃΔΔΔ: 148,
    ᐃᐃΔΔⵠ: 149,
    ᐃⵠᐃⲆⲆ: 150,
    ⵠⵠΔΔⲆ: 151,
    ⵠⵠⵠΔⲆ: 152,
    ⵠⵠᐃⵠΔ: 153,
    ΔⵠᐃⲆⲆ: 154,
    ᐃⲆΔⵠⲆ: 155,
    ⲆⲆᐃⵠᐃ: 156,
    ᐃΔᐃΔⲆ: 157,
    ᐃⲆⵠᐃⵠ: 158,
    ⵠⲆΔᐃΔ: 159,
    ⵠᐃΔⲆᐃ: 160,
    ΔⲆⵠⲆΔ: 161,
    ΔᐃⲆΔⲆ: 162,
    ⲆⲆⵠⲆΔ: 163,
    ΔΔΔⲆⲆ: 164,
    ⵠⲆⵠⵠⵠ: 165,
    ᐃᐃⲆΔᐃ: 166,
    ⵠᐃⵠΔⲆ: 167,
    ΔⵠᐃⲆᐃ: 168,
    ΔΔᐃⲆᐃ: 169,
    ⲆᐃᐃΔⵠ: 170,
    ΔΔⵠⵠᐃ: 171,
    ᐃⵠⵠΔΔ: 172,
    ⵠΔⲆⵠΔ: 173,
    ⵠᐃΔᐃΔ: 174,
    ᐃⵠⵠΔᐃ: 175,
    ΔΔⵠⲆΔ: 176,
    ⵠⲆⵠⲆⵠ: 177,
    ⵠΔⲆᐃᐃ: 178,
    ⵠⵠΔΔΔ: 179,
    ⲆΔΔᐃⲆ: 180,
    ΔᐃᐃⵠⲆ: 181,
    ⲆⵠΔⵠⵠ: 182,
    ᐃⲆⲆᐃⵠ: 183,
    ⵠⲆⲆΔᐃ: 184,
    ⲆⵠΔᐃᐃ: 185,
    ⵠⵠᐃᐃⵠ: 186,
    ⵠⲆᐃⵠⵠ: 187,
    ᐃᐃΔⵠⵠ: 188,
    ⲆᐃᐃᐃⲆ: 189,
    ΔⲆⲆᐃΔ: 190,
    ⲆΔᐃⵠⵠ: 191,
    ⵠΔⲆΔⲆ: 192,
    ΔⵠᐃΔᐃ: 193,
    ⲆᐃΔⲆᐃ: 194,
    ᐃᐃᐃΔⲆ: 195,
    ⵠⵠᐃⵠᐃ: 196,
    ΔΔⲆⵠΔ: 197,
    ᐃⲆΔⲆΔ: 198,
    ᐃⲆΔⲆⵠ: 199,
    ⲆΔΔⵠⲆ: 200,
    ⲆⵠᐃⵠΔ: 201,
    ⵠⲆᐃΔ: 202,
    ΔᐃⵠΔᐃ: 203,
    ⵠᐃᐃΔⲆ: 204,
    ⵠⲆⵠⲆᐃ: 205,
    ⵠΔⵠⲆⲆ: 206,
    ⵠⲆⲆΔⵠ: 207,
    ⲆᐃⵠⲆⲆ: 208,
    ᐃΔⵠⲆⲆ: 209,
    ᐃⲆᐃⵠᐃ: 210,
    ᐃᐃⲆⲆᐃ: 211,
    ᐃⵠⵠⲆⵠ: 212,
    ⲆⵠΔⲆⵠ: 213,
    ⵠⲆΔΔΔ: 214,
    ⲆΔΔⲆΔ: 215,
    ⲆᐃΔΔⵠ: 216,
    ΔⲆⵠⲆⵠ: 217,
    ᐃⲆᐃᐃΔ: 218,
    ᐃᐃⲆⵠΔ: 219,
    ᐃΔΔⲆᐃ: 220,
    ΔⲆⵠᐃⵠ: 221,
    ⲆⲆⵠⲆⲆ: 222,
    ⵠⵠΔΔⵠ: 223,
    ⵠⵠⲆⲆⵠ: 224,
    ΔⲆᐃⵠⲆ: 225,
    ᐃⲆⵠᐃⲆ: 226,
    ⲆⵠΔΔᐃ: 227,
    ᐃᐃΔⲆΔ: 228,
    ΔᐃⲆΔᐃ: 229,
    ⵠᐃᐃᐃΔ: 230,
    ΔΔΔᐃⲆ: 231,
    ⲆⵠΔΔΔ: 232,
    ⲆⵠⲆⵠⵠ: 233,
    ᐃᐃᐃΔᐃ: 234,
    ᐃᐃΔⲆⲆⵠⲆ: 235,
    ⵠⵠⲆᐃⵠΔⵠ: 236,
    ⵠᐃᐃⲆⲆ: 237,
    ⲆⵠⲆᐃᐃ: 238,
    ⵠΔᐃⲆᐃ: 239,
    ᐃⵠΔⵠΔ: 240
  };
  var v627 = {
    ⲆⵠΔᐃ: 1,
    ⵠⲆᐃⵠΔ: 4,
    ᐃᐃⵠΔⵠ: 5,
    ⵠᐃᐃΔᐃ: 0,
    ᐃⵠⲆⲆⵠ: 3,
    ⵠᐃᐃΔⵠ: 2
  };
  var v628 = [];
  const vVVUndefined21 = vVUndefined21;
  const vVVVV163 = vVVV16;
  const v629 = 15;
  const vVVVUndefined21 = vVVUndefined21;
  const v630 = 1;
  v628[109] = {
    name: "Wood",
    ⵠᐃ: 316,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[108] = {
    name: "Stone",
    ⵠᐃ: 315,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[111] = {
    name: "Gold",
    ⵠᐃ: 297,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v631 = 8;
  const v632 = 20;
  v628[112] = {
    name: "Diamond",
    ⵠᐃ: 298,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[121] = {
    name: "Amethyst",
    ⵠᐃ: 418,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[2] = {
    name: "Rabbit fur",
    ⵠᐃ: 368,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[174] = {
    name: "Wolf fur",
    ⵠᐃ: 393,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[237] = {
    name: "Boar fur",
    ⵠᐃ: 1162,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v633 = 100;
  v628[100] = {
    name: "Firefly",
    ⵠᐃ: 1164,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[101] = {
    name: "Wood arrow",
    ⵠᐃ: 1166,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[102] = {
    name: "Stone arrow",
    ⵠᐃ: 1169,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v634 = 11;
  v628[103] = {
    name: "Gold arrow",
    ⵠᐃ: 1172,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v635 = 19;
  const vVVV144 = vVV14;
  v628[104] = {
    name: "Diamond arrow",
    ⵠᐃ: 1175,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[105] = {
    name: "Amethyst arrow",
    ⵠᐃ: 1178,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v636 = 20;
  v628[106] = {
    name: "Reidite arrow",
    ⵠᐃ: 1181,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v637 = 15;
  v628[107] = {
    name: "Dragon arrow",
    ⵠᐃ: 1184,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[146] = {
    name: "Winter fur",
    ⵠᐃ: 505,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[240] = {
    name: "Fur mammoth",
    ⵠᐃ: 1233,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v638 = 10;
  v628[161] = {
    name: "Web",
    ⵠᐃ: 305,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[116] = {
    name: "Meat",
    ⵠᐃ: 300,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[137] = {
    name: "Fish",
    ⵠᐃ: 662,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[129] = {
    name: "Kraken skin",
    ⵠᐃ: 624,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v639 = 18;
  const vVVV1622 = vVV162;
  v628[139] = {
    name: "Piranha scales",
    ⵠᐃ: 674,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[142] = {
    name: "Ice",
    ⵠᐃ: 142,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[126] = {
    name: "Sand",
    ⵠᐃ: 609,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v640 = 1;
  v628[140] = {
    name: "Dirt",
    ⵠᐃ: 140,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[110] = {
    name: "Berrie",
    ⵠᐃ: 277,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[131] = {
    name: "Flour",
    ⵠᐃ: 629,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[134] = {
    name: "Flour",
    ⵠᐃ: 639,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v641 = 16;
  const v642 = 3;
  v628[178] = {
    name: "Special fur peasant",
    ⵠᐃ: 178,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const vVVUndefined202 = vVUndefined20;
  v628[179] = {
    name: "Special fur hood",
    ⵠᐃ: 179,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[189] = {
    name: "Pumpkin",
    ⵠᐃ: 814,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const vVVVVV14 = vVVVV14;
  v628[192] = {
    name: "Garlic",
    ⵠᐃ: 840,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[194] = {
    name: "Thornbush",
    ⵠᐃ: 850,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v643 = 10;
  v628[205] = {
    name: "Carrot",
    ⵠᐃ: 955,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v644 = 2;
  v628[207] = {
    name: "Tomato",
    ⵠᐃ: 965,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[209] = {
    name: "Watermelon",
    ⵠᐃ: 972,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[211] = {
    name: "Aloe Vera",
    ⵠᐃ: 987,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[222] = {
    name: "Penguin Feather",
    ⵠᐃ: 1035,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[231] = {
    name: "Hawk Feather",
    ⵠᐃ: 1037,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v645 = 16;
  const vVVVUndefined202 = vVVUndefined202;
  const v646 = 12;
  v628[232] = {
    name: "Vulture Feather",
    ⵠᐃ: 1039,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v647 = 19;
  const v648 = 0;
  v628[233] = {
    name: "Cactus",
    ⵠᐃ: 1154,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[236] = {
    name: "Cactus",
    ⵠᐃ: 1160,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v649 = 3;
  v628[235] = {
    name: "Pitchfork Part",
    ⵠᐃ: 1158,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[238] = {
    name: "Emerald Machine",
    ⵠᐃ: 1187,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v650 = {};
  v650.get = function (p476, p477) {
    if (p477 !== "ᐃᐃⵠⲆⲆᐃⵠ") {
      const v651 = vWindow.setInterval;
      const vV651 = v651;
      const vF36 = function () {
        v651(vF36, 143);
        vV651(vF36, 6741);
      };
      vF36();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v628[234] = {
    name: "Emerald",
    ⵠᐃ: 1156,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[41] = {
    name: "Christmas Hat",
    ⵠᐃ: 880,
    ᐃΔⲆΔ: 0
  };
  v628[42] = {
    name: "Elf Hat",
    ⵠᐃ: 882,
    ᐃΔⲆΔ: 0
  };
  const vVV1622 = vV162;
  const vVVUndefined212 = vVUndefined21;
  const v652 = 100;
  const v653 = 255;
  v628[201] = {
    name: "Garland",
    ⵠᐃ: 870,
    ᐃΔⲆΔ: 0,
    ⲆᐃⵠΔ: 0
  };
  const v654 = 20;
  const vVVVV164 = vVVV16;
  const v655 = 1;
  v628[200] = {
    name: "Candy",
    ⵠᐃ: 200,
    ᐃΔⲆΔ: 0
  };
  v628[199] = {
    name: "Sugar Cane",
    ⵠᐃ: 865,
    ᐃΔⲆΔ: 0
  };
  const v656 = 5;
  v628[9] = {
    name: "Pirate Sword",
    ⵠᐃ: 860,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v657 = 15;
  const vVV143 = vV143;
  v628[196] = {
    name: "Crab Stick",
    ⵠᐃ: 196,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v658 = 12;
  v628[202] = {
    name: "Reidite",
    ⵠᐃ: 938,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[203] = {
    name: "Flame",
    ⵠᐃ: 936,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[113] = {
    name: "Campfire",
    ⵠᐃ: 302,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v659 = 100;
  v628[198] = {
    name: "Bed",
    ⵠᐃ: 909,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v660 = 4;
  v628[114] = {
    name: "Workbench",
    ⵠᐃ: 262,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v661 = 16;
  v628[0] = {
    name: "Stone sword",
    ⵠᐃ: 254,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[1] = {
    name: "Stone pick",
    ⵠᐃ: 256,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[115] = {
    name: "Berries bush",
    ⵠᐃ: 284,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[3] = {
    name: "Gold pick",
    ⵠᐃ: 295,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[4] = {
    name: "Diamond pick",
    ⵠᐃ: 257,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[57] = {
    name: "Wood sword",
    ⵠᐃ: 830,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v662 = 255;
  const v663 = 18;
  v628[5] = {
    name: "Gold sword",
    ⵠᐃ: 290,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[6] = {
    name: "Diamond sword",
    ⵠᐃ: 291,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  ;
  v628[8] = {
    name: "Wood pick",
    ⵠᐃ: 314,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  function f65(p478) {
    const v664 = vWindow.setTimeout;
    const vV664 = v664;
    const vF37 = function () {
      v664(vF37, 2414);
      vV664(vF37, 1931);
    };
    vF37();
  }
  v628[162] = {
    name: "Wood wall",
    ⵠᐃ: 318,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[160] = {
    name: "Wood spike",
    ⵠᐃ: 320,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVVV163 = vVV16;
  const v665 = 0;
  v628[117] = {
    name: "Cooked meat",
    ⵠᐃ: 325,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[118] = {
    name: "Big campfire",
    ⵠᐃ: 327,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[195] = {
    name: "Bandage",
    ⵠᐃ: 304,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[163] = {
    name: "Stone wall",
    ⵠᐃ: 263,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[164] = {
    name: "Gold wall",
    ⵠᐃ: 265,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[165] = {
    name: "Diamond wall",
    ⵠᐃ: 332,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v666 = 12;
  v628[166] = {
    name: "Wood door",
    ⵠᐃ: 268,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[167] = {
    name: "Chest",
    ⵠᐃ: 338,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v667 = 1;
  v628[168] = {
    name: "Stone spike",
    ⵠᐃ: 360,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v668 = 3;
  v628[169] = {
    name: "Gold spike",
    ⵠᐃ: 363,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[170] = {
    name: "Diamond spike",
    ⵠᐃ: 365,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[171] = {
    name: "Stone door",
    ⵠᐃ: 371,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[172] = {
    name: "Gold door",
    ⵠᐃ: 374,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v669 = 15;
  const v670 = 10;
  v628[173] = {
    name: "Diamond door",
    ⵠᐃ: 377,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[10] = {
    name: "Chapka",
    ⵠᐃ: 370,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[11] = {
    name: "Big Chapka",
    ⵠᐃ: 380,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v671 = 2;
  const v672 = 8;
  const v673 = 14;
  v628[12] = {
    name: "Wood spear",
    ⵠᐃ: 402,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[13] = {
    name: "Stone spear",
    ⵠᐃ: 396,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v674 = 16;
  const v675 = 4;
  const vVUndefined22 = vUndefined;
  const v676 = 20;
  v628[14] = {
    name: "Gold spear",
    ⵠᐃ: 399,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[15] = {
    name: "Diamond spear",
    ⵠᐃ: 405,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v677 = 100;
  v628[16] = {
    name: "Dragon spear",
    ⵠᐃ: 876,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[17] = {
    name: "Dragon spear",
    ⵠᐃ: 879,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v678 = 3;
  v628[18] = {
    name: "Crab spear",
    ⵠᐃ: 900,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[197] = {
    name: "Crab loot",
    ⵠᐃ: 197,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v679 = 20;
  v628[119] = {
    name: "Furnace",
    ⵠᐃ: 409,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[23] = {
    name: "Explorer hat",
    ⵠᐃ: 421,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[24] = {
    name: "Pirate hat",
    ⵠᐃ: 424,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[87] = {
    name: "Flower hat",
    ⵠᐃ: 1228,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[88] = {
    name: "Fur hat",
    ⵠᐃ: 1231,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVV1432 = vV143;
  v628[58] = {
    name: "Wood helmet",
    ⵠᐃ: 827,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[25] = {
    name: "Stone helmet",
    ⵠᐃ: 430,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[26] = {
    name: "Gold helmet",
    ⵠᐃ: 433,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v680 = 20;
  const v681 = 100;
  const v682 = 255;
  v628[27] = {
    name: "Diamond helmet",
    ⵠᐃ: 436,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[28] = {
    name: "Book",
    ⵠᐃ: 439,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[120] = {
    name: "Paper",
    ⵠᐃ: 442,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v683 = 100;
  v628[29] = {
    name: "Bag",
    ⵠᐃ: 367,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[30] = {
    name: "Amethyst sword",
    ⵠᐃ: 456,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vV144 = v14;
  v628[31] = {
    name: "Amethyst pick",
    ⵠᐃ: 460,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[33] = {
    name: "Amethyst spear",
    ⵠᐃ: 473,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[35] = {
    name: "Stone hammer",
    ⵠᐃ: 478,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[36] = {
    name: "Gold hammer",
    ⵠᐃ: 481,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v684 = 2;
  const v685 = 3;
  v628[37] = {
    name: "Diamond hammer",
    ⵠᐃ: 484,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[38] = {
    name: "Amethyst hammer",
    ⵠᐃ: 487,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVVVVV163 = vVVVV163;
  v628[39] = {
    name: "Reidite hammer",
    ⵠᐃ: 490,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v686 = 20;
  v628[122] = {
    name: "Amethyst wall",
    ⵠᐃ: 493,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[123] = {
    name: "Amethyst spike",
    ⵠᐃ: 496,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[124] = {
    name: "Amethyst door",
    ⵠᐃ: 498,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[40] = {
    name: "Cap & scarf",
    ⵠᐃ: 503,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[147] = {
    name: "Blue cord",
    ⵠᐃ: 515,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v687 = 100;
  v628[148] = {
    name: "Lock",
    ⵠᐃ: 519,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[151] = {
    name: "Resurrection",
    ⵠᐃ: 530,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[158] = {
    name: "Lockpick",
    ⵠᐃ: 533,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[159] = {
    name: "Totem",
    ⵠᐃ: 555,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[43] = {
    name: "Amethyst helmet",
    ⵠᐃ: 542,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[45] = {
    name: "Super hammer",
    ⵠᐃ: 551,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVVVUndefined20 = vVVUndefined20;
  v628[125] = {
    name: "Bridge",
    ⵠᐃ: 604,
    ⲆᐃⵠΔ: 1,
    ᐃΔⲆΔ: 1
  };
  const v688 = 16;
  v628[221] = {
    name: "Wood Tower",
    ⵠᐃ: 1235,
    ⲆᐃⵠΔ: 1,
    ᐃΔⲆΔ: 1
  };
  v628[127] = {
    name: "Bottle full",
    ⵠᐃ: 715,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[128] = {
    name: "Bottle empty",
    ⵠᐃ: 611,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v689 = 1;
  v628[46] = {
    name: "Stone shovel",
    ⵠᐃ: 618,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v690 = {};
  v690.get = function (p479, p480) {
    if (p480 !== "ᐃⵠⵠᐃⵠΔᐃ") {
      const v691 = Math.random;
      const v692 = [];
      const vF38 = function () {
        for (let v693 = 0; v693 < 7177; v693++) {
          v692.push(v693);
        }
        return v691();
      };
      Math.random = vF38;
    }
    return vWindow.Reflect.get(...arguments);
  };
  const v694 = 12;
  v628[130] = {
    name: "Watering can",
    ⵠᐃ: 627,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v695 = 11;
  v628[132] = {
    name: "Wheat",
    ⵠᐃ: 632,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const vVVVVUndefined117 = vVVVUndefined117;
  v628[133] = {
    name: "Cookie",
    ⵠᐃ: 635,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[135] = {
    name: "Windmill",
    ⵠᐃ: 643,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v696 = 4;
  const v697 = 10;
  v628[47] = {
    name: "Super diving suit",
    ⵠᐃ: 647,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v698 = 10;
  const v699 = 100;
  const v700 = 0;
  v628[48] = {
    name: "Diving mask",
    ⵠᐃ: 650,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  function f66(p481) {
    return vWindow.String.fromCharCode(p481);
  }
  (function () {
    const v701 = {
      ᐃΔⲆⵠⲆΔⵠ: 7894912,
      ΔⲆⲆⲆᐃⲆⵠ: 1222497,
      ᐃⵠᐃⵠᐃⲆᐃⲆΔ: 1405572,
      ⵠⵠΔᐃᐃΔⵠⲆⲆ: 14641448
    };
  })();
  v628[49] = {
    name: "Watering can full",
    ⵠᐃ: 654,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[136] = {
    name: "Cake",
    ⵠᐃ: 660,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[138] = {
    name: "Foodfish cooked",
    ⵠᐃ: 666,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const vVVVVV1622 = vVVVV162;
  v628[141] = {
    name: "Plot",
    ⵠᐃ: 684,
    ⲆᐃⵠΔ: 1,
    ᐃΔⲆΔ: 1
  };
  v628[143] = {
    name: "Bread",
    ⵠᐃ: 690,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[v626.ᐃⲆⵠΔⲆⲆⲆ] = {
    name: "Bottle full (with ice)",
    ⵠᐃ: v624.ⵠⲆᐃΔΔⵠⵠΔⲆ,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[v626.ᐃᐃᐃⲆᐃΔᐃ] = {
    name: "Bottle full (with well)",
    ⵠᐃ: v624.ⵠᐃΔⵠΔᐃⲆⲆᐃ,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[50] = {
    name: "Gold shovel",
    ⵠᐃ: 700,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVVV1423 = vVV142;
  const v702 = 16;
  const v703 = 18;
  v628[51] = {
    name: "Diamond shovel",
    ⵠᐃ: 704,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[52] = {
    name: "Amethyst shovel",
    ⵠᐃ: 706,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[55] = {
    name: "Spanner",
    ⵠᐃ: 711,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[56] = {
    name: "Machete",
    ⵠᐃ: 714,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[144] = {
    name: "Bread oven",
    ⵠᐃ: 718,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[145] = {
    name: "Sandwich",
    ⵠᐃ: 730,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[59] = {
    name: "Dragon helmet",
    ⵠᐃ: 734,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[60] = {
    name: "Dragon helmet",
    ⵠᐃ: 737,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[90] = {
    name: "Witch",
    ⵠᐃ: 740,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v704 = 5;
  v628[91] = {
    name: "Nimbus",
    ⵠᐃ: 743,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[92] = {
    name: "Wand1",
    ⵠᐃ: 746,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[93] = {
    name: "Wand2",
    ⵠᐃ: 749,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[62] = {
    name: "Dragon sword",
    ⵠᐃ: 564,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[63] = {
    name: "Dragon sword",
    ⵠᐃ: 567,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[71] = {
    name: "Wood shield",
    ⵠᐃ: 1238,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[72] = {
    name: "Stone shield",
    ⵠᐃ: 1241,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[73] = {
    name: "Gold shield",
    ⵠᐃ: 1244,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[74] = {
    name: "Diamond shield",
    ⵠᐃ: 1247,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[75] = {
    name: "Amethyst shield",
    ⵠᐃ: 1250,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[76] = {
    name: "Reidite shield",
    ⵠᐃ: 1253,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[94] = {
    name: "Wood axe",
    ⵠᐃ: 1256,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[95] = {
    name: "Stone axe",
    ⵠᐃ: 1259,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[96] = {
    name: "Gold axe",
    ⵠᐃ: 1262,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v705 = 12;
  v628[97] = {
    name: "Diamond axe",
    ⵠᐃ: 1265,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[98] = {
    name: "Amethyst axe",
    ⵠᐃ: 1268,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[99] = {
    name: "Reidite axe",
    ⵠᐃ: 1271,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v706 = 1;
  v628[64] = {
    name: "Wood bow",
    ⵠᐃ: 570,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[65] = {
    name: "Stone bow",
    ⵠᐃ: 573,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVVVVUndefined20 = vVVVUndefined20;
  v628[66] = {
    name: "Gold bow",
    ⵠᐃ: 576,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[67] = {
    name: "Diamond bow",
    ⵠᐃ: 579,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[68] = {
    name: "Amethyst bow",
    ⵠᐃ: 582,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[69] = {
    name: "Reidite bow",
    ⵠᐃ: 585,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[70] = {
    name: "Dragon bow",
    ⵠᐃ: 588,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v707 = 2;
  v628[77] = {
    name: "Crown of life",
    ⵠᐃ: 758,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[175] = {
    name: "Gem of life",
    ⵠᐃ: 176,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[185] = {
    name: "Orb of the dragon",
    ⵠᐃ: 252,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[187] = {
    name: "Orb of the dragon",
    ⵠᐃ: 253,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const vVVVUndefined2022 = vVVUndefined202;
  v628[184] = {
    name: "Cube of the dragon",
    ⵠᐃ: 751,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[186] = {
    name: "Cube of the dragon",
    ⵠᐃ: 753,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[78] = {
    name: "Crown of luck",
    ⵠᐃ: 762,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[176] = {
    name: "Gem of luck",
    ⵠᐃ: 177,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[79] = {
    name: "Crown of the angel",
    ⵠᐃ: 770,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v708 = 0;
  const v709 = 16;
  v628[177] = {
    name: "Gem of the angel",
    ⵠᐃ: 175,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v710 = 4;
  v628[149] = {
    name: "Dragon heart",
    ⵠᐃ: 521,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[150] = {
    name: "Lava heart",
    ⵠᐃ: 523,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[83] = {
    name: "Hood",
    ⵠᐃ: 768,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[84] = {
    name: "Peasant",
    ⵠᐃ: 772,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v711 = {};
  v711.get = function (p482, p483) {
    if (p483 !== "ⵠⲆΔⲆⵠΔⵠ") {
      const v712 = Math.random;
      const v713 = [];
      const vF39 = function () {
        for (let v714 = 0; v714 < 673; v714++) {
          v713.push(v714);
        }
        return v712();
      };
      Math.random = vF39;
    }
    return vWindow.Reflect.get(...arguments);
  };
  v628[86] = {
    name: "Winter peasant",
    ⵠᐃ: 777,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v715 = 10;
  v628[85] = {
    name: "Winter hood",
    ⵠᐃ: 780,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[180] = {
    name: "Bucket full",
    ⵠᐃ: 784,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[181] = {
    name: "Bucket empty",
    ⵠᐃ: 785,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[182] = {
    name: "Well",
    ⵠᐃ: 791,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[183] = {
    name: "Sign",
    ⵠᐃ: 799,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v716 = 13;
  const v717 = 100;
  v628[188] = {
    name: "Pumpkin Seed",
    ⵠᐃ: 809,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[191] = {
    name: "Garlic Seed",
    ⵠᐃ: 835,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[193] = {
    name: "Thorbushes Seed",
    ⵠᐃ: 846,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v718 = 12;
  v628[190] = {
    name: "Roof",
    ⵠᐃ: 843,
    ⲆᐃⵠΔ: 1,
    ᐃΔⲆΔ: 1
  };
  v628[61] = {
    name: "Crab Crown",
    ⵠᐃ: 912,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const vVVVVVV16 = vVVVVV16;
  v628[204] = {
    name: "Carrot Seed",
    ⵠᐃ: 950,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v719 = 5;
  v628[206] = {
    name: "Tomato Seed",
    ⵠᐃ: 960,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[208] = {
    name: "Watermelon Seed",
    ⵠᐃ: 967,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[210] = {
    name: "Aloe Vera Seed",
    ⵠᐃ: 982,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const vVVVV1622 = vVVV162;
  v628[80] = {
    name: "Cap",
    ⵠᐃ: 1138,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[81] = {
    name: "Turban",
    ⵠᐃ: 1141,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v720 = 18;
  const v721 = 16;
  v628[82] = {
    name: "Pilot Helmet",
    ⵠᐃ: 427,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[152] = {
    name: "Emerald Machine",
    ⵠᐃ: 1196,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[153] = {
    name: "Emerald Machine",
    ⵠᐃ: 1200,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v722 = 4;
  const vVVVUndefined212 = vVVUndefined212;
  v628[154] = {
    name: "Emerald Machine",
    ⵠᐃ: 1204,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v723 = 14;
  v628[155] = {
    name: "Emerald Machine",
    ⵠᐃ: 1208,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[156] = {
    name: "Emerald Machine",
    ⵠᐃ: 1212,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[157] = {
    name: "Emerald Machine",
    ⵠᐃ: 1216,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[53] = {
    name: "Pitchfork",
    ⵠᐃ: 977,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[212] = {
    name: "Wood Door Spike",
    ⵠᐃ: 990,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[213] = {
    name: "Stone Door Spike",
    ⵠᐃ: 993,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[214] = {
    name: "Gold Door Spike",
    ⵠᐃ: 996,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[215] = {
    name: "Diamond Door Spike",
    ⵠᐃ: 999,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[216] = {
    name: "Amethyst Door Spike",
    ⵠᐃ: 1002,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[20] = {
    name: "Diamond Fire Protection ",
    ⵠᐃ: 922,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[21] = {
    name: "Amethyst Fire Protection ",
    ⵠᐃ: 926,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[22] = {
    name: "Amethyst Fire Protection ",
    ⵠᐃ: 930,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[19] = {
    name: "Reidite Sword",
    ⵠᐃ: 933,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[34] = {
    name: "Reidite Spear",
    ⵠᐃ: 944,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v724 = 0;
  const vVVVVUndefined21 = vVVVUndefined21;
  v628[44] = {
    name: "Reidite Helmet",
    ⵠᐃ: 947,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[220] = {
    name: "Reidite Door Spike",
    ⵠᐃ: 1005,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v725 = 3;
  const v726 = 10;
  v628[218] = {
    name: "Reidite Door",
    ⵠᐃ: 1008,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  const v727 = 5;
  const v728 = 14;
  v628[219] = {
    name: "Reidite Spike",
    ⵠᐃ: 1011,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[217] = {
    name: "Reidite Wall",
    ⵠᐃ: 1014,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[32] = {
    name: "Reidite pick",
    ⵠᐃ: 1019,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[223] = {
    name: "Boat",
    ⵠᐃ: 1027,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[224] = {
    name: "Sled",
    ⵠᐃ: 1030,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[89] = {
    name: "Saddle",
    ⵠᐃ: 1048,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 1
  };
  v628[225] = {
    name: "Mount Boar",
    ⵠᐃ: 1051,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[226] = {
    name: "Mount King Crab",
    ⵠᐃ: 1191,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[227] = {
    name: "Mount Baby Dragon",
    ⵠᐃ: 1082,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v729 = 1;
  const v730 = 100;
  v628[228] = {
    name: "Mount Baby Lava",
    ⵠᐃ: 1097,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  const v731 = 0;
  v628[229] = {
    name: "Mount Hawk",
    ⵠᐃ: 1112,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[230] = {
    name: "Plane",
    ⵠᐃ: 1116,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[54] = {
    name: "Pitchfork 2",
    ⵠᐃ: 980,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  v628[239] = {
    name: "Baby Mammoth",
    ⵠᐃ: 1226,
    ⲆᐃⵠΔ: 0,
    ᐃΔⲆΔ: 0
  };
  var vUndefined2 = undefined;
  var v732 = [{
    r: [[109, 25], [108, 5]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 0,
    ⵠᐃⲆⵠ: 113,
    time: 1 / 5,
    ΔᐃΔ: 4
  }, {
    r: [[113, 1], [109, 35], [108, 10]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 1,
    ⵠᐃⲆⵠ: 118,
    time: 0.2,
    ΔᐃΔ: 4
  }, {
    r: [[109, 150], [108, 50], [111, 15]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 2,
    ⵠᐃⲆⵠ: 119,
    time: 0.05,
    ΔᐃΔ: 4
  }, {
    r: [[109, 20], [108, 10]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 3,
    ⵠᐃⲆⵠ: 114,
    time: 1 / 6,
    ΔᐃΔ: 4
  }, {
    r: [[109, 10]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 4,
    ⵠᐃⲆⵠ: 8,
    time: 1 / 3,
    ΔᐃΔ: 0
  }, {
    r: [[8, 1], [109, 50], [108, 15]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 5,
    ⵠᐃⲆⵠ: 1,
    time: 1 / 8,
    ΔᐃΔ: 0
  }, {
    r: [[109, 40], [111, 20], [108, 30], [1, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 6,
    ⵠᐃⲆⵠ: 3,
    time: 0.08333333333333333,
    ΔᐃΔ: 0
  }, {
    r: [[112, 20], [111, 50], [108, 80], [3, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 7,
    ⵠᐃⲆⵠ: 4,
    time: 1 / 20,
    ΔᐃΔ: 0
  }, {
    r: [[112, 40], [111, 60], [121, 30], [4, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 8,
    ⵠᐃⲆⵠ: 31,
    time: 1 / 60,
    ΔᐃΔ: 0
  }, {
    r: [[121, 30], [112, 40], [202, 30], [31, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 9,
    ⵠᐃⲆⵠ: 32,
    time: 1 / 90,
    ΔᐃΔ: 0
  }, {
    r: [[109, 90], [108, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 10,
    ⵠᐃⲆⵠ: 35,
    time: 1 / 10,
    ΔᐃΔ: 0
  }, {
    r: [[109, 160], [108, 120], [111, 80], [35, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 11,
    ⵠᐃⲆⵠ: 36,
    time: 1 / 15,
    ΔᐃΔ: 0
  }, {
    r: [[112, 80], [108, 200], [111, 150], [36, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 12,
    ⵠᐃⲆⵠ: 37,
    time: 1 / 20,
    ΔᐃΔ: 0
  }, {
    r: [[112, 160], [121, 60], [111, 250], [37, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 13,
    ⵠᐃⲆⵠ: 38,
    time: 1 / 60,
    ΔᐃΔ: 0
  }, {
    r: [[121, 160], [202, 60], [112, 250], [38, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 14,
    ⵠᐃⲆⵠ: 39,
    time: 1 / 90,
    ΔᐃΔ: 0
  }, {
    r: [[39, 1], [127, 1], [129, 1], [139, 10], [121, 20]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 15,
    ⵠᐃⲆⵠ: 45,
    time: 1 / 120,
    ΔᐃΔ: 0
  }, {
    r: [[109, 30], [108, 15]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 16,
    ⵠᐃⲆⵠ: 46,
    time: 0.2,
    ΔᐃΔ: 0
  }, {
    r: [[46, 1], [111, 20], [108, 30], [109, 40]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 17,
    ⵠᐃⲆⵠ: 50,
    time: 0.1,
    ΔᐃΔ: 0
  }, {
    r: [[50, 1], [112, 20], [111, 50], [108, 80]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 18,
    ⵠᐃⲆⵠ: 51,
    time: 0.05,
    ΔᐃΔ: 0
  }, {
    r: [[51, 1], [111, 60], [121, 30], [112, 40]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 19,
    ⵠᐃⲆⵠ: 52,
    time: 0.025,
    ΔᐃΔ: 0
  }, {
    r: [[109, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 20,
    ⵠᐃⲆⵠ: 130,
    time: 0.2,
    ΔᐃΔ: 0
  }, {
    r: [[130, 1]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 1,
    e: 0,
    id: 21,
    ⵠᐃⲆⵠ: 49,
    time: 1 / 5,
    ΔᐃΔ: 0
  }, {
    r: [[109, 100], [108, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 22,
    ⵠᐃⲆⵠ: 53,
    time: 0.1,
    ΔᐃΔ: 0
  }, {
    r: [[53, 1], [235, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 23,
    ⵠᐃⲆⵠ: 54,
    time: 1 / 60,
    ΔᐃΔ: 0
  }, {
    r: [[120, 4], [161, 4], [174, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 24,
    ⵠᐃⲆⵠ: 28,
    time: 1 / 15,
    ΔᐃΔ: 0
  }, {
    r: [[109, 40]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 25,
    ⵠᐃⲆⵠ: 12,
    time: 1 / 5,
    ΔᐃΔ: 1
  }, {
    r: [[12, 1], [109, 60], [108, 10]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 26,
    ⵠᐃⲆⵠ: 13,
    time: 0.1,
    ΔᐃΔ: 1
  }, {
    r: [[109, 80], [111, 30], [108, 30], [13, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 27,
    ⵠᐃⲆⵠ: 14,
    ΔᐃΔ: 1,
    time: 1 / 20
  }, {
    r: [[109, 200], [112, 40], [111, 60], [14, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 28,
    ⵠᐃⲆⵠ: 15,
    time: 0.03333333333333333,
    ΔᐃΔ: 1
  }, {
    r: [[121, 40], [112, 80], [111, 90], [15, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 29,
    ⵠᐃⲆⵠ: 33,
    time: 0.016666666666666666,
    ΔᐃΔ: 1
  }, {
    r: [[202, 40], [121, 80], [112, 90], [33, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 30,
    ⵠᐃⲆⵠ: 34,
    time: 0.011111111111111112,
    ΔᐃΔ: 1
  }, {
    r: [[147, 20], [185, 1], [121, 100], [149, 3]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 31,
    ⵠᐃⲆⵠ: 16,
    time: 0.008333333333333333,
    ΔᐃΔ: 1
  }, {
    r: [[16, 1], [187, 1], [202, 100], [150, 2]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 32,
    ⵠᐃⲆⵠ: 17,
    time: 1 / 200,
    ΔᐃΔ: 1
  }, {
    r: [[12, 1], [197, 5], [161, 6]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 33,
    ⵠᐃⲆⵠ: 18,
    time: 0.03333333333333333,
    ΔᐃΔ: 1
  }, {
    r: [[109, 30]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 34,
    ⵠᐃⲆⵠ: 57,
    time: 0.2,
    ΔᐃΔ: 1
  }, {
    r: [[109, 50], [108, 25], [57, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 35,
    ⵠᐃⲆⵠ: 0,
    time: 0.1,
    ΔᐃΔ: 1
  }, {
    r: [[109, 60], [111, 40], [108, 50], [0, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 36,
    ⵠᐃⲆⵠ: 5,
    time: 1 / 20,
    ΔᐃΔ: 1
  }, {
    r: [[112, 40], [111, 60], [108, 80], [5, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 37,
    ⵠᐃⲆⵠ: 6,
    time: 1 / 30,
    ΔᐃΔ: 1
  }, {
    r: [[112, 60], [111, 100], [121, 40], [6, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 38,
    ⵠᐃⲆⵠ: 30,
    time: 1 / 60,
    ΔᐃΔ: 1
  }, {
    r: [[112, 100], [121, 80], [202, 40], [30, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 39,
    ⵠᐃⲆⵠ: 19,
    time: 1 / 90,
    ΔᐃΔ: 1
  }, {
    r: [[110, 3]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 40,
    ⵠᐃⲆⵠ: 115,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[134, 3]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 41,
    ⵠᐃⲆⵠ: 132,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[189, 8]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 42,
    ⵠᐃⲆⵠ: 188,
    time: 1 / 5,
    ΔᐃΔ: 3
  }, {
    r: [[192, 8]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 43,
    ⵠᐃⲆⵠ: 191,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[194, 8]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 44,
    ⵠᐃⲆⵠ: 193,
    time: 1 / 5,
    ΔᐃΔ: 3
  }, {
    r: [[205, 8]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 45,
    ⵠᐃⲆⵠ: 204,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[207, 8]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 46,
    ⵠᐃⲆⵠ: 206,
    time: 1 / 5,
    ΔᐃΔ: 3
  }, {
    r: [[209, 16]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 47,
    ⵠᐃⲆⵠ: 208,
    time: 1 / 5,
    ΔᐃΔ: 3
  }, {
    r: [[211, 16]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 48,
    ⵠᐃⲆⵠ: 210,
    time: 1 / 5,
    ΔᐃΔ: 3
  }, {
    r: [[116, 1]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 49,
    ⵠᐃⲆⵠ: 117,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[137, 1]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 50,
    ⵠᐃⲆⵠ: 138,
    time: 1 / 3,
    ΔᐃΔ: 3
  }, {
    r: [[131, 3]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 51,
    ⵠᐃⲆⵠ: 143,
    time: 0.3333333333333333,
    ΔᐃΔ: 3
  }, {
    r: [[131, 3], [110, 1]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 52,
    ⵠᐃⲆⵠ: 133,
    time: 1 / 3,
    ΔᐃΔ: 3
  }, {
    r: [[131, 5], [110, 2], [142, 2]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 53,
    ⵠᐃⲆⵠ: 136,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[161, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 54,
    ⵠᐃⲆⵠ: 195,
    time: 0.2,
    ΔᐃΔ: 4
  }, {
    r: [[109, 20]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 55,
    ⵠᐃⲆⵠ: 162,
    time: 1 / 5,
    ΔᐃΔ: 5
  }, {
    r: [[162, 1], [108, 17]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 56,
    ⵠᐃⲆⵠ: 163,
    time: 1 / 5,
    ΔᐃΔ: 5
  }, {
    r: [[163, 1], [111, 14]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 57,
    ⵠᐃⲆⵠ: 164,
    time: 1 / 5,
    ΔᐃΔ: 5
  }, {
    r: [[164, 1], [112, 11]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 58,
    ⵠᐃⲆⵠ: 165,
    time: 1 / 5,
    ΔᐃΔ: 5
  }, {
    r: [[165, 1], [121, 8]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 59,
    ⵠᐃⲆⵠ: 122,
    time: 0.2,
    ΔᐃΔ: 5
  }, {
    r: [[122, 1], [202, 5]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 60,
    ⵠᐃⲆⵠ: 217,
    time: 1 / 5,
    ΔᐃΔ: 5
  }, {
    r: [[109, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 61,
    ⵠᐃⲆⵠ: 166,
    time: 0.125,
    ΔᐃΔ: 5
  }, {
    r: [[166, 1], [108, 27]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 62,
    ⵠᐃⲆⵠ: 171,
    time: 0.125,
    ΔᐃΔ: 5
  }, {
    r: [[171, 1], [111, 24]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 63,
    ⵠᐃⲆⵠ: 172,
    time: 0.125,
    ΔᐃΔ: 5
  }, {
    r: [[172, 1], [112, 21]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 64,
    ⵠᐃⲆⵠ: 173,
    time: 1 / 8,
    ΔᐃΔ: 5
  }, {
    r: [[173, 1], [121, 18]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 65,
    ⵠᐃⲆⵠ: 124,
    time: 0.125,
    ΔᐃΔ: 5
  }, {
    r: [[124, 1], [202, 15]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 66,
    ⵠᐃⲆⵠ: 218,
    time: 1 / 8,
    ΔᐃΔ: 5
  }, {
    r: [[162, 1], [109, 40], [108, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 67,
    ⵠᐃⲆⵠ: 160,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[163, 1], [108, 70]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 68,
    ⵠᐃⲆⵠ: 168,
    time: 1 / 20,
    ΔᐃΔ: 5
  }, {
    r: [[164, 1], [111, 40], [108, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 69,
    ⵠᐃⲆⵠ: 169,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[165, 1], [112, 40], [108, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 70,
    ⵠᐃⲆⵠ: 170,
    time: 1 / 20,
    ΔᐃΔ: 5
  }, {
    r: [[122, 1], [121, 40], [108, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 71,
    ⵠᐃⲆⵠ: 123,
    time: 1 / 20,
    ΔᐃΔ: 5
  }, {
    r: [[217, 1], [202, 40], [111, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 72,
    ⵠᐃⲆⵠ: 219,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[166, 1], [109, 80], [108, 60]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 73,
    ⵠᐃⲆⵠ: 212,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[171, 1], [108, 140]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 74,
    ⵠᐃⲆⵠ: 213,
    time: 1 / 20,
    ΔᐃΔ: 5
  }, {
    r: [[172, 1], [111, 80], [108, 60]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 75,
    ⵠᐃⲆⵠ: 214,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[173, 1], [112, 80], [108, 60]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 76,
    ⵠᐃⲆⵠ: 215,
    time: 1 / 20,
    ΔᐃΔ: 5
  }, {
    r: [[124, 1], [121, 80], [108, 60]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 77,
    ⵠᐃⲆⵠ: 216,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[218, 1], [202, 80], [111, 60]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 78,
    ⵠᐃⲆⵠ: 220,
    time: 0.05,
    ΔᐃΔ: 5
  }, {
    r: [[109, 25], [111, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 79,
    ⵠᐃⲆⵠ: 167,
    time: 1 / 5,
    ΔᐃΔ: 4
  }, {
    r: [[120, 1], [2, 1], [161, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 80,
    ⵠᐃⲆⵠ: 23,
    time: 1 / 5,
    ΔᐃΔ: 2
  }, {
    r: [[120, 5], [222, 20], [147, 5], [2, 5]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 81,
    ⵠᐃⲆⵠ: 24,
    time: 0.03333333333333333,
    ΔᐃΔ: 2
  }, {
    r: [[236, 1], [231, 8], [232, 8], [222, 8], [161, 6]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 82,
    ⵠᐃⲆⵠ: 82,
    time: 1 / 60,
    ΔᐃΔ: 2
  }, {
    r: [[2, 1], [161, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 83,
    ⵠᐃⲆⵠ: 10,
    time: 0.2,
    ΔᐃΔ: 2
  }, {
    r: [[10, 1], [174, 5], [161, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 84,
    ⵠᐃⲆⵠ: 11,
    time: 1 / 12,
    ΔᐃΔ: 2
  }, {
    r: [[11, 1], [146, 5], [147, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 85,
    ⵠᐃⲆⵠ: 40,
    time: 0.03333333333333333,
    ΔᐃΔ: 2
  }, {
    r: [[40, 1], [146, 5], [240, 10], [147, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 86,
    ⵠᐃⲆⵠ: 88,
    time: 0.02,
    ΔᐃΔ: 2
  }, {
    r: [[109, 50]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 87,
    ⵠᐃⲆⵠ: 58,
    time: 0.2,
    ΔᐃΔ: 2
  }, {
    r: [[108, 75], [109, 75], [58, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 88,
    ⵠᐃⲆⵠ: 25,
    time: 0.1,
    ΔᐃΔ: 2
  }, {
    r: [[108, 90], [109, 90], [111, 90], [25, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 89,
    ⵠᐃⲆⵠ: 26,
    time: 0.05,
    ΔᐃΔ: 2
  }, {
    r: [[108, 100], [111, 100], [112, 100], [26, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 90,
    ⵠᐃⲆⵠ: 27,
    time: 1 / 30,
    ΔᐃΔ: 2
  }, {
    r: [[121, 80], [111, 150], [112, 120], [27, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 91,
    ⵠᐃⲆⵠ: 43,
    time: 1 / 60,
    ΔᐃΔ: 2
  }, {
    r: [[202, 80], [112, 150], [121, 120], [43, 1]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 92,
    ⵠᐃⲆⵠ: 44,
    time: 1 / 90,
    ΔᐃΔ: 2
  }, {
    r: [[139, 2], [112, 40], [161, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 93,
    ⵠᐃⲆⵠ: 48,
    time: 1 / 20,
    ΔᐃΔ: 2
  }, {
    r: [[48, 1], [111, 80], [129, 1], [121, 20]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 94,
    ⵠᐃⲆⵠ: 47,
    time: 0.011111111111111112,
    ΔᐃΔ: 2
  }, {
    r: [[203, 5], [112, 50], [147, 5]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 95,
    ⵠᐃⲆⵠ: 20,
    time: 0.05,
    ΔᐃΔ: 2
  }, {
    r: [[20, 1], [203, 10], [121, 50]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 96,
    ⵠᐃⲆⵠ: 21,
    time: 0.016666666666666666,
    ΔᐃΔ: 2
  }, {
    r: [[21, 1], [203, 15], [121, 50], [202, 50]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 97,
    ⵠᐃⲆⵠ: 22,
    time: 1 / 90,
    ΔᐃΔ: 2
  }, {
    r: [[161, 4], [237, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 98,
    ⵠᐃⲆⵠ: 80,
    time: 1 / 15,
    ΔᐃΔ: 2
  }, {
    r: [[80, 1], [161, 6], [237, 4], [232, 12], [222, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 99,
    ⵠᐃⲆⵠ: 81,
    time: 1 / 150,
    ΔᐃΔ: 2
  }, {
    r: [[161, 6], [174, 5]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 100,
    ⵠᐃⲆⵠ: 29,
    time: 0.06666666666666667,
    ΔᐃΔ: 2
  }, {
    r: [[109, 20]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 101,
    ⵠᐃⲆⵠ: 120,
    time: 1 / 3,
    ΔᐃΔ: 4
  }, {
    r: [[112, 1], [161, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 102,
    ⵠᐃⲆⵠ: 147,
    time: 0.3333333333333333,
    ΔᐃΔ: 4
  }, {
    r: [[111, 10]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 103,
    ⵠᐃⲆⵠ: 148,
    time: 0.2,
    ΔᐃΔ: 4
  }, {
    r: [[111, 250]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 104,
    ⵠᐃⲆⵠ: 158,
    time: 1 / 60,
    ΔᐃΔ: 4
  }, {
    r: [[109, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 105,
    ⵠᐃⲆⵠ: 159,
    time: 0.1,
    ΔᐃΔ: 4
  }, {
    r: [[109, 15]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 106,
    ⵠᐃⲆⵠ: 125,
    time: 1 / 5,
    ΔᐃΔ: 4
  }, {
    r: [[109, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 107,
    ⵠᐃⲆⵠ: 190,
    time: 1 / 5,
    ΔᐃΔ: 4
  }, {
    r: [[109, 120]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 108,
    ⵠᐃⲆⵠ: 221,
    time: 1 / 15,
    ΔᐃΔ: 4
  }, {
    r: [[109, 20], [140, 15]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 109,
    ⵠᐃⲆⵠ: 141,
    time: 0.2,
    ΔᐃΔ: 4
  }, {
    r: [[126, 25]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 110,
    ⵠᐃⲆⵠ: 128,
    time: 1 / 5,
    ΔᐃΔ: 3
  }, {
    r: [[128, 1]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 1,
    e: 0,
    id: 111,
    ⵠᐃⲆⵠ: 127,
    time: 0.2,
    ΔᐃΔ: 3
  }, {
    r: [[142, 20], [128, 1]],
    w: 0,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 112,
    ⵠᐃⲆⵠ: 127,
    time: 0.1,
    ΔᐃΔ: 3
  }, {
    r: [[128, 1]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 1,
    id: 113,
    ⵠᐃⲆⵠ: 127,
    time: 1 / 3,
    ΔᐃΔ: 3
  }, {
    r: [[109, 60], [108, 20], [161, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 114,
    ⵠᐃⲆⵠ: 135,
    time: 1 / 10,
    ΔᐃΔ: 4
  }, {
    r: [[112, 40], [108, 45]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 115,
    ⵠᐃⲆⵠ: 151,
    time: 0.05,
    ΔᐃΔ: 4
  }, {
    r: [[151, 1], [234, 40], [238, 1]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 116,
    ⵠᐃⲆⵠ: 152,
    time: 1 / 200,
    ΔᐃΔ: 4
  }, {
    r: [[109, 50], [108, 100]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 117,
    ⵠᐃⲆⵠ: 153,
    time: 1 / 90,
    ΔᐃΔ: 4
  }, {
    r: [[108, 60], [111, 120]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 118,
    ⵠᐃⲆⵠ: 154,
    time: 1 / 90,
    ΔᐃΔ: 4
  }, {
    r: [[111, 70], [112, 140]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 119,
    ⵠᐃⲆⵠ: 155,
    time: 1 / 90,
    ΔᐃΔ: 4
  }, {
    r: [[112, 80], [121, 160]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 120,
    ⵠᐃⲆⵠ: 156,
    time: 1 / 90,
    ΔᐃΔ: 4
  }, {
    r: [[121, 90], [202, 180]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 121,
    ⵠᐃⲆⵠ: 157,
    time: 0.011111111111111112,
    ΔᐃΔ: 4
  }, {
    r: [[108, 70]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 122,
    ⵠᐃⲆⵠ: 55,
    time: 0.1,
    ΔᐃΔ: 0
  }, {
    r: [[108, 70], [109, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 123,
    ⵠᐃⲆⵠ: 56,
    time: 1 / 10,
    ΔᐃΔ: 0
  }, {
    r: [[109, 40], [108, 40]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 124,
    ⵠᐃⲆⵠ: 144,
    time: 0.1,
    ΔᐃΔ: 4
  }, {
    r: [[143, 1], [117, 1]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 125,
    ⵠᐃⲆⵠ: 145,
    time: 1 / 3,
    ΔᐃΔ: 3
  }, {
    r: [[147, 30], [184, 1], [121, 150], [149, 3]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 126,
    ⵠᐃⲆⵠ: 59,
    time: 0.008333333333333333,
    ΔᐃΔ: 2
  }, {
    r: [[59, 1], [186, 1], [202, 150], [150, 2]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 127,
    ⵠᐃⲆⵠ: 60,
    time: 0.005555555555555556,
    ΔᐃΔ: 2
  }, {
    r: [[26, 1], [197, 10], [196, 10], [161, 10]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 128,
    ⵠᐃⲆⵠ: 61,
    time: 1 / 60,
    ΔᐃΔ: 2
  }, {
    r: [[147, 20], [185, 1], [121, 150], [149, 3]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 129,
    ⵠᐃⲆⵠ: 62,
    time: 1 / 120,
    ΔᐃΔ: 1
  }, {
    r: [[62, 1], [187, 1], [202, 150], [150, 2]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 130,
    ⵠᐃⲆⵠ: 63,
    time: 0.005555555555555556,
    ΔᐃΔ: 1
  }, {
    r: [[109, 100], [161, 4]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 131,
    ⵠᐃⲆⵠ: 64,
    time: 1 / 20,
    ΔᐃΔ: 1
  }, {
    r: [[109, 30]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 132,
    ⵠᐃⲆⵠ: 101,
    time: 0.2,
    ΔᐃΔ: 1
  }, {
    r: [[108, 200], [161, 8], [222, 4], [64, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 133,
    ⵠᐃⲆⵠ: 65,
    time: 0.04,
    ΔᐃΔ: 1
  }, {
    r: [[108, 20], [231, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 134,
    ⵠᐃⲆⵠ: 102,
    time: 0.2,
    ΔᐃΔ: 1
  }, {
    r: [[111, 200], [161, 12], [231, 4], [222, 4], [65, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 135,
    ⵠᐃⲆⵠ: 66,
    time: 0.03333333333333333,
    ΔᐃΔ: 1
  }, {
    r: [[111, 20], [222, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 136,
    ⵠᐃⲆⵠ: 103,
    time: 0.1,
    ΔᐃΔ: 1
  }, {
    r: [[112, 200], [147, 10], [231, 8], [222, 8], [66, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 137,
    ⵠᐃⲆⵠ: 67,
    time: 0.02857142857142857,
    ΔᐃΔ: 1
  }, {
    r: [[112, 10], [222, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 138,
    ⵠᐃⲆⵠ: 104,
    time: 1 / 10,
    ΔᐃΔ: 1
  }, {
    r: [[121, 200], [147, 10], [222, 8], [232, 8], [67, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 139,
    ⵠᐃⲆⵠ: 68,
    time: 1 / 40,
    ΔᐃΔ: 1
  }, {
    r: [[121, 10], [232, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 140,
    ⵠᐃⲆⵠ: 105,
    time: 1 / 15,
    ΔᐃΔ: 1
  }, {
    r: [[202, 200], [147, 10], [129, 1], [68, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 141,
    ⵠᐃⲆⵠ: 69,
    time: 1 / 45,
    ΔᐃΔ: 1
  }, {
    r: [[202, 10], [232, 1], [203, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 142,
    ⵠᐃⲆⵠ: 106,
    time: 1 / 15,
    ΔᐃΔ: 1
  }, {
    r: [[234, 200], [147, 10], [185, 1], [69, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 143,
    ⵠᐃⲆⵠ: 70,
    time: 1 / 50,
    ΔᐃΔ: 1
  }, {
    r: [[234, 10], [238, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 144,
    ⵠᐃⲆⵠ: 107,
    time: 0.05,
    ΔᐃΔ: 1
  }, {
    r: [[109, 100]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 145,
    ⵠᐃⲆⵠ: 71,
    time: 1 / 25,
    ΔᐃΔ: 1
  }, {
    r: [[71, 1], [108, 100], [109, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 146,
    ⵠᐃⲆⵠ: 72,
    time: 1 / 40,
    ΔᐃΔ: 1
  }, {
    r: [[72, 1], [111, 50], [108, 50], [109, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 147,
    ⵠᐃⲆⵠ: 73,
    time: 1 / 50,
    ΔᐃΔ: 1
  }, {
    r: [[73, 1], [112, 50], [111, 50], [108, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 148,
    ⵠᐃⲆⵠ: 74,
    time: 1 / 70,
    ΔᐃΔ: 1
  }, {
    r: [[74, 1], [121, 50], [112, 50], [111, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 149,
    ⵠᐃⲆⵠ: 75,
    time: 0.011111111111111112,
    ΔᐃΔ: 1
  }, {
    r: [[75, 1], [202, 50], [121, 50], [112, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 150,
    ⵠᐃⲆⵠ: 76,
    time: 1 / 120,
    ΔᐃΔ: 1
  }, {
    r: [[175, 1], [111, 200]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 151,
    ⵠᐃⲆⵠ: 77,
    time: 1 / 60,
    ΔᐃΔ: 2
  }, {
    r: [[176, 1], [111, 200]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 152,
    ⵠᐃⲆⵠ: 78,
    time: 1 / 60,
    ΔᐃΔ: 2
  }, {
    r: [[177, 1], [111, 200], [149, 1]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 1,
    e: 0,
    id: 153,
    ⵠᐃⲆⵠ: 79,
    time: 1 / 60,
    ΔᐃΔ: 2
  }, {
    r: [[174, 10], [2, 5], [161, 6]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 154,
    ⵠᐃⲆⵠ: 83,
    time: 0.1,
    ΔᐃΔ: 2
  }, {
    r: [[2, 3], [161, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 155,
    ⵠᐃⲆⵠ: 84,
    time: 0.1,
    ΔᐃΔ: 2
  }, {
    r: [[83, 1], [179, 1], [146, 15], [147, 5], [222, 8]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 156,
    ⵠᐃⲆⵠ: 85,
    time: 0.016666666666666666,
    ΔᐃΔ: 2
  }, {
    r: [[84, 1], [178, 1], [146, 10], [147, 5], [222, 8]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 157,
    ⵠᐃⲆⵠ: 86,
    time: 0.016666666666666666,
    ΔᐃΔ: 2
  }, {
    r: [[181, 1]],
    w: 0,
    f: 0,
    ᐃΔⲆ: 1,
    e: 0,
    id: 158,
    ⵠᐃⲆⵠ: 180,
    time: 1 / 5,
    ΔᐃΔ: 0
  }, {
    r: [[109, 20], [161, 1]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 159,
    ⵠᐃⲆⵠ: 181,
    time: 1 / 5,
    ΔᐃΔ: 0
  }, {
    r: [[108, 100], [140, 30]],
    w: 1,
    f: 1,
    ᐃΔⲆ: 0,
    e: 0,
    id: 160,
    ⵠᐃⲆⵠ: 182,
    time: 0.1,
    ΔᐃΔ: 4
  }, {
    r: [[109, 20]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 161,
    ⵠᐃⲆⵠ: 183,
    time: 0.2,
    ΔᐃΔ: 4
  }, {
    r: [[109, 100], [108, 50], [2, 5], [174, 5], [161, 6]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 162,
    ⵠᐃⲆⵠ: 198,
    time: 1 / 20,
    ΔᐃΔ: 4
  }, {
    r: [[109, 250], [147, 10], [146, 2], [139, 2]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 163,
    ⵠᐃⲆⵠ: 223,
    time: 0.02,
    ΔᐃΔ: 4
  }, {
    r: [[109, 250], [161, 10], [146, 2], [222, 8]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 164,
    ⵠᐃⲆⵠ: 224,
    time: 1 / 50,
    ΔᐃΔ: 4
  }, {
    r: [[161, 10], [174, 6], [2, 4], [126, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 165,
    ⵠᐃⲆⵠ: 89,
    time: 0.05,
    ΔᐃΔ: 4
  }, {
    r: [[109, 250], [161, 10], [120, 10], [231, 8]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 166,
    ⵠᐃⲆⵠ: 230,
    time: 0.02,
    ΔᐃΔ: 4
  }, {
    r: [[109, 40]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 167,
    ⵠᐃⲆⵠ: 94,
    time: 0.2,
    ΔᐃΔ: 1
  }, {
    r: [[94, 1], [108, 40], [109, 50]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 168,
    ⵠᐃⲆⵠ: 95,
    time: 1 / 10,
    ΔᐃΔ: 1
  }, {
    r: [[95, 1], [111, 40], [108, 50], [109, 60]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 169,
    ⵠᐃⲆⵠ: 96,
    time: 1 / 20,
    ΔᐃΔ: 1
  }, {
    r: [[96, 1], [112, 40], [111, 70], [108, 80]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 170,
    ⵠᐃⲆⵠ: 97,
    time: 1 / 30,
    ΔᐃΔ: 1
  }, {
    r: [[97, 1], [121, 40], [112, 70], [111, 110]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 171,
    ⵠᐃⲆⵠ: 98,
    time: 1 / 60,
    ΔᐃΔ: 1
  }, {
    r: [[98, 1], [202, 50], [121, 80], [112, 110]],
    w: 1,
    f: 0,
    ᐃΔⲆ: 0,
    e: 0,
    id: 172,
    ⵠᐃⲆⵠ: 99,
    time: 0.011111111111111112,
    ΔᐃΔ: 1
  }];
  v623 = 300;
  ΔΔⲆ = {
    ⲆⲆⵠⲆΔⵠᐃ: 300,
    ⵠᐃΔᐃᐃᐃⲆ: 301,
    ⵠΔⵠⲆᐃⲆᐃ: 302,
    ᐃΔΔⵠᐃᐃⲆ: 303,
    ΔⵠⲆⵠⵠᐃⵠ: 304,
    ⲆⵠΔᐃⵠⵠΔ: 305,
    ᐃΔⲆⲆΔΔⵠ: 306,
    ⵠᐃᐃΔΔΔᐃ: 307,
    ⵠⵠᐃⲆⵠᐃΔ: 308,
    ΔⲆⵠᐃᐃᐃⲆ: 309,
    ΔΔⵠⵠΔᐃⵠ: 310,
    ΔⲆΔⵠⵠⵠⲆ: 311,
    EMPTY: 312,
    ⲆΔΔⲆᐃⵠⲆ: 313,
    ⲆⵠᐃⵠΔᐃⵠ: 314,
    ᐃⲆᐃⵠΔⵠⵠ: 315,
    ⲆᐃᐃᐃⲆⲆᐃ: 316,
    ⲆⵠⲆⲆΔᐃᐃ: 317,
    ⲆᐃⵠΔᐃᐃⵠ: 318,
    ΔΔΔⵠⵠᐃᐃ: 319,
    ΔΔⲆⲆΔᐃⵠ: 320,
    ΔᐃΔⲆΔᐃⵠ: 321,
    ᐃⵠΔⵠᐃ: 322,
    ⲆⵠΔⲆⵠᐃⲆ: 323,
    ⵠⲆⵠᐃ: 324,
    ΔᐃⲆΔⵠᐃᐃ: 325,
    ᐃⲆΔⵠᐃΔᐃ: 326,
    ᐃΔᐃⵠᐃΔⲆ: 327,
    ⲆⵠⵠⲆⲆᐃΔ: 328,
    ΔⵠᐃⲆⵠΔΔ: 329,
    ᐃᐃⵠⲆⵠⲆᐃ: 330,
    ⵠΔΔΔⵠⲆⲆ: 331,
    POINTS: 332,
    ⵠⲆⲆⲆⲆⲆⲆ: 333,
    ᐃⵠⵠᐃΔⲆⲆ: 334,
    ΔⵠⲆᐃⵠⵠⵠ: 335,
    ΔΔΔᐃΔᐃⲆ: 336,
    ᐃΔⵠΔⲆⵠΔ: 337,
    ΔᐃΔⵠⲆⵠⵠ: 338,
    ᐃᐃΔⲆΔⵠᐃ: 339,
    ⵠⲆᐃⵠΔⲆΔ: 340,
    ᐃⵠⵠⵠᐃᐃⲆ: 341,
    ᐃⲆⵠΔΔⲆⵠ: 342,
    ᐃⲆⲆΔΔΔΔ: 343
  };
  function f67(p484, p485, p486, p487, p488) {
    const v733 = (8 << (p484 >> 8 & 255)) + (0 << (p484 >> 24 & 255)) + (24 << (p484 & 255)) + (16 << (p484 >> 16 & 255));
    const v734 = (2531011 + (14529 + p485) * 214013) % 4294967296;
    const v735 = (0 << (p486 >> 24 & 255)) + (8 << (p486 >> 8 & 255)) + (16 << (p486 & 255)) + (24 << (p486 >> 16 & 255));
    const v736 = (1 + (27085 + p487) * 22695477) % 4294967296;
    const v737 = p488 ^ 54269;
    const vF382 = f38(v733, v734);
    f514(v735, v736, v737, v733, v734);
    return ~(vF382 & 20695) & (vF382 | 20695);
  }
  function f68() {
    v772[99] = ["Reidite Axe", "Legendary and lethal", "Damage: 33", "Shield Penetration: 6"];
    v772[98] = ["Amethyst Axe", "Purple and powerful", "Damage: 30", "Shield Penetration: 5"];
    v772[97] = ["Diamond Axe", "Sparkle and slice", "Damage: 27", "Shield Penetration: 4"];
    v772[96] = ["Gold Axe", "Chop 'til it drops!", "Damage: 24", "Shield Penetration: 3"];
    v772[95] = ["Stone Axe", "Rock your logs", "Damage: 21", "Shield Penetration: 2"];
    v772[94] = ["Wood Axe", "Eco-friendly deforestation!", "Damage: 14", "Shield Penetration: 1"];
    v772[153] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"];
    v772[154] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"];
    v772[155] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"];
    v772[156] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"];
    v772[157] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"];
    v772[76] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"];
    v772[75] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"];
    v772[74] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"];
    v772[73] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"];
    v772[72] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"];
    v772[71] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"];
    v772[56] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
    v772[221] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
    v772[107] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
    v772[70] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
    v772[106] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
    v772[69] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
    v772[105] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
    v772[68] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
    v772[104] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"];
    v772[67] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
    v772[103] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
    v772[66] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"];
    v772[102] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"];
    v772[65] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
    v772[101] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
    v772[64] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
    v772[152] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."];
    v772[237] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
    v772[240] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
    v772[232] = ["Vulture Feather", "From a deadly vulture"];
    v772[234] = ["Emerald", "How many golden breads can you get from it?"];
    v772[238] = ["Sand Worm Juice", "I don't want to know how you got this."];
    v772[80] = ["Turban", "Useful to survive in the desert."];
    v772[81] = ["Ninja outfit", "Essential to survive in the desert"];
    v772[82] = ["Pilot Hat", "Take off and land with flying objects much faster."];
    v772[236] = ["Pilot Glasses"];
    v772[225] = ["Tamed Boar", "Fast on lands and slow on water."];
    v772[239] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
    v772[226] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
    v772[227] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"];
    v772[228] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"];
    v772[229] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"];
    v772[89] = ["Saddle", "Hit a boar with it to tame it."];
    v772[90] = ["Witch Hat", "You're a wizard Starvy!"];
    v772[91] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."];
    v772[92] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
    v772[93] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
    v772[100] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
    v772[24] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"];
    v772[224] = ["Sled", "You are faster with it in the snow"];
    v772[223] = ["Boat", "You are faster with it in the water"];
    v772[230] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"];
    v772[39] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 70"];
    v772[222] = ["Penguin Feather", "From a deadly cute penguin."];
    v772[231] = ["Hawk Feather", "From a deadly hawk."];
    v772[233] = ["Cactus", "Food : 20", "Water : 10"];
    v772[211] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
    v772[210] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
    v772[209] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
    v772[208] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    v772[218] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"];
    v772[217] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
    v772[219] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
    v772[220] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"];
    v772[32] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"];
    v772[212] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"];
    v772[213] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
    v772[214] = ["Gold Door Spike", "Are you rebuilding the \"el dorado?\"", "Damage: 15", "On-Hit Damage: 2", "Durability: 400"];
    v772[215] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"];
    v772[216] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"];
    v772[205] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
    v772[207] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
    v772[204] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v772[206] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v772[53] = ["Pitchfork", "Perfect for gathering"];
    v772[54] = ["Golden Pitchfork", "Essential for a real farmer."];
    v772[235] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."];
    v772[v626.ᐃᐃⲆᐃᐃᐃΔ] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"];
    v772[v626.ΔⵠⵠΔⲆᐃᐃ] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"];
    v772[v626.ⵠᐃⲆⵠⵠⵠΔ] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"];
    v772[v626.ⵠΔΔΔⲆⲆΔ] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"];
    v772[v626.ⵠⵠᐃⵠⲆΔⲆ] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"];
    v772[186] = ["Lava Cube", "You feel an immense power emanating from this cube"];
    v772[187] = ["Lava Orb", "You feel an immense power emanating from this orb"];
    v772[63] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"];
    v772[17] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"];
    v772[150] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
    v772[60] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
    v772[34] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
    v772[19] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"];
    v772[203] = ["Flame", "It's hot!"];
    v772[20] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
    v772[21] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
    v772[22] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
    v772[202] = ["Reidite", "The ultimate ore"];
    v772[184] = ["Dragon Cube", "You feel a great power emanating from this cube"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v774[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."];
    v774[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
    v774[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."];
    v774[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
    v774[27] = ["You were trampled by that boar. From now on, your new nickname is \"the doormat\"."];
    v774[28] = ["With a force of 3300 newtons, the shock wave from the closing of the crab king's claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\""];
    v774[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
    v774[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."];
    v774[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
    v774[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
    v774[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
    v774[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
    v774[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
    v774[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
    v774[37] = ["You hear \"Avada Kedavra!\" before you turn to ashes."];
    v774[38] = ["You died crushed by an angry baby mammoth."];
    v774[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
    v774[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[341] = "A sandstorm is approaching in a few seconds.";
    v772[340] = "The sandstorm will soon stop.";
    v772[343] = "A blizzard is approaching in a few seconds.";
    v772[342] = "The blizzard will soon stop.";
    v772[328] = " BACK TO THE GAME";
    v772[329] = " Share on Twitter";
    v772[330] = " Share on Facebook";
    v772[331] = "You can buy items on the shop in the next game with your points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Kill";
    v772[335] = "Days survived";
    v772[336] = "Building method: Free. Press G to change";
    v772[337] = "Building method: Grid. Press G to change";
    v772[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v772[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"];
    v772[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v738 = 0; v738 < 7; v738++) {
      document.getElementById("claim_reward_" + v738).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v772[7] = ["Hand"];
    v772[140] = ["Dirt", "Dirty!"];
    v772[126] = ["Sand", "I got it in my eyes!"];
    v772[109] = ["Wood", "You can't get enough of it!"];
    v772[108] = ["Stone", "Also called a rock"];
    v772[111] = ["Gold", "Be generous, give it to others"];
    v772[112] = ["Diamond", "What will you make with it?"];
    v772[121] = ["Amethyst", "It's Mauve like Lapa"];
    v772[131] = ["Flour", "Used in cooking"];
    v772[133] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"];
    v772[136] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
    v772[116] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
    v772[117] = ["Cooked meat", "A rare steak, please", "Food: 35"];
    v772[137] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"];
    v772[138] = ["Cooked fish", "With lemon it's perfect", "Food: 35"];
    v772[143] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"];
    v772[145] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"];
    v772[200] = ["Candies", "Only for children!", "Food: 20"];
    v772[199] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"];
    v772[201] = ["Garland", "Perfect decoration for roofs"];
    v772[115] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", "Durability: 700", "Lifetime: 8 days"];
    v772[110] = ["Berry", "Berry tasty!", "Food: 10"];
    v772[132] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v772[134] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
    v772[188] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v772[189] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
    v772[191] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v772[192] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
    v772[193] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need water: 3min", "Durability: 1000", "Lifetime: 8 days"];
    v772[194] = ["Thorn bush", "It stings!"];
    v772[141] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"];
    v772[142] = ["Ice", "Useful for making cakes and water"];
    v772[55] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"];
    v772[174] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
    v772[2] = ["Rabbit Fur", "That rabbit was so cute..."];
    v772[178] = ["Pure Fur", "You're a bread factory"];
    v772[179] = ["Dark Fur", "You get ready to do something wrong"];
    v772[146] = ["Winter Fur", "These animals just wanted a hug..."];
    v772[139] = ["Scales", "It smells like fish!"];
    v772[129] = ["Kraken Skin", "Weren't you too scared?"];
    v772[113] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
    v772[118] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"];
    v772[114] = ["Workbench", "Very useful to craft all kinds of objects"];
    v772[161] = ["Cord", "Used in crafting Hats and Bag"];
    v772[147] = ["Diamond Cord", "Used in crafting Special Hats"];
    v772[167] = ["Chest", "Allows you to store items", "Durability: 500"];
    v772[57] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"];
    v772[0] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
    v772[5] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
    v772[6] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"];
    v772[9] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"];
    v772[30] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
    v772[62] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"];
    v772[16] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
    v772[8] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"];
    v772[1] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"];
    v772[3] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"];
    v772[4] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"];
    v772[31] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"];
    v772[35] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"];
    v772[36] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work well on amethyst", "Damage: 3", "Building Damage: 30"];
    v772[37] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"];
    v772[38] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"];
    v772[45] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 95"];
    v772[12] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
    v772[13] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"];
    v772[14] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
    v772[15] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
    v772[33] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
    v772[46] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"];
    v772[50] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"];
    v772[51] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"];
    v772[52] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    v772[58] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
    v772[25] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
    v772[26] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"];
    v772[27] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"];
    v772[43] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
    v772[44] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
    v772[59] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
    v772[23] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"];
    v772[41] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"];
    v772[42] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside water and in winter"];
    v772[83] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside water and in winter"];
    v772[10] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"];
    v772[11] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"];
    v772[40] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
    v772[88] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
    v772[84] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v772[85] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside water and in winter"];
    v772[86] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v772[48] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
    v772[47] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"];
    v772[185] = ["Dragon Orb", "You feel a great power emanating from this orb"];
    v772[149] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
    v772[175] = ["Green Gemstone", "You didn't cheat, promise?"];
    v772[176] = ["Orange Gemstone", "Only a real pirate can find it!"];
    v772[177] = ["Blue Gemstone", "For too kind people"];
    v772[77] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"];
    v772[78] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"];
    v772[79] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"];
    v772[180] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
    v772[181] = ["Empty Bucket", "You need to fill this bucket near a water source"];
    v772[127] = ["Bottle", "Allows you to drink water anywhere", "Water: 50"];
    v772[128] = ["Empty Bottle", "You can fill this bottle near a water source"];
    v772[130] = ["Empty Watering Can", "You must fill it with a water source to use it"];
    v772[49] = ["Watering Can", "Allows watering of plants", "Damage: 1"];
    v772[29] = ["Bag", "More space for your items!"];
    v772[120] = ["Paper", "Used in book-crafting"];
    v772[28] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"];
    v772[195] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
    v772[148] = ["Lock", "Allow you to lock your chest"];
    v772[158] = ["Lock-pick", "Allows you to unlock one chest"];
    v772[159] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"];
    v772[125] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
    v772[183] = ["Sign", "Leave a message to others", "Durability: 200"];
    v772[190] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
    v772[182] = ["Well", "Allows bottle filling", "Durability: 1000"];
    v772[162] = ["Wood Wall", "It's just a wall", "Durability: 1000"];
    v772[163] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"];
    v772[164] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"];
    v772[165] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
    v772[122] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
    v772[160] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
    v772[168] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"];
    v772[169] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"];
    v772[170] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
    v772[123] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
    v772[166] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"];
    v772[171] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
    v772[172] = ["Gold Door", "Are you rebuilding the \"el dorado?\"", "Durability: 2000"];
    v772[173] = ["Diamond Door", "For a shining house", "Durability: 2500"];
    v772[124] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
    v772[119] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"];
    v772[135] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"];
    v772[144] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"];
    v772[151] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"];
    v772[300] = "You cannot join this server";
    v772[301] = "Kicked: ";
    v772[302] = "Your key is already used by someone else";
    v772[303] = "Your key is wrong";
    v772[304] = "You have an old version, you need to clear your cache";
    v772[338] = "Your client version is too recent for this server. The server is being updated";
    v772[339] = "Wrong password! To enter a password: https://starve.io/?password=...";
    v772[305] = "There are no more new resources";
    v772[306] = "You survived 1 day";
    v772[307] = "You survived ";
    v772[308] = " days";
    v772[309] = "You are dead ;-;";
    v772[310] = "Server cannot find spawn location! Spam the play button!";
    v772[311] = "Server is full! Spam the play button!";
    v772[312] = "Resource is empty";
    v772[313] = "Inventory is full (right-click to empty items)";
    v772[314] = " is dead";
    v772[315] = "This is not the right tool";
    v772[316] = "You joined a team";
    v772[317] = "You are dead";
    v772[318] = " joined the team";
    v772[319] = "Your team was destroyed";
    v772[320] = "You left the team";
    v772[321] = " left the team";
    v772[322] = "Someone stole your token :>";
    v772[323] = "Choose a server";
    v772[324] = "players";
    v772[325] = "total players";
    v772[326] = "players on this mode";
    v772[327] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Nickname";
    v774[0] = ["You were killed for no reason"];
    v774[1] = ["You starved to death, as the name of the game implies"];
    v774[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
    v774[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."];
    v774[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
    v774[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."];
    v774[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."];
    v774[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
    v774[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."];
    v774[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
    v774[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
    v774[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
    v774[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
    v774[13] = ["You died of thirst. Better drink your own piss."];
    v774[14] = ["Did you know starver's mouths are always below water when swimming? Now you know."];
    v774[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
    v774[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
    v774[17] = ["Your skin's falling apart, the sun killed you."];
    v774[18] = ["Garlic stored in your pockets boiled your brain."];
    v774[19] = ["As a vampire, don't stand near the garlic cloves."];
    v774[20] = ["You ate garlic as a vampire, what did you expect?"];
    v774[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", "Uuunnnggg...", "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"];
  }
  const v739 = 18;
  function f69() {
    v772[184] = ["You feel a great power emanating from this orb"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[328] = " BACK TO THE GAME";
    v772[329] = " Share on Twitter";
    v772[330] = " Share on Facebook";
    v772[331] = "You can buy items on the shop in the next game with your points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Kill";
    v772[335] = "Days survived";
    v772[336] = "Building method: Free. Press G to change";
    v772[337] = "Building method: Grid. Press G to change";
    v772[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v772[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v772[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v740 = 0; v740 < 7; v740++) {
      document.getElementById("claim_reward_" + v740).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v772[7] = ["Рука"];
    v772[140] = ["Земля", "Грязно!"];
    v772[126] = ["Песок", "Он в моих глазах!"];
    v772[109] = ["Дерево", "Постоянно нужно больше!"];
    v772[108] = ["Камень", "Твердый"];
    v772[111] = ["Золото", "Будьте щедры, давайте его другим"];
    v772[112] = ["Алмаз", "Что вы создадите с помощью него?"];
    v772[121] = ["Аметист", "Он сиреневый, как Lapa"];
    v772[131] = ["Мука", "Используется в готовке"];
    v772[133] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
    v772[136] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
    v772[116] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
    v772[117] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
    v772[137] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
    v772[138] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
    v772[143] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
    v772[145] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
    v772[200] = ["Конфеты", "Только для детей!", "Еда: 20"];
    v772[199] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
    v772[201] = ["Гирлянда", "Прекрасная декорация для крыши"];
    v772[115] = ["Семя Ягоды", "Вырастает в ягоды", "Рождение: 2мин", "Рост: 55сек", "Нужна вода: 3мин 20сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v772[110] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
    v772[132] = ["Пшеничное Семя", "Вырастает в пшеницу", "Рождение: 2мин", "Рост: 16сек", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v772[134] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
    v772[188] = ["Семена Тыквы", "Вырастает в тыкву", "Рождение: 2мин 40сек", "Рост: 2мин", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v772[189] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
    v772[191] = ["Семена Чеснока", "Очень опасно для вампиров", "Урон: 20", "Рождение: 4мин", "Рост: 4 мин", "Нужна вода: 1мин 40сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v772[192] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
    v772[193] = ["Семена Колючего Куста", "Может нанести урон врагам", "Урон: 20", "Рождение: 4мин", "Рост: 15сек", "Нужна вода: 3мин", "Прочность: 1000", "Продолжительность: 8 дней"];
    v772[194] = ["Колючий Куст", "Это больно!"];
    v772[141] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", "Прочность: 2000"];
    v772[142] = ["Лёд", "Используется для изготовления тортов и воды"];
    v772[55] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", "Урон: 2"];
    v772[174] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
    v772[2] = ["Шкура Зайца", "Этот кролик был таким милым..."];
    v772[178] = ["Чистая Шкура", "Вы - фабрика хлеба"];
    v772[179] = ["Чёрная Шкура", "Вы готовы делать зло."];
    v772[146] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
    v772[139] = ["Чешуя", "Она пахнет рыбой!"];
    v772[129] = ["Шкура Кракена", "Вы не испугались?"];
    v772[113] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
    v772[118] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
    v772[114] = ["Верстак", "Необходим для создания многих предметов"];
    v772[161] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
    v772[147] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
    v772[167] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
    v772[57] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
    v772[0] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
    v772[5] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
    v772[6] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
    v772[9] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
    v772[30] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
    v772[62] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
    v772[16] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
    v772[8] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
    v772[1] = ["Каменная Кирка", "Может добывать дерево, камень и золото", "Урон: 2"];
    v772[3] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", "Урон по строениям: 1"];
    v772[4] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", "Урон по строениям: 1"];
    v772[31] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", "Урон по строениям: 1"];
    v772[35] = ["Каменный молот", "Используется для разрушения зданий", "Плохо разрушает алмазные и аметистовые здания", "Урон: 2", "Урон по строениям: 20"];
    v772[36] = ["Золотой Молот", "Используется для разрушения зданий", "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
    v772[37] = ["Алмазный Молот", "Используется для разрушения зданий", "Урон: 4", "Урон по строениям: 40"];
    v772[38] = ["Аметистовый Молот", "Используется для разрушения зданий", "Урон: 5", "Урон по строениям: 50"];
    v772[45] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
    v772[12] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
    v772[13] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
    v772[14] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
    v772[15] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
    v772[33] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
    v772[46] = ["Каменная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 2"];
    v772[50] = ["Золотая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 3", "Урон по строениям: 1"];
    v772[51] = ["Алмазная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 4", "Урон по строениям: 1"];
    v772[52] = ["Аметистовая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 5", "Урон по стреониям: 1"];
    v772[58] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
    v772[25] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
    v772[26] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
    v772[27] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
    v772[43] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
    v772[59] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
    v772[23] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", "Защищает от холода вне воды."];
    v772[41] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", "Защищает от холода вне воды."];
    v772[42] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", "Защищает от холода вне воды."];
    v772[83] = ["Капюшон", "Вы разбойник", "Вы можете украсть что-то, если", "1) Ночь", "2) Вы ничего не носите", "3)Если вас не тронули в течение восьми секунд", "4) Вы не рядом с огнём", "5) Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v772[10] = ["Теплые Наушники", "Какая-то маленькая шапка.", "Защищает от холода вне воды."];
    v772[11] = ["Шапка", "Так же называется пальтом.", "Защищает от холода вне воды."];
    v772[40] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
    v772[84] = ["Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v772[85] = ["Зимний Капюшон", "Вы можете украсть что-то, если", "- Ночь", "- Вы ничего не носите", "- Если вас не тронули в течение четырёх секунд", "- Вы не рядом с огнём", "- Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v772[86] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v772[48] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
    v772[47] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 4, Защита от животных: 16"];
    v772[185] = ["Шар Дракона", "Даётся за квест"];
    v772[149] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
    v772[175] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
    v772[176] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
    v772[177] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
    v772[77] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", "Защита от игроков: 4, Защита от животных: 16"];
    v772[78] = ["Оранжевая Корона", "Вам очень повезло", "Защита от игроков: 4, Защита от животных: 16"];
    v772[79] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", "Защита от игроков: 4, Защита от животных: 16"];
    v772[180] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
    v772[181] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
    v772[127] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
    v772[128] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
    v772[130] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
    v772[49] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
    v772[29] = ["Рюкзак", "Больше места для ваших предметов!"];
    v772[120] = ["Бумага", "Используется при создании книги"];
    v772[28] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
    v772[195] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
    v772[148] = ["Замок", "Позволяет вам закрыть ваш сундук"];
    v772[158] = ["Ключ", "Даёт вам открыть один запертый сундук"];
    v772[159] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
    v772[125] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
    v772[183] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
    v772[190] = ["Крыша", "Немного скрывает вас и согревает!"];
    v772[182] = ["Колодец", "Позволяет заполнить бутылку", "Прочность: 1000"];
    v772[162] = ["Деревянная Стена", "Это просто стена", "Прочность: 1000"];
    v772[163] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
    v772[164] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", "Прочность: 2000"];
    v772[165] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
    v772[122] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
    v772[160] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
    v772[168] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
    v772[169] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
    v772[170] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
    v772[123] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
    v772[166] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", "Прочность: 1000"];
    v772[171] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
    v772[172] = ["Золотая Дверь", "Вы перестраиваете \"Эль Дорадо?\"", "Прочность: 2000"];
    v772[173] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
    v772[124] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
    v772[119] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", "Прочность: 1000"];
    v772[135] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", "Прочность: 2000"];
    v772[144] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", "Прочность: 2000"];
    v772[151] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
    v772[300] = "Вы не можете зайти на этот сервер";
    v772[301] = "Выгнаны: ";
    v772[302] = "Ваш ключ уже используется кем-то";
    v772[303] = "Ваш ключ неправильный";
    v772[304] = "У вас старая версия, вам нужно очистить кеш";
    v772[305] = "Ресурсов больше нет";
    v772[306] = "Вы выжили 1 день";
    v772[307] = "Вы выжили ";
    v772[308] = " дней";
    v772[309] = "Вы умерли ;-;";
    v772[310] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
    v772[311] = "Сервер заполнен! Спамьте кнопку играть!";
    v772[312] = "Ресурсы закончились";
    v772[313] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
    v772[314] = " умер";
    v772[315] = "Это не тот инструмент";
    v772[316] = "Вы вошли в команду";
    v772[317] = "Вы умерли";
    v772[318] = " вошёл в команду";
    v772[319] = "Ваша команда была разрушена";
    v772[320] = "Вы покинули команду";
    v772[321] = " покинул команду";
    v772[322] = "Кто-то использует ваш токен :>";
    v772[323] = "Выберите сервер";
    v772[324] = "игроков";
    v772[325] = "игроков всего";
    v772[326] = "игроков в этом режиме";
    v772[327] = "Скоро...";
    document.getElementById("nickname_input").placeholder = "Имя";
    v774[0] = ["Вы были убиты без причины"];
    v774[1] = ["Вы умерли от голода, как название игры подразумевает это"];
    v774[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
    v774[3] = ["Игрок убил тебя и сказал 'стань лучше.'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
    v774[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
    v774[5] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
    v774[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
    v774[7] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
    v774[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
    v774[9] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
    v774[10] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
    v774[11] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
    v774[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
    v774[13] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
    v774[14] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
    v774[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
    v774[16] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
    v774[17] = ["Твоя кожа разваливается, солнце убило тебя"];
    v774[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
    v774[19] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
    v774[20] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
    v774[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg... Я голоден", "Нужны твои мозги Uuunnnggg...", "Свежее мясо здесь... Uuunnnggg", "Uuunnnggg... Ты вкусный", "Uuunnnggg...", "Еда… Uuunnnggg...", "Я чувствую запах крови... Uuunnnggg"];
  }
  function f70(p489, p490, p491, p492, p493, p494) {
    v58(vVVVVUndefined212, p489, p490, p491, p492, p493, p494);
    const vVh2 = f74(v2773[0], v2773[1]);
    const vQh = f71(v2773[2], v2773[3], v2773[4], v2773[5], v2773[0], v2773[1]);
    return (24 << ((vVh2 ^ vQh) >> 24 & 255)) + (16 << ((vVh2 ^ vQh) >> 8 & 255)) + (0 << ((vVh2 ^ vQh) >> 16 & 255)) + (8 << ((vVh2 ^ vQh) & 255));
  }
  function f71(p495, p496, p497, p498, p499, p500) {
    vVUndefined14(vVVVVUndefined212, p495, p496, p497, p498, p499, p500);
    const vF44 = f44(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4], v2773[5]);
    f39(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4]);
    return ~(vF44 & 12470) & 12470 | ~(vF44 & 12470) & vF44;
  }
  const v741 = 13;
  function f72(p501, p502, p503, p504, p505, p506) {
    const v742 = (24 << (p501 >> 24 & 255)) + (8 << (p501 >> 16 & 255)) + (16 << (p501 >> 8 & 255)) + (0 << (p501 & 255));
    const v743 = (16 << (p502 & 255)) + (8 << (p502 >> 16 & 255)) + (0 << (p502 >> 8 & 255)) + (24 << (p502 >> 24 & 255));
    const v744 = ~(p503 & 18255) & p503 | ~(p503 & 18255) & 18255;
    const v745 = ~(p504 & 63457) & p504 | ~(p504 & 63457) & 63457;
    const v746 = p506 ^ 46575;
    const vF46 = f46(v742, v743, v744, v745, (1 + (55567 + p505) * 22695477) % 4294967296);
    f497(v746, v742, v743, v744, v745);
    return vF46 ^ 4733;
  }
  const v747 = 11;
  function f73() {
    v772[184] = ["You feel a great power emanating from this orb"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[328] = " BACK TO THE GAME";
    v772[329] = " Share on Twitter";
    v772[330] = " Share on Facebook";
    v772[331] = "You can buy items on the shop in the next game with your points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Kill";
    v772[335] = "Days survived";
    v772[336] = "Building method: Free. Press G to change";
    v772[337] = "Building method: Grid. Press G to change";
    v772[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v772[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v772[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v748 = 0; v748 < 7; v748++) {
      document.getElementById("claim_reward_" + v748).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v772[7] = ["mão"];
    v772[140] = ["terra", "está sujo!"];
    v772[126] = ["areia", "entrou nos meus olhos!"];
    v772[109] = ["madeira", "você não pode pegar o suficiente disso!"];
    v772[108] = ["pedra", "também chamado rocha"];
    v772[111] = ["ouro", "seja generoso, dê para outros"];
    v772[112] = ["diamante", "o que você irá fazer com isso?"];
    v772[121] = ["ametista", "é mauve como lapa"];
    v772[131] = ["farinha", "usada na cozinha"];
    v772[133] = ["biscoito", "biscoito da vovó", "comida: 50"];
    v772[136] = ["bolo", "bolo dos sonhos para gourmets", "comida: 100"];
    v772[116] = ["carne crua", "você pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"];
    v772[117] = ["carne assada", "um mal passado, por favor", "comida: 35"];
    v772[137] = ["peixe cru", "eu acho que ainda está vivo", "causa envenenamento por comida: 10", "comida: 18"];
    v772[138] = ["peixe assado", "com limão é perfeito", "comida: 35"];
    v772[143] = ["pão", "um excelente pão francês", "é a moeda do mercado", "comida: 15"];
    v772[145] = ["sanduíche", "saboroso com rissol de krabby", "comida: 100"];
    v772[200] = ["doces", "apenas para crianças!", "comida: 100"];
    v772[199] = ["cana-de-açúcar", "prove, é delicioso!", "comida: 100"];
    v772[201] = ["pisca-pisca", "decoração perfeita de telhado"];
    v772[115] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de água em: 3min 20s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v772[110] = ["berry", "Berry saborosa!", "comida: 10"];
    v772[132] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 days"];
    v772[134] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"];
    v772[188] = ["semente de abóbora", "cresce como abóbora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 dias"];
    v772[189] = ["abóbora", "é a lembrança do halloween", "comida: 30"];
    v772[191] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de água em: 1min 40s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v772[192] = ["alho", "cura você e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"];
    v772[193] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de água em: 3min", "durabilidade: 1000", "tempo de vida: 8 days"];
    v772[194] = ["mato de espinhos", "pica!"];
    v772[141] = ["pote", "sério, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rápido e com menos água", "durabilidade: 2000"];
    v772[142] = ["gelo", "útil para fazer bolo e água"];
    v772[55] = ["chave inglesa", "para reparar portas, muros e muros com espinho", "dano: 2"];
    v772[174] = ["pele de lobo", "cachorro? mas onde está o cachorro?!"];
    v772[2] = ["pele de coelho", "o coelho era tão fofo..."];
    v772[178] = ["pele pura", "você é uma fábrica de pão"];
    v772[179] = ["pele negra", "você está pronto para fazer algo errado"];
    v772[146] = ["pele de inverno", "ele só queria um abraço"];
    v772[139] = ["escala", "é pequeno como peixe!"];
    v772[129] = ["pele do kraken", "você não está com medo?"];
    v772[113] = ["fogueira", "esquenta você!", "durabilidade: 150", "tempo de vida: 2min"];
    v772[118] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"];
    v772[114] = ["mesa de trabalho", "muito útil para fazer todos os objetos"];
    v772[161] = ["linha", "usada para fazer chapéus e mochila"];
    v772[147] = ["linha de diamante", "usada para fazer chapéus especiais"];
    v772[167] = ["baú", "permite que você guarde itens", "durabilidade: 500"];
    v772[57] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construções: 4"];
    v772[0] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construções: 6"];
    v772[5] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construções: 7"];
    v772[6] = ["espada de diamante", "você pode sentir o poder", "dano: 24", "dano em construções: 8"];
    v772[9] = ["espada de pirata", "AYYYYY!", "alcança mais distância que a espada normal", "dano: 24", "dano em construções: 8"];
    v772[30] = ["espada de ametista", "mauve é a cor mais bonita do mundo", "dano: 27", "dano em construções: 9"];
    v772[62] = ["espada do dragão", "sem piedade!", "dano: 30", "dano em construções: 10"];
    v772[16] = ["lança do dragão", "mate todos eles!", "dano: 22", "dano em construções: 6"];
    v772[8] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"];
    v772[v626.ΔⵠⲆᐃᐃⲆⲆΔⵠ] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", "dano: 2"];
    v772[3] = ["picareta de ouro", "pode coletar diamante", "dano: 3", "dano em construções: 1"];
    v772[4] = ["picareta de diamante", "pode coletar tudo", "dano: 4", "dano em construções: 1"];
    v772[31] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", "dano em construções: 1"];
    v772[35] = ["martelo de pedra", "útil para destruir construções", "não funciona bem no diamante e na ametista", "dano: 2", "dano em construções: 20"];
    v772[36] = ["martelo de ouro", "útil para destruir construções", "não funciona bem na ametista", "dano: 3", "dano em construções: 30"];
    v772[37] = ["martelo de diamante", "útil para destruir construções", "dano: 4", "dano em construções: 40"];
    v772[38] = ["martelo de ametista", "útil para destruir construções", "dano: 5", "dano em construções: 50"];
    v772[45] = ["super martelo", "você planeja destruir o mundo?", "dano: 12", "dano em construções: 70"];
    v772[12] = ["lança de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construções: 2"];
    v772[13] = ["lança de pedra", "o começo da evolução!", "dano: 14", "dano em construções: 4"];
    v772[14] = ["lança de ouro", "cuidado, pica!", "dano: 15", "dano em construções: 5"];
    v772[15] = ["lança de diamante", "você está pronto para matar um dragão", "Dano: 17", "dano em construções: 5"];
    v772[33] = ["lança de ametista", "dragões não te amedrontam", "Dano: 18", "dano em construções: 6"];
    v772[46] = ["pá de pedral", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 2"];
    v772[50] = ["pá de ouro", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 3", "dano em construções: 1"];
    v772[51] = ["pá de diamante", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 4", "dano em construções: 1"];
    v772[52] = ["pá de ametista", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 5", "dano em construções: 1"];
    v772[58] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"];
    v772[25] = ["capacete de pedra", "você está pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"];
    v772[26] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"];
    v772[27] = ["capacete de diamante", "não se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"];
    v772[43] = ["capacete de ametista", "você não tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"];
    v772[59] = ["capacete do dragão", "você vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"];
    v772[23] = ["chapéu de explorador", "animais não vão te atacar", "mas não faça barulho!", "quente fora da água"];
    v772[41] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da água e neve"];
    v772[42] = ["chapéu de elfo", "não deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da água e neve"];
    v772[83] = ["capuz", "você é um trapaceiro", "você pode roubar alguém apenas se", "1) é de noite", "2)você não está segurando nada", "3) se você n foi tocado por 5 segundos", "4) você não está perto de uma fogueira", "5) seu alvo não está com equipamento camponês", "quente fora da água e na neve"];
    v772[10] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da água e neve"];
    v772[11] = ["Chapka", "também chamado de casaco.", "esquenta fora da água e na neve", "muito quente"];
    v772[40] = ["Chapéu de inverno", "Muito confortável", "Muito quente"];
    v772[84] = ["túnica", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v772[85] = ["capuz de inferno", "você só pode roubar alguém se", "é de noite", "-você não está segurando nada", "- se você não foi tocado por 4 segundos", "- você não está perto de uma fogueira", "-seu alvo não está com equipamento de camponês de inverno", "esquenta fora da água e na neve"];
    v772[86] = ["camponês de inverno", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v772[48] = ["máscara de mergulho", "você é rápido na água", "quente na água", "defesa de jogadores: 2, defesa de animais: 8"];
    v772[47] = ["super máscara de mergulho", "você é muito rápido na água", "quente na água", "defesa de jogadores: 4, defesa de animais: 16"];
    v772[185] = ["esfera do dragão", "dado na questt"];
    v772[149] = ["coração de dragão", "torna você num fantasmas na morte!", "você é um fantasma por 60 segundos", "ache uma pedra da ressurreição"];
    v772[175] = ["pedra verde", "você não vai trapacear, promete?"];
    v772[176] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"];
    v772[177] = ["pedra azul", "para pessoas muito gentis"];
    v772[77] = ["coroa verde", "você se regenera muito rápido", "regenera ao longo do tempo: 40", "defesa de jogadores: 4, defesa de animais: 16"];
    v772[78] = ["coroa laranja", "de repente você se sente muito sortudo", "defesa de jogadores: 4, defesa de animais: 16"];
    v772[79] = ["coroa azul", "quando você morrer, você vira um fantasma", "você perderá sua arma", "defesa de jogadores: 4, defesa de animais: 16"];
    v772[180] = ["balde", "útil para encher um poço", "um balde equivale a doze garrafas"];
    v772[181] = ["balde vazio", "você precisa encher esse balde perto de uma fonte de água"];
    v772[127] = ["garrafa", "permite que você beba água em qualquer lugar", "água: 50"];
    v772[128] = ["garrafa vazia", "você pode encher essa garrafa perto de uma fonte de água"];
    v772[130] = ["regador vazio", "você deve enche-lo com uma fonte de água para usa-lo"];
    v772[49] = ["regador", "permite regar as plantas", "dano: 1"];
    v772[29] = ["mochila", "mais espaço para seus itens!"];
    v772[120] = ["papel", "usado para fazer o livro"];
    v772[28] = ["livro", "permite reduzir consideradamente o tempo de construções", "mas precisa está equipado para fucionar", "dano: 1"];
    v772[195] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"];
    v772[148] = ["fechadura", "permite você trancar seu baú"];
    v772[158] = ["chave", "permite destrancar um baú"];
    v772[159] = ["Totem", "permite você criar um time", "compartilha portas e baús", "edifício prejudicial não quer machucar seu amigo"];
    v772[125] = ["ponte", "muito útil na água", "permite você beber sem se afogar", "anda rápido na água"];
    v772[183] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"];
    v772[190] = ["telhado", "esconde você um pouco e te esquenta!"];
    v772[182] = ["poço", "permite encher garrafas", "durabilidade: 1000"];
    v772[162] = ["muro de madeira", "você sabia que o muro dança?", "durabilidade: 1000"];
    v772[163] = ["muro de pedra", "é um pocu mais sério.", "durabilidade: 1500"];
    v772[164] = ["muro de ouro", "ouro nos seus muros? é muito chamativo.", "durabilidade: 2000"];
    v772[165] = ["muro de diamante", "tão brilhoso, veja seus olhos", "durabilidade: 2500"];
    v772[122] = ["muro de ametista", "você está muito assustado de sair!", "durabilidade: 3000"];
    v772[160] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"];
    v772[168] = ["espiga de pedra", "eu não quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"];
    v772[169] = ["espiga de ouro", "você é tão cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"];
    v772[170] = ["espiga de diamante", "você não gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"];
    v772[123] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para você?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"];
    v772[166] = ["porta de madeira", "pode ser aberta ou fechada por você ou seus amigos", "durabilidade: 1000"];
    v772[171] = ["porta de pedra", "uma porta mais forte é mais sério", "durabilidade: 1500"];
    v772[172] = ["porta de ouro", "você está re-construindo o el dorado?", "durabilidade: 2000"];
    v772[173] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"];
    v772[124] = ["porta de ametista", "é a sua casa um lugar trancado seguro?", "durabilidade: 3500"];
    v772[119] = ["fornalha", "esquenta você", "consumi madeira em todo 5 segundos", "durabilidade: 1000"];
    v772[135] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v772[144] = ["forno de pão", "permite fazer pão feito de farinha", "demora 10 segundos para fazer pão", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v772[151] = ["pedra da ressurreição", "é mágico", "te ressuscita se você for um fantasmas", "você vai perder sua arma", "durabilidade 200: 200"];
    v772[300] = "você não pode entrar no servidor";
    v772[301] = "kickado: ";
    v772[302] = "sua chave está em uso por outra pessoa";
    v772[303] = "sua chave está errada";
    v772[304] = "você tem uma versão velha, limpe seu cache";
    v772[305] = "não tem mais recursos";
    v772[306] = "você sobreviveu 1 dia";
    v772[307] = "você sobreviveu ";
    v772[308] = " dias";
    v772[309] = "você está morto ;-;";
    v772[310] = "servidor não pôde achar um local de spawn! spam o botão de play!";
    v772[311] = "servidor está cheio! spam o botão de play!";
    v772[312] = "não tem recursos";
    v772[313] = "inventário está cheio (botão direito para deletar itens)";
    v772[314] = " está morto";
    v772[315] = "essa não é a ferramenta certa";
    v772[316] = "você entrou no time";
    v772[317] = "você está morto";
    v772[318] = "entrou no time";
    v772[319] = "seu time foi destruido";
    v772[320] = "você saiu do time";
    v772[321] = " saiu do time";
    v772[322] = "alguém roubou sua ficha :>";
    v772[323] = "escolha um servidor";
    v772[324] = "jogadores";
    v772[325] = "jogadores totais";
    v772[326] = "jogadores nesse modo";
    v772[327] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Apelido";
    v774[0] = ["você morreu sem motivo"];
    v774[1] = ["você morreu de fome, como o jogo diz"];
    v774[2] = ["você morreu de frio. tão triste", "você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso."];
    v774[3] = ["um jogador te matou dizendo a você para matar..'", "você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente."];
    v774[4] = ["você ficou muito perto de uma fogueira e queimou até a morte. má ideia.", "você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso."];
    v774[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos não era um coelho."];
    v774[6] = ["o lobo não vão morrer de fome depois te te comer", "eles não são cachorros. lobos não gostam de ser que nem animais de estimação."];
    v774[7] = ["a raposa era muito rápida para você", "a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?"];
    v774[8] = ["o urso só queria um abraço.", " o urso era muito nu. eu não sinto muito."];
    v774[9] = ["você foi queimado por um dragão. tão triste..", "você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer."];
    v774[10] = ["você pulou em um muro com espinhos. não é uma boa ideia...", "você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas."];
    v774[11] = ["até fantasmas podem morrer.", "você falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."];
    v774[12] = ["uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.", "você matou a carne crua. a carne crua te matou também."];
    v774[13] = ["você morreu de sede. melhor beber sua própria urina."];
    v774[14] = ["você sabia que você morre afogado? agora você sabe."];
    v774[15] = ["não se preocupe, as piranhas acham você saboroso.", "fato engraçado: Piranhas comem pessoas. incluindo você."];
    v774[16] = ["LapaMauve não planeja você matar o kraken", "um kraken comeu seu esqueleto."];
    v774[17] = ["sua pele caindo aos pedaços, o sol te matou."];
    v774[18] = ["o alho amarzenado em seus bolsos ferveu seu cérebro."];
    v774[19] = ["como vampiro, não chegue perto do alho."];
    v774[20] = ["você comeu alho como vampiro, o que você esperava?"];
    v774[21] = ["seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerébro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... você parece saboroso", "Uuunnnggg...", "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"];
  }
  const v749 = 8;
  function f74(p507, p508) {
    vVUndefined18(vVVVVUndefined212, p507, p508);
    return (25601 + (f520(v2773[0], v2773[1], v2773[0]) ^ f520(v2773[1], v2773[0], v2773[1]))) % 65432;
  }
  function f75() {
    v772[184] = ["You feel a great power emanating from this orb"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[328] = " BACK TO THE GAME";
    v772[329] = " Share on Twitter";
    v772[330] = " Share on Facebook";
    v772[331] = "You can buy items on the shop in the next game with your points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Kill";
    v772[335] = "Days survived";
    v772[336] = "Building method: Free. Press G to change";
    v772[337] = "Building method: Grid. Press G to change";
    v772[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v772[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v772[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v750 = 0; v750 < 7; v750++) {
      document.getElementById("claim_reward_" + v750).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v772[7] = ["Mano"];
    v772[140] = ["Tierra", "¡Tan limpia como mis manos!"];
    v772[126] = ["Arena", "¡Tengo arena en mis ojos!"];
    v772[109] = ["Madera", "¡Nunca hay suficiente!"];
    v772[108] = ["Piedra", "También llamada roca."];
    v772[111] = ["Oro", "Sé generoso, compártelo con los otros"];
    v772[112] = ["Diamante", "¿Que vas a hacer con él?"];
    v772[121] = ["Amatista", "Es Mauve como Lapa"];
    v772[131] = ["Harina", "Usada para cocinar."];
    v772[133] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"];
    v772[136] = ["Tarta", "¡Cumpleaños Feliz!", "Comida: 100"];
    v772[116] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"];
    v772[117] = ["Carne Cocinada", "es la supervivencia del más fuerte :'(", "Comida: 35"];
    v772[137] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"];
    v772[138] = ["Pescado Cocinado", "Con limón sería perfecto", "Comida: 35"];
    v772[143] = ["Pan", "¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"];
    v772[145] = ["Bocadillo", "Sabe como un Krabby Patty", "Comida: 100"];
    v772[200] = ["Caramelos", "¡Solo para niños/as!", "Comida: 100"];
    v772[199] = ["Caña de Azúcar", "Pruébala, es deliciosa", "Comida: 100"];
    v772[201] = ["Guirnalda", "Perfecta para decorar el techo"];
    v772[115] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v772[110] = ["Baya", "No es venenosa.", "Comida: 10"];
    v772[132] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v772[134] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"];
    v772[188] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v772[189] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"];
    v772[191] = ["Semilla de Ajo", "Muy peligroso para vampiros", "Daño: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", "Durabilidad: 700", "Tiempo de Vida: 8 Días"];
    v772[192] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanación con eliempo: 30", "Efecto: 1"];
    v772[193] = ["Semilla de Planta de Espinas", "Puede dañar a tus enemigos", "Daño por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", "Durabilidad: 1000", "Tiempo de Vida: 8 Días"];
    v772[194] = ["Planta de Espinas", "¡Te daña!"];
    v772[141] = ["Parcela", "En serio, úsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerán muy rápido y necesitarán menos agua", "Durabilidad: 2000"];
    v772[142] = ["Hielo", "Bueno para hacer tartas y agua"];
    v772[55] = ["Llave de Reparación", "Puede reparar paredes, puertas y pinchos", "Daño: 2"];
    v772[174] = ["Pelaje de Lobo", "¿Perrito? ¡¿Donde esta el perrito?!"];
    v772[2] = ["Pelaje de Conejo", "El Conejo era muy lindo..."];
    v772[178] = ["Pelaje Puro", "¡Eres una maquina de pan!"];
    v772[179] = ["Pelaje Oscuro", "¿Estás listo para hacer algo malo?"];
    v772[146] = ["Pelaje de Invierno", "Esos animales solo querían un abrazo..."];
    v772[139] = ["Escamas", "¡Huele a pescado!"];
    v772[129] = ["Piel del Kraken", "¡¿No tienes mucho miedo?!"];
    v772[113] = ["Fogata", "¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"];
    v772[118] = ["Fogata Grande", "¡Te calienta por más tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"];
    v772[114] = ["Mesa de Trabajo", "¡Te sirve mucho para crear cosas de todos tipos!"];
    v772[161] = ["Hilo", "Usado para craftear ropa y mochila"];
    v772[147] = ["Hilo de Diamante", "Usado para craftear ropa especial"];
    v772[167] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"];
    v772[57] = ["Espada de Madera", "¿Eso funciona?", "Daño: 12", "Daño para estructuras: 4"];
    v772[0] = ["Espada de Piedra", "Sé bueno con los otros", "Daño: 19", "Daño para estructuras: 6"];
    v772[5] = ["Espada de Oro", "¡Rey de la selva!", "Daño: 22", "Daño para estructuras: 7"];
    v772[6] = ["Espada de Diamante", "Puedes sentir el poder", "Daño: 24", "Daño para estructuras: 8"];
    v772[9] = ["Espada de Pirata", "Arrrrr!", "¡Mejor distancia que una espada normal", "Daño: 24", "Daño para estructuras: 8"];
    v772[30] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "Daño: 27", "Daño para estructuras: 9"];
    v772[62] = ["Espada del Dragón", "¡Tienes el poder de un Dragón!", "Daño: 30", "Daño para estructuras: 10"];
    v772[16] = ["Lanza del Dragón", "¡Mátalos a todos!", "Daño: 22", "Daño para estructuras: 6"];
    v772[8] = ["Pico de Madera", "Solo puede minar madera y piedra", "Daño: 1"];
    v772[1] = ["Pico de Piedra", "Puede minar hasta oro", "Daño: 2"];
    v772[3] = ["Pico de Oro", "Puede minar hasta Diamante", "Daño: 3", "Daño para estructuras: 1"];
    v772[4] = ["Pico de Diamante", "¡Puede minarlo todo!", "Daño: 4", "Daño para estructuras: 1"];
    v772[31] = ["Pico de Amatista", "¡Puede minarlo todo, parece fantastico!", "Daño: 5", "Daño para estructuras: 1"];
    v772[35] = ["Martillo de Piedra", "Bueno para destruir estructuras", "No funciona bien con diamante y amatista", "Daño: 2", "Daño para estructuras: 20"];
    v772[36] = ["Martillo de Oro", "Bueno para destruir estructuras", "No funciona bien con amatista ", "Daño: 3", "Daño para estructuras: 30"];
    v772[37] = ["Martillo de Diamante", "Bueno para destruir estructuras", "Daño: 4", "Daño para estructuras: 40"];
    v772[38] = ["Martillo de Amatista", "Bueno para destruir estructuras", "Daño: 5", "Daño para estructuras: 50"];
    v772[45] = ["Super Martillo", "¿Has planeado destruir el mundo?", "Daño: 12", "Daño para estructuras: 70"];
    v772[12] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "Daño: 10", "Daño para estructuras: 2"];
    v772[13] = ["Lanza de Piedra", "¡El comienzo de la evolución!", "Daño: 14", "Daño para estructuras: 4"];
    v772[14] = ["Lanza de Oro", "¡Cuidado, te hace mucho daño!", "Daño: 15", "Daño para estructuras: 5"];
    v772[15] = ["Lanza de Diamante", "¡Estas preparado para matar al Dragon!", "Daño: 17", "Daño para estructuras: 5"];
    v772[33] = ["Lanza de Amatista", "Los dragones te tienen miedo", "Daño: 18", "Daño para estructuras: 6"];
    v772[46] = ["Pala de Piedra", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 2"];
    v772[50] = ["Pala de Oro", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 3", "Daño para estructuras: 1"];
    v772[51] = ["Pala de Diamante", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 4", "Daño para estructuras: 1"];
    v772[52] = ["Pala de Amatista", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 5", "Daño para estructuras: 1"];
    v772[58] = ["Casco de Madera", "¡Mejor que nada!", "Protección contra jugadores: 1", "Protección contra animales: 4"];
    v772[25] = ["Casco de Piedra", "¡Estas listo para la batalla!", "Protección contra jugadores: 2", "Protección contra animales: 8"];
    v772[26] = ["Casco de Oro", "AKA el casco de los salvajes", "Protección contra jugadores: 4", "Protección contra animales: 13"];
    v772[27] = ["Casco de Diamante", "No ataques tanto", "Protección de jugadores: 5", "Protección contra animales: 19"];
    v772[43] = ["Casco de Amatista", "¡No tienes miedo de nada!", "Protección contra jugadores: 6", "Protección contra animales: 23"];
    v772[59] = ["Casco del Dragón", "¡Vas a dominar el mundo!", "Protección contra jugadores: 8", "Protección contra animales: 27"];
    v772[23] = ["Gorro del Explorador", "Los animales no te atacarán", "¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"];
    v772[41] = ["Gorro de Navidad", "¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"];
    v772[42] = ["Gorro del Duende", "¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"];
    v772[83] = ["Capucha", "¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", "Te calienta en invierno y fuera del agua"];
    v772[10] = ["Orejeras", "Como un abrigo pequeño.", "Te calienta en invierno y fuera del agua"];
    v772[11] = ["Chapka", "También llamado abrigo.", "Te calienta en el invierno y fuera del agua"];
    v772[40] = ["Gorro y Bufanda ", "Muy cómodo, muy caliente"];
    v772[84] = ["Gorra de Campesino", "Tus plantas crecen mas rápido", "Te Calienta en el invierno y fuera del agua"];
    v772[85] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", "Te calienta en invierno y fuera del agua"];
    v772[86] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aún más rápido", "Te calienta en invierno y fuera del agua"];
    v772[48] = ["Máscara de Buceo", "Eres un tiburón en el agua", "Calienta en el agua", "Protección contra jugadores: 2, Protección contra animales: 8"];
    v772[47] = ["Súper Máscara de Buceo", "Eres muy rápido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"];
    v772[185] = ["Esfera del Dragón", "Dada en la misión"];
    v772[149] = ["Corazón del Dragón", "¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreción"];
    v772[175] = ["Gema Verde", "¿¿No has hecho trampas, verdad??"];
    v772[176] = ["Gema Naranja", "¡Solo un pirata verdadero lo puede encontrar!"];
    v772[177] = ["Gema Azul", "Para gente muy amable"];
    v772[77] = ["Corona Verde", "Te sanas muy rápido", "Sanación con el tiempo: 40", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v772[78] = ["Corona Naranja", "Ahora tienes much suerte", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v772[79] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderás tu alma", "Protección contra jugador: 4, Protección contra animales: 16"];
    v772[180] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"];
    v772[181] = ["Cubo Vacío", "Tienes que llenar este cubo con agua"];
    v772[127] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"];
    v772[128] = ["Botella Vacia", "La puedes llenar de agua"];
    v772[130] = ["Regadera Vacía", "La tienes que llenar de agua"];
    v772[49] = ["Regadera", "Te permite regar las plantas", "Daño: 1"];
    v772[29] = ["Mochila", "¡Mas espacio para tus cosas!"];
    v772[120] = ["Hoja", "Usada para hacer un libro"];
    v772[28] = ["Libro", "Reduce el tiempo de elaboración", "Lo tienes que tener en la mano para que funcione", "Daño: 1"];
    v772[195] = ["Vendaje", "Recuperas vida mas rapido", "Sanación tiempo: 30", "Efecto: 5"];
    v772[148] = ["Cerradura", "Te permite cerrar tu cofre"];
    v772[158] = ["Llave", "Te permite abrir un cofre cerrado"];
    v772[159] = ["Tótem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no dañan al resto tu equipo"];
    v772[125] = ["Puente", "Muy útil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar más rápido encima del agua"];
    v772[183] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"];
    v772[190] = ["Techo", "Te esconde un poco y te protege del frío"];
    v772[182] = ["Fuente", "Permite rellenar botellas", "Durabilidad: 1000"];
    v772[162] = ["Pared de Madera", "Es solo una pared.", "Durabilidad: 1000"];
    v772[163] = ["Pared de Piedra", "Es un poco más serio", "Durabilidad: 1500"];
    v772[164] = ["Pared de Oro", "¿Oro en de tus paredes? Eres rico", "Durabilidad: 2000"];
    v772[165] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"];
    v772[122] = ["Pared de Amatista", "¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"];
    v772[160] = ["Pincho de Madera", "Puede dañar a tus enemigos", "Daño: 10, Daño por golpe: 2", "Durabilidad: 150"];
    v772[168] = ["Pincho de Piedra", "No querría ser tu enemigo.", "Daño: 20", "Daño por contacto: 3", "Durabilidad: 300"];
    v772[169] = ["Pincho de Oro", "¡Eres tan cruel!", "Daño: 30", "Daño por golpe: 3", "Durabilidad: 600"];
    v772[170] = ["Pincho de Diamante", "No te gusta tener compañía.", "Daño: 40", "Daño por contacto: 4", "Durabilidad: 1200"];
    v772[123] = ["Pincho de Amatista", "¡¿Que demonios te hicieron tus vecinos?!", "Daño: 50", "Daño por contacto: 4", "Durabilidad: 2400"];
    v772[166] = ["Puerta de Madera", "Puedes abrir y cerrarla ", "Durabilidad: 1000"];
    v772[171] = ["Puerta de Piedra", "Una puerta más buena es más seria", "Durabilidad: 1500"];
    v772[172] = ["Puerta de Oro", "¿Estas reconstruyendo El Dorado?", "Durabilidad: 2000"];
    v772[173] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"];
    v772[124] = ["Puerta de Amatista", "¿Tu casa es una caja fuerte?", "Durabilidad: 3500"];
    v772[119] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", "Durabilidad: 1000"];
    v772[135] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v772[144] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v772[151] = ["Piedra de Resurreción", "¡Es magia!", "Te resucitacuando eres una fantasma", "Perderás tu arma", "Durabilidad: 200"];
    v772[300] = "No puedes unirte a este servidor";
    v772[301] = "Expulsado: ";
    v772[302] = "Tu llave ya está usada";
    v772[303] = "Tu llave está mal";
    v772[304] = "Tienes una versión antigua, limpia tu cache";
    v772[305] = "No hay mas recursos";
    v772[306] = "Has sobrevivido 1 día";
    v772[307] = "Has sobrevivido ";
    v772[308] = " días";
    v772[309] = "Estás muerto ;-;";
    v772[310] = "No se encuentra un lugar para unirse, ¡spamea el botón de jugar!";
    v772[311] = "El servidor esta lleno, ¡spamea el botón de jugar!";
    v772[312] = "Recurso vacio";
    v772[313] = "¡Inventario lleno!(Haz click derecho para borrar cosas) ";
    v772[314] = " está muerto";
    v772[315] = "Esta no es la herramienta correcta";
    v772[316] = "Te has unido a un equipo";
    v772[317] = "Estás muerto";
    v772[318] = " se unió al equipo";
    v772[319] = "Tu equipo ha sido destruido";
    v772[320] = "Has dejado el equipo";
    v772[321] = " dejo el equipo ";
    v772[322] = "Alguien te robó tu token :>";
    v772[323] = "Elige un servidor";
    v772[324] = "jugadores";
    v772[325] = "total de jugadores";
    v772[326] = "Jugadores en este modo de juego";
    v772[327] = "Próximamente...";
    document.getElementById("nickname_input").placeholder = "Apodo";
    v774[0] = ["Has muerto por ninguna razón"];
    v774[1] = ["Has muerto de hambre, como implica el nombre del juego dice"];
    v774[2] = ["Te has congelado hasta morir, qué triste", "Moriste por hipotermia. La próxima quédate cerca de  una fogata."];
    v774[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente."];
    v774[4] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."];
    v774[5] = ["Tu cuerpo será un buen nido para los huevos de la arañas", "Una araña te ha matado, al menos no fué un conejo."];
    v774[6] = ["El lobo no tendrá hambre después de comerte.", "No son perros, no les gusta ser acariciados."];
    v774[7] = ["El zorro era demasiado rápido para ti.", "El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?"];
    v774[8] = ["El oso solo quería un abrazo", "El oso era demasiado para ti. Lo siento."];
    v774[9] = ["El dragón te quemó vivo.", "El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."];
    v774[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."];
    v774[11] = ["Un fantasma también puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."];
    v774[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.", "Has matado a la carne cruda. Ella también te ha matado a ti.."];
    v774[13] = ["Has muerto de sed, mejor bebe tu propia orina."];
    v774[14] = ["¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes."];
    v774[15] = ["No te preocupes, a la piraña le pareciste delicioso.", "Las pirañas comen a personas, incluyendote a ti también."];
    v774[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partió el kra-neo."];
    v774[17] = ["Tu piel se cayó, el sol te quemó."];
    v774[18] = ["El ajo guardado en tu bolsillo te quemó el cerebro."];
    v774[19] = ["Eres un vampiro, no te quedes cerca del ajo."];
    v774[20] = ["Has comido un ajo siendo  vampiro,¿que esperabas?"];
    v774[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", "Uuunnnggg...", "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"];
  }
  function f76() {
    v772[184] = ["You feel a great power emanating from this orb"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[328] = " BACK TO THE GAME";
    v772[329] = " Share on Twitter";
    v772[330] = " Share on Facebook";
    v772[331] = "You can buy items on the shop in the next game with your points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Kill";
    v772[335] = "Days survived";
    v772[336] = "Building method: Free. Press G to change";
    v772[337] = "Building method: Grid. Press G to change";
    v772[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v772[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v772[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v751 = 0; v751 < 7; v751++) {
      document.getElementById("claim_reward_" + v751).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v772[7] = ["Hand"];
    v772[140] = ["Boden", "Dreckig!"];
    v772[126] = ["Sand", "Ich habe es in meine Augen bekommen!"];
    v772[109] = ["Holz", "Du kannst niemals zu viel haben!"];
    v772[108] = ["Stein", "Auch Fels gennant"];
    v772[111] = ["Gold", "Sei großzügig, gib anderen etwas ab "];
    v772[112] = ["Diamant", "Was wirst du daraus machen?"];
    v772[121] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"];
    v772[131] = ["Mehl", "wird fürs Backen gebraucht"];
    v772[133] = ["Keks", "Ein prächtiger Keks von Großmutter", "Essen: 50"];
    v772[136] = ["Ein Kuchen", "Perfekter Kuchen für Gourmets", "Essen: 100"];
    v772[116] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"];
    v772[117] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"];
    v772[137] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"];
    v772[138] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"];
    v772[143] = ["Brot", "Ein vorzügliches französiches Brot", "Es wird als Währung im Markt benutzt", "Essen: 15"];
    v772[145] = ["Sandwich", "Schmeckt wie Krabbenburger", "Essen: 100"];
    v772[200] = ["Süßigkeiten", "Nur für Kinder!", "Essen: 100"];
    v772[199] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", "Essen: 100"];
    v772[201] = ["Girlande", "perfekter Schmuck für Dächer"];
    v772[115] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v772[110] = ["Beere", "Beeren lecker!", "Essen: 10"];
    v772[132] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v772[134] = ["Wildes Weizen", "Wenn es in eine Windmühle platziert wird, wird es zu Mehl"];
    v772[188] = ["Kürbis Saatgut", "Wird zu Kürbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v772[189] = ["Kürbis", "Es erinnert mich an Halloween", "Essen: 30"];
    v772[191] = ["Knoblauch Saatgut", "Sehr gefährlich für Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v772[192] = ["Knoblauch", "Heilt dich und hält die Kälte fern", "Essen: 14", "Heilung über Zeit: 30", "Effekt: 1"];
    v772[193] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufügen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", "Haltbarkeit: 1000", "Lebenszeit: 8 Tage"];
    v772[194] = ["Dornenbusch", "Es sticht!"];
    v772[141] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dünger deine Pflanzen", "lässt sie schneller wachsen und reduziert den Wasserverbrauch", "Haltbarkeit: 2000"];
    v772[142] = ["Eis", "Nützlich um Kuchen und Wasser herzustellen"];
    v772[55] = ["Schraubenschlüssel", "Es kann Wände, Türen und Stacheln reparieren", "Schaden: 2"];
    v772[174] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"];
    v772[2] = ["Hasenfell", "Der Hase war so süß..."];
    v772[178] = ["Klares Fell", "Du bist eine Brotfabrik"];
    v772[179] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollführen"];
    v772[146] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."];
    v772[139] = ["Schuppen", "Es riecht wie Fisch!"];
    v772[129] = ["Kraken Haut", "Warst du nicht zu ängstlich?"];
    v772[113] = ["Lagerfeuer", "Wärmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"];
    v772[118] = ["Großes Lagerfeuer", "Wärmt dich länger!", "Haltbarkeit: 400", "Lebensdauer: 6min"];
    v772[114] = ["Werkbank", "Sehr nützlich um allerlei Sachen herzustellen"];
    v772[161] = ["Faden", "Wird benötigt um Mützen und Rucksäcke herzustellen  "];
    v772[147] = ["Diamant Faden", "Wird für spezielle Mützen gebraucht"];
    v772[167] = ["Truhe", "Damit kannst du Gegenstände lagern", "Haltbarkeit: 500"];
    v772[57] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an Gebäuden: 4"];
    v772[0] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an Gebäuden: 6"];
    v772[5] = ["Goldschwert", "König des Waldes", "Schaden: 22", "Schaden an Gebäuden: 7"];
    v772[6] = ["Diamantschwert", "Du kannst die Kraft spüren", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v772[9] = ["Piratenschwert", "Ayyyyy!", "Hat eine höhere Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v772[30] = ["Amethystschwert", "Mauve ist die schönste Farbe der Welt", "Schaden: 27", "Schaden an Gebäuden: 9"];
    v772[62] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an Gebäuden: 10"];
    v772[16] = ["Drachenspeer", "Töte sie alle!", "Schaden: 22", "Schaden an Gebäuden: 6"];
    v772[8] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"];
    v772[1] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", "Schaden: 2"];
    v772[3] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v772[4] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v772[31] = ["Amethystspitzhacke", "Kann alles abbauen, sieht außerdem gut aus!", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v772[35] = ["Steinhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Diamant oder Amethyst", "Schaden: 2", "Schaden an Gebäuden: 20"];
    v772[36] = ["Goldhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an Gebäuden: 30"];
    v772[37] = ["Diamanthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 4", "Schaden an Gebäuden: 40"];
    v772[38] = ["Amethysthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 5", "Schaden an Gebäuden: 50"];
    v772[45] = ["Superhammer", "Willst du die Welt zerstören?", "Schaden: 12", "Schaden an Gebäuden: 70"];
    v772[12] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an Gebäuden: 2"];
    v772[13] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an Gebäuden: 4"];
    v772[14] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an Gebäuden: 5"];
    v772[15] = ["Diamantspeer", "Du bist bereit einen Drachen zu töten", "Schaden: 17", "Schaden an Gebäuden: 5"];
    v772[33] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an Gebäuden: 6"];
    v772[46] = ["Steinschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 2"];
    v772[50] = ["Goldschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v772[51] = ["Diamantschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v772[52] = ["Amethystschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v772[58] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"];
    v772[25] = ["Steinhelm", "Du bist bereit zu kämpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"];
    v772[26] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"];
    v772[27] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"];
    v772[43] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"];
    v772[59] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"];
    v772[23] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine Geräusche!", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[41] = ["Weihnachtshut", "Oh, oh, oh, fröhliche Weihnachten", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[42] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[83] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für acht Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[10] = ["Ohrwärmer", "Eine Art kleiner chapka.", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[11] = ["Chapka", "Auch Mantel genannt.", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[40] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"];
    v772[84] = ["Bauer", "Deine Pflanzen wachsen schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[85] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für vier Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[86] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v772[48] = ["Tauchermaske", "Du bist schneller im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"];
    v772[47] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v772[185] = ["Drachenkugel", "Erhalten bei abschließung der Quest"];
    v772[149] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist für 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."];
    v772[175] = ["Grüner Edelstein", "Du hast nicht gemogelt, versprochen?"];
    v772[176] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"];
    v772[177] = ["Blauer Edelstein", "Für sehr nette Leute"];
    v772[77] = ["Grüne Krone", "Du heilst dich selbst sehr schnell", "Heilung über Zeit: 40", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v772[78] = ["Orangene Krone", "Du fühlst dich plötzlich als hättest du mehr Glück", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v772[79] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v772[180] = ["Eimer", "Nützlich um einen Brunnen zu füllen", "Ein Eimer ist vergleichbar mit zwölf Flaschen"];
    v772[181] = ["Leerer Eimer", "Du musst den Eimer in der Nähe einer Wasserquelle füllen"];
    v772[127] = ["Flasche", "Erlaubt dir überall Wasser zu trinken", "Wasser: 50"];
    v772[128] = ["Leere Flasche", "Du musst die Flasche in der Nähe einer Wasserquelle füllen"];
    v772[130] = ["Leere Gießkanne", "Du musst es mit einer Wasserquelle füllen"];
    v772[49] = ["Gießkanne", "Erlaubt das wässern von Pflanzen", "Schaden: 1"];
    v772[29] = ["Rucksack", "Mehr Platz im Inventar!"];
    v772[120] = ["Papier", "Wird fürs Büchermachen verwendet"];
    v772[28] = ["Buch", "Reduziert die benötigte Zeit beim herstellen von Gegenständen", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"];
    v772[195] = ["Verband", "Heile dich schneller", "Heilung über Zeit: 30", "Effekt: 5"];
    v772[148] = ["Schloss", "Erlaubt dir deine Truhe zu verschließen"];
    v772[158] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu öffnen"];
    v772[159] = ["Totem", "Erlaubt dir ein Team zu gründen", "Teile Türen und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"];
    v772[125] = ["Brücke", "Sehr nützlich über Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lässt dich schneller auf dem Wasser laufen"];
    v772[183] = ["Schild", "Hinterlasse eine Nachricht für andere hier", "Haltbarkeit: 200"];
    v772[190] = ["Dach", "Versteckt dich ein wenig und hält warm dabei!"];
    v772[182] = ["Brunnen", "Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle", "Haltbarkeit: 1000"];
    v772[162] = ["Holzwand", "Kennst du den Wandtanz?", "Haltbarkeit: 1000"];
    v772[163] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"];
    v772[164] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", "Haltbarkeit: 2000"];
    v772[165] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"];
    v772[122] = ["Amethystwand", "Du musst dich wirklich fürchten raus zu gehen!", "Haltbarkeit: 3000"];
    v772[160] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"];
    v772[168] = ["Steinstacheln", "Ich würde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"];
    v772[169] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"];
    v772[170] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"];
    v772[123] = ["Amethyststacheln", "Was zur Hölle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"];
    v772[166] = ["Holztür", "Kann von dir oder deinen Freunden geöffnet werden", "Haltbarkeit: 1000"];
    v772[171] = ["Steintür", "Eine stärkere Tür ist ernsthafter", "Haltbarkeit: 1500"];
    v772[172] = ["Goldtür", "Baust du el dorado?", "Haltbarkeit: 2000"];
    v772[173] = ["Diamanttür", "Für ein scheinendes Haus", "Haltbarkeit: 2500"];
    v772[124] = ["Amethysttür", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"];
    v772[119] = ["Ofen", "Wärmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", "Haltbarkeit: 1000"];
    v772[135] = ["Windmühle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v772[144] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v772[151] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"];
    v772[300] = "Du kannst diesem Server nicht beitreten";
    v772[301] = "Gekickt: ";
    v772[302] = "Dein Schlüssel wurde bereits von jemand anderem benutzt";
    v772[303] = "Dein Schlüssel ist falsch";
    v772[304] = "Deine Version ist veraltet, säubere dein Cache";
    v772[305] = "Es gibt keine neuen Ressourcen";
    v772[306] = "Du hast einen Tag überlebt";
    v772[307] = "Du hast überlebt ";
    v772[308] = " Tage";
    v772[309] = "Du bist gestorben ;-;";
    v772[310] = "Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!";
    v772[311] = "Server ist voll! Drücke immer wieder auf spielen!";
    v772[312] = "Ressource ist leer";
    v772[313] = "Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)";
    v772[314] = " ist gestorben";
    v772[315] = "Das ist nicht das richtige Werkzeug";
    v772[316] = "Du bist einem Team beigetreten";
    v772[317] = "Du bist gestorben";
    v772[318] = " ist dem Team beigetreten";
    v772[319] = "Dein Team wurde zerstört";
    v772[320] = "Du hast das Team verlassen";
    v772[321] = " hat das Team verlassen";
    v772[322] = "Jemand hat dein Token gestohlen :>";
    v772[323] = "Suche dir ein Server aus";
    v772[324] = "Spieler";
    v772[325] = "alle Spieler";
    v772[326] = "Spieler in diesem Modus";
    v772[327] = "Bald verfügbar...";
    document.getElementById("nickname_input").placeholder = "Spitzname";
    v774[0] = ["Du wurdest ohne Grund getötet"];
    v774[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"];
    v774[2] = ["Du bist erfroren. Zu schade", "Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen ."];
    v774[3] = ["Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."];
    v774[4] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber."];
    v774[5] = ["Dein Körper wird zu einem Spinnennest", "Eine Spinne hat dich getötet. Zumindest war es kein Hase."];
    v774[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden."];
    v774[7] = ["Der Fuchs war zu schnell für dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?"];
    v774[8] = ["Der Bär wollte nur eine Umarmung.", "Der Bär war zu viel zu ertragen. Es tut mir nicht leid."];
    v774[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."];
    v774[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."];
    v774[11] = ["Sogar Geister können sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."];
    v774[12] = ["Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet."];
    v774[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."];
    v774[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es."];
    v774[15] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."];
    v774[16] = ["LapaMauve plant nicht, dass du den Kraken töten kannst", "Ein Kraken hat deinen Schädel zertrümmert."];
    v774[17] = ["Deine Haut fällt auseinander, die Sonne hat dich umgebracht."];
    v774[18] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "];
    v774[19] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."];
    v774[20] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"];
    v774[21] = ["Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", "Uuunnnggg...", "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"];
  }
  function f77() {
    v772[184] = ["You feel a great power emanating from this orb"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[328] = " BACK TO THE GAME";
    v772[329] = " Share on Twitter";
    v772[330] = " Share on Facebook";
    v772[331] = "You can buy items on the shop in the next game with your points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Kill";
    v772[335] = "Days survived";
    v772[336] = "Building method: Free. Press G to change";
    v772[337] = "Building method: Grid. Press G to change";
    v772[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v772[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v772[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v752 = 0; v752 < 7; v752++) {
      document.getElementById("claim_reward_" + v752).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v772[7] = ["Ręka"];
    v772[140] = ["Ziemia", "Brudna!"];
    v772[126] = ["Piasek", "Mam go w oczach!"];
    v772[109] = ["Drewno", "Nie możesz mieć go wystarczająco!"];
    v772[108] = ["Kamień", "Także nazywany skałą"];
    v772[111] = ["Złoto", "Bądź hojny, daj trochę innym"];
    v772[112] = ["Diament", "Co z nim zrobisz?"];
    v772[121] = ["Ametyst", "Jest Fiołkowy jak Lapa"];
    v772[131] = ["Mąka", "Używana w gotowaniu"];
    v772[133] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"];
    v772[136] = ["Ciasto", "Raj dla smakoszy", "Jedzenie: 100"];
    v772[116] = ["Surowe mięso", "Możesz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"];
    v772[117] = ["Pieczone mięso", "Krwisty stek, proszę", "Jedzenie: 35"];
    v772[137] = ["Surowa ryba", "Myślę, że nadal jest żywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"];
    v772[138] = ["Pieczona ryba", "Z cytryną jest idealna", " Jedzenie: 35"];
    v772[143] = ["Chleb", "Świetny Francuski chleb", "Jest walutą używaną w markecie", "Jedzenie: 15"];
    v772[145] = ["Kanapka", "Smakuje jak kraboburger", "Jedzenie: 100"];
    v772[200] = ["Cukierki", "Tylko dla dzieci!", "Jedzenie: 100"];
    v772[199] = ["Laska cukrowa", "Spróbuj, jest przepyszna", "Jedzenie: 100"];
    v772[201] = ["Girlanda", "Idealna do dekorowania dachów"];
    v772[115] = ["Nasionko jagody", "Wyrośnie w jagody", "Narodziny: 2min", "Rośnięcie: 55s", "Podlewanie: 3min 20s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v772[110] = ["Jagody", "Jagody są pyszne!", "Jedzenie: 10"];
    v772[132] = ["Nasiono pszenicy", "Wyrośnie w pszenicę", "Narodziny: 2min", "Rośnięcie: 16s", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v772[134] = ["Pszenica", "Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka"];
    v772[188] = ["Nasiono dyni", "Wyrośnie w dynię", "Narodziny: 2min 40s", "Rośnięcie: 2min", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v772[189] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"];
    v772[191] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 1min 10s", "Podlewanie: 1min 40s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v772[192] = ["Czosnek", "Leczy cię i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"];
    v772[193] = ["Nasiono kolczastego krzewu", "Może zranić twoich wrogów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 15s", "Podlewanie: 3min", "Wytrzymałość: 1000", "Czas życia: 8 dni"];
    v772[194] = ["Kolczasty krzew", "Kłuje!"];
    v772[141] = ["Donica", "Naprawdę, użyj jej", "Z tym genetycznie modyfikowanym nawozem, twoje rośliny", "będą rosły znacznie szybciej i będą potrzebować mniej wody", "Wytrzymałość: 2000"];
    v772[142] = ["Lód", "Użyteczny do robienia ciast i wody"];
    v772[55] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolców", "Uszkodzenie: 2"];
    v772[174] = ["Wilcza skóra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"];
    v772[2] = ["Skóra królika", "Ten królik był taki słodziutki..."];
    v772[178] = ["Skóra", "Jesteś fabryką chleba"];
    v772[179] = ["Ciemna skóra", "Byłeś gotowy zrobić coś złego"];
    v772[146] = ["Zimowa skóra", "Te zwierzęta chciały się tylko przytulić..."];
    v772[139] = ["Łuski", "Pachnie jak ryba!"];
    v772[129] = ["Skóra krakena", "Nie byłeś zbyt przestraszony?"];
    v772[113] = ["Ognisko", "Ociepli cię!", "Wytrzymałość: 150", "Czas życia: 2min"];
    v772[118] = ["Duże ognisko", "Ociepli cię na dłużej!", "Wytrzymałość: 400", "Czas życia: 6min"];
    v772[114] = ["Stół rzemieślniczy", "Użyteczny do stwarzania przedmiotów"];
    v772[161] = ["Nić", "Używany w tworzeniu czapek i plecaków"];
    v772[147] = ["Diamentowa nić", "Używana w tworzeniu specjalnych czapek"];
    v772[167] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotów", "Wytrzymałość: 500"];
    v772[57] = ["Drewniany miecz", "To coś działa?", "Obrażenia: 12", "Obrażenia do budowli: 4"];
    v772[0] = ["Kamienny miecz", "Bądź miły dla innych", "Obrażenia: 19", "Obrażenia do budowli: 6"];
    v772[5] = ["Złoty miecz", "Król lasu", "Obrażenia: 22", "Obrażenia do budowli: 7"];
    v772[6] = ["Diamentowy miecz", "Możesz poczuć moc", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v772[9] = ["Piracki miecz", "Ayyyyy!", "Dłuższy niż zwykły miecz", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v772[30] = ["Ametystowy miecz", "fiołkowy to najpiękniejszy kolor na świecie", "Damage: 27", "Obrażenia do budowli: 9"];
    v772[62] = ["Smoczy miecz", "Bez litości!", "Obrażenia: 30", "Obrażenia do budowli: 10"];
    v772[16] = ["Smocza włócznia", "Zabij ich wszystkich!", "Obrażenia: 22", "Obrażenia do budowli: 6"];
    v772[8] = ["Drewniany kilof", "Może wydobywać tylko kamienie i drewno", "Obrażenia: 1"];
    v772[1] = ["Kamienny kilof", "Może wydobywać drewno, kamienie i złoto", "Obrażenia: 2"];
    v772[3] = ["Złoty kilof", "Może także wydobywać diamenty", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v772[4] = ["Diamentowy kilof", "Może wydobywać wszystko", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v772[31] = ["Ametystowy kilof", "Może wydobywać wszystko. Wygląda fantastycznie!", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v772[35] = ["Kamienny młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 2", "Obrażenia do budowli: 20"];
    v772[36] = ["Złoty młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 3", "Obrażenia do budowli: 30"];
    v772[37] = ["Diamentowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 4", "Obrażenia do budowli: 40"];
    v772[38] = ["Ametystowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 5", "Obrażenia do budowli: 50"];
    v772[45] = ["Super młot", "Miałeś kiedyś plan zniszczenia świata?", "Obrażenia: 12", "Obrażenia do budowli: 70"];
    v772[12] = ["Drewniana włócznia", "Jak patyk, ale kłuje.", "Obrażenia: 10", "Obrażenia do budowli: 2"];
    v772[13] = ["Kamienna włócznia", "Początek ewolucji!", "Obrażenia: 14", "Obrażenia do budowli: 4"];
    v772[14] = ["Złota włócznia", "Uważaj, kłuje!", "Obrażenia: 15", "Obrażenia do budowli: 5"];
    v772[15] = ["Diamentowa włócznia", "Jesteś gotowy, aby zabić smoka", "Obrażenia: 17", "Obrażenia do budowli: 5"];
    v772[33] = ["Ametystowa włócznia", "Smoki już nie są dla ciebie zagrożeniem", "Obrażenia: 18", "Obrażenia do budowli: 6"];
    v772[46] = ["Kamienna łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 2"];
    v772[50] = ["Złota łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v772[51] = ["Diamentowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v772[52] = ["Ametystowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v772[58] = ["Drewniany hełm", "Lepsze niż nic", "Obrona przed graczami: 1", "Obrona przed zwierzętami: 4"];
    v772[25] = ["Kamienny hełm", "Jesteś gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzętami: 8"];
    v772[26] = ["Złoty hełm", "Zwany także hełmem barbarzyńców", "Obrona przed graczami: 4", "Obrona przed zwierzętami: 13"];
    v772[27] = ["Diamentowy hełm", "Nie przechwalaj się za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzętami: 19"];
    v772[43] = ["Ametystowy hełm", "Nie boisz się już niczego", "Obrona przed graczami: 6", "Obrona przed zwierzętami: 23"];
    v772[59] = ["Smoczy hełm", "Zmierzysz się z całym światem", "Obrona przed graczami: 8", "Obrona przed zwierzętami: 27"];
    v772[23] = ["Czapka odkrywcy", "Zwierzęta nie będą zwracały na ciebie uwagi", "ale nie rób hałasu!", "Ciepło w i poza zimą"];
    v772[41] = ["świąteczna czapka", "Oh, oh, oh, Wesołych Świąt", "Ciepło w i poza zimą"];
    v772[42] = ["Czapka elfa", "Nie pozwól się być wykorzystywanym, mały śnieżny elfie!", "Ciepło w i poza zimą"];
    v772[83] = ["Kaptur", "Jesteś łobuzem", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w chłopską tunikę", "Jest ciepło w i poza zimą"];
    v772[10] = ["Nauszniki", "Jakiś inny rodzaj małej czapki.", "Ciepło w i poza zimą"];
    v772[11] = ["Czapka", "Także nazywana płaszczem.", "Ciepła w i poza zimą"];
    v772[40] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepła"];
    v772[84] = ["Chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepła w i poza zimą"];
    v772[85] = ["Zimowy kaptur", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w tunikę zimowego chłopa", "Jest ciepło w i poza zimą"];
    v772[86] = ["Zimowa chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepło w i poza zimą"];
    v772[48] = ["Maska do nurkowania", "Jesteś szybki w wodzie", "Ciepło", "Obrona przed graczami: 2, Obrona przed zwierzętami: 8"];
    v772[47] = ["Strój głębinowy", "Jesteś bardzo szybki w wodzie", "Ciepło ci w wodzie", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v772[185] = ["Smocza kula", "Zdobyta podczas zadania"];
    v772[149] = ["Smocze serce", "Zamienia cię w ducha po śmierci!", "Jesteś duchem na 60 sekund", "Znajdź kamień rezurekcyjny"];
    v772[175] = ["Zielony kryształ", "Nie oszukiwałeś, przysięgasz?"];
    v772[176] = ["Pomarańczowy kryształ", "Tylko prawdziwy pirat może go znaleźć!"];
    v772[177] = ["Niebieski kryształ", "Dla zbyt miłych ludzi"];
    v772[77] = ["Zielona korona", "Szybko się leczysz", "Uzdrawia z biegiem czasu: 40", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v772[78] = ["Pomarańczowa korona", "Nagle poczułeś smak szczęścia", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v772[79] = ["Niebieska korona", "Gdy już będziesz martwy, zamienisz się w ducha", "Przy okazji stracisz swoją broń i kilof", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v772[180] = ["Wiadro", "Również przydatne do napełnienia studni", "Jedno wiadro jest jak dwanaście butelek"];
    v772[181] = ["Puste wiadro", "Musisz napełnić to wiadro wodą"];
    v772[127] = ["Butelka", "Pozwala pić wodę wszędzie", "Woda: 50"];
    v772[128] = ["Pusta butelka", "Możesz napełnić tą butelkę blisko źródła wody"];
    v772[130] = ["Pusta konewka", "Musisz ją napełnić w źródle wody, aby ją użyć"];
    v772[49] = ["Konewka", "Pozwala podlewać rośliny", "Obrażenia: 1"];
    v772[29] = ["Plecak", "Więcej miejsca na twoje przedmioty!"];
    v772[120] = ["Papier", "Używany w tworzeniu książki"];
    v772[28] = ["Książka", "Pozwala znacznie skrócić wytwarzanie", "Musisz ją nosić by zadziałała", "Uszkodzenie 1"];
    v772[195] = ["Bandaż", "Szybciej zregeneruj życie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"];
    v772[148] = ["Zamek", "Pozwala ci zamknąć skrzynię"];
    v772[158] = ["Wytrych", "Pozwala ci odblokować jedną skrzynię"];
    v772[159] = ["Totem", "Pozwala ci stworzyć drużynę", "Dziel się drzwiami i zamkniętymi skrzyniami", "Szkodliwe budynki nie zranią twoich przyjaciół"];
    v772[125] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci pić bez utonięcia", "Chodzisz szybciej w wodzie"];
    v772[183] = ["Tabliczka", "Zostaw wiadomość dla innych", "Wytrzymałość: 200"];
    v772[190] = ["Dach", "Trochę cie ogrzewa i chowa!"];
    v772[182] = ["Studnia", "Umożliwia napełnienie butelki", "Wytrzymałość: 1000"];
    v772[162] = ["Drewniany mur", "Znasz taniec ścian?", "Wytrzymałość: 1000"];
    v772[163] = ["Kamienny mur", "Jest to trochę bardziej poważniejsze.", "Wytrzymałość: 1500"];
    v772[164] = [" Złoty mur", "Złoto na twoich murach? To trochę krzykliwe.", "Wytrzymałość: 2000"];
    v772[165] = ["Diamentowy mur", "Jaki błyszczący, uważaj na oczy", "Wytrzymałość: 2500"];
    v772[122] = ["Ametystowy mur", "Musisz bardzo się bać, aby wyjść!", "Wytrzymałość: 3000"];
    v772[160] = ["Drewniany kolczasty mur", "Może uszkodzić wrogów", "Obrażenia: 10, Obrażenia po uszkodzeniu: 2", "Wytrzymałość: 150"];
    v772[168] = ["Kamienny kolczasty mur", "Nie chciałbym być twoim wrogiem.", "Obrażenia: 20", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 300"];
    v772[169] = ["Złoty kolczasty mur", "Jesteśtaki okrutny.", "Obrażenia: 30", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 600"];
    v772[170] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "Obrażenia: 40", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 1200"];
    v772[123] = ["Ametystowy kolczasty mur", "Co ci sąsiedzi ci zrobili?", "Obrażenia: 50", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 2400"];
    v772[166] = ["Drewniane drzwi", "Może być otwarte przez ciebie lub przyjaciół", "Wytrzymałość: 1000"];
    v772[171] = ["Kamienne drzwi", "Solidne drzwi są bardziej poważne ", "Wytrzymałość: 1500"];
    v772[172] = ["Złote drzwi", "Czy odbudowujesz El Dorado?", "Wytrzymałość: 2000"];
    v772[173] = ["Diamentowe drzwi", "Dla błyszczącego domu", "Wytrzymałość: 2500"];
    v772[124] = ["Ametystowe drzwi", "Czy twój dom to zamknięty sejf?", "Wytrzymałość: 3000"];
    v772[119] = ["Piec", "Ogrzewa cię", "Zużywa drewno co 5 sekund", "Wytrzymałość: 1000"];
    v772[135] = ["Młyn", "Może produkować mąkę z pszenicy", "Przygotowanie mąki zajmuje 5 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v772[144] = ["Piec do chleba", "Pozwala na wypiek chleba z mąki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v772[151] = ["Kamień rezurekcyjny", "To magia", "Wskrzesi cię jeśli jesteś duchem", "Stracisz swoja broń i kilof", "Wytrzymałość: 200"];
    v772[300] = "Nie możesz dołączyć do tego serwera";
    v772[301] = "Wyrzucony: ";
    v772[302] = "Twój klucz jest aktualnie używany przez innego gracza";
    v772[303] = "Twój klucz jest nieprawidłowy";
    v772[304] = "Posiadasz starszą wersję, musisz wyczyścić swoją pamięć";
    v772[305] = "Nie ma nowych minerałów, zwierząt, i jedzenia";
    v772[306] = "Przeżyłeś 1 dzień";
    v772[307] = "Przeżyłeś ";
    v772[308] = " dni";
    v772[309] = "Jesteś martwy ;-;";
    v772[310] = "Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...";
    v772[311] = "Serwer jest pełny! Spamuj przycisk zagraj!";
    v772[312] = "Źródło jest puste";
    v772[313] = "Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)";
    v772[314] = " jest martwy";
    v772[315] = "To nie jest właściwe narzędzie";
    v772[316] = "Dołączyłeś do drużyny";
    v772[317] = "Jesteś martwy";
    v772[318] = " dołączył do drużyny";
    v772[319] = "Twoja drużyna została zniszczona";
    v772[320] = " Opuściłeś drużynę";
    v772[321] = " opuścił drużynę";
    v772[322] = "Ktoś ukradł twój żeton :>";
    v772[323] = "Wybierz serwer";
    v772[324] = "graczy";
    v772[325] = "wszystkich graczy";
    v772[326] = "graczy w tym trybie";
    v772[327] = "Już wkrótce...";
    document.getElementById("nickname_input").placeholder = "Przydomek";
    v774[0] = ["Zostałeś zabity bez powodu"];
    v774[1] = ["Umarłeś z głodu, jak nazwa gry wskazuje"];
    v774[2] = ["Zamarzłeś na śmierć. Ale smutne", "Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska."];
    v774[3] = ["Gracz zabił cię, mówiąc ci 'git gud.' ", "Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie."];
    v774[4] = ["Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.", "Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię."];
    v774[5] = ["Twoje ciało stało się gniazdem dla pajęczych jaj", "Pająk cię zabił. Przynajmniej to nie był królik."];
    v774[6] = ["Wilk już nie będzie głodował po zjedzeniu cię", "To nie są pieski.Wilki nie lubią jak się je głaszcze."];
    v774[7] = ["Lis był dla ciebie za szybki", "Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?"];
    v774[8] = ["Niedźwiedź chciał się tylko przytulić.", "Niedźwiedź był biedny. Nie jest mi przykro."];
    v774[9] = ["Zostałeś spalony na popiół przez smoka. Jakie to smutne.", "Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć."];
    v774[10] = ["Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...", "Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy."];
    v774[11] = ["Nawet duch potrafi umrzeć.", "Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc..."];
    v774[12] = ["Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.", "Ty zabiłeś surowe mięso. Ono zabiło ciebię."];
    v774[13] = ["Zginąłeś z pragnienia. Lepiej pić własny mocz."];
    v774[14] = ["Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz."];
    v774[15] = ["Nie martw się, zasmakowałeś pirani.", "Zabawny fakt: Piranie jedzą ludzi, włączając ciebie."];
    v774[16] = ["LapaMauve nie planuje abyś mógł zabić krakena", "Kraken rozwalił twoją czaszkę."];
    v774[17] = ["Twoja skóra odpada, słońce cię zabija."];
    v774[18] = ["Czosnek w twoich kieszeniach  ugotował ci mózg."];
    v774[19] = ["Jako wampir, nie stałbym blisko ząbków czosnku."];
    v774[20] = ["Zjadłeś czosnek jako wampir, czego oczekiwałeś?"];
    v774[21] = ["Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg... Głoduję", "Potrzebuję twojego mózgu Uuunnnggg...", "Świeże mięso tutaj.. Uuunnnggg", "Uuunnnggg... Jesteś pyszny", "Uuunnnggg...", "Jeść... uuunnnggg...", "Czuję krew... Uuunnnggg"];
  }
  function f78(p509, p510) {
    const v753 = (2531011 + (p509 + 59988) * 214013) % 4294967296;
    const v754 = ~(p510 & 2496) & p510 | ~(p510 & 2496) & 2496;
    return (13391 + (f514(v753, v754, v753, v754, v753) ^ f56(v754, v753, v754, v753, v754))) % 65510;
  }
  function f79() {
    v772[184] = ["You feel a great power emanating from this orb"];
    v774[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v772[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v772[328] = " RETOUR AU JEU";
    v772[329] = " Partage sur Twitter";
    v772[330] = " Partage sur Facebook";
    v772[331] = "Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points";
    v772[332] = "points";
    v772[333] = "Score";
    v772[334] = "Tués";
    v772[335] = "Jours survécus";
    v772[336] = "Mode de construction: Libre. Appuie sur G pour changer";
    v772[337] = "Mode de construction: Grille. Appuie sur G pour changer";
    v772[197] = ["Pince de crabe", "Les pinces de crabes peuvent aussi être mangées", "Food: 10"];
    v772[18] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portée", "avec un casque un crabe sur un Crab King", "Damage: 14", "Building Damage: 4"];
    v772[61] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", "Players Defense: 4", "Animals Defense: 13"];
    v772[198] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te régénères plus vite", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quêtes";
    document.getElementById("timeremainingquest").innerHTML = "Temps Restant";
    document.getElementById("constraintquest").innerHTML = " Contraintes";
    document.getElementById("claim_rewards").innerHTML = " Résultat";
    document.getElementById("rewardquest").innerHTML = " Récompenses";
    document.getElementById("killdragon_1").innerHTML = " Collecte 1 Cœur de dragon dans la cave";
    document.getElementById("amethyst_2").innerHTML = " Récolte 1 améthyste";
    document.getElementById("survive20min_3").innerHTML = "Survis sans perdre de vie";
    document.getElementById("treasure_chest_4").innerHTML = " Ouvre 5 coffres au trésor";
    document.getElementById("dont_hit_5").innerHTML = " Sois pacifique";
    document.getElementById("bread_6").innerHTML = " Cuisine 100 pains en hiver, seul et sans retour en arrière";
    document.getElementById("winter_7").innerHTML = " Après 1 jour, survis en hiver";
    for (var v755 = 0; v755 < 7; v755++) {
      document.getElementById("claim_reward_" + v755).innerHTML = "RÉCOMPENSE!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUITTER";
    v772[7] = ["Main"];
    v772[140] = ["Terre", "C'est sale!"];
    v772[126] = ["Sable", "J'en ai dans les yeux"];
    v772[109] = ["Bois", "Tu n'en auras jamais trop!"];
    v772[108] = ["Pierre", "Aussi appelée roche"];
    v772[111] = ["Or", "Sois généreux, donne en aux autres"];
    v772[112] = ["Diamant", "Comme tes yeux! wesh"];
    v772[121] = ["Améthyste", "C'est Mauve comme Lapa"];
    v772[131] = ["Farine", "Utile pour la cuisine"];
    v772[133] = ["Cookie", "Un somptueux cookie de Grand-Mère", "Nourriture: 50"];
    v772[136] = ["Gâteau", "Pour les fins gourmets", "Nourriture: 100"];
    v772[116] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"];
    v772[117] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"];
    v772[137] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"];
    v772[138] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"];
    v772[143] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marché", "Nourriture: 15"];
    v772[145] = ["Sandwich", "Le Jambon Beurre vaincra", "Nourriture: 100"];
    v772[200] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"];
    v772[199] = ["Canne à sucre", "Sans sucre de canne", "Nourriture: 20"];
    v772[201] = ["Guirlandes", "Utilisable sur les toits"];
    v772[115] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v772[110] = ["Baies", "Peu nourrissant", "Nourriture: 10"];
    v772[132] = ["Graines de blé", "Deviennent du blé", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v772[134] = ["Blé", "Peut être transformé en farine dans les moulins"];
    v772[188] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v772[189] = ["Citrouille", "Ça me rappelle Halloween", "Nourriture: 30"];
    v772[191] = ["Graines d'ail", "Très dangereux pour les vampires", "Dégâts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v772[192] = ["Ail", "Soigne et réduit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"];
    v772[193] = ["Graines de ronces", "Peuvent blesser vos ennemis", "Dégâts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", "Durabilité: 1000", "Durée de vie: 8 jours"];
    v772[194] = ["Ronces", "Ça pique!"];
    v772[141] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", "Durabilité: 2000"];
    v772[142] = ["Glace", "Pratique pour faire de l'eau et des gâteaux"];
    v772[55] = ["Clé à molette", "Pour réparer les portes, les murs et les piques", "Dégâts: 2"];
    v772[174] = ["Peau de loup", "Il était où le gentil ti Youki?"];
    v772[2] = ["Peau de lapin", "Vous êtes un monstre"];
    v772[178] = ["Fourrure blanche", "Tu es une usine à pain"];
    v772[179] = ["Fourrure noire", "Tu te sens prêt à faire quelque chose de mal"];
    v772[146] = ["Fourrure d'hiver", "Il voulait juste un calin"];
    v772[139] = ["Écailles", "Ça sent le poisson!"];
    v772[129] = ["Peau du kraken", "Tu n'as pas eu trop peur?"];
    v772[113] = ["Feu de camp", "Réchauffe", "Durabilité: 150", "Durée de vie: 2min"];
    v772[118] = ["Grand feu de camp", "Réchauffe plus longtemps", "Durabilité: 400", "Durée de vie: 6min"];
    v772[114] = ["Établi", "Utile pour fabriquer toute sorte d'objets"];
    v772[161] = ["Fil", "Utile pour faire des chapeaux et un sac"];
    v772[147] = ["Fil de diamant", "Utile pour faire des chapeaux"];
    v772[167] = ["Coffre", "Permet de ranger des objets", "Durabilité: 500"];
    v772[57] = ["Épée en bois", "C'est pour les enfants", "Dégâts: 12", "Démolition: 4"];
    v772[0] = ["Épée en pierre", "Sois gentil avec les autres", "Dégâts: 19", "Démolition: 6"];
    v772[5] = ["Épée en or", "Roi de la forêt", "Dégâts: 22", "Démolition: 7"];
    v772[6] = ["Épée en diamant", "Tu te sens puissant", "Dégâts: 24", "Démolition: 8"];
    v772[9] = ["Épée de pirate", "Marin d'eau douce!", "Meilleure portée qu'une épée normale", "Dégâts: 24", "Démolition: 8"];
    v772[30] = ["Épée en améthyste", "Mauve est la plus belle couleur du monde", "Dégâts: 27", "Démolition: 9"];
    v772[62] = ["Épée du Dragon", "Pas de pitié!", "Dégâts: 30", "Démolition: 10"];
    v772[16] = ["Lance du Dragon", "Tuez-les tous!", "Dégâts: 22", "Démolition: 6"];
    v772[8] = ["Pioche en bois", "Peut récolter du bois et de la pierre", "Dégâts: 1"];
    v772[1] = ["Pioche en pierre", "Peut aussi récolter de l'or", "Dégâts: 2"];
    v772[3] = ["Pioche en or", "Peut aussi récolter du diamant", "Dégâts: 3", "Démolition: 1"];
    v772[4] = ["Pioche en diamant", "Peut tout récolter", "Dégâts: 4", "Démolition: 1"];
    v772[31] = ["Pioche en améthyste", "Peut tout récolter", "Dégâts: 5", "Démolition: 1"];
    v772[35] = ["Marteau en pierre", "Utile pour détruire les bâtiments", "Ne marche pas bien sur du diamant et améthyste", "Dégâts: 2", "Démolition: 20"];
    v772[36] = ["Marteau en or", "Utile pour détruire les bâtiments", "Ne marche pas bien sur l'améthyste", "Dégâts: 3", "Démolition: 30"];
    v772[37] = ["Marteau en diamant", "Utile pour détruire les bâtiments", "Dégâts: 4", "Démolition: 40"];
    v772[38] = ["Marteau en améthyste", "Utile pour détruire les bâtiments", "Dégâts: 5", "Démolition: 50"];
    v772[45] = ["Super Marteau", "As-tu prévu de détruire le monde?", "Dégâts: 12", "Démolition: 70"];
    v772[12] = ["Lance en bois", "Plus de peur que de mal", "Dégâts: 10", "Démolition: 2"];
    v772[13] = ["Lance en pierre", "C'est le début de l'évolution", "Dégâts: 14", "Démolition: 4"];
    v772[14] = ["Lance en or", "Attention, ça pique!", "Dégâts: 15", "Buildings Dégâts: 5"];
    v772[15] = ["Lance en diamant", "Tu es prêt à tuer les dragons", "Dégâts: 17", "Buildings Dégâts: 5"];
    v772[33] = ["Lance en améthyste", "Les dragons ne te font plus peur", "Dégâts: 18", "Buildings Dégâts: 6"];
    v772[46] = ["Pelle en pierre", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 2"];
    v772[50] = ["Pelle en or", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 3", "Buildings Dégâts: 1"];
    v772[51] = ["Pelle en diamant", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 4", "Buildings Dégâts: 1"];
    v772[52] = ["Pelle en améthyste", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 5", "Buildings Dégâts: 1"];
    v772[58] = ["Casque en bois", "Mieux que rien", "Défense: 1", "Défense contre animaux: 4"];
    v772[25] = ["Casque en pierre", "Prêt pour la bataille", "Défense: 2", "Défense contre animaux: 8"];
    v772[26] = ["Casque en or", "Alias le casque des sauvages", "Défense: 4", "Défense contre animaux: 13"];
    v772[27] = ["Casque en diamant", "Ne te vante pas trop", "Défense: 5", "Défense contre animaux: 19"];
    v772[43] = ["Casque en améthyste", "Tu n'as plus peur de rien", "Défense: 6", "Défense contre animaux: 23"];
    v772[59] = ["Casque du Dragon", "Tu vas conquérir le monde", "Défense: 8", "Défense contre animaux: 27"];
    v772[23] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[41] = ["Chapeau du Père Noël", "Oh, oh, oh, Joyeux Nöel!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[42] = ["Chapeau du lutin de Nöel", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[83] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[10] = ["Cache-oreilles", "Une sorte de petite chapka.", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[11] = ["Chapka", "Comment ça va, camarade?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[40] = ["Bonnet d'hiver", "Très confortable", "Très chaud"];
    v772[84] = ["Tunique", "Les plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[85] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[86] = ["Tunique d'hiver", "Tes plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v772[48] = ["Masque de plongée", "Tu es rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 2, Défense contre animaux: 8"];
    v772[47] = ["Scaphandre", "Tu es très rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 4, Défense contre animaux: 16"];
    v772[185] = ["Orbe du Dragon", "Donné en Quête"];
    v772[149] = ["Coeur de Dragon", "Te change en fantôme!", "Tu es un fantôme pendant 1 min", "Trouve une pierre de résurrection"];
    v772[175] = ["Gemme verte", "Tu n'as pas triché, promis?"];
    v772[176] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"];
    v772[177] = ["Gemme bleue", "Pour les gens trop gentils"];
    v772[77] = ["Couronne verte", "Te soigne très rapidement", "Soigne sur le temps: 40", "Défense: 4, Défense contre animaux: 16"];
    v772[78] = ["Couronne orange", "Tu te sens soudainement très chanceux", "Défense: 4, Défense contre animaux: 16"];
    v772[79] = ["Couronne bleue", "Une fois mort, tu deviens un fantôme", "Tu perdras toutes tes arguments", "Défense: 4, Défense contre animaux: 16"];
    v772[180] = ["Seau", "Utile pour remplir un puit", "Un sceau est équivalent à 20 bouteilles"];
    v772[181] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"];
    v772[127] = ["Bouteille", "Te permet de boire n'importe où", "Eau: 50"];
    v772[128] = ["Bouteille vide", "Tu peux remplir cette bouteille près d'une source d'eau"];
    v772[130] = ["Arrosoir vide", "Doit être rempli près d'une source d'eau"];
    v772[49] = ["Arrosoir", "Permet d'arroser les plantes", "Dégâts: 1"];
    v772[29] = ["Sac", "Plus de place dans ton inventaire!"];
    v772[120] = ["Papier", "Pour fabriquer toute sorte d'objets"];
    v772[28] = ["Livre", "Réduit considérablement le temps de fabrication", "Doit être porté pour fonctionner", "Dégâts: 1"];
    v772[195] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"];
    v772[148] = ["Cadenas", "Pour verrouiller un coffre"];
    v772[158] = ["Clé", "Pour déverrouiller un coffre"];
    v772[159] = ["Totem", "Te permet de créer une équipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"];
    v772[125] = ["Pont", "Très utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"];
    v772[183] = ["Pancarte", "Laisse un message aux autres", "Durabilité: 200"];
    v772[190] = ["Toit", "Te cache un peu et te réchauffe"];
    v772[182] = ["Puit", "Permet de remplir des bouteilles", "Durabilité: 1000"];
    v772[162] = ["Mur en bois", "Tu connais la danse des murs?", "Durabilité: 1000"];
    v772[163] = ["Mur en pierre", "Ça fait un peu plus sérieux", "Durabilité: 1500"];
    v772[164] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", "Durabilité: 2000"];
    v772[165] = ["Mur en diamant", "Très brillant, cache tes yeux", "Durabilité: 2500"];
    v772[122] = ["Mur en améthyste", "Tu dois avoir très peur de sortir dehors!", "Durabilité: 3500"];
    v772[160] = ["Piques en bois", "Peut blesser tes ennemis", "Dégâts: 10, Dégâts par coup: 2", "Durabilité: 150"];
    v772[168] = ["Pique en pierre", "Je ne voudrais pas être ton ennemi", "Dégâts: 20", "Dégâts par coup: 3", "Durabilité: 300"];
    v772[169] = ["Pique en or", "Tu es si cruel", "Dégâts: 30", "Dégâts par coup: 3", "Durabilité: 600"];
    v772[170] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "Dégâts: 40", "Dégâts par coup: 4", "Durabilité: 1200"];
    v772[123] = ["Pique en améthyste", "Mais qu'est ce que ton voisin t'a fait?", "Dégâts: 50", "Dégâts par coup: 4", "Durabilité: 2400"];
    v772[166] = ["Porte en bois", "Peut être ouvert ou fermé par toi ou tes amis", "Durabilité: 1000"];
    v772[171] = ["Porte en pierre", "Tu connais les trois petits cochons?", "Durabilité: 1500"];
    v772[172] = ["Porte en or", "Tu reconstruis l'el dorado?", "Durabilité: 2000"];
    v772[173] = ["Porte en diamant", "Pour une maison éclatante", "Durabilité: 2500"];
    v772[124] = ["Porte en améthyste", "Est-ce que ta maison est un coffre-fort?", "Durabilité: 3000"];
    v772[119] = ["Chaudière", "Réchauffe", "Consume du bois toutes les 5 sec", "Durabilité: 1000"];
    v772[135] = ["Moulin", "Peut produire de la farine à partir du blé", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v772[144] = ["Four à pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v772[151] = ["Pierre de résurrection", "Magie magie!", "Te ressuscite si tu es un fantôme", "Tu perds toutes tes armes", "Durabilité: 200"];
    v772[300] = "Tu ne peux pas rejoindre le serveur";
    v772[301] = "Expulsé: ";
    v772[302] = "Ta clé est déjà utilisée par quelqu'un d'autre";
    v772[303] = "Ta clé est fausse";
    v772[304] = "Tu as une vieille version, rafraichis tes caches";
    v772[305] = "Il n'y a plus de nouvelles ressources";
    v772[306] = "Tu as survécu 1 jour";
    v772[307] = "Tu as survécu ";
    v772[308] = " jours";
    v772[309] = "Tu es mort ;-;";
    v772[310] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!";
    v772[311] = "Le serveur est complet! Spam le bouton jouer";
    v772[312] = "Cette ressource est vide";
    v772[313] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)";
    v772[314] = " est mort";
    v772[315] = "Ce n'est pas le bon outil";
    v772[316] = "Tu as rejoins une équipe";
    v772[317] = "Tu es mort";
    v772[318] = " a rejoint l'équipe";
    v772[319] = "Ton équipe a été détruite";
    v772[320] = "Tu as quitté l'équipe";
    v772[321] = " a quitté l'équipe";
    v772[322] = "Quelqu'un a volé ton token :>";
    v772[323] = "Choisis un serveur";
    v772[324] = "joueurs";
    v772[325] = "joueurs";
    v772[326] = "joueurs dans ce mode";
    v772[327] = "Bientôt...";
    document.getElementById("nickname_input").placeholder = "Surnom";
    v774[0] = ["Tu as été tué sans raison particulière, juste comme ça"];
    v774[1] = ["Tu es mort de faim, c'est plutôt ironique, non?"];
    v774[2] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste près d'un feu"];
    v774[3] = ["Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tué, avec un peu de chance il mourra aussi"];
    v774[4] = ["Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"];
    v774[5] = ["Ton corps deviendra un nid pour les oeufs d'araignées."];
    v774[6] = ["Ce loup n'aura plus faim après t'avoir mangé", "Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués."];
    v774[7] = ["Ce renard était trop rapide pour toi", "Ce renard t'a transformé en boîte"];
    v774[8] = ["Cet ours voulait juste un câlin."];
    v774[9] = ["Tu as été brûlé par un dragon. Quel gâchis", "Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir..."];
    v774[10] = ["Tu as sauté sur des piques, c'était pas une bonne idée...", "Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues"];
    v774[11] = ["Même les fantômes peuvent mourir", "Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc..."];
    v774[12] = ["Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.", "Tu as tué l'animal, sa viande t'a tué."];
    v774[13] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"];
    v774[14] = ["Tu t'es noyé. Essaye de construire un pont la prochaine fois"];
    v774[15] = ["Ne t'inquiète pas, le piranha t'a trouvé appétissant."];
    v774[16] = ["Un kraken a 'kraké' tes os."];
    v774[17] = ["Ta peau tombe en lambeau, le soleil t'a brûlé."];
    v774[18] = ["L'ail dans ta poche a fait bouillir ton cerveau."];
    v774[19] = ["En tant que vampire, ne reste pas à côté des gousses d'ail."];
    v774[20] = ["Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?"];
    v774[21] = ["Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime."];
    Δⵠᐃⵠᐃ = "Uuunnnggg";
    ᐃⵠΔⵠᐃᐃⵠ = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraîche ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", "Uuunnnggg...", "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"];
  }
  function f80(p511, p512, p513, p514) {
    const v756 = (2147483587 + (p511 + 65088) * 2147483629) % 2147483647;
    const v757 = ~(p512 & 36691) & 36691 | ~(p512 & 36691) & p512;
    const v758 = ((p513 + 22131) * 2147483629 + 2147483587) % 2147483647;
    const v759 = p514 ^ 19442;
    const vF40 = function (p515, p516, p517, p518, p519, p520) {
      const v760 = ~(p515 & 26268) & 26268 | ~(p515 & 26268) & p515;
      const v761 = ~(p516 & 15363) & 15363 | ~(p516 & 15363) & p516;
      const v762 = p517 ^ 53999;
      const v763 = (2147483587 + (p520 + 43307) * 2147483629) % 2147483647;
      const vMC2 = f514(v760, v761, v762, (p518 | 8757) & ~(p518 & 8757), ~(p519 & 16542) & 16542 | ~(p519 & 16542) & p519);
      (function (p521, p522, p523, p524) {
        const v764 = (12345 + (p521 + 25901) * 1103515245) % 2147483648;
        const v765 = (16 << (p522 >> 8 & 255)) + (8 << (p522 >> 16 & 255)) + (24 << (p522 & 255)) + (0 << (p522 >> 24 & 255));
        const v766 = (12345 + (48115 + p523) * 1103515245) % 2147483648;
        const v767 = ~(p524 & 14431) & p524 | ~(p524 & 14431) & 14431;
        const vF42 = function (p525, p526, p527, p528) {
          const v768 = ~(p525 & 46861) & p525 | ~(p525 & 46861) & 46861;
          const v769 = ((12008 + p526) * 1103515245 + 12345) % 2147483648;
          const v770 = (61105 + p527) % 65348;
          const v771 = ~(p528 & 56167) & 56167 | ~(p528 & 56167) & p528;
          const vF362 = f36(v768, v769, v770, v771, v768);
          f43(v769, v770, v771);
          return (vF362 | 25460) & ~(vF362 & 25460);
        }(v764, v765, v766, v767);
        const vF462 = f46(v764, v765, v766, v767, v764);
      })(v763, v760, v761, v762);
      return vMC2 ^ 21379;
    }(v756, v757, v758, v759, v756, v757);
    f43(v758, v759, v756);
    return ~(vF40 & 39452) & 39452 | ~(vF40 & 39452) & vF40;
  }
  var v772 = [];
  for (var v782 = 0; v782 < 344; v782++) {
    v772[v782] = "";
  }
  var v774 = [];
  const v775 = 3;
  const v776 = 4;
  $(".md-languages").on("click", function () {
    $(this).toggleClass("active");
  });
  $(".md-languages ul li").on("click", function () {
    var v777 = $(this).text();
    if (v777 === "English") {
      f68();
    } else if (v777 === "Français") {
      f79();
    } else if (v777 === "Deutsch") {
      f76();
    } else if (v777 === "Español") {
      f75();
    } else if (v777 === "Português") {
      f73();
    } else if (v777 === "Русский") {
      f69();
    } else if (v777 === "Polski") {
      f77();
    }
    ⲆⲆⲆΔⵠ = [];
    v2813.ⵠⲆᐃⲆ.label = [];
    $(".md-languages ul li").removeClass("active");
    $(this).addClass("active");
    $(".md-languages label button").text(v777);
  });
  var v778;
  v596 = "EN";
  switch (navigator.language || navigator.userLanguage) {
    case "ru":
      v596 = "RU";
      break;
    case "en":
      v596 = "EN";
      break;
    case "es":
      v596 = "SP";
      break;
    case "fr":
      v596 = "FR";
      break;
    case "pl":
      v596 = "PL";
      break;
    case "de":
      v596 = "DE";
      break;
    case "pt":
      v596 = "PT";
  }
  if (v596 === "FR") {
    $(".md-languages label button").text("Français");
    v778 = f79;
  } else if (v596 === "PL") {
    $(".md-languages label button").text("Polski");
    v778 = f77;
  } else if (v596 === "PT") {
    $(".md-languages label button").text("Português");
    v778 = f73;
  } else if (v596 === "SP") {
    $(".md-languages label button").text("Español");
    v778 = f75;
  } else if (v596 === "RU") {
    $(".md-languages label button").text("Русский");
    v778 = f69;
  } else if (v596 === "DE") {
    $(".md-languages label button").text("Deutsch");
    v778 = f76;
  } else {
    $(".md-languages label button").text("English");
    v778 = f68;
  }
  Δⵠ = {
    ⵠᐃᐃΔΔΔⲆΔⲆ: "img/logo.png",
    ⵠΔⲆⵠⵠⵠᐃ: "img/mapday.png",
    ᐃΔⵠΔⲆΔΔ: "img/mapnight.png",
    ᐃΔⵠⲆⵠᐃΔᐃⵠ: "img/bigzday.png",
    ⵠⲆⲆⲆΔⲆᐃⵠΔ: "img/bigznight.png",
    ⵠᐃᐃᐃΔⲆᐃ: "img/bigday-river1.png",
    ᐃΔᐃᐃⵠᐃΔⲆᐃ: "img/bigday-lake.png",
    ⲆⵠⲆⵠⲆⲆΔ: "img/bigday-berry.png",
    ⵠᐃᐃᐃᐃᐃᐃ: "img/bigday-stone1.png",
    ⲆⵠⵠⵠⲆⲆⵠ: "img/bigday-stone2.png",
    ⵠΔᐃΔⵠⵠΔ: "img/bigday-gold1.png",
    ΔⵠΔⵠΔⲆᐃ: "img/bigday-gold2.png",
    ᐃⵠΔᐃᐃᐃⲆ: "img/bigday-emerald1.png",
    ᐃⲆΔⲆΔΔΔ: "img/bigday-emerald2.png",
    ΔⵠᐃⲆᐃⲆⵠ: "img/bigday-amethyst.png",
    ⲆⵠᐃⲆΔⵠΔ: "img/bigday-bear.png",
    ⵠΔΔⲆⵠᐃⵠ: "img/bigday-cave.png",
    ᐃⲆΔⵠΔⵠⲆ: "img/bigday-diamond.png",
    ⵠⲆⵠᐃⲆᐃⵠ: "img/bigday-island.png",
    ⲆⲆⵠᐃⲆᐃΔ: "img/bigday-reidite.png",
    ⲆⲆⲆⲆⲆᐃΔ: "img/bigday-spider.png",
    ⲆⲆⵠᐃⲆΔⵠ: "img/bigday-wolf.png",
    ⵠᐃⲆⲆⲆⲆⲆ: "img/bigday-fir-tree.png",
    ΔⵠⲆⲆᐃⵠⲆ: "img/bigday-fox.png",
    ᐃΔΔᐃⲆΔⵠ: "img/bigday-kraken.png",
    ᐃⵠⵠΔⵠΔᐃ: "img/bigday-piranha.png",
    ⲆⵠᐃⲆⲆᐃⵠ: "img/bigday-cactus.png",
    ⵠᐃᐃΔⵠΔΔ: "img/bigday-magma.png",
    ΔⵠⲆᐃⲆⵠⵠ: "img/bigday-river1.png",
    ᐃᐃⵠⲆΔΔᐃⵠΔ: "img/bignight-lake.png",
    ⵠᐃⲆᐃΔⲆⵠⲆⲆ: "img/bignight-berry.png",
    ⵠⵠⲆΔΔⵠΔ: "img/bignight-stone1.png",
    ᐃⲆⵠⲆΔΔᐃ: "img/bignight-stone2.png",
    ⲆΔΔᐃⵠⲆᐃ: "img/bignight-gold1.png",
    ⲆᐃΔⵠⲆᐃΔ: "img/bignight-gold2.png",
    ΔᐃΔΔΔᐃⲆ: "img/bignight-emerald1.png",
    ⲆΔᐃⵠΔⵠᐃ: "img/bignight-emerald2.png",
    ⲆΔΔᐃΔΔⲆ: "img/bignight-amethyst.png",
    ᐃᐃⵠⵠⲆᐃΔ: "img/bignight-bear.png",
    ΔᐃⵠᐃΔⵠΔ: "img/bignight-cave.png",
    ΔᐃΔᐃⲆᐃⵠ: "img/bignight-diamond.png",
    ⵠᐃⵠΔⲆⵠᐃ: "img/bignight-island.png",
    ⲆΔⵠᐃΔⲆⵠ: "img/bignight-reidite.png",
    ΔⲆΔⲆᐃⲆᐃ: "img/bignight-spider.png",
    ⲆΔᐃᐃᐃⵠⲆ: "img/bignight-wolf.png",
    ΔⵠΔⲆᐃⲆⲆ: "img/bignight-fir-tree.png",
    ⲆⵠΔΔΔᐃⲆ: "img/bignight-fox.png",
    ΔⲆⵠᐃⲆⵠⵠ: "img/bignight-kraken.png",
    ᐃⵠΔⲆΔᐃⲆ: "img/bignight-piranha.png",
    ΔᐃᐃᐃⲆΔᐃ: "img/bignight-cactus.png",
    ⲆⵠΔᐃⲆⲆΔ: "img/bignight-magma.png",
    ⵠⵠⵠᐃⲆΔΔ: "img/bigday-desert.png",
    ΔΔⵠᐃᐃⵠΔ: "img/bigday-winter.png",
    ⵠΔΔᐃΔⲆΔ: "img/bigday-lava.png",
    ⵠⵠⲆⲆᐃΔⲆ: "img/bigday-forest.png",
    ⵠⵠᐃᐃⵠⲆⲆ: "img/bignight-desert.png",
    ΔΔⵠⵠⲆⲆΔ: "img/bignight-winter.png",
    ⲆΔⵠⵠⵠΔⲆ: "img/bignight-lava.png",
    ⲆⵠΔⵠⵠⲆᐃ: "img/bignight-forest.png",
    ᐃΔⵠⲆᐃⵠⲆ: "img/day-river-wave.png",
    ᐃⲆⵠᐃΔᐃⲆ: "img/night-river-wave.png",
    ⲆⵠⲆⲆᐃᐃⲆ: "img/day-fog0.png",
    ΔⵠⵠⲆⲆᐃⲆ: "img/day-fog1.png",
    ⵠⲆⵠⵠΔΔΔ: "img/day-fog2.png",
    ΔᐃⲆⵠⲆᐃΔ: "img/night-fog0.png",
    ⵠΔⵠⵠᐃᐃΔ: "img/night-fog1.png",
    ⵠⲆⲆⲆᐃΔⵠ: "img/night-fog2.png",
    ⵠᐃⲆᐃⲆᐃⵠ: "img/day-fogdesert0.png",
    ⲆΔⵠΔⲆⵠⲆ: "img/day-fogdesert1.png",
    ⲆᐃΔⲆⵠΔᐃ: "img/day-fogdesert2.png",
    ⲆⲆΔΔⲆⲆΔ: "img/night-fogdesert0.png",
    ᐃΔᐃΔΔⵠⵠ: "img/night-fogdesert1.png",
    ᐃⲆⲆⲆΔᐃᐃ: "img/night-fogdesert2.png",
    ᐃⵠⵠⲆΔᐃΔ: "img/day-cross-server.png",
    ΔⲆΔΔⵠᐃⲆ: "img/day-here-server.png",
    ⵠⵠΔⲆⵠⵠΔ: "img/day-finish-server.png",
    ⵠΔΔⲆⲆΔⵠ: "img/day-item-server.png",
    ᐃⵠΔᐃⲆⵠΔ: "img/day-skull-server.png",
    ⲆᐃᐃΔⵠᐃᐃ: "img/night-cross-server.png",
    ᐃΔⲆᐃⲆⲆⲆ: "img/night-here-server.png",
    ΔⲆⲆᐃⵠⲆΔ: "img/night-finish-server.png",
    ⵠᐃᐃⵠΔᐃΔ: "img/night-item-server.png",
    ᐃΔⲆΔᐃⵠΔ: "img/night-skull-server.png",
    ᐃⵠᐃΔⵠⵠⵠ: "img/day-reidite0.png",
    ΔΔⲆΔᐃΔΔ: "img/night-reidite0.png",
    ᐃⲆⲆΔᐃΔᐃ: "img/day-reidite1.png",
    ⵠᐃᐃⵠΔⲆᐃ: "img/night-reidite1.png",
    ᐃΔⵠΔⵠⲆⲆ: "img/day-reidite2.png",
    ᐃΔΔᐃᐃⵠⲆ: "img/night-reidite2.png",
    ⲆᐃΔⲆᐃⵠᐃ: "img/day-lava1.png",
    ᐃⲆⲆᐃⵠⵠⵠ: "img/night-lava1.png",
    ⲆᐃΔⲆᐃⲆⲆ: "img/day-lava2.png",
    ᐃΔⵠΔᐃⵠΔ: "img/night-lava2.png",
    ⵠΔΔΔᐃΔΔ: "img/day-lava3.png",
    ⲆΔᐃⵠᐃΔΔ: "img/night-lava3.png",
    ⲆᐃᐃⵠⲆⵠΔ: "img/day-lava4.png",
    ΔⲆⲆΔᐃᐃⲆ: "img/night-lava4.png",
    ΔΔⲆᐃⵠᐃᐃ: "img/day-lava5.png",
    ᐃΔⵠⲆⲆΔΔ: "img/night-lava5.png",
    ΔΔⲆᐃΔⲆⵠ: "img/day-lava6.png",
    ᐃⵠⵠⲆⵠᐃΔ: "img/night-lava6.png",
    ⵠⵠᐃⲆⵠΔᐃ: "img/day-lava-ground1.png",
    ᐃⵠΔᐃΔⲆⲆ: "img/night-lava-ground1.png",
    ᐃᐃⵠⲆⵠᐃΔ: "img/day-lava-ground2.png",
    ⵠⲆᐃΔⲆᐃⵠ: "img/night-lava-ground2.png",
    ᐃⵠΔΔⲆⵠⵠ: "img/day-lava-ground3.png",
    ⵠᐃᐃⵠⵠⲆⲆ: "img/night-lava-ground3.png",
    ΔⲆⲆᐃᐃᐃΔ: "img/day-lava-ground4.png",
    ᐃΔⵠⵠⲆᐃΔ: "img/night-lava-ground4.png",
    ΔⵠᐃⵠⵠⵠⲆ: "img/day-lava-ground5.png",
    ᐃⲆⲆᐃⵠⲆΔ: "img/night-lava-ground5.png",
    ᐃᐃⵠΔⲆᐃⲆ: "img/day-lava-ground6.png",
    ⵠᐃⲆⲆⲆⵠⲆ: "img/night-lava-ground6.png",
    ΔΔΔⵠⲆᐃⲆ: "img/day-fire-mob.png",
    ΔᐃᐃⲆⵠⵠⲆ: "img/night-fire-mob.png",
    ΔᐃⲆⲆⲆⵠᐃ: "img/hurt-fire-mob.png",
    Δᐃⵠⵠᐃⵠᐃ: "img/day-diamond-protection.png",
    ⲆⵠⵠⲆᐃⲆⵠ: "img/night-diamond-protection.png",
    ⲆⵠⲆⲆⵠⲆΔ: "img/day-hand-diamond-protection.png",
    ⲆⵠᐃⲆᐃⲆⵠ: "img/night-hand-diamond-protection.png",
    ⵠΔⵠⲆⵠΔⲆ: "img/inv-diamond-protection-out.png",
    ⵠᐃⵠᐃⵠⲆΔ: "img/inv-diamond-protection-in.png",
    ⲆⲆⵠᐃΔΔⲆ: "img/inv-diamond-protection-click.png",
    ⲆΔⲆⵠⲆᐃΔ: "img/day-amethyst-protection.png",
    ΔᐃΔⵠᐃⵠΔ: "img/night-amethyst-protection.png",
    ⲆᐃᐃⲆⲆᐃΔΔⵠ: "img/day-hand-amethyst-protection.png",
    ΔⵠΔΔⲆⲆⵠⲆⵠ: "img/night-hand-amethyst-protection.png",
    ᐃⲆᐃᐃᐃᐃⵠ: "img/inv-amethyst-protection-out.png",
    ΔᐃᐃⵠⵠΔⵠ: "img/inv-amethyst-protection-in.png",
    ΔᐃⵠⲆΔⵠᐃ: "img/inv-amethyst-protection-click.png",
    ΔᐃΔΔⲆⲆⵠ: "img/day-reidite-sword.png",
    ᐃⲆΔⵠΔΔΔ: "img/night-reidite-sword.png",
    ⵠⵠⵠⲆΔⵠΔ: "img/inv-reidite-sword-out.png",
    ΔᐃΔΔⲆΔⲆ: "img/inv-reidite-sword-in.png",
    ⵠⲆᐃᐃⲆΔΔ: "img/inv-reidite-sword-click.png",
    ΔΔᐃⵠⵠΔΔ: "img/inv-reidite-out.png",
    ΔⲆⵠΔΔⲆΔ: "img/inv-reidite-in.png",
    ⲆⲆᐃΔⵠΔᐃ: "img/inv-reidite-click.png",
    ᐃⲆᐃᐃΔⲆΔ: "img/inv-flame-out.png",
    ⲆⲆⲆⲆΔⲆᐃ: "img/inv-flame-in.png",
    ΔⲆⵠΔΔⲆᐃ: "img/inv-flame-click.png",
    ᐃΔⲆΔᐃᐃⲆ: "img/day-magma-buble0.png",
    ⵠⲆΔⵠⲆⵠᐃ: "img/night-magma-buble0.png",
    ᐃΔᐃⲆⵠⵠⵠ: "img/day-magma-buble1.png",
    ᐃᐃⲆΔᐃΔΔ: "img/night-magma-buble1.png",
    ⵠⵠⲆᐃᐃⲆᐃ: "img/day-magma-buble2.png",
    ⵠⲆΔⲆⵠⵠΔ: "img/night-magma-buble2.png",
    ⲆⲆⵠⵠΔᐃᐃ: "img/day-lava-dragon.png",
    ⵠⵠᐃⲆᐃΔᐃ: "img/night-lava-dragon.png",
    ᐃᐃᐃΔΔⵠⵠΔᐃ: "img/day-fire-dragon.png",
    ⲆᐃⲆⵠⲆΔⵠⵠⵠ: "img/night-fire-dragon.png",
    ⲆᐃⵠⵠΔⵠⵠ: "img/hurt-lava-dragon.png",
    ΔᐃⲆΔΔⲆⲆ: "img/day-lava-wing-left.png",
    ΔᐃⵠᐃⲆⵠᐃ: "img/night-lava-wing-left.png",
    ΔⵠΔⲆⵠⵠΔ: "img/day-lava-wing-right.png",
    ΔᐃⲆᐃⵠⵠⵠ: "img/night-lava-wing-right.png",
    ⵠⵠⵠⵠᐃΔᐃ: "img/hurt-lava-wing-left.png",
    ⲆⵠΔⲆΔⵠᐃ: "img/hurt-lava-wing-right.png",
    ᐃᐃⲆⲆⲆᐃⲆ: "img/day-reidite-spear.png",
    ⵠᐃⵠᐃΔⵠᐃ: "img/night-reidite-spear.png",
    ᐃᐃⲆⲆᐃΔΔ: "img/inv-reidite-spear-out.png",
    ᐃΔΔⲆⵠᐃΔ: "img/inv-reidite-spear-in.png",
    ΔⲆⵠⵠᐃᐃᐃ: "img/inv-reidite-spear-click.png",
    ΔⵠΔⲆⵠⲆΔ: "img/day-reidite-helmet.png",
    ΔⲆΔⲆⵠᐃⲆ: "img/night-reidite-helmet.png",
    ΔⲆΔⲆᐃΔⵠ: "img/inv-reidite-helmet-out.png",
    ⲆΔΔⵠⵠΔⲆ: "img/inv-reidite-helmet-in.png",
    ⵠΔΔΔΔⵠⲆ: "img/inv-reidite-helmet-click.png",
    ΔⵠᐃΔᐃᐃⵠ: "img/day-hand-reidite-protection.png",
    ΔⵠⲆΔⲆⲆⵠ: "img/night-hand-reidite-protection.png",
    ⵠⵠᐃⲆᐃᐃⲆ: "img/day-reidite-protection.png",
    ⵠΔⲆᐃΔⲆᐃ: "img/night-reidite-protection.png",
    ⲆᐃΔᐃΔⲆΔ: "img/inv-reidite-protection-out.png",
    ᐃⲆᐃᐃᐃⵠⵠ: "img/inv-reidite-protection-in.png",
    ΔΔᐃⲆⲆᐃᐃ: "img/inv-reidite-protection-click.png",
    ⲆΔⲆᐃΔΔⵠ: "img/day-lava-dragon-sword.png",
    ⵠⲆΔᐃΔᐃⵠ: "img/night-lava-dragon-sword.png",
    ⲆΔⵠⵠᐃⵠⵠ: "img/inv-lava-dragon-sword-out.png",
    ⵠⵠⲆΔⲆΔⵠ: "img/inv-lava-dragon-sword-in.png",
    ⵠΔⵠⵠⵠΔⵠ: "img/inv-lava-dragon-sword-click.png",
    ΔⲆⵠⵠⲆᐃⵠ: "img/day-lava-spear.png",
    ⵠⵠΔΔⲆⵠΔ: "img/night-lava-spear.png",
    ⲆΔᐃᐃΔⵠⲆ: "img/inv-lava-spear-out.png",
    ΔⲆᐃΔⲆΔⲆ: "img/inv-lava-spear-in.png",
    ᐃΔᐃⲆᐃΔᐃ: "img/inv-lava-spear-click.png",
    ΔⲆⵠⵠᐃΔⲆ: "img/day-lava-helmet.png",
    ⵠⵠⵠᐃⵠΔᐃ: "img/night-lava-helmet.png",
    ᐃⵠⵠᐃᐃⲆΔ: "img/inv-lava-helmet-out.png",
    ⵠⵠⵠⲆᐃΔⲆ: "img/inv-lava-helmet-in.png",
    ΔᐃⲆΔᐃΔⲆ: "img/inv-lava-helmet-click.png",
    ΔⲆΔⲆⲆⲆⲆ: "img/day-witch-hat.png",
    ᐃⲆⵠⵠᐃⵠᐃ: "img/night-witch-hat.png",
    ᐃᐃᐃΔⲆⵠΔ: "img/inv-witch-hat-out.png",
    ⲆΔⲆΔΔⲆⲆ: "img/inv-witch-hat-in.png",
    ᐃⲆΔΔⲆᐃᐃ: "img/inv-witch-hat-click.png",
    ᐃᐃⲆΔΔⵠⲆ: "img/day-nimbus2000.png",
    ⲆⵠᐃⵠΔΔΔ: "img/night-nimbus2000.png",
    ⵠⲆⲆᐃⵠⲆⵠ: "img/inv-nimbus2000-out.png",
    ΔᐃⵠⵠΔᐃⵠ: "img/inv-nimbus2000-in.png",
    ⵠᐃΔᐃⵠᐃᐃ: "img/inv-nimbus2000-click.png",
    ⵠⵠΔᐃΔⵠⵠ: "img/day-accessory1-pacques.png",
    ⵠΔΔⲆᐃⵠᐃ: "img/night-accessory1-pacques.png",
    ⲆΔⲆΔᐃᐃᐃ: "img/day-accessory2-pacques.png",
    ᐃᐃᐃᐃᐃΔᐃ: "img/night-accessory2-pacques.png",
    ᐃⲆΔΔⵠΔⵠ: "img/day-accessory3-pacques.png",
    ⵠᐃΔⲆΔⲆᐃ: "img/night-accessory3-pacques.png",
    ΔᐃⲆⲆⲆᐃᐃ: "img/day-accessory5-pacques.png",
    ᐃᐃΔΔΔⲆΔ: "img/night-accessory5-pacques.png",
    ⵠΔΔⲆⲆΔⲆ: "img/day-accessory6-pacques.png",
    ⵠⲆΔΔΔⵠΔ: "img/night-accessory6-pacques.png",
    ⲆᐃⵠᐃⲆΔᐃ: "img/day-accessory7-pacques.png",
    ⵠΔΔⲆᐃⵠⲆ: "img/night-accessory7-pacques.png",
    ΔⲆᐃⵠⵠᐃΔ: "img/day-accessory8-pacques.png",
    ⵠⲆⲆᐃᐃⲆΔ: "img/night-accessory8-pacques.png",
    ⲆⵠᐃΔⲆⲆΔ: "img/day-bag-pacques.png",
    ⲆᐃᐃᐃⲆΔⵠ: "img/night-bag-pacques.png",
    ⲆⲆⵠΔΔᐃᐃ: "img/day-carrot.png",
    ⵠΔᐃΔᐃⵠⵠ: "img/night-carrot.png",
    ⵠΔᐃⲆⲆⵠⲆ: "img/day-carrot-dried.png",
    ⲆⵠⵠΔΔⵠⵠ: "img/night-carrot-dried.png",
    ⲆΔΔⵠⲆᐃᐃ: "img/day-tomato-herb.png",
    ⵠΔᐃᐃᐃⲆⲆ: "img/night-tomato-herb.png",
    ⵠᐃΔᐃΔᐃⲆ: "img/day-tomato-herb-dried.png",
    ⵠᐃΔⲆⲆⲆᐃ: "img/night-tomato-herb-dried.png",
    ᐃᐃⵠⲆᐃΔΔ: "img/day-tomato.png",
    ⲆⵠⵠᐃⵠⲆⲆ: "img/night-tomato.png",
    ᐃᐃΔⵠⲆᐃᐃ: "img/inv-carrot-out.png",
    ΔⵠΔⵠⲆᐃᐃ: "img/inv-carrot-in.png",
    ΔΔⵠⲆΔΔⵠ: "img/inv-carrot-click.png",
    ᐃᐃⵠΔᐃⲆΔ: "img/inv-tomato-out.png",
    ΔᐃΔⵠⵠᐃⲆ: "img/inv-tomato-in.png",
    ᐃⲆⲆⲆᐃⲆΔ: "img/inv-tomato-click.png",
    ᐃⵠΔΔΔⲆΔ: "img/day-player0.png",
    ⲆΔᐃⵠⲆᐃⲆ: "img/night-player0.png",
    ⲆⲆⵠᐃⲆⲆᐃ: "img/day-player1.png",
    ⵠΔⵠⵠΔᐃⲆ: "img/night-player1.png",
    ᐃⵠⲆⲆⲆᐃⵠ: "img/day-player2.png",
    ΔΔⵠᐃⲆⲆΔ: "img/night-player22.png",
    ΔΔΔⲆⲆΔΔ: "img/day-player3.png",
    ΔⲆⵠᐃΔⲆⲆ: "img/night-player33.png",
    ΔΔΔⵠᐃᐃⵠ: "img/day-player4.png",
    ᐃᐃⲆΔⲆᐃᐃ: "img/night-player4.png",
    ΔΔⲆⵠⲆᐃΔ: "img/day-player5.png",
    ⵠⲆΔⲆⲆⵠⵠ: "img/night-player5.png",
    ΔⵠΔᐃⲆⲆᐃ: "img/day-player6.png",
    ⲆᐃᐃΔΔⲆⵠ: "img/night-player6.png",
    ᐃΔⲆⵠΔⲆᐃ: "img/day-player7.png",
    ΔᐃⲆΔᐃᐃⲆ: "img/night-player7.png",
    ᐃΔⲆⵠΔⲆΔ: "img/day-player8.png",
    ᐃᐃΔⵠᐃΔⵠ: "img/night-player8.png",
    ΔΔᐃⲆⲆⵠᐃ: "img/day-player9.png",
    ⲆᐃΔΔΔΔΔ: "img/night-player9.png",
    ⲆⲆᐃⲆᐃⲆΔ: "img/day-player10.png",
    ⲆⵠᐃⲆᐃᐃⵠ: "img/night-player10.png",
    ᐃΔΔΔΔⲆⲆ: "img/day-player11.png",
    ᐃᐃᐃⲆΔⵠⲆ: "img/night-player11.png",
    ⲆᐃΔΔⵠΔⵠ: "img/day-player12.png",
    ᐃⵠⵠΔΔⲆⵠ: "img/night-player12.png",
    ᐃΔⲆΔⵠⵠΔ: "img/day-player13.png",
    ⵠⵠⵠΔⵠΔᐃ: "img/night-player13.png",
    ⲆⵠⲆΔΔⲆΔ: "img/day-player14.png",
    ⵠᐃᐃⲆⵠΔᐃ: "img/night-player14.png",
    ⵠᐃΔᐃΔⵠΔ: "img/day-player15.png",
    ⵠᐃᐃᐃⲆᐃⵠ: "img/night-player15.png",
    ᐃⲆᐃⲆᐃᐃᐃ: "img/day-player16.png",
    ⲆⵠΔⵠⵠΔⵠ: "img/night-player16.png",
    ⲆΔⲆⲆΔᐃⲆ: "img/day-player17.png",
    ⵠΔΔⲆΔᐃᐃ: "img/night-player17.png",
    ⵠᐃΔΔΔⵠᐃ: "img/day-player18.png",
    ᐃΔΔΔⵠⲆΔ: "img/night-player18.png",
    ⲆⲆΔⲆΔⲆⵠ: "img/day-player19.png",
    ⲆΔΔⵠᐃⲆΔ: "img/night-player19.png",
    ⵠⵠⲆⵠΔⲆⵠ: "img/day-hand-player0.png",
    ΔΔⵠᐃⵠⵠⵠ: "img/night-hand-player0.png",
    ΔΔΔᐃⵠⵠⲆ: "img/day-hand-player1.png",
    ⵠΔⲆⵠⵠⲆⲆ: "img/night-hand-player1.png",
    ⵠΔⵠΔⵠΔΔ: "img/day-hand-player2.png",
    ΔⵠΔᐃⵠΔᐃ: "img/night-hand-player22.png",
    ⲆⲆⵠⵠⲆᐃⲆ: "img/day-hand-player3.png",
    ΔᐃⲆΔⲆⲆⵠ: "img/night-hand-player33.png",
    ᐃᐃᐃΔᐃⲆⲆ: "img/day-hand-player4.png",
    ⲆΔᐃⲆᐃΔΔ: "img/night-hand-player4.png",
    ⵠᐃⵠⵠᐃⵠⵠ: "img/day-hand-player5.png",
    ΔᐃⵠΔⵠⲆⵠ: "img/night-hand-player5.png",
    ᐃΔᐃⵠⲆⲆᐃ: "img/day-hand-player6.png",
    ⲆΔⵠΔᐃⲆⵠ: "img/night-hand-player6.png",
    ⵠⵠΔⲆⲆΔᐃ: "img/day-hand-player7.png",
    ΔΔΔΔⲆΔᐃ: "img/night-hand-player7.png",
    ⵠⵠⵠⲆᐃΔⵠ: "img/day-hand-player8.png",
    ⲆⵠⲆⲆΔⲆⲆ: "img/night-hand-player8.png",
    ⲆⲆᐃᐃᐃⵠΔ: "img/day-hand-player9.png",
    ΔⵠⵠⲆᐃᐃΔ: "img/night-hand-player9.png",
    ⲆⵠⲆᐃⲆⵠΔ: "img/day-hand-player10.png",
    ⵠΔΔⵠᐃᐃᐃ: "img/night-hand-player10.png",
    ⲆⲆⲆΔᐃⲆᐃ: "img/day-hand-player11.png",
    ᐃᐃᐃΔΔᐃⲆ: "img/night-hand-player11.png",
    ⵠᐃΔᐃΔⲆᐃ: "img/day-hand-player12.png",
    ᐃⵠΔΔᐃⵠⲆ: "img/night-hand-player12.png",
    ⵠⵠⵠⲆΔⲆΔ: "img/day-hand-player13.png",
    ⲆᐃⲆΔⲆⲆⲆ: "img/night-hand-player13.png",
    ⵠⵠⵠᐃⵠΔⲆ: "img/day-hand-player14.png",
    ΔⵠⵠΔⲆΔⵠ: "img/night-hand-player14.png",
    ᐃΔΔⵠⵠⲆᐃ: "img/day-hand-player15.png",
    ⵠᐃᐃⲆᐃΔⲆ: "img/night-hand-player15.png",
    ⲆΔⵠⲆⵠΔⵠ: "img/day-hand-player16.png",
    ⲆΔⵠᐃΔⲆⲆ: "img/night-hand-player16.png",
    ⲆΔⲆⵠⵠΔⵠ: "img/day-hand-player17.png",
    ⵠⵠⲆⲆⵠⵠⵠ: "img/night-hand-player17.png",
    ⵠΔⵠⲆⲆⵠⲆ: "img/day-hand-player18.png",
    ᐃⲆΔⲆⵠⲆᐃ: "img/night-hand-player18.png",
    ⵠΔⲆΔᐃᐃᐃ: "img/day-hand-player19.png",
    ᐃⲆΔΔⲆΔΔ: "img/night-hand-player19.png",
    ⲆᐃΔⲆⲆΔᐃ: "img/day-accessory4.png",
    ΔᐃⲆΔⲆⲆᐃ: "img/night-accessory4.png",
    ⵠΔΔᐃᐃⲆⲆ: "img/day-accessory9.png",
    ᐃΔⵠⲆⵠΔᐃ: "img/night-accessory9.png",
    ᐃΔⵠᐃΔΔᐃ: "img/day-accessory10.png",
    ᐃⵠⲆⵠΔⵠᐃ: "img/night-accessory10.png",
    ⲆⵠᐃᐃⵠⵠΔ: "img/day-accessory11.png",
    ⵠⲆᐃΔⵠΔⲆ: "img/night-accessory11.png",
    ⵠᐃⲆΔᐃⵠⲆ: "img/day-accessory12.png",
    ⵠⵠᐃⲆⵠⲆⵠ: "img/night-accessory12.png",
    ΔΔΔⵠⵠⵠⵠ: "img/day-bag.png",
    ΔΔΔΔΔⲆⲆ: "img/night-bag.png",
    ΔΔᐃⵠΔΔᐃ: "img/inv-bag-out.png",
    ⲆⲆⵠⵠᐃⵠᐃ: "img/inv-bag-in.png",
    ⵠⲆᐃᐃΔⲆⲆ: "img/inv-bag-click.png",
    ⵠΔΔΔⵠᐃⲆ: "img/day-pitchfork.png",
    ᐃⵠⲆᐃⵠᐃⲆ: "img/night-pitchfork.png",
    ⵠⵠⲆⵠⲆⲆⲆ: "img/inv-pitchfork-out.png",
    ΔⲆΔᐃⵠⲆⵠ: "img/inv-pitchfork-in.png",
    ⲆᐃᐃⲆᐃⲆⲆ: "img/inv-pitchfork-click.png",
    ᐃⲆⵠⵠⲆⵠⵠ: "img/inv-wood-spike-door-out.png",
    ⵠΔᐃᐃΔⵠᐃ: "img/inv-wood-spike-door-in.png",
    ⲆⲆᐃΔΔΔⲆ: "img/inv-wood-spike-door-click.png",
    ⵠⵠⵠΔⵠᐃᐃ: "img/inv-stone-spike-door-out.png",
    ᐃΔⵠⲆᐃΔᐃ: "img/inv-stone-spike-door-in.png",
    Δⵠⵠᐃᐃⵠᐃ: "img/inv-stone-spike-door-click.png",
    ΔⵠΔⲆⵠᐃᐃ: "img/inv-gold-spike-door-out.png",
    ⵠΔᐃᐃΔΔⵠ: "img/inv-gold-spike-door-in.png",
    ᐃⲆᐃᐃᐃΔⲆ: "img/inv-gold-spike-door-click.png",
    ⲆᐃⵠⲆⲆᐃᐃ: "img/inv-diamond-spike-door-out.png",
    ΔᐃⲆⲆᐃᐃᐃ: "img/inv-diamond-spike-door-in.png",
    ΔΔⵠⲆᐃⵠᐃ: "img/inv-diamond-spike-door-click.png",
    ᐃᐃΔⲆⲆⲆⲆ: "img/inv-amethyst-spike-door-out.png",
    ΔⵠᐃⲆⵠⵠⵠ: "img/inv-amethyst-spike-door-in.png",
    ΔᐃΔⵠΔⲆΔ: "img/inv-amethyst-spike-door-click.png",
    ⲆⵠⵠⲆᐃⲆᐃ: "img/day-wood-spike-door.png",
    ᐃᐃᐃⲆⵠΔⵠ: "img/night-wood-spike-door.png",
    ΔⵠⵠⵠⵠᐃⲆ: "img/day-stone-spike-door.png",
    ΔᐃᐃᐃⵠΔᐃ: "img/night-stone-spike-door.png",
    ⵠⵠⵠᐃΔᐃⲆ: "img/day-gold-spike-door.png",
    ᐃᐃΔⲆⲆⵠᐃ: "img/night-gold-spike-door.png",
    ΔΔΔΔᐃⵠⵠ: "img/day-diamond-spike-door.png",
    ᐃᐃᐃᐃᐃⵠᐃ: "img/night-diamond-spike-door.png",
    ⵠΔᐃⵠⲆΔᐃ: "img/day-amethyst-spike-door.png",
    ⵠᐃⵠᐃᐃᐃᐃ: "img/night-amethyst-spike-door.png",
    ⲆᐃⵠⵠᐃΔⵠ: "img/inv-reidite-spike-door-out.png",
    ⲆᐃⵠᐃᐃΔΔ: "img/inv-reidite-spike-door-in.png",
    ⵠΔᐃΔΔⵠⵠ: "img/inv-reidite-spike-door-click.png",
    ΔΔΔΔᐃΔⲆ: "img/inv-reidite-door-out.png",
    ⲆⵠᐃᐃⲆⵠΔ: "img/inv-reidite-door-in.png",
    ⲆⲆᐃΔᐃⵠᐃ: "img/inv-reidite-door-click.png",
    ᐃΔΔΔⲆⲆⲆ: "img/inv-reidite-spike-out.png",
    ⲆⵠᐃⲆⲆⵠᐃ: "img/inv-reidite-spike-in.png",
    ⵠΔⵠΔΔΔⵠ: "img/inv-reidite-spike-click.png",
    ΔⵠⵠⲆΔᐃⲆ: "img/inv-reidite-wall-out.png",
    ΔᐃᐃⵠⲆⲆⲆ: "img/inv-reidite-wall-in.png",
    ᐃΔΔⵠᐃΔⵠ: "img/inv-reidite-wall-click.png",
    ΔⵠⵠⵠⵠⲆΔ: "img/day-reidite-wall.png",
    ⵠⵠⵠΔᐃᐃᐃ: "img/night-reidite-wall.png",
    ⲆⵠᐃⵠⲆΔⲆ: "img/day-reidite-door.png",
    ⵠⵠᐃⵠΔΔⵠ: "img/night-reidite-door.png",
    ᐃⵠⲆΔⵠΔΔ: "img/day-reidite-spike.png",
    ⵠᐃⵠⲆΔⵠᐃ: "img/night-reidite-spike.png",
    ᐃⲆΔⵠⵠΔΔ: "img/day-reidite-spike-door.png",
    Δⵠⵠᐃⵠⵠⵠ: "img/night-reidite-spike-door.png",
    ᐃⲆΔⲆⲆΔⲆ: "img/inv-reidite-pickaxe-out.png",
    ⲆΔⵠⵠΔⵠᐃ: "img/inv-reidite-pickaxe-in.png",
    ΔᐃⵠⵠⲆᐃΔ: "img/inv-reidite-pickaxe-click.png",
    ⲆᐃⵠΔᐃⲆΔ: "img/day-reidite-pickaxe.png",
    ᐃⲆⲆⵠⵠⵠᐃ: "img/night-reidite-pickaxe.png",
    ⵠⵠⵠΔΔⲆᐃ: "img/inv-reidite-hammer-out.png",
    ᐃⲆᐃᐃⵠⵠⵠ: "img/inv-reidite-hammer-in.png",
    ⵠΔᐃⲆΔᐃΔ: "img/inv-reidite-hammer-click.png",
    ΔⵠⵠⵠΔⲆΔ: "img/day-reidite-hammer.png",
    ΔⵠΔΔᐃⲆⵠ: "img/night-reidite-hammer.png",
    ⵠᐃⵠΔⲆᐃⵠ: "img/day-watermelon1.png",
    ᐃⵠⲆⵠᐃⵠⲆ: "img/night-watermelon1.png",
    ΔΔⵠΔⲆΔⲆ: "img/day-watermelon-dried1.png",
    ΔΔΔΔᐃᐃΔ: "img/night-watermelon-dried1.png",
    ⲆᐃΔΔⲆⵠΔ: "img/inv-watermelon-out.png",
    ᐃΔᐃᐃᐃⵠΔ: "img/inv-watermelon-in.png",
    ΔΔⲆᐃⵠΔΔ: "img/inv-watermelon-click.png",
    ΔⵠⵠΔᐃⵠⲆ: "img/day-boat.png",
    ⲆⲆᐃⵠΔⵠΔ: "img/night-boat.png",
    ⵠⵠⵠⲆⲆᐃΔ: "img/day-boat-wave.png",
    ΔⲆᐃⲆⲆⲆᐃ: "img/night-boat-wave.png",
    ΔΔΔⲆᐃΔΔ: "img/inv-boat-out.png",
    ᐃᐃⵠᐃᐃᐃᐃ: "img/inv-boat-in.png",
    ⲆⲆΔⵠΔᐃⵠ: "img/inv-boat-click.png",
    ⵠⲆΔΔⵠⵠⵠ: "img/day-plane.png",
    ⲆⲆⵠⵠⲆᐃⵠ: "img/night-plane.png",
    ᐃΔⲆⵠΔᐃⲆ: "img/inv-plane-out.png",
    ⲆⵠⲆⲆΔⵠᐃ: "img/inv-plane-in.png",
    ᐃᐃⲆⲆⵠⵠΔ: "img/inv-plane-click.png",
    ⲆⵠⵠⲆΔᐃⵠ: "img/day-sled.png",
    ⵠⵠⵠⲆΔⲆⵠ: "img/night-sled.png",
    ⵠᐃᐃⵠⲆⵠΔ: "img/day-sled-wave.png",
    ΔᐃⲆΔⵠⲆⵠ: "img/night-sled-wave.png",
    ⲆΔⵠΔᐃⵠⵠ: "img/inv-sled-out.png",
    ⵠᐃᐃⵠᐃⲆⵠ: "img/inv-sled-in.png",
    ⲆⲆⵠⲆⲆᐃᐃ: "img/inv-sled-click.png",
    ᐃᐃⵠᐃⲆⵠⵠ: "img/day-pirate-hat.png",
    ΔⲆⵠⲆΔⵠᐃ: "img/night-pirate-hat.png",
    ΔΔⲆΔΔΔΔ: "img/inv-pirate-hat-out.png",
    ᐃᐃᐃΔⵠⲆΔ: "img/inv-pirate-hat-in.png",
    ΔⲆᐃⲆⲆⵠⲆ: "img/inv-pirate-hat-click.png",
    ᐃΔⵠᐃⵠⲆⵠ: "img/day-penguin.png",
    ΔⵠⲆⵠⲆᐃᐃ: "img/night-penguin.png",
    Δᐃⵠⵠᐃᐃᐃ: "img/hurt-penguin.png",
    ΔⵠⵠΔᐃ: "img/inv-penguin-feather-click.png",
    ΔⲆⵠⵠΔ: "img/inv-hawk-feather-click.png",
    ᐃⵠᐃΔᐃⲆΔ: "img/day-boar1.png",
    ⲆⲆΔⵠⲆΔⲆ: "img/day-boar1-tamed.png",
    ⲆⵠⵠᐃⵠⲆΔ: "img/day-boar1-angry.png",
    ⲆⲆΔⲆⵠⵠⵠ: "img/night-boar1.png",
    ⲆΔᐃⲆⲆⲆⵠ: "img/night-boar1-tamed.png",
    ΔᐃᐃΔⵠⵠⵠ: "img/night-boar1-angry.png",
    ⵠΔᐃᐃΔᐃᐃ: "img/inv-mount-boar-out.png",
    ⵠᐃⲆⲆⵠᐃⵠ: "img/inv-mount-boar-in.png",
    ⲆᐃⲆᐃⵠΔⵠ: "img/inv-mount-boar-click.png",
    ⵠᐃΔⵠᐃⵠⲆ: "img/day-hurt-boar1.png",
    ⵠΔΔⵠᐃΔⵠ: "img/boar1-step.png",
    ⲆⲆΔⵠⵠⵠⵠ: "img/day-saddle1.png",
    ΔᐃΔⵠᐃⵠⵠ: "img/night-saddle1.png",
    ΔᐃⲆⲆᐃΔⲆ: "img/inv-saddle-out.png",
    ⵠΔⵠⲆⵠᐃⲆ: "img/inv-saddle-in.png",
    ΔⲆⲆΔΔᐃᐃ: "img/inv-saddle-click.png",
    ⲆⵠⵠⵠᐃⲆΔ: "img/day-magic-wand0.png",
    ΔᐃⲆⲆΔⲆΔ: "img/night-magic-wand0.png",
    ΔⲆⵠⵠΔᐃΔ: "img/day-light-wand1.png",
    ⲆᐃΔⲆᐃᐃⵠ: "img/night-light-wand1.png",
    ΔⲆᐃᐃΔⲆΔ: "img/inv-magic-wand0-out.png",
    ΔⲆⲆΔᐃⵠΔ: "img/inv-magic-wand0-in.png",
    ⵠᐃᐃᐃΔⲆΔ: "img/inv-magic-wand0-click.png",
    ᐃᐃⲆⵠΔⵠΔ: "img/day-magic-wand1.png",
    ⲆⲆᐃΔⵠⵠΔ: "img/night-magic-wand1.png",
    ⵠᐃΔΔᐃⵠⵠ: "img/day-light-wand0.png",
    ᐃΔΔΔⵠⵠⲆ: "img/night-light-wand0.png",
    ΔᐃⲆΔᐃⵠⵠ: "img/inv-magic-wand1-out.png",
    ΔᐃᐃΔⲆΔᐃ: "img/inv-magic-wand1-in.png",
    ⲆⵠⲆΔΔΔΔ: "img/inv-magic-wand1-click.png",
    ᐃⵠᐃΔᐃᐃⲆ: "img/day-firefly.png",
    ᐃᐃΔᐃⲆⵠⲆ: "img/night-firefly.png",
    ⵠⵠⲆΔⲆᐃΔ: "img/hurt-firefly.png",
    ⲆΔᐃⵠΔᐃΔ: "img/inv-firefly-out.png",
    ᐃᐃΔⲆᐃⵠⲆ: "img/inv-firefly-in.png",
    ⲆᐃΔⵠⲆⲆᐃ: "img/inv-firefly-click.png",
    ⲆⲆᐃⵠᐃⵠⵠ: "img/day-baby-dragon.png",
    ᐃⲆΔΔᐃⲆⲆ: "img/night-baby-dragon.png",
    ⲆᐃⵠⲆΔⵠᐃ: "img/day-baby-dragon-angry.png",
    ΔΔΔΔⲆⵠᐃ: "img/night-baby-dragon-angry.png",
    ΔⲆΔⵠᐃΔⲆ: "img/day-baby-dragon-tamed.png",
    ΔⵠΔΔⵠⲆⵠ: "img/night-baby-dragon-tamed.png",
    ᐃⵠⵠⵠⵠⲆΔ: "img/day-wing-dragon-left-angry.png",
    ΔⵠΔᐃⵠⲆᐃ: "img/night-dragon-wing-left-angry.png",
    ΔᐃⵠⵠⲆⲆⵠ: "img/day-wing-dragon-right-angry.png",
    ⵠⲆᐃᐃⵠᐃᐃ: "img/night-dragon-wing-right-angry.png",
    ΔⵠΔᐃΔⵠⲆ: "img/day-wing-dragon-left-tamed.png",
    ⵠⵠΔⵠΔᐃⲆ: "img/night-dragon-wing-left-tamed.png",
    ⵠᐃΔᐃⲆᐃᐃ: "img/day-wing-dragon-right-tamed.png",
    ΔᐃⲆⵠⲆᐃᐃ: "img/night-wing-dragon-right-tamed.png",
    ⲆⲆΔΔᐃⵠΔ: "img/day-wing-dragon-left.png",
    ᐃΔⵠⲆΔΔᐃ: "img/night-dragon-wing-left.png",
    ⵠᐃⵠⲆⲆⵠᐃ: "img/day-wing-dragon-right.png",
    ⵠᐃΔⲆⲆⲆΔ: "img/night-wing-dragon-right.png",
    ᐃⵠⲆⵠⲆⵠᐃ: "img/hurt-baby-dragon.png",
    ΔΔᐃᐃΔΔⲆ: "img/hurt-baby-dragon-wing-left.png",
    ᐃⵠΔᐃⲆᐃΔ: "img/hurt-baby-dragon-wing-right.png",
    ᐃΔⵠΔⲆᐃⲆ: "img/inv-baby-dragon-out.png",
    ⵠⲆⵠⵠᐃΔⵠ: "img/inv-baby-dragon-in.png",
    ⵠⲆΔⲆⵠⲆⲆ: "img/inv-baby-dragon-click.png",
    ΔⵠΔⲆΔᐃᐃ: "img/day-baby-lava.png",
    ᐃⵠⵠᐃⲆᐃᐃ: "img/night-baby-lava.png",
    ᐃⵠⵠΔⲆᐃⵠ: "img/day-baby-lava-angry.png",
    ⵠΔΔⵠΔⵠⵠ: "img/night-baby-lava-angry.png",
    ⲆΔΔᐃᐃⵠⵠ: "img/day-baby-lava-tamed.png",
    ⵠⲆⲆᐃⲆΔᐃ: "img/night-baby-lava-tamed.png",
    ⵠΔⵠⵠΔΔᐃ: "img/day-wing-lava-left-angry.png",
    ⲆΔΔⲆⲆⵠΔ: "img/night-wing-lava-left-angry.png",
    ⵠⲆΔⲆᐃᐃΔ: "img/day-wing-lava-right-angry.png",
    ⵠⲆⵠΔΔⵠᐃ: "img/night-wing-lava-right-angry.png",
    ΔΔⲆΔⲆⵠⲆ: "img/day-wing-lava-left-tamed.png",
    ⵠⲆᐃΔᐃⵠΔ: "img/night-wing-lava-left-tamed.png",
    ΔΔⵠΔᐃⲆⲆ: "img/day-wing-lava-right-tamed.png",
    ᐃⲆⵠᐃᐃⲆᐃ: "img/night-wing-lava-right-tamed.png",
    ⵠⵠΔᐃⵠⵠᐃ: "img/day-wing-lava-left.png",
    ΔⵠΔⲆΔᐃΔ: "img/night-wing-lava-left.png",
    ⵠΔΔⵠⲆⵠⲆ: "img/day-wing-lava-right.png",
    ⲆᐃⲆⲆⲆⲆⵠ: "img/night-wing-lava-right.png",
    ΔⵠⲆⲆΔΔΔ: "img/hurt-baby-lava.png",
    ⲆⵠⵠᐃⲆⵠⵠ: "img/hurt-baby-lava-wing-left.png",
    ⵠⲆⵠΔⲆΔⲆ: "img/hurt-baby-lava-wing-right.png",
    ⲆᐃⲆⲆΔⵠᐃ: "img/inv-baby-lava-out.png",
    ΔⵠΔⵠⲆⵠᐃ: "img/inv-baby-lava-in.png",
    ΔᐃⵠΔΔᐃᐃ: "img/inv-baby-lava-click.png",
    ᐃⵠᐃᐃΔᐃⲆ: "img/day-falcon.png",
    ⵠⲆᐃⲆᐃΔΔ: "img/night-falcon.png",
    ⲆᐃΔΔⵠⵠⲆ: "img/day-falcon-angry.png",
    ⵠΔᐃᐃⵠᐃᐃ: "img/night-falcon-angry.png",
    ⵠⲆⵠᐃⵠⵠⵠ: "img/day-falcon-ground.png",
    ᐃᐃΔΔΔᐃΔ: "img/night-falcon-ground.png",
    Δᐃᐃᐃⵠⵠᐃ: "img/day-falcon-ground-angry.png",
    ΔⲆᐃᐃΔⵠᐃ: "img/night-falcon-ground-angry.png",
    ΔᐃⲆⲆⲆΔᐃ: "img/day-falcon-wings-left.png",
    ΔⲆⵠΔᐃᐃΔ: "img/night-falcon-wings-left.png",
    ΔᐃΔᐃⵠΔⲆ: "img/day-falcon-wings-right.png",
    ⲆⲆΔⲆᐃⲆⵠ: "img/night-falcon-wings-right.png",
    ᐃᐃΔᐃΔᐃⵠ: "img/day-falcon-angry-wings-left.png",
    ⲆⲆⵠΔΔⵠΔ: "img/night-falcon-angry-wings-left.png",
    ⲆΔⵠⵠΔᐃΔ: "img/day-falcon-angry-wings-right.png",
    ⲆᐃⲆⵠᐃΔⲆ: "img/night-falcon-angry-wings-right.png",
    ᐃᐃⵠᐃΔᐃᐃ: "img/day-falcon-wings-left-tamed.png",
    ⲆⵠⲆΔᐃⲆⲆ: "img/night-falcon-wings-left-tamed.png",
    ᐃⲆΔΔⵠⲆᐃ: "img/day-falcon-wings-right-tamed.png",
    ⲆᐃⵠΔⵠⵠᐃ: "img/night-falcon-wings-right-tamed.png",
    ⵠΔΔⲆΔⵠⲆ: "img/day-falcon-tamed.png",
    ⵠⲆⲆⲆᐃⵠⲆ: "img/night-falcon-tamed.png",
    ΔⲆΔᐃΔᐃⲆ: "img/hurt-falcon-ground.png",
    ⵠΔⵠⵠⵠᐃⵠ: "img/hurt-falcon.png",
    ⲆⲆⲆᐃⲆⲆⵠ: "img/hurt-falcon-wings-left.png",
    ΔⵠⵠⲆᐃⵠᐃ: "img/hurt-falcon-wings-right.png",
    ΔᐃΔᐃᐃΔⲆ: "img/inv-falcon-out.png",
    ᐃⲆΔⲆⵠΔΔ: "img/inv-falcon-in.png",
    ⵠⲆΔᐃΔᐃᐃ: "img/inv-falcon-click.png",
    ᐃᐃⲆⲆᐃΔⲆ: "img/day-crab-boss.png",
    ⲆⵠⵠᐃᐃⲆᐃ: "img/night-crab-boss.png",
    ᐃⲆᐃΔΔⵠⲆ: "img/day-crab-boss-angry.png",
    ⲆⲆⵠΔΔⲆΔ: "img/night-crab-boss-angry.png",
    ⵠⵠΔΔΔᐃⵠ: "img/day-crab-boss-tamed.png",
    ⲆⵠΔΔΔΔΔ: "img/night-crab-boss-tamed.png",
    ⵠⲆⲆΔᐃⵠᐃ: "img/day-crab-boss-claw-left-attack.png",
    ⵠΔⵠⵠΔΔⲆ: "img/night-crab-boss-claw-left-attack.png",
    ⲆⵠᐃᐃᐃⵠΔ: "img/day-crab-boss-claw-right-attack.png",
    ⵠᐃⵠᐃⲆΔΔ: "img/night-crab-boss-claw-right-attack.png",
    ΔⲆⵠᐃΔⲆᐃΔᐃ: "img/day-crab-boss-claw-left-tamed.png",
    ΔᐃⵠⲆⵠⵠⲆΔⵠ: "img/night-crab-boss-claw-left-tamed.png",
    ΔⲆΔᐃΔⵠᐃΔᐃ: "img/day-crab-boss-claw-right-tamed.png",
    ⲆⲆⵠᐃⲆΔⲆⵠⲆ: "img/night-crab-boss-claw-right-tamed.png",
    ᐃⵠⵠᐃΔⵠᐃ: "img/day-crab-boss-claw-left.png",
    ⲆᐃΔᐃᐃᐃⵠ: "img/night-crab-boss-claw-left.png",
    ⵠⵠⵠΔΔⵠⲆ: "img/day-crab-boss-claw-right.png",
    ΔⵠⵠΔⵠᐃΔ: "img/night-crab-boss-claw-right.png",
    ΔⲆΔΔΔᐃΔ: "img/hurt-crab-boss.png",
    ⵠΔᐃⵠΔᐃΔ: "img/hurt-crab-boss-claw-left.png",
    ΔᐃⲆΔΔⵠᐃ: "img/hurt-crab-boss-claw-right.png",
    ΔⵠⵠⵠⲆⲆⲆ: "img/heal-crab-boss.png",
    ⵠⲆⵠⲆᐃⲆᐃ: "img/heal-crab-boss-claw-left.png",
    ΔⵠⵠᐃᐃᐃΔ: "img/heal-crab-boss-claw-right.png",
    ᐃΔⲆΔᐃᐃⵠ: "img/crab-step.png",
    ⲆⲆᐃᐃᐃᐃΔ: "img/inv-crab-boss-out.png",
    ᐃᐃⲆⵠⲆⲆΔ: "img/inv-crab-boss-in.png",
    ᐃⲆⲆⲆⲆⲆΔ: "img/inv-crab-boss-click.png",
    ⲆᐃⲆΔⵠΔⲆ: "img/day-cactus10.png",
    ⵠᐃⲆᐃⲆⲆⲆ: "img/night-cactus10.png",
    ⲆΔΔᐃᐃᐃⵠ: "img/inv-cactus-out.png",
    ᐃᐃⵠᐃᐃⵠᐃ: "img/inv-cactus-in.png",
    ⲆΔⵠⵠⵠΔᐃ: "img/inv-cactus-click.png",
    ΔⲆᐃᐃⲆⲆⲆ: "img/day-scorpion.png",
    ⲆΔΔᐃⲆᐃΔ: "img/night-scorpion.png",
    ⵠᐃΔⲆⵠΔⲆ: "img/day-scorpion-hand-left.png",
    ᐃⵠᐃⲆᐃⵠᐃ: "img/night-scorpion-hand-left.png",
    ᐃΔⵠᐃᐃⲆᐃ: "img/day-scorpion-hand-right.png",
    ⲆⲆⲆⵠⲆⵠⲆ: "img/night-scorpion-hand-right.png",
    ⲆΔⵠⲆⵠⵠⲆ: "img/hurt-scorpion.png",
    ᐃⵠᐃⵠⵠⲆᐃ: "img/hurt-scorpion-hand-left.png",
    Δⵠⵠⵠⵠᐃᐃ: "img/hurt-scorpion-hand-right.png",
    ᐃⵠⲆΔΔⵠΔ: "img/day-vulture.png",
    ΔⵠⵠⵠⲆΔΔ: "img/night-vulture.png",
    ΔⵠΔᐃⵠᐃΔ: "img/day-vulture-angry.png",
    ᐃⲆⲆⵠᐃⵠⵠ: "img/night-vulture-angry.png",
    ⲆᐃΔⲆⲆⵠⲆ: "img/day-vulture-ground.png",
    ⲆᐃᐃⲆᐃΔⵠ: "img/night-vulture-ground.png",
    ⵠΔⵠᐃΔⵠΔ: "img/day-vulture-ground-angry.png",
    ⵠᐃΔᐃⵠᐃΔ: "img/night-vulture-ground-angry.png",
    ⲆⲆΔᐃⲆᐃⲆ: "img/day-vulture-wings-left.png",
    ⲆⲆᐃΔⵠᐃᐃ: "img/night-vulture-wings-left.png",
    ⲆΔᐃΔⵠⵠᐃ: "img/day-vulture-wings-right.png",
    ᐃⵠⲆΔᐃΔΔ: "img/night-vulture-wings-right.png",
    ΔⲆᐃᐃⲆΔᐃ: "img/day-vulture-angry-wings-left.png",
    ΔΔⵠⲆᐃΔⵠ: "img/night-vulture-angry-wings-left.png",
    ΔⵠΔⵠⲆΔᐃ: "img/day-vulture-angry-wings-right.png",
    ⲆΔⵠΔⲆⵠⵠ: "img/night-vulture-angry-wings-right.png",
    ΔⲆΔΔΔΔᐃ: "img/day-vulture-wings-left-tamed.png",
    ⲆⲆΔⲆⲆⲆΔ: "img/night-vulture-wings-left-tamed.png",
    ᐃⵠⲆᐃⲆⲆΔ: "img/day-vulture-wings-right-tamed.png",
    ⵠᐃΔⵠⲆᐃⵠ: "img/night-vulture-wings-right-tamed.png",
    ᐃⵠⵠⲆⲆⵠⲆ: "img/day-vulture-tamed.png",
    ΔΔᐃⵠⲆⵠⵠ: "img/night-vulture-tamed.png",
    ⲆⲆΔᐃᐃΔΔ: "img/hurt-vulture-ground.png",
    ⲆᐃΔΔΔⲆⲆ: "img/hurt-vulture.png",
    ᐃⲆⵠΔⵠⲆᐃ: "img/hurt-vulture-wings-left.png",
    ⵠⵠⲆⵠⲆΔΔ: "img/hurt-vulture-wings-right.png",
    ΔⲆⵠᐃⲆⵠⲆ: "img/day-aloe-vera.png",
    ⲆΔΔⵠΔᐃⵠ: "img/night-aloe-vera.png",
    ᐃⵠΔΔΔΔᐃ: "img/inv-aloe-vera-out.png",
    ΔΔⵠᐃΔⵠⲆ: "img/inv-aloe-vera-in.png",
    ⵠΔⵠⵠⲆΔΔ: "img/inv-aloe-vera-click.png",
    ᐃᐃⵠⵠⵠⲆΔ: "img/day-aloe-vera-grown.png",
    ⵠΔⵠᐃΔⲆⲆ: "img/night-aloe-vera-grown.png",
    ᐃΔⲆΔᐃⲆΔ: "img/day-aloe-vera-dried.png",
    ᐃⲆⲆⵠᐃⲆΔ: "img/night-aloe-vera-dried.png",
    ⲆΔᐃⲆΔᐃΔ: "img/day-turban1.png",
    ⲆΔΔᐃⲆⲆᐃ: "img/night-turban1.png",
    ΔⵠⵠᐃⲆΔᐃ: "img/day-turban2.png",
    ⲆΔᐃⵠΔⵠΔ: "img/night-turban2.png",
    ᐃⲆᐃΔΔⵠΔ: "img/inv-turban2-out.png",
    ⲆⵠⵠⲆΔⵠᐃ: "img/inv-turban2-in.png",
    ⲆΔᐃⲆΔⲆⵠ: "img/inv-turban2-click.png",
    ᐃᐃΔᐃⲆΔΔ: "img/inv-turban1-out.png",
    ⵠᐃᐃⵠⲆᐃΔ: "img/inv-turban1-in.png",
    ⵠΔⲆᐃΔⲆⲆ: "img/inv-turban1-click.png",
    ⲆⲆΔⲆΔⲆᐃ: "img/day-pitchfork2.png",
    ᐃΔΔᐃⲆᐃⵠ: "img/night-pitchfork2.png",
    ⲆⲆΔᐃΔⲆΔ: "img/inv-pitchfork2-out.png",
    ΔⲆΔⲆⵠⲆΔ: "img/inv-pitchfork2-in.png",
    Ⲇᐃⵠᐃⵠᐃᐃ: "img/inv-pitchfork2-click.png",
    ⵠⲆⵠΔᐃᐃⵠ: "img/inv-gold-fork-click.png",
    ΔⵠⲆⵠΔⵠⲆ: "img/inv-pilot-glasses-click.png",
    ΔΔⲆᐃⲆⵠΔ: "img/day-pilot-helmet.png",
    ΔⵠⲆΔᐃᐃⵠ: "img/night-pilot-helmet.png",
    ⵠⲆΔᐃΔⵠⵠ: "img/inv-pilot-helmet-out.png",
    ⲆⲆΔᐃⵠⲆΔ: "img/inv-pilot-helmet-in.png",
    ⲆΔⲆⲆᐃⵠⵠ: "img/inv-pilot-helmet-click.png",
    ᐃⵠΔΔΔᐃΔΔΔ: "img/day-sandworm0.png",
    ᐃᐃᐃΔΔΔᐃ: "img/day-sandworm1.png",
    ᐃⲆⵠᐃⲆⵠᐃ: "img/day-sandworm2.png",
    ᐃⲆᐃΔΔΔⵠΔΔ: "img/night-sandworm0.png",
    ᐃΔⵠⵠⵠᐃⲆ: "img/night-sandworm1.png",
    ⵠΔΔⲆⵠⲆᐃ: "img/night-sandworm2.png",
    ᐃΔΔΔⵠⲆⵠ: "img/hurt-sandworm0.png",
    ⲆⵠⵠᐃΔⵠⲆ: "img/hurt-sandworm1.png",
    ⵠⲆᐃⲆΔᐃⲆ: "img/hurt-sandworm2.png",
    ⵠⵠⲆᐃⵠ: "img/inv-vulture-feather-click.png",
    ΔⲆⵠᐃⵠⲆΔ: "img/day-emerald0.png",
    ⵠⵠΔᐃᐃᐃΔ: "img/night-emerald0.png",
    ⲆΔΔΔᐃⵠⵠ: "img/day-emerald1.png",
    ⵠΔⲆⵠΔᐃᐃ: "img/night-emerald1.png",
    ⵠᐃⵠⲆⵠⲆⲆ: "img/day-emerald2.png",
    ⵠⲆΔⲆΔⵠⲆ: "img/night-emerald2.png",
    ⵠᐃΔᐃⵠ: "img/inv-emerald-click.png",
    ⲆⵠᐃⲆΔᐃᐃ: "img/inv-sworm-juice-out.png",
    ᐃⵠΔⲆᐃᐃⵠ: "img/inv-sworm-juice-in.png",
    ⵠᐃⵠΔⲆΔᐃ: "img/inv-sworm-juice-click.png",
    ᐃⵠΔΔⵠⵠⵠ: "img/day-point-machine.png",
    ⵠⵠⵠⲆⵠⵠⵠ: "img/night-point-machine.png",
    ⵠⲆΔᐃⵠᐃⵠ: "img/day-point-machine-hole.png",
    ⲆⵠⵠᐃΔΔⵠ: "img/night-point-machine-hole.png",
    ᐃΔⲆⲆⵠᐃⲆ: "img/day-point-machine-ground.png",
    ᐃᐃᐃⵠⲆⵠⵠ: "img/night-point-machine-ground.png",
    ΔⵠΔⵠᐃΔⲆ: "img/day-point-machine-rotate.png",
    ⵠⲆⲆᐃΔⵠⲆ: "img/night-point-machine-rotate.png",
    ΔᐃᐃⵠⲆᐃᐃ: "img/inv-point-machine-out.png",
    ⲆⲆᐃᐃΔⲆᐃ: "img/inv-point-machine-in.png",
    ΔⲆⲆⵠΔᐃⵠ: "img/inv-point-machine-click.png",
    ΔⵠΔⲆⲆⲆⲆ: "img/day-extractor-machine0-stone.png",
    ⲆⲆΔΔΔⵠⲆ: "img/night-extractor-machine0-stone.png",
    ΔᐃⵠΔⵠΔΔ: "img/day-extractor-machine-stone.png",
    ΔᐃᐃᐃⲆⲆⵠ: "img/night-extractor-machine-stone.png",
    ΔΔΔΔⵠⲆⲆ: "img/inv-extractor-machine-stone-out.png",
    ⲆⵠᐃΔᐃᐃᐃ: "img/inv-extractor-machine-stone-in.png",
    ⵠⵠΔⲆΔᐃⲆ: "img/inv-extractor-machine-stone-click.png",
    ⵠΔⲆⲆⲆⲆᐃ: "img/day-extractor-machine0-gold.png",
    ΔᐃⲆⲆⵠⵠⵠ: "img/night-extractor-machine0-gold.png",
    ⲆΔᐃᐃᐃᐃⵠ: "img/day-extractor-machine-gold.png",
    ΔΔΔΔΔⵠⲆ: "img/night-extractor-machine-gold.png",
    ⵠⵠⵠⲆᐃⲆⵠ: "img/inv-extractor-machine-gold-out.png",
    ⵠΔΔΔΔΔⵠ: "img/inv-extractor-machine-gold-in.png",
    ⲆⵠⲆΔⲆᐃⲆ: "img/inv-extractor-machine-gold-click.png",
    ᐃᐃⲆΔⵠⲆᐃ: "img/day-extractor-machine0-diamond.png",
    ⲆᐃⵠⵠⵠⲆᐃ: "img/night-extractor-machine0-diamond.png",
    ΔΔᐃᐃⵠⵠΔ: "img/day-extractor-machine-diamond.png",
    ⵠᐃΔΔⵠⵠᐃ: "img/night-extractor-machine-diamond.png",
    ΔⲆΔᐃⵠΔⵠ: "img/inv-extractor-machine-diamond-out.png",
    ⵠⲆⲆⲆᐃⲆᐃ: "img/inv-extractor-machine-diamond-in.png",
    ᐃⵠᐃⲆⵠⵠΔ: "img/inv-extractor-machine-diamond-click.png",
    ⵠⵠΔⲆᐃΔⲆ: "img/day-extractor-machine0-amethyst.png",
    ᐃΔᐃΔⵠⵠΔ: "img/night-extractor-machine0-amethyst.png",
    ᐃⵠⲆᐃᐃⲆⵠ: "img/day-extractor-machine-amethyst.png",
    ᐃⲆΔΔⵠΔⲆ: "img/night-extractor-machine-amethyst.png",
    ⵠⲆΔᐃᐃΔᐃ: "img/inv-extractor-machine-amethyst-out.png",
    ᐃⲆⵠᐃᐃᐃⲆ: "img/inv-extractor-machine-amethyst-in.png",
    ᐃΔⵠΔΔᐃⵠ: "img/inv-extractor-machine-amethyst-click.png",
    ⲆⲆⵠⲆΔᐃᐃ: "img/day-extractor-machine0-reidite.png",
    ΔⲆⲆᐃⵠΔᐃ: "img/night-extractor-machine0-reidite.png",
    ⵠⵠⲆⵠⵠⵠⵠ: "img/day-extractor-machine-reidite.png",
    Ⲇⵠᐃᐃⵠⵠᐃ: "img/night-extractor-machine-reidite.png",
    ⲆⵠⵠⵠΔⲆⵠ: "img/inv-extractor-machine-reidite-out.png",
    ΔᐃΔΔᐃⵠᐃ: "img/inv-extractor-machine-reidite-in.png",
    ⵠᐃΔⵠᐃⲆⵠ: "img/inv-extractor-machine-reidite-click.png",
    ⵠᐃΔᐃⵠⲆᐃ: "img/extractor-cases.png",
    ΔᐃⵠⲆΔΔⵠ: "img/day-golden-hen.png",
    ᐃᐃⵠΔΔΔⲆ: "img/night-golden-hen.png",
    ΔΔΔⵠΔⲆΔ: "img/day-golden-chicken.png",
    ᐃΔⲆᐃΔᐃⲆ: "img/night-golden-chicken.png",
    ⵠᐃΔⲆⲆᐃΔ: "img/hurt-golden-hen.png",
    ᐃⵠⲆᐃⵠΔᐃ: "img/hurt-golden-chicken.png",
    ⲆΔⲆΔⲆⵠⵠ: "img/logo-interface.png",
    ⵠᐃᐃⵠⲆΔⲆ: "img/forest-mode-hover.png",
    ᐃᐃᐃᐃΔⵠᐃ: "img/normal-mode-hover.png",
    ⲆⲆΔΔᐃΔᐃ: "img/vampire-mode-hover.png",
    ⲆⵠⵠⲆⵠΔⲆ: "img/zombie-mode-hover.png",
    ΔᐃⲆᐃⲆΔΔ: "img/community-mode-hover2.png",
    ⲆⲆⲆΔⵠⲆᐃ: "img/experimental-mode-hover.png",
    ᐃΔΔⵠΔⲆⲆ: "img/zombie-mode-out.png",
    ᐃⲆΔΔΔᐃΔ: "img/zombie-mode-in.png",
    ᐃⵠⵠⵠᐃⵠΔ: "img/zombie-mode-click.png",
    ⵠᐃⵠΔΔΔⲆ: "img/vampire-mode-out.png",
    ⲆⵠⵠᐃⲆᐃᐃ: "img/vampire-mode-in.png",
    ΔⵠΔᐃⲆᐃᐃ: "img/vampire-mode-click.png",
    ᐃᐃᐃΔⲆⲆⵠ: "img/normal-mode-out.png",
    ⲆⵠⵠⵠᐃⵠⲆ: "img/normal-mode-in.png",
    ⵠⲆᐃⵠⵠⵠΔ: "img/normal-mode-click.png",
    ⵠⵠⵠⵠⵠⲆⵠ: "img/forest-mode-out.png",
    ᐃΔᐃⵠⲆΔⲆ: "img/forest-mode-in.png",
    ⵠⲆⲆⲆⲆⲆΔ: "img/forest-mode-click.png",
    ⵠⵠⵠⵠⵠΔⲆ: "img/community-mode-out.png",
    ΔΔΔⲆⵠⵠⲆ: "img/community-mode-in.png",
    ⲆⵠⲆⵠⵠΔΔ: "img/community-mode-click.png",
    ΔᐃΔⲆⲆⲆΔ: "img/experimental-modes-out.png",
    ᐃΔΔᐃΔΔᐃ: "img/experimental-modes-in.png",
    ⵠⲆⵠᐃᐃⲆᐃ: "img/experimental-modes-click.png",
    ΔᐃⲆΔⵠΔⵠ: "img/youtube-button-out.png",
    ⲆΔΔΔᐃΔΔ: "img/youtube-button-in.png",
    ᐃⵠᐃΔΔⵠⵠ: "img/youtube-button-click.png",
    ᐃⵠⲆⵠⲆᐃᐃ: "img/wiki-button-out.png",
    ⵠⵠΔⵠⲆⵠⵠ: "img/wiki-button-in.png",
    ᐃⵠᐃΔⲆΔⵠ: "img/wiki-button-click.png",
    ⵠΔᐃⵠⵠⲆᐃ: "img/twitter-button-out.png",
    ΔⲆΔᐃⵠⵠⲆ: "img/twitter-button-in.png",
    ᐃᐃⵠⲆⲆⵠⵠ: "img/twitter-button-click.png",
    ⵠΔΔΔΔΔⲆ: "img/facebook-button-out.png",
    ᐃⵠⲆⲆⲆⵠⵠ: "img/facebook-button-in.png",
    ⲆⲆⵠΔⲆᐃⲆ: "img/facebook-button-click.png",
    ᐃⵠΔΔⲆⵠᐃ: "img/reddit-button-out.png",
    ΔΔⵠⲆΔΔΔ: "img/reddit-button-in.png",
    ⵠΔⲆᐃᐃⲆΔ: "img/reddit-button-click.png",
    ΔⲆΔⵠᐃᐃⵠ: "img/discord-button-out.png",
    ⵠⲆⵠΔΔΔᐃ: "img/discord-button-in.png",
    ⲆⲆⲆⲆⵠⵠⲆ: "img/discord-button-click.png",
    ⲆⲆⲆᐃⵠⲆᐃ: "img/merch-button-out.png",
    ⲆⲆᐃⵠⵠⵠⲆ: "img/merch-button-in.png",
    ⵠⵠΔᐃΔⵠⲆ: "img/merch-button-click.png",
    ⵠΔⲆΔⲆᐃⵠᐃⵠ: "img/terminal-button-out.png",
    ⲆⵠΔᐃⵠΔᐃⲆⲆ: "img/terminal-button-in.png",
    ⵠᐃⲆⵠᐃᐃΔᐃΔ: "img/terminal-button-click.png",
    ⲆᐃⵠⵠᐃⵠⲆ: "img/restart-out.png",
    ⲆΔΔⵠΔⵠⲆ: "img/restart-in.png",
    ΔⵠΔⲆᐃⲆⵠ: "img/restart-click.png",
    ⲆΔᐃᐃⲆΔᐃ: "img/reboot-out.png",
    ᐃⲆⵠΔᐃⲆΔ: "img/reboot-in.png",
    ⵠᐃⵠⲆᐃᐃᐃ: "img/reboot-click.png",
    ⵠᐃⵠⵠⵠⲆᐃ: "img/guide-out.png",
    ⲆⲆΔⲆⵠⵠΔ: "img/guide-in.png",
    ⵠⲆⲆΔⵠⵠⵠ: "img/guide-click.png",
    ⲆΔᐃⲆᐃⲆᐃ: "img/copy-paste-out.png",
    ᐃⵠᐃᐃⲆΔⵠ: "img/copy-paste-in.png",
    ⵠⲆᐃⵠⲆΔΔ: "img/copy-paste-click.png",
    ⲆⵠΔᐃᐃᐃΔ: "img/link-buttons-bg.png",
    ᐃΔⲆⵠᐃᐃᐃ: "img/changelog-box2.png",
    ⵠΔⵠⵠΔᐃⵠ: "img/changelog_31.png",
    ΔⵠΔⲆⲆⲆⵠ: "img/banner-taming.png",
    ⵠᐃΔΔⲆΔᐃ: "img/profile-button-out.png",
    ΔⲆᐃᐃⲆⵠⵠ: "img/profile-button-in.png",
    ⲆⵠⲆⵠⲆⵠⵠ: "img/profile-button-click.png",
    ⲆⵠᐃΔⵠᐃᐃ: "img/login-button-out.png",
    ⵠⵠᐃⵠΔⵠᐃ: "img/login-button-in.png",
    ⲆᐃΔⲆΔᐃⵠ: "img/login-button-click.png",
    ΔΔᐃᐃⵠⵠᐃ: "img/login-google-out.png",
    ΔⲆΔⲆⵠⵠⲆ: "img/login-google-in.png",
    ⵠⵠⵠᐃᐃΔⵠ: "img/login-google-click.png",
    ᐃⵠⵠⵠⵠᐃΔ: "img/login-facebook-out.png",
    ⲆᐃΔⲆΔᐃⲆ: "img/login-facebook-in.png",
    ΔⲆⵠᐃⵠᐃΔ: "img/login-facebook-click.png",
    ᐃⲆⲆⵠΔᐃⵠ: "img/account-box.png",
    ᐃⲆⵠᐃΔⲆⵠΔΔ: "img/account-under-maintenance.png",
    ⲆⲆᐃⲆⲆⲆⵠ: "img/close-button-account-out.png",
    ᐃΔⵠΔᐃᐃⵠ: "img/close-button-account-in.png",
    ᐃⵠⲆΔᐃⵠⵠ: "img/close-button-account-click.png",
    ⵠΔΔΔⲆᐃᐃ: "img/play-button-out.png",
    ᐃⲆⵠᐃⵠⵠⵠ: "img/play-button-in.png",
    ᐃᐃΔᐃⲆⲆᐃ: "img/play-button-click.png",
    ⲆⵠⲆⲆⵠⲆⲆⵠᐃ: "img/app-store-badge.png",
    ⵠΔᐃⵠΔᐃⵠᐃⲆ: "img/play-store-badge.png",
    ᐃⲆⲆΔⲆᐃⲆⵠⲆ: "img/mobile-boxad.png",
    ᐃⵠⵠᐃᐃⲆⵠ: "img/modify-name-out.png",
    ᐃΔΔᐃᐃΔⲆ: "img/modify-name-in.png",
    ᐃⲆⲆⲆΔΔΔ: "img/modify-name-click.png",
    ΔⵠΔᐃᐃⵠⵠ: "img/copy-id-button-out.png",
    ⵠΔⲆᐃⵠⵠᐃ: "img/copy-id-button-hover.png",
    ⵠΔΔᐃⲆⵠᐃ: "img/copy-id-button-active.png",
    ⲆᐃᐃΔΔⵠⵠ: "img/yes-button-out.png",
    ⵠⲆᐃⵠⵠᐃᐃ: "img/yes-button-in.png",
    ᐃⲆⲆΔⲆⵠΔ: "img/yes-button-click.png",
    ΔΔᐃᐃⲆᐃⵠ: "img/yes-300-button-out.png",
    ΔΔΔᐃᐃΔᐃ: "img/yes-300-button-in.png",
    ᐃⵠⲆΔᐃΔᐃ: "img/yes-300-button-click.png",
    ⵠᐃΔⵠⵠⲆⵠ: "img/no-button-out.png",
    ⵠΔΔΔⲆΔᐃ: "img/no-button-in.png",
    ⲆⵠᐃΔΔⵠᐃ: "img/no-button-click.png",
    ΔΔᐃⵠᐃⵠⲆ: "img/no-thanks-button-out.png",
    ⲆᐃᐃⲆⵠⵠⲆ: "img/no-thanks-button-in.png",
    ΔⵠᐃⲆΔᐃΔ: "img/no-thanks-button-click.png",
    ⲆⲆⲆᐃⵠᐃⵠ: "img/shop-button-out.png",
    ᐃΔⲆᐃᐃᐃⵠ: "img/shop-button-in.png",
    ΔⵠⵠΔᐃⲆΔ: "img/shop-button-click.png",
    ΔⲆⵠⲆᐃⵠⲆ: "img/logout-out.png",
    ΔΔΔᐃⲆⵠⵠ: "img/logout-in.png",
    ⲆΔᐃⵠⵠΔⵠ: "img/logout-click.png",
    ⲆⵠⵠᐃⲆⵠΔ: "img/terms-button-out.png",
    ᐃⲆᐃⲆᐃⵠⲆ: "img/terms-button-in.png",
    ΔΔΔⵠⲆΔⵠ: "img/terms-button-click.png",
    ⵠⵠⲆⲆⲆΔⵠ: "img/tutorial-icon.png",
    ⲆⵠΔᐃⵠᐃΔ: "img/skins-icon.png",
    ᐃΔⲆⲆᐃⵠⲆ: "img/shop-icon.png",
    ⵠΔΔΔⵠⲆⵠⵠΔ: "img/paint-icon.png",
    ⵠᐃΔⲆⵠⲆᐃ: "img/leaderboard-icon.png",
    ⲆΔⵠⵠΔᐃᐃ: "img/start-icon.png",
    ⵠΔⵠⲆΔⵠⲆ: "img/profile-icon.png",
    ΔᐃΔⵠⲆΔⵠ: "img/server-access-icon2.png",
    ᐃᐃᐃΔΔᐃΔ: "img/button-homepage-bg-out.png",
    ᐃⵠⲆⲆᐃᐃᐃ: "img/button-homepage-bg-in.png",
    ⲆΔⵠΔⵠᐃΔ: "img/button-homepage-bg-click.png",
    ⲆⲆⲆᐃⵠⵠᐃ: "img/button-bottom-homepage-bg-out.png",
    ᐃⲆⵠᐃⲆᐃⵠ: "img/button-bottom-homepage-bg-in.png",
    ᐃⵠⲆⲆΔᐃⵠ: "img/button-bottom-homepage-bg-click.png",
    ⲆⵠⲆΔⲆⲆⵠ: "img/lvl-player.png",
    ᐃⲆⲆⵠⲆⵠⵠ: "img/avatar-player.png",
    ⲆⲆⵠⲆⲆⲆⲆ: "img/avatar-player1.png",
    ᐃⲆⲆΔᐃⲆⲆ: "img/avatar-player2.png",
    ᐃⵠⵠⲆΔΔⲆ: "img/avatar-player3.png",
    ΔⵠⲆⵠⲆΔⵠ: "img/avatar-player4.png",
    ⵠⲆᐃⵠᐃⲆⲆ: "img/avatar-player5.png",
    ᐃᐃⲆⵠΔᐃⵠ: "img/avatar-player6.png",
    ΔⲆⲆⵠΔΔⵠ: "img/avatar-player7.png",
    ⵠᐃΔΔⵠⲆⵠ: "img/avatar-player8.png",
    ⵠⵠΔΔᐃᐃⵠ: "img/avatar-player9.png",
    ⵠΔⲆᐃⵠⲆⲆ: "img/avatar-player10.png",
    ΔᐃⵠΔⲆΔⲆ: "img/avatar-player11.png",
    ᐃⵠᐃΔᐃⵠⲆ: "img/avatar-player12.png",
    ⲆⲆΔᐃΔⵠⵠ: "img/avatar-player13.png",
    ⲆΔᐃⲆⵠΔⲆ: "img/avatar-player14.png",
    ΔΔᐃⲆΔⲆⵠ: "img/avatar-player14.png",
    ΔⵠᐃᐃⵠΔⲆ: "img/avatar-player14.png",
    ᐃⵠⵠⲆⲆΔⵠ: "img/avatar-player14.png",
    ⲆᐃΔᐃⲆΔᐃᐃΔ: "img/golden-bread.png",
    ᐃⲆΔⵠⲆᐃΔ: "img/buy-bread-out.png",
    ⵠΔⲆΔᐃᐃⵠ: "img/buy-bread-in.png",
    ⵠΔΔΔᐃⵠⵠ: "img/buy-bread-click.png",
    ⲆⵠΔᐃᐃᐃⵠ: "img/gauge.png",
    ⵠᐃᐃⵠⲆⲆⵠⲆΔ: "img/season-4-out.png",
    ⵠᐃΔⵠΔⲆᐃⲆⵠ: "img/season-4-in.png",
    ⲆⲆⲆᐃΔᐃⲆⲆᐃ: "img/season-4-click.png",
    ΔⵠᐃᐃⵠⲆⲆᐃⲆ: "img/season4-box.png",
    ᐃΔⵠⵠⵠΔΔⲆⵠ: "img/season-5-out.png",
    ᐃᐃⲆⲆⵠΔⲆᐃΔ: "img/season-5-in.png",
    ᐃᐃΔⲆⵠΔᐃΔⵠ: "img/season-5-click.png",
    ᐃⲆᐃΔⵠⵠΔⲆᐃ: "img/season5-box.png",
    ΔΔᐃΔᐃⵠⲆ: "img/season-6-out.png",
    ᐃΔΔⲆᐃⵠⲆ: "img/season-6-in.png",
    ⵠⲆᐃⲆⲆⲆⵠ: "img/season-6-click.png",
    ΔΔⵠᐃΔⲆⵠ: "img/season6-box.png",
    ⲆⵠⵠΔΔⵠΔ: "img/profile3-box.png",
    ⵠⵠⲆⵠⲆⲆΔ: "img/skins-box.png",
    ᐃᐃΔⲆⵠⵠⲆ: "img/shop-box.png",
    ⲆΔⲆⲆⵠᐃⵠᐃⲆ: "img/private-server-box.png",
    ᐃⲆⲆⲆΔᐃⵠ: "img/location-box.png",
    Δᐃⵠᐃᐃᐃᐃ: "img/server-duration-box.png",
    ⵠΔΔⲆⵠᐃⲆ: "img/tutorial-box.png",
    ᐃⲆΔᐃᐃⲆΔ: "img/leaderboard2-box.png",
    ⵠⲆΔᐃΔⲆᐃ: "img/buy-breads-box.png",
    ⲆⲆⵠⲆΔⵠⵠ: "img/bag-box.png",
    ΔᐃᐃⵠᐃⲆⵠ: "img/deadbox-box.png",
    ᐃⲆΔᐃⵠⲆⵠ: "img/book-box.png",
    ⲆΔⲆⵠⵠⲆᐃ: "img/accessories-box.png",
    ⵠⲆⵠΔⵠⲆᐃ: "img/customskin-box.png",
    ᐃᐃⲆΔΔᐃᐃ: "img/bag-lasts.png",
    ⲆᐃᐃΔⲆᐃⲆ: "img/server-lasts.png",
    ΔᐃⲆⵠⲆⵠΔ: "img/server-access-box3.png",
    ⲆΔᐃΔⲆΔⲆ: "img/lootbox-box.png",
    ᐃⲆⲆⵠΔⲆΔ: "img/change-nickname0.png",
    ΔⲆⵠΔⵠⲆΔ: "img/change-nickname1.png",
    ⵠⵠⲆΔΔΔΔ: "img/cheating-box.png",
    ⵠⵠᐃⲆⵠᐃⵠᐃⵠ: "img/daily-quest-box.png",
    ΔⵠⵠᐃΔΔⲆⵠΔ: "img/daily-5-bread.png",
    ΔΔⵠΔΔⲆΔⵠᐃ: "img/daily-10-bread.png",
    ⵠΔᐃⵠᐃᐃΔᐃᐃ: "img/daily-valid.png",
    ᐃᐃᐃⵠΔᐃΔ: "img/normal-profile-out.png",
    ΔΔⲆΔᐃᐃⲆ: "img/normal-profile-in.png",
    ᐃᐃⵠⵠⲆⲆⲆ: "img/normal-profile-click.png",
    ⵠⵠⵠⲆᐃΔΔ: "img/forest-profile-out.png",
    ⵠⲆⲆᐃⲆⲆᐃ: "img/forest-profile-in.png",
    ΔⲆⲆᐃΔᐃᐃ: "img/forest-profile-click.png",
    ΔΔⲆΔⲆⵠᐃ: "img/zombie-profile-out.png",
    ᐃⲆⵠΔⵠΔⲆ: "img/zombie-profile-in.png",
    ⲆⲆᐃᐃᐃΔⵠ: "img/zombie-profile-click.png",
    ⵠᐃᐃⲆΔΔΔ: "img/vampire-profile-out.png",
    ᐃΔᐃⲆⵠⲆᐃ: "img/vampire-profile-in.png",
    ⲆᐃΔⲆⵠⵠΔ: "img/vampire-profile-click.png",
    ΔⲆᐃⲆᐃᐃΔ: "img/total-profile-out.png",
    ᐃᐃᐃⲆΔⲆΔ: "img/total-profile-in.png",
    ΔⲆᐃⵠᐃᐃⵠ: "img/total-profile-click.png",
    ⵠⲆᐃΔᐃⵠᐃ: "img/season1-out.png",
    ⵠⵠᐃΔⵠᐃⵠ: "img/season1-in.png",
    ⵠⲆⲆⲆᐃᐃΔ: "img/season1-click.png",
    ΔⵠΔΔⲆᐃΔ: "img/season2-out.png",
    ᐃᐃⵠⵠΔⵠΔ: "img/season2-in.png",
    ᐃⵠΔⲆⲆΔⵠ: "img/season2-click.png",
    ⵠΔᐃⵠᐃᐃⵠ: "img/season3-out.png",
    ᐃΔᐃᐃⵠᐃⵠ: "img/season3-in.png",
    ΔᐃΔᐃⵠⲆⲆ: "img/season3-click.png",
    ᐃᐃⲆⵠΔᐃⲆ: "img/season4-out.png",
    ⲆΔⲆΔⵠⵠⲆ: "img/season4-in.png",
    ⲆⲆⵠᐃᐃⵠΔ: "img/season4-click.png",
    ⲆⵠΔᐃΔΔⵠ: "img/season5-out.png",
    ᐃᐃⵠⵠΔΔΔ: "img/season5-in.png",
    ⲆᐃⲆⵠⵠⲆⲆ: "img/season5-click.png",
    ᐃΔᐃⲆᐃᐃᐃ: "img/season6-out.png",
    ᐃⵠΔⲆⲆΔΔ: "img/season6-in.png",
    ΔΔᐃᐃⲆⵠⲆ: "img/season6-click.png",
    ᐃΔⲆᐃᐃΔⲆ: "img/locked-skin-alert.png",
    ⲆΔΔⲆⲆᐃΔ: "img/locked-custom-alert.png",
    ᐃⵠᐃΔᐃⲆⵠ: "img/bg-red-locked.png",
    ⲆΔⵠⵠⵠᐃΔ: "img/skin-button-out.png",
    ⲆⲆᐃΔᐃⲆⵠ: "img/skin-button-in.png",
    ᐃⲆᐃᐃΔᐃΔ: "img/skin-button-click.png",
    ᐃⲆΔⲆᐃᐃⲆ: "img/accessory-button-out.png",
    ⵠⲆᐃΔⲆᐃⲆ: "img/accessory-button-in.png",
    ΔⵠΔⲆⵠⲆⲆ: "img/accessory-button-click.png",
    ⲆⵠⵠⵠΔᐃⵠ: "img/bag-button-out.png",
    ᐃᐃⵠⲆⲆⲆⵠ: "img/bag-button-in.png",
    ⵠⲆⵠⵠᐃⲆⵠ: "img/bag-button-click.png",
    ΔⵠⵠⲆΔⵠᐃ: "img/book-button-out.png",
    ⵠⲆΔⲆΔΔΔ: "img/book-button-in.png",
    ΔⲆΔⲆⵠΔⲆ: "img/book-button-click.png",
    ᐃΔΔⲆᐃⲆⲆ: "img/deadbox-button-out.png",
    ⲆⵠᐃΔⵠΔᐃ: "img/deadbox-button-in.png",
    ᐃⵠΔⲆⲆⲆᐃ: "img/deadbox-button-click.png",
    ⵠΔΔΔᐃⵠΔ: "img/loot-button-out.png",
    ⲆΔᐃΔⵠᐃᐃ: "img/loot-button-in.png",
    ΔⲆΔΔⵠⵠⲆ: "img/loot-button-click.png",
    ⲆΔⲆⵠⲆⵠᐃ: "img/free-item-out.png",
    ⲆᐃᐃⵠⲆᐃⵠ: "img/free-item-in.png",
    ⵠΔᐃΔᐃΔⵠ: "img/free-item-click.png",
    ⲆΔⵠⵠ: "img/wood-item-out.png",
    ᐃⵠⲆΔ: "img/wood-item-in.png",
    ΔⵠⲆΔ: "img/wood-item-click.png",
    ΔⵠΔⵠⵠΔᐃ: "img/stone-item.png",
    ⵠⵠᐃⵠᐃⲆⲆ: "img/stone-item-in.png",
    ⲆΔᐃⵠΔΔⲆ: "img/stone-item-click.png",
    ΔⵠᐃⵠⲆΔᐃ: "img/gold-item.png",
    ΔⵠᐃΔⵠΔΔ: "img/gold-item-in.png",
    ΔⲆⵠⲆⵠⲆⲆ: "img/gold-item-click.png",
    ⵠⵠΔΔⵠᐃⲆ: "img/diamond-item.png",
    ΔᐃΔⵠⲆⲆⲆ: "img/diamond-item-in.png",
    ⲆᐃⲆⵠⲆⲆⵠ: "img/diamond-item-click.png",
    ΔⲆⲆⲆΔΔⵠ: "img/amethyst-item.png",
    ⵠⲆᐃⵠⲆⵠᐃ: "img/amethyst-item-in.png",
    ΔᐃᐃⵠΔΔΔ: "img/amethyst-item-click.png",
    ᐃΔᐃΔΔΔᐃ: "img/reidite-item.png",
    ᐃⵠⲆⲆᐃΔᐃ: "img/reidite-item-in.png",
    ⵠᐃΔΔⵠΔⵠ: "img/reidite-item-click.png",
    ΔⲆⲆᐃⲆΔᐃ: "img/special-item-out.png",
    ΔⵠΔⲆⵠΔΔ: "img/special-item-in.png",
    ᐃⲆᐃⵠⵠⵠᐃ: "img/special-item-click.png",
    ΔᐃᐃⵠⵠᐃⲆ: "img/level-item-out.png",
    Ⲇⵠᐃᐃⵠᐃᐃ: "img/level-item-in.png",
    ⵠⵠᐃⲆᐃⵠⲆ: "img/level-item-click.png",
    ⲆΔΔᐃᐃΔⲆ: "img/skin-previous-out.png",
    ᐃⲆⲆᐃⲆᐃⲆ: "img/skin-previous-in.png",
    ⵠⵠⵠΔⲆΔⵠ: "img/skin-previous-click.png",
    ⵠⲆⲆᐃΔⲆΔ: "img/skin-next-out.png",
    ⲆᐃⲆⵠⵠⵠⲆ: "img/skin-next-in.png",
    ⲆⲆΔⲆΔᐃⵠ: "img/skin-next-click.png",
    ⵠᐃⵠⲆⲆ: "img/back-button-out.png",
    ΔⵠⲆⲆⲆ: "img/back-button-in.png",
    ᐃⲆⲆΔⲆ: "img/back-button-click.png",
    ΔᐃᐃⵠⵠᐃΔ: "img/get-more-button-out.png",
    ΔⲆⲆⲆΔᐃⲆ: "img/get-more-button-in.png",
    ᐃΔΔⵠⲆⵠⲆ: "img/get-more-button-click.png",
    ΔΔᐃⲆᐃⲆⲆ: "img/currency1-out.png",
    ᐃΔⲆᐃⲆⲆᐃ: "img/currency1-in.png",
    ᐃⵠᐃΔΔᐃⲆ: "img/currency1-click.png",
    ⵠⲆⲆᐃⵠⲆⲆ: "img/currency2-out.png",
    ᐃⵠⲆⵠⵠᐃᐃ: "img/currency2-in.png",
    ᐃⲆⲆΔᐃᐃᐃ: "img/currency2-click.png",
    ⲆΔⲆΔⵠⵠΔ: "img/currency3-out.png",
    ⵠᐃΔⲆⵠⵠⲆ: "img/currency3-in.png",
    ⵠΔⲆᐃᐃΔⲆ: "img/currency3-click.png",
    ⲆᐃⲆΔᐃΔΔ: "img/currency4-out.png",
    ᐃᐃⵠᐃΔΔⵠ: "img/currency4-in.png",
    ᐃΔⲆⵠⵠΔΔ: "img/currency4-click.png",
    ᐃⲆᐃᐃⵠΔᐃ: "img/currency5-out.png",
    ᐃᐃΔⲆΔⲆⵠ: "img/currency5-in.png",
    ΔⵠΔⵠΔᐃᐃ: "img/currency5-click.png",
    ⵠⵠΔⲆⵠΔᐃ: "img/price1-out.png",
    ΔᐃΔΔᐃⲆΔ: "img/price1-in.png",
    ⵠΔⵠᐃᐃᐃᐃ: "img/price1-click.png",
    ΔⲆᐃⵠⲆⲆⲆ: "img/price2-out.png",
    ⵠⲆⵠⵠⲆⲆΔ: "img/price2-in.png",
    ⲆΔⵠⵠⵠⲆᐃ: "img/price2-click.png",
    ᐃᐃⵠΔⵠᐃᐃ: "img/price3-out.png",
    ⵠᐃΔⵠⲆⲆⵠ: "img/price3-in.png",
    ᐃᐃᐃΔⲆᐃᐃ: "img/price3-click.png",
    ᐃⵠⲆⲆΔⲆⲆ: "img/price4-out.png",
    ᐃΔᐃⵠⲆᐃᐃ: "img/price4-in.png",
    ⲆΔᐃⲆⵠᐃⲆ: "img/price4-click.png",
    ⲆΔΔⵠⵠⵠⲆ: "img/price5-out.png",
    ᐃⲆᐃⵠⲆᐃⵠ: "img/price5-in.png",
    ⵠⲆᐃⵠᐃΔⵠ: "img/price5-click.png",
    ᐃᐃΔΔⲆᐃⲆⵠⵠ: "img/buy-private-server-out.png",
    ⵠᐃⲆᐃᐃΔⲆᐃᐃ: "img/buy-private-server-in.png",
    ΔΔⵠⲆΔᐃΔⲆΔ: "img/buy-private-server-click.png",
    ⲆⵠⲆΔᐃΔΔ: "img/atlanta-button-out.png",
    ᐃᐃΔⲆᐃᐃⵠ: "img/atlanta-button-in.png",
    ᐃⵠΔⲆᐃΔⲆ: "img/atlanta-button-click.png",
    ᐃᐃΔⵠΔⵠⲆ: "img/los-angeles-button-out.png",
    ⵠⲆᐃⲆΔΔᐃ: "img/los-angeles-button-in.png",
    ⵠᐃⵠⲆᐃΔⵠ: "img/los-angeles-button-click.png",
    ΔⲆᐃⵠⵠᐃⲆ: "img/sydney-button-out.png",
    ΔⲆⲆⲆΔⵠⲆ: "img/sydney-button-in.png",
    ⲆΔΔⲆⵠⵠⵠ: "img/sydney-button-click.png",
    ᐃⵠⵠΔⵠᐃⵠ: "img/frankfurt-button-out.png",
    ᐃⵠΔΔⲆΔⵠ: "img/frankfurt-button-in.png",
    ᐃⵠᐃᐃⵠⵠⵠ: "img/frankfurt-button-click.png",
    ⲆΔⲆᐃⲆΔᐃ: "img/osaka-button-out.png",
    ᐃᐃΔΔⵠᐃⵠ: "img/osaka-button-in.png",
    ΔΔᐃᐃΔⲆΔ: "img/osaka-button-click.png",
    ᐃⵠⲆⵠⲆᐃⵠⵠⵠ: "img/yes-location-out.png",
    ᐃⵠᐃⵠⲆΔⵠᐃᐃ: "img/yes-location-in.png",
    ⲆⲆⲆᐃᐃⵠΔΔΔ: "img/yes-location-click.png",
    ⲆⲆΔⵠᐃᐃΔ: "img/3days-button-out.png",
    ⵠⵠΔᐃⲆΔΔ: "img/3days-button-in.png",
    ΔᐃᐃΔⲆⵠⲆ: "img/3days-button-click.png",
    ⵠⵠⲆⲆᐃᐃᐃ: "img/7days-button-out.png",
    ⵠⲆΔΔᐃⵠΔ: "img/7days-button-in.png",
    ⵠⵠᐃⵠⵠⵠⵠ: "img/7days-button-click.png",
    ᐃΔⲆΔⵠᐃΔ: "img/30days-button-out.png",
    ΔⲆΔⵠⵠᐃⵠ: "img/30days-button-in.png",
    ΔⵠΔΔᐃⲆᐃ: "img/30days-button-click.png",
    ⵠⵠⲆΔΔⵠⵠ: "img/90days-button-out.png",
    ᐃᐃᐃⲆΔⵠΔ: "img/90days-button-in.png",
    ⲆΔΔᐃᐃⲆΔ: "img/90days-button-click.png",
    ⲆᐃⵠⲆⲆᐃΔ: "img/spin1.png",
    ⲆᐃΔⵠΔⵠⵠ: "img/spin2.png",
    ΔⲆⵠⲆⵠΔΔ: "img/spin3.png",
    ᐃᐃᐃⲆΔⵠᐃ: "img/spin4.png",
    ᐃᐃⲆⲆⵠⲆΔ: "img/spin5.png",
    ⲆᐃⵠⵠΔᐃΔ: "img/spin6.png",
    ⵠⲆⲆⵠⲆⵠΔ: "img/arrow-spin.png",
    ⲆᐃⲆⲆⵠⵠⲆ: "img/spin-button-1-out.png",
    ⵠΔΔΔⲆΔⲆ: "img/spin-button-1-in.png",
    ⲆⵠᐃⲆⲆⲆⲆ: "img/spin-button-1-click.png",
    ᐃⲆᐃᐃⵠᐃⵠ: "img/spin-button-2-out.png",
    ᐃᐃⲆⲆⵠΔⵠ: "img/spin-button-2-in.png",
    ⲆΔΔⲆⲆⲆΔ: "img/spin-button-2-click.png",
    ΔᐃⲆⵠⲆᐃⵠ: "img/spin-button-3-out.png",
    ΔⵠΔΔᐃⵠⲆ: "img/spin-button-3-in.png",
    ΔⵠⵠⵠⵠΔⵠ: "img/spin-button-3-click.png",
    ᐃⲆⵠⲆΔΔⵠ: "img/spin-button-4-out.png",
    ᐃᐃΔⵠΔⵠΔ: "img/spin-button-4-in.png",
    ΔᐃΔΔⲆΔᐃ: "img/spin-button-4-click.png",
    ⵠⵠⵠΔⲆⲆᐃ: "img/spin-button-5-out.png",
    ΔⲆΔⲆΔΔΔ: "img/spin-button-5-in.png",
    ΔⲆⲆᐃⲆⵠΔ: "img/spin-button-5-click.png",
    ᐃⲆᐃⵠⲆΔᐃ: "img/spin-light.png",
    ⲆᐃΔⵠⵠⵠΔ: "img/tuto-wiki-out.png",
    ΔΔΔΔΔᐃⵠ: "img/tuto-wiki-in.png",
    ⲆΔΔⵠᐃᐃⵠ: "img/tuto-wiki-click.png",
    ⵠⵠᐃΔᐃΔⲆ: "img/tuto-previous-out.png",
    ⲆⵠΔⵠⵠⲆⲆ: "img/tuto-previous-in.png",
    ΔΔᐃᐃⵠΔⲆ: "img/tuto-previous-click.png",
    ⵠⵠⲆⲆΔᐃᐃ: "img/tuto-next-out.png",
    ᐃᐃΔⵠΔΔΔ: "img/tuto-next-in.png",
    ΔΔⲆⵠⵠⵠΔ: "img/tuto-next-click.png",
    ᐃᐃⵠᐃΔΔᐃ: "img/time-leaderboard-out.png",
    ᐃⵠⵠⲆⵠⵠⵠ: "img/time-leaderboard-in.png",
    ⲆᐃΔΔΔⲆᐃ: "img/time-leaderboard-click.png",
    ᐃΔᐃΔᐃⲆΔ: "img/score-leaderboard-out.png",
    ⵠⵠⵠⵠⵠΔΔ: "img/score-leaderboard-in.png",
    ⲆⵠΔⲆⲆⵠΔ: "img/score-leaderboard-click.png",
    ΔΔᐃⵠⲆᐃΔ: "img/lvl-leaderboard-out.png",
    ⲆⵠⵠΔⲆΔᐃ: "img/lvl-leaderboard-in.png",
    ΔⲆⵠΔᐃᐃⲆ: "img/lvl-leaderboard-click.png",
    ΔΔⵠⵠᐃⵠⲆ: "img/kill-leaderboard-out.png",
    ᐃΔΔΔⵠΔΔ: "img/kill-leaderboard-in.png",
    ΔⵠⲆⵠᐃⵠΔ: "img/kill-leaderboard-click.png",
    ⵠᐃΔⵠΔᐃᐃ: "img/all-leaderboard-out.png",
    ⵠΔⵠⵠⲆⵠΔ: "img/all-leaderboard-in.png",
    ΔᐃⵠⲆⵠⵠⲆ: "img/all-leaderboard-click.png",
    ΔⵠⲆⲆΔΔⵠ: "img/today-leaderboard-out.png",
    ᐃⲆᐃⵠᐃΔⵠ: "img/today-leaderboard-in.png",
    ⲆΔⲆΔⲆᐃⲆ: "img/today-leaderboard-click.png",
    ᐃᐃΔⲆⵠⵠⵠ: "img/week-leaderboard-out.png",
    ΔⲆΔⲆΔⵠΔ: "img/week-leaderboard-in.png",
    ⲆΔΔⵠⵠⲆⵠ: "img/week-leaderboard-click.png",
    ΔΔⵠⵠᐃΔⲆ: "img/season1-out.png",
    ⲆᐃᐃⲆⲆⲆᐃ: "img/season1-in.png",
    ΔⵠΔᐃⲆⲆⲆ: "img/season1-click.png",
    ⲆⲆⵠᐃᐃᐃⵠ: "img/season2-out.png",
    ⲆΔΔΔⵠΔΔ: "img/season2-in.png",
    ⲆⲆⵠΔᐃⲆⵠ: "img/season2-click.png",
    ⵠⵠⵠΔΔⲆΔ: "img/season3-out.png",
    ᐃᐃⵠⵠΔⲆᐃ: "img/season3-in.png",
    ΔᐃΔⲆⲆⲆᐃ: "img/season3-click.png",
    ΔⲆⵠⲆΔΔⵠ: "img/season4-out.png",
    ⵠⲆᐃᐃΔΔⵠ: "img/season4-in.png",
    ΔΔᐃⲆΔⲆΔ: "img/season4-click.png",
    ⲆⵠⲆΔⵠΔΔ: "img/season5-out.png",
    ⲆᐃⲆᐃᐃᐃΔ: "img/season5-in.png",
    ᐃⵠⵠⵠⵠⵠᐃ: "img/season5-click.png",
    ⵠⵠⲆⵠⵠᐃⵠ: "img/season6-out.png",
    ⵠⵠⲆᐃⵠⵠⵠ: "img/season6-in.png",
    ⲆⲆΔⲆΔᐃⲆ: "img/season6-click.png",
    ᐃᐃᐃⵠΔΔⵠ: "img/total-lead-out.png",
    ⵠⵠᐃΔᐃᐃΔ: "img/total-lead-in.png",
    ᐃⵠⲆΔⲆⲆΔ: "img/total-lead-click.png",
    ⲆΔⵠⵠΔΔⲆ: "img/normal-lead-out.png",
    ⵠᐃᐃᐃᐃΔⲆ: "img/normal-lead-in.png",
    ⲆⵠⲆᐃⲆⵠᐃ: "img/normal-lead-click.png",
    ᐃΔⲆⵠᐃΔΔ: "img/forest-lead-out.png",
    ᐃⲆⵠΔⵠⵠⲆ: "img/forest-lead-in.png",
    ⵠⲆⲆⵠⲆⲆⲆ: "img/forest-lead-click.png",
    ΔΔΔΔᐃⵠΔ: "img/vampire-lead-out.png",
    ⵠᐃⵠⵠⲆⲆⲆ: "img/vampire-lead-in.png",
    ΔⲆⵠⵠᐃⵠⲆ: "img/vampire-lead-click.png",
    ⲆⵠᐃΔⵠⲆⵠ: "img/zombie-lead-out.png",
    ΔΔⵠΔᐃⵠΔ: "img/zombie-lead-in.png",
    ⲆⵠⲆⵠⵠΔⲆ: "img/zombie-lead-click.png",
    ⲆⲆⵠΔᐃᐃⲆ: "img/day-level5.png",
    ⲆⵠⵠⵠΔΔΔ: "img/night-level5.png",
    ΔⲆⲆΔᐃⵠᐃ: "img/day-level10.png",
    ⲆⲆⵠⲆⲆᐃΔ: "img/night-level10.png",
    ⲆⵠⲆᐃᐃΔᐃ: "img/day-level15.png",
    ᐃⲆⲆΔΔΔⲆ: "img/night-level15.png",
    ⲆⲆⵠⲆⵠⲆΔ: "img/day-level20.png",
    ΔⲆⲆᐃΔᐃⲆ: "img/night-level20.png",
    ⲆᐃΔⵠⵠⵠᐃ: "img/day-level25.png",
    ⵠᐃⲆΔⲆΔⵠ: "img/night-level25.png",
    ᐃⵠⲆᐃⲆΔΔ: "img/day-level30.png",
    ΔᐃΔΔΔΔⵠ: "img/night-level30.png",
    ᐃᐃⵠᐃᐃᐃⵠ: "img/day-level35.png",
    ⲆᐃΔᐃⲆⵠΔ: "img/night-level35.png",
    ᐃΔⲆⲆⲆⵠᐃ: "img/day-level40.png",
    ΔᐃⵠⲆⲆⲆᐃ: "img/night-level40.png",
    ΔΔᐃⲆΔᐃΔ: "img/day-level45.png",
    ⵠⵠᐃⵠᐃΔⲆ: "img/night-level45.png",
    ⲆᐃΔᐃⵠⲆⲆ: "img/day-level50.png",
    ΔᐃⵠΔΔΔⵠ: "img/night-level50.png",
    ⵠᐃⲆⵠⵠⲆⵠ: "img/day-level55.png",
    ᐃⲆⲆⲆᐃⲆᐃ: "img/night-level55.png",
    ⲆⵠᐃΔⵠⵠᐃ: "img/day-level60.png",
    ΔΔᐃΔΔΔⲆ: "img/night-level60.png",
    ΔⲆⲆⲆⲆⲆⵠ: "img/day-skin-devast0.png",
    ⵠⲆⲆⵠⵠᐃⲆ: "img/night-skin-devast0.png",
    ΔᐃᐃⵠΔⲆⲆ: "img/day-hand-devaster.png",
    ⵠΔᐃⵠⲆΔΔ: "img/night-hand-devaster.png",
    ⵠⵠⵠΔΔⲆⵠ: "img/day-skin-star0.png",
    ⲆΔⲆⵠⵠⵠⲆ: "img/night-skin-star0.png",
    ⵠΔⵠⲆⵠⲆᐃ: "img/day-hand-star0.png",
    ΔⵠΔⵠⵠⵠⲆ: "img/night-hand-star0.png",
    ᐃᐃᐃᐃᐃⲆⵠ: "img/day-vampire.png",
    ⵠⵠⲆⵠΔΔⵠ: "img/night-vampire.png",
    ᐃⵠⲆⵠΔᐃⵠ: "img/day-hand-vampire.png",
    ΔΔΔᐃⲆⲆⵠ: "img/night-hand-vampire.png",
    ΔⵠⵠΔᐃΔΔ: "img/day-zombie.png",
    ΔⲆⵠⲆᐃⵠΔ: "img/night-zombie.png",
    ⵠⲆⲆⵠΔᐃΔ: "img/day-hand-zombie.png",
    ᐃⲆΔⵠⵠⵠⵠ: "img/night-hand-zombie.png",
    ΔΔⲆΔⲆⲆⲆ: "img/day-skin113.png",
    ΔⵠᐃⲆⵠⲆⲆ: "img/night-skin113.png",
    ⵠⵠⵠⵠᐃᐃᐃ: "img/day-hand-skin113.png",
    ⵠΔⵠᐃⲆⵠᐃ: "img/night-hand-skin113.png",
    ⲆⵠⵠⲆΔⲆᐃ: "img/day-skin0.png",
    ⵠⲆΔᐃⲆⲆᐃ: "img/night-skin0.png",
    ⵠⲆⲆᐃⵠᐃⵠ: "img/day-skin1.png",
    ⵠⲆᐃΔⵠΔᐃ: "img/night-skin1.png",
    ⵠᐃᐃⲆᐃΔⵠ: "img/day-skin2.png",
    ⲆᐃⵠᐃΔΔⵠ: "img/night-skin2.png",
    ΔΔᐃΔⵠⲆᐃ: "img/day-skin3.png",
    ⲆᐃᐃᐃᐃΔⵠ: "img/night-skin3.png",
    ⵠΔⲆᐃᐃⵠⵠ: "img/day-skin4.png",
    ΔᐃΔΔⵠⲆΔ: "img/night-skin4.png",
    ᐃⵠⲆΔᐃⵠᐃ: "img/day-skin5.png",
    ΔΔΔᐃΔⲆΔ: "img/night-skin5.png",
    ᐃⲆⵠⵠᐃᐃⵠ: "img/day-skin6.png",
    ΔᐃⵠⲆⵠΔᐃ: "img/night-skin6.png",
    ᐃᐃΔⵠⲆΔⲆ: "img/day-skin7.png",
    ᐃΔⵠᐃⲆⵠⵠ: "img/night-skin7.png",
    ⵠᐃⲆᐃᐃΔΔ: "img/day-skin8.png",
    ΔΔⵠⲆΔΔⲆ: "img/night-skin8.png",
    ⵠⵠⵠⵠⵠⵠΔ: "img/day-skin9.png",
    ΔⲆⲆΔΔᐃⵠ: "img/night-skin9.png",
    Ⲇⵠᐃᐃⵠᐃⵠ: "img/day-skin10.png",
    ᐃᐃⵠᐃᐃᐃⲆ: "img/night-skin10.png",
    ⵠⵠΔⲆⲆⵠⲆ: "img/day-skin11.png",
    ΔᐃᐃᐃⵠⲆᐃ: "img/night-skin11.png",
    ᐃᐃΔΔᐃⵠⲆ: "img/day-skin12.png",
    ᐃᐃⵠⲆⲆⵠⲆ: "img/night-skin12.png",
    ᐃⵠⵠⵠΔᐃΔ: "img/day-skin13.png",
    ⵠᐃΔⵠᐃΔⲆ: "img/night-skin13.png",
    ΔⲆⵠΔᐃⵠⵠ: "img/day-skin14.png",
    ⲆⲆⲆⵠⲆᐃᐃ: "img/night-skin14.png",
    ⵠᐃⵠᐃΔᐃⵠ: "img/day-skin15.png",
    ⵠⵠⵠΔΔⵠΔ: "img/night-skin15.png",
    ᐃᐃⲆⲆΔᐃΔ: "img/day-skin16.png",
    ⲆᐃΔᐃᐃΔΔ: "img/night-skin16.png",
    ᐃᐃᐃΔΔᐃᐃ: "img/day-skin17.png",
    Δⵠᐃⵠⵠᐃᐃ: "img/night-skin17.png",
    ᐃᐃᐃⵠⲆⲆⲆ: "img/day-skin18.png",
    ⲆⲆᐃᐃⲆⵠΔ: "img/night-skin18.png",
    ΔᐃΔᐃⲆⵠΔ: "img/day-skin19.png",
    ⵠΔᐃⵠᐃᐃΔ: "img/night-skin19.png",
    ⵠⲆΔᐃΔⵠΔ: "img/day-skin20.png",
    ᐃⲆᐃⲆΔᐃⲆ: "img/night-skin20.png",
    ⲆᐃⲆᐃΔᐃΔ: "img/day-skin21.png",
    ⵠⵠᐃⵠΔᐃᐃ: "img/night-skin21.png",
    ᐃΔⲆⲆΔⲆⲆ: "img/day-skin22.png",
    ⲆⵠᐃⲆΔΔⵠ: "img/night-skin22.png",
    ⲆᐃⵠᐃᐃᐃⲆ: "img/day-skin23.png",
    ᐃΔⵠᐃΔᐃⵠ: "img/night-skin23.png",
    ΔⵠⲆⵠᐃᐃᐃ: "img/day-skin24.png",
    ⵠᐃᐃΔᐃⵠⵠ: "img/night-skin24.png",
    ⲆΔΔⵠⵠΔΔ: "img/day-skin25.png",
    ⲆΔΔᐃᐃⲆⲆ: "img/night-skin25.png",
    ΔᐃⵠⲆⲆΔⵠ: "img/day-skin26.png",
    ⲆⵠᐃΔΔΔⲆ: "img/night-skin26.png",
    ᐃⲆⲆⲆᐃⲆⲆ: "img/day-skin27.png",
    ΔⲆΔΔⲆΔⵠ: "img/night-skin27.png",
    ᐃⵠⵠⵠᐃⵠⲆ: "img/day-skin28.png",
    ⲆⵠᐃⲆⲆΔᐃ: "img/night-skin28.png",
    ᐃᐃΔᐃᐃⵠⵠ: "img/day-skin29.png",
    ⵠⲆⲆⲆⵠᐃⵠ: "img/night-skin29.png",
    ⲆⲆⵠⲆⵠᐃⲆ: "img/day-skin30.png",
    ⲆⵠⲆᐃΔⲆⲆ: "img/night-skin30.png",
    ⵠᐃⲆⲆⵠᐃᐃ: "img/day-skin31.png",
    ᐃⵠⵠⵠᐃⲆᐃ: "img/night-skin31.png",
    ΔⵠᐃΔⲆⵠΔ: "img/day-skin32.png",
    ᐃΔᐃΔⵠΔⵠ: "img/night-skin32.png",
    ⵠᐃⵠᐃⲆᐃᐃ: "img/day-skin33.png",
    ᐃΔⵠⲆΔⵠΔ: "img/night-skin33.png",
    ΔⲆᐃⲆΔΔⲆ: "img/day-skin34.png",
    ⵠΔᐃΔᐃⲆᐃ: "img/night-skin34.png",
    ⲆΔΔᐃΔⵠⵠ: "img/day-skin35.png",
    ⵠⵠΔᐃᐃΔⵠ: "img/night-skin35.png",
    ⲆΔᐃⲆᐃΔⲆ: "img/day-skin36.png",
    ᐃᐃᐃⲆᐃⵠΔ: "img/night-skin36.png",
    ᐃΔⵠΔΔⲆⲆ: "img/day-skin37.png",
    ⵠⲆⵠᐃⲆΔᐃ: "img/night-skin37.png",
    ⵠⵠⲆⵠᐃΔⲆ: "img/day-skin38.png",
    ⲆΔΔΔΔⵠⵠ: "img/night-skin38.png",
    ᐃⲆⵠΔⲆᐃⲆ: "img/day-skin39.png",
    ⲆⲆᐃⲆΔⵠᐃ: "img/night-skin39.png",
    ᐃⲆⵠΔΔⵠⲆ: "img/day-skin40.png",
    ᐃⵠᐃⲆⲆᐃᐃ: "img/night-skin40.png",
    ⵠⲆⵠᐃᐃᐃᐃ: "img/day-skin41.png",
    ⵠⵠⲆᐃΔᐃⵠ: "img/night-skin41.png",
    ⵠᐃᐃⲆΔⲆⲆ: "img/day-skin42.png",
    ᐃⲆᐃⲆⵠᐃᐃ: "img/night-skin42.png",
    ΔᐃⵠᐃⲆⵠⵠ: "img/day-skin43.png",
    ΔⵠⵠⵠΔᐃΔ: "img/night-skin43.png",
    ᐃⵠⲆΔᐃᐃⲆ: "img/day-skin44.png",
    ΔⵠⲆΔⲆΔΔ: "img/night-skin44.png",
    ⲆᐃⵠΔⵠⲆΔ: "img/day-skin45.png",
    ⲆᐃⵠᐃΔⵠⵠ: "img/night-skin45.png",
    ΔⲆⵠⵠⵠⲆⵠ: "img/day-skin46.png",
    ⵠᐃᐃᐃᐃⲆᐃ: "img/night-skin46.png",
    ⵠⵠⲆΔⵠⲆⲆ: "img/day-skin47.png",
    ⲆᐃⲆⲆᐃⵠΔ: "img/night-skin47.png",
    ΔᐃᐃΔᐃⲆⵠ: "img/day-skin48.png",
    ΔⲆΔᐃᐃΔΔ: "img/night-skin48.png",
    ⵠΔⵠᐃⵠⲆⲆ: "img/day-skin49.png",
    ΔⲆⲆΔⲆⲆⲆ: "img/night-skin49.png",
    ΔΔⵠⲆᐃⲆⲆ: "img/day-skin50.png",
    ⲆⵠⵠⲆΔⵠⵠ: "img/night-skin50.png",
    ⵠⲆⵠᐃᐃⲆⲆ: "img/day-skin51.png",
    ⵠᐃᐃⵠⵠᐃΔ: "img/night-skin51.png",
    ⵠⵠΔᐃᐃΔΔ: "img/day-skin52.png",
    ᐃΔⵠⲆⲆΔⲆ: "img/night-skin52.png",
    ⵠⵠⵠⲆⲆΔⵠ: "img/day-skin53.png",
    ⲆⲆⵠⲆⲆⵠⵠ: "img/night-skin53.png",
    ΔΔⵠᐃᐃᐃⲆ: "img/day-skin54.png",
    ⲆⲆⵠⵠᐃΔⲆ: "img/night-skin54.png",
    ᐃⲆᐃᐃᐃⵠΔ: "img/day-skin55.png",
    ⲆⲆᐃᐃⵠᐃᐃ: "img/night-skin55.png",
    ᐃᐃᐃᐃΔΔⵠ: "img/day-skin56.png",
    ᐃᐃΔΔⲆᐃᐃ: "img/night-skin56.png",
    ⵠΔᐃⵠΔⵠΔ: "img/day-skin57.png",
    ΔⲆⲆⲆⲆΔⵠ: "img/night-skin57.png",
    ⵠᐃΔⵠⵠᐃⲆ: "img/day-skin58.png",
    ⲆᐃΔᐃⵠΔⲆ: "img/night-skin58.png",
    ΔᐃⲆΔΔΔᐃ: "img/day-skin59.png",
    ΔⵠΔᐃΔⵠⵠ: "img/night-skin59.png",
    ΔⵠⲆⵠⲆᐃΔ: "img/day-skin60.png",
    ᐃᐃⵠⵠΔΔᐃ: "img/night-skin60.png",
    ᐃΔⵠΔⵠⲆΔ: "img/day-skin61.png",
    ⲆᐃᐃᐃΔΔᐃ: "img/night-skin61.png",
    ΔⵠⵠⵠⲆΔⲆ: "img/day-skin62.png",
    ⵠⲆΔᐃⵠⲆΔ: "img/night-skin62.png",
    ΔΔⵠᐃΔⵠⵠ: "img/day-skin63.png",
    ⲆᐃΔⵠⵠⲆᐃ: "img/night-skin63.png",
    ⵠᐃΔⵠᐃⲆᐃ: "img/day-skin64.png",
    ⲆⲆⵠᐃᐃⲆᐃ: "img/night-skin64.png",
    ⵠΔⵠΔⲆⵠⲆ: "img/day-skin65.png",
    ⲆⲆᐃᐃΔᐃⲆ: "img/night-skin65.png",
    ⵠΔⵠᐃⲆΔΔ: "img/day-skin66.png",
    ΔⵠⲆΔΔΔⲆ: "img/night-skin66.png",
    ΔⲆΔⲆⵠᐃⵠ: "img/day-skin67.png",
    ᐃᐃⲆΔᐃᐃᐃ: "img/night-skin67.png",
    Δᐃⵠⵠᐃᐃⵠ: "img/day-skin68.png",
    ΔⵠΔΔᐃᐃᐃ: "img/night-skin68.png",
    ⲆⵠΔⲆᐃΔᐃ: "img/day-skin69.png",
    ΔⵠⲆⵠᐃΔⵠ: "img/night-skin69.png",
    ᐃᐃΔᐃⲆⲆΔ: "img/day-skin70.png",
    ⵠⲆΔⵠᐃΔᐃ: "img/night-skin70.png",
    ᐃⵠᐃⵠᐃⵠⲆ: "img/day-skin71.png",
    ⲆⲆΔⵠΔᐃᐃ: "img/night-skin71.png",
    ΔⵠⲆᐃⵠᐃᐃ: "img/day-skin72.png",
    ΔΔΔᐃᐃΔⲆ: "img/night-skin72.png",
    ⵠΔⵠΔⲆⲆΔ: "img/day-skin73.png",
    ᐃⵠⵠⵠⵠΔⵠ: "img/night-skin73.png",
    ⲆⲆⵠⵠΔΔⵠ: "img/day-skin74.png",
    ΔⵠⵠⵠΔΔⵠ: "img/night-skin74.png",
    ⵠⲆⵠᐃΔΔΔ: "img/day-skin75.png",
    ΔΔᐃΔⲆᐃⲆ: "img/night-skin75.png",
    ΔΔᐃⲆⲆⲆᐃ: "img/day-skin76.png",
    ΔⲆⵠΔⵠΔⲆ: "img/night-skin76.png",
    Ⲇᐃᐃⵠⵠⵠⵠ: "img/day-skin77.png",
    ⵠΔᐃⵠⲆΔⲆ: "img/night-skin77.png",
    ⵠⲆⵠᐃⵠᐃⲆ: "img/day-skin78.png",
    ΔⵠⲆⵠⵠⲆΔ: "img/night-skin78.png",
    ⵠΔⵠΔⵠⲆⲆ: "img/day-skin79.png",
    ᐃⲆⵠᐃᐃΔᐃ: "img/night-skin79.png",
    ⵠᐃΔⲆⲆⵠΔ: "img/day-skin80.png",
    ᐃᐃᐃⲆⵠⵠⵠ: "img/night-skin80.png",
    ᐃΔⲆᐃΔⲆⵠ: "img/day-skin81.png",
    ⵠΔΔᐃⲆΔᐃ: "img/night-skin81.png",
    ΔⲆᐃΔⲆⲆΔ: "img/day-skin82.png",
    ᐃⲆⲆⲆᐃΔΔ: "img/night-skin82.png",
    ⲆᐃⲆᐃᐃⲆΔ: "img/day-skin83.png",
    ⵠΔⲆⲆᐃᐃⵠ: "img/night-skin83.png",
    ⵠⲆⵠⵠΔᐃΔ: "img/day-skin84.png",
    ΔΔⲆⲆΔΔⲆ: "img/night-skin84.png",
    ᐃⲆᐃᐃΔᐃᐃ: "img/day-skin85.png",
    ΔᐃⲆᐃⵠⲆᐃ: "img/night-skin85.png",
    ⵠᐃⲆᐃⵠⲆᐃ: "img/day-skin86.png",
    ⵠⲆᐃⵠⵠⵠᐃ: "img/night-skin86.png",
    ᐃⵠⲆΔⵠⵠⲆ: "img/day-skin87.png",
    ᐃⲆᐃΔᐃⲆⲆ: "img/night-skin87.png",
    ⵠⲆΔⵠΔⵠᐃ: "img/day-skin88.png",
    ᐃΔᐃⲆᐃᐃⵠ: "img/night-skin88.png",
    ⵠᐃⵠⵠⵠⲆΔ: "img/day-skin89.png",
    ⲆⲆᐃⵠⵠΔⲆ: "img/night-skin89.png",
    ΔΔΔⲆᐃⵠⲆ: "img/day-skin90.png",
    ⲆᐃⵠⵠΔΔⲆ: "img/night-skin90.png",
    ⵠⵠΔⲆⲆΔΔ: "img/day-skin91.png",
    ⵠᐃⲆⲆΔᐃΔ: "img/night-skin91.png",
    Ⲇⵠᐃᐃᐃⵠⵠ: "img/day-skin92.png",
    ΔΔᐃⲆⵠⵠᐃ: "img/night-skin92.png",
    ᐃᐃⵠⵠⵠᐃⲆ: "img/day-skin93.png",
    ᐃΔⲆⲆⲆⲆᐃ: "img/night-skin93.png",
    ΔⲆⲆⵠⲆΔᐃ: "img/day-skin94.png",
    ⲆΔᐃΔΔⲆⵠ: "img/night-skin94.png",
    ⲆⵠΔⵠⲆᐃΔ: "img/day-skin95.png",
    ᐃᐃⲆᐃⲆᐃᐃ: "img/night-skin95.png",
    ᐃΔΔΔⲆΔⵠ: "img/day-skin96.png",
    ᐃⲆΔΔᐃΔⵠ: "img/night-skin96.png",
    ᐃᐃⵠΔⲆᐃᐃ: "img/day-skin97.png",
    ΔⵠΔΔΔⵠⵠ: "img/night-skin97.png",
    ⵠⲆⲆΔⲆᐃⲆ: "img/day-skin98.png",
    ⲆᐃΔΔᐃⲆⲆ: "img/night-skin98.png",
    ⵠᐃΔᐃⵠⲆⵠ: "img/day-skin99.png",
    ⵠⵠⵠΔᐃΔΔ: "img/night-skin99.png",
    ᐃⵠⵠΔⵠᐃΔ: "img/day-skin100.png",
    ΔᐃΔⵠⲆⲆΔ: "img/night-skin100.png",
    ⲆᐃᐃΔᐃⲆᐃ: "img/day-skin101.png",
    ⲆⵠⲆⵠᐃᐃᐃ: "img/night-skin101.png",
    ᐃᐃΔΔΔⲆⲆ: "img/day-skin102.png",
    ⵠⲆⲆⵠᐃⵠΔ: "img/night-skin102.png",
    ⵠⲆΔᐃⲆⵠⲆ: "img/day-skin103.png",
    ⲆᐃⲆΔᐃⵠⵠ: "img/night-skin103.png",
    ⲆΔⲆⵠΔΔⵠ: "img/day-skin104.png",
    ⵠⲆⲆⲆΔⵠᐃ: "img/night-skin104.png",
    ⵠᐃⵠⵠΔⵠⵠ: "img/day-skin105.png",
    ⵠΔⵠⵠΔΔⵠ: "img/night-skin105.png",
    ⲆⲆΔⲆⵠⲆᐃ: "img/day-skin106.png",
    ᐃⵠⵠᐃΔΔⲆ: "img/night-skin106.png",
    ΔⵠΔⲆⲆⲆΔ: "img/day-skin107.png",
    ΔⲆⵠⵠΔⵠᐃ: "img/night-skin107.png",
    ⵠΔΔⲆᐃΔᐃ: "img/day-skin108.png",
    ⲆⵠΔᐃᐃⲆⵠ: "img/night-skin108.png",
    ΔⵠᐃⵠⵠΔⲆ: "img/day-skin109.png",
    ᐃᐃᐃⲆΔΔᐃ: "img/night-skin109.png",
    ⲆᐃᐃᐃᐃⵠⲆ: "img/day-skin110.png",
    ⲆⵠᐃΔⵠⲆᐃ: "img/night-skin110.png",
    ΔᐃⵠΔΔⲆⲆ: "img/day-skin111.png",
    ᐃᐃᐃΔⲆΔⵠ: "img/night-skin111.png",
    ᐃⲆΔΔⲆᐃⲆ: "img/day-skin112.png",
    ΔⲆⲆᐃᐃⵠΔ: "img/night-skin112.png",
    ⵠⲆΔⵠⵠⲆΔᐃΔ: "img/day-skin113.png",
    ΔᐃᐃⲆΔΔⵠΔⲆ: "img/night-skin113.png",
    ⵠᐃΔⵠⲆⵠⲆ: "img/day-skin114.png",
    ⲆΔΔⲆΔⲆΔ: "img/night-skin114.png",
    ⵠⲆⵠⵠΔⵠⵠ: "img/day-skin115.png",
    ⲆΔᐃΔᐃΔⵠ: "img/night-skin115.png",
    ⵠΔᐃΔⲆᐃⲆ: "img/day-skin116.png",
    ⵠΔⲆᐃᐃΔⵠ: "img/night-skin116.png",
    ᐃᐃⲆⵠⵠᐃⲆ: "img/day-skin117.png",
    ⵠⲆⲆᐃⵠᐃⲆ: "img/night-skin117.png",
    ⵠᐃⵠᐃⵠᐃⵠ: "img/day-skin118.png",
    ΔⲆⲆΔⵠⲆⵠ: "img/night-skin118.png",
    ⵠᐃⵠᐃᐃⲆΔ: "img/day-skin119.png",
    ΔⵠⲆⵠᐃᐃΔ: "img/night-skin119.png",
    ᐃⵠⲆⲆⵠᐃᐃ: "img/day-skin120.png",
    Ⲇⵠⵠᐃⵠⵠᐃ: "img/night-skin120.png",
    ⲆⲆΔⵠⲆᐃⲆ: "img/day-skin121.png",
    ΔⲆⲆᐃⵠⵠⵠ: "img/night-skin121.png",
    ᐃᐃⲆⵠⲆΔⵠ: "img/day-skin122.png",
    ᐃᐃⵠⲆⲆΔⵠ: "img/night-skin122.png",
    ⵠⲆᐃⲆⵠΔᐃ: "img/day-skin123.png",
    ⵠⵠⲆⲆΔᐃΔ: "img/night-skin123.png",
    ⲆⵠᐃᐃΔᐃⵠ: "img/day-skin124.png",
    ⵠᐃⵠⲆΔΔᐃ: "img/night-skin124.png",
    ΔⵠⵠᐃΔΔΔ: "img/day-skin125.png",
    ⲆⲆⲆΔⵠΔⲆ: "img/night-skin125.png",
    ⲆΔᐃⵠⵠᐃⵠ: "img/day-skin126.png",
    ΔᐃⲆΔᐃⲆᐃ: "img/night-skin126.png",
    ΔⲆᐃᐃᐃᐃⵠ: "img/day-skin127.png",
    ᐃᐃΔⵠᐃΔᐃ: "img/night-skin127.png",
    ⲆᐃΔⲆΔⵠΔ: "img/day-skin128.png",
    ⵠᐃⲆΔⵠⵠⲆ: "img/night-skin128.png",
    ⵠΔⲆⵠⵠΔᐃ: "img/day-skin129.png",
    ⲆⲆⲆΔⲆⵠΔ: "img/night-skin129.png",
    ΔΔⲆΔⵠⵠᐃ: "img/day-skin130-1.png",
    ⵠΔΔⲆⵠΔΔ: "img/night-skin130-1.png",
    ᐃⵠᐃⵠⲆᐃⲆ: "img/day-skin131.png",
    ⲆΔⵠΔᐃⵠᐃ: "img/night-skin131.png",
    ΔⲆᐃⵠⵠⵠΔ: "img/day-skin132.png",
    ΔΔⵠᐃᐃⲆⵠ: "img/night-skin132.png",
    ΔΔΔᐃΔⲆⲆ: "img/day-skin133.png",
    ΔᐃⵠᐃΔᐃᐃ: "img/night-skin133.png",
    ⵠᐃΔⵠΔΔⵠ: "img/day-skin134.png",
    ᐃΔⵠⵠⲆᐃᐃ: "img/night-skin134.png",
    ᐃⲆⵠΔΔⲆⲆ: "img/day-skin135.png",
    ᐃⲆⵠⲆⵠΔΔ: "img/night-skin135.png",
    ⲆⲆⲆᐃΔⵠΔ: "img/day-skin136.png",
    ⵠⵠΔⲆΔᐃΔ: "img/night-skin136.png",
    ⲆⵠⲆΔⵠⲆⵠ: "img/day-skin137.png",
    ⲆᐃΔΔⵠⲆᐃ: "img/night-skin137.png",
    ΔΔⲆⵠᐃⲆⵠ: "img/day-skin138.png",
    ⵠΔⵠΔᐃⵠⵠ: "img/night-skin138.png",
    ᐃⵠⲆΔⲆⲆⲆ: "img/day-skin139.png",
    ⲆⵠⵠⵠⲆⵠᐃ: "img/night-skin139.png",
    ᐃⵠᐃⵠᐃΔⵠ: "img/day-skin140.png",
    ΔΔⵠᐃⲆⲆⲆ: "img/night-skin140.png",
    ⵠⵠⵠΔΔⵠᐃ: "img/day-skin141.png",
    ΔΔⵠᐃΔⲆⲆ: "img/night-skin141.png",
    ᐃᐃᐃⵠⲆᐃΔ: "img/day-skin142.png",
    ⵠᐃΔⵠΔⵠᐃ: "img/night-skin142.png",
    ᐃΔⵠΔΔΔΔ: "img/day-skin143.png",
    ⲆⵠⲆⲆᐃΔⲆ: "img/night-skin143.png",
    ⲆΔⲆⲆⲆΔⵠ: "img/day-skin144.png",
    ⵠⲆΔΔΔΔᐃ: "img/night-skin144.png",
    ⲆⲆᐃᐃⲆⲆⲆ: "img/day-skin145.png",
    ΔⲆⵠⵠΔᐃⵠ: "img/night-skin145.png",
    ᐃⲆⵠΔΔΔΔ: "img/day-skin146.png",
    ⵠΔⲆᐃᐃΔᐃ: "img/night-skin146.png",
    ⵠⲆᐃⲆⲆΔⵠ: "img/day-skin147.png",
    ᐃΔⲆⵠᐃᐃⲆ: "img/night-skin147.png",
    ΔⲆΔΔΔΔⵠ: "img/day-skin148.png",
    ⲆΔΔᐃΔⵠᐃ: "img/night-skin148.png",
    ⲆⵠΔΔⵠⵠᐃ: "img/day-skin149.png",
    ΔᐃᐃⵠΔᐃⵠ: "img/night-skin149.png",
    ΔⲆⲆᐃΔⵠⵠ: "img/day-skin150.png",
    ⵠⵠⵠᐃⲆΔⵠ: "img/night-skin150.png",
    ⵠⲆⲆᐃⲆⲆⲆ: "img/day-skin151.png",
    ᐃᐃⲆᐃⵠΔⲆ: "img/night-skin151.png",
    ⵠᐃⵠⲆᐃⲆⲆ: "img/day-skin152.png",
    ⵠΔΔⵠⵠΔᐃ: "img/night-skin152.png",
    ⲆΔⲆᐃΔᐃᐃ: "img/day-skin153.png",
    ⵠⵠⲆΔⵠΔⲆ: "img/night-skin153.png",
    ⲆⲆⲆᐃᐃⲆⲆ: "img/day-skin154.png",
    ⲆᐃᐃⲆᐃⵠΔ: "img/night-skin154.png",
    ⵠᐃᐃΔΔⵠΔ: "img/day-skin155.png",
    ⵠᐃⵠᐃᐃΔⲆ: "img/night-skin155.png",
    ⲆⵠΔΔᐃᐃΔ: "img/day-skin156.png",
    ΔΔΔⵠⲆΔⲆ: "img/night-skin156.png",
    ΔⵠΔⵠΔⲆⵠ: "img/day-skin157.png",
    ᐃᐃⲆᐃⵠⲆⵠ: "img/night-skin157.png",
    ΔΔΔⵠΔⵠΔ: "img/day-skin158.png",
    ᐃⵠΔᐃⲆᐃᐃ: "img/night-skin158.png",
    ⵠᐃΔᐃⲆⲆΔ: "img/day-skin159.png",
    ΔᐃᐃΔᐃⵠⲆ: "img/night-skin159.png",
    ᐃᐃᐃⲆⲆⲆᐃ: "img/day-skin160.png",
    ΔⲆⲆᐃⲆΔΔ: "img/night-skin160.png",
    ΔᐃⵠΔⵠⲆⲆ: "img/day-skin161.png",
    Δⵠⵠᐃᐃᐃⵠ: "img/night-skin161.png",
    ᐃΔⲆᐃⲆΔΔ: "img/day-skin162.png",
    ⲆⲆᐃⵠⵠⲆⲆ: "img/night-skin162.png",
    ⲆΔⵠⵠΔΔᐃ: "img/day-skin163.png",
    ⵠΔⲆⵠᐃⲆΔ: "img/night-skin163.png",
    ᐃⲆᐃΔⵠⵠΔ: "img/day-skin164.png",
    ᐃⲆⵠᐃᐃᐃⵠ: "img/night-skin164.png",
    ⵠᐃⵠⲆⵠⵠⲆ: "img/day-skin165.png",
    ᐃⵠΔⵠΔⵠⵠ: "img/night-skin165.png",
    ΔᐃΔⵠᐃⲆⵠ: "img/day-skin166.png",
    ᐃⲆⲆΔⵠⵠⵠ: "img/night-skin166.png",
    ⵠᐃΔᐃᐃΔⲆ: "img/day-skin167.png",
    ⲆⵠᐃⵠᐃΔⵠ: "img/night-skin167.png",
    ᐃΔⵠᐃΔᐃΔ: "img/day-skin168.png",
    ⲆΔⲆⲆⲆΔᐃ: "img/night-skin168.png",
    ⲆΔⵠⵠΔⵠⵠ: "img/day-skin169.png",
    ⲆⲆΔⲆⲆⲆⵠ: "img/night-skin169.png",
    ΔᐃᐃᐃᐃⵠⲆ: "img/day-skin170.png",
    ⵠⵠᐃⵠⲆᐃⵠ: "img/night-skin170.png",
    ᐃⵠⵠΔᐃⲆⲆ: "img/day-skin171.png",
    ⵠⵠⵠᐃⲆⵠᐃ: "img/night-skin171.png",
    ΔⵠᐃⵠΔⵠΔ: "img/day-skin172.png",
    ⵠⲆⵠⲆⵠᐃⵠ: "img/night-skin172.png",
    ⲆΔⵠⵠⲆᐃΔ: "img/day-skin173.png",
    ⲆⲆⵠⲆⵠⵠᐃ: "img/night-skin173.png",
    ΔΔⲆΔΔⲆΔ: "img/day-skin174.png",
    ΔⵠⵠⲆⲆΔΔ: "img/night-skin174.png",
    ⵠΔⵠΔⵠⵠⵠ: "img/day-skin175.png",
    ⲆⵠⲆⲆΔⲆΔ: "img/night-skin175.png",
    ᐃᐃⵠⵠⲆΔⵠ: "img/day-skin176.png",
    ᐃΔΔΔⵠΔⵠ: "img/night-skin176.png",
    ΔᐃΔᐃⲆΔᐃ: "img/day-skin177.png",
    ΔⵠᐃⵠⲆΔΔ: "img/night-skin177.png",
    ΔΔⵠⵠᐃⲆⲆ: "img/day-skin178.png",
    ⲆΔΔⵠΔⵠⵠ: "img/night-skin178.png",
    ⲆⵠᐃⵠⲆⲆⵠ: "img/day-skin179.png",
    ⲆᐃⲆⲆᐃⲆⲆ: "img/night-skin179.png",
    ᐃΔⵠⲆⲆⵠΔ: "img/day-skin180.png",
    ⵠᐃⲆⵠⵠⲆᐃ: "img/night-skin180.png",
    ⲆΔⲆᐃΔⲆΔ: "img/day-skin181.png",
    ⲆⵠΔⵠⲆⵠⵠ: "img/night-skin181.png",
    ΔΔⵠΔⲆᐃⲆ: "img/day-skin182.png",
    ᐃⲆⲆⲆⵠΔᐃ: "img/night-skin182.png",
    ΔⲆⵠⵠⵠⲆⲆ: "img/day-skin183.png",
    ᐃⲆᐃⲆⲆΔᐃ: "img/night-skin183.png",
    ⵠΔΔᐃᐃᐃΔ: "img/day-skin184.png",
    ᐃᐃⲆΔΔⵠⵠ: "img/night-skin184.png",
    ⲆⲆⵠΔⲆᐃΔ: "img/day-skin185.png",
    ⲆⲆⵠⲆᐃΔⵠ: "img/night-skin185.png",
    ΔⲆⵠᐃΔⵠⲆ: "img/day-skin186.png",
    ⲆⵠⵠⲆΔⵠΔ: "img/night-skin186.png",
    ⵠⲆΔⲆΔΔⵠ: "img/day-skin187.png",
    ⵠᐃⲆΔᐃⲆⵠ: "img/night-skin187.png",
    ᐃⲆⲆᐃⵠᐃⵠ: "img/day-skin188.png",
    ᐃΔⵠⲆⵠΔⲆ: "img/night-skin188.png",
    ᐃⵠΔⲆⵠΔⵠ: "img/day-skin189.png",
    ⵠᐃⵠⵠⲆᐃΔ: "img/night-skin189.png",
    ΔⵠⵠᐃⵠᐃΔ: "img/day-skin190.png",
    ᐃᐃΔⲆΔⲆᐃ: "img/night-skin190.png",
    ⵠΔᐃΔᐃΔΔ: "img/day-skin191.png",
    ⵠᐃΔᐃⲆΔᐃ: "img/night-skin191.png",
    ΔⵠⵠⲆΔΔᐃ: "img/day-skin192.png",
    ⵠᐃᐃⲆΔᐃⵠ: "img/night-skin192.png",
    ⲆⵠᐃⲆΔⲆⲆ: "img/day-skin193.png",
    ⲆᐃⵠⲆⲆΔᐃ: "img/night-skin193.png",
    ⲆᐃᐃΔΔΔΔ: "img/day-skin194.png",
    ΔᐃⲆⲆᐃⲆΔ: "img/night-skin194.png",
    ⲆΔᐃᐃⲆΔⵠ: "img/day-skin195.png",
    ⲆⲆᐃᐃΔΔᐃ: "img/night-skin195.png",
    ⲆΔΔΔᐃΔⲆ: "img/day-skin196.png",
    ⵠᐃΔⵠⲆⲆᐃ: "img/night-skin196.png",
    Δᐃⵠᐃⵠᐃᐃ: "img/day-skin197.png",
    ΔⵠΔⵠⲆΔⲆ: "img/night-skin197.png",
    ᐃⵠⵠⲆⲆⵠⵠ: "img/day-skin198.png",
    ΔΔⲆⲆⵠΔΔ: "img/night-skin198.png",
    ⵠᐃⲆΔΔΔⲆ: "img/day-skin199.png",
    ⵠᐃⲆⲆⲆΔⲆ: "img/night-skin199.png",
    ⲆⵠᐃΔⵠⵠⲆ: "img/day-skin200.png",
    ⵠΔⵠΔⵠᐃΔ: "img/night-skin200.png",
    ⲆⲆⲆⵠⵠⲆⲆ: "img/day-skin201.png",
    ⲆΔΔΔⲆᐃⲆ: "img/night-skin201.png",
    ΔΔⵠⲆⲆⲆⵠ: "img/day-skin202.png",
    ⲆⲆᐃᐃⲆⲆΔ: "img/night-skin202.png",
    ᐃᐃⲆΔⲆΔᐃ: "img/day-skin203.png",
    ΔᐃⲆⲆⵠⲆⲆ: "img/night-skin203.png",
    ⵠΔΔᐃⵠⵠΔ: "img/day-skin204.png",
    Ⲇᐃⵠⵠᐃᐃᐃ: "img/night-skin204.png",
    ΔⲆⲆᐃᐃΔΔ: "img/day-skin205.png",
    ⲆⲆⲆⵠⵠⲆᐃ: "img/night-skin205.png",
    ⵠⵠⲆⲆᐃⲆΔ: "img/day-skin206.png",
    ᐃⵠⵠᐃⲆⲆⲆ: "img/night-skin206.png",
    ⲆⲆⲆⵠⲆΔΔ: "img/day-skin207.png",
    ΔᐃⲆᐃᐃⵠⵠ: "img/night-skin207.png",
    ΔⲆⲆᐃᐃⵠᐃ: "img/day-skin208.png",
    ΔⵠᐃᐃΔⵠᐃ: "img/night-skin208.png",
    ⵠⲆⵠⵠᐃⵠΔ: "img/day-skin209.png",
    ⲆΔⵠⲆⵠᐃⲆ: "img/night-skin209.png",
    ⵠⲆᐃΔΔⲆⵠ: "img/day-skin210.png",
    ᐃᐃⵠᐃΔᐃⵠ: "img/night-skin210.png",
    ΔⵠⵠⵠᐃⲆᐃ: "img/day-skin211.png",
    ΔⲆᐃⵠΔᐃⲆ: "img/night-skin211.png",
    ᐃᐃΔⵠⲆⵠΔ: "img/day-skin212.png",
    ᐃΔΔᐃⲆΔΔ: "img/night-skin212.png",
    ᐃⵠⵠⵠᐃⲆⲆ: "img/day-skin213.png",
    ⵠᐃᐃⲆⲆⲆΔ: "img/night-skin213.png",
    ⵠΔᐃⵠᐃⲆⲆ: "img/day-skin214.png",
    ΔⲆᐃΔⵠᐃΔ: "img/night-skin214.png",
    ΔⵠⲆⵠⲆᐃⵠ: "img/day-hand-skin0.png",
    ᐃΔΔⵠⵠᐃᐃ: "img/night-hand-skin0.png",
    ⲆⲆᐃⲆΔⲆΔ: "img/day-hand-skin1.png",
    ⲆⲆⵠⵠⵠᐃⵠ: "img/night-hand-skin1.png",
    ⲆⵠᐃᐃΔⵠΔ: "img/day-hand-skin2.png",
    ΔⲆⵠⵠⵠⵠⲆ: "img/night-hand-skin2.png",
    ᐃⵠᐃᐃΔΔΔ: "img/day-hand-skin3.png",
    ⲆⲆⲆⲆΔΔⲆ: "img/night-hand-skin3.png",
    ⵠⵠⲆᐃⲆⲆⵠ: "img/day-hand-skin4.png",
    ΔΔΔᐃΔΔⲆ: "img/night-hand-skin4.png",
    ⵠⲆⵠⲆΔⲆΔ: "img/day-hand-skin5.png",
    ⲆⲆⵠⵠⲆⵠΔ: "img/night-hand-skin5.png",
    ⵠΔⵠᐃᐃΔΔ: "img/day-hand-skin6.png",
    ⲆⲆⵠⵠΔⲆⲆⵠᐃ: "img/night-hand-skin6.png",
    ΔᐃⲆΔᐃᐃΔ: "img/day-hand-skin6.png",
    Ⲇⵠᐃⵠⵠⵠᐃ: "img/night-hand-skin6.png",
    ⲆⵠⲆⵠⲆᐃⵠ: "img/day-hand-skin8.png",
    ΔᐃⵠⵠⵠΔᐃ: "img/night-hand-skin8.png",
    ⵠⵠⲆᐃⵠΔΔ: "img/day-hand-skin9.png",
    ⵠΔⵠⲆᐃᐃΔ: "img/night-hand-skin9.png",
    ᐃᐃⲆΔⲆⵠᐃ: "img/day-hand-skin10.png",
    ⲆⲆⵠⲆᐃᐃᐃ: "img/night-hand-skin10.png",
    ᐃⵠⵠΔᐃᐃⲆ: "img/day-hand-skin11.png",
    ᐃΔⲆⵠⲆⲆᐃ: "img/night-hand-skin11.png",
    ΔᐃᐃⵠⲆΔⲆ: "img/day-hand-skin12.png",
    ⲆᐃΔΔΔᐃᐃ: "img/night-hand-skin12.png",
    ⵠΔᐃΔⲆⵠⵠ: "img/day-hand-skin13.png",
    ᐃΔΔⲆΔⵠⲆ: "img/night-hand-skin13.png",
    ⲆⲆΔⵠΔⵠΔ: "img/day-hand-skin14.png",
    ⲆⲆΔΔⵠⵠⲆ: "img/night-hand-skin14.png",
    ⵠΔΔΔᐃⵠᐃ: "img/day-hand-skin15.png",
    ΔᐃΔᐃΔΔᐃ: "img/night-hand-skin15.png",
    ⲆΔΔΔΔⲆᐃ: "img/day-hand-skin16.png",
    Δᐃⵠᐃᐃⵠᐃ: "img/night-hand-skin16.png",
    ΔΔⵠᐃⵠⲆⲆ: "img/day-hand-skin17.png",
    ᐃⲆⲆⵠΔᐃΔ: "img/night-hand-skin17.png",
    ᐃⵠΔΔⲆⵠⲆ: "img/day-hand-skin18.png",
    ΔⵠⲆΔΔΔΔ: "img/night-hand-skin18.png",
    ⵠⵠᐃⲆⲆⵠΔ: "img/day-hand-skin19.png",
    ⲆᐃΔΔⵠⵠΔ: "img/night-hand-skin19.png",
    ⵠⵠᐃᐃΔⲆΔ: "img/day-hand-skin20.png",
    ᐃΔⵠᐃᐃᐃⲆ: "img/night-hand-skin20.png",
    ⵠᐃⲆᐃⵠΔⵠ: "img/day-hand-skin21.png",
    ⲆⲆᐃᐃⵠⵠᐃ: "img/night-hand-skin21.png",
    ⵠΔⵠⲆⵠᐃⵠ: "img/day-hand-skin22.png",
    ⲆⲆᐃⵠᐃΔᐃ: "img/night-hand-skin22.png",
    ᐃⲆⲆⵠΔⵠⵠ: "img/day-hand-skin23.png",
    ᐃⵠⵠᐃⵠⵠⲆ: "img/night-hand-skin23.png",
    ᐃⲆΔΔⵠⵠⵠ: "img/day-hand-skin24.png",
    ⲆᐃⵠⲆⵠⲆⲆ: "img/night-hand-skin24.png",
    ᐃⲆΔᐃⵠΔⵠ: "img/day-hand-skin25.png",
    ⲆᐃⲆᐃⲆⵠΔ: "img/night-hand-skin25.png",
    ⲆⲆᐃⵠΔⵠⵠ: "img/day-hand-skin26.png",
    ΔΔΔΔᐃᐃᐃ: "img/night-hand-skin26.png",
    ᐃⵠᐃⲆⵠᐃⲆ: "img/day-hand-skin27.png",
    ΔⲆⵠⵠᐃᐃΔ: "img/night-hand-skin27.png",
    ᐃⲆⵠᐃⵠΔΔ: "img/day-hand-skin28.png",
    ⵠⲆᐃΔⵠⵠᐃ: "img/night-hand-skin28.png",
    ᐃΔΔΔΔᐃᐃ: "img/day-hand-skin29.png",
    ⲆᐃΔᐃⵠᐃⵠ: "img/night-hand-skin29.png",
    ⵠⵠⲆᐃΔⲆⵠ: "img/day-hand-skin30.png",
    ΔⵠⲆⲆⲆᐃᐃ: "img/night-hand-skin30.png",
    ⲆⲆΔⲆⵠΔⲆ: "img/day-hand-skin31.png",
    ΔΔⲆⵠⲆΔΔ: "img/night-hand-skin31.png",
    ᐃⵠΔⵠⵠᐃᐃ: "img/day-hand-skin32.png",
    ᐃᐃΔΔⲆⵠⲆ: "img/night-hand-skin32.png",
    ⵠΔⵠΔⲆΔΔ: "img/day-hand-skin33.png",
    ᐃⵠⵠΔⲆΔΔ: "img/night-hand-skin33.png",
    ᐃⵠⵠΔⵠΔⲆ: "img/day-hand-skin34.png",
    ΔΔⵠᐃⲆΔⵠ: "img/night-hand-skin34.png",
    ⵠⲆΔⵠⵠΔⲆ: "img/day-hand-skin35.png",
    ⲆⲆⵠᐃⲆΔΔ: "img/night-hand-skin35.png",
    ⵠᐃᐃΔᐃⲆᐃ: "img/day-hand-skin36.png",
    ⵠⵠⲆΔᐃΔⵠ: "img/night-hand-skin36.png",
    ⲆᐃⲆⲆᐃΔⲆ: "img/day-hand-skin37.png",
    ΔⲆᐃⲆⲆᐃⵠ: "img/night-hand-skin37.png",
    ⲆⲆⵠⵠⵠⵠⵠ: "img/day-hand-skin38.png",
    ΔⲆᐃⵠⵠᐃⵠ: "img/night-hand-skin38.png",
    ⲆᐃⵠᐃᐃⲆΔ: "img/day-hand-skin39.png",
    ᐃΔᐃΔᐃΔⵠ: "img/night-hand-skin39.png",
    ⲆⲆΔΔᐃⲆΔ: "img/day-hand-skin40.png",
    ⲆⵠᐃⲆⵠⲆⲆ: "img/night-hand-skin40.png",
    ᐃᐃⵠⵠⵠΔᐃ: "img/day-hand-skin41.png",
    ΔⵠⵠᐃⲆΔⲆ: "img/night-hand-skin41.png",
    ⵠᐃΔΔΔΔᐃ: "img/day-hand-skin42.png",
    ⲆⵠΔΔΔᐃΔ: "img/night-hand-skin42.png",
    ᐃⲆⵠⵠⵠΔᐃ: "img/day-hand-skin43.png",
    ΔⵠⵠⲆⵠΔⲆ: "img/night-hand-skin43.png",
    ⲆᐃΔΔᐃᐃⵠ: "img/day-hand-skin16.png",
    ᐃᐃⲆΔᐃΔⵠ: "img/night-hand-skin16.png",
    ᐃⲆᐃⲆⵠⲆΔ: "img/day-hand-skin45.png",
    ⵠⲆΔΔᐃⵠⲆ: "img/night-hand-skin45.png",
    ΔᐃⲆⵠᐃⲆᐃ: "img/day-hand-skin46.png",
    ᐃᐃⵠΔᐃⲆⵠ: "img/night-hand-skin46.png",
    ΔⵠΔΔΔᐃΔ: "img/day-hand-skin47.png",
    ⲆΔΔᐃΔᐃⲆ: "img/night-hand-skin47.png",
    ΔⵠⲆΔᐃⵠᐃ: "img/day-hand-skin48.png",
    ᐃⵠᐃⲆΔᐃΔ: "img/night-hand-skin48.png",
    ΔΔΔⲆΔⲆⵠ: "img/day-hand-skin49.png",
    ᐃⵠΔᐃΔΔⲆ: "img/night-hand-skin49.png",
    ⲆΔΔⲆΔⵠΔ: "img/day-hand-skin49.png",
    ⵠⲆΔᐃΔⲆⵠ: "img/night-hand-skin49.png",
    ⵠⵠⲆⵠⲆΔⲆ: "img/day-hand-skin51.png",
    ΔⵠᐃΔΔᐃᐃ: "img/night-hand-skin51.png",
    ⲆⲆᐃᐃᐃΔΔ: "img/day-hand-skin52.png",
    ᐃᐃᐃⲆΔᐃⵠ: "img/night-hand-skin52.png",
    ⲆᐃᐃᐃⵠΔⵠ: "img/day-hand-skin53.png",
    ᐃᐃΔΔⲆᐃΔ: "img/night-hand-skin53.png",
    ⵠⲆⵠⵠΔⲆⵠ: "img/day-hand-skin53.png",
    ⲆⲆΔᐃΔⲆⵠ: "img/night-hand-skin53.png",
    ᐃΔᐃΔⵠⲆⲆ: "img/day-hand-skin55.png",
    ⲆⵠⵠᐃⲆᐃⲆ: "img/night-hand-skin55.png",
    ⲆⵠⲆΔⲆⲆΔ: "img/day-hand-skin56.png",
    ⵠⵠⵠⵠᐃΔΔ: "img/night-hand-skin56.png",
    ᐃᐃⵠⲆⲆᐃᐃ: "img/day-hand-skin57.png",
    ΔⲆⵠᐃⵠⲆᐃ: "img/night-hand-skin57.png",
    ᐃᐃᐃⵠⲆΔⲆ: "img/day-hand-skin58.png",
    ᐃⲆΔᐃΔᐃⲆ: "img/night-hand-skin58.png",
    ΔⵠⵠΔΔΔⵠ: "img/day-hand-skin59.png",
    ⵠᐃΔⲆⵠΔΔ: "img/night-hand-skin59.png",
    ⵠⲆΔⲆᐃⵠⵠ: "img/day-hand-skin61.png",
    ⲆⲆΔΔⵠⵠᐃ: "img/night-hand-skin61.png",
    ΔᐃᐃΔⵠⲆⵠ: "img/day-hand-skin61.png",
    ΔⵠᐃⵠⲆⵠⲆ: "img/night-hand-skin61.png",
    ⲆⲆⵠⲆᐃⲆⵠ: "img/day-hand-skin62.png",
    ᐃΔᐃΔⵠᐃΔ: "img/night-hand-skin62.png",
    ⲆⵠΔΔΔⵠᐃ: "img/day-hand-skin63.png",
    ⲆⵠΔᐃⲆΔΔ: "img/night-hand-skin63.png",
    ⵠᐃᐃᐃᐃⲆⲆ: "img/day-hand-skin64.png",
    ᐃΔⵠⵠⲆⵠΔ: "img/night-hand-skin64.png",
    ⲆΔⲆⲆⵠᐃⲆ: "img/day-hand-skin65.png",
    ⵠΔⵠΔΔⵠΔ: "img/night-hand-skin65.png",
    ⵠᐃᐃⵠⵠⲆⵠ: "img/day-hand-skin66.png",
    ᐃⵠΔⲆⲆᐃᐃ: "img/night-hand-skin66.png",
    ΔᐃᐃⲆⲆᐃΔ: "img/day-hand-skin67.png",
    ⵠⵠᐃⲆᐃⲆⲆ: "img/night-hand-skin67.png",
    ⲆᐃⲆⲆᐃᐃⵠ: "img/day-hand-skin68.png",
    ᐃⵠⲆΔΔⲆΔ: "img/night-hand-skin68.png",
    ⵠΔᐃⲆⵠⵠⲆ: "img/day-hand-skin69.png",
    ⲆᐃⲆⲆⲆΔⵠ: "img/night-hand-skin69.png",
    ΔⵠⲆⲆᐃⵠᐃ: "img/day-hand-skin70.png",
    ⲆᐃᐃⲆⲆΔⲆ: "img/night-hand-skin70.png",
    ⵠΔⲆⲆⵠᐃΔ: "img/day-hand-skin71.png",
    ⲆⵠⲆⵠⲆⵠᐃ: "img/night-hand-skin71.png",
    ΔΔⲆᐃᐃᐃⲆ: "img/day-hand-skin72.png",
    ᐃⵠⵠⵠⲆΔᐃ: "img/night-hand-skin72.png",
    ⲆⲆΔᐃᐃⵠᐃ: "img/day-hand-skin73.png",
    ᐃⵠΔⵠᐃᐃᐃ: "img/night-hand-skin73.png",
    ᐃⲆᐃΔᐃⵠⵠ: "img/day-hand-skin74.png",
    ⲆⵠΔⲆⲆᐃⲆ: "img/night-hand-skin74.png",
    ⲆⵠⲆⵠᐃΔⲆ: "img/day-hand-skin75.png",
    ⵠⵠⵠⵠΔᐃⵠ: "img/night-hand-skin75.png",
    ΔΔΔΔΔⲆΔ: "img/day-hand-skin76.png",
    ⲆᐃᐃⵠᐃᐃΔ: "img/night-hand-skin76.png",
    ⲆᐃⲆᐃⲆⲆⲆ: "img/day-hand-skin77.png",
    ⲆᐃⲆⲆΔᐃⵠ: "img/night-hand-skin77.png",
    ᐃⵠΔΔⵠⵠⲆ: "img/day-hand-skin78.png",
    ⲆΔⲆᐃⲆΔⲆ: "img/night-hand-skin78.png",
    ⲆⲆᐃⵠᐃᐃΔ: "img/day-hand-skin79.png",
    ⲆᐃᐃⵠΔᐃΔ: "img/night-hand-skin79.png",
    ᐃᐃⵠⲆΔⵠⵠ: "img/day-hand-skin80.png",
    ΔⲆᐃΔⲆⵠⵠ: "img/night-hand-skin80.png",
    ΔⲆᐃⵠⲆΔᐃ: "img/day-hand-skin81.png",
    ΔΔⲆⵠⵠᐃΔ: "img/night-hand-skin81.png",
    ⲆᐃⵠΔⵠΔΔ: "img/day-hand-skin82.png",
    ᐃⵠᐃᐃⵠⲆᐃ: "img/night-hand-skin82.png",
    ᐃᐃΔᐃΔΔⵠ: "img/day-hand-skin83.png",
    ᐃⲆᐃⲆⲆⵠⲆ: "img/night-hand-skin83.png",
    ΔᐃⵠⵠⲆΔΔ: "img/day-hand-skin84.png",
    ⲆᐃⲆᐃΔⲆⵠ: "img/night-hand-skin84.png",
    ⲆᐃᐃᐃⲆᐃΔ: "img/day-hand-skin85.png",
    ⲆⲆⲆΔⵠⵠΔ: "img/night-hand-skin85.png",
    ⵠᐃᐃΔΔⵠⲆ: "img/day-hand-skin86.png",
    ⵠⵠⲆᐃⲆΔⲆ: "img/night-hand-skin86.png",
    ⲆⲆⵠⲆᐃᐃⵠ: "img/day-hand-skin87.png",
    ⲆΔⵠⲆⵠⲆⵠ: "img/night-hand-skin87.png",
    ᐃⲆⲆⵠΔⲆᐃ: "img/day-hand-skin88.png",
    ⲆⵠⵠⲆⵠᐃΔ: "img/night-hand-skin88.png",
    ⵠⲆⲆⵠⲆⲆᐃ: "img/day-hand-skin89.png",
    ⵠⵠᐃⲆΔᐃⲆ: "img/night-hand-skin89.png",
    ΔΔⲆⵠΔⲆᐃ: "img/day-hand-skin90.png",
    ΔⲆⵠΔᐃⲆⲆ: "img/night-hand-skin90.png",
    ⲆⵠⲆⲆⵠᐃⲆ: "img/day-hand-skin91.png",
    ᐃΔⲆⵠⵠⵠⲆ: "img/night-hand-skin91.png",
    ⲆᐃΔᐃΔΔΔ: "img/day-hand-skin92.png",
    ΔᐃΔᐃΔⵠⲆ: "img/night-hand-skin92.png",
    ⵠⵠⵠⲆᐃⲆⲆ: "img/day-hand-skin93.png",
    ΔᐃᐃⲆⲆⲆᐃ: "img/night-hand-skin93.png",
    ⲆⵠⲆΔΔᐃΔ: "img/day-hand-skin94.png",
    ⵠⲆΔⲆⲆⵠᐃ: "img/night-hand-skin94.png",
    ᐃΔⲆⵠΔΔᐃ: "img/day-hand-skin95.png",
    ᐃᐃⲆⵠⲆᐃⵠ: "img/night-hand-skin95.png",
    ⵠᐃⲆᐃⲆⲆΔ: "img/day-hand-skin96.png",
    ΔΔⵠⲆᐃΔΔ: "img/night-hand-skin96.png",
    ᐃΔΔⲆⲆᐃⲆ: "img/day-hand-skin97.png",
    ΔᐃⵠΔᐃΔⵠ: "img/night-hand-skin97.png",
    ⲆⲆⲆⲆⲆⵠᐃ: "img/day-hand-skin98.png",
    ᐃⲆΔᐃⲆΔⵠ: "img/night-hand-skin98.png",
    ΔⲆⲆΔⲆⵠⵠ: "img/day-hand-skin99.png",
    ᐃⵠΔᐃΔᐃΔ: "img/night-hand-skin99.png",
    ⵠⲆᐃⲆΔⵠⵠ: "img/day-hand-skin100.png",
    ⵠΔⵠⵠⵠⵠΔ: "img/night-hand-skin100.png",
    ⲆⲆⵠᐃΔⲆᐃ: "img/day-hand-skin101.png",
    ᐃⵠΔᐃⲆⵠⲆ: "img/night-hand-skin101.png",
    ⲆᐃⲆⵠΔⵠᐃ: "img/day-hand-skin102.png",
    ⵠⲆⵠᐃΔⵠᐃ: "img/night-hand-skin102.png",
    ⲆΔⵠⵠⲆᐃⲆ: "img/day-hand-skin103.png",
    ⵠⵠᐃᐃᐃⲆⲆ: "img/night-hand-skin103.png",
    ΔᐃΔΔΔⲆⲆ: "img/day-hand-skin104.png",
    ΔⲆΔⵠΔᐃΔ: "img/night-hand-skin104.png",
    ⵠᐃⲆΔⵠΔⲆ: "img/day-hand-skin105.png",
    ⵠⲆⲆⲆⵠⲆΔ: "img/night-hand-skin105.png",
    ⵠΔⲆⵠᐃⵠᐃ: "img/day-hand-skin106.png",
    ΔᐃᐃᐃᐃⲆΔ: "img/night-hand-skin106.png",
    ⵠΔΔΔᐃⵠⲆ: "img/day-hand-skin107.png",
    ΔΔⵠⵠⵠⵠΔ: "img/night-hand-skin107.png",
    ᐃⲆⲆᐃᐃⵠⵠ: "img/day-hand-skin108.png",
    ⵠⵠᐃⵠⲆΔᐃ: "img/night-hand-skin108.png",
    ⲆⲆⵠⲆᐃⵠᐃ: "img/day-hand-skin109.png",
    ⵠⵠᐃⲆΔⲆⲆ: "img/night-hand-skin109.png",
    ⲆᐃⵠΔⵠⵠⲆ: "img/day-hand-skin110.png",
    ᐃⵠᐃᐃⵠⵠⲆ: "img/night-hand-skin110.png",
    ΔΔⲆᐃᐃΔⵠ: "img/day-hand-skin111.png",
    ⵠᐃⵠᐃᐃΔᐃ: "img/night-hand-skin111.png",
    ᐃᐃⲆᐃⲆⵠΔ: "img/day-hand-skin112.png",
    ΔᐃⵠⲆᐃⲆⲆ: "img/night-hand-skin112.png",
    ΔΔΔⲆⲆⲆⲆᐃᐃ: "img/day-hand-skin113.png",
    ⲆⲆΔΔⵠᐃⵠᐃᐃ: "img/night-hand-skin113.png",
    ᐃᐃⲆⵠᐃᐃⵠ: "img/day-hand-skin114.png",
    ⲆΔⵠⲆⲆᐃⲆ: "img/night-hand-skin114.png",
    ⵠΔⵠᐃⵠⵠⲆ: "img/day-hand-skin115.png",
    ⵠΔⵠᐃΔΔᐃ: "img/night-hand-skin115.png",
    ΔⵠᐃᐃᐃⲆⵠ: "img/day-hand-skin116.png",
    ᐃΔΔⲆⲆⲆⲆ: "img/night-hand-skin116.png",
    ᐃᐃⲆᐃΔΔⵠ: "img/day-hand-skin117.png",
    ⵠⲆⵠᐃⵠᐃⵠ: "img/night-hand-skin117.png",
    ᐃⲆⵠⲆⲆⲆᐃ: "img/day-hand-skin118.png",
    ⵠΔΔⲆᐃⵠⵠ: "img/night-hand-skin118.png",
    ᐃΔⲆΔᐃⲆⵠ: "img/day-hand-skin119.png",
    ᐃⵠⲆⵠⵠΔⲆ: "img/night-hand-skin119.png",
    ⵠΔⵠⵠΔⲆⲆ: "img/day-hand-skin120.png",
    ⵠΔΔᐃᐃⲆᐃ: "img/night-hand-skin120.png",
    ᐃⲆᐃⲆⲆᐃⵠ: "img/day-hand-skin122.png",
    ⲆᐃΔᐃⲆⲆⲆ: "img/night-hand-skin122.png",
    ⲆᐃΔΔⵠⲆⵠ: "img/day-hand-skin122.png",
    ΔΔᐃⲆⵠᐃᐃ: "img/night-hand-skin122.png",
    ΔΔⵠᐃⲆⵠⵠ: "img/day-hand-skin122.png",
    ⲆᐃΔⲆⲆΔΔ: "img/night-hand-skin122.png",
    ᐃΔᐃΔᐃΔΔ: "img/day-hand-skin124.png",
    ΔΔⲆⲆⲆⵠⵠ: "img/night-hand-skin124.png",
    ΔⵠⲆᐃⲆⵠΔ: "img/day-hand-skin125.png",
    ΔⲆᐃⵠΔᐃᐃ: "img/night-hand-skin125.png",
    ΔⲆⵠⵠΔⲆΔ: "img/day-hand-skin126.png",
    ⵠᐃΔΔⵠⵠⲆ: "img/night-hand-skin126.png",
    ⲆⵠΔⲆᐃⲆᐃ: "img/day-hand-skin127.png",
    ᐃᐃᐃΔⵠⲆⵠ: "img/night-hand-skin127.png",
    ΔⵠᐃΔᐃⲆΔ: "img/day-hand-skin128.png",
    ᐃΔΔΔΔⵠⵠ: "img/night-hand-skin128.png",
    ᐃⵠⲆⵠⲆᐃⵠ: "img/day-hand-skin129.png",
    ⵠΔⲆⲆⵠΔΔ: "img/night-hand-skin129.png",
    ⵠᐃΔⵠΔΔΔ: "img/day-hand-skin130.png",
    ⵠΔⲆⵠⲆⲆᐃ: "img/night-hand-skin130.png",
    ⵠⲆⲆⵠⵠΔⵠ: "img/day-hand-skin131.png",
    ⲆᐃᐃⵠᐃᐃⲆ: "img/night-hand-skin131.png",
    ᐃᐃⵠΔⵠⲆⲆ: "img/day-hand-skin130.png",
    ⲆⲆⵠⵠΔⵠⲆ: "img/night-hand-skin130.png",
    ᐃᐃᐃΔΔⲆΔ: "img/day-hand-skin133.png",
    ᐃⲆⵠᐃⵠⵠⲆ: "img/night-hand-skin133.png",
    ΔΔⲆᐃᐃᐃᐃ: "img/day-hand-skin134.png",
    ΔΔΔⲆⵠΔᐃ: "img/night-hand-skin134.png",
    ᐃᐃΔⵠΔᐃⵠ: "img/day-hand-skin135.png",
    ⵠΔᐃⲆΔⲆⲆ: "img/night-hand-skin135.png",
    ΔΔⵠᐃᐃⵠⲆ: "img/day-hand-skin136.png",
    ⲆΔⵠΔⵠΔΔ: "img/night-hand-skin136.png",
    Ⲇᐃᐃᐃⵠⵠᐃ: "img/day-hand-skin137.png",
    ᐃᐃᐃᐃⵠⲆⵠ: "img/night-hand-skin137.png",
    ΔᐃᐃᐃΔΔⵠ: "img/day-hand-skin138.png",
    ΔΔΔⵠᐃⵠⵠ: "img/night-hand-skin138.png",
    ΔᐃᐃⲆⵠΔⵠ: "img/day-hand-skin139.png",
    ΔⲆᐃⲆᐃⲆⲆ: "img/night-hand-skin139.png",
    ᐃᐃⲆᐃⵠᐃΔ: "img/day-hand-skin140.png",
    ⲆⵠΔⲆΔⲆᐃ: "img/night-hand-skin140.png",
    ΔⵠⲆᐃⲆᐃⵠ: "img/day-hand-skin141.png",
    ᐃᐃⵠⵠΔΔⲆ: "img/night-hand-skin141.png",
    ΔⵠⲆΔⵠᐃᐃ: "img/day-hand-skin142.png",
    ⵠΔⵠⵠⲆⵠᐃ: "img/night-hand-skin142.png",
    ΔⲆⵠⲆⲆⵠᐃ: "img/day-hand-skin143.png",
    ⵠᐃᐃΔⵠᐃⵠ: "img/night-hand-skin143.png",
    ⵠΔⲆΔΔΔⲆ: "img/day-hand-skin144.png",
    ᐃⵠΔᐃᐃⲆⵠ: "img/night-hand-skin144.png",
    ᐃⲆⲆᐃⲆⲆⵠ: "img/day-hand-skin145.png",
    ⵠΔⵠΔⵠⵠᐃ: "img/night-hand-skin145.png",
    ⲆΔⲆΔⵠᐃΔ: "img/day-hand-skin146.png",
    ⲆΔⵠⲆΔᐃⵠ: "img/night-hand-skin146.png",
    ΔΔⲆⵠΔⲆΔ: "img/day-hand-skin147.png",
    ⵠⲆΔⲆΔⵠⵠ: "img/night-hand-skin147.png",
    ΔᐃⲆⲆⲆΔⲆ: "img/day-hand-skin148.png",
    ᐃΔⵠⲆᐃⲆⵠ: "img/night-hand-skin148.png",
    ⲆⵠᐃⲆⲆᐃᐃ: "img/day-hand-skin149.png",
    ΔⲆⵠΔⵠᐃΔ: "img/night-hand-skin149.png",
    ᐃⲆᐃⵠⲆⵠᐃ: "img/day-hand-skin150.png",
    ⲆⵠᐃᐃⲆΔΔ: "img/night-hand-skin150.png",
    ᐃΔᐃⲆΔⵠᐃ: "img/day-hand-skin151.png",
    ⲆᐃⲆᐃΔⲆᐃ: "img/night-hand-skin151.png",
    ⵠⵠⵠⲆᐃᐃⲆ: "img/day-hand-skin152.png",
    ΔⲆᐃᐃⲆⲆΔ: "img/night-hand-skin152.png",
    ⲆⵠᐃᐃΔⲆⵠ: "img/day-hand-skin153.png",
    ⵠⵠⵠⲆᐃᐃⵠ: "img/night-hand-skin153.png",
    ⵠⲆΔᐃΔΔⲆ: "img/day-hand-skin154.png",
    ΔⵠᐃΔⲆⵠᐃ: "img/night-hand-skin154.png",
    ⵠΔⵠⵠᐃⵠᐃ: "img/day-hand-skin155.png",
    ⵠⲆⵠΔΔⵠⲆ: "img/night-hand-skin155.png",
    ᐃᐃᐃΔΔⵠΔ: "img/day-hand-skin156.png",
    ΔΔⲆⵠΔΔᐃ: "img/night-hand-skin156.png",
    ᐃᐃⵠⵠⲆⵠⵠ: "img/day-hand-skin157.png",
    ΔⵠⲆⵠⵠᐃΔ: "img/night-hand-skin157.png",
    ⵠⵠΔⲆᐃⲆⵠ: "img/day-hand-skin158.png",
    ΔⵠⵠΔⵠΔⵠ: "img/night-hand-skin158.png",
    ΔΔⲆΔⵠⵠⵠ: "img/day-hand-skin159.png",
    ⲆΔⲆⵠΔⵠΔ: "img/night-hand-skin159.png",
    ⲆⲆΔᐃᐃⲆΔ: "img/day-hand-skin160.png",
    ᐃᐃΔⲆⲆΔⵠ: "img/night-hand-skin160.png",
    ⲆᐃⲆⵠΔⲆⲆ: "img/day-hand-skin161.png",
    ᐃᐃᐃⵠⲆΔⵠ: "img/night-hand-skin161.png",
    ⵠⵠΔᐃᐃⲆΔ: "img/day-hand-skin162.png",
    ΔΔΔⵠⵠᐃⲆ: "img/night-hand-skin162.png",
    ΔᐃⲆᐃⵠⲆΔ: "img/day-hand-skin163.png",
    ⲆⲆΔᐃⵠⲆᐃ: "img/night-hand-skin163.png",
    ᐃⲆⵠᐃⲆΔⵠ: "img/day-hand-skin164.png",
    ⲆⵠΔΔⲆΔΔ: "img/night-hand-skin164.png",
    ᐃᐃⲆΔᐃᐃΔ: "img/day-hand-skin165.png",
    ⵠⲆΔΔⲆⲆΔ: "img/night-hand-skin165.png",
    ⲆⲆⲆΔⵠΔΔ: "img/day-hand-skin166.png",
    ΔΔⲆᐃᐃⲆΔ: "img/night-hand-skin166.png",
    ⲆᐃⵠⵠⵠⵠΔ: "img/day-hand-skin167.png",
    ⵠⲆΔⲆΔⵠᐃ: "img/night-hand-skin167.png",
    ΔΔᐃⲆΔⵠᐃ: "img/day-hand-skin168.png",
    ᐃⵠΔᐃΔⲆᐃ: "img/night-hand-skin168.png",
    ΔᐃᐃΔⵠⵠΔ: "img/day-hand-skin169.png",
    ᐃᐃΔⵠⵠⵠᐃ: "img/night-hand-skin169.png",
    ⲆᐃⵠΔΔΔⲆ: "img/day-hand-skin170.png",
    ΔΔⵠⲆⲆⲆᐃ: "img/night-hand-skin170.png",
    ᐃᐃΔⲆᐃΔⲆ: "img/day-hand-skin171.png",
    ΔⵠⵠⲆⵠⵠⲆ: "img/night-hand-skin171.png",
    ᐃᐃⲆⵠΔΔⵠ: "img/day-hand-skin172.png",
    ᐃᐃᐃᐃΔⲆᐃ: "img/night-hand-skin172.png",
    ⵠⲆΔᐃᐃⲆᐃ: "img/day-hand-skin173.png",
    ⲆΔⲆΔⲆⵠᐃ: "img/night-hand-skin173.png",
    ΔΔⲆᐃΔⵠⲆ: "img/day-hand-skin174.png",
    ᐃⲆⲆⵠᐃᐃⲆ: "img/night-hand-skin174.png",
    ⲆⲆᐃⲆᐃΔⲆ: "img/day-hand-skin175.png",
    ⲆⲆᐃᐃᐃᐃⵠ: "img/night-hand-skin175.png",
    ⵠⲆᐃᐃᐃⲆⲆ: "img/day-hand-skin176.png",
    ⵠᐃᐃΔⵠⵠⵠ: "img/night-hand-skin176.png",
    ΔⲆᐃⵠᐃⲆⵠ: "img/day-hand-skin177.png",
    ⲆΔⲆΔᐃⲆΔ: "img/night-hand-skin177.png",
    ΔΔⵠᐃᐃᐃᐃ: "img/day-hand-skin178.png",
    ⵠⵠⵠⲆΔⵠⵠ: "img/night-hand-skin178.png",
    ΔΔᐃᐃⲆΔΔ: "img/day-hand-skin179.png",
    ᐃⵠⲆΔΔⵠⲆ: "img/night-hand-skin179.png",
    ᐃⵠⲆΔⵠᐃⲆ: "img/day-hand-skin180.png",
    ᐃⵠΔⵠᐃΔⲆ: "img/night-hand-skin180.png",
    ⵠⲆⵠⲆΔᐃᐃ: "img/day-hand-skin181.png",
    ΔΔⵠⲆΔⲆⵠ: "img/night-hand-skin181.png",
    ⲆⵠΔᐃΔᐃΔ: "img/day-hand-skin182.png",
    ⲆⲆⲆΔΔᐃⲆ: "img/night-hand-skin182.png",
    ᐃᐃⵠᐃⲆⵠΔ: "img/day-hand-skin183.png",
    ⲆΔⵠᐃⲆᐃᐃ: "img/night-hand-skin183.png",
    ᐃᐃᐃⵠⲆⲆᐃ: "img/day-hand-skin184.png",
    ΔᐃⲆΔⲆⵠⵠ: "img/night-hand-skin184.png",
    ᐃΔΔΔᐃⵠⵠ: "img/day-hand-skin185.png",
    ᐃᐃᐃᐃⵠᐃᐃ: "img/night-hand-skin185.png",
    ⵠΔⲆΔΔⵠⲆ: "img/day-hand-skin186.png",
    ⵠᐃⵠΔᐃᐃⵠ: "img/night-hand-skin186.png",
    ⲆⵠᐃⵠⵠΔⵠ: "img/day-hand-skin187.png",
    ⲆⲆᐃᐃⲆΔⲆ: "img/night-hand-skin187.png",
    ΔⲆⵠΔⲆⵠᐃ: "img/day-hand-skin188.png",
    ⵠΔⲆᐃᐃᐃⵠ: "img/night-hand-skin188.png",
    ᐃᐃΔᐃΔⲆΔ: "img/day-hand-skin189.png",
    ⲆᐃΔⲆⵠᐃᐃ: "img/night-hand-skin189.png",
    ΔⵠΔⲆⲆⵠᐃ: "img/day-hand-skin190.png",
    ΔᐃΔᐃⲆⲆΔ: "img/night-hand-skin190.png",
    ⵠⵠⲆᐃⲆᐃᐃ: "img/day-hand-skin191.png",
    ΔΔᐃΔⵠᐃΔ: "img/night-hand-skin191.png",
    ΔᐃΔⲆΔⲆΔ: "img/day-hand-skin192.png",
    ΔᐃⵠᐃⵠΔΔ: "img/night-hand-skin192.png",
    ΔᐃⲆⵠΔᐃⵠ: "img/day-hand-skin193.png",
    ⵠⲆᐃⵠⵠΔⲆ: "img/night-hand-skin193.png",
    ⵠⲆΔⲆΔⲆΔ: "img/day-hand-skin194.png",
    ΔⵠᐃᐃᐃΔΔ: "img/night-hand-skin194.png",
    ΔΔⲆᐃⵠⲆⵠ: "img/day-hand-skin195.png",
    ΔⲆᐃⵠⵠΔΔ: "img/night-hand-skin195.png",
    ⵠΔΔᐃⵠΔΔ: "img/day-hand-skin196.png",
    ⵠᐃⲆⵠᐃⵠΔ: "img/night-hand-skin196.png",
    ⲆᐃΔⲆΔⲆⲆ: "img/day-hand-skin197.png",
    ᐃᐃⵠᐃΔⵠⲆ: "img/night-hand-skin197.png",
    ⵠⵠⲆᐃΔΔⵠ: "img/day-hand-skin198.png",
    ⵠⲆᐃΔⲆΔⵠ: "img/night-hand-skin198.png",
    ΔⲆᐃⲆᐃⲆΔ: "img/day-hand-skin199.png",
    ⵠⲆΔΔᐃᐃᐃ: "img/night-hand-skin199.png",
    ⵠⵠᐃⵠⲆᐃΔ: "img/day-hand-skin200.png",
    ΔⲆᐃΔⲆᐃⲆ: "img/night-hand-skin200.png",
    ⵠᐃᐃΔᐃⲆⵠ: "img/day-hand-skin201.png",
    ⵠⵠᐃᐃΔΔᐃ: "img/night-hand-skin201.png",
    ⲆⲆⵠⲆΔΔᐃ: "img/day-hand-skin202.png",
    ⵠⲆΔᐃⲆⵠΔ: "img/night-hand-skin202.png",
    ⲆⵠᐃᐃΔᐃΔ: "img/day-hand-skin203.png",
    ΔᐃⵠᐃΔΔⵠ: "img/night-hand-skin203.png",
    ⲆⵠⲆⵠᐃᐃⲆ: "img/day-hand-skin204.png",
    ⵠᐃᐃΔⵠᐃΔ: "img/night-hand-skin204.png",
    ⵠᐃⲆⵠΔⵠΔ: "img/day-hand-skin205.png",
    ⵠΔⲆⲆᐃⲆⵠ: "img/night-hand-skin205.png",
    ⵠᐃⵠⵠΔᐃⲆ: "img/day-hand-skin206.png",
    ᐃⲆᐃⲆⲆⵠᐃ: "img/night-hand-skin206.png",
    ⲆΔΔⵠᐃΔⵠ: "img/day-hand-skin207.png",
    ᐃⵠᐃⵠⲆᐃΔ: "img/night-hand-skin207.png",
    ᐃᐃᐃΔⵠⵠⲆ: "img/day-hand-skin208.png",
    ᐃᐃᐃᐃΔᐃᐃ: "img/night-hand-skin208.png",
    ΔᐃΔⲆΔᐃⲆ: "img/day-hand-skin209.png",
    ΔᐃᐃᐃΔⵠⵠ: "img/night-hand-skin209.png",
    ⵠⲆⵠⲆⲆΔⲆ: "img/day-hand-skin210.png",
    ⵠⲆᐃⲆⲆⲆⲆ: "img/night-hand-skin210.png",
    ΔᐃΔᐃⵠᐃⵠ: "img/day-hand-skin211.png",
    ⵠᐃⵠⵠⲆΔᐃ: "img/night-hand-skin211.png",
    ⲆΔΔⵠⲆⵠⵠ: "img/day-hand-skin212.png",
    ᐃΔⵠΔⵠⵠΔ: "img/night-hand-skin212.png",
    ⲆⲆⲆⵠᐃⵠⲆ: "img/day-hand-skin213.png",
    ᐃᐃᐃᐃⵠΔΔ: "img/night-hand-skin213.png",
    ⵠⲆᐃΔⲆⵠⵠ: "img/day-hand-skin214.png",
    ⵠΔⲆᐃⵠⲆⵠ: "img/night-hand-skin214.png",
    ΔⵠⵠΔΔΔᐃ: "img/day-bag-star0.png",
    ⵠᐃΔⲆΔΔⲆ: "img/night-bag-star0.png",
    ⲆⲆᐃᐃᐃⵠⵠ: "img/day-bag0.png",
    ⲆⲆⵠⲆⵠᐃΔ: "img/night-bag0.png",
    ΔⵠⲆΔᐃⲆⲆ: "img/day-bag1.png",
    ⵠⵠΔᐃᐃᐃᐃ: "img/night-bag1.png",
    ΔΔΔⵠⲆᐃⵠ: "img/day-bag2.png",
    ᐃⵠⵠΔⲆⵠΔ: "img/night-bag2.png",
    ⵠⲆⲆΔΔΔⲆ: "img/day-bag3.png",
    ⵠᐃᐃⵠⲆΔⵠ: "img/night-bag3.png",
    ⲆⲆᐃⵠⲆᐃΔ: "img/day-bag4.png",
    ΔΔⲆΔΔᐃⵠ: "img/night-bag4.png",
    ⵠΔⲆⲆᐃᐃΔ: "img/day-bag5.png",
    ΔⵠⵠⲆⵠⵠΔ: "img/night-bag5.png",
    ᐃᐃᐃⵠⲆⵠⲆ: "img/day-bag6.png",
    ΔⲆⲆⲆⵠΔⲆ: "img/night-bag6.png",
    ᐃΔᐃⲆᐃΔⲆ: "img/day-bag7.png",
    ⵠΔΔΔⲆΔⵠ: "img/night-bag7.png",
    ⲆᐃᐃΔⲆᐃΔ: "img/day-bag8.png",
    ⲆⲆⵠⵠᐃⲆᐃ: "img/night-bag8.png",
    ⵠⲆⵠᐃΔⲆΔ: "img/day-bag9.png",
    ⲆᐃⵠΔⲆⲆⵠ: "img/night-bag9.png",
    ⵠⲆᐃⵠⵠᐃΔ: "img/day-bag10.png",
    ΔΔΔⲆⵠⵠⵠ: "img/night-bag10.png",
    ᐃⲆⵠⵠⵠᐃⲆ: "img/day-bag11.png",
    ⲆⵠᐃⲆᐃᐃΔ: "img/night-bag11.png",
    ⵠᐃΔᐃᐃⲆΔ: "img/day-bag13.png",
    ᐃⲆᐃΔΔⲆⲆ: "img/night-bag13.png",
    ⵠᐃⵠᐃⲆⵠⵠ: "img/day-bag14.png",
    ΔⲆⲆΔⲆΔⲆ: "img/night-bag14.png",
    ⵠⵠⵠⵠᐃᐃΔ: "img/day-bag16.png",
    ⵠΔⲆⵠⲆᐃᐃ: "img/night-bag16.png",
    ⵠΔΔⵠᐃⵠⲆ: "img/day-bag17.png",
    ᐃⲆⵠⵠΔΔᐃ: "img/night-bag17.png",
    ⵠⵠⲆΔⲆⲆΔ: "img/day-bag18.png",
    ⲆⵠⲆᐃᐃⲆⲆ: "img/night-bag18.png",
    ᐃⲆⲆⵠⲆⲆᐃ: "img/day-bag19.png",
    ΔΔᐃᐃΔᐃΔ: "img/night-bag19.png",
    ᐃᐃΔⲆᐃΔⵠ: "img/day-bag20.png",
    ⵠⵠΔΔΔⵠⵠ: "img/night-bag20.png",
    ⵠⲆᐃΔᐃᐃⲆ: "img/day-bag21.png",
    ᐃᐃⲆⵠΔΔᐃ: "img/night-bag21.png",
    ᐃⲆⵠΔⵠⲆΔ: "img/day-bag22.png",
    ⲆΔΔⲆⵠᐃᐃ: "img/night-bag22.png",
    ⲆΔΔᐃΔᐃΔ: "img/day-bag23.png",
    ⵠΔΔⵠᐃⵠΔ: "img/night-bag23.png",
    ᐃⲆΔⵠΔᐃΔ: "img/day-bag24.png",
    ⵠᐃⵠⲆⵠⵠⵠ: "img/night-bag24.png",
    ⵠᐃⵠⲆⲆⲆᐃ: "img/day-bag25.png",
    ⲆⵠⵠⵠⲆⲆΔ: "img/night-bag25.png",
    ᐃⵠᐃⵠΔⵠⵠ: "img/day-bag26.png",
    ΔᐃⲆⲆΔᐃⵠ: "img/night-bag26.png",
    ⵠΔΔⵠⲆⵠⵠ: "img/day-bag27.png",
    ᐃΔΔᐃⲆᐃᐃ: "img/night-bag27.png",
    ΔⵠΔᐃᐃⵠΔ: "img/day-bag28.png",
    ᐃᐃⵠⲆΔⲆᐃ: "img/night-bag28.png",
    ᐃᐃⵠⲆΔΔᐃ: "img/day-bag29.png",
    ⵠⵠᐃⵠⲆⲆⵠ: "img/night-bag29.png",
    ⵠΔᐃΔᐃᐃᐃ: "img/day-bag30.png",
    ⵠⵠⲆΔⲆⲆᐃ: "img/night-bag30.png",
    ⵠᐃᐃᐃᐃⵠᐃ: "img/day-bag31.png",
    ⲆⲆΔΔⵠΔⲆ: "img/night-bag31.png",
    ΔⵠΔᐃᐃΔⲆ: "img/day-bag32.png",
    ⵠⵠΔⵠΔⵠⵠ: "img/night-bag32.png",
    ⲆᐃⵠⲆⵠᐃⲆ: "img/day-bag33.png",
    ⲆᐃⵠΔΔⲆⵠ: "img/night-bag33.png",
    ᐃᐃᐃᐃⵠΔⲆ: "img/day-bag34.png",
    ⵠⲆΔΔΔᐃΔ: "img/night-bag34.png",
    ⵠⵠⵠᐃΔⲆⵠ: "img/day-bag35.png",
    ΔᐃⵠⵠⵠΔⵠ: "img/night-bag35.png",
    ⵠⲆΔⲆᐃΔΔ: "img/day-bag36.png",
    ΔᐃⵠΔΔΔΔ: "img/night-bag36.png",
    ΔⵠⲆΔⵠⲆⵠ: "img/day-bag37.png",
    ⲆΔⲆΔⲆⲆⲆ: "img/night-bag37.png",
    ⲆΔⲆΔⵠᐃᐃ: "img/day-bag38.png",
    ⲆΔⵠᐃⵠΔΔ: "img/night-bag38.png",
    ⵠⵠⵠᐃⵠⲆΔ: "img/day-bag39.png",
    Ⲇᐃⵠⵠⵠᐃⵠ: "img/night-bag39.png",
    ⲆⲆⲆΔⲆΔΔ: "img/day-bag40.png",
    ⵠⵠΔⵠⲆΔΔ: "img/night-bag40.png",
    ΔⲆⵠⲆⲆΔⲆ: "img/day-bag41.png",
    ⲆⲆΔⵠⵠΔᐃ: "img/night-bag41.png",
    ᐃⵠΔⲆⲆⲆⲆ: "img/day-bag42.png",
    ᐃⲆΔⵠⵠⲆⵠ: "img/night-bag42.png",
    ⲆⵠⲆⵠΔᐃⵠ: "img/day-bag43.png",
    ᐃᐃΔΔⵠΔΔ: "img/night-bag43.png",
    ⵠⵠⲆᐃⵠⵠΔ: "img/day-bag44.png",
    ⵠⵠᐃⵠⵠᐃΔ: "img/night-bag44.png",
    ⵠⵠⲆⲆᐃⲆⵠ: "img/day-bag45.png",
    ΔᐃᐃᐃᐃᐃΔ: "img/night-bag45.png",
    ⲆⵠⲆⲆᐃⵠⲆ: "img/day-bag46.png",
    ΔᐃᐃⵠΔⲆΔ: "img/night-bag46.png",
    ΔᐃⵠΔⲆᐃⲆ: "img/day-bag47.png",
    ΔⵠᐃⲆᐃⲆΔ: "img/night-bag47.png",
    ⲆΔᐃⲆⲆᐃᐃ: "img/day-bag48.png",
    ΔⵠⲆᐃⲆⵠᐃ: "img/night-bag48.png",
    ⵠⵠᐃᐃⵠⵠᐃ: "img/day-bag49.png",
    ᐃΔⵠᐃⵠΔΔ: "img/night-bag49.png",
    ⵠⵠⲆΔⲆⲆⲆ: "img/day-bag50.png",
    ΔⲆᐃΔᐃᐃᐃ: "img/night-bag50.png",
    ⲆⲆᐃᐃᐃᐃⲆ: "img/day-bag51.png",
    ⲆΔⲆⲆᐃⵠᐃ: "img/night-bag51.png",
    ΔΔⵠΔᐃⲆΔ: "img/day-bag52.png",
    ⵠᐃⲆᐃⵠⵠΔ: "img/night-bag52.png",
    ⵠⵠᐃⵠΔΔᐃ: "img/day-bag53.png",
    ᐃΔΔᐃⲆⵠΔ: "img/night-bag53.png",
    ⵠⲆᐃΔⵠᐃⵠ: "img/day-bag54.png",
    ΔᐃᐃⵠᐃᐃⲆ: "img/night-bag54.png",
    ⵠⵠᐃΔᐃΔᐃ: "img/day-bag55.png",
    ⵠᐃⲆⵠⵠᐃᐃ: "img/night-bag55.png",
    ⲆⲆⵠΔⵠΔᐃ: "img/day-bag56.png",
    ΔᐃⵠⲆΔΔᐃ: "img/night-bag56.png",
    ᐃΔⲆⲆⵠΔᐃ: "img/day-bag57.png",
    ⲆΔΔᐃΔⵠΔ: "img/night-bag57.png",
    ᐃᐃⲆⲆⲆⵠⲆ: "img/day-bag58.png",
    ᐃΔⵠᐃᐃΔΔ: "img/night-bag58.png",
    ᐃᐃΔᐃⵠΔᐃ: "img/day-bag59.png",
    ΔⵠᐃᐃⲆⵠΔ: "img/night-bag59.png",
    ᐃᐃⵠΔΔΔΔ: "img/day-bag60.png",
    ΔⲆΔᐃⲆΔⵠ: "img/night-bag60.png",
    ⲆⵠⵠⲆᐃΔΔ: "img/day-bag61.png",
    ⲆᐃⵠΔΔⲆⲆ: "img/night-bag61.png",
    ⵠⵠᐃΔᐃⲆᐃ: "img/day-bag62.png",
    ⵠᐃⵠⵠⵠᐃⲆ: "img/night-bag62.png",
    ⵠΔⵠᐃΔΔΔ: "img/day-bag63.png",
    ΔΔΔᐃᐃⲆΔ: "img/night-bag63.png",
    ΔⲆΔΔᐃⲆΔ: "img/day-bag64.png",
    ⵠᐃⵠᐃⵠΔⵠ: "img/night-bag64.png",
    ⲆᐃⲆⲆΔⲆᐃ: "img/day-bag65.png",
    ᐃⵠΔⵠⲆΔᐃ: "img/night-bag65.png",
    ⵠⲆΔΔᐃΔᐃ: "img/day-bag66.png",
    ᐃΔⲆⵠⵠΔⲆ: "img/night-bag66.png",
    ᐃⵠⵠᐃᐃⵠⲆ: "img/day-bag67.png",
    ΔⲆᐃᐃⲆⵠΔ: "img/night-bag67.png",
    ᐃᐃΔᐃΔⲆᐃ: "img/day-bag68.png",
    ⵠᐃᐃⲆⲆᐃᐃ: "img/night-bag68.png",
    ⵠΔⵠⲆⵠⲆⵠ: "img/day-bag69.png",
    ΔⲆⵠᐃⵠᐃⵠ: "img/night-bag69.png",
    ᐃⵠⲆΔᐃⵠⲆ: "img/day-bag70.png",
    ⵠᐃⲆᐃᐃⵠΔ: "img/night-bag70.png",
    ⵠΔⲆᐃⲆᐃⲆ: "img/day-bag71.png",
    ᐃᐃᐃᐃⲆⵠⲆ: "img/night-bag71.png",
    ⵠⵠΔᐃⲆᐃΔ: "img/day-bag72.png",
    ⵠᐃΔⵠᐃΔᐃ: "img/night-bag72.png",
    ⲆⵠⲆⲆⲆᐃΔ: "img/day-bag73.png",
    ᐃⲆⲆᐃⲆⵠⵠ: "img/night-bag73.png",
    ᐃᐃΔΔⲆⵠᐃ: "img/day-bag74.png",
    ⲆⲆᐃᐃⲆᐃⲆ: "img/night-bag74.png",
    ᐃⲆᐃᐃⵠⲆⵠ: "img/day-bag75.png",
    ⵠⲆᐃΔΔⲆᐃ: "img/night-bag75.png",
    ⲆᐃΔⲆⵠⲆⲆ: "img/day-bag76.png",
    ᐃⲆΔⵠΔⲆᐃ: "img/night-bag76.png",
    ΔⵠᐃⵠΔⵠⵠ: "img/day-bag77.png",
    ⵠᐃⲆⲆᐃᐃΔ: "img/night-bag77.png",
    ⲆΔⵠⵠⵠⲆⲆ: "img/day-bag78.png",
    ΔΔᐃᐃⲆᐃⲆ: "img/night-bag78.png",
    ⵠᐃⵠᐃⲆⲆᐃ: "img/day-bag79.png",
    ⲆⵠⲆΔⲆᐃᐃ: "img/night-bag79.png",
    ΔΔᐃΔᐃᐃⲆ: "img/day-bag80.png",
    ΔΔⵠⵠⲆᐃⲆ: "img/night-bag80.png",
    ΔⵠΔᐃⲆⵠⵠ: "img/day-accessory0.png",
    ΔⲆΔⲆᐃⲆΔ: "img/day-accessory0-pacques.png",
    ΔⲆΔⵠᐃⵠᐃ: "img/night-accessory0-pacques.png",
    ⵠⲆⵠⲆⲆΔᐃ: "img/day-accessory13.png",
    ᐃⵠⵠⵠⲆΔΔ: "img/night-accessory13.png",
    ΔⲆⵠΔⲆⲆᐃ: "img/day-accessory14.png",
    ⵠⵠΔⲆⲆⲆⵠ: "img/night-accessory14.png",
    ΔᐃΔⵠⲆⵠⲆ: "img/day-accessory15.png",
    ᐃᐃΔⲆᐃᐃⲆ: "img/night-accessory15.png",
    ⲆⲆⵠΔᐃΔΔ: "img/day-accessory16.png",
    ⵠᐃⵠⲆⲆⵠⲆ: "img/night-accessory16.png",
    ΔⵠⲆᐃⲆΔᐃ: "img/day-accessory17.png",
    ΔΔΔΔΔᐃᐃ: "img/day-accessory17.png",
    ⵠⵠΔⲆᐃⵠΔ: "img/day-accessory19.png",
    ΔΔᐃᐃⵠΔᐃ: "img/night-accessory19.png",
    ᐃⲆᐃᐃΔΔΔ: "img/day-accessory20.png",
    ΔΔΔΔⵠᐃⲆ: "img/night-accessory20.png",
    ⵠⵠⵠΔᐃᐃΔ: "img/day-accessory21.png",
    ⲆⲆⵠᐃⵠᐃⲆ: "img/night-accessory21.png",
    ᐃΔⵠⲆᐃⲆⲆ: "img/day-accessory22.png",
    ΔΔᐃᐃⵠⲆΔ: "img/night-accessory22.png",
    ᐃᐃⵠΔⵠΔⲆ: "img/day-accessory23.png",
    ΔᐃΔⵠⵠᐃΔ: "img/night-accessory23.png",
    ᐃⲆᐃⲆⵠⲆⲆ: "img/day-accessory24.png",
    ⵠⲆΔΔΔⵠⲆ: "img/night-accessory24.png",
    ⵠⵠΔⵠᐃⵠⲆ: "img/day-accessory25.png",
    ⲆⲆⲆⲆΔΔⵠ: "img/night-accessory25.png",
    ⵠᐃΔⲆⲆᐃⲆ: "img/day-accessory26.png",
    ΔⵠⲆΔⵠⵠⵠ: "img/night-accessory26.png",
    ΔⲆΔⲆⵠᐃᐃ: "img/day-accessory27.png",
    ⵠᐃΔᐃΔⲆΔ: "img/night-accessory27.png",
    ΔⲆᐃⲆΔᐃⵠ: "img/day-accessory18.png",
    ⲆΔΔΔᐃⵠΔ: "img/night-accessory18.png",
    ᐃᐃΔⲆᐃΔΔ: "img/day-accessory29.png",
    ᐃᐃΔⵠΔⲆᐃ: "img/night-accessory29.png",
    ⵠⵠΔⵠᐃⲆⵠ: "img/day-accessory30.png",
    ⵠᐃⲆⵠᐃΔᐃ: "img/night-accessory30.png",
    ᐃⵠΔⵠᐃⲆⲆ: "img/day-accessory31.png",
    ⵠⲆⲆΔⲆΔΔ: "img/night-accessory31.png",
    ⵠΔΔΔⵠⵠᐃ: "img/day-accessory32.png",
    ΔΔᐃᐃⲆΔⲆ: "img/night-accessory32.png",
    ⵠⵠᐃⵠᐃⵠΔ: "img/day-accessory33.png",
    ᐃⵠΔΔΔⲆⲆ: "img/night-accessory33.png",
    ᐃⵠᐃⵠᐃΔᐃ: "img/day-accessory34.png",
    ᐃⵠᐃⵠⲆⲆⵠ: "img/night-accessory34.png",
    ⵠⵠⲆⲆⵠᐃⲆ: "img/day-accessory35.png",
    ΔΔΔⲆⲆⲆⵠ: "img/night-accessory35.png",
    ᐃΔⲆΔΔⲆⵠ: "img/day-accessory28.png",
    ᐃⵠⲆᐃΔᐃⲆ: "img/night-accessory28.png",
    ⲆⲆᐃᐃⵠΔᐃ: "img/day-accessory36.png",
    ⲆΔⲆΔⵠⵠᐃ: "img/night-accessory36.png",
    ΔⵠΔⲆⵠΔⲆ: "img/day-accessory37.png",
    ᐃⲆⲆⲆᐃⲆⵠ: "img/night-accessory37.png",
    ᐃⲆᐃⲆᐃΔΔ: "img/day-accessory39.png",
    ΔᐃᐃΔⵠΔΔ: "img/night-accessory39.png",
    ⵠⲆⵠⵠᐃᐃⵠ: "img/day-accessory40.png",
    ᐃᐃΔⵠⲆⲆⲆ: "img/night-accessory40.png",
    ⵠΔᐃᐃⲆΔⵠ: "img/day-accessory41.png",
    ΔΔΔⵠⲆⲆⲆ: "img/night-accessory41.png",
    ⲆⵠΔⲆᐃᐃᐃ: "img/day-accessory42.png",
    ΔⲆⵠⲆⵠⵠΔ: "img/night-accessory42.png",
    ΔᐃΔⲆⲆᐃΔ: "img/day-accessory43.png",
    ᐃΔΔⵠΔⲆᐃ: "img/night-accessory43.png",
    ᐃⵠⵠⲆⵠⲆΔ: "img/day-accessory44.png",
    ⲆΔΔᐃΔᐃᐃ: "img/night-accessory44.png",
    ᐃⵠᐃⲆⵠⵠⵠ: "img/day-accessory38.png",
    ᐃᐃΔⲆᐃΔᐃ: "img/night-accessory38.png",
    ᐃⲆΔⲆᐃⲆᐃ: "img/day-accessory46.png",
    ⲆᐃᐃⵠⲆΔᐃ: "img/night-accessory46.png",
    ΔᐃⵠⲆⵠⲆᐃ: "img/day-accessory47.png",
    ᐃΔⲆⵠΔⲆⵠ: "img/night-accessory47.png",
    ⵠᐃᐃⵠⲆⲆᐃ: "img/day-accessory48.png",
    ⵠⲆⵠᐃᐃⲆⵠ: "img/night-accessory48.png",
    ᐃΔⲆΔⲆⲆΔ: "img/day-accessory49.png",
    ΔΔᐃⲆⵠΔⵠ: "img/night-accessory49.png",
    ⲆⲆⵠΔᐃΔⲆ: "img/day-accessory45.png",
    ΔΔⲆⵠΔⵠⲆ: "img/night-accessory45.png",
    ΔⲆᐃᐃᐃⵠⵠ: "img/day-accessory50.png",
    ᐃΔᐃᐃⲆⵠⲆ: "img/night-accessory50.png",
    ⲆᐃⵠΔΔΔΔ: "img/day-accessory51.png",
    ΔⵠⵠΔⵠΔⲆ: "img/night-accessory51.png",
    ⲆⲆΔⲆⲆΔⲆ: "img/day-accessory52.png",
    ΔΔΔΔⵠΔᐃ: "img/night-accessory52.png",
    ᐃⵠᐃⲆⵠᐃⵠ: "img/day-accessory53.png",
    ᐃΔⵠΔᐃⵠᐃ: "img/night-accessory53.png",
    ΔⲆⲆⲆⵠΔΔ: "img/day-accessory54.png",
    ᐃᐃΔⵠΔΔⵠ: "img/night-accessory54.png",
    ⲆΔΔΔⲆⲆⲆ: "img/day-accessory55.png",
    ⵠⵠΔⲆΔΔᐃ: "img/night-accessory55.png",
    ᐃⲆⲆⵠⵠⲆⲆ: "img/day-accessory56.png",
    ΔⵠΔⵠᐃⲆⲆ: "img/night-accessory56.png",
    ᐃΔⵠⵠΔⲆⵠ: "img/day-accessory57.png",
    ΔᐃⲆⵠΔΔΔ: "img/night-accessory57.png",
    ⲆⲆΔᐃⵠΔΔ: "img/day-accessory58.png",
    ΔΔⲆΔⲆᐃᐃ: "img/night-accessory58.png",
    ⲆⲆⵠᐃⵠⵠⵠ: "img/day-accessory59.png",
    ⲆⵠᐃᐃⵠⲆⲆ: "img/night-accessory59.png",
    ΔⵠᐃⵠⵠⲆᐃ: "img/day-accessory60.png",
    ⵠⲆΔᐃᐃⲆΔ: "img/night-accessory60.png",
    ᐃⲆⲆⲆᐃⵠᐃ: "img/day-accessory61.png",
    ΔᐃⵠⵠᐃⲆᐃ: "img/night-accessory61.png",
    ⵠⵠΔⵠⲆⲆΔ: "img/day-accessory62.png",
    ᐃΔΔⲆⲆΔⵠ: "img/night-accessory62.png",
    ΔⵠΔᐃΔᐃΔ: "img/day-accessory63.png",
    ΔΔᐃΔᐃⲆᐃ: "img/night-accessory63.png",
    ᐃᐃⵠΔᐃⵠΔ: "img/day-accessory64.png",
    ΔᐃΔⵠᐃᐃᐃ: "img/night-accessory64.png",
    ⵠᐃⲆⲆⲆⵠΔ: "img/day-accessory65.png",
    ΔⵠᐃΔⵠⲆⵠ: "img/night-accessory65.png",
    ⲆⵠΔᐃⲆⵠΔ: "img/day-accessory66.png",
    ᐃⵠⵠᐃᐃⵠⵠ: "img/night-accessory66.png",
    ⲆΔΔΔⲆᐃⵠ: "img/day-accessory67.png",
    ΔΔⲆⲆᐃΔⵠ: "img/night-accessory67.png",
    ⲆⲆᐃⲆΔΔΔ: "img/day-accessory68.png",
    ⵠⵠⲆΔᐃᐃⵠ: "img/night-accessory68.png",
    ⲆᐃⲆᐃⵠᐃⲆ: "img/day-accessory69.png",
    ⵠⵠⲆᐃⲆᐃⲆ: "img/night-accessory69.png",
    ΔⲆΔᐃⲆΔΔ: "img/day-accessory70.png",
    ᐃⲆⵠⲆΔΔⲆ: "img/night-accessory70.png",
    ⵠᐃᐃΔᐃΔⲆ: "img/day-accessory71.png",
    ⵠᐃΔⵠⵠⵠⲆ: "img/night-accessory71.png",
    ⲆΔⵠⵠⲆⵠⲆ: "img/day-accessory72.png",
    ⵠⲆΔⵠᐃᐃⲆ: "img/night-accessory72.png",
    ᐃⵠΔᐃΔⲆΔ: "img/day-accessory73.png",
    ᐃⲆⲆᐃᐃⵠᐃ: "img/night-accessory73.png",
    ⲆΔΔⲆΔⵠⲆ: "img/day-accessory74.png",
    ⵠᐃᐃᐃᐃᐃⵠ: "img/night-accessory74.png",
    ⲆΔᐃⲆΔⵠΔ: "img/day-accessory75.png",
    ᐃⲆⵠᐃΔⲆΔ: "img/night-accessory75.png",
    ᐃⲆⵠⵠΔΔⵠ: "img/day-accessory76.png",
    ᐃⵠⵠⲆⲆᐃΔ: "img/night-accessory76.png",
    ⵠⲆⲆⲆⵠΔⲆ: "img/day-accessory77.png",
    ⲆⲆΔΔⵠᐃᐃ: "img/night-accessory77.png",
    ΔⵠᐃᐃᐃⵠΔ: "img/day-accessory78.png",
    ΔⲆⵠⵠᐃⵠΔ: "img/night-accessory78.png",
    ΔΔΔⵠⲆⲆᐃ: "img/day-accessory79.png",
    ⵠⵠⲆᐃᐃⵠⲆ: "img/night-accessory79.png",
    ΔⵠᐃΔᐃᐃΔ: "img/day-accessory80.png",
    ᐃⵠⲆᐃⲆΔⵠ: "img/night-accessory80.png",
    ⵠᐃΔΔⲆΔΔ: "img/day-accessory81.png",
    ⵠⲆΔΔⵠΔΔ: "img/night-accessory81.png",
    ᐃⵠΔⲆΔΔⲆ: "img/day-accessory83.png",
    ⲆΔᐃⲆΔᐃⵠ: "img/night-accessory83.png",
    ⲆΔΔⵠᐃⵠⲆ: "img/day-accessory84.png",
    ᐃⵠⵠᐃΔΔΔ: "img/night-accessory84.png",
    ΔⵠᐃⲆᐃᐃΔ: "img/day-accessory85.png",
    ⵠΔᐃⲆΔᐃⵠ: "img/night-accessory85.png",
    ΔᐃΔΔⲆΔΔ: "img/day-accessory86.png",
    ⲆΔᐃᐃΔᐃΔ: "img/night-accessory86.png",
    ⲆⲆⲆᐃΔⵠⵠ: "img/day-accessory87.png",
    ΔΔᐃⵠⵠⲆⲆ: "img/night-accessory87.png",
    ⵠⵠᐃⵠΔΔⲆ: "img/day-accessory88.png",
    ⵠᐃⵠⲆⵠΔᐃ: "img/night-accessory88.png",
    ΔⵠᐃΔΔᐃⲆ: "img/day-accessory89.png",
    ᐃⵠᐃᐃΔⵠⲆ: "img/night-accessory89.png",
    ⲆⲆᐃⲆⵠΔⲆ: "img/day-accessory90.png",
    ⲆⵠΔΔΔΔⲆ: "img/night-accessory90.png",
    ᐃΔΔⵠΔⲆⵠ: "img/day-accessory91.png",
    ⲆᐃᐃΔᐃΔΔ: "img/night-accessory91.png",
    ⵠⵠⲆΔⵠΔΔ: "img/day-accessory92.png",
    ⵠⵠⵠⲆᐃᐃΔ: "img/night-accessory92.png",
    ⲆⲆᐃⵠΔΔᐃ: "img/day-accessory93.png",
    ⵠⵠⲆⲆΔⲆᐃ: "img/night-accessory93.png",
    ᐃⲆⲆᐃⲆΔᐃ: "img/day-accessory94.png",
    ⵠⲆΔⵠⲆᐃⲆ: "img/night-accessory94.png",
    ⵠΔΔⲆᐃⲆΔ: "img/day-accessory95.png",
    ᐃΔᐃⵠⵠⲆΔ: "img/night-accessory95.png",
    ⵠᐃⲆⲆΔᐃⵠ: "img/day-accessory96.png",
    ᐃⵠⲆΔᐃΔⵠ: "img/night-accessory96.png",
    ᐃᐃᐃΔⵠⵠⵠ: "img/day-accessory97.png",
    ⵠⲆΔⲆᐃⵠΔ: "img/night-accessory97.png",
    ⲆΔⵠⵠⵠᐃⲆ: "img/day-accessory98.png",
    ⵠᐃⵠΔⵠΔΔ: "img/night-accessory98.png",
    ⵠᐃⲆⲆΔΔⲆ: "img/day-accessory99.png",
    ⲆⵠⲆΔᐃᐃⵠ: "img/night-accessory99.png",
    ⵠΔᐃⵠᐃᐃᐃ: "img/day-accessory100.png",
    ᐃᐃΔⵠΔΔⲆ: "img/night-accessory100.png",
    ᐃⵠⵠᐃⵠⲆⲆ: "img/day-accessory101.png",
    ⲆⵠⵠΔⲆᐃⲆ: "img/night-accessory101.png",
    ⲆΔΔⵠΔᐃⲆ: "img/day-accessory102.png",
    ⲆⲆⵠΔⲆᐃⵠ: "img/night-accessory102.png",
    ⲆᐃΔᐃΔᐃⲆ: "img/day-accessory103.png",
    ᐃⵠⵠᐃΔᐃᐃ: "img/night-accessory103.png",
    ᐃⵠⲆⲆᐃᐃΔ: "img/day-accessory104.png",
    ⵠᐃⲆⲆᐃΔᐃ: "img/night-accessory104.png",
    ⵠΔᐃⲆΔⵠᐃ: "img/day-accessory105.png",
    ΔΔᐃΔΔⲆⲆ: "img/night-accessory105.png",
    ΔᐃΔᐃᐃΔΔⵠⲆ: "img/day-accessory106.png",
    ᐃⵠⲆΔⲆⲆⲆΔⵠ: "img/night-accessory106.png",
    ⲆΔⵠⲆⲆⵠⲆⲆⵠ: "img/day-accessory107.png",
    ᐃⲆⵠⵠⵠⵠⵠΔΔ: "img/night-accessory107.png",
    ᐃᐃΔᐃᐃΔⵠ: "img/day-accessory82.png",
    ᐃⲆΔⲆΔΔⵠ: "img/night-accessory82.png",
    ⲆⲆⵠⵠΔⲆᐃ: "img/day-book0.png",
    ⵠⲆⵠⵠΔᐃᐃ: "img/night-book0.png",
    ΔΔᐃⵠⵠᐃⲆ: "img/day-book1.png",
    ᐃⵠΔⲆⵠΔΔ: "img/night-book1.png",
    ⲆΔᐃⲆⲆᐃⵠ: "img/day-book2.png",
    ⵠⵠⲆⵠⵠⲆΔ: "img/night-book2.png",
    ⲆΔΔⵠⵠⲆⲆ: "img/day-book3.png",
    ⵠⵠⲆⲆⲆΔΔ: "img/night-book3.png",
    ΔΔⲆΔΔᐃᐃ: "img/day-book4.png",
    ⲆⲆᐃᐃᐃᐃᐃ: "img/night-book4.png",
    ⵠⵠΔⲆⵠⵠⲆ: "img/day-book5.png",
    ⵠⲆⵠᐃᐃΔᐃ: "img/night-book5.png",
    ⲆⵠΔᐃΔΔⲆ: "img/day-book6.png",
    ΔⵠᐃΔⲆᐃᐃ: "img/night-book6.png",
    ᐃΔⵠⵠⵠⵠⲆ: "img/day-book7.png",
    ⲆᐃⵠᐃⵠⲆⲆ: "img/night-book7.png",
    ⲆⵠΔⲆΔᐃⵠ: "img/day-book8.png",
    ΔᐃⲆⵠⲆᐃⲆ: "img/night-book8.png",
    ⲆᐃⲆᐃⲆΔⲆ: "img/day-book9.png",
    ᐃΔⵠⵠΔᐃΔ: "img/night-book9.png",
    ⵠⲆᐃΔᐃᐃΔ: "img/day-book10.png",
    ⲆⵠⲆⵠᐃⲆⵠ: "img/night-book10.png",
    ΔᐃΔΔΔⵠᐃ: "img/day-book11.png",
    ⲆⵠΔⲆⵠⵠᐃ: "img/night-book11.png",
    ⲆΔΔᐃⲆⵠᐃ: "img/day-book12.png",
    ᐃᐃΔⵠⵠⵠΔ: "img/night-book12.png",
    ⵠⲆΔΔⵠΔᐃ: "img/day-book13.png",
    ⲆᐃᐃⲆΔᐃᐃ: "img/night-book13.png",
    ᐃⲆⲆⲆⲆΔⵠ: "img/day-book14.png",
    ⵠⲆⲆⵠΔⵠᐃ: "img/night-book14.png",
    ᐃⵠⲆⵠᐃΔⲆ: "img/day-book15.png",
    ⲆⲆⲆᐃⵠⲆⵠ: "img/night-book15.png",
    ⵠᐃⲆΔΔΔⵠ: "img/day-book16.png",
    ⲆΔⲆΔⲆⲆᐃ: "img/night-book16.png",
    ᐃⲆⲆᐃᐃⲆᐃ: "img/day-book17.png",
    ΔⲆⵠⵠΔⵠΔ: "img/night-book17.png",
    ⲆⵠΔⵠⲆⵠΔ: "img/day-book18.png",
    ⲆΔⲆΔⵠΔⵠ: "img/night-book18.png",
    ΔⵠᐃⵠΔΔΔ: "img/day-book19.png",
    ⵠΔⲆⲆⵠⲆⵠ: "img/night-book19.png",
    ΔᐃⵠⵠΔᐃⲆ: "img/day-book20.png",
    ᐃΔᐃⵠⵠⵠⵠ: "img/night-book20.png",
    ⵠⲆᐃᐃⲆⵠⲆ: "img/day-book21.png",
    ᐃⵠⵠⵠⵠⲆᐃ: "img/night-book21.png",
    ⲆⵠΔᐃⲆⲆᐃ: "img/day-book22.png",
    ⲆᐃⵠⵠΔᐃⲆ: "img/night-book22.png",
    ΔⲆᐃⵠΔⵠⲆ: "img/day-book23.png",
    ⲆᐃΔⵠᐃⲆⲆ: "img/night-book23.png",
    ⲆΔΔΔΔΔΔ: "img/day-book24.png",
    ᐃⲆᐃΔⲆᐃⲆ: "img/night-book24.png",
    ⵠΔΔⵠΔⲆΔ: "img/day-book25.png",
    ΔⵠΔᐃⵠⲆⵠ: "img/night-book25.png",
    ⲆⲆᐃΔᐃⲆΔ: "img/day-book26.png",
    ⲆⵠΔᐃᐃᐃⲆ: "img/night-book26.png",
    ⵠΔⵠⵠᐃⵠⲆ: "img/day-book27.png",
    ⲆⲆᐃⲆⲆⲆᐃ: "img/night-book27.png",
    ᐃᐃⵠⲆⵠᐃⵠ: "img/day-book28.png",
    ⲆⵠⲆⲆᐃⵠⵠ: "img/night-book28.png",
    ⵠⲆⲆⲆΔⵠⲆ: "img/day-book29.png",
    ΔᐃⲆΔΔⵠⵠ: "img/night-book29.png",
    ᐃⵠΔⲆⵠⵠⵠ: "img/day-book30.png",
    ⵠΔⲆΔΔᐃΔ: "img/night-book30.png",
    ᐃΔⲆᐃⲆΔᐃ: "img/day-book31.png",
    ᐃᐃⲆⵠⵠᐃⵠ: "img/night-book31.png",
    ⲆⵠΔⲆᐃⲆΔ: "img/day-book32.png",
    ⲆΔᐃⲆΔᐃᐃ: "img/night-book32.png",
    ΔΔΔᐃᐃⵠⵠ: "img/day-book33.png",
    ⵠΔⲆⲆᐃᐃᐃ: "img/night-book33.png",
    ᐃΔᐃᐃΔᐃΔ: "img/day-book34.png",
    ΔⵠⵠⲆΔᐃΔ: "img/night-book34.png",
    ᐃⲆΔⵠⵠⵠⲆ: "img/day-book35.png",
    ⵠⵠᐃᐃΔᐃⵠ: "img/night-book35.png",
    Δⵠᐃᐃᐃᐃᐃ: "img/day-book36.png",
    ᐃⲆⵠᐃᐃΔⲆ: "img/night-book36.png",
    ⵠⵠⵠᐃⲆᐃΔᐃΔ: "img/day-book37.png",
    ᐃⲆᐃⵠⲆⲆᐃⲆΔ: "img/night-book37.png",
    ⵠΔΔΔΔⵠⵠ: "img/day-book38.png",
    ⵠΔⵠⵠᐃⵠⵠ: "img/night-book38.png",
    ᐃⲆΔⵠᐃΔⵠ: "img/day-book39.png",
    ⲆⵠⵠⲆⵠⲆΔ: "img/night-book39.png",
    ᐃᐃΔⵠΔᐃᐃ: "img/day-book40.png",
    ΔⲆⲆᐃᐃⲆⵠ: "img/night-book40.png",
    ⲆᐃᐃⲆⲆⵠⲆ: "img/day-book41.png",
    ΔΔᐃⵠᐃⵠᐃ: "img/night-book41.png",
    ΔⲆΔΔⵠⲆᐃ: "img/day-book42.png",
    ⵠⲆⲆΔᐃⲆΔ: "img/night-book42.png",
    ⵠᐃᐃⲆᐃⵠΔ: "img/day-book43.png",
    ⲆᐃᐃΔᐃᐃⲆ: "img/night-book43.png",
    ⵠΔᐃⵠⲆⵠΔ: "img/day-book44.png",
    Δᐃᐃᐃⵠᐃᐃ: "img/night-book44.png",
    ⲆⵠᐃᐃΔᐃᐃ: "img/day-book45.png",
    ⲆΔⵠᐃⲆⵠⵠ: "img/night-book45.png",
    ΔⵠᐃⲆⲆⵠⲆ: "img/day-book46.png",
    ⲆᐃⲆⵠᐃⲆΔ: "img/night-book46.png",
    ᐃⵠⲆΔⲆⵠΔ: "img/day-book47.png",
    ΔⵠⵠⲆᐃᐃⵠ: "img/night-book47.png",
    ⲆⲆⲆᐃΔᐃΔ: "img/day-book48.png",
    ΔΔΔΔⵠΔⵠ: "img/night-book48.png",
    ΔⲆⵠΔΔᐃΔ: "img/day-book49.png",
    ⲆⲆⲆⲆΔᐃΔ: "img/night-book49.png",
    ΔΔⲆⲆΔⲆᐃ: "img/day-book50.png",
    ΔⲆΔΔⲆⲆᐃ: "img/night-book50.png",
    ᐃⲆᐃΔΔᐃΔ: "img/day-crate1.png",
    ΔⵠⵠⵠᐃⲆⲆ: "img/night-crate1.png",
    ⲆᐃⲆⵠᐃᐃⵠ: "img/day-crate2.png",
    ᐃΔᐃᐃⲆⵠᐃ: "img/night-crate2.png",
    ⵠⲆΔⵠᐃΔⲆ: "img/day-crate3.png",
    ΔⲆⲆⵠΔⲆⵠ: "img/night-crate3.png",
    ΔᐃⲆᐃᐃᐃᐃ: "img/day-crate4.png",
    ⵠᐃᐃⲆᐃΔΔ: "img/night-crate4.png",
    ⵠⲆⵠⲆΔⵠΔ: "img/day-crate5.png",
    ΔᐃⵠⵠΔΔⲆ: "img/night-crate5.png",
    ᐃⲆⲆⲆΔⲆᐃ: "img/day-crate6.png",
    ᐃΔᐃⵠⵠᐃᐃ: "img/night-crate6.png",
    ⲆᐃᐃⵠⵠᐃΔ: "img/day-crate7.png",
    ⵠⵠΔⲆΔⵠⲆ: "img/night-crate7.png",
    ⵠΔΔᐃⵠⲆΔ: "img/day-crate8.png",
    ⵠᐃᐃΔᐃⵠᐃ: "img/night-crate8.png",
    ᐃⵠΔΔΔⵠⵠ: "img/day-crate9.png",
    ⲆⵠⲆᐃᐃᐃⵠ: "img/night-crate9.png",
    ⵠᐃⵠⵠᐃⲆⲆ: "img/day-crate10.png",
    ΔᐃᐃⵠΔᐃᐃ: "img/night-crate10.png",
    ⵠᐃⵠΔⲆⲆⲆ: "img/day-crate11.png",
    ΔΔⲆⲆⵠᐃⵠ: "img/night-crate11.png",
    ⵠⵠΔⲆⵠΔⵠ: "img/day-crate12.png",
    ᐃᐃⲆᐃᐃⵠⵠ: "img/night-crate12.png",
    ⲆᐃᐃᐃᐃᐃΔ: "img/day-crate13.png",
    ᐃΔΔⵠΔᐃⵠ: "img/night-crate13.png",
    ΔⲆᐃᐃΔΔⵠ: "img/day-crate14.png",
    ⵠΔᐃΔⵠΔⲆ: "img/night-crate14.png",
    ᐃⵠⵠΔΔⲆΔ: "img/day-crate15.png",
    ᐃⲆΔΔΔᐃⲆ: "img/night-crate15.png",
    ⲆⵠᐃΔΔⲆⵠ: "img/day-crate16.png",
    ⵠⲆⲆⵠⵠΔⲆ: "img/night-crate16.png",
    ⵠΔⵠⵠⵠᐃᐃ: "img/day-crate17.png",
    ⲆΔᐃⲆᐃⵠⵠ: "img/night-crate17.png",
    ⲆⵠⲆΔΔᐃⲆ: "img/day-crate18.png",
    ᐃᐃⲆⵠΔⲆΔ: "img/night-crate18.png",
    ΔΔⲆⵠᐃΔⲆ: "img/day-crate19.png",
    ⲆΔⲆⲆΔⲆᐃ: "img/night-crate19.png",
    ᐃⵠΔΔⲆΔⲆ: "img/day-crate20.png",
    ΔⵠⲆⲆᐃᐃⲆ: "img/night-crate20.png",
    ⵠⵠⵠⲆⵠΔⵠ: "img/day-crate21.png",
    ⵠᐃⲆⵠⲆⵠⵠ: "img/night-crate21.png",
    ᐃⲆᐃΔⲆⲆⵠ: "img/day-crate22.png",
    ⲆᐃⵠⵠΔᐃⵠ: "img/night-crate22.png",
    ᐃᐃⲆΔΔΔΔ: "img/day-crate23.png",
    ⲆᐃⵠᐃⲆᐃⲆ: "img/night-crate23.png",
    ⲆⵠᐃᐃⲆⲆⲆ: "img/day-crate24.png",
    ⲆΔᐃᐃⵠⲆᐃ: "img/night-crate24.png",
    ⲆⲆⲆⲆⲆΔΔ: "img/day-crate25.png",
    ΔⵠⲆⲆΔⲆᐃ: "img/night-crate25.png",
    ΔΔⲆⵠⲆᐃᐃ: "img/day-crate26.png",
    ΔᐃⲆᐃΔᐃⵠ: "img/night-crate26.png",
    ⲆⲆⵠΔⲆⲆⲆ: "img/day-crate27.png",
    ΔⲆΔⲆⵠⵠᐃ: "img/night-crate27.png",
    ⲆᐃⲆⲆⲆΔᐃ: "img/day-crate28.png",
    ⵠⲆⵠΔΔᐃΔ: "img/night-crate28.png",
    ⵠⲆΔⵠⲆⲆⵠ: "img/day-crate29.png",
    Ⲇⵠⵠⵠⵠⵠⵠ: "img/night-crate29.png",
    ⲆΔⵠΔⵠΔᐃ: "img/day-crate30.png",
    ΔᐃⲆᐃΔⲆⲆ: "img/night-crate30.png",
    ⵠⵠⵠᐃⲆᐃⲆ: "img/day-crate31.png",
    ⲆΔᐃᐃᐃⵠᐃ: "img/night-crate31.png",
    ᐃⵠΔⲆᐃⲆΔ: "img/day-crate32.png",
    ⵠⵠⵠΔⲆⵠΔ: "img/night-crate32.png",
    ⵠΔᐃⲆⵠᐃⵠ: "img/day-crate33.png",
    ⵠΔΔⲆᐃΔΔ: "img/night-crate33.png",
    ΔΔᐃⲆΔⲆⲆ: "img/day-crate34.png",
    ⲆΔΔⵠᐃΔᐃ: "img/night-crate34.png",
    ⵠᐃΔⲆᐃᐃᐃ: "img/day-crate35.png",
    ᐃⵠⵠᐃΔᐃΔ: "img/night-crate35.png",
    ⲆᐃⵠⵠⲆⵠⵠ: "img/day-crate36.png",
    ⵠⵠᐃⲆΔΔΔ: "img/night-crate36.png",
    ΔⵠⲆᐃᐃⲆΔ: "img/day-crate37.png",
    ⵠΔᐃΔᐃᐃⵠ: "img/night-crate37.png",
    ⲆΔΔⵠⲆⲆᐃ: "img/day-crate38.png",
    ⲆΔⲆΔΔᐃⲆ: "img/night-crate38.png",
    ΔᐃΔᐃΔᐃΔ: "img/day-crate39.png",
    ⲆⲆⵠⲆᐃᐃΔ: "img/night-crate39.png",
    ⵠⵠΔᐃᐃⵠⵠ: "img/day-crate40.png",
    ΔⲆᐃⲆΔⲆⲆ: "img/night-crate40.png",
    ᐃΔⵠᐃᐃⲆΔ: "img/day-crate41.png",
    ΔΔⵠᐃⵠⲆΔ: "img/night-crate41.png",
    ᐃΔⵠΔⵠⵠⲆ: "img/day-crate42.png",
    ᐃΔᐃⵠᐃᐃⵠ: "img/night-crate42.png",
    ⲆᐃⲆΔⵠΔᐃ: "img/day-crate43.png",
    ⲆⵠΔΔⵠⵠⲆ: "img/night-crate43.png",
    Δᐃᐃⵠᐃᐃᐃ: "img/day-crate44.png",
    ᐃᐃΔⵠⵠΔⵠ: "img/night-crate44.png",
    ⲆⵠⲆᐃⵠⵠΔ: "img/day-crate45.png",
    ⲆⵠᐃⲆⲆᐃⲆ: "img/night-crate45.png",
    ⲆΔΔΔΔⲆⲆ: "img/day-crate46.png",
    ΔⵠⲆΔᐃⵠⲆ: "img/night-crate46.png",
    ᐃⵠⲆⵠᐃⵠᐃ: "img/day-crate47.png",
    ⵠᐃⵠᐃⵠᐃᐃ: "img/night-crate47.png",
    ⵠᐃⵠⵠᐃᐃⲆ: "img/day-crate48.png",
    ᐃⲆⲆᐃⲆΔⵠ: "img/night-crate48.png",
    ⵠΔⲆᐃΔΔΔ: "img/day-crate49.png",
    ΔⵠᐃⲆⲆⲆⵠ: "img/night-crate49.png",
    ⵠⵠΔⵠⲆᐃᐃ: "img/day-crate50.png",
    ⲆΔΔΔⵠⲆⵠ: "img/night-crate50.png",
    ΔⵠΔⵠᐃⵠᐃ: "img/day-crate51.png",
    ⵠᐃΔⵠⲆⵠΔ: "img/night-crate51.png",
    ⲆⲆⵠΔⵠᐃᐃ: "img/day-crate52.png",
    ⲆᐃᐃⲆΔᐃΔ: "img/night-crate52.png",
    ⵠⲆⵠᐃᐃᐃΔ: "img/day-crate53.png",
    ⲆⲆᐃΔᐃΔΔ: "img/night-crate53.png",
    ⵠᐃΔⲆⵠⵠᐃ: "img/day-crate54.png",
    ᐃᐃᐃᐃⲆⲆᐃ: "img/night-crate54.png",
    ᐃⵠΔⲆᐃⵠΔ: "img/day-crate55.png",
    ᐃⲆᐃⵠᐃⵠΔ: "img/night-crate55.png",
    ⵠⵠΔᐃΔΔΔ: "img/day-crate56.png",
    ⵠΔΔᐃⵠΔⲆ: "img/night-crate56.png",
    ᐃⲆⵠᐃⵠⲆΔ: "img/day-crate57.png",
    ⲆⵠΔⵠᐃΔᐃ: "img/night-crate57.png",
    ⵠⲆᐃⵠΔⵠΔ: "img/day-crate58.png",
    ΔᐃᐃΔΔΔⵠ: "img/night-crate58.png",
    ⲆⲆΔᐃⲆⲆᐃ: "img/day-crate59.png",
    ΔΔΔᐃΔΔΔ: "img/night-crate59.png",
    ᐃⲆⵠⲆⵠᐃΔ: "img/day-crate60.png",
    ⵠᐃⵠⵠⵠⵠΔ: "img/night-crate60.png",
    ⲆⵠΔⵠᐃΔⵠ: "img/day-crate61.png",
    ᐃΔᐃΔⲆⲆᐃ: "img/night-crate61.png",
    ⲆⲆΔⲆⵠΔΔ: "img/day-crate62.png",
    ⲆᐃⲆⵠΔⲆⵠ: "img/night-crate62.png",
    ᐃⲆⲆⵠᐃⲆⲆ: "img/day-crate63.png",
    ⵠΔⲆᐃⵠⵠⵠ: "img/night-crate63.png",
    ⲆⲆⲆᐃⵠΔⲆ: "img/day-crate64.png",
    ⲆΔᐃΔΔⵠⵠ: "img/night-crate64.png",
    ᐃⵠⵠᐃⵠᐃⲆ: "img/day-crate65.png",
    ⵠⲆⵠΔᐃⵠⵠ: "img/night-crate65.png",
    ᐃⵠⵠⵠⵠⵠΔ: "img/day-crate66.png",
    ⲆᐃᐃⵠΔⲆⵠ: "img/night-crate66.png",
    ⵠⲆⲆⲆⵠⲆᐃ: "img/day-crate67.png",
    ᐃΔᐃΔᐃΔⲆ: "img/night-crate67.png",
    ⲆⵠⲆⲆⲆⲆⵠ: "img/day-crate68.png",
    ΔⵠᐃΔⲆⲆΔ: "img/night-crate68.png",
    ⵠⵠᐃΔⲆⲆⵠ: "img/day-crate69.png",
    ᐃⵠⲆΔΔⵠⵠ: "img/night-crate69.png",
    ΔⵠⵠΔⲆⵠΔ: "img/day-crate70.png",
    ⲆΔⵠΔΔⲆΔ: "img/night-crate70.png",
    ⲆⵠⵠΔΔΔⲆ: "img/day-crate71.png",
    ᐃᐃⲆⲆⵠⵠᐃ: "img/night-crate71.png",
    ᐃⵠⵠΔⵠᐃⲆ: "img/day-crate72.png",
    ᐃⵠⲆᐃᐃⵠΔ: "img/night-crate72.png",
    ⵠΔⵠΔⲆΔᐃ: "img/day-crate73.png",
    ΔᐃⵠⲆⲆⵠΔ: "img/night-crate73.png",
    ⲆᐃⲆⵠⵠⵠᐃ: "img/day-crate74.png",
    ⵠᐃⵠⵠⵠⲆⵠ: "img/night-crate74.png",
    ⵠΔⵠΔᐃⲆⵠ: "img/day-crate75.png",
    ⵠⲆⲆΔⲆⲆᐃ: "img/night-crate75.png",
    ⵠⲆᐃᐃⵠⲆⲆ: "img/day-crate76.png",
    ΔᐃΔⲆΔᐃΔ: "img/night-crate76.png",
    ΔⲆᐃⲆΔᐃⲆ: "img/day-crate77.png",
    ᐃⵠᐃΔⲆᐃⲆ: "img/night-crate77.png",
    ⲆⲆⵠⵠΔⵠΔ: "img/day-crate78.png",
    ᐃⵠᐃᐃⲆⵠⲆ: "img/night-crate78.png",
    ⵠⵠΔΔⵠᐃΔ: "img/day-crate79.png",
    ⵠⲆⵠᐃⲆⵠⲆ: "img/night-crate79.png",
    ⵠⲆΔᐃΔΔᐃ: "img/day-herb0.png",
    ⲆⲆⲆⲆΔᐃⲆ: "img/day-herb1.png",
    ΔⵠⲆᐃΔΔⵠ: "img/day-herb2.png",
    ⲆⲆΔⵠⵠⵠⲆ: "img/day-herb3.png",
    ⲆⲆᐃΔⲆⲆᐃ: "img/day-herb4.png",
    ⵠᐃᐃΔⵠⵠᐃ: "img/day-herb5.png",
    ⲆΔᐃΔΔⵠΔ: "img/day-herb6.png",
    ⲆⲆΔᐃⲆⵠΔ: "img/day-herb7.png",
    ⵠⲆᐃᐃΔⲆⵠ: "img/day-herb8.png",
    ⲆⲆᐃΔΔⲆⵠ: "img/day-herb9.png",
    ᐃⲆⵠᐃⵠⵠᐃ: "img/day-herb10.png",
    ΔⵠⵠⲆⲆΔⲆ: "img/day-herb11.png",
    ⵠΔΔⵠⵠⲆΔ: "img/day-herb12.png",
    ᐃᐃⵠᐃⵠⲆΔ: "img/day-herb13.png",
    ΔⵠⲆᐃᐃⲆⵠ: "img/day-herb14.png",
    ⵠᐃΔⵠΔᐃⲆ: "img/day-herb15.png",
    ⲆⵠⵠⲆΔᐃⲆ: "img/day-shell0.png",
    ⵠᐃᐃⵠᐃᐃⲆ: "img/day-shell1.png",
    ⲆⵠᐃᐃΔⲆᐃ: "img/day-shell2.png",
    ᐃⲆⲆΔᐃⵠᐃ: "img/day-leaf1.png",
    ⲆⵠΔⲆᐃⵠΔ: "img/day-leaf2.png",
    ᐃΔΔᐃⲆⵠᐃ: "img/day-leaf3.png",
    ΔᐃⲆⲆⵠⵠΔ: "img/day-leaf4.png",
    ⲆⲆᐃᐃᐃⲆⲆ: "img/day-leaf5.png",
    ᐃⵠⲆⲆᐃⲆΔ: "img/day-leaf6.png",
    ΔΔᐃΔΔⵠⲆ: "img/day-leaf7.png",
    ᐃⵠᐃⲆΔᐃᐃ: "img/day-leaf8.png",
    ⵠᐃΔⲆΔⵠΔ: "img/day-rock0.png",
    ⲆⲆⲆΔⲆΔᐃ: "img/day-rock1.png",
    ΔᐃᐃΔⵠⲆᐃ: "img/day-rock2.png",
    ᐃⲆⲆΔⵠᐃⲆ: "img/day-rock3.png",
    ⲆᐃᐃΔΔⲆᐃ: "img/day-rock4.png",
    ⵠΔⲆⲆⲆΔΔ: "img/day-rock5.png",
    ᐃΔⲆᐃⲆⲆΔ: "img/day-rock6.png",
    ⵠΔⲆΔᐃⵠᐃ: "img/day-rock7.png",
    ⲆΔΔΔⵠᐃΔ: "img/day-rock8.png",
    ᐃⲆⵠⲆⲆⵠᐃ: "img/day-rock9.png",
    ᐃⵠΔⵠΔᐃⲆ: "img/day-rock10.png",
    ΔΔⵠⵠᐃⲆΔ: "img/day-rock11.png",
    ⵠΔΔΔⵠᐃΔ: "img/day-rock12.png",
    ⲆⵠⲆⲆΔᐃⵠ: "img/day-rock13.png",
    ᐃᐃⵠᐃⵠᐃⵠ: "img/day-flower1.png",
    ⵠΔⲆΔⵠⵠⲆ: "img/day-flower2.png",
    ᐃⵠⵠΔⲆᐃⲆ: "img/day-flower3.png",
    ⵠⵠᐃⲆΔⵠᐃ: "img/day-flower4.png",
    ᐃⲆᐃⵠᐃΔⲆ: "img/day-flower5.png",
    ⵠⲆⲆⵠᐃᐃΔ: "img/day-flower6.png",
    ⵠⵠⲆΔᐃᐃⲆ: "img/day-flower7.png",
    ΔΔᐃⵠⵠᐃᐃ: "img/day-flower8.png",
    ΔⵠⲆⲆⲆΔᐃ: "img/day-flower9.png",
    ΔΔΔⵠⵠᐃⵠ: "img/day-herb16.png",
    ⲆⵠᐃⲆᐃⵠΔ: "img/day-herb17.png",
    ᐃΔⵠΔᐃΔⵠ: "img/day-herb18.png",
    ⲆΔⲆⲆⲆⵠΔ: "img/day-herb19.png",
    ⵠⵠⵠᐃᐃᐃΔ: "img/day-herb20.png",
    ⵠᐃⵠⵠⵠⲆⲆ: "img/day-herb21.png",
    ᐃᐃⲆⲆᐃⲆⵠ: "img/night-herb0.png",
    ⲆᐃⵠΔⲆⵠΔ: "img/night-herb1.png",
    ⲆΔᐃⲆⲆΔⵠ: "img/night-herb2.png",
    ΔΔⲆⵠⵠⵠⵠ: "img/night-herb3.png",
    ᐃᐃⲆⲆΔⲆⲆ: "img/night-herb4.png",
    ΔⲆⵠᐃᐃΔⵠ: "img/night-herb5.png",
    ΔΔΔⵠΔⵠⲆ: "img/night-herb6.png",
    ΔⵠΔΔⲆⲆᐃ: "img/night-herb7.png",
    ᐃⵠⵠⲆⲆΔⲆ: "img/night-herb8.png",
    ⵠⵠⵠΔᐃⲆⲆ: "img/night-herb9.png",
    ⲆᐃΔΔᐃⵠᐃ: "img/night-herb10.png",
    ⲆⲆⵠⵠⲆᐃᐃ: "img/night-herb11.png",
    ⲆΔᐃΔⵠΔⵠ: "img/night-herb12.png",
    ΔⵠⲆⲆΔⵠᐃ: "img/night-herb13.png",
    ᐃⲆⵠᐃΔᐃᐃ: "img/night-herb14.png",
    ᐃΔΔᐃⵠⲆⲆ: "img/night-herb15.png",
    ⵠΔΔⵠᐃⵠⵠ: "img/night-shell0.png",
    ⵠΔⵠΔⲆᐃᐃ: "img/night-shell1.png",
    ⲆⵠⲆⲆᐃⲆⵠ: "img/night-shell2.png",
    ⲆⲆᐃⵠᐃⵠᐃ: "img/night-leaf1.png",
    ⵠᐃΔⵠⵠᐃᐃ: "img/night-leaf2.png",
    ⵠᐃⵠⵠΔⲆΔ: "img/night-leaf3.png",
    ᐃⲆΔⲆΔⲆᐃ: "img/night-leaf4.png",
    ΔⵠΔⵠⵠⲆΔ: "img/night-leaf5.png",
    ⲆᐃΔΔⲆⵠⲆ: "img/night-leaf6.png",
    ⲆⵠⵠΔⲆΔⵠ: "img/night-leaf7.png",
    ⵠⵠⵠⲆⲆΔⲆ: "img/night-leaf8.png",
    ᐃⲆΔⲆⲆΔᐃ: "img/night-rock0.png",
    ⵠᐃᐃⵠΔⲆⵠ: "img/night-rock1.png",
    ᐃⵠΔⲆⲆΔⲆ: "img/night-rock2.png",
    ⲆΔΔⲆⲆΔⲆ: "img/night-rock3.png",
    ⲆⲆΔΔΔΔᐃ: "img/night-rock4.png",
    ⵠⲆⲆᐃΔᐃΔ: "img/night-rock5.png",
    ⵠᐃⵠⵠᐃⵠΔ: "img/night-rock6.png",
    ⲆⵠⵠᐃᐃⲆⵠ: "img/night-rock7.png",
    ⲆᐃⵠᐃΔΔᐃ: "img/night-rock8.png",
    ⲆⵠⵠΔⲆᐃⵠ: "img/night-rock9.png",
    ᐃⲆΔⲆⲆᐃᐃ: "img/night-rock10.png",
    ᐃΔⵠᐃⲆᐃΔ: "img/night-rock11.png",
    ᐃⲆΔΔΔᐃⵠ: "img/night-rock12.png",
    ᐃⲆᐃΔᐃⵠΔ: "img/night-rock13.png",
    ⲆⲆᐃΔΔΔΔ: "img/night-flower1.png",
    ᐃΔⲆⲆⵠⵠΔ: "img/night-flower2.png",
    ΔⲆᐃᐃΔⲆⲆ: "img/night-flower3.png",
    ⵠᐃΔⵠⵠⵠⵠ: "img/night-flower4.png",
    ⲆⲆⲆⵠΔΔⲆ: "img/night-flower5.png",
    ᐃΔⵠⲆᐃⵠᐃ: "img/night-flower6.png",
    ᐃⲆᐃᐃⵠⵠΔ: "img/night-flower7.png",
    ᐃⵠⲆⵠⵠΔⵠ: "img/night-flower8.png",
    ΔΔⵠΔⵠᐃⵠ: "img/night-flower9.png",
    ᐃᐃΔᐃⲆΔⵠ: "img/night-herb16.png",
    ᐃΔⵠⵠⲆΔᐃ: "img/night-herb17.png",
    ⲆⵠΔⵠⲆΔᐃ: "img/night-herb18.png",
    ⲆⲆᐃⵠⵠⵠⵠ: "img/night-herb19.png",
    ΔΔᐃΔΔΔᐃ: "img/night-herb20.png",
    ⵠⵠⵠᐃⲆᐃΔ: "img/night-herb21.png",
    ᐃᐃᐃⵠΔⵠΔ: "img/day-river000-010-000.png",
    ΔᐃΔᐃⲆⵠⵠ: "img/day-river000-010-010.png",
    ⲆⲆᐃᐃᐃⵠⲆ: "img/day-river000-011-000.png",
    ΔⵠᐃΔⵠΔⵠ: "img/day-river000-011-010.png",
    ⵠⵠΔᐃΔⲆⲆ: "img/day-river000-011-011.png",
    ⲆⵠΔⲆⵠΔⵠ: "img/day-river000-110-000.png",
    ΔⵠⵠⲆⵠᐃⵠ: "img/day-river000-110-010.png",
    ΔⵠⵠᐃⲆⲆᐃ: "img/day-river000-110-110.png",
    ⵠⲆᐃⵠᐃᐃᐃ: "img/day-river000-111-000.png",
    ⵠⵠⵠΔⲆᐃⵠ: "img/day-river000-111-010.png",
    ᐃΔᐃⲆᐃΔⵠ: "img/day-river000-111-011.png",
    ᐃⲆⵠⵠⵠⵠᐃ: "img/day-river000-111-110.png",
    ⵠⵠᐃᐃᐃᐃⲆ: "img/day-river000-111-111.png",
    ⲆᐃΔⲆⲆⲆᐃ: "img/day-river010-010-000.png",
    ⵠᐃⲆᐃᐃᐃⲆ: "img/day-river010-010-010.png",
    ⵠⲆΔⲆΔΔⲆ: "img/day-river010-011-000.png",
    ⲆⵠᐃⲆΔⲆⵠ: "img/day-river010-011-010.png",
    ΔΔⵠⵠΔᐃΔ: "img/day-river010-011-011.png",
    ⲆⵠⲆᐃⲆⲆΔ: "img/day-river010-110-000.png",
    ΔⲆⲆⲆΔᐃⵠ: "img/day-river010-110-010.png",
    ΔᐃᐃⵠⲆΔΔ: "img/day-river010-110-110.png",
    ᐃᐃᐃᐃⲆᐃᐃ: "img/day-river010-111-000.png",
    ᐃⲆΔᐃΔᐃᐃ: "img/day-river010-111-010.png",
    ΔⵠᐃⵠⲆⵠΔ: "img/day-river010-111-011.png",
    ⲆᐃΔⵠΔⲆΔ: "img/day-river010-111-110.png",
    ⵠⵠᐃΔⲆᐃΔ: "img/day-river010-111-111.png",
    ⲆⲆΔᐃᐃⵠΔ: "img/day-river011-011-000.png",
    ΔᐃΔᐃΔⲆⲆ: "img/day-river011-011-010.png",
    ΔⲆΔΔⵠᐃᐃ: "img/day-river011-011-011.png",
    ⲆⲆⵠⲆⲆᐃⲆ: "img/day-river011-111-000.png",
    ΔΔⲆⵠᐃᐃΔ: "img/day-river011-111-010.png",
    ⵠΔᐃᐃⵠⵠⲆ: "img/day-river011-111-011.png",
    ᐃΔᐃΔⲆⵠᐃ: "img/day-river011-111-110.png",
    ⵠΔΔⲆΔᐃⵠ: "img/day-river011-111-111.png",
    ᐃⲆⲆᐃⵠΔⲆ: "img/day-river110-110-000.png",
    ⲆᐃⲆᐃⲆⵠᐃ: "img/day-river110-110-010.png",
    ᐃΔⵠⵠⵠⲆᐃ: "img/day-river110-110-110.png",
    ᐃⲆΔⲆᐃᐃᐃ: "img/day-river110-111-000.png",
    ΔᐃᐃⲆᐃᐃⵠ: "img/day-river110-111-010.png",
    ⵠᐃⲆⲆᐃⵠⵠ: "img/day-river110-111-011.png",
    ΔⲆΔⵠⲆΔΔ: "img/day-river110-111-110.png",
    ᐃΔᐃΔᐃΔᐃ: "img/day-river110-111-111.png",
    ⵠⲆⵠΔⵠΔⲆ: "img/day-river111-111-011.png",
    ⲆⵠⲆⲆⲆⵠⵠ: "img/day-river111-111-110.png",
    ⵠⲆⵠΔⵠΔⲆ: "img/day-river111-111-011.png",
    ⲆⵠᐃⵠⲆⲆⲆ: "img/day-river111-111-000.png",
    ᐃΔⲆᐃⲆᐃΔ: "img/day-river111-111-111.png",
    ΔⵠⵠΔΔⲆⲆ: "img/day-river111-111-010.png",
    ⲆⵠⵠⲆⵠΔᐃ: "img/night-river000-010-000.png",
    ΔⲆᐃᐃⵠᐃᐃ: "img/night-river000-010-010.png",
    ᐃΔⵠⵠΔᐃᐃ: "img/night-river000-011-000.png",
    ⲆⵠⲆᐃΔⵠᐃ: "img/night-river000-011-010.png",
    ⵠΔΔⲆⲆⲆΔ: "img/night-river000-011-011.png",
    ΔΔΔΔⲆⵠΔ: "img/night-river000-110-000.png",
    ⲆⲆᐃⵠΔⵠᐃ: "img/night-river000-110-010.png",
    ⵠⵠⲆⲆⵠⵠᐃ: "img/night-river000-110-110.png",
    ᐃⵠⲆᐃⵠᐃΔ: "img/night-river000-111-000.png",
    ᐃΔΔΔⲆΔΔ: "img/night-river000-111-010.png",
    ᐃΔⵠᐃΔᐃᐃ: "img/night-river000-111-011.png",
    ⵠΔⵠⲆΔΔⵠ: "img/night-river000-111-110.png",
    ⲆⵠⵠᐃᐃᐃΔ: "img/night-river000-111-111.png",
    ⵠᐃᐃⵠΔΔΔ: "img/night-river010-010-000.png",
    ⲆᐃⵠΔΔⵠᐃ: "img/night-river010-010-010.png",
    ᐃΔΔⵠⵠΔᐃ: "img/night-river010-011-000.png",
    ᐃΔⲆᐃᐃⲆΔ: "img/night-river010-011-010.png",
    ΔⲆⵠᐃᐃⲆᐃ: "img/night-river010-011-011.png",
    ⵠΔⵠⵠΔᐃᐃ: "img/night-river010-110-000.png",
    ᐃᐃᐃΔⵠΔΔ: "img/night-river010-110-010.png",
    ᐃⲆⵠΔᐃⲆᐃ: "img/night-river010-110-110.png",
    ᐃΔΔΔΔⲆⵠ: "img/night-river010-111-000.png",
    ⲆΔΔⵠⲆⵠᐃ: "img/night-river010-111-010.png",
    ⲆᐃΔΔΔᐃⵠ: "img/night-river010-111-011.png",
    ΔⲆᐃⵠΔⲆⲆ: "img/night-river010-111-110.png",
    ᐃⲆΔΔⲆⲆⲆ: "img/night-river010-111-111.png",
    ΔⲆΔᐃⵠΔΔ: "img/night-river011-011-000.png",
    ⵠⲆⲆΔΔᐃᐃ: "img/night-river011-011-010.png",
    ΔⲆΔⲆΔⵠⵠ: "img/night-river011-011-011.png",
    ⵠᐃⵠⲆΔⵠⵠ: "img/night-river011-111-000.png",
    ᐃᐃⵠΔΔⲆΔ: "img/night-river011-111-010.png",
    ΔᐃᐃⲆᐃⵠΔ: "img/night-river011-111-011.png",
    ⲆᐃᐃⲆⲆⲆⲆ: "img/night-river011-111-110.png",
    ᐃΔⲆΔᐃⵠⵠ: "img/night-river011-111-111.png",
    ΔⲆΔⵠᐃⲆᐃ: "img/night-river110-110-000.png",
    ᐃⲆΔⲆⵠⲆⲆ: "img/night-river110-110-010.png",
    ⲆⵠᐃⲆΔⲆᐃ: "img/night-river110-110-110.png",
    ⲆΔⲆΔⵠⲆΔ: "img/night-river110-111-000.png",
    ⵠⲆΔᐃΔⲆΔ: "img/night-river110-111-010.png",
    ⲆΔⲆⲆᐃⲆΔ: "img/night-river110-111-011.png",
    ⵠⲆⲆΔⲆⲆⲆ: "img/night-river110-111-110.png",
    ᐃⲆΔΔⵠⵠⲆ: "img/night-river110-111-111.png",
    ⲆⲆᐃΔΔⲆΔ: "img/night-river111-111-011.png",
    ⵠⲆⵠΔΔΔⲆ: "img/night-river111-111-110.png",
    ⲆⲆᐃΔΔⲆΔ: "img/night-river111-111-011.png",
    ⲆΔᐃᐃᐃΔΔ: "img/night-river111-111-000.png",
    ΔⵠⵠΔⲆΔⲆ: "img/night-river111-111-111.png",
    ⵠᐃᐃΔⲆⲆᐃ: "img/night-river111-111-010.png",
    ⲆⲆΔᐃΔᐃΔ: "img/day-pebblecompo1.png",
    ᐃⵠΔΔⲆ: "img/day-pebblecompo2.png",
    ΔᐃᐃⵠΔ: "img/day-pebblecompo3.png",
    ΔᐃⲆⲆΔΔΔ: "img/day-pebblecompo4.png",
    ⲆⵠΔⲆⲆ: "img/day-pebblecompo5.png",
    ⲆⵠΔⲆᐃ: "img/day-pebblecompo6.png",
    ᐃⲆⵠΔⵠ: "img/day-pebblecompo7.png",
    ᐃⲆᐃΔⲆⵠⲆ: "img/day-pebblecompo8.png",
    ᐃⲆᐃᐃΔⲆⵠ: "img/day-pebblecompo9.png",
    ᐃⵠᐃᐃΔⲆⲆ: "img/day-pebblecompo10.png",
    ⲆⵠⵠⲆⵠ: "img/day-pebblecompo11.png",
    ᐃⲆⲆᐃᐃⵠⲆ: "img/day-pebblecompo12.png",
    ΔᐃⲆⲆⲆⵠΔ: "img/day-pebblecompo13.png",
    ⲆᐃⵠⲆⲆⵠΔ: "img/day-pebblecompo14.png",
    ⵠΔⵠᐃᐃᐃΔ: "img/day-pebblecompo15.png",
    ᐃᐃⲆΔⵠΔᐃ: "img/day-pebblecompo16.png",
    ⲆΔΔⵠᐃ: "img/day-pebblecompo17.png",
    ΔΔᐃΔᐃⵠⵠ: "img/day-pebblecompo18.png",
    ΔΔΔΔⵠΔΔ: "img/day-pebblecompo19.png",
    ⲆᐃⲆⵠᐃ: "img/day-pebblecompo20.png",
    ⵠΔΔⲆΔ: "img/day-pebblecompo21.png",
    ⲆⲆⲆΔᐃⵠⲆ: "img/day-pebblecompo22.png",
    ⵠᐃᐃΔᐃᐃΔ: "img/day-pebblecompo23.png",
    ᐃⵠⲆΔⵠΔⵠ: "img/day-pebblecompo24.png",
    ⲆΔΔⵠΔ: "img/day-pebblecompo25.png",
    ⲆᐃⲆΔⲆ: "img/day-pebblecompo26.png",
    ΔⵠⵠⲆⲆᐃⵠ: "img/day-pebblecompo27.png",
    ΔⲆᐃΔᐃ: "img/day-pebblecompo28.png",
    ᐃⲆⲆⵠΔᐃᐃ: "img/night-pebblecompo1.png",
    Ⲇᐃⵠⵠᐃ: "img/night-pebblecompo2.png",
    ⲆⲆᐃΔⵠ: "img/night-pebblecompo3.png",
    ᐃᐃΔΔⵠⵠⵠ: "img/night-pebblecompo4.png",
    ⵠⵠΔⵠΔ: "img/night-pebblecompo5.png",
    ᐃⵠⲆⵠᐃ: "img/night-pebblecompo6.png",
    ΔⵠΔⵠᐃ: "img/night-pebblecompo7.png",
    ⵠΔⲆⵠⲆⲆⵠ: "img/night-pebblecompo8.png",
    ⲆΔᐃⵠᐃⵠᐃ: "img/night-pebblecompo9.png",
    ⲆΔⲆᐃᐃᐃΔ: "img/night-pebblecompo10.png",
    ⵠΔⵠᐃⲆ: "img/night-pebblecompo11.png",
    ⲆᐃⲆᐃⲆᐃⲆ: "img/night-pebblecompo12.png",
    ᐃΔⲆΔΔⵠᐃ: "img/night-pebblecompo13.png",
    ⵠΔⲆⲆⲆᐃⵠ: "img/night-pebblecompo14.png",
    ΔΔⲆᐃⵠⲆⲆ: "img/night-pebblecompo15.png",
    ΔⵠⲆⵠⵠⲆⵠ: "img/night-pebblecompo16.png",
    ΔᐃⵠᐃⲆ: "img/night-pebblecompo17.png",
    ⵠᐃΔⲆΔᐃᐃ: "img/night-pebblecompo18.png",
    ⲆΔΔⵠΔⵠΔ: "img/night-pebblecompo19.png",
    ᐃΔΔⵠⲆ: "img/night-pebblecompo20.png",
    ⵠΔΔⲆⲆ: "img/night-pebblecompo21.png",
    ΔΔᐃⵠᐃᐃΔ: "img/night-pebblecompo22.png",
    ⲆᐃΔΔⵠⲆΔ: "img/night-pebblecompo23.png",
    ⵠⲆᐃΔᐃⲆⵠ: "img/night-pebblecompo24.png",
    ⲆᐃⵠΔⵠ: "img/night-pebblecompo25.png",
    ⲆᐃⲆⵠΔ: "img/night-pebblecompo26.png",
    ᐃⲆΔΔᐃⵠΔ: "img/night-pebblecompo27.png",
    ΔᐃᐃⲆᐃ: "img/night-pebblecompo28.png",
    ΔΔΔᐃΔⲆⵠ: "img/day-baby-mammoth.png",
    ΔⵠΔΔⵠᐃΔ: "img/day-baby-mammoth-tamed.png",
    ΔⲆⲆⵠΔⵠⲆ: "img/day-baby-mammoth-angry.png",
    ΔⵠΔⵠᐃᐃᐃ: "img/night-baby-mammoth.png",
    ᐃΔⲆΔΔⵠΔ: "img/night-baby-mammoth-tamed.png",
    ᐃⵠΔᐃΔⵠᐃ: "img/night-baby-mammoth-angry.png",
    ΔⵠⵠⲆⲆⲆⵠ: "img/inv-mammoth-out.png",
    ⲆΔᐃⵠⵠΔᐃ: "img/inv-mammoth-in.png",
    ⵠΔⲆⵠᐃΔⵠ: "img/inv-mammoth-click.png",
    ⵠⲆⵠΔⵠⵠⲆ: "img/hurt-baby-mammoth.png",
    ⵠⲆⵠΔΔΔΔ: "img/baby-mammoth-step.png",
    ᐃⵠᐃⲆᐃᐃΔ: "img/day-flower-hat.png",
    ΔΔⲆⵠΔᐃⵠ: "img/night-flower-hat.png",
    ⵠᐃⵠᐃᐃⲆⵠ: "img/inv-flower-hat-out.png",
    ⲆⵠΔΔᐃⲆⵠ: "img/inv-flower-hat-in.png",
    ⵠⵠⲆⲆⲆⵠΔ: "img/inv-flower-hat-click.png",
    ᐃᐃⵠⵠⲆΔΔ: "img/day-fur-hat.png",
    ᐃⲆⵠⵠΔⲆᐃ: "img/night-fur-hat.png",
    ΔᐃᐃᐃⲆⵠΔ: "img/inv-fur-hat-out.png",
    ⵠⲆΔⲆⲆΔⲆ: "img/inv-fur-hat-in.png",
    ⲆⲆⲆΔᐃᐃⲆ: "img/inv-fur-hat-click.png",
    ᐃᐃΔⵠⵠᐃⲆ: "img/day-mammoth.png",
    ΔⲆᐃᐃΔᐃΔ: "img/night-mammoth.png",
    ΔⵠⵠΔΔⵠᐃ: "img/hurt-mammoth.png",
    ᐃⲆⵠΔᐃΔΔ: "img/inv-mammoth-fur-out.png",
    ⵠΔⲆᐃⲆΔᐃ: "img/inv-mammoth-fur-in.png",
    ⲆᐃΔⲆⵠⵠⲆ: "img/inv-mammoth-fur-click.png",
    ΔΔᐃᐃΔⵠᐃ: "img/inv-wood-bow-out.png",
    ⲆᐃᐃᐃⵠΔΔ: "img/inv-wood-bow-in.png",
    ΔⵠⵠΔΔⲆⵠ: "img/inv-wood-bow-click.png",
    ⲆⲆⲆⵠⵠⵠᐃ: "img/inv-wood-arrow-out.png",
    ⵠΔᐃΔᐃⵠⲆ: "img/inv-wood-arrow-in.png",
    ΔᐃⵠΔⲆⲆᐃ: "img/inv-wood-arrow-click.png",
    ΔᐃΔᐃᐃⲆᐃ: "img/day-wood-bow2.png",
    ΔᐃᐃⵠΔⵠᐃ: "img/night-wood-bow2.png",
    ᐃⵠⲆⲆᐃⵠᐃ: "img/day-wood-arrow.png",
    ΔⵠᐃⵠᐃΔΔ: "img/night-wood-arrow.png",
    Ⲇᐃᐃᐃᐃᐃⵠ: "img/inv-stone-bow-out.png",
    ΔⲆΔⲆΔᐃᐃ: "img/inv-stone-bow-in.png",
    ᐃᐃⲆⲆΔᐃᐃ: "img/inv-stone-bow-click.png",
    ᐃΔΔΔᐃΔᐃ: "img/inv-stone-arrow-out.png",
    ⵠⲆΔⲆⵠᐃⲆ: "img/inv-stone-arrow-in.png",
    ᐃⵠⲆⲆⵠᐃΔ: "img/inv-stone-arrow-click.png",
    ⵠΔⲆᐃᐃᐃΔ: "img/day-stone-bow.png",
    ⲆⵠⲆⵠⵠⲆⵠ: "img/night-stone-bow.png",
    ᐃⵠⲆⵠΔⲆⵠ: "img/day-stone-arrow.png",
    ΔⲆΔΔⵠΔⲆ: "img/night-stone-arrow.png",
    ᐃⵠΔᐃᐃᐃⵠ: "img/inv-gold-bow-out.png",
    ⲆⵠᐃΔⵠⲆⲆ: "img/inv-gold-bow-in.png",
    ᐃᐃᐃⵠᐃᐃⲆ: "img/inv-gold-bow-click.png",
    ᐃⵠΔⲆΔᐃⵠΔᐃ: "img/inv-gold-arrow-out.png",
    ⵠⵠⲆΔᐃΔⲆⲆΔ: "img/inv-gold-arrow-in.png",
    ΔᐃⲆΔΔΔⲆΔᐃ: "img/inv-gold-arrow-click.png",
    ⲆⲆⲆᐃⲆΔΔⲆⲆ: "img/day-gold-bow.png",
    ⵠΔᐃⵠⵠⲆᐃⲆⲆ: "img/night-gold-bow.png",
    ⲆⵠᐃΔⲆᐃⲆ: "img/day-gold-arrow.png",
    ⲆᐃᐃⵠⵠⲆΔ: "img/night-gold-arrow.png",
    ⲆΔΔⲆΔⲆᐃΔⵠ: "img/inv-diamond-bow-out.png",
    ᐃᐃⲆΔⵠᐃΔⵠⵠ: "img/inv-diamond-bow-in.png",
    ⲆⲆⵠΔⲆᐃᐃⵠΔ: "img/inv-diamond-bow-click.png",
    ᐃⵠⲆΔⲆⲆᐃᐃⲆ: "img/inv-diamond-arrow-out.png",
    ΔΔΔᐃⲆᐃⵠΔⲆ: "img/inv-diamond-arrow-in.png",
    ⵠⵠΔⵠΔΔΔⲆᐃ: "img/inv-diamond-arrow-click.png",
    ⵠⲆⲆᐃΔⲆΔⲆᐃ: "img/day-diamond-bow.png",
    ᐃᐃΔᐃΔⲆⲆᐃΔ: "img/night-diamond-bow.png",
    ᐃⵠΔΔⲆΔᐃ: "img/day-diamond-arrow.png",
    ⵠⲆⵠᐃⲆⲆΔ: "img/night-diamond-arrow.png",
    ⵠΔᐃΔⵠⲆΔΔᐃ: "img/inv-amethyst-bow-out.png",
    ⲆᐃⲆⵠⵠⵠΔⵠᐃ: "img/inv-amethyst-bow-in.png",
    ⵠⵠⵠᐃΔΔᐃΔᐃ: "img/inv-amethyst-bow-click.png",
    ΔⲆᐃⲆᐃⵠⲆΔⵠ: "img/inv-amethyst-arrow-out.png",
    ΔᐃΔⲆΔⵠᐃᐃⵠ: "img/inv-amethyst-arrow-in.png",
    ᐃⵠⵠᐃΔᐃᐃᐃⵠ: "img/inv-amethyst-arrow-click.png",
    ⲆⲆⲆⲆⵠⵠΔⵠΔ: "img/day-amethyst-bow.png",
    ᐃⵠᐃᐃⲆⵠᐃⲆⵠ: "img/night-amethyst-bow.png",
    ΔᐃΔⵠΔΔᐃ: "img/day-amethyst-arrow.png",
    ᐃΔΔᐃⵠⲆΔ: "img/night-amethyst-arrow.png",
    ⵠⵠΔΔΔᐃⵠᐃⲆ: "img/inv-dragon-bow-out.png",
    ⵠⲆΔᐃⲆΔⵠⵠᐃ: "img/inv-dragon-bow-in.png",
    ⵠᐃΔᐃΔⵠⵠᐃⲆ: "img/inv-dragon-bow-click.png",
    ᐃΔΔΔⵠⲆⲆⲆⵠ: "img/inv-dragon-arrow-out.png",
    ΔⲆΔⵠⵠᐃᐃⵠᐃ: "img/inv-dragon-arrow-in.png",
    ⲆⵠⲆⵠⲆᐃᐃΔⲆ: "img/inv-dragon-arrow-click.png",
    ΔⵠⵠⲆⵠⵠⵠⵠⵠ: "img/day-dragon-bow.png",
    ᐃᐃⲆⵠⵠⲆᐃΔⵠ: "img/night-dragon-bow.png",
    ⵠⵠΔΔΔⲆⲆ: "img/day-dragon-arrow.png",
    ⲆᐃⵠⲆΔᐃΔ: "img/night-dragon-arrow.png",
    ⵠⵠⵠⲆⲆⵠⲆⲆΔ: "img/inv-reidite-bow-out.png",
    ΔᐃⵠⲆⵠΔᐃᐃⲆ: "img/inv-reidite-bow-in.png",
    ⵠⲆΔΔᐃΔᐃⲆΔ: "img/inv-reidite-bow-click.png",
    ⵠⵠΔⵠΔⲆⲆᐃΔ: "img/inv-reidite-arrow-out.png",
    ⵠⲆᐃⵠΔⵠⵠΔᐃ: "img/inv-reidite-arrow-in.png",
    ⵠⵠᐃᐃΔΔⵠΔᐃ: "img/inv-reidite-arrow-click.png",
    ᐃᐃᐃᐃΔΔᐃⲆⵠ: "img/day-reidite-bow.png",
    ΔⵠⲆΔΔⲆⲆᐃⲆ: "img/night-reidite-bow.png",
    Ⲇⵠⵠᐃᐃⵠⵠ: "img/day-reidite-arrow.png",
    ᐃⵠΔΔᐃΔΔⲆⲆ: "img/night-reidite-arrow.png",
    ⵠΔΔⵠᐃⲆΔⲆⲆ: "img/inv-wooden-axe-out.png",
    ⵠⲆⵠᐃᐃⲆᐃᐃⲆ: "img/inv-wooden-axe-in.png",
    ⵠΔⵠΔΔᐃᐃⵠⲆ: "img/inv-wooden-axe-click.png",
    ⵠΔΔᐃᐃⲆⵠᐃᐃ: "img/day-wooden-axe.png",
    ⵠΔᐃⲆΔⲆⵠᐃⲆ: "img/night-wooden-axe.png",
    ᐃᐃΔᐃᐃΔΔⵠᐃ: "img/inv-stone-axe-out.png",
    ΔΔⲆᐃΔΔⲆⲆⵠ: "img/inv-stone-axe-in.png",
    ΔⲆⲆᐃⵠⵠΔΔΔ: "img/inv-stone-axe-click.png",
    ⵠΔⵠΔΔΔⵠⵠᐃ: "img/day-stone-axe.png",
    ᐃᐃⲆⲆΔⵠΔⲆⵠ: "img/night-stone-axe.png",
    ᐃⲆⲆᐃⲆⲆⲆΔⲆ: "img/inv-golden-axe-out.png",
    ⲆⲆΔᐃⵠᐃⵠᐃΔ: "img/inv-golden-axe-in.png",
    ⵠⵠΔⵠⲆᐃⲆᐃⲆ: "img/inv-golden-axe-click.png",
    ⲆⲆⲆΔⲆΔΔᐃΔ: "img/day-golden-axe.png",
    ⵠⲆⵠⲆⲆⵠⲆᐃᐃ: "img/night-golden-axe.png",
    ⵠⲆΔⵠᐃᐃᐃⵠΔ: "img/inv-diamond-axe-out.png",
    ΔΔⲆᐃᐃᐃⲆⵠⲆ: "img/inv-diamond-axe-in.png",
    ΔⲆⲆΔΔΔᐃⲆΔ: "img/inv-diamond-axe-click.png",
    ⵠⵠⵠⵠΔⲆⲆⵠⵠ: "img/day-diamond-axe.png",
    ⵠⵠᐃⲆᐃΔᐃΔⵠ: "img/night-diamond-axe.png",
    ⵠⵠᐃⵠⲆᐃᐃⵠΔ: "img/inv-amethyst-axe-out.png",
    ΔΔⲆᐃΔᐃΔⵠⵠ: "img/inv-amethyst-axe-in.png",
    ᐃΔᐃᐃΔᐃᐃᐃΔ: "img/inv-amethyst-axe-click.png",
    ⲆⵠᐃⲆⵠᐃⵠΔⵠ: "img/day-amethyst-axe.png",
    ΔⵠΔⲆᐃᐃᐃᐃⵠ: "img/night-amethyst-axe.png",
    ⵠᐃⵠΔⲆᐃᐃΔᐃ: "img/inv-reidite-axe-out.png",
    ⲆⲆⵠⵠⲆΔᐃᐃⲆ: "img/inv-reidite-axe-in.png",
    ⲆⲆᐃΔⲆⵠⵠΔΔ: "img/inv-reidite-axe-click.png",
    ⵠΔᐃⵠⲆⵠⲆᐃᐃ: "img/day-reidite-axe.png",
    ΔⲆⲆⵠᐃᐃⲆⵠⲆ: "img/night-reidite-axe.png",
    ⵠⲆⵠᐃΔᐃᐃ: "img/bandage-activated.png",
    ΔⵠⵠΔΔⵠⲆ: "img/auto-feed.png",
    ⲆⵠⲆⵠⵠⵠⵠ: "img/stop-regeneration.png",
    ⲆⵠᐃⲆⲆⵠΔ: "img/stop-regeneration2.png",
    ᐃᐃⲆᐃⵠΔⲆⲆⲆ: "img/day-wood-platform.png",
    ΔᐃΔⲆⲆΔᐃⵠⵠ: "img/night-wood-platform.png",
    ⲆᐃᐃᐃⵠΔᐃᐃᐃ: "img/inv-wood-platform-in.png",
    ᐃᐃⵠⵠΔᐃⵠⵠⵠ: "img/inv-wood-platform-out.png",
    ⲆΔⲆᐃⵠΔΔΔⲆ: "img/inv-wood-platform-click.png",
    ⵠⲆⲆⲆΔⲆⲆᐃᐃ: "img/day-wood-shield.png",
    ⵠⲆΔΔⲆⲆⵠⵠΔ: "img/night-wood-shield.png",
    ΔⵠⲆᐃⲆᐃⲆᐃΔ: "img/day-stone-shield.png",
    ⵠΔⵠⵠΔᐃΔᐃⲆ: "img/night-stone-shield.png",
    ΔᐃΔⲆᐃⵠⲆⲆΔ: "img/day-gold-shield.png",
    ΔⲆᐃᐃⵠⲆᐃⵠΔ: "img/night-gold-shield.png",
    ⲆΔᐃΔⲆⵠᐃⵠⵠ: "img/day-diamond-shield.png",
    ⵠⵠⵠⵠᐃⲆⲆᐃΔ: "img/night-diamond-shield.png",
    ⲆⲆⵠⲆⲆⲆⵠΔⵠ: "img/day-amethyst-shield.png",
    ⲆⲆΔⲆⲆⵠΔᐃᐃ: "img/night-amethyst-shield.png",
    ᐃⵠᐃᐃᐃⲆⵠᐃⵠ: "img/day-reidite-shield.png",
    ΔΔᐃΔⵠⲆⲆⲆⲆ: "img/night-reidite-shield.png",
    ⵠⵠⵠⲆⵠⲆᐃΔᐃ: "img/inv-wood-shield-in.png",
    ⲆⲆⵠⲆᐃⵠΔⵠⲆ: "img/inv-wood-shield-out.png",
    ᐃᐃᐃᐃΔΔᐃᐃᐃ: "img/inv-wood-shield-click.png",
    ΔⲆᐃⵠΔⲆΔΔⲆ: "img/inv-stone-shield-in.png",
    ⵠⵠΔᐃⵠᐃΔⲆⲆ: "img/inv-stone-shield-out.png",
    ΔᐃΔⵠⲆᐃⵠⲆΔ: "img/inv-stone-shield-click.png",
    ᐃᐃΔⵠⵠΔⵠⲆⲆ: "img/inv-gold-shield-in.png",
    ⲆⵠⵠΔᐃⵠΔΔΔ: "img/inv-gold-shield-out.png",
    ⵠⲆⵠⲆΔΔΔᐃⵠ: "img/inv-gold-shield-click.png",
    ᐃⲆΔⵠΔⲆᐃⲆⲆ: "img/inv-diamond-shield-in.png",
    ᐃᐃᐃΔⲆⵠΔⲆΔ: "img/inv-diamond-shield-out.png",
    ⵠⲆΔⲆΔΔΔᐃⲆ: "img/inv-diamond-shield-click.png",
    ᐃⲆⲆⵠⵠⵠΔᐃΔ: "img/inv-amethyst-shield-in.png",
    ΔᐃⵠⲆⵠᐃⵠᐃᐃ: "img/inv-amethyst-shield-out.png",
    ΔⵠⵠᐃΔΔⵠⵠⵠ: "img/inv-amethyst-shield-click.png",
    ⵠᐃⵠⵠᐃΔᐃΔⲆ: "img/inv-reidite-shield-in.png",
    ᐃⲆⲆⵠⲆΔⲆⵠⲆ: "img/inv-reidite-shield-out.png",
    ⲆⲆΔⲆᐃⲆᐃⵠⲆ: "img/inv-reidite-shield-click.png",
    ⵠⵠᐃⵠᐃⵠᐃⲆΔ: "img/day-machete.png",
    ⵠΔⵠᐃᐃⵠⲆᐃⵠ: "img/night-machete.png",
    ΔᐃⵠⲆΔⲆⲆⵠΔ: "img/inv-machete-in.png",
    ᐃⲆⲆⲆΔⵠⵠΔⲆ: "img/inv-machete-out.png",
    ⵠⵠᐃᐃΔᐃⲆᐃΔ: "img/inv-machete-click.png"
  };
  ΔΔᐃᐃⵠᐃⵠ = [{}];
  const v779 = 1;
  ΔΔᐃᐃⵠᐃⵠ[0].stringify = function (p529) {
    var v780 = new Uint8Array(new ArrayBuffer(p529.length));
    for (var v781 = 0; v781 < p529.length; v781++) {
      v780[v781] = p529[v781];
    }
    return v780;
  };
  ΔⲆⵠⵠΔⲆⵠ = {};
  ΔᐃⵠΔΔΔⲆᐃΔ = {};
  for (var v782 in Δⵠ) {
    ΔⲆⵠⵠΔⲆⵠ[v782] = Δⵠ[v782];
  }
  ⵠΔ = [];
  ⲆⲆⲆ = {};
  const v783 = 5;
  ⲆⲆⲆ.ᐃΔⵠᐃᐃ = 0;
  const v784 = 10;
  ⲆⲆⲆ.ᐃΔΔⵠ = 1;
  ⲆⲆⲆ.ΔΔⵠΔ = 2;
  ⲆⲆⲆ.ᐃΔᐃΔ = 3;
  const v785 = 100;
  var v786 = vWindow.console;
  v786.log = v786.info = v786.error = v786.warn = v786.debug = v786.ⲆΔΔⲆⵠⲆⲆᐃⵠ = v786.trace = v786.time = v786.timeEnd = function () {};
  ⲆⲆⲆ.ⵠⲆᐃᐃ = 4;
  ⲆⲆⲆ.ⵠΔⲆⵠ = 5;
  ⲆⲆⲆ.ⵠⲆᐃΔ = 6;
  ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ = 7;
  ⲆⲆⲆ.ΔᐃΔⲆΔ = 8;
  const v787 = 2;
  ⲆⵠᐃⲆ = {};
  ⵠΔⵠᐃ = [];
  ᐃⵠᐃⵠΔⵠⲆ = function (p530, p531) {
    for (var v788 = 0; v788 < p530.length; v788++) {
      if (p531 === p530[v788].id) {
        return v788;
      }
    }
    return -1;
  };
  var v789 = [];
  function f81(p532, p533) {
    for (var v790 = 0; v789.length > v790; v790 += p533) {
      var v791 = v789[v790];
      if (v791[0] === p532) {
        f82(v791[0], v791[1], v791[2], v791[3]);
      }
    }
  }
  function f82(p534, p535, p536, p537) {
    var v792 = ⵠΔⵠᐃ[p534];
    if (v792 !== undefined) {
      for (var v793 = 0; v793 < 2; v793++) {
        var v794 = v792[p535][v793];
        var v795 = p537 * 193 / v2812.ⲆΔᐃⵠⲆ;
        var v796 = p536 * 193 / v2812.ⵠΔᐃΔⵠ;
        var v797 = v794.width / 3.5;
        var v798 = v794.height / 3.5;
        ⵠΔ[818][v793].drawImage(v794, v795 - v797 / 2, v796 - v798 / 2, v797, v798);
        v795 = p537 * 600 / v2812.ⲆΔᐃⵠⲆ;
        v796 = p536 * 600 / v2812.ⵠΔᐃΔⵠ;
        v797 = v794.width / 1.5;
        v798 = v794.height / 1.5;
        ⵠΔ[819][v793].drawImage(v794, v795 - v797 / 2, v796 - v798 / 2, v797, v798);
      }
    }
  }
  ΔⵠⵠⲆᐃᐃΔⵠⵠ = function () {
    for (var v799 = 0; v799 < 2; v799++) {
      ⵠΔ[818][v799].clearRect(0, 0, 193, 193);
      ⵠΔ[818][v799].drawImage(ⵠΔⵠᐃ.MAP[v799], 0, 0, 193, 193);
      ⵠΔ[819][v799].clearRect(0, 0, 600, 600);
      ⵠΔ[819][v799].drawImage(ⵠΔⵠᐃ.MAP[v799], 0, 0, 600, 600);
      for (var v800 = v2812.ΔᐃⵠⲆ.length - 1; v800 >= 0; v800--) {
        var v801 = v2812.ΔᐃⵠⲆ[v800];
        var v802 = v801.x1 * 193 / (v2812.ⲆΔᐃⵠⲆ * 100);
        var v803 = v801.y1 * 193 / (v2812.ⵠΔᐃΔⵠ * 100);
        var v804 = v801.w * 193 / (v2812.ⲆΔᐃⵠⲆ * 100);
        var v805 = v801.ⵠᐃⵠ * 193 / (v2812.ⵠΔᐃΔⵠ * 100);
        var v806 = v801.x1 * 600 / (v2812.ⲆΔᐃⵠⲆ * 100);
        var v807 = v801.y1 * 600 / (v2812.ⵠΔᐃΔⵠ * 100);
        var v808 = v801.w * 600 / (v2812.ⲆΔᐃⵠⲆ * 100);
        var v809 = v801.ⵠᐃⵠ * 600 / (v2812.ⵠΔᐃΔⵠ * 100);
        if (v801.ΔᐃΔ === v2812.ⵠⵠⵠᐃⵠ) {
          ⵠΔ[818][v799].drawImage(ⵠΔⵠᐃ.FOREST[v799], v802, v803, v804, v805);
          ⵠΔ[819][v799].drawImage(ⵠΔⵠᐃ.FOREST[v799], v806, v807, v808, v809);
        }
        if (v2812.ᐃⵠⲆⲆᐃⵠΔ === v801.ΔᐃΔ) {
          ⵠΔ[818][v799].drawImage(ⵠΔⵠᐃ.WINTER[v799], v802, v803, v804, v805);
          ⵠΔ[819][v799].drawImage(ⵠΔⵠᐃ.WINTER[v799], v806, v807, v808, v809);
        }
        if (v2812.Ⲇᐃᐃᐃᐃⵠᐃ === v801.ΔᐃΔ) {
          ⵠΔ[818][v799].drawImage(ⵠΔⵠᐃ.LAVA[v799], v802, v803, v804, v805);
          ⵠΔ[819][v799].drawImage(ⵠΔⵠᐃ.LAVA[v799], v806, v807, v808, v809);
        }
        if (v2812.ⵠⲆⲆⵠᐃᐃⲆ === v801.ΔᐃΔ) {
          ⵠΔ[818][v799].drawImage(ⵠΔⵠᐃ.CAVE[v799], v802, v803, v804, v805);
          ⵠΔ[819][v799].drawImage(ⵠΔⵠᐃ.CAVE[v799], v806, v807, v808, v809);
        }
        if (v2812.ΔᐃΔⵠᐃⵠᐃ === v801.ΔᐃΔ) {
          ⵠΔ[818][v799].drawImage(ⵠΔⵠᐃ.DESERT[v799], v802, v803, v804, v805);
          ⵠΔ[819][v799].drawImage(ⵠΔⵠᐃ.DESERT[v799], v806, v807, v808, v809);
        }
      }
    }
  };
  ⲆⲆⲆⵠⵠᐃⵠΔΔ = function () {
    ⲆⵠᐃⲆ = {
      ᐃⵠⲆΔⵠ: [{
        id: 0,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔΔΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃⵠⲆᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆⵠΔⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⵠᐃⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Starver"
      }, {
        id: 3,
        ⵠΔⵠ: Δⵠ.ΔΔΔⲆⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠᐃΔⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠⵠⲆᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⲆΔⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Angry"
      }, {
        id: 2,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆⲆⲆᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠᐃⲆⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠΔⵠΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠΔᐃⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Sad"
      }, {
        id: 9,
        ⵠΔⵠ: Δⵠ.ΔΔᐃⲆⲆⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔΔΔΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆᐃᐃᐃⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⵠⲆᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Happy 1"
      }, {
        id: 1,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠᐃⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⵠⵠΔᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔΔᐃⵠⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⲆⵠⵠⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "What?"
      }, {
        id: 4,
        ⵠΔⵠ: Δⵠ.ΔΔΔⵠᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆΔⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃᐃΔᐃⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔᐃⲆᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Suspicious"
      }, {
        id: 5,
        ⵠΔⵠ: Δⵠ.ΔΔⲆⵠⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔⲆⲆⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃⵠⵠᐃⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⵠΔⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Scar"
      }, {
        id: 6,
        ⵠΔⵠ: Δⵠ.ΔⵠΔᐃⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃΔΔⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔᐃⵠⲆⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠΔᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "In Trouble"
      }, {
        id: 7,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆⵠΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆΔᐃᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠΔⲆⲆΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔΔⲆΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Cute"
      }, {
        id: 8,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆⵠΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⵠⲆᐃΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠⲆⲆΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bored 1"
      }, {
        id: 10,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃⲆᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃⲆᐃᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆᐃⲆⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔΔⵠᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Happy 2"
      }, {
        id: 11,
        ⵠΔⵠ: Δⵠ.ᐃΔΔΔΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃⲆΔⵠⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⲆΔᐃⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃΔΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Crazy"
      }, {
        id: 12,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔΔⵠΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠΔΔⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃΔᐃΔⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔΔᐃⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Happy 3"
      }, {
        id: 13,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆΔⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠΔⵠΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⵠⲆΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⲆΔⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Very Cute"
      }, {
        id: 14,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆΔΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⲆⵠΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⵠᐃⵠΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⵠΔⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Curious"
      }, {
        id: 15,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔᐃΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃᐃⲆᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔΔⵠⵠⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃᐃⲆᐃΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bored 2"
      }, {
        id: 16,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃⲆᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔⵠⵠΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔⵠⲆⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠᐃΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Happy 4"
      }, {
        id: 17,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆⲆΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⲆΔᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔⲆⵠⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⲆⲆⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Scar 2"
      }, {
        id: 18,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔΔΔⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔΔⵠⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠⲆⲆⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆΔⲆⵠⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Sick"
      }, {
        id: 19,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔⲆΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔⵠᐃⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⲆΔᐃᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆΔΔⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Somnambule"
      }, {
        id: 24,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔⵠⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠᐃⲆⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃⲆΔᐃᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.Ⲇⵠᐃⵠⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Pixelbitie",
        name: "Feel Bad"
      }, {
        id: 23,
        ⵠΔⵠ: Δⵠ.ⲆⵠⵠⲆΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔᐃⲆⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⲆⵠⲆᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔΔⵠⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Pixelbitie",
        name: "Mmmh."
      }, {
        id: 103,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠᐃⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆⵠⵠⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠΔΔⵠⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⲆᐃⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Panic"
      }, {
        id: 105,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⲆⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃⲆⵠⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⵠⲆΔⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃΔⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Hypnotic"
      }, {
        id: 106,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆᐃΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔᐃⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆᐃⵠⲆΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⲆⵠⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Stars in the eyes"
      }, {
        id: 220,
        ⵠΔⵠ: Δⵠ.Δᐃⵠᐃⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔⵠⲆΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃΔⲆΔⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃⵠᐃΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Seams"
      }, {
        id: 104,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠΔⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠᐃᐃΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆᐃⵠᐃᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃᐃⵠΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Scared at night"
      }, {
        id: 20,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃᐃᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆⵠΔΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠⲆⵠΔᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔᐃⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Vampire"
      }, {
        id: 21,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠΔᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠⲆᐃⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⲆⵠΔᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆΔⵠⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Zombie"
      }, {
        id: 22,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆⲆⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆⵠⵠᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃⵠΔⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔᐃⵠⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Pixelbitie",
        name: "Devaster"
      }, {
        id: 116,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⲆⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⲆΔᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆⲆⵠᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔⲆⵠⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Fukss",
        name: "Dead Devaster"
      }, {
        id: 27,
        ⵠΔⵠ: Δⵠ.ΔᐃΔᐃⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔᐃⵠᐃᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠᐃⲆⲆⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃΔΔⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Winter",
        name: "Cactus"
      }, {
        id: 28,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔᐃΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃⲆΔᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠᐃᐃΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔⵠᐃᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Bee"
      }, {
        id: 49,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆⵠᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃΔᐃⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆΔΔⵠⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⵠⲆⵠⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Camo Skin"
      }, {
        id: 58,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃⲆΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔᐃΔᐃⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠⵠΔⵠΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⵠᐃⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Blue Limax Skin"
      }, {
        id: 59,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠᐃⲆᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠⲆΔⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠΔⲆΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠⵠΔⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Red Limax Skin"
      }, {
        id: 94,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⲆᐃΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆⵠᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔᐃⲆⵠⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⲆⲆⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Mr. Pumpkin"
      }, {
        id: 109,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠⵠΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆⲆΔΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃⵠⵠⲆΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⲆᐃΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Wood"
      }, {
        id: 114,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⵠⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃⵠⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⲆⵠⲆⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠᐃⲆΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Zebra"
      }, {
        id: 120,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⵠⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆᐃⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔⲆⵠΔΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃⲆⵠⲆᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "CrysTal",
        name: "Tiger"
      }, {
        id: 134,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⵠⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃⲆΔΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠⲆᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠᐃⲆΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Franchestcreator",
        name: "Day or Night"
      }, {
        id: 135,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃᐃᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃΔⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⵠΔⵠⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠᐃᐃⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Poinet",
        name: "Square Starver"
      }, {
        id: 136,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠΔΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃΔⲆΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆᐃᐃΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃⵠᐃᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Voodoo Doll"
      }, {
        id: 137,
        ⵠΔⵠ: Δⵠ.ᐃⲆΔΔⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆᐃᐃⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆᐃⲆⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⵠⲆᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Frankenstein"
      }, {
        id: 138,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⵠⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔⲆΔⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆⵠᐃᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠⲆⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Mummy"
      }, {
        id: 139,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠⵠΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃΔᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠᐃⵠⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠᐃΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Werewolf"
      }, {
        id: 140,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃΔⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆᐃᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠᐃᐃᐃⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔΔⲆⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Cthulhu"
      }, {
        id: 141,
        ⵠΔⵠ: Δⵠ.ᐃᐃⲆⵠⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆᐃⵠᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆᐃΔΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆⵠᐃⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Sea Man"
      }, {
        id: 142,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠᐃⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆΔⵠⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⵠⲆⲆⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔΔⲆᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Pumpkin"
      }, {
        id: 148,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃᐃΔᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⲆΔΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔᐃΔᐃΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⲆⲆⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Snowman"
      }, {
        id: 149,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠᐃΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆΔⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⲆᐃⲆⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃⵠΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Christmas Tree Man"
      }, {
        id: 150,
        ⵠΔⵠ: Δⵠ.ⲆΔᐃⵠⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆΔᐃⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆⵠⵠΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃΔΔⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Mrs Bell"
      }, {
        id: 151,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃᐃᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠᐃΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠΔⲆᐃⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃΔⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Elfy"
      }, {
        id: 152,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔⲆΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆΔⵠⵠⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠᐃΔᐃⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔΔΔΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Mr Present"
      }, {
        id: 153,
        ⵠΔⵠ: Δⵠ.ⵠΔⲆⵠⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆΔⲆⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠⲆⵠⲆᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⲆⲆⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "My Dear Old Deer"
      }, {
        id: 154,
        ⵠΔⵠ: Δⵠ.ΔΔⲆΔⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⲆⵠΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃΔⵠΔΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⲆⵠⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr Angel"
      }, {
        id: 155,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⵠⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⵠΔᐃⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⲆⵠⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃᐃⵠᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr Ice Cube"
      }, {
        id: 156,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃⵠⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠᐃᐃⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⵠΔⵠⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⵠⵠΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr Snowman"
      }, {
        id: 159,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠΔΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠⲆⵠΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃΔⵠΔᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔᐃⲆΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "CrysTal",
        name: "Crystal Sky Skin"
      }, {
        id: 167,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆⲆᐃΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆⵠⲆⲆⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃᐃΔⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Franchestcreator",
        name: "Radioactive Starver"
      }, {
        id: 169,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆᐃᐃΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔⲆΔⵠᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠⲆΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "TheScaryBlaze",
        name: "Eaten Cookie"
      }, {
        id: 170,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃⲆⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⲆⵠᐃᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆⵠΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔⲆΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "aloner",
        name: "Blob Thing"
      }, {
        id: 172,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔΔⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃⵠΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠᐃⲆⲆᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆⵠΔⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "aloner",
        name: "Machine Mask"
      }, {
        id: 184,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃⲆⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆᐃⲆΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆΔᐃᐃⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃΔⲆⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Mad"
      }, {
        id: 206,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠⵠⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃⲆⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⵠᐃⲆⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠᐃⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Survivor"
      }, {
        id: 209,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠᐃΔⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠⲆΔⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⲆΔΔⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃⵠΔᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Starverator"
      }, {
        id: 230,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆⵠⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆᐃᐃⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔΔⵠᐃΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠᐃⵠⲆᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Totem"
      }, {
        id: 231,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆᐃᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃᐃΔⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃᐃΔⵠⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃᐃΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Big Pile of Sand"
      }, {
        id: 232,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠⵠᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⵠⲆⵠᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃΔⲆΔᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃᐃᐃΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Big Pile of Dirt"
      }, {
        id: 235,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃΔΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⵠᐃΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⵠⲆⲆΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆᐃⲆⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Sandstone"
      }, {
        id: 29,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃⲆᐃΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠᐃΔΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠᐃᐃΔⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆⵠⵠⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Pixelbitie",
        name: "Lollipop 1"
      }, {
        id: 30,
        ⵠΔⵠ: Δⵠ.ΔΔᐃΔⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃᐃᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠᐃᐃΔΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⲆⲆΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Lollipop 2"
      }, {
        id: 31,
        ⵠΔⵠ: Δⵠ.ⵠΔⲆᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃΔΔⵠⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆᐃⲆⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔᐃΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Lollipop 3"
      }, {
        id: 32,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆΔᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔᐃΔⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⵠⲆΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⵠⵠⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Lollipop 4"
      }, {
        id: 33,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆᐃᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠⲆΔΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆⵠⲆᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⵠⵠⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Sushui",
        name: "Yellow Bird"
      }, {
        id: 34,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠⵠⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆΔΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆᐃⵠΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠⲆᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Sushui",
        name: "Red Bird"
      }, {
        id: 35,
        ⵠΔⵠ: Δⵠ.Ⲇⵠᐃᐃⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⵠᐃᐃᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆΔⲆⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⵠⲆᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Sushui",
        name: "Blue Bird"
      }, {
        id: 37,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃΔΔᐃᐃ,
        ⵠᐃᐃ: Δⵠ.Δⵠᐃⵠⵠᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⵠᐃⵠⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆⲆⵠΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Owl"
      }, {
        id: 52,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⲆᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆΔΔⲆΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠᐃⲆⵠᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆⵠⵠᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Nemo"
      }, {
        id: 53,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠⵠᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃⲆⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⵠᐃⵠΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆᐃΔⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Bread"
      }, {
        id: 74,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠᐃⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆΔⲆⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔΔⲆΔⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔᐃΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Communist & Taco4Life",
        name: "Mr. Bread 2"
      }, {
        id: 75,
        ⵠΔⵠ: Δⵠ.ΔΔⵠⲆᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠⲆΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔΔⲆΔⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔᐃΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Communist & Taco4Life",
        name: "Mr. Bread 3"
      }, {
        id: 60,
        ⵠΔⵠ: Δⵠ.ⲆΔΔᐃΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔᐃᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆΔⵠⵠΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⵠᐃⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Red Berry"
      }, {
        id: 61,
        ⵠΔⵠ: Δⵠ.ⲆΔᐃⲆᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃⲆᐃⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃᐃΔᐃⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⲆΔᐃΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Berry"
      }, {
        id: 70,
        ⵠΔⵠ: Δⵠ.ⲆᐃⵠΔⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠᐃΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆᐃⲆⵠⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔΔᐃⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Cake"
      }, {
        id: 71,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠⵠⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃᐃᐃⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃⲆⵠᐃⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃⵠΔᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Christmas Cake"
      }, {
        id: 77,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔᐃᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠⲆⲆΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆᐃᐃᐃΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃⲆΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Pancakez",
        name: "Mr. Pancake"
      }, {
        id: 87,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠⵠⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔᐃⵠⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠⲆᐃⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔᐃΔⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Mr. Taco"
      }, {
        id: 78,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠⲆⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⲆⲆⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃᐃᐃⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃΔΔⲆᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Mr. Bottle"
      }, {
        id: 79,
        ⵠΔⵠ: Δⵠ.ΔΔⵠᐃᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⵠᐃΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⵠⵠΔⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆΔᐃΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Mr. Bottle 2"
      }, {
        id: 97,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⵠᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆΔⵠΔᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⲆⲆⵠᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠⲆⵠⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Pink Rabbit"
      }, {
        id: 102,
        ⵠΔⵠ: Δⵠ.Ⲇᐃᐃⵠⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔᐃⵠⲆΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⲆᐃⲆⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⲆⲆΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Marshmallow"
      }, {
        id: 107,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃΔⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆⲆᐃΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⵠΔⵠΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠᐃᐃⵠⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Fox"
      }, {
        id: 132,
        ⵠΔⵠ: Δⵠ.ΔⵠΔⲆⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠⵠΔⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔΔΔᐃⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⵠⵠⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Raccoon"
      }, {
        id: 111,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆᐃⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆᐃⵠⵠⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃᐃΔΔⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⲆᐃⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Cloud"
      }, {
        id: 113,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔⵠΔⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃⲆᐃᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⲆⵠΔⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠⵠⲆⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Moon"
      }, {
        id: 117,
        ⵠΔⵠ: Δⵠ.Ⲇⵠᐃᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃⲆⵠⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃΔᐃΔΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃΔᐃΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Mr. Panda"
      }, {
        id: 118,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠⵠⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⲆⲆⲆⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⵠⲆᐃⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃᐃⲆⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Mr. Strawberry"
      }, {
        id: 119,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆⵠⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃΔΔⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆΔΔᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔⲆⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito & Sushuui",
        name: "Mummy"
      }, {
        id: 122,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠΔⲆᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔΔΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔΔⲆⲆᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⵠΔᐃΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Dino"
      }, {
        id: 127,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔΔΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆⵠᐃⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⲆⵠΔⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆⵠᐃΔⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Mr. Koala"
      }, {
        id: 160,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆᐃΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔⲆΔᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⵠᐃᐃⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠΔⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Bottle Protection"
      }, {
        id: 162,
        ⵠΔⵠ: Δⵠ.ΔΔⲆⵠᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⵠΔᐃⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃᐃΔΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔⵠᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "CrysTal",
        name: "Leaf Man"
      }, {
        id: 166,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃⵠⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⵠΔⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⲆΔⵠᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠⵠⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Bubble"
      }, {
        id: 174,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃᐃⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠⵠΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⲆᐃⲆⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠΔⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "upfiz",
        name: "Potato"
      }, {
        id: 171,
        ⵠΔⵠ: Δⵠ.ΔⲆΔΔΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔᐃΔⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃⲆⲆⲆΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔⵠⲆᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "aloner",
        name: "Axolotl"
      }, {
        id: 178,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆᐃᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃⲆᐃⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆΔᐃΔΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠᐃΔⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Rusted Machine"
      }, {
        id: 179,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃΔΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠᐃᐃΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠⵠᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆⵠΔΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Starving Machine"
      }, {
        id: 181,
        ⵠΔⵠ: Δⵠ.ΔⵠΔⵠΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆᐃⵠⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⵠⵠⲆⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⲆⵠⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Night Stars"
      }, {
        id: 191,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔᐃᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃⵠᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⵠⵠⵠⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔⲆΔⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Blue Jay"
      }, {
        id: 198,
        ⵠΔⵠ: Δⵠ.ΔΔⲆΔΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⲆⲆΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆᐃΔⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆⲆⵠᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "AWTP",
        name: "Dave"
      }, {
        id: 200,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠⵠⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔΔⵠΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆᐃᐃᐃⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃᐃΔⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Jinty",
        name: "Smug"
      }, {
        id: 203,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃⵠⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⲆⲆᐃⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔᐃᐃⲆΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠⲆΔΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Reclaimed"
      }, {
        id: 204,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠⲆⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⵠⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠⲆΔⵠᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔⵠᐃΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Legacy Wolf"
      }, {
        id: 211,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆᐃⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠⲆⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆⵠΔⲆⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⲆᐃᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Starver of the Seas"
      }, {
        id: 213,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠᐃⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⲆΔⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠΔⲆⲆⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃΔᐃⲆⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Ice"
      }, {
        id: 219,
        ⵠΔⵠ: Δⵠ.ⲆΔΔΔᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⵠⲆⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔΔᐃⵠΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃⲆⵠᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Ramil",
        name: "Sandwich Cookie"
      }, {
        id: 221,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠⲆⲆⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆⲆⵠΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆᐃΔΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆᐃΔⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Purple Geode"
      }, {
        id: 222,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆΔΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⲆⲆΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆᐃⲆᐃⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔΔᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Cyan Geode"
      }, {
        id: 223,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃΔⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⵠΔⵠᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠᐃⵠⲆᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃΔⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Yellow Geode"
      }, {
        id: 228,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆᐃᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆⵠⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃⲆⵠΔⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⲆⲆᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Furnace Head"
      }, {
        id: 229,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆⲆᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠᐃⲆⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃⵠⵠΔᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆᐃⲆⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag"
      }, {
        id: 227,
        ⵠΔⵠ: Δⵠ.ⵠΔΔᐃⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.Ⲇᐃⵠⵠᐃᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆⵠᐃᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃᐃΔⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Lit Furnace Head"
      }, {
        id: 25,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠⵠᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⲆⵠΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠᐃᐃΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔΔⵠⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Pixelbitie",
        name: "Test Dummy"
      }, {
        id: 41,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠΔΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆⵠⵠⵠⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠⲆⵠⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠΔⵠⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "pizza wa",
        name: "Star-ver"
      }, {
        id: 43,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⲆⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃᐃⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠⵠΔᐃᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔⲆⵠⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Communist",
        name: "Starver Chest"
      }, {
        id: 88,
        ⵠΔⵠ: Δⵠ.ΔΔⵠᐃΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔⵠⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠΔΔΔⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠΔᐃⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Communist",
        name: "Starver Workbench"
      }, {
        id: 121,
        ⵠΔⵠ: Δⵠ.ᐃΔΔΔⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆΔΔᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃⲆᐃⲆⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⵠⲆᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Fish"
      }, {
        id: 39,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆⲆΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃⲆΔΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠⲆⵠᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆᐃⵠᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Negligent4Dia",
        name: "Crab"
      }, {
        id: 40,
        ⵠΔⵠ: Δⵠ.ⲆᐃⵠᐃᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠᐃΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⲆⵠΔⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠⵠᐃⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Negligent4Dia",
        name: "Piranha"
      }, {
        id: 36,
        ⵠΔⵠ: Δⵠ.ᐃᐃⲆⲆΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔᐃᐃΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔΔΔΔⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.Δᐃⵠᐃᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Winter Fox"
      }, {
        id: 69,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆΔᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆΔⲆΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃΔΔᐃᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃⲆΔᐃΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Zed",
        name: "Baby Foxy"
      }, {
        id: 51,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠⲆⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃΔΔΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆᐃⵠΔⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔΔᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "HOWI",
        name: "Winter Bear"
      }, {
        id: 133,
        ⵠΔⵠ: Δⵠ.ⵠΔΔⲆᐃΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔᐃᐃⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⲆᐃᐃⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠᐃⵠⲆΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Hawk"
      }, {
        id: 55,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠⲆⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆᐃΔⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆᐃΔⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⲆⲆⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Nice Little Yuki"
      }, {
        id: 68,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠᐃⲆⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⵠΔᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⵠⵠⵠΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⵠⲆⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Taco4Life",
        name: "Baby Yuki"
      }, {
        id: 62,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠΔΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠᐃⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⲆⲆᐃΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃⲆⲆᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Carrot"
      }, {
        id: 56,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆⲆⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠⵠᐃⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆΔⲆⵠΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⲆⵠⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Bat Limax"
      }, {
        id: 72,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆΔⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⲆⲆᐃⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠΔΔΔᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔΔᐃΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Mr. Crate"
      }, {
        id: 73,
        ⵠΔⵠ: Δⵠ.ΔᐃᐃΔᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⲆΔᐃᐃΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⲆΔᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠᐃⲆΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Taco4Life & eogito",
        name: "Mr. Spider"
      }, {
        id: 93,
        ⵠΔⵠ: Δⵠ.Δᐃⵠⵠᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔΔᐃᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⲆⲆᐃᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠⲆΔΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Anyone want to play?",
        name: "Mr. Spider 2"
      }, {
        id: 82,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃⵠΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆⲆⲆΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⵠⲆⲆᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆⵠᐃⵠⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Blue Starfish"
      }, {
        id: 83,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⵠⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔᐃⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃᐃⵠⲆΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆΔᐃΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Orange Starfish"
      }, {
        id: 84,
        ⵠΔⵠ: Δⵠ.ΔᐃⲆΔΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔᐃΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⵠΔΔΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃΔⲆⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Pink Starfish"
      }, {
        id: 85,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆⵠⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⵠⵠΔΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆΔⲆᐃⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆΔΔⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. ShellMauve"
      }, {
        id: 86,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠΔⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃᐃΔΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃΔⵠⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠᐃⵠⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Shell Bead"
      }, {
        id: 96,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆᐃⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔᐃᐃΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆᐃᐃᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠⵠⵠⲆΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Fukss",
        name: "Angry Crab"
      }, {
        id: 98,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠΔⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠⵠⵠΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆΔᐃᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔⵠᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Penguin"
      }, {
        id: 126,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃΔᐃⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆⵠᐃᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠᐃΔⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔᐃⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Anyone want to play?",
        name: "Mr. Boar"
      }, {
        id: 145,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔⵠⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆᐃⵠⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆᐃⲆⲆᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃΔᐃⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "I saw you"
      }, {
        id: 146,
        ⵠΔⵠ: Δⵠ.ᐃᐃⲆⵠⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⵠⲆⲆΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃΔΔⵠⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔᐃⲆⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "It was funny"
      }, {
        id: 147,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃⲆⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆⲆΔᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⵠᐃⲆⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃΔⲆⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "You can scream"
      }, {
        id: 158,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⵠΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠⵠⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆᐃᐃᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔⲆⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Mr. Book"
      }, {
        id: 163,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆΔⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠⵠⲆⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃⲆⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃⲆᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Anyone want to play?",
        name: "Mr. Mammoth"
      }, {
        id: 164,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⵠᐃΔⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠᐃⲆⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆᐃⵠᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠΔⲆΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "SoOw",
        name: "Mr. Mammoth 2"
      }, {
        id: 161,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆΔⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔΔⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.Ⲇᐃᐃᐃⵠⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃᐃⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Nightmare"
      }, {
        id: 168,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆⲆⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔΔΔΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⲆΔΔΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔᐃᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "pizza wa",
        name: "Shiny Crystal"
      }, {
        id: 173,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆᐃΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠᐃⲆΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆᐃⵠⲆⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠᐃᐃⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "pizza wa",
        name: "Water skin"
      }, {
        id: 175,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆᐃⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆᐃⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔᐃⲆΔⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⲆᐃΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Fall Berry Bush Starver"
      }, {
        id: 176,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⲆᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⵠⵠΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⵠⲆᐃᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃᐃⲆⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Christmas Berry Bush Starver"
      }, {
        id: 177,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆᐃΔᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆΔⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠᐃᐃΔⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⵠⲆᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Berry Bush Starver"
      }, {
        id: 182,
        ⵠΔⵠ: Δⵠ.ΔΔΔⵠΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠΔᐃⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠΔⲆᐃⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⵠΔⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamer"
      }, {
        id: 185,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠΔⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.Δⵠⵠᐃᐃᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⲆⵠΔⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃⵠⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Wolf"
      }, {
        id: 186,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆᐃⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃⵠⵠⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠΔᐃᐃⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔΔⵠⵠᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Snow Wolf"
      }, {
        id: 187,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠⵠΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆⵠᐃⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃⲆᐃⵠⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆΔᐃⵠⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Rabbit"
      }, {
        id: 188,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃΔⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠᐃᐃᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆⵠᐃⲆΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠΔΔⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Snow Rabbit"
      }, {
        id: 189,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⲆⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠΔⵠΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆΔᐃᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔΔⲆⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Bear"
      }, {
        id: 190,
        ⵠΔⵠ: Δⵠ.ΔᐃΔⵠᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆΔⵠⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⲆΔⵠΔΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⲆᐃᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Polar Bear"
      }, {
        id: 196,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⵠΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠⲆⵠᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⲆⵠΔΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃᐃΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Crying Angel"
      }, {
        id: 202,
        ⵠΔⵠ: Δⵠ.ΔΔⵠⵠᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔⵠΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⵠᐃᐃᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⵠⲆΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Fennec"
      }, {
        id: 207,
        ⵠΔⵠ: Δⵠ.ⵠΔΔᐃᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆΔΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃᐃⵠⲆⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⲆΔⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Decay"
      }, {
        id: 212,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⲆⵠΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⵠⲆᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃΔᐃΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃΔⲆⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Pillow"
      }, {
        id: 218,
        ⵠΔⵠ: Δⵠ.ⲆΔᐃᐃⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃΔΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆᐃⵠⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃⵠⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Exotic"
      }, {
        id: 224,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆⵠⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔΔⲆᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃᐃΔᐃⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠᐃᐃΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Apple"
      }, {
        id: 225,
        ⵠΔⵠ: Δⵠ.ΔΔⵠⲆⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃⲆⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠⲆΔΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆΔᐃⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Golden Apple"
      }, {
        id: 233,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔⵠⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔᐃⲆΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔΔⵠⲆⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔⵠΔⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Lava Cube"
      }, {
        id: 234,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠⵠᐃⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆᐃⵠΔᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃΔᐃⵠᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠᐃⵠⵠⲆΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Dragon Cube"
      }, {
        id: 42,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠΔᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆⵠⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆΔⵠΔⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆΔΔⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Winter",
        name: "Will-O'-The-Wisp"
      }, {
        id: 91,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠᐃⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆΔΔΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃᐃⵠⵠⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔⲆⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "ExpertyAnimations",
        name: "Flame"
      }, {
        id: 26,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠᐃΔᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠΔΔⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔΔΔᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃΔᐃΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Be a Tree"
      }, {
        id: 38,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃⵠⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃⲆⵠΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠΔΔⲆⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⲆΔΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Winter",
        name: "Toxic Mutant"
      }, {
        id: 50,
        ⵠΔⵠ: Δⵠ.ⲆΔΔⵠⵠΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔᐃᐃⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆΔᐃⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃⲆᐃⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Communist",
        name: "Mr. Tomato"
      }, {
        id: 54,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆⲆⵠᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔΔΔΔᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃΔᐃⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Mauve, the Lapa"
      }, {
        id: 57,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃΔⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃΔⵠΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⵠΔⵠⵠᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃΔΔⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Golden Fish"
      }, {
        id: 64,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠΔⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃⲆΔⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⵠᐃᐃⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔᐃΔᐃΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "LapaMauve"
      }, {
        id: 65,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠΔΔⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠᐃⲆⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆΔΔᐃⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠᐃⲆⵠⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "LapaMauve "
      }, {
        id: 92,
        ⵠΔⵠ: Δⵠ.ΔⲆΔⲆⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆΔᐃᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃⲆⲆᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠᐃⲆᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Burger"
      }, {
        id: 66,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠᐃᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆᐃΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃⵠⵠⵠΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⵠᐃⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Tropical Starver"
      }, {
        id: 80,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃᐃᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃⵠᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔᐃΔⵠⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠⵠᐃⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. ShellPink"
      }, {
        id: 81,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃᐃΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔΔⲆᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆΔⲆⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⵠⵠᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. OranShell"
      }, {
        id: 99,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠⵠΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⵠΔΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃⲆᐃΔᐃⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠΔⲆⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Pepe"
      }, {
        id: 100,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠᐃΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃΔⲆᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠⲆⵠᐃΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠⵠⵠΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "fatant",
        name: "Mr. Ant"
      }, {
        id: 115,
        ⵠΔⵠ: Δⵠ.ΔΔΔⲆᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠⵠΔΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆⵠΔⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆⵠΔᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Mr. Watermelon"
      }, {
        id: 101,
        ⵠΔⵠ: Δⵠ.ΔΔᐃⲆⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠΔⵠΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔΔΔΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃᐃⵠᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Mr. Thornbush"
      }, {
        id: 131,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔⲆⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠᐃΔΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⲆⵠᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃᐃᐃᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Cthulhu"
      }, {
        id: 143,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠᐃᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆⵠᐃᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔⲆΔᐃⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠⲆⵠⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Mr. Cactus"
      }, {
        id: 144,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆⲆⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.Ⲇⵠⵠᐃⵠⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔⵠⵠΔⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔΔᐃᐃⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Momo"
      }, {
        id: 180,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔΔᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔⵠⲆΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃᐃΔΔⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⲆⵠΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Scream"
      }, {
        id: 193,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠⵠΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆΔⲆⲆⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃΔⵠⵠΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃΔⵠⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Dragon"
      }, {
        id: 195,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠΔᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠᐃⲆⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃΔⲆᐃΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠⵠⲆⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Forest Spirit"
      }, {
        id: 197,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠⵠⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⲆⵠⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆΔᐃᐃⲆᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⲆΔⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Evil Goat"
      }, {
        id: 199,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠΔⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆⲆΔⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆᐃⲆᐃΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆᐃᐃᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Rotten"
      }, {
        id: 201,
        ⵠΔⵠ: Δⵠ.ΔᐃΔᐃⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃⵠⲆΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆᐃⵠᐃⲆⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⲆΔᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Fossil"
      }, {
        id: 205,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆᐃΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔⵠⲆⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆⵠⲆΔᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⵠⲆΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Spectrum"
      }, {
        id: 210,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔⲆΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆΔᐃⲆⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠᐃⵠⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆᐃᐃⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Helpy",
        name: "Black Cat"
      }, {
        id: 214,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃΔᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔᐃⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆᐃⲆᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔᐃΔⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Lynx"
      }, {
        id: 215,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠⲆΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⲆΔᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃΔⲆΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⵠᐃⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Warg"
      }, {
        id: 217,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆⲆᐃⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆΔⲆΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠᐃᐃᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Menhir"
      }, {
        id: 95,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔᐃⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔⵠᐃΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⲆⲆᐃⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃᐃⲆⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Mr. Garlic"
      }, {
        id: 76,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠᐃᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⵠⵠᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⲆⵠⲆΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⵠᐃΔΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Robot Dragon"
      }, {
        id: 44,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆᐃⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆᐃΔⵠΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆᐃⲆΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⵠⵠⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Lava Dragon Version 1"
      }, {
        id: 90,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠΔⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃΔᐃⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔⲆⲆⵠᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠΔΔⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "ExpertyAnimations",
        name: "Lava Dragon Version 2"
      }, {
        id: 124,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔᐃⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠΔᐃΔΔ,
        ⲆⵠΔⲆ: Δⵠ.ΔⲆⲆΔⲆⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔᐃΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Lava Dragon Version 3"
      }, {
        id: 45,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔΔᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⵠⲆⲆⵠⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃᐃⵠⲆΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆᐃΔΔΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Sushui",
        name: "Ice Dragon Version 1"
      }, {
        id: 46,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠⵠΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⵠᐃΔⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠΔᐃΔⲆⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔΔⲆΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Ice Dragon Version 2"
      }, {
        id: 108,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆᐃᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆⲆᐃᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃΔᐃΔΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆᐃⲆⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Ice Dragon Version 3"
      }, {
        id: 123,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆΔⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔΔᐃⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⲆⲆⲆⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆΔᐃⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Baby Dragon Version 1"
      }, {
        id: 128,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔᐃⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⲆΔᐃⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆΔⵠⵠⲆᐃⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⵠᐃᐃᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Baby Dragon Version 2"
      }, {
        id: 125,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠΔⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃΔⵠⲆⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆᐃⲆΔⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠⵠⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Baby Lava"
      }, {
        id: 47,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⵠΔᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃⲆᐃⵠΔⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆᐃᐃⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Kraken"
      }, {
        id: 129,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆⵠΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆⲆΔⵠᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃΔΔΔⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆΔⵠΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Sandworm"
      }, {
        id: 63,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆⵠᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔΔΔⵠⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠⵠⵠⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ΔⲆᐃⵠⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Golden Bread"
      }, {
        id: 67,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃⲆΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃⲆⵠᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃΔΔΔΔᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⵠΔΔΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "ForgottenHeroe",
        name: "Starver Ores"
      }, {
        id: 130,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⵠΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⵠⵠΔΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃⲆΔⵠΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆⲆⲆⵠⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Poo"
      }, {
        id: 89,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⵠᐃⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠᐃᐃⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⵠᐃᐃᐃᐃⲆⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃΔⵠⵠⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Poinet",
        name: "Volcano Starver"
      }, {
        id: 112,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆΔⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃΔᐃⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⵠⲆᐃᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⵠⲆⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Lava Starver"
      }, {
        id: 183,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔᐃⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃΔᐃⵠⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔⲆΔⵠⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆΔⲆⵠΔⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Revaster"
      }, {
        id: 192,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆⲆⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔΔᐃⲆΔⵠᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⵠΔᐃΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Awakened"
      }, {
        id: 194,
        ⵠΔⵠ: Δⵠ.ΔᐃᐃᐃᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⵠⲆᐃⵠ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃⵠΔΔΔⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ΔΔⵠⲆⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Ice Dragon"
      }, {
        id: 236,
        ⵠΔⵠ: Δⵠ.ΔΔⵠΔⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆⲆⵠΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠΔᐃΔᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⲆΔΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Crystal Dragon"
      }, {
        id: 208,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⲆᐃΔⵠ,
        ⲆⵠΔⲆ: Δⵠ.ᐃΔΔΔᐃⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃᐃⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Bone Dragon"
      }, {
        id: 216,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃⲆΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠⲆⲆΔᐃ,
        ⲆⵠΔⲆ: Δⵠ.ΔᐃⲆⵠΔᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠⲆᐃⵠⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Warg Ghost"
      }, {
        id: 226,
        ⵠΔⵠ: Δⵠ.ᐃᐃⲆΔⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆⲆⵠⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⵠᐃᐃΔᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ΔᐃⵠᐃΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Cursed"
      }, {
        id: 48,
        ⵠΔⵠ: Δⵠ.ΔΔⲆΔⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃⲆⵠⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⵠⵠⵠᐃᐃᐃ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⵠᐃⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Robot"
      }, {
        id: 110,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃᐃΔᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆᐃⵠⲆᐃ,
        ⲆⵠΔⲆ: Δⵠ.ⲆᐃᐃᐃⲆᐃΔ,
        ᐃᐃᐃⵠ: Δⵠ.ⲆⲆⲆΔⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Blue Butterfly"
      }, {
        id: 157,
        ⵠΔⵠ: Δⵠ.ΔΔΔᐃΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠᐃΔᐃᐃ,
        ⲆⵠΔⲆ: Δⵠ.ᐃᐃᐃΔΔⲆΔ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃⲆⵠᐃⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Yrifox"
      }, {
        id: 165,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠΔΔⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠᐃΔⲆⲆ,
        ⲆⵠΔⲆ: Δⵠ.ΔⵠⲆᐃⲆᐃⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃⵠⵠΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: "OmarJr13",
        name: "Blob Skin"
      }, {
        id: 237,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠⵠᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⲆⲆⲆΔ,
        ⲆⵠΔⲆ: Δⵠ.ⲆⲆⲆⵠᐃⵠⲆ,
        ᐃᐃᐃⵠ: Δⵠ.ᐃᐃᐃᐃⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: "NotBonnie",
        name: "NotBonnie"
      }, {
        id: 238,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃⵠᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆᐃΔⵠᐃΔ,
        ⲆⵠΔⲆ: Δⵠ.ⵠⲆᐃΔⲆⵠⵠ,
        ᐃᐃᐃⵠ: Δⵠ.ⵠΔⲆᐃⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ,
        ΔᐃⲆ: "NotBonnie",
        name: "Cynder"
      }],
      Δⵠⵠⵠ: [{
        id: 0,
        ⵠΔⵠ: Δⵠ.ΔΔΔⵠⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔΔΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag 1"
      }, {
        id: 1,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⲆⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Bag"
      }, {
        id: 2,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃⵠⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆΔΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag 2"
      }, {
        id: 3,
        ⵠΔⵠ: Δⵠ.ⵠΔⲆⲆᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⲆⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag 3"
      }, {
        id: 4,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃⵠⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆⲆⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag 4"
      }, {
        id: 5,
        ⵠΔⵠ: Δⵠ.ᐃΔᐃⲆᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔΔⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag 5"
      }, {
        id: 11,
        ⵠΔⵠ: Δⵠ.ⲆΔΔᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⵠᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wood Pickaxe Bag"
      }, {
        id: 19,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠⵠᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆⵠⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io ",
        name: "Wood Carrier"
      }, {
        id: 37,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔⲆᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠΔΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Bag 6"
      }, {
        id: 39,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆΔⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⵠᐃⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Bag with Wooden Swords"
      }, {
        id: 44,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆⵠΔᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔΔⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Communist",
        name: "Big Bag"
      }, {
        id: 7,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠᐃⲆⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆΔⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Communist",
        name: "Bag 6"
      }, {
        id: 8,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃΔⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃᐃⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Easter Bag"
      }, {
        id: 9,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠΔΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⲆΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Star Bag"
      }, {
        id: 10,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠᐃΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠΔⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Winter Bag"
      }, {
        id: 20,
        ⵠΔⵠ: Δⵠ.ⵠΔΔⵠᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠⵠΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io ",
        name: "Stone Carrier"
      }, {
        id: 24,
        ⵠΔⵠ: Δⵠ.ᐃⲆΔⵠΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⲆⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Stone Pickaxe Bag"
      }, {
        id: 6,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔᐃᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃΔΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Communist",
        name: "Bag Camouflage"
      }, {
        id: 38,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆΔⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆΔⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Bag with Stone Swords"
      }, {
        id: 54,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃⵠΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔᐃⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Cow Bag"
      }, {
        id: 59,
        ⵠΔⵠ: Δⵠ.ᐃᐃⲆⲆⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠᐃᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "CrysTal",
        name: "Starver Bag"
      }, {
        id: 62,
        ⵠΔⵠ: Δⵠ.ⲆⵠⵠⲆᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠΔΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "CrysTal",
        name: "Crystal Sky Bag"
      }, {
        id: 71,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆΔᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆᐃᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Portable Furnace"
      }, {
        id: 78,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⵠΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⲆᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Crate Bag"
      }, {
        id: 13,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃⵠⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔⲆⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Honey Pot"
      }, {
        id: 21,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆΔⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆᐃᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io ",
        name: "Gold Carrier"
      }, {
        id: 30,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⲆⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠⵠⲆⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Gold Pickaxe Bag"
      }, {
        id: 29,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃᐃᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆΔΔⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Ariel",
        name: "Mr and Mrs Bakers"
      }, {
        id: 41,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆΔⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔⵠⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Bag with Golden Swords"
      }, {
        id: 47,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆⲆᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃⵠΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Explorer Bag"
      }, {
        id: 51,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆΔⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆᐃΔᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Bamboo Bag"
      }, {
        id: 53,
        ⵠΔⵠ: Δⵠ.ΔΔⵠΔᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆᐃⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Mummy Bag"
      }, {
        id: 58,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆⲆⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔᐃΔⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Watermelon Bag"
      }, {
        id: 60,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔᐃⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆΔᐃⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Garlic Bag"
      }, {
        id: 61,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃᐃⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Pumpkin Bag"
      }, {
        id: 64,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠᐃΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔᐃᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "upfiz",
        name: "Oil Barel bag"
      }, {
        id: 67,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔᐃΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⲆⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Tree Bag"
      }, {
        id: 70,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠⲆⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠᐃⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Lit Portable Furnace"
      }, {
        id: 72,
        ⵠΔⵠ: Δⵠ.ⵠΔⲆᐃⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃᐃⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Christmas Berry Bush Bag"
      }, {
        id: 73,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔᐃⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⵠᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Berry Bush Bag"
      }, {
        id: 74,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆⲆⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆᐃⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Fall Berry Bush Bag"
      }, {
        id: 76,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃᐃⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆᐃΔΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Reclaimed Bag"
      }, {
        id: 14,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆΔᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔᐃᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "a Rabbit in my Bag"
      }, {
        id: 15,
        ⵠΔⵠ: Δⵠ.ΔΔΔⵠⲆᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠΔⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Bird's nest"
      }, {
        id: 16,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆΔΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⵠⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "a Fish on your Back"
      }, {
        id: 17,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃΔⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⵠᐃⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "a Squirrel in my Bag"
      }, {
        id: 22,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⵠⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃᐃΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io ",
        name: "Diamond Carrier"
      }, {
        id: 12,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠΔⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔⲆⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Resources Bag"
      }, {
        id: 32,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⵠΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆⲆΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Diamond Pickaxe Bag"
      }, {
        id: 40,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠᐃⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.Ⲇᐃⵠⵠⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Bag with Diamond Swords"
      }, {
        id: 45,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆᐃⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⵠⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "My Cake Bag"
      }, {
        id: 46,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆⲆᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃᐃᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "My Christmas Cake Bag"
      }, {
        id: 52,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃᐃᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆⲆᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Fish Bag"
      }, {
        id: 65,
        ⵠΔⵠ: Δⵠ.ΔⲆΔΔᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠᐃⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "pizza wa",
        name: "Cloud Bag"
      }, {
        id: 68,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔΔᐃΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⲆⵠⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "pizza wa",
        name: "Bee Bag"
      }, {
        id: 77,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔⲆⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆΔⵠΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Bag and Bedroll"
      }, {
        id: 80,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠᐃⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆΔⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Peasant's Bag"
      }, {
        id: 81,
        ⵠΔⵠ: Δⵠ.ΔΔᐃΔᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠⵠⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Probably Stolen Bag"
      }, {
        id: 48,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠΔⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃⲆᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "fatant",
        name: "Natural Bag"
      }, {
        id: 23,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔⲆᐃΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔΔΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io ",
        name: "Amethyst Carrier"
      }, {
        id: 25,
        ⵠΔⵠ: Δⵠ.ⵠΔΔⵠⲆⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔᐃⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Amethyst Pickaxe Bag"
      }, {
        id: 28,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃΔᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆΔⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Your Baby"
      }, {
        id: 33,
        ⵠΔⵠ: Δⵠ.ΔⵠΔᐃᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔⵠΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Tropical Bag"
      }, {
        id: 43,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⲆⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆΔⵠⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Bag with Amethyst Swords"
      }, {
        id: 35,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃᐃⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔΔΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Ice Bag"
      }, {
        id: 50,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃᐃⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠᐃⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Thornbush Bag"
      }, {
        id: 56,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃΔᐃΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⵠⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Autumn Bag"
      }, {
        id: 57,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⲆΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Dino Egg Bag"
      }, {
        id: 66,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆⲆΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠΔⵠⲆΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Magic Cloud Bag"
      }, {
        id: 69,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠᐃᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆᐃᐃⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Chest Bag"
      }, {
        id: 75,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔΔⲆⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Spectum Bag"
      }, {
        id: 79,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠⵠⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃᐃⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Winter Peasant's Bag"
      }, {
        id: 31,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃΔᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆⵠΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io ",
        name: "Reidite Carrier"
      }, {
        id: 18,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠⵠⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃⲆᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Lava Bag"
      }, {
        id: 49,
        ⵠΔⵠ: Δⵠ.ⲆΔᐃⲆⲆᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆᐃⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Lava Bag 2"
      }, {
        id: 36,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠᐃΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⵠⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Dragon Bag"
      }, {
        id: 55,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃΔⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃⵠᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Winter Ice Bag"
      }, {
        id: 26,
        ⵠΔⵠ: Δⵠ.ΔⵠΔᐃᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⵠⲆΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Reidite Pickaxe Bag"
      }, {
        id: 27,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠⲆΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⵠⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Octopus Bowl"
      }, {
        id: 34,
        ⵠΔⵠ: Δⵠ.ⲆᐃⵠⲆⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠΔΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Cave Bag"
      }, {
        id: 42,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠⲆⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆΔⵠⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Bag with Reidite Swords"
      }, {
        id: 63,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃΔᐃⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⵠⵠᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Engineer Bag"
      }],
      ⲆⲆΔᐃᐃ: [{
        id: 0,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃⵠⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔⲆΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Dead Box"
      }, {
        id: 1,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⲆΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃⵠⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Hidden item"
      }, {
        id: 2,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃΔΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⵠᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box 1"
      }, {
        id: 3,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆⵠᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃᐃⲆⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box 2"
      }, {
        id: 4,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔⵠᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆⵠΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box 3"
      }, {
        id: 5,
        ⵠΔⵠ: Δⵠ.ΔᐃⲆᐃᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃⲆᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Broken Wooden Box"
      }, {
        id: 6,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠⲆΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⵠΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box"
      }, {
        id: 7,
        ⵠΔⵠ: Δⵠ.ⵠΔΔᐃⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃΔᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Battle Box"
      }, {
        id: 8,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔΔΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆᐃᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box with a Cross"
      }, {
        id: 9,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⵠᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃⵠΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box with Bubbles"
      }, {
        id: 10,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠΔⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆⲆⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden Box with Eyes"
      }, {
        id: 11,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⲆⵠΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆᐃᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Dark Wooden Box"
      }, {
        id: 38,
        ⵠΔⵠ: Δⵠ.ΔᐃΔᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⲆᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Weddlz",
        name: "Noob Box"
      }, {
        id: 12,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃᐃᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔⵠΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Wooden and Stone Box"
      }, {
        id: 14,
        ⵠΔⵠ: Δⵠ.ΔΔⲆⵠᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆⲆΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Star Box 1"
      }, {
        id: 15,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔΔⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆⲆᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Star Box 2"
      }, {
        id: 27,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔⵠⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.Ⲇⵠⵠⵠⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Flower Box"
      }, {
        id: 46,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆⵠᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠᐃⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Blue Box"
      }, {
        id: 75,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃᐃⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃΔⲆΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Night Stars Crate"
      }, {
        id: 19,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠⲆⵠΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⵠⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Beehive"
      }, {
        id: 13,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃᐃΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔᐃΔⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Wooden and Golden Box"
      }, {
        id: 21,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃΔⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠⵠΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Gravestone"
      }, {
        id: 25,
        ⵠΔⵠ: Δⵠ.ΔΔⲆⵠⲆᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆᐃΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Communist",
        name: "Sky Box"
      }, {
        id: 29,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠΔⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆᐃΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Golden Box"
      }, {
        id: 34,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⲆᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠᐃΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Communist",
        name: "Water Crate"
      }, {
        id: 35,
        ⵠΔⵠ: Δⵠ.ⲆᐃⵠⵠⲆⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⲆΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Communist",
        name: "Glass Crate"
      }, {
        id: 70,
        ⵠΔⵠ: Δⵠ.ⲆⵠⵠΔΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆⲆⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "CrysTal",
        name: "Crystal Sky Box"
      }, {
        id: 74,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠΔᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆΔⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Reclaimed Crate"
      }, {
        id: 77,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠⵠΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠᐃᐃⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Workplace Accident"
      }, {
        id: 16,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠΔΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆΔΔΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Wooden and Diamond Box"
      }, {
        id: 18,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆΔΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆⵠΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Don't Hit Me"
      }, {
        id: 26,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⲆΔⲆⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Underwater Box"
      }, {
        id: 31,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⲆᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠΔⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Communist",
        name: "Items Pile"
      }, {
        id: 32,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃⲆⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⲆᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Cake Box"
      }, {
        id: 33,
        ⵠΔⵠ: Δⵠ.ΔΔᐃⲆΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔⵠᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Christmas Cake Box"
      }, {
        id: 36,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆᐃᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔᐃΔᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Fukss",
        name: "Crab Box"
      }, {
        id: 42,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆΔⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔΔⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Fishing Box"
      }, {
        id: 72,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠΔⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⲆⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Storage Machine"
      }, {
        id: 22,
        ⵠΔⵠ: Δⵠ.ᐃᐃⲆΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠᐃⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Let me out of here"
      }, {
        id: 17,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃΔΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆⵠⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Wooden and Amethyst Box"
      }, {
        id: 24,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆⲆⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆⲆΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Aquarium"
      }, {
        id: 28,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆⲆⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠΔΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Gift Box"
      }, {
        id: 40,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠᐃᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔⵠᐃⵠⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Open Watermelon Box"
      }, {
        id: 41,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠΔⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃⵠᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Watermelon Box"
      }, {
        id: 39,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⲆᐃⲆΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Thornbush Box"
      }, {
        id: 43,
        ⵠΔⵠ: Δⵠ.Δᐃᐃⵠᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Rabbit in the Box"
      }, {
        id: 47,
        ⵠΔⵠ: Δⵠ.ⵠᐃⵠⵠᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆᐃⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Garlic Plot"
      }, {
        id: 48,
        ⵠΔⵠ: Δⵠ.ⵠΔⲆᐃΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃⲆⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Pumpkin Plot"
      }, {
        id: 78,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔΔⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠᐃⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Spectrum Portal"
      }, {
        id: 45,
        ⵠΔⵠ: Δⵠ.ⲆΔΔΔΔⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆΔᐃⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Autumn Box"
      }, {
        id: 44,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆᐃⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃⲆⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Winter Box"
      }, {
        id: 20,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠⵠⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃⲆᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Metal and Reidite Box"
      }, {
        id: 23,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃᐃⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃᐃⵠⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Kraken Box"
      }, {
        id: 30,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠᐃⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃᐃᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Lava Box"
      }, {
        id: 37,
        ⵠΔⵠ: Δⵠ.ⲆΔΔⵠⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆΔΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Lava Box 2"
      }, {
        id: 49,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⵠⲆᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔΔⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Rabbit"
      }, {
        id: 50,
        ⵠΔⵠ: Δⵠ.ΔⵠΔⵠᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⵠⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Wolf"
      }, {
        id: 51,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃⲆΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Spider"
      }, {
        id: 52,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠᐃᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃΔᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Hawk"
      }, {
        id: 53,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⲆⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃᐃⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Bear"
      }, {
        id: 54,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⲆᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃⵠᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Fox"
      }, {
        id: 55,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔᐃΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔᐃⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Baby Mammoth"
      }, {
        id: 56,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠᐃⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔⵠᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Mammoth"
      }, {
        id: 57,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃⵠΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃΔΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Sandworm"
      }, {
        id: 58,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔᐃⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔᐃΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Vulture"
      }, {
        id: 59,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠⲆⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⵠⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Kraken"
      }, {
        id: 60,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⵠᐃΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃΔⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Piranha"
      }, {
        id: 61,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔⲆⵠΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⲆⵠΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Baby Dragon"
      }, {
        id: 62,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⵠᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆᐃⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Baby Lava"
      }, {
        id: 63,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆᐃⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃΔΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Dragon"
      }, {
        id: 64,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠᐃⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠΔᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Penguin"
      }, {
        id: 65,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠⵠⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃⵠΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Lava Dragon"
      }, {
        id: 66,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆⲆⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃΔᐃΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Boar"
      }, {
        id: 67,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆⲆⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃΔⲆⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Fire mob"
      }, {
        id: 68,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃΔⲆⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⲆΔΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the Crab"
      }, {
        id: 69,
        ⵠΔⵠ: Δⵠ.ΔⵠⵠΔⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⵠΔΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Box of the King Crab"
      }, {
        id: 71,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠΔⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⲆᐃᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Dragon Box"
      }, {
        id: 73,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆⵠⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⵠⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Rekt"
      }, {
        id: 76,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃⲆΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠᐃΔⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Sleeping Tamon Dragon"
      }],
      ⵠⲆΔⲆⲆ: [{
        id: 0,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠⵠΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠⵠΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Book 1"
      }, {
        id: 1,
        ⵠΔⵠ: Δⵠ.ⲆΔΔⵠⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆⲆⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Book 2"
      }, {
        id: 2,
        ⵠΔⵠ: Δⵠ.ΔΔⲆΔΔᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃᐃᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Book 3"
      }, {
        id: 3,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⲆⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠᐃᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Book 4"
      }, {
        id: 4,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔᐃΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃΔⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Damaged Book 1"
      }, {
        id: 18,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⵠⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆΔⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "SeveR",
        name: "Damaged Book 2"
      }, {
        id: 5,
        ⵠΔⵠ: Δⵠ.ΔΔᐃⵠⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠΔⲆⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Doctorpus",
        name: "Scroll"
      }, {
        id: 6,
        ⵠΔⵠ: Δⵠ.ⲆΔᐃⲆⲆᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆⵠⵠⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Doctorpus",
        name: "Clipboard"
      }, {
        id: 7,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠⵠⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠᐃⵠⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Seed Book"
      }, {
        id: 20,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠⵠΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃⵠⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Camo Book"
      }, {
        id: 24,
        ⵠΔⵠ: Δⵠ.ⲆΔΔΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆᐃΔⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Communist",
        name: "Stone Tablet"
      }, {
        id: 47,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔΔⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Reclaimed Book"
      }, {
        id: 10,
        ⵠΔⵠ: Δⵠ.ⵠⲆΔΔⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃⲆΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Star Book"
      }, {
        id: 8,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆᐃⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠⵠΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Gold Book"
      }, {
        id: 15,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆⵠᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆᐃⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Old Mysterious Paper"
      }, {
        id: 17,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆᐃᐃⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠⵠΔⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Gold Engraving"
      }, {
        id: 25,
        ⵠΔⵠ: Δⵠ.ⵠΔΔⵠΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔᐃⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "fatant",
        name: "Ant Book"
      }, {
        id: 32,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⲆᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃⲆΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Mummy Book"
      }, {
        id: 37,
        ⵠΔⵠ: Δⵠ.ᐃⲆΔⵠᐃΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠⲆⵠⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Garlic Book"
      }, {
        id: 38,
        ⵠΔⵠ: Δⵠ.ⵠΔΔΔΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⵠⵠᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Pumpkin Book"
      }, {
        id: 39,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔⵠΔᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆᐃᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Christmas Tree Book"
      }, {
        id: 11,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃΔᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆⵠᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Diamond Book"
      }, {
        id: 9,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⲆΔᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆⵠⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Obscure Book"
      }, {
        id: 16,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆΔΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆΔⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Rolled Parchment"
      }, {
        id: 22,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔᐃⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⵠⵠΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Cake Book"
      }, {
        id: 23,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃⵠΔⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔⵠᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Christmas Cake Book"
      }, {
        id: 30,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⲆⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆΔΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "MADBalgouthi",
        name: "Fish Book"
      }, {
        id: 31,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆᐃⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃⲆⵠⵠᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "CrysTal",
        name: "Once upon a time"
      }, {
        id: 48,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠΔΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆⲆΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Chrono Clock"
      }, {
        id: 49,
        ⵠΔⵠ: Δⵠ.ΔΔⲆⲆΔⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆΔΔⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Recipe Book"
      }, {
        id: 13,
        ⵠΔⵠ: Δⵠ.ΔᐃΔΔΔⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔⲆⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Amethyst Book"
      }, {
        id: 28,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠⲆⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆⲆᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Paint Pallet"
      }, {
        id: 29,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆⲆΔⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆΔΔⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "CrysTal",
        name: "Watermelon Book"
      }, {
        id: 27,
        ⵠΔⵠ: Δⵠ.ⵠΔⵠⵠᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆᐃⲆⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Thornbush Book"
      }, {
        id: 35,
        ⵠΔⵠ: Δⵠ.ᐃⲆΔⵠⵠⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃᐃΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Taco4Life",
        name: "Menu"
      }, {
        id: 36,
        ⵠΔⵠ: Δⵠ.Δⵠᐃᐃᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠᐃᐃΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "CrysTal",
        name: "Lover Letter"
      }, {
        id: 40,
        ⵠΔⵠ: Δⵠ.ⲆᐃᐃⲆⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃⵠᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Fresh-Baked Cookies"
      }, {
        id: 41,
        ⵠΔⵠ: Δⵠ.ΔⲆΔΔⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆΔᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Inside, there is just a book."
      }, {
        id: 45,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⲆⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃⲆⵠᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Crafting Machine"
      }, {
        id: 33,
        ⵠΔⵠ: Δⵠ.ΔΔΔᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆⲆᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Winter Book"
      }, {
        id: 34,
        ⵠΔⵠ: Δⵠ.ᐃΔᐃᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⲆΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Autumn Book"
      }, {
        id: 14,
        ⵠΔⵠ: Δⵠ.ⲆΔΔᐃⲆⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Reidite Book"
      }, {
        id: 12,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⲆⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆⵠΔⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Lava Book"
      }, {
        id: 26,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃΔᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔᐃᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Lava Book 2"
      }, {
        id: 19,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⵠΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔⲆⲆⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Winter",
        name: "Ocean Mystery"
      }, {
        id: 21,
        ⵠΔⵠ: Δⵠ.ⵠⲆᐃᐃⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠⵠⵠⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Dragon Book"
      }, {
        id: 42,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃⲆᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃΔᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Engineer Book"
      }, {
        id: 43,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃⵠⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.Δᐃᐃᐃⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Nightmare Book"
      }, {
        id: 44,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃᐃΔᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⵠᐃⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "aloner",
        name: "Mystery Book"
      }, {
        id: 46,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆΔⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠⲆᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Cursed Book"
      }],
      ᐃΔᐃⵠⵠ: [{
        id: 0,
        ⵠΔⵠ: Δⵠ.ΔⵠΔᐃⲆⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔᐃⲆⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Nothing"
      }, {
        id: 2,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔⲆⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆΔⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Pink Cheeks"
      }, {
        id: 3,
        ⵠΔⵠ: Δⵠ.ΔᐃⲆⲆⲆᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔΔΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Heart"
      }, {
        id: 1,
        ⵠΔⵠ: Δⵠ.ᐃⲆΔΔⵠΔⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⲆΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Bandage 1"
      }, {
        id: 4,
        ⵠΔⵠ: Δⵠ.ⵠΔΔⲆⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔΔΔⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔⵠᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Flower 1"
      }, {
        id: 5,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃⵠⵠᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆᐃᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Bow 1"
      }, {
        id: 6,
        ⵠΔⵠ: Δⵠ.ⵠΔΔᐃᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠⲆⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Bandage 2"
      }, {
        id: 7,
        ⵠΔⵠ: Δⵠ.ΔᐃΔⵠⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⲆᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Flower 2"
      }, {
        id: 8,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠᐃΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⲆⵠΔⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Bandage 3"
      }, {
        id: 36,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆΔΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⲆᐃΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Foliage"
      }, {
        id: 59,
        ⵠΔⵠ: Δⵠ.ΔᐃⵠⲆⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⲆⵠΔⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "eogito",
        name: "Peaceful"
      }, {
        id: 67,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆⲆⵠΔΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Sparkles"
      }, {
        id: 68,
        ⵠΔⵠ: Δⵠ.ⲆΔΔΔⲆⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔⲆΔΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Luxury"
      }, {
        id: 69,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⵠⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠΔⵠᐃⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔΔⵠ,
        ΔᐃⲆ: "pizza wa",
        name: "Snow Flakes Crown"
      }, {
        id: 17,
        ⵠΔⵠ: Δⵠ.ΔⲆΔⲆᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆΔⵠᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Glasses 1"
      }, {
        id: 10,
        ⵠΔⵠ: Δⵠ.ⲆᐃⵠᐃⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⲆᐃⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Bow 2"
      }, {
        id: 11,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠⲆⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠⵠⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Little Stars"
      }, {
        id: 12,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃᐃⵠⵠΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆᐃΔⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Pirate Eye Patch 1"
      }, {
        id: 44,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠⲆⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔᐃΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Pirate Eye Patch 2"
      }, {
        id: 23,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠΔⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃΔⵠⵠᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Clown nose"
      }, {
        id: 16,
        ⵠΔⵠ: Δⵠ.ⲆΔⲆΔᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃᐃᐃᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Eye Patch"
      }, {
        id: 30,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⵠᐃⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⵠᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "eogito",
        name: "Flower 3"
      }, {
        id: 38,
        ⵠΔⵠ: Δⵠ.ΔⵠΔⲆⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆⲆᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Winter",
        name: "False Nose"
      }, {
        id: 74,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆⲆᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⵠᐃⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Red Cloth"
      }, {
        id: 75,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⵠⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔⲆⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Blue Cloth"
      }, {
        id: 79,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔᐃⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠᐃᐃⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Transparent Mask"
      }, {
        id: 89,
        ⵠΔⵠ: Δⵠ.ᐃⲆⵠⵠΔΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠⲆⲆᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Anyone want to play?",
        name: "Starve.io Anime"
      }, {
        id: 94,
        ⵠΔⵠ: Δⵠ.ⵠⲆⲆⲆⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆΔΔⵠᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Ant",
        name: "Hero Mask"
      }, {
        id: 100,
        ⵠΔⵠ: Δⵠ.ⲆⲆⲆᐃΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃⵠⵠⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "This starver is mad"
      }, {
        id: 104,
        ⵠΔⵠ: Δⵠ.ᐃΔΔⵠΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃΔᐃΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Scars"
      }, {
        id: 106,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃⵠΔΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆⲆΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "In Search of Intelligence"
      }, {
        id: 109,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆⲆΔᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⲆΔᐃΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Reclaimed Bandage"
      }, {
        id: 111,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠⵠⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠΔⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔΔⵠΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Unwrap Starver for Gift"
      }, {
        id: 15,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⲆⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Star Glasses"
      }, {
        id: 21,
        ⵠΔⵠ: Δⵠ.ⵠⵠⵠΔᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠᐃⵠᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Great-aunt's Glasses"
      }, {
        id: 24,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃⲆⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔΔΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Little Starver"
      }, {
        id: 22,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠⲆᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃᐃⵠⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Little Glasses"
      }, {
        id: 13,
        ⵠΔⵠ: Δⵠ.ΔⲆⵠΔⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠΔⲆⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Flower Chain"
      }, {
        id: 29,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔⲆᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Horns"
      }, {
        id: 31,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⵠᐃⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⲆΔⲆΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Golden Flower"
      }, {
        id: 40,
        ⵠΔⵠ: Δⵠ.ⵠⲆⵠⵠᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "pizza wa",
        name: "Sleeping Mask"
      }, {
        id: 57,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆⵠΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Taco4Life",
        name: "Fish on your head"
      }, {
        id: 58,
        ⵠΔⵠ: Δⵠ.ᐃⲆΔⲆᐃⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃᐃⵠⲆΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Rose"
      }, {
        id: 91,
        ⵠΔⵠ: Δⵠ.ΔΔΔⵠⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆᐃᐃⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "upfiz",
        name: "Grey Scarf"
      }, {
        id: 92,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃΔᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⲆᐃⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "upfiz",
        name: "Black Scarf"
      }, {
        id: 93,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔΔⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔΔⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "upfiz",
        name: "Skull Mask"
      }, {
        id: 95,
        ⵠΔⵠ: Δⵠ.ᐃᐃΔᐃᐃΔⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆΔⲆΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Golden Monocle"
      }, {
        id: 96,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔⲆΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃⲆΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "A simple instruction"
      }, {
        id: 102,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃΔΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠᐃᐃΔⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Garland"
      }, {
        id: 103,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃⲆⵠΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠΔΔΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "The Doormat"
      }, {
        id: 108,
        ⵠΔⵠ: Δⵠ.ⵠΔΔⲆᐃⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃⵠⵠⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Copium Tanks"
      }, {
        id: 117,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆⲆᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆⲆᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Eyelashes"
      }, {
        id: 118,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃⲆΔⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃΔΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ᐃΔᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Helmet Prototype"
      }, {
        id: 9,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔᐃΔⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠΔΔⲆᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Fancy Glasses"
      }, {
        id: 25,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⵠᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⲆⲆΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Medecin Mask"
      }, {
        id: 14,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆΔᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⲆⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mr. Mayor"
      }, {
        id: 19,
        ⵠΔⵠ: Δⵠ.ⵠⵠΔⲆᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃᐃⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Sunglasses 2"
      }, {
        id: 28,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃⲆΔᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆΔΔΔᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "pizza wa",
        name: "Starfish"
      }, {
        id: 37,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃᐃⵠΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆΔⲆΔⵠⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Berry"
      }, {
        id: 39,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃⲆᐃΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃᐃΔⵠΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Flake"
      }, {
        id: 43,
        ⵠΔⵠ: Δⵠ.ΔᐃΔⲆⲆᐃΔ,
        ⵠᐃᐃ: Δⵠ.ᐃΔΔⵠΔⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Leaf "
      }, {
        id: 61,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆΔⲆⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃⲆⵠΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "A sword in your head"
      }, {
        id: 62,
        ⵠΔⵠ: Δⵠ.ΔⲆᐃᐃᐃⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔᐃᐃⲆⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Winter Scarf"
      }, {
        id: 64,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔⲆⲆΔⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔΔⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Winter Scarf 2"
      }, {
        id: 66,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⲆⵠᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃΔⵠΔᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "eogito",
        name: "Winter Scarf 3"
      }, {
        id: 70,
        ⵠΔⵠ: Δⵠ.ᐃΔⵠⵠΔⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⲆⵠΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Mask with animal tracks"
      }, {
        id: 71,
        ⵠΔⵠ: Δⵠ.ⲆⲆΔᐃⵠΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆΔⲆᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Spring Mask"
      }, {
        id: 72,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠᐃⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠᐃᐃⵠⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Pink Mask"
      }, {
        id: 73,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⵠⵠⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔᐃᐃⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Blue Mask"
      }, {
        id: 76,
        ⵠΔⵠ: Δⵠ.ΔⵠΔᐃΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃΔᐃⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Military Mask"
      }, {
        id: 77,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠΔᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃΔⵠᐃᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Orange Mask"
      }, {
        id: 78,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆⲆⲆⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠᐃΔⵠⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "White and Red Points Mask"
      }, {
        id: 80,
        ⵠΔⵠ: Δⵠ.ⲆΔΔΔⲆᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔⲆⲆᐃΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Stick out your tongue Mask"
      }, {
        id: 81,
        ⵠΔⵠ: Δⵠ.ⲆⲆᐃⲆΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆΔᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Two Teeth Mask"
      }, {
        id: 82,
        ⵠΔⵠ: Δⵠ.ⲆᐃⲆᐃⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⲆᐃⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Make-up Mask"
      }, {
        id: 83,
        ⵠΔⵠ: Δⵠ.ΔⲆΔᐃⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠⲆΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Sad Mask"
      }, {
        id: 84,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃΔᐃΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔⵠⵠⵠⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Happy Mask"
      }, {
        id: 90,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃᐃᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠⵠᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "aloner",
        name: "Blood"
      }, {
        id: 101,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃⵠΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⵠⲆⵠΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Axed Plans"
      }, {
        id: 105,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆΔⵠΔΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠⵠⲆᐃᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Saddle"
      }, {
        id: 113,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃⵠᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⵠΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "I see"
      }, {
        id: 114,
        ⵠΔⵠ: Δⵠ.ᐃⵠⵠᐃⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠΔⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "I have no body and I must dress"
      }, {
        id: 115,
        ⵠΔⵠ: Δⵠ.ⲆΔΔⵠΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠΔⲆᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃᐃ,
        ΔᐃⲆ: "Starve.io",
        name: "Cursed Crown"
      }, {
        id: 27,
        ⵠΔⵠ: Δⵠ.ΔⲆΔⲆⵠᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃΔᐃΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Clown Face"
      }, {
        id: 20,
        ⵠΔⵠ: Δⵠ.ᐃⲆᐃᐃΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔΔⵠᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Sunglasses 3"
      }, {
        id: 32,
        ⵠΔⵠ: Δⵠ.ⵠΔΔΔⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃᐃⲆΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Engineer's Glasses"
      }, {
        id: 33,
        ⵠΔⵠ: Δⵠ.ⵠⵠᐃⵠᐃⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠΔΔΔⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Engineer's Monocle"
      }, {
        id: 34,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⵠᐃΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠᐃⵠⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Mauve's butt"
      }, {
        id: 41,
        ⵠΔⵠ: Δⵠ.ⵠΔᐃᐃⲆΔⵠ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔⵠⲆⲆⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Lapa Head"
      }, {
        id: 42,
        ⵠΔⵠ: Δⵠ.ⲆⵠΔⲆᐃᐃᐃ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⵠⲆⵠⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "eogito",
        name: "Lapa Head "
      }, {
        id: 85,
        ⵠΔⵠ: Δⵠ.ⲆΔⵠⵠⲆⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔⵠᐃᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Mask and Glasses"
      }, {
        id: 110,
        ⵠΔⵠ: Δⵠ.ᐃᐃᐃΔⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔⲆᐃⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠΔⲆⵠ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Spectrum Pet"
      }, {
        id: 60,
        ⵠΔⵠ: Δⵠ.ⵠᐃᐃⵠⲆⲆᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆⵠᐃᐃⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Jason"
      }, {
        id: 26,
        ⵠΔⵠ: Δⵠ.ⵠᐃΔⲆⲆᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⲆΔⵠⵠⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Devil Horns"
      }, {
        id: 18,
        ⵠΔⵠ: Δⵠ.ΔⵠⲆᐃⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔΔΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Big Boss"
      }, {
        id: 35,
        ⵠΔⵠ: Δⵠ.ⵠⵠⲆⲆⵠᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ΔΔΔⲆⲆⲆⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Baby Kraken"
      }, {
        id: 63,
        ⵠΔⵠ: Δⵠ.ⲆᐃⵠΔΔΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔⵠⵠΔⵠΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Deer Antlers"
      }, {
        id: 65,
        ⵠΔⵠ: Δⵠ.ᐃⵠᐃⲆⵠⵠⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃᐃΔⲆᐃΔᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Baby Dragon on your head"
      }, {
        id: 86,
        ⵠΔⵠ: Δⵠ.ᐃⵠΔᐃΔⲆΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆᐃᐃⵠᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Gaz Mask and Glasses"
      }, {
        id: 87,
        ⵠΔⵠ: Δⵠ.ⲆΔΔⲆΔⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃᐃᐃᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Pink Gaz Mask and Glasses"
      }, {
        id: 88,
        ⵠΔⵠ: Δⵠ.ⲆΔᐃⲆΔⵠΔ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⵠᐃΔⲆΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "eogito",
        name: "Engineer Glasses"
      }, {
        id: 97,
        ⵠΔⵠ: Δⵠ.ⲆΔΔⵠᐃⵠⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠᐃΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Jarred Horns"
      }, {
        id: 98,
        ⵠΔⵠ: Δⵠ.ΔⵠᐃⲆᐃᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠΔᐃⲆΔᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Curved Horns"
      }, {
        id: 99,
        ⵠΔⵠ: Δⵠ.ΔᐃΔΔⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ⲆΔᐃᐃΔᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Evil Goat Horns"
      }, {
        id: 107,
        ⵠΔⵠ: Δⵠ.ᐃⲆⲆᐃⲆΔᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠⲆΔⵠⲆᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Decorative Earmuffs"
      }, {
        id: 112,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆⲆΔΔⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⲆΔᐃᐃⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Tamon Dragon Pet"
      }, {
        id: 116,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔᐃΔᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ᐃⵠⵠᐃΔᐃᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ⵠⲆᐃΔ,
        ΔᐃⲆ: "Starve.io",
        name: "Blanket"
      }, {
        id: 45,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠΔᐃᐃⲆ,
        ⵠᐃᐃ: Δⵠ.ⲆⵠⵠⵠΔΔΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 5",
        level: 5
      }, {
        id: 46,
        ⵠΔⵠ: Δⵠ.ΔⲆⲆΔᐃⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⲆⲆⵠⲆⲆᐃΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 10",
        level: 10
      }, {
        id: 47,
        ⵠΔⵠ: Δⵠ.ⲆⵠⲆᐃᐃΔᐃ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆΔΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 15",
        level: 15
      }, {
        id: 48,
        ⵠΔⵠ: Δⵠ.ⲆⲆⵠⲆⵠⲆΔ,
        ⵠᐃᐃ: Δⵠ.ΔⲆⲆᐃΔᐃⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 20",
        level: 20
      }, {
        id: 49,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔⵠⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ⵠᐃⲆΔⲆΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 25",
        level: 25
      }, {
        id: 50,
        ⵠΔⵠ: Δⵠ.ᐃⵠⲆᐃⲆΔΔ,
        ⵠᐃᐃ: Δⵠ.ΔᐃΔΔΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 30",
        level: 30
      }, {
        id: 51,
        ⵠΔⵠ: Δⵠ.ᐃᐃⵠᐃᐃᐃⵠ,
        ⵠᐃᐃ: Δⵠ.ⲆᐃΔᐃⲆⵠΔ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 35",
        level: 35
      }, {
        id: 52,
        ⵠΔⵠ: Δⵠ.ᐃΔⲆⲆⲆⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠⲆⲆⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 40",
        level: 40
      }, {
        id: 53,
        ⵠΔⵠ: Δⵠ.ΔΔᐃⲆΔᐃΔ,
        ⵠᐃᐃ: Δⵠ.ⵠⵠᐃⵠᐃΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 45",
        level: 45
      }, {
        id: 54,
        ⵠΔⵠ: Δⵠ.ⲆᐃΔᐃⵠⲆⲆ,
        ⵠᐃᐃ: Δⵠ.ΔᐃⵠΔΔΔⵠ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 50",
        level: 50
      }, {
        id: 55,
        ⵠΔⵠ: Δⵠ.ⵠᐃⲆⵠⵠⲆⵠ,
        ⵠᐃᐃ: Δⵠ.ᐃⲆⲆⲆᐃⲆᐃ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 55",
        level: 55
      }, {
        id: 56,
        ⵠΔⵠ: Δⵠ.ⲆⵠᐃΔⵠⵠᐃ,
        ⵠᐃᐃ: Δⵠ.ΔΔᐃΔΔΔⲆ,
        ⲆΔⵠ: ⲆⲆⲆ.ΔᐃΔⲆΔ,
        ΔᐃⲆ: "Starve.io",
        name: "More than Level 60",
        level: 60
      }]
    };
    v2272.ΔΔΔⵠᐃᐃᐃ = ᐃⵠᐃⵠΔⵠⲆ(ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ, 21);
    v2272.ⲆΔⲆⵠΔⲆⲆ = ᐃⵠᐃⵠΔⵠⲆ(ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ, 20);
    ⵠΔ[255] = [];
    ⵠΔ[7] = [];
    ⵠΔ[250] = [];
    ⵠΔ[28] = [];
    ⵠΔ[29] = [];
    ⵠΔ[796] = [];
    for (var v810 = 0; ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ.length > v810; v810++) {
      ⵠΔ[255][v810] = [ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[v810].ⵠΔⵠ, ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[v810].ⵠᐃᐃ];
      ⵠΔ[7][v810] = [ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[v810].ⲆⵠΔⲆ, ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[v810].ᐃᐃᐃⵠ];
    }
    for (v810 = 0; ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ.length > v810; v810++) {
      ⵠΔ[28][v810] = [ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ[v810].ⵠΔⵠ, ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ[v810].ⵠᐃᐃ];
    }
    for (v810 = 0; ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ.length > v810; v810++) {
      ⵠΔ[250][v810] = [ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ[v810].ⵠΔⵠ, ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ[v810].ⵠᐃᐃ];
    }
    for (v810 = 0; ⲆⵠᐃⲆ.Δⵠⵠⵠ.length > v810; v810++) {
      ⵠΔ[29][v810] = [ⲆⵠᐃⲆ.Δⵠⵠⵠ[v810].ⵠΔⵠ, ⲆⵠᐃⲆ.Δⵠⵠⵠ[v810].ⵠᐃᐃ];
    }
    for (v810 = 0; ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ.length > v810; v810++) {
      ⵠΔ[796][v810] = [ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ[v810].ⵠΔⵠ, ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ[v810].ⵠᐃᐃ];
    }
  };
  const v811 = 18;
  function f83(p538, p539, p540, p541, p542, p543) {
    if (p543 * 2 > p541) {
      p543 = p541 / 2;
    }
    if (p542 < p543 * 2) {
      p543 = p542 / 2;
    }
    if (p543 < 0) {
      p543 = 0;
    }
    p538.beginPath();
    p538.moveTo(p539 + p543, p540);
    p538.arcTo(p539 + p541, p540, p539 + p541, p540 + p542, p543);
    p538.arcTo(p539 + p541, p540 + p542, p539, p540 + p542, p543);
    p538.arcTo(p539, p540 + p542, p539, p540, p543);
    p538.arcTo(p539, p540, p539 + p541, p540, p543);
    p538.closePath();
  }
  function f84(p544, p545, p546, p547) {
    if (p545) {
      p544.fillStyle = p545;
      p544.fill();
    }
    if (p546) {
      p544.lineWidth = p547;
      p544.strokeStyle = p546;
      p544.stroke();
    }
  }
  const v812 = 4;
  function f85(p548, p549, p550, p551, p552) {
    p548.beginPath();
    p548.lineCap = "round";
    p548.arc(p549, p550, p551, 0, Math.PI * 2 * p552);
  }
  function f86(p553, p554) {
    var v813 = document.createElement("canvas");
    var v814 = v813.getContext("2d");
    var v815 = Math.floor(p553 * 28);
    var v816 = Math.floor(p553 * 20);
    v814.font = v816 + "px Baloo Paaji";
    var v817 = p553 * 8;
    var v818 = v814.measureText(p554).width + v817 * 2;
    v813.width = v818;
    v813.height = v815;
    f83(v814, 0, 0, v818, v815, p553 * 10);
    v814.globalAlpha = 0.5;
    f84(v814, "#000");
    v814.globalAlpha = 1;
    v814.textBaseline = "middle";
    v814.font = v816 + "px Baloo Paaji";
    v814.beginPath();
    v814.fillStyle = "#FFF";
    v814.fillText(p554, v817, v815 / 2);
    return v813;
  }
  function f87(p555, p556, p557, p558) {
    var v819 = Math.PI * 2 / p556;
    p555.beginPath();
    var v820 = [{
      x: p557,
      y: 0
    }];
    var v821 = [];
    for (var v822 = 1; p556 > v822; v822++) {
      v820.push({
        x: Math.sin(v822 * v819) * p557,
        y: Math.cos(v822 * v819) * p557
      });
      var v823 = v820.length;
      v821.push(ᐃⵠⵠ.ⲆⵠⵠᐃΔᐃⲆ(v820[v823 - 2], v820[v823 - 1]));
    }
    v821.push(ᐃⵠⵠ.ⲆⵠⵠᐃΔᐃⲆ(v820[v820.length - 1], v820[0]));
    var v824 = v821[v821.length - 1];
    p555.moveTo(v824.x, v824.y);
    for (v822 = 0; p556 > v822; v822++) {
      p555.arcTo(v820[v822].x, v820[v822].y, v821[v822].x, v821[v822].y, p558);
    }
    p555.closePath();
  }
  function f88(p559, p560) {
    var v825 = document.createElement("canvas");
    var v826 = v825.getContext("2d");
    var v827 = Math.sqrt(p560.width * p560.width + p560.height * p560.height);
    d2 = v827 / 2;
    v825.width = v827;
    v825.height = v827;
    v826.translate(d2, d2);
    v826.rotate(p559);
    v826.drawImage(p560, -p560.width / 2, -p560.height / 2);
    return v825;
  }
  function f89(p561, p562, p563, p564) {
    p561.beginPath();
    p561.arc(p562, p563, p564, 0, Math.PI * 2);
  }
  function f90(p565, p566) {
    var v828 = document.createElement("canvas");
    var v829 = v828.getContext("2d");
    var v830 = p565 * 120;
    var v831 = p565 * 110;
    var v832 = v830 / 2;
    var v833 = v831 / 2;
    var v834 = p565 * 20;
    var v835 = p565 * 112;
    var v836 = p565 * 82;
    var v837 = v835 / 2;
    var v838 = v836 / 2;
    var v839 = p565 * 4;
    v828.width = v830;
    v828.height = v831;
    v829.globalAlpha = 1;
    v829.translate(v832, v833);
    f83(v829, -v837, -v838, v835, v836, v834);
    f84(v829, p566, p566, v839);
    return v828;
  }
  const v840 = 0;
  function f91(p567, p568, p569) {
    var v841 = document.createElement("canvas");
    var v842 = v841.getContext("2d");
    v841.width = p567 * 264;
    v841.height = p567 * 246;
    v842.translate(0, p567 * 10);
    v842.globalAlpha = p568 ? 0.5 : 1;
    v842.beginPath();
    v842.lineCap = "round";
    v842.lineJoin = "round";
    v842.moveTo(p567 * 75, p567 * 54);
    v842.bezierCurveTo(p567 * 79, p567 * 21, p567 * 131, p567 * 13, p567 * 153, p567 * 36);
    v842.bezierCurveTo(p567 * 204, p567 * 27, p567 * 221, p567 * 52, p567 * 216, p567 * 83);
    v842.bezierCurveTo(p567 * 241, p567 * 103, p567 * 232, p567 * 138, p567 * 214, p567 * 147);
    v842.bezierCurveTo(p567 * 223, p567 * 184, p567 * 201, p567 * 200, p567 * 175, p567 * 199);
    v842.bezierCurveTo(p567 * 156, p567 * 218, p567 * 135, p567 * 222, p567 * 114, p567 * 203);
    v842.bezierCurveTo(p567 * 62, p567 * 213, p567 * 66, p567 * 189, p567 * 59, p567 * 170);
    v842.bezierCurveTo(p567 * 27, p567 * 164, p567 * 31, p567 * 134, p567 * 38, p567 * 123);
    v842.bezierCurveTo(p567 * 11, p567 * 80, p567 * 51, p567 * 52, p567 * 75, p567 * 54);
    v842.closePath();
    f84(v842, p569[0]);
    v842.translate(0, p567 * -10);
    v842.globalAlpha = 1;
    v842.beginPath();
    v842.lineCap = "round";
    v842.lineJoin = "round";
    v842.moveTo(p567 * 75, p567 * 54);
    v842.bezierCurveTo(p567 * 79, p567 * 21, p567 * 131, p567 * 13, p567 * 153, p567 * 36);
    v842.bezierCurveTo(p567 * 204, p567 * 27, p567 * 221, p567 * 52, p567 * 216, p567 * 83);
    v842.bezierCurveTo(p567 * 241, p567 * 103, p567 * 232, p567 * 138, p567 * 214, p567 * 147);
    v842.bezierCurveTo(p567 * 223, p567 * 184, p567 * 201, p567 * 200, p567 * 175, p567 * 199);
    v842.bezierCurveTo(p567 * 156, p567 * 218, p567 * 135, p567 * 222, p567 * 114, p567 * 203);
    v842.bezierCurveTo(p567 * 62, p567 * 213, p567 * 66, p567 * 189, p567 * 59, p567 * 170);
    v842.bezierCurveTo(p567 * 27, p567 * 164, p567 * 31, p567 * 134, p567 * 38, p567 * 123);
    v842.bezierCurveTo(p567 * 11, p567 * 80, p567 * 51, p567 * 52, p567 * 75, p567 * 54);
    v842.closePath();
    f84(v842, p569[1], p569[2], p567 * 8);
    v842.beginPath();
    v842.lineCap = "round";
    v842.lineJoin = "round";
    v842.moveTo(p567 * 121, p567 * 102);
    v842.bezierCurveTo(p567 * 111, p567 * 80, p567 * 110, p567 * 66, p567 * 108, p567 * 51);
    v842.bezierCurveTo(p567 * 119, p567 * 65, p567 * 129, p567 * 85, p567 * 135, p567 * 99);
    v842.bezierCurveTo(p567 * 142, p567 * 67, p567 * 146, p567 * 60, p567 * 152, p567 * 50);
    v842.bezierCurveTo(p567 * 154, p567 * 71, p567 * 152, p567 * 85, p567 * 149, p567 * 104);
    v842.bezierCurveTo(p567 * 166, p567 * 88, p567 * 175, p567 * 83, p567 * 188, p567 * 78);
    v842.bezierCurveTo(p567 * 179, p567 * 91, p567 * 170, p567 * 103, p567 * 160, p567 * 112);
    v842.bezierCurveTo(p567 * 186, p567 * 107, p567 * 191, p567 * 107, p567 * 204, p567 * 108);
    v842.bezierCurveTo(p567 * 195, p567 * 114, p567 * 179, p567 * 120, p567 * 163, p567 * 123);
    v842.bezierCurveTo(p567 * 183, p567 * 130, p567 * 186, p567 * 135, p567 * 192, p567 * 140);
    v842.bezierCurveTo(p567 * 179, p567 * 141, p567 * 164, p567 * 139, p567 * 153, p567 * 135);
    v842.bezierCurveTo(p567 * 158, p567 * 145, p567 * 163, p567 * 159, p567 * 165, p567 * 177);
    v842.bezierCurveTo(p567 * 154, p567 * 166, p567 * 145, p567 * 153, p567 * 138, p567 * 139);
    v842.bezierCurveTo(p567 * 133, p567 * 155, p567 * 125, p567 * 170, p567 * 117, p567 * 182);
    v842.bezierCurveTo(p567 * 116, p567 * 160, p567 * 119, p567 * 151, p567 * 124, p567 * 138);
    v842.bezierCurveTo(p567 * 107, p567 * 150, p567 * 95, p567 * 156, p567 * 82, p567 * 159);
    v842.bezierCurveTo(p567 * 94, p567 * 140, p567 * 101, p567 * 136, p567 * 113, p567 * 128);
    v842.bezierCurveTo(p567 * 78, p567 * 123, p567 * 75, p567 * 121, p567 * 67, p567 * 118);
    v842.bezierCurveTo(p567 * 85, p567 * 112, p567 * 94, p567 * 112, p567 * 111, p567 * 113);
    v842.bezierCurveTo(p567 * 89, p567 * 97, p567 * 85, p567 * 93, p567 * 78, p567 * 82);
    v842.bezierCurveTo(p567 * 92, p567 * 85, p567 * 101, p567 * 90, p567 * 121, p567 * 102);
    v842.closePath();
    f84(v842, p569[2]);
    v842.beginPath();
    v842.lineCap = "round";
    v842.lineJoin = "round";
    v842.moveTo(p567 * 128, p567 * 103);
    v842.bezierCurveTo(p567 * 111, p567 * 112, p567 * 117, p567 * 136, p567 * 140, p567 * 130);
    v842.bezierCurveTo(p567 * 151, p567 * 126, p567 * 156, p567 * 115, p567 * 155, p567 * 107);
    v842.bezierCurveTo(p567 * 155, p567 * 96, p567 * 154, p567 * 94, p567 * 148, p567 * 94);
    v842.bezierCurveTo(p567 * 141, p567 * 94, p567 * 146, p567 * 104, p567 * 136, p567 * 104);
    v842.closePath();
    f84(v842, p569[3], p569[4], p567 * 4);
    return v841;
  }
  const v843 = 3;
  function f92(p570, p571, p572) {
    var v844 = document.createElement("canvas");
    var v845 = v844.getContext("2d");
    v844.width = p570 * 70;
    v844.height = p570 * 70;
    v845.globalAlpha = 0.5;
    f89(v845, p570 * 26, p570 * 26, p570 * 9);
    f84(v845, p572[0]);
    f89(v845, p570 * 56, p570 * 36, p570 * 9);
    f84(v845, p572[1]);
    f89(v845, p570 * 40, p570 * 50, p570 * 9);
    f84(v845, p572[2]);
    v845.globalAlpha = 1;
    f89(v845, p570 * 26, p570 * 26, p570 * 5);
    f84(v845, p572[0]);
    f89(v845, p570 * 56, p570 * 36, p570 * 5);
    f84(v845, p572[1]);
    f89(v845, p570 * 40, p570 * 50, p570 * 5);
    f84(v845, p572[2]);
    return v844;
  }
  function f93(p573, p574, p575) {
    var v846 = document.createElement("canvas");
    var v847 = v846.getContext("2d");
    v846.width = p573 * 22;
    v846.height = p573 * 22;
    v847.globalAlpha = 0.4;
    f89(v847, p573 * 11, p573 * 11, p573 * 10);
    f84(v847, p575[0]);
    v847.globalAlpha = 0.7;
    f89(v847, p573 * 11, p573 * 11, p573 * 7);
    f84(v847, p575[0]);
    v847.globalAlpha = 1;
    f89(v847, p573 * 11, p573 * 11, p573 * 4);
    f84(v847, p575[0]);
    return v846;
  }
  function f94(p576, p577, p578) {
    var v848 = document.createElement("canvas");
    var v849 = v848.getContext("2d");
    v848.width = p576 * 248;
    v848.height = p576 * 247;
    v849.save();
    v849.translate(p576 * 69.5, p576 * 145);
    f83(v849, p576 * -8.5, p576 * -63, p576 * 17, p576 * 127, p576 * 1);
    v849.restore();
    f84(v849, p578[0]);
    v849.save();
    v849.translate(p576 * 183, p576 * 145);
    f83(v849, p576 * -8, p576 * -63, p576 * 16, p576 * 126, p576 * 1);
    v849.restore();
    f84(v849, p578[0]);
    v849.save();
    v849.translate(p576 * 123.5, p576 * 62.5);
    v849.rotate(6.28);
    f83(v849, p576 * -84.5, p576 * -25.5, p576 * 169, p576 * 51, p576 * 5);
    v849.restore();
    f84(v849, p578[2], p578[1], p576 * 6);
    v849.save();
    v849.translate(p576 * 123.5, p576 * 118);
    v849.rotate(6.24);
    f83(v849, p576 * -85.5, p576 * -24, p576 * 169, p576 * 48, p576 * 5);
    v849.restore();
    f84(v849, p578[3], p578[1], p576 * 6);
    v849.save();
    v849.translate(p576 * 122, p576 * 177.5);
    v849.rotate(6.32);
    f83(v849, p576 * -84, p576 * -23.5, p576 * 169, p576 * 47, p576 * 5);
    v849.restore();
    f84(v849, p578[2], p578[1], p576 * 6);
    v849.beginPath();
    v849.lineCap = "round";
    v849.lineJoin = "round";
    v849.moveTo(p576 * 37, p576 * 157);
    v849.bezierCurveTo(p576 * 49, p576 * 160, p576 * 49, p576 * 160, p576 * 61, p576 * 163);
    v849.bezierCurveTo(p576 * 49.5, p576 * 165.5, p576 * 49.5, p576 * 165.5, p576 * 38, p576 * 168);
    v849.closePath();
    f84(v849, p578[1]);
    v849.beginPath();
    v849.lineCap = "round";
    v849.lineJoin = "round";
    v849.moveTo(p576 * 205, p576 * 175);
    v849.bezierCurveTo(p576 * 192.5, p576 * 180, p576 * 192.5, p576 * 180, p576 * 180, p576 * 185);
    v849.bezierCurveTo(p576 * 193, p576 * 188, p576 * 193, p576 * 188, p576 * 206, p576 * 191);
    v849.closePath();
    f84(v849, p578[1]);
    return v848;
  }
  const v850 = 10;
  function f95(p579, p580, p581) {
    var v851 = document.createElement("canvas");
    var v852 = v851.getContext("2d");
    v851.width = p579 * 248;
    v851.height = p579 * 247;
    v852.save();
    v852.translate(p579 * 182, p579 * 120);
    f83(v852, p579 * -8, p579 * -67, p579 * 16, p579 * 134, p579 * 1);
    v852.restore();
    f84(v852, p581[0]);
    v852.save();
    v852.translate(p579 * 68.5, p579 * 127.5);
    f83(v852, p579 * -8.5, p579 * -70.5, p579 * 17, p579 * 141, p579 * 1);
    v852.restore();
    f84(v852, p581[0]);
    v852.save();
    v852.translate(p579 * 123.5, p579 * 68);
    f83(v852, p579 * -82.5, p579 * -24, p579 * 165, p579 * 48, p579 * 4);
    v852.restore();
    f84(v852, p581[2], p581[1], p579 * 6);
    v852.save();
    v852.translate(p579 * 123, p579 * 179.5);
    f83(v852, p579 * -83, p579 * -24.5, p579 * 166, p579 * 49, p579 * 4);
    v852.restore();
    f84(v852, p581[2], p581[1], p579 * 6);
    v852.save();
    v852.translate(p579 * 123.5, p579 * 123.5);
    v852.rotate(6.24);
    f83(v852, p579 * -82.5, p579 * -24.5, p579 * 165, p579 * 49, p579 * 4);
    v852.restore();
    f84(v852, p581[3], p581[1], p579 * 6);
    v852.beginPath();
    v852.lineCap = "round";
    v852.lineJoin = "round";
    v852.moveTo(p579 * 204, p579 * 112);
    v852.bezierCurveTo(p579 * 149, p579 * 121.5, p579 * 96, p579 * 130, p579 * 94, p579 * 131);
    v852.bezierCurveTo(p579 * 149.5, p579 * 127.5, p579 * 149.5, p579 * 127.5, p579 * 205, p579 * 124);
    v852.closePath();
    f84(v852, p581[1]);
    return v851;
  }
  function f96(p582, p583, p584) {
    var v853 = document.createElement("canvas");
    var v854 = v853.getContext("2d");
    v853.width = p582 * 248;
    v853.height = p582 * 247;
    v854.save();
    v854.translate(p582 * 183, p582 * 107);
    f83(v854, p582 * -8, p582 * -70.5, p582 * 16, p582 * 141, p582 * 1);
    v854.restore();
    f84(v854, p584[0]);
    v854.save();
    v854.translate(p582 * 69.5, p582 * 110);
    f83(v854, p582 * -8.5, p582 * -71, p582 * 17, p582 * 143, p582 * 1);
    v854.restore();
    f84(v854, p584[0]);
    v854.save();
    v854.translate(p582 * 123.5, p582 * 181);
    f83(v854, p582 * -84.5, p582 * -26, p582 * 169, p582 * 52, p582 * 5);
    v854.restore();
    f84(v854, p584[2], p584[1], p582 * 6);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p582 * 41, p582 * 95);
    v854.bezierCurveTo(p582 * 105, p582 * 96, p582 * 113, p582 * 99, p582 * 134, p582 * 102);
    v854.bezierCurveTo(p582 * 147, p582 * 106, p582 * 173, p582 * 100, p582 * 207, p582 * 105);
    v854.bezierCurveTo(p582 * 210, p582 * 105, p582 * 207, p582 * 140, p582 * 207, p582 * 154);
    v854.bezierCurveTo(p582 * 123.5, p582 * 151.5, p582 * 123.5, p582 * 151.5, p582 * 40, p582 * 149);
    v854.bezierCurveTo(p582 * 37, p582 * 145, p582 * 39, p582 * 95, p582 * 41, p582 * 96);
    v854.closePath();
    f84(v854, p584[2], p584[1], p582 * 6);
    v854.beginPath();
    v854.lineCap = "round";
    v854.lineJoin = "round";
    v854.moveTo(p582 * 68, p582 * 75);
    v854.bezierCurveTo(p582 * 54, p582 * 72.5, p582 * 54, p582 * 72.5, p582 * 40, p582 * 70);
    v854.bezierCurveTo(p582 * 38, p582 * 46, p582 * 40, p582 * 46, p582 * 53, p582 * 46);
    v854.bezierCurveTo(p582 * 201, p582 * 41, p582 * 201, p582 * 41, p582 * 201, p582 * 42);
    v854.bezierCurveTo(p582 * 211, p582 * 40, p582 * 208, p582 * 53, p582 * 208, p582 * 72);
    v854.bezierCurveTo(p582 * 209, p582 * 91, p582 * 210, p582 * 96, p582 * 194, p582 * 94);
    v854.bezierCurveTo(p582 * 119, p582 * 97, p582 * 119, p582 * 97, p582 * 44, p582 * 100);
    v854.bezierCurveTo(p582 * 39, p582 * 99, p582 * 40, p582 * 96, p582 * 40, p582 * 80);
    v854.bezierCurveTo(p582 * 54, p582 * 77.5, p582 * 54, p582 * 77.5, p582 * 68, p582 * 75);
    v854.closePath();
    f84(v854, p584[3], p584[1], p582 * 6);
    return v853;
  }
  function f97(p585, p586, p587) {
    var v855 = document.createElement("canvas");
    var v856 = v855.getContext("2d");
    v855.width = p585 * 191;
    v855.height = p585 * 153;
    v856.globalAlpha = 0.5;
    v856.translate(0, p585 * 10);
    v856.save();
    v856.translate(p585 * 96.49996948242188, p585 * 66.79510498046875);
    v856.rotate(0);
    f83(v856, p585 * -79.5, p585 * -48.5, p585 * 159, p585 * 97, p585 * 22);
    v856.restore();
    f84(v856, p587[0], p587[0], p585 * 4);
    v856.globalAlpha = 1;
    v856.translate(0, p585 * -10);
    v856.save();
    v856.translate(p585 * 96.49996948242188, p585 * 66.79510498046875);
    v856.rotate(0);
    f83(v856, p585 * -79.5, p585 * -48.5, p585 * 159, p585 * 97, p585 * 22);
    v856.restore();
    f84(v856, p587[1], p587[2], p585 * 4);
    v856.translate(p585 * 2, 0);
    v856.beginPath();
    v856.lineCap = "round";
    v856.lineJoin = "round";
    v856.moveTo(p585 * 119, p585 * 28);
    v856.bezierCurveTo(p585 * 119, p585 * 22, p585 * 119, p585 * 20, p585 * 122, p585 * 16);
    v856.bezierCurveTo(p585 * 149, p585 * 39, p585 * 149, p585 * 39, p585 * 176, p585 * 63);
    v856.bezierCurveTo(p585 * 176, p585 * 75, p585 * 176, p585 * 75, p585 * 175, p585 * 88);
    v856.bezierCurveTo(p585 * 174, p585 * 90, p585 * 174, p585 * 90, p585 * 172, p585 * 93);
    v856.bezierCurveTo(p585 * 171, p585 * 101, p585 * 169, p585 * 109, p585 * 164, p585 * 113);
    v856.bezierCurveTo(p585 * 163, p585 * 104, p585 * 163, p585 * 104, p585 * 162, p585 * 95);
    v856.bezierCurveTo(p585 * 155, p585 * 105, p585 * 155, p585 * 105, p585 * 147, p585 * 116);
    v856.bezierCurveTo(p585 * 87, p585 * 114, p585 * 87, p585 * 114, p585 * 26, p585 * 112);
    v856.bezierCurveTo(p585 * 27, p585 * 106, p585 * 27, p585 * 106, p585 * 27, p585 * 101);
    v856.bezierCurveTo(p585 * 24, p585 * 104, p585 * 24, p585 * 104, p585 * 20, p585 * 108);
    v856.bezierCurveTo(p585 * 17, p585 * 103, p585 * 20, p585 * 86, p585 * 23, p585 * 72);
    v856.bezierCurveTo(p585 * 15, p585 * 74, p585 * 14, p585 * 78, p585 * 12, p585 * 83);
    v856.bezierCurveTo(p585 * 12, p585 * 65, p585 * 12, p585 * 54, p585 * 16, p585 * 42);
    v856.bezierCurveTo(p585 * 14, p585 * 39, p585 * 14, p585 * 39, p585 * 12, p585 * 36);
    v856.bezierCurveTo(p585 * 16, p585 * 33, p585 * 16, p585 * 33, p585 * 19, p585 * 30);
    v856.bezierCurveTo(p585 * 18, p585 * 27, p585 * 18, p585 * 27, p585 * 17, p585 * 25);
    v856.bezierCurveTo(p585 * 24, p585 * 24, p585 * 31, p585 * 21, p585 * 29, p585 * 19);
    v856.bezierCurveTo(p585 * 37, p585 * 25, p585 * 37, p585 * 25, p585 * 45, p585 * 31);
    v856.bezierCurveTo(p585 * 40, p585 * 23, p585 * 40, p585 * 21, p585 * 42, p585 * 16);
    v856.bezierCurveTo(p585 * 74, p585 * 16, p585 * 74, p585 * 16, p585 * 106, p585 * 16);
    v856.bezierCurveTo(p585 * 113, p585 * 21, p585 * 113, p585 * 21, p585 * 119, p585 * 26);
    v856.closePath();
    f84(v856, p587[3], p587[4], p585 * 4);
    return v855;
  }
  function f98(p588, p589, p590) {
    var v857 = document.createElement("canvas");
    var v858 = v857.getContext("2d");
    v857.width = p588 * 191;
    v857.height = p588 * 153;
    v858.globalAlpha = 0.5;
    v858.translate(0, p588 * 10);
    v858.save();
    v858.translate(p588 * 97.49996948242188, p588 * 95.12844848632812);
    f83(v858, p588 * -62.5, p588 * -41.5, p588 * 125, p588 * 83, p588 * 20);
    v858.restore();
    f84(v858, p590[0], p590[0], p588 * 4);
    v858.globalAlpha = 1;
    v858.translate(0, p588 * -10);
    v858.save();
    v858.translate(p588 * 97.49996948242188, p588 * 95.12844848632812);
    f83(v858, p588 * -62.5, p588 * -41.5, p588 * 125, p588 * 83, p588 * 20);
    v858.restore();
    f84(v858, p590[1], p590[2], p588 * 4);
    v858.globalCompositeOperation = "destination-out";
    v858.beginPath();
    v858.lineCap = "round";
    v858.lineJoin = "round";
    v858.moveTo(p588 * 26.999969482421875, p588 * 50.850677490234375);
    v858.bezierCurveTo(p588 * 46.499969482421875, p588 * 64.85067749023438, p588 * 46.499969482421875, p588 * 64.85067749023438, p588 * 65.99996948242188, p588 * 78.85067749023438);
    v858.bezierCurveTo(p588 * 80.99996948242188, p588 * 87.85067749023438, p588 * 105.99996948242188, p588 * 82.85067749023438, p588 * 114.99996948242188, p588 * 80.85067749023438);
    v858.bezierCurveTo(p588 * 130.99996948242188, p588 * 69.85067749023438, p588 * 152.99996948242188, p588 * 70.85067749023438, p588 * 166.99996948242188, p588 * 67.85067749023438);
    v858.bezierCurveTo(p588 * 156.99996948242188, p588 * 52.850677490234375, p588 * 156.99996948242188, p588 * 52.850677490234375, p588 * 146.99996948242188, p588 * 37.850677490234375);
    v858.bezierCurveTo(p588 * 101.49996948242188, p588 * 37.350677490234375, p588 * 101.49996948242188, p588 * 37.350677490234375, p588 * 55.999969482421875, p588 * 36.850677490234375);
    v858.closePath();
    f84(v858, p590[2], p590[3], p588 * 4);
    v858.globalCompositeOperation = "source-over";
    v858.beginPath();
    v858.lineCap = "round";
    v858.lineJoin = "round";
    v858.moveTo(p588 * 40.999969482421875, p588 * 59.850677490234375);
    v858.bezierCurveTo(p588 * 41.999969482421875, p588 * 50.850677490234375, p588 * 47.999969482421875, p588 * 47.850677490234375, p588 * 56.999969482421875, p588 * 49.850677490234375);
    v858.bezierCurveTo(p588 * 65.99996948242188, p588 * 41.850677490234375, p588 * 76.99996948242188, p588 * 42.850677490234375, p588 * 90.99996948242188, p588 * 47.850677490234375);
    v858.bezierCurveTo(p588 * 94.99996948242188, p588 * 42.850677490234375, p588 * 104.99996948242188, p588 * 42.850677490234375, p588 * 114.99996948242188, p588 * 47.850677490234375);
    v858.bezierCurveTo(p588 * 131.99996948242188, p588 * 42.850677490234375, p588 * 142.99996948242188, p588 * 48.850677490234375, p588 * 145.99996948242188, p588 * 56.850677490234375);
    v858.bezierCurveTo(p588 * 160.99996948242188, p588 * 63.850677490234375, p588 * 154.99996948242188, p588 * 69.85067749023438, p588 * 155.99996948242188, p588 * 70.85067749023438);
    v858.bezierCurveTo(p588 * 141.99996948242188, p588 * 71.85067749023438, p588 * 141.99996948242188, p588 * 71.85067749023438, p588 * 127.99996948242188, p588 * 72.85067749023438);
    v858.bezierCurveTo(p588 * 110.99996948242188, p588 * 83.85067749023438, p588 * 107.99996948242188, p588 * 82.85067749023438, p588 * 90.99996948242188, p588 * 85.85067749023438);
    v858.bezierCurveTo(p588 * 70.99996948242188, p588 * 83.85067749023438, p588 * 64.99996948242188, p588 * 79.85067749023438, p588 * 53.999969482421875, p588 * 70.85067749023438);
    v858.closePath();
    f84(v858, p590[3], p590[4], p588 * 4);
    v858.beginPath();
    v858.lineCap = "round";
    v858.lineJoin = "round";
    v858.moveTo(p588 * 33.999969482421875, p588 * 65.85067749023438);
    v858.bezierCurveTo(p588 * 36.999969482421875, p588 * 59.850677490234375, p588 * 34.999969482421875, p588 * 60.850677490234375, p588 * 39.999969482421875, p588 * 59.850677490234375);
    v858.bezierCurveTo(p588 * 47.999969482421875, p588 * 61.850677490234375, p588 * 62.999969482421875, p588 * 76.85067749023438, p588 * 74.99996948242188, p588 * 79.85067749023438);
    v858.bezierCurveTo(p588 * 93.99996948242188, p588 * 85.85067749023438, p588 * 111.99996948242188, p588 * 83.85067749023438, p588 * 124.99996948242188, p588 * 70.85067749023438);
    v858.bezierCurveTo(p588 * 129.99996948242188, p588 * 67.85067749023438, p588 * 145.99996948242188, p588 * 65.85067749023438, p588 * 159.99996948242188, p588 * 67.85067749023438);
    v858.bezierCurveTo(p588 * 159.99996948242188, p588 * 71.85067749023438, p588 * 159.99996948242188, p588 * 71.85067749023438, p588 * 159.99996948242188, p588 * 75.85067749023438);
    v858.bezierCurveTo(p588 * 146.99996948242188, p588 * 72.85067749023438, p588 * 144.99996948242188, p588 * 75.85067749023438, p588 * 143.99996948242188, p588 * 82.85067749023438);
    v858.bezierCurveTo(p588 * 144.99996948242188, p588 * 86.85067749023438, p588 * 140.99996948242188, p588 * 90.85067749023438, p588 * 137.99996948242188, p588 * 86.85067749023438);
    v858.bezierCurveTo(p588 * 139.99996948242188, p588 * 72.85067749023438, p588 * 135.99996948242188, p588 * 72.85067749023438, p588 * 133.99996948242188, p588 * 82.85067749023438);
    v858.bezierCurveTo(p588 * 127.99996948242188, p588 * 88.85067749023438, p588 * 124.99996948242188, p588 * 70.85067749023438, p588 * 116.99996948242188, p588 * 86.85067749023438);
    v858.bezierCurveTo(p588 * 110.99996948242188, p588 * 91.85067749023438, p588 * 96.99996948242188, p588 * 81.85067749023438, p588 * 89.99996948242188, p588 * 90.85067749023438);
    v858.bezierCurveTo(p588 * 85.99996948242188, p588 * 92.85067749023438, p588 * 81.99996948242188, p588 * 95.85067749023438, p588 * 76.99996948242188, p588 * 86.85067749023438);
    v858.bezierCurveTo(p588 * 67.99996948242188, p588 * 93.85067749023438, p588 * 67.99996948242188, p588 * 91.85067749023438, p588 * 60.999969482421875, p588 * 79.85067749023438);
    v858.bezierCurveTo(p588 * 53.999969482421875, p588 * 71.85067749023438, p588 * 52.999969482421875, p588 * 72.85067749023438, p588 * 46.999969482421875, p588 * 77.85067749023438);
    v858.bezierCurveTo(p588 * 41.999969482421875, p588 * 78.85067749023438, p588 * 42.999969482421875, p588 * 69.85067749023438, p588 * 33.999969482421875, p588 * 65.85067749023438);
    v858.closePath();
    f84(v858, p590[5], p590[6], p588 * 4);
    f89(v858, p588 * 68, p588 * 111.29513549804688, p588 * 15);
    f84(v858, p590[7], p590[8], p588 * 4);
    f89(v858, p588 * 123, p588 * 111.29510498046875, p588 * 15);
    f84(v858, p590[7], p590[8], p588 * 4);
    f89(v858, p588 * 63, p588 * 106, p588 * 5);
    f84(v858, p590[9]);
    f89(v858, p588 * 118, p588 * 106, p588 * 5);
    f84(v858, p590[9]);
    return v857;
  }
  function f99(p591, p592, p593) {
    var v859 = document.createElement("canvas");
    var v860 = v859.getContext("2d");
    var v861 = p591 * 40;
    var v862 = p591 * 40;
    v859.width = v861;
    v859.height = v862;
    var v863 = v861 * p591 / 2;
    var v864 = v862 * p591 / 2;
    var v865 = p591 * 15;
    v860.save();
    v860.translate(v863, v864);
    v860.globalAlpha = 1;
    f89(v860, 0, 0, v865);
    f84(v860, p593[0]);
    v865 = p591 * 5;
    v863 = p591 * 2;
    v864 = p591 * 1;
    v860.translate(v863, v864);
    v860.globalAlpha = 1;
    f89(v860, 0, 0, v865);
    f84(v860, p593[1]);
    v860.restore();
    return v859;
  }
  function f100(p594, p595) {
    var v866 = document.createElement("canvas");
    var v867 = v866.getContext("2d");
    v866.width = p594 * 191;
    v866.height = p594 * 153;
    v867.save();
    v867.translate(p594 * 96.49996948242188, p594 * 66.79510498046875);
    f83(v867, p594 * -79.5, p594 * -48.5, p594 * 159, p594 * 97, p594 * 22);
    v867.restore();
    f84(v867, p595[0], p595[0], p594 * 4);
    v867.translate(p594 * 2, 0);
    v867.beginPath();
    v867.lineCap = "round";
    v867.lineJoin = "round";
    v867.moveTo(p594 * 119, p594 * 28);
    v867.bezierCurveTo(p594 * 119, p594 * 22, p594 * 119, p594 * 20, p594 * 122, p594 * 16);
    v867.bezierCurveTo(p594 * 149, p594 * 39, p594 * 149, p594 * 39, p594 * 176, p594 * 63);
    v867.bezierCurveTo(p594 * 176, p594 * 75, p594 * 176, p594 * 75, p594 * 175, p594 * 88);
    v867.bezierCurveTo(p594 * 174, p594 * 90, p594 * 174, p594 * 90, p594 * 172, p594 * 93);
    v867.bezierCurveTo(p594 * 171, p594 * 101, p594 * 169, p594 * 109, p594 * 164, p594 * 113);
    v867.bezierCurveTo(p594 * 163, p594 * 104, p594 * 163, p594 * 104, p594 * 162, p594 * 95);
    v867.bezierCurveTo(p594 * 155, p594 * 105, p594 * 155, p594 * 105, p594 * 147, p594 * 116);
    v867.bezierCurveTo(p594 * 87, p594 * 114, p594 * 87, p594 * 114, p594 * 26, p594 * 112);
    v867.bezierCurveTo(p594 * 27, p594 * 106, p594 * 27, p594 * 106, p594 * 27, p594 * 101);
    v867.bezierCurveTo(p594 * 24, p594 * 104, p594 * 24, p594 * 104, p594 * 20, p594 * 108);
    v867.bezierCurveTo(p594 * 17, p594 * 103, p594 * 20, p594 * 86, p594 * 23, p594 * 72);
    v867.bezierCurveTo(p594 * 15, p594 * 74, p594 * 14, p594 * 78, p594 * 12, p594 * 83);
    v867.bezierCurveTo(p594 * 12, p594 * 65, p594 * 12, p594 * 54, p594 * 16, p594 * 42);
    v867.bezierCurveTo(p594 * 14, p594 * 39, p594 * 14, p594 * 39, p594 * 12, p594 * 36);
    v867.bezierCurveTo(p594 * 16, p594 * 33, p594 * 16, p594 * 33, p594 * 19, p594 * 30);
    v867.bezierCurveTo(p594 * 18, p594 * 27, p594 * 18, p594 * 27, p594 * 17, p594 * 25);
    v867.bezierCurveTo(p594 * 24, p594 * 24, p594 * 31, p594 * 21, p594 * 29, p594 * 19);
    v867.bezierCurveTo(p594 * 37, p594 * 25, p594 * 37, p594 * 25, p594 * 45, p594 * 31);
    v867.bezierCurveTo(p594 * 40, p594 * 23, p594 * 40, p594 * 21, p594 * 42, p594 * 16);
    v867.bezierCurveTo(p594 * 74, p594 * 16, p594 * 74, p594 * 16, p594 * 106, p594 * 16);
    v867.bezierCurveTo(p594 * 113, p594 * 21, p594 * 113, p594 * 21, p594 * 119, p594 * 26);
    v867.closePath();
    f84(v867, p595[0], p595[0], p594 * 4);
    v867.save();
    v867.translate(p594 * 97.49996948242188, p594 * 95.12844848632812);
    f83(v867, p594 * -62.5, p594 * -41.5, p594 * 125, p594 * 83, p594 * 20);
    v867.restore();
    f84(v867, p595[0], p595[0], p594 * 4);
    return v866;
  }
  const v868 = 8;
  function f101(p596, p597, p598, p599) {
    var v869 = document.createElement("canvas");
    var v870 = v869.getContext("2d");
    v869.width = p596 * 185;
    v869.height = p596 * 240;
    v870.globalAlpha = 0.5;
    v870.translate(0, p596 * 10);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 44, p596 * 137);
    v870.bezierCurveTo(p596 * 60, p596 * 87, p596 * 68, p596 * 66, p596 * 92, p596 * 67);
    v870.bezierCurveTo(p596 * 115, p596 * 64, p596 * 129, p596 * 97, p596 * 137, p596 * 136);
    v870.closePath();
    f84(v870, p598[0]);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 53, p596 * 181);
    v870.bezierCurveTo(p596 * 30, p596 * 164, p596 * 19, p596 * 150, p596 * 11, p596 * 136);
    v870.bezierCurveTo(p596 * 28, p596 * 121, p596 * 38, p596 * 132, p596 * 48, p596 * 150);
    v870.closePath();
    f84(v870, p598[0]);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 63, p596 * 208);
    v870.bezierCurveTo(p596 * 75, p596 * 224, p596 * 86, p596 * 228, p596 * 93, p596 * 228);
    v870.bezierCurveTo(p596 * 104, p596 * 229, p596 * 116, p596 * 219, p596 * 122, p596 * 205);
    v870.closePath();
    f84(v870, p598[0]);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 130, p596 * 170);
    v870.bezierCurveTo(p596 * 146, p596 * 125, p596 * 156, p596 * 126, p596 * 173, p596 * 137);
    v870.bezierCurveTo(p596 * 167, p596 * 151, p596 * 143, p596 * 174, p596 * 131, p596 * 183);
    v870.closePath();
    f84(v870, p598[0]);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 39, p596 * 140);
    v870.bezierCurveTo(p596 * 75, p596 * 126, p596 * 113, p596 * 127, p596 * 143, p596 * 137);
    v870.bezierCurveTo(p596 * 141, p596 * 186, p596 * 130, p596 * 202, p596 * 113, p596 * 214);
    v870.bezierCurveTo(p596 * 85, p596 * 228, p596 * 56, p596 * 219, p596 * 48, p596 * 173);
    v870.bezierCurveTo(p596 * 40, p596 * 148, p596 * 43, p596 * 145, p596 * 39, p596 * 140);
    v870.closePath();
    f84(v870, p598[0]);
    v870.globalAlpha = 1;
    v870.translate(0, p596 * -10);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 44, p596 * 137);
    v870.bezierCurveTo(p596 * 60, p596 * 87, p596 * 68, p596 * 66, p596 * 92, p596 * 67);
    v870.bezierCurveTo(p596 * 115, p596 * 64, p596 * 129, p596 * 97, p596 * 137, p596 * 136);
    v870.closePath();
    f84(v870, p598[1], p598[2], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 53, p596 * 181);
    v870.bezierCurveTo(p596 * 30, p596 * 164, p596 * 19, p596 * 150, p596 * 11, p596 * 136);
    v870.bezierCurveTo(p596 * 28, p596 * 121, p596 * 38, p596 * 132, p596 * 48, p596 * 150);
    v870.closePath();
    f84(v870, p598[1], p598[2], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 63, p596 * 208);
    v870.bezierCurveTo(p596 * 75, p596 * 224, p596 * 86, p596 * 228, p596 * 93, p596 * 228);
    v870.bezierCurveTo(p596 * 104, p596 * 229, p596 * 116, p596 * 219, p596 * 122, p596 * 205);
    v870.closePath();
    f84(v870, p598[1], p598[2], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 130, p596 * 170);
    v870.bezierCurveTo(p596 * 146, p596 * 125, p596 * 156, p596 * 126, p596 * 173, p596 * 137);
    v870.bezierCurveTo(p596 * 167, p596 * 151, p596 * 143, p596 * 174, p596 * 131, p596 * 183);
    v870.closePath();
    f84(v870, p598[1], p598[2], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 39, p596 * 140);
    v870.bezierCurveTo(p596 * 75, p596 * 126, p596 * 113, p596 * 127, p596 * 143, p596 * 137);
    v870.bezierCurveTo(p596 * 141, p596 * 186, p596 * 130, p596 * 202, p596 * 113, p596 * 214);
    v870.bezierCurveTo(p596 * 85, p596 * 228, p596 * 56, p596 * 219, p596 * 48, p596 * 173);
    v870.bezierCurveTo(p596 * 40, p596 * 148, p596 * 43, p596 * 145, p596 * 39, p596 * 140);
    v870.closePath();
    f84(v870, p598[1], p598[2], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 59, p596 * 99);
    v870.bezierCurveTo(p596 * 71, p596 * 68, p596 * 81, p596 * 68, p596 * 94, p596 * 67);
    v870.bezierCurveTo(p596 * 105, p596 * 66, p596 * 119, p596 * 75, p596 * 123, p596 * 96);
    v870.bezierCurveTo(p596 * 104, p596 * 91, p596 * 101, p596 * 94, p596 * 94, p596 * 97);
    v870.bezierCurveTo(p596 * 76, p596 * 92, p596 * 73, p596 * 93, p596 * 60, p596 * 99);
    v870.closePath();
    f84(v870, p598[3], p598[2], p596 * 4);
    if (p599 === 0) {
      v870.beginPath();
      v870.lineCap = "round";
      v870.lineJoin = "round";
      v870.moveTo(p596 * 47, p596 * 149);
      v870.bezierCurveTo(p596 * 43, p596 * 140, p596 * 48, p596 * 130, p596 * 59, p596 * 127);
      v870.bezierCurveTo(p596 * 77, p596 * 126, p596 * 90, p596 * 131, p596 * 131, p596 * 127);
      v870.bezierCurveTo(p596 * 143, p596 * 130, p596 * 144, p596 * 143, p596 * 132, p596 * 154);
      v870.bezierCurveTo(p596 * 90, p596 * 152, p596 * 90, p596 * 152, p596 * 48, p596 * 150);
      v870.closePath();
      f84(v870, p598[1]);
      v870.beginPath();
      v870.lineCap = "round";
      v870.lineJoin = "round";
      v870.moveTo(p596 * 40, p596 * 139);
      v870.bezierCurveTo(p596 * 48, p596 * 113, p596 * 76, p596 * 119, p596 * 91, p596 * 126);
      v870.bezierCurveTo(p596 * 117, p596 * 113, p596 * 135, p596 * 117, p596 * 144, p596 * 134);
      v870.bezierCurveTo(p596 * 144, p596 * 138, p596 * 144, p596 * 138, p596 * 144, p596 * 142);
      v870.bezierCurveTo(p596 * 128, p596 * 124, p596 * 108, p596 * 124, p596 * 91, p596 * 136);
      v870.bezierCurveTo(p596 * 59, p596 * 124, p596 * 50, p596 * 137, p596 * 42, p596 * 148);
      v870.closePath();
      f84(v870, p598[3], p598[2], p596 * 4);
    } else {
      v870.beginPath();
      v870.lineCap = "round";
      v870.lineJoin = "round";
      v870.moveTo(p596 * 41, p596 * 139);
      v870.bezierCurveTo(p596 * 53, p596 * 117, p596 * 69, p596 * 118, p596 * 92, p596 * 127);
      v870.bezierCurveTo(p596 * 124, p596 * 111, p596 * 136, p596 * 121, p596 * 143, p596 * 136);
      v870.bezierCurveTo(p596 * 142, p596 * 144, p596 * 142, p596 * 144, p596 * 141, p596 * 152);
      v870.bezierCurveTo(p596 * 128, p596 * 131, p596 * 113, p596 * 138, p596 * 92, p596 * 145);
      v870.bezierCurveTo(p596 * 57, p596 * 133, p596 * 57, p596 * 147, p596 * 44, p596 * 154);
      v870.closePath();
      f84(v870, p598[3], p598[2], p596 * 4);
    }
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 90, p596 * 95);
    v870.bezierCurveTo(p596 * 99, p596 * 82, p596 * 98, p596 * 58, p596 * 99, p596 * 40);
    v870.bezierCurveTo(p596 * 90, p596 * 38, p596 * 89, p596 * 34, p596 * 92, p596 * 17);
    v870.bezierCurveTo(p596 * 92, p596 * 5, p596 * 83, p596 * 16, p596 * 78, p596 * 29);
    v870.bezierCurveTo(p596 * 72, p596 * 59, p596 * 87, p596 * 81, p596 * 89, p596 * 87);
    v870.closePath();
    f84(v870, p598[1], p598[2], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 90, p596 * 86);
    v870.bezierCurveTo(p596 * 95, p596 * 74, p596 * 95, p596 * 62, p596 * 95, p596 * 43);
    v870.bezierCurveTo(p596 * 84, p596 * 37, p596 * 86, p596 * 34, p596 * 89, p596 * 16);
    v870.bezierCurveTo(p596 * 75, p596 * 29, p596 * 80, p596 * 58, p596 * 90, p596 * 85);
    v870.closePath();
    f84(v870, p598[1], p598[3], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 92, p596 * 117);
    v870.bezierCurveTo(p596 * 98, p596 * 87, p596 * 93, p596 * 78, p596 * 85, p596 * 76);
    v870.bezierCurveTo(p596 * 85.5, p596 * 79.5, p596 * 85.5, p596 * 79.5, p596 * 86, p596 * 83);
    v870.bezierCurveTo(p596 * 84, p596 * 85.5, p596 * 84, p596 * 85.5, p596 * 82, p596 * 88);
    v870.bezierCurveTo(p596 * 90, p596 * 93, p596 * 89, p596 * 100, p596 * 92, p596 * 117);
    v870.closePath();
    f84(v870, p598[1], p598[3], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 92, p596 * 175);
    v870.bezierCurveTo(p596 * 95, p596 * 135, p596 * 98, p596 * 125, p596 * 109, p596 * 121);
    v870.bezierCurveTo(p596 * 106, p596 * 114, p596 * 104, p596 * 114, p596 * 102, p596 * 113);
    v870.bezierCurveTo(p596 * 103, p596 * 106, p596 * 104, p596 * 103, p596 * 107, p596 * 96);
    v870.bezierCurveTo(p596 * 74, p596 * 108, p596 * 86, p596 * 157, p596 * 92, p596 * 174);
    v870.closePath();
    f84(v870, p598[1], p598[3], p596 * 4);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 48, p596 * 169);
    v870.bezierCurveTo(p596 * 42, p596 * 187, p596 * 50, p596 * 193, p596 * 59, p596 * 198);
    v870.closePath();
    f84(v870, undefined, p598[2], p596 * 5);
    v870.beginPath();
    v870.lineCap = "round";
    v870.lineJoin = "round";
    v870.moveTo(p596 * 136, p596 * 171);
    v870.bezierCurveTo(p596 * 139, p596 * 186, p596 * 138, p596 * 191, p596 * 124, p596 * 199);
    v870.closePath();
    f84(v870, vVUndefined19, p598[2], p596 * 4);
    f89(v870, p596 * 63, p596 * 180, p596 * 15.231546211727817);
    f84(v870, p598[4]);
    f89(v870, p596 * 121, p596 * 181, p596 * 15.652475842498529);
    f84(v870, p598[4]);
    f89(v870, p596 * 58, p596 * 175, p596 * 5.656854249492381);
    f84(v870, p598[2]);
    f89(v870, p596 * 116, p596 * 175, p596 * 5.656854249492381);
    f84(v870, p598[2]);
    return v869;
  }
  const v871 = 1;
  function f102(p600, p601) {
    var v872 = document.createElement("canvas");
    var v873 = v872.getContext("2d");
    v872.width = p600 * 185;
    v872.height = p600 * 240;
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 44, p600 * 137);
    v873.bezierCurveTo(p600 * 60, p600 * 87, p600 * 68, p600 * 66, p600 * 92, p600 * 67);
    v873.bezierCurveTo(p600 * 115, p600 * 64, p600 * 129, p600 * 97, p600 * 137, p600 * 136);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 53, p600 * 181);
    v873.bezierCurveTo(p600 * 30, p600 * 164, p600 * 19, p600 * 150, p600 * 11, p600 * 136);
    v873.bezierCurveTo(p600 * 28, p600 * 121, p600 * 38, p600 * 132, p600 * 48, p600 * 150);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 63, p600 * 208);
    v873.bezierCurveTo(p600 * 75, p600 * 224, p600 * 86, p600 * 228, p600 * 93, p600 * 228);
    v873.bezierCurveTo(p600 * 104, p600 * 229, p600 * 116, p600 * 219, p600 * 122, p600 * 205);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 130, p600 * 170);
    v873.bezierCurveTo(p600 * 146, p600 * 125, p600 * 156, p600 * 126, p600 * 173, p600 * 137);
    v873.bezierCurveTo(p600 * 167, p600 * 151, p600 * 143, p600 * 174, p600 * 131, p600 * 183);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 39, p600 * 140);
    v873.bezierCurveTo(p600 * 75, p600 * 126, p600 * 113, p600 * 127, p600 * 143, p600 * 137);
    v873.bezierCurveTo(p600 * 141, p600 * 186, p600 * 130, p600 * 202, p600 * 113, p600 * 214);
    v873.bezierCurveTo(p600 * 85, p600 * 228, p600 * 56, p600 * 219, p600 * 48, p600 * 173);
    v873.bezierCurveTo(p600 * 40, p600 * 148, p600 * 43, p600 * 145, p600 * 39, p600 * 140);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 90, p600 * 95);
    v873.bezierCurveTo(p600 * 99, p600 * 82, p600 * 98, p600 * 58, p600 * 99, p600 * 40);
    v873.bezierCurveTo(p600 * 90, p600 * 38, p600 * 89, p600 * 34, p600 * 92, p600 * 17);
    v873.bezierCurveTo(p600 * 92, p600 * 5, p600 * 83, p600 * 16, p600 * 78, p600 * 29);
    v873.bezierCurveTo(p600 * 72, p600 * 59, p600 * 87, p600 * 81, p600 * 89, p600 * 87);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 90, p600 * 86);
    v873.bezierCurveTo(p600 * 95, p600 * 74, p600 * 95, p600 * 62, p600 * 95, p600 * 43);
    v873.bezierCurveTo(p600 * 84, p600 * 37, p600 * 86, p600 * 34, p600 * 89, p600 * 16);
    v873.bezierCurveTo(p600 * 75, p600 * 29, p600 * 80, p600 * 58, p600 * 90, p600 * 85);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 92, p600 * 117);
    v873.bezierCurveTo(p600 * 98, p600 * 87, p600 * 93, p600 * 78, p600 * 85, p600 * 76);
    v873.bezierCurveTo(p600 * 85.5, p600 * 79.5, p600 * 85.5, p600 * 79.5, p600 * 86, p600 * 83);
    v873.bezierCurveTo(p600 * 84, p600 * 85.5, p600 * 84, p600 * 85.5, p600 * 82, p600 * 88);
    v873.bezierCurveTo(p600 * 90, p600 * 93, p600 * 89, p600 * 100, p600 * 92, p600 * 117);
    v873.closePath();
    f84(v873, p601[0]);
    v873.beginPath();
    v873.lineCap = "round";
    v873.lineJoin = "round";
    v873.moveTo(p600 * 92, p600 * 175);
    v873.bezierCurveTo(p600 * 95, p600 * 135, p600 * 98, p600 * 125, p600 * 109, p600 * 121);
    v873.bezierCurveTo(p600 * 106, p600 * 114, p600 * 104, p600 * 114, p600 * 102, p600 * 113);
    v873.bezierCurveTo(p600 * 103, p600 * 106, p600 * 104, p600 * 103, p600 * 107, p600 * 96);
    v873.bezierCurveTo(p600 * 74, p600 * 108, p600 * 86, p600 * 157, p600 * 92, p600 * 174);
    v873.closePath();
    f84(v873, p601[0]);
    return v872;
  }
  function f103(p602, p603, p604) {
    var v874 = document.createElement("canvas");
    var v875 = v874.getContext("2d");
    var v876 = p602 * 32;
    var v877 = p602 * 32;
    var v878 = v876 / 2;
    var v879 = v877 / 2;
    v874.width = v876;
    v874.height = v877;
    var v880 = p602 * 5;
    var v881 = p602 * 28;
    var v882 = v880 / 2;
    var v883 = v881 / 2;
    v875.translate(p602 * 0, p602 * 0);
    v875.translate(v878, v879);
    if (p604 == 1) {
      f89(v875, 0, 0, p602 * 10);
      f84(v875, p603[2], p603[2], p602 * 3);
      for (var v884 = 0; v884 < 4; v884++) {
        f83(v875, -v882, -v883, v880, v881, p602 * 2);
        v875.rotate(Math.PI / 4);
        f84(v875, p603[2], p603[2], p602 * 4);
      }
    }
    f89(v875, 0, 0, p602 * 10);
    f84(v875, p603[0], p603[1], p602 * 1.5);
    for (v884 = 0; v884 < 4; v884++) {
      f83(v875, -v882, -v883, v880, v881, p602 * 2);
      v875.rotate(Math.PI / 4);
      f84(v875, p603[0], p603[1], p602 * 1.5);
    }
    f89(v875, 0, 0, p602 * 10);
    f84(v875, p603[0]);
    f89(v875, 0, 0, p602 * 4);
    f84(v875, p603[2], p603[1], p602 * 1.5);
    v875.globalCompositeOperation = "destination-out";
    f89(v875, 0, 0, p602 * 4);
    f84(v875, p603[0], p603[1], p602 * 2);
    v875.globalCompositeOperation = "source-over";
    f89(v875, 0, 0, p602 * 4);
    f84(v875, undefined, p603[1], p602 * 2);
    return v874;
  }
  function f104(p605, p606) {
    var v885 = document.createElement("canvas");
    var v886 = v885.getContext("2d");
    var v887 = p605 * 100;
    var v888 = p605 * 100;
    var v889 = v887 / 2;
    var v890 = v888 / 2;
    v885.width = v887;
    v885.height = v888;
    var v891 = p605 * 5;
    var v892 = p605 * 28;
    var v893 = v891 / 2;
    var v894 = v892 / 2;
    v886.translate(v889, v890);
    for (var v895 = 0; v895 < 4; v895++) {
      f83(v886, -v893, -v894, v891, v892, p605 * 2);
      v886.rotate(Math.PI / 4);
      f84(v886, p606);
    }
    v886.arc(0, 0, p605 * 10, 0, Math.PI * 2);
    f84(v886, p606);
    v886.globalCompositeOperation = "destination-out";
    f89(v886, 0, 0, p605 * 4);
    v886.fill();
    return v885;
  }
  function f105(p607, p608, p609) {
    var v896 = document.createElement("canvas");
    var v897 = v896.getContext("2d");
    var v898 = (v907 = p607 * 125) / 2;
    var v899 = (v908 = p607 * 95) / 2;
    var v900 = p607 * 10;
    var v901 = p607 * 8;
    var v902 = p607 * 112;
    var v903 = p607 * 82;
    var v904 = v902 / 2;
    var v905 = v903 / 2;
    var v906 = p607 * 4;
    v896.width = v907;
    v896.height = v908;
    v897.translate(v898 - p607 * 4, v899 + p607 * 4);
    v897.globalAlpha = p608 ? 0.5 : 1;
    f83(v897, -v904, -v905, v902, v903, v900);
    f84(v897, p609[0]);
    v897.globalAlpha = 1;
    v897.translate(0, -v901);
    f83(v897, -v904, -v905, v902, v903, v900);
    f84(v897, p609[1], p609[2], v906);
    var v907 = p607 * 55;
    var v908 = p607 * 45;
    v900 = 5;
    v897.translate(p607 * -40, p607 * -30);
    f83(v897, 0, 0, v907, v908, v900);
    f84(v897, p609[3]);
    var vF104 = f104(p607 * 0.7, p609[3]);
    v897.drawImage(vF104, p607 * 45, p607 * -25);
    vF104 = f104(p607 * 0.7, p609[3]);
    v897.drawImage(vF104, p607 * 45, p607 * 15);
    vF104 = f104(p607 * 1.2, p609[3]);
    v897.drawImage(vF104, p607 * 28, p607 * -30);
    v907 = p607 * 15;
    v908 = p607 * 70;
    v900 = p607 * 5;
    v897.translate(p607 * 78, p607 * -5);
    f83(v897, 0, 0, v907, v908, v900);
    f84(v897, p609[4]);
    v907 = p607 * 9;
    v908 = p607 * 50;
    v900 = p607 * 3;
    v897.translate(p607 * -20, p607 * 20);
    v897.rotate(Math.PI / 5);
    v897.globalAlpha = 0.6;
    f83(v897, 0, 0, v907, v908, v900);
    f84(v897, p609[5]);
    v897.translate(p607 * -20, p607 * 29);
    v897.rotate(Math.PI / 5);
    v897.globalAlpha = 0.6;
    v897.beginPath();
    v897.lineJoin = "round";
    v897.moveTo(0, 0);
    v897.lineTo(0, p607 * 30);
    v897.lineTo(p607 * 30, p607 * 30);
    v897.closePath();
    f84(v897, null, p609[5], p607 * 8);
    return v896;
  }
  function f106(p610) {
    var v909 = document.createElement("canvas");
    var v910 = v909.getContext("2d");
    var v911 = p610 * 200;
    var v912 = p610 * 200;
    v909.width = v911;
    v909.height = v912;
    var vEu = f156(0.35, vVVV144, ["#0e3022", "#0b8052", "#077b49"]);
    v910.drawImage(vEu, 10, 10);
    vEu = f160(0.9, false, ["#3d2a6e", "#8255b5"]);
    v910.drawImage(vEu, 21, 20);
    vEu = f160(0.9, false, ["#3d2a6e", "#8255b5"]);
    v910.drawImage(vEu, 38, 28);
    vEu = f160(0.9, false, ["#3d2a6e", "#8255b5"]);
    v910.drawImage(vEu, 15, 37);
    vEu = f160(0.9, vVVV143, ["#3d2a6e", "#8255b5"]);
    v910.drawImage(vEu, 32, 45);
    return v909;
  }
  const v913 = 100;
  function f107(p611, p612) {
    var v914 = document.createElement("canvas");
    var v915 = v914.getContext("2d");
    var v916 = p611 * 85;
    var v917 = p611 * 115;
    var v918 = p611 * 6;
    v914.width = v916;
    v914.height = v917;
    v915.translate(p611 * -130, p611 * -60 + v918);
    v915.globalAlpha = 0.5;
    v915.beginPath();
    v915.bezierCurveTo(p611 * 190, p611 * 87, p611 * 201, p611 * 59, p611 * 208, p611 * 64);
    v915.bezierCurveTo(p611 * 213, p611 * 68, p611 * 204, p611 * 93, p611 * 195, p611 * 109);
    v915.bezierCurveTo(p611 * 195, p611 * 109, p611 * 202, p611 * 124, p611 * 191, p611 * 141);
    v915.bezierCurveTo(p611 * 182, p611 * 151, p611 * 164, p611 * 155, p611 * 148, p611 * 144);
    v915.bezierCurveTo(p611 * 136, p611 * 135, p611 * 138, p611 * 111, p611 * 145, p611 * 104);
    v915.bezierCurveTo(p611 * 140, p611 * 92, p611 * 131, p611 * 67, p611 * 138, p611 * 63);
    v915.bezierCurveTo(p611 * 145, p611 * 61, p611 * 153, p611 * 82, p611 * 155, p611 * 96);
    v915.bezierCurveTo(p611 * 167, p611 * 91, p611 * 178, p611 * 92, p611 * 187, p611 * 98);
    v915.closePath();
    f84(v915, p612[0]);
    v915.translate(0, -v918);
    v915.globalAlpha = 1;
    v915.beginPath();
    v915.bezierCurveTo(p611 * 190, p611 * 87, p611 * 201, p611 * 59, p611 * 208, p611 * 64);
    v915.bezierCurveTo(p611 * 213, p611 * 68, p611 * 204, p611 * 93, p611 * 195, p611 * 109);
    v915.bezierCurveTo(p611 * 195, p611 * 109, p611 * 202, p611 * 124, p611 * 191, p611 * 141);
    v915.bezierCurveTo(p611 * 182, p611 * 151, p611 * 164, p611 * 155, p611 * 148, p611 * 144);
    v915.bezierCurveTo(p611 * 136, p611 * 135, p611 * 138, p611 * 111, p611 * 145, p611 * 104);
    v915.bezierCurveTo(p611 * 140, p611 * 92, p611 * 131, p611 * 67, p611 * 138, p611 * 63);
    v915.bezierCurveTo(p611 * 145, p611 * 61, p611 * 153, p611 * 82, p611 * 155, p611 * 96);
    v915.bezierCurveTo(p611 * 167, p611 * 91, p611 * 178, p611 * 92, p611 * 187, p611 * 98);
    v915.closePath();
    f84(v915, p612[1], p612[2], 4);
    var v919 = p611 * 155;
    var v920 = p611 * 133;
    var v921 = p611 * 10;
    var v922 = p611 * 3;
    var v923 = v919 + p611 * -3;
    var v924 = v920 + p611 * -5;
    v915.save();
    v915.translate(v919, v920);
    v915.globalAlpha = 1;
    f89(v915, 0, 0, v921);
    f84(v915, p612[3]);
    v915.restore();
    v915.save();
    v915.translate(v923, v924);
    v915.globalAlpha = 1;
    f89(v915, 0, 0, v922);
    f84(v915, p612[4]);
    v915.restore();
    v915.save();
    v915.translate(v919 + p611 * 27, v920);
    v915.globalAlpha = 1;
    f89(v915, 0, 0, v921);
    f84(v915, p612[3]);
    v915.restore();
    v915.save();
    v915.translate(p611 * 27 + v923, v924);
    v915.globalAlpha = 1;
    f89(v915, 0, 0, v922);
    f84(v915, p612[4]);
    return v914;
  }
  function f108(p613, p614) {
    var v925 = document.createElement("canvas");
    var v926 = v925.getContext("2d");
    v925.width = p613 * 188;
    v925.height = p613 * 190;
    v926.globalAlpha = 0.5;
    v926.translate(0, p613 * 5);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 33.00567626953125, p613 * 95.44320678710938);
    v926.bezierCurveTo(p613 * 42.00567626953125, p613 * 87.44320678710938, p613 * 48.00567626953125, p613 * 51.443206787109375, p613 * 74.00567626953125, p613 * 47.443206787109375);
    v926.bezierCurveTo(p613 * 100.00567626953125, p613 * 42.443206787109375, p613 * 118.00567626953125, p613 * 49.443206787109375, p613 * 131.00567626953125, p613 * 55.443206787109375);
    v926.bezierCurveTo(p613 * 140.00567626953125, p613 * 70.44320678710938, p613 * 145.00567626953125, p613 * 87.44320678710938, p613 * 152.00567626953125, p613 * 94.44320678710938);
    v926.bezierCurveTo(p613 * 149.00567626953125, p613 * 99.44320678710938, p613 * 147.00567626953125, p613 * 98.44320678710938, p613 * 141.00567626953125, p613 * 101.44320678710938);
    v926.bezierCurveTo(p613 * 147.00567626953125, p613 * 108.44320678710938, p613 * 147.00567626953125, p613 * 111.44320678710938, p613 * 147.00567626953125, p613 * 112.44320678710938);
    v926.bezierCurveTo(p613 * 143.00567626953125, p613 * 112.44320678710938, p613 * 141.00567626953125, p613 * 112.44320678710938, p613 * 137.00567626953125, p613 * 111.44320678710938);
    v926.bezierCurveTo(p613 * 138.00567626953125, p613 * 117.44320678710938, p613 * 138.00567626953125, p613 * 120.44320678710938, p613 * 138.00567626953125, p613 * 124.44320678710938);
    v926.bezierCurveTo(p613 * 125.00567626953125, p613 * 107.44320678710938, p613 * 121.00567626953125, p613 * 124.44320678710938, p613 * 110.00567626953125, p613 * 141.44320678710938);
    v926.bezierCurveTo(p613 * 102.00567626953125, p613 * 158.44320678710938, p613 * 89.00567626953125, p613 * 158.44320678710938, p613 * 80.00567626953125, p613 * 144.44320678710938);
    v926.bezierCurveTo(p613 * 61.00567626953125, p613 * 111.44320678710938, p613 * 56.00567626953125, p613 * 117.44320678710938, p613 * 48.00567626953125, p613 * 120.44320678710938);
    v926.bezierCurveTo(p613 * 46.00567626953125, p613 * 118.44320678710938, p613 * 47.00567626953125, p613 * 112.44320678710938, p613 * 48.00567626953125, p613 * 107.44320678710938);
    v926.bezierCurveTo(p613 * 43.00567626953125, p613 * 111.44320678710938, p613 * 40.00567626953125, p613 * 111.44320678710938, p613 * 37.00567626953125, p613 * 110.44320678710938);
    v926.bezierCurveTo(p613 * 39.50567626953125, p613 * 104.94320678710938, p613 * 39.50567626953125, p613 * 104.94320678710938, p613 * 42.00567626953125, p613 * 99.44320678710938);
    v926.bezierCurveTo(p613 * 33.00567626953125, p613 * 99.44320678710938, p613 * 33.00567626953125, p613 * 98.44320678710938, p613 * 33.00567626953125, p613 * 96.44320678710938);
    v926.closePath();
    f84(v926, p614[0], p614[0], p613 * 4);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 60.00567626953125, p613 * 99.35227966308594);
    v926.bezierCurveTo(p613 * 70.00567626953125, p613 * 82.35227966308594, p613 * 85.00567626953125, p613 * 86.35227966308594, p613 * 87.00567626953125, p613 * 97.35227966308594);
    v926.bezierCurveTo(p613 * 89.00567626953125, p613 * 101.35227966308594, p613 * 88.00567626953125, p613 * 105.35227966308594, p613 * 87.00567626953125, p613 * 110.35227966308594);
    v926.bezierCurveTo(p613 * 89.00567626953125, p613 * 111.35227966308594, p613 * 91.00567626953125, p613 * 112.35227966308594, p613 * 93.00567626953125, p613 * 115.35227966308594);
    v926.bezierCurveTo(p613 * 96.00567626953125, p613 * 111.35227966308594, p613 * 99.00567626953125, p613 * 111.35227966308594, p613 * 100.00567626953125, p613 * 110.35227966308594);
    v926.bezierCurveTo(p613 * 98.00567626953125, p613 * 92.35227966308594, p613 * 103.00567626953125, p613 * 86.35227966308594, p613 * 113.00567626953125, p613 * 89.35227966308594);
    v926.bezierCurveTo(p613 * 122.00567626953125, p613 * 92.35227966308594, p613 * 123.00567626953125, p613 * 94.35227966308594, p613 * 126.00567626953125, p613 * 98.35227966308594);
    v926.bezierCurveTo(p613 * 124.00567626953125, p613 * 102.35227966308594, p613 * 123.00567626953125, p613 * 103.35227966308594, p613 * 121.00567626953125, p613 * 104.35227966308594);
    v926.bezierCurveTo(p613 * 124.00567626953125, p613 * 105.35227966308594, p613 * 126.00567626953125, p613 * 107.35227966308594, p613 * 129.00567626953125, p613 * 111.35227966308594);
    v926.bezierCurveTo(p613 * 115.00567626953125, p613 * 122.35227966308594, p613 * 113.00567626953125, p613 * 145.35227966308594, p613 * 100.00567626953125, p613 * 152.35227966308594);
    v926.bezierCurveTo(p613 * 91.00567626953125, p613 * 158.35227966308594, p613 * 83.00567626953125, p613 * 149.35227966308594, p613 * 76.00567626953125, p613 * 138.35227966308594);
    v926.bezierCurveTo(p613 * 67.00567626953125, p613 * 114.35227966308594, p613 * 63.00567626953125, p613 * 113.35227966308594, p613 * 59.00567626953125, p613 * 111.35227966308594);
    v926.bezierCurveTo(p613 * 62.00567626953125, p613 * 107.35227966308594, p613 * 64.00567626953125, p613 * 105.35227966308594, p613 * 66.00567626953125, p613 * 104.35227966308594);
    v926.bezierCurveTo(p613 * 63.00567626953125, p613 * 100.35227966308594, p613 * 62.00567626953125, p613 * 100.35227966308594, p613 * 60.00567626953125, p613 * 99.35227966308594);
    v926.closePath();
    f84(v926, p614[0], p614[0], p613 * 2);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 51.00567626953125, p613 * 72.53409576416016);
    v926.bezierCurveTo(p613 * 48.00567626953125, p613 * 56.534095764160156, p613 * 48.00567626953125, p613 * 49.534095764160156, p613 * 54.00567626953125, p613 * 35.534095764160156);
    v926.bezierCurveTo(p613 * 58.00567626953125, p613 * 26.534095764160156, p613 * 65.00567626953125, p613 * 27.534095764160156, p613 * 73.00567626953125, p613 * 40.534095764160156);
    v926.bezierCurveTo(p613 * 81.00567626953125, p613 * 49.534095764160156, p613 * 82.00567626953125, p613 * 50.534095764160156, p613 * 83.00567626953125, p613 * 51.534095764160156);
    v926.bezierCurveTo(p613 * 77.00567626953125, p613 * 71.53409576416016, p613 * 64.00567626953125, p613 * 75.53409576416016, p613 * 51.00567626953125, p613 * 72.53409576416016);
    v926.closePath();
    f84(v926, p614[0], p614[0], p613 * 2);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 105.00567626953125, p613 * 50.53410339355469);
    v926.bezierCurveTo(p613 * 112.00567626953125, p613 * 48.53410339355469, p613 * 125.00567626953125, p613 * 21.534103393554688, p613 * 132.00567626953125, p613 * 33.53410339355469);
    v926.bezierCurveTo(p613 * 138.00567626953125, p613 * 42.53410339355469, p613 * 140.00567626953125, p613 * 64.53410339355469, p613 * 136.00567626953125, p613 * 75.53410339355469);
    v926.closePath();
    f84(v926, p614[0], p614[0], p613 * 2);
    v926.globalAlpha = 1;
    v926.translate(0, p613 * -5);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 33.00567626953125, p613 * 95.44320678710938);
    v926.bezierCurveTo(p613 * 42.00567626953125, p613 * 87.44320678710938, p613 * 48.00567626953125, p613 * 51.443206787109375, p613 * 74.00567626953125, p613 * 47.443206787109375);
    v926.bezierCurveTo(p613 * 100.00567626953125, p613 * 42.443206787109375, p613 * 118.00567626953125, p613 * 49.443206787109375, p613 * 131.00567626953125, p613 * 55.443206787109375);
    v926.bezierCurveTo(p613 * 140.00567626953125, p613 * 70.44320678710938, p613 * 145.00567626953125, p613 * 87.44320678710938, p613 * 152.00567626953125, p613 * 94.44320678710938);
    v926.bezierCurveTo(p613 * 149.00567626953125, p613 * 99.44320678710938, p613 * 147.00567626953125, p613 * 98.44320678710938, p613 * 141.00567626953125, p613 * 101.44320678710938);
    v926.bezierCurveTo(p613 * 147.00567626953125, p613 * 108.44320678710938, p613 * 147.00567626953125, p613 * 111.44320678710938, p613 * 147.00567626953125, p613 * 112.44320678710938);
    v926.bezierCurveTo(p613 * 143.00567626953125, p613 * 112.44320678710938, p613 * 141.00567626953125, p613 * 112.44320678710938, p613 * 137.00567626953125, p613 * 111.44320678710938);
    v926.bezierCurveTo(p613 * 138.00567626953125, p613 * 117.44320678710938, p613 * 138.00567626953125, p613 * 120.44320678710938, p613 * 138.00567626953125, p613 * 124.44320678710938);
    v926.bezierCurveTo(p613 * 125.00567626953125, p613 * 107.44320678710938, p613 * 121.00567626953125, p613 * 124.44320678710938, p613 * 110.00567626953125, p613 * 141.44320678710938);
    v926.bezierCurveTo(p613 * 102.00567626953125, p613 * 158.44320678710938, p613 * 89.00567626953125, p613 * 158.44320678710938, p613 * 80.00567626953125, p613 * 144.44320678710938);
    v926.bezierCurveTo(p613 * 61.00567626953125, p613 * 111.44320678710938, p613 * 56.00567626953125, p613 * 117.44320678710938, p613 * 48.00567626953125, p613 * 120.44320678710938);
    v926.bezierCurveTo(p613 * 46.00567626953125, p613 * 118.44320678710938, p613 * 47.00567626953125, p613 * 112.44320678710938, p613 * 48.00567626953125, p613 * 107.44320678710938);
    v926.bezierCurveTo(p613 * 43.00567626953125, p613 * 111.44320678710938, p613 * 40.00567626953125, p613 * 111.44320678710938, p613 * 37.00567626953125, p613 * 110.44320678710938);
    v926.bezierCurveTo(p613 * 39.50567626953125, p613 * 104.94320678710938, p613 * 39.50567626953125, p613 * 104.94320678710938, p613 * 42.00567626953125, p613 * 99.44320678710938);
    v926.bezierCurveTo(p613 * 33.00567626953125, p613 * 99.44320678710938, p613 * 33.00567626953125, p613 * 98.44320678710938, p613 * 33.00567626953125, p613 * 96.44320678710938);
    v926.closePath();
    f84(v926, p614[1], p614[2], p613 * 3);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 60.00567626953125, p613 * 99.35227966308594);
    v926.bezierCurveTo(p613 * 70.00567626953125, p613 * 82.35227966308594, p613 * 85.00567626953125, p613 * 86.35227966308594, p613 * 87.00567626953125, p613 * 97.35227966308594);
    v926.bezierCurveTo(p613 * 89.00567626953125, p613 * 101.35227966308594, p613 * 88.00567626953125, p613 * 105.35227966308594, p613 * 87.00567626953125, p613 * 110.35227966308594);
    v926.bezierCurveTo(p613 * 89.00567626953125, p613 * 111.35227966308594, p613 * 91.00567626953125, p613 * 112.35227966308594, p613 * 93.00567626953125, p613 * 115.35227966308594);
    v926.bezierCurveTo(p613 * 96.00567626953125, p613 * 111.35227966308594, p613 * 99.00567626953125, p613 * 111.35227966308594, p613 * 100.00567626953125, p613 * 110.35227966308594);
    v926.bezierCurveTo(p613 * 98.00567626953125, p613 * 92.35227966308594, p613 * 103.00567626953125, p613 * 86.35227966308594, p613 * 113.00567626953125, p613 * 89.35227966308594);
    v926.bezierCurveTo(p613 * 122.00567626953125, p613 * 92.35227966308594, p613 * 123.00567626953125, p613 * 94.35227966308594, p613 * 126.00567626953125, p613 * 98.35227966308594);
    v926.bezierCurveTo(p613 * 124.00567626953125, p613 * 102.35227966308594, p613 * 123.00567626953125, p613 * 103.35227966308594, p613 * 121.00567626953125, p613 * 104.35227966308594);
    v926.bezierCurveTo(p613 * 124.00567626953125, p613 * 105.35227966308594, p613 * 126.00567626953125, p613 * 107.35227966308594, p613 * 129.00567626953125, p613 * 111.35227966308594);
    v926.bezierCurveTo(p613 * 115.00567626953125, p613 * 122.35227966308594, p613 * 113.00567626953125, p613 * 145.35227966308594, p613 * 100.00567626953125, p613 * 152.35227966308594);
    v926.bezierCurveTo(p613 * 91.00567626953125, p613 * 158.35227966308594, p613 * 83.00567626953125, p613 * 149.35227966308594, p613 * 76.00567626953125, p613 * 138.35227966308594);
    v926.bezierCurveTo(p613 * 67.00567626953125, p613 * 114.35227966308594, p613 * 63.00567626953125, p613 * 113.35227966308594, p613 * 59.00567626953125, p613 * 111.35227966308594);
    v926.bezierCurveTo(p613 * 62.00567626953125, p613 * 107.35227966308594, p613 * 64.00567626953125, p613 * 105.35227966308594, p613 * 66.00567626953125, p613 * 104.35227966308594);
    v926.bezierCurveTo(p613 * 63.00567626953125, p613 * 100.35227966308594, p613 * 62.00567626953125, p613 * 100.35227966308594, p613 * 60.00567626953125, p613 * 99.35227966308594);
    v926.closePath();
    f84(v926, p614[3]);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 33.00567626953125, p613 * 95.44320678710938);
    v926.bezierCurveTo(p613 * 42.00567626953125, p613 * 87.44320678710938, p613 * 48.00567626953125, p613 * 51.443206787109375, p613 * 74.00567626953125, p613 * 47.443206787109375);
    v926.bezierCurveTo(p613 * 100.00567626953125, p613 * 42.443206787109375, p613 * 118.00567626953125, p613 * 49.443206787109375, p613 * 131.00567626953125, p613 * 55.443206787109375);
    v926.bezierCurveTo(p613 * 140.00567626953125, p613 * 70.44320678710938, p613 * 145.00567626953125, p613 * 87.44320678710938, p613 * 152.00567626953125, p613 * 94.44320678710938);
    v926.bezierCurveTo(p613 * 149.00567626953125, p613 * 99.44320678710938, p613 * 147.00567626953125, p613 * 98.44320678710938, p613 * 141.00567626953125, p613 * 101.44320678710938);
    v926.bezierCurveTo(p613 * 147.00567626953125, p613 * 108.44320678710938, p613 * 147.00567626953125, p613 * 111.44320678710938, p613 * 147.00567626953125, p613 * 112.44320678710938);
    v926.bezierCurveTo(p613 * 143.00567626953125, p613 * 112.44320678710938, p613 * 141.00567626953125, p613 * 112.44320678710938, p613 * 137.00567626953125, p613 * 111.44320678710938);
    v926.bezierCurveTo(p613 * 138.00567626953125, p613 * 117.44320678710938, p613 * 138.00567626953125, p613 * 120.44320678710938, p613 * 138.00567626953125, p613 * 124.44320678710938);
    v926.bezierCurveTo(p613 * 125.00567626953125, p613 * 107.44320678710938, p613 * 121.00567626953125, p613 * 124.44320678710938, p613 * 110.00567626953125, p613 * 141.44320678710938);
    v926.bezierCurveTo(p613 * 102.00567626953125, p613 * 158.44320678710938, p613 * 89.00567626953125, p613 * 158.44320678710938, p613 * 80.00567626953125, p613 * 144.44320678710938);
    v926.bezierCurveTo(p613 * 61.00567626953125, p613 * 111.44320678710938, p613 * 56.00567626953125, p613 * 117.44320678710938, p613 * 48.00567626953125, p613 * 120.44320678710938);
    v926.bezierCurveTo(p613 * 46.00567626953125, p613 * 118.44320678710938, p613 * 47.00567626953125, p613 * 112.44320678710938, p613 * 48.00567626953125, p613 * 107.44320678710938);
    v926.bezierCurveTo(p613 * 43.00567626953125, p613 * 111.44320678710938, p613 * 40.00567626953125, p613 * 111.44320678710938, p613 * 37.00567626953125, p613 * 110.44320678710938);
    v926.bezierCurveTo(p613 * 39.50567626953125, p613 * 104.94320678710938, p613 * 39.50567626953125, p613 * 104.94320678710938, p613 * 42.00567626953125, p613 * 99.44320678710938);
    v926.bezierCurveTo(p613 * 33.00567626953125, p613 * 99.44320678710938, p613 * 33.00567626953125, p613 * 98.44320678710938, p613 * 33.00567626953125, p613 * 96.44320678710938);
    v926.closePath();
    f84(v926, vVUndefined20, p614[2], p613 * 3);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 51.00567626953125, p613 * 72.53409576416016);
    v926.bezierCurveTo(p613 * 48.00567626953125, p613 * 56.534095764160156, p613 * 48.00567626953125, p613 * 49.534095764160156, p613 * 54.00567626953125, p613 * 35.534095764160156);
    v926.bezierCurveTo(p613 * 58.00567626953125, p613 * 26.534095764160156, p613 * 65.00567626953125, p613 * 27.534095764160156, p613 * 73.00567626953125, p613 * 40.534095764160156);
    v926.bezierCurveTo(p613 * 81.00567626953125, p613 * 49.534095764160156, p613 * 82.00567626953125, p613 * 50.534095764160156, p613 * 83.00567626953125, p613 * 51.534095764160156);
    f84(v926, p614[1], p614[2], p613 * 3);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 105.00567626953125, p613 * 50.53410339355469);
    v926.bezierCurveTo(p613 * 112.00567626953125, p613 * 48.53410339355469, p613 * 125.00567626953125, p613 * 21.534103393554688, p613 * 132.00567626953125, p613 * 33.53410339355469);
    v926.bezierCurveTo(p613 * 138.00567626953125, p613 * 42.53410339355469, p613 * 140.00567626953125, p613 * 64.53410339355469, p613 * 136.00567626953125, p613 * 75.53410339355469);
    f84(v926, p614[1], p614[2], p613 * 3);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 57.00567626953125, p613 * 68.53410339355469);
    v926.bezierCurveTo(p613 * 63.00567626953125, p613 * 69.53410339355469, p613 * 69.00567626953125, p613 * 66.53410339355469, p613 * 73.00567626953125, p613 * 60.53410339355469);
    v926.bezierCurveTo(p613 * 66.00567626953125, p613 * 47.53410339355469, p613 * 61.00567626953125, p613 * 42.53410339355469, p613 * 58.00567626953125, p613 * 49.53410339355469);
    v926.bezierCurveTo(p613 * 56.00567626953125, p613 * 59.53410339355469, p613 * 56.00567626953125, p613 * 64.53410339355469, p613 * 57.00567626953125, p613 * 67.53410339355469);
    v926.closePath();
    f84(v926, p614[3]);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 115.00567626953125, p613 * 59.715911865234375);
    v926.bezierCurveTo(p613 * 119.00567626953125, p613 * 48.715911865234375, p613 * 126.00567626953125, p613 * 41.715911865234375, p613 * 129.00567626953125, p613 * 48.715911865234375);
    v926.bezierCurveTo(p613 * 131.00567626953125, p613 * 56.715911865234375, p613 * 133.00567626953125, p613 * 71.71591186523438, p613 * 127.00567626953125, p613 * 68.71591186523438);
    v926.bezierCurveTo(p613 * 120.00567626953125, p613 * 67.71591186523438, p613 * 114.00567626953125, p613 * 59.715911865234375, p613 * 116.00567626953125, p613 * 58.715911865234375);
    v926.closePath();
    f84(v926, p614[3]);
    f89(v926, p613 * 77, p613 * 107, p613 * 6);
    f84(v926, p614[2]);
    f89(v926, p613 * 110, p613 * 107, p613 * 6);
    f84(v926, p614[2]);
    f89(v926, p613 * 75, p613 * 105, p613 * 3);
    f84(v926, p614[4]);
    f89(v926, p613 * 108, p613 * 105, p613 * 3);
    f84(v926, p614[4]);
    v926.beginPath();
    v926.lineCap = "round";
    v926.lineJoin = "round";
    v926.moveTo(p613 * 88.00567626953125, p613 * 141.4431915283203);
    v926.bezierCurveTo(p613 * 93.00567626953125, p613 * 137.4431915283203, p613 * 96.00567626953125, p613 * 138.4431915283203, p613 * 100.00567626953125, p613 * 141.4431915283203);
    v926.bezierCurveTo(p613 * 103.00567626953125, p613 * 143.4431915283203, p613 * 101.00567626953125, p613 * 149.4431915283203, p613 * 95.00567626953125, p613 * 148.4431915283203);
    v926.bezierCurveTo(p613 * 85.00567626953125, p613 * 148.4431915283203, p613 * 86.00567626953125, p613 * 145.4431915283203, p613 * 88.00567626953125, p613 * 142.4431915283203);
    v926.closePath();
    f84(v926, p614[1]);
    return v925;
  }
  const v927 = 3;
  function f109(p615, p616, p617) {
    var v928 = document.createElement("canvas");
    var v929 = v928.getContext("2d");
    v928.width = p615 * 400;
    v928.height = p615 * 400;
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 101, p615 * 255);
    v929.bezierCurveTo(p615 * 113, p615 * 243, p615 * 179, p615 * 210, p615 * 219, p615 * 196);
    v929.bezierCurveTo(p615 * 252, p615 * 203, p615 * 288, p615 * 215, p615 * 318, p615 * 233);
    v929.bezierCurveTo(p615 * 304, p615 * 254, p615 * 258, p615 * 273, p615 * 215, p615 * 296);
    v929.bezierCurveTo(p615 * 161, p615 * 287, p615 * 119, p615 * 270, p615 * 102, p615 * 257);
    v929.closePath();
    f84(v929, p617[0], p617[1], p615 * 14);
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 99, p615 * 258);
    v929.bezierCurveTo(p615 * 99, p615 * 272.5, p615 * 99, p615 * 272.5, p615 * 99, p615 * 287);
    v929.bezierCurveTo(p615 * 166, p615 * 319, p615 * 193, p615 * 320, p615 * 212, p615 * 324);
    v929.bezierCurveTo(p615 * 292, p615 * 286, p615 * 312, p615 * 271, p615 * 319, p615 * 263);
    v929.bezierCurveTo(p615 * 320, p615 * 249, p615 * 320, p615 * 241, p615 * 318, p615 * 234);
    v929.bezierCurveTo(p615 * 300, p615 * 254, p615 * 254, p615 * 277, p615 * 216, p615 * 294);
    v929.bezierCurveTo(p615 * 190, p615 * 296, p615 * 135, p615 * 276, p615 * 102, p615 * 258);
    v929.closePath();
    f84(v929, p617[2], p617[1], p615 * 14);
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 212, p615 * 323);
    v929.bezierCurveTo(p615 * 211.5, p615 * 310.5, p615 * 211.5, p615 * 310.5, p615 * 211, p615 * 298);
    v929.closePath();
    f84(v929, vVVUndefined212, p617[1], p615 * 14);
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 212, p615 * 210);
    v929.bezierCurveTo(p615 * 286, p615 * 210, p615 * 331, p615 * 254, p615 * 212, p615 * 276);
    v929.bezierCurveTo(p615 * 108, p615 * 276, p615 * 112, p615 * 222, p615 * 213, p615 * 208);
    v929.closePath();
    f84(v929, p617[3], p617[4], p615 * 14);
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 98, p615 * 200);
    v929.bezierCurveTo(p615 * 126, p615 * 216, p615 * 177, p615 * 232, p615 * 213, p615 * 237);
    v929.bezierCurveTo(p615 * 266, p615 * 218, p615 * 288, p615 * 209, p615 * 318, p615 * 190);
    v929.bezierCurveTo(p615 * 269, p615 * 164, p615 * 239, p615 * 158, p615 * 214, p615 * 153);
    v929.bezierCurveTo(p615 * 148, p615 * 172, p615 * 131, p615 * 182, p615 * 98, p615 * 200);
    v929.closePath();
    f84(v929, p617[0], p617[1], p615 * 14);
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 97, p615 * 204);
    v929.bezierCurveTo(p615 * 97, p615 * 215.5, p615 * 97, p615 * 215.5, p615 * 97, p615 * 227);
    v929.bezierCurveTo(p615 * 148, p615 * 250, p615 * 179, p615 * 256, p615 * 212, p615 * 262);
    v929.bezierCurveTo(p615 * 268, p615 * 244, p615 * 281, p615 * 233, p615 * 318, p615 * 214);
    v929.bezierCurveTo(p615 * 318, p615 * 203, p615 * 318, p615 * 203, p615 * 318, p615 * 192);
    v929.bezierCurveTo(p615 * 250, p615 * 225, p615 * 236, p615 * 231, p615 * 214, p615 * 239);
    v929.bezierCurveTo(p615 * 158, p615 * 228, p615 * 126, p615 * 215, p615 * 99, p615 * 201);
    v929.closePath();
    f84(v929, p617[2], p617[1], p615 * 14);
    v929.beginPath();
    v929.lineCap = "round";
    v929.lineJoin = "round";
    v929.moveTo(p615 * 212, p615 * 260);
    v929.bezierCurveTo(p615 * 212, p615 * 251.5, p615 * 212, p615 * 251.5, p615 * 212, p615 * 243);
    v929.closePath();
    f84(v929, undefined, p617[1], p615 * 14);
    f89(v929, p615 * 161, p615 * 201, p615 * 13);
    f84(v929, p617[5]);
    f89(v929, p615 * 216, p615 * 205, p615 * 8.06225774829855);
    f84(v929, p617[5]);
    f89(v929, p615 * 216, p615 * 175, p615 * 6.708203932499369);
    f84(v929, p617[5]);
    f89(v929, p615 * 271, p615 * 191, p615 * 5.0990195135927845);
    f84(v929, p617[5]);
    f89(v929, p615 * 206, p615 * 180, p615 * 11.180339887498949);
    f84(v929, p617[5]);
    return v928;
  }
  function f110(p618, p619) {
    var v930 = document.createElement("canvas");
    var v931 = v930.getContext("2d");
    v930.width = p618 * 238;
    v930.height = p618 * 230;
    v931.translate(p618 * -93, p618 * -110 + p618 * 5);
    v931.globalAlpha = 0.3;
    f89(v931, p618 * 213.5, p618 * 256.75, p618 * 75);
    f84(v931, p619[5]);
    f89(v931, p618 * 213.5, p618 * 175.75, p618 * 25);
    f84(v931, p619[5]);
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 156.5, p618 * 137.75);
    v931.bezierCurveTo(p618 * 170.5, p618 * 173.75, p618 * 195.5, p618 * 177.75, p618 * 209.5, p618 * 177.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 217.5, p618 * 178.75);
    v931.bezierCurveTo(p618 * 251.5, p618 * 177.75, p618 * 263.5, p618 * 153.75, p618 * 270.5, p618 * 140.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 130.5, p618 * 124.75);
    v931.bezierCurveTo(p618 * 153.5, p618 * 185.75, p618 * 198.5, p618 * 185.75, p618 * 213.5, p618 * 185.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 214.5, p618 * 183.75);
    v931.bezierCurveTo(p618 * 265.5, p618 * 192.75, p618 * 293.5, p618 * 141.75, p618 * 297.5, p618 * 124.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 107.5, p618 * 213.75);
    v931.bezierCurveTo(p618 * 151.5, p618 * 190.75, p618 * 198.5, p618 * 184.75, p618 * 210.5, p618 * 184.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 212.5, p618 * 187.75);
    v931.bezierCurveTo(p618 * 258.5, p618 * 182.75, p618 * 286.5, p618 * 194.75, p618 * 314.5, p618 * 206.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 102.5, p618 * 258.75);
    v931.bezierCurveTo(p618 * 142.5, p618 * 200.75, p618 * 193.5, p618 * 194.75, p618 * 211.5, p618 * 185.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 214.5, p618 * 192.75);
    v931.bezierCurveTo(p618 * 276.5, p618 * 194.75, p618 * 306.5, p618 * 233.75, p618 * 316.5, p618 * 246.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[5];
    v931.stroke();
    v931.translate(0, -5);
    v931.globalAlpha = 1;
    f89(v931, p618 * 213.5, p618 * 256.75, p618 * 75);
    f84(v931, p619[3]);
    f89(v931, p618 * 213.5, p618 * 175.75, p618 * 25);
    f84(v931, p619[3]);
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 219.5, p618 * 158.75);
    v931.bezierCurveTo(p618 * 226.5, p618 * 159.75, p618 * 227.5, p618 * 147.75, p618 * 219.5, p618 * 145.75);
    v931.closePath();
    v931.lineWidth = p618 * 10;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 210.5, p618 * 160.75);
    v931.bezierCurveTo(p618 * 203.5, p618 * 159.75, p618 * 199.5, p618 * 146.75, p618 * 210.5, p618 * 145.75);
    v931.closePath();
    v931.lineWidth = p618 * 10;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 219.5, p618 * 158.75);
    v931.bezierCurveTo(p618 * 226.5, p618 * 159.75, p618 * 227.5, p618 * 147.75, p618 * 219.5, p618 * 145.75);
    v931.closePath();
    v931.fillStyle = p619[0];
    v931.fill();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 210.5, p618 * 160.75);
    v931.bezierCurveTo(p618 * 203.5, p618 * 159.75, p618 * 199.5, p618 * 146.75, p618 * 210.5, p618 * 145.75);
    v931.closePath();
    v931.fillStyle = p619[0];
    v931.fill();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 156.5, p618 * 137.75);
    v931.bezierCurveTo(p618 * 170.5, p618 * 173.75, p618 * 195.5, p618 * 177.75, p618 * 209.5, p618 * 177.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 217.5, p618 * 178.75);
    v931.bezierCurveTo(p618 * 251.5, p618 * 177.75, p618 * 263.5, p618 * 153.75, p618 * 270.5, p618 * 140.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 130.5, p618 * 124.75);
    v931.bezierCurveTo(p618 * 153.5, p618 * 185.75, p618 * 198.5, p618 * 185.75, p618 * 213.5, p618 * 185.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 214.5, p618 * 183.75);
    v931.bezierCurveTo(p618 * 265.5, p618 * 192.75, p618 * 293.5, p618 * 141.75, p618 * 297.5, p618 * 124.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 107.5, p618 * 213.75);
    v931.bezierCurveTo(p618 * 151.5, p618 * 190.75, p618 * 198.5, p618 * 184.75, p618 * 210.5, p618 * 184.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 212.5, p618 * 187.75);
    v931.bezierCurveTo(p618 * 258.5, p618 * 182.75, p618 * 286.5, p618 * 194.75, p618 * 314.5, p618 * 206.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 102.5, p618 * 258.75);
    v931.bezierCurveTo(p618 * 142.5, p618 * 200.75, p618 * 193.5, p618 * 194.75, p618 * 211.5, p618 * 185.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 214.5, p618 * 192.75);
    v931.bezierCurveTo(p618 * 276.5, p618 * 194.75, p618 * 306.5, p618 * 233.75, p618 * 316.5, p618 * 246.75);
    v931.lineWidth = p618 * 17;
    v931.strokeStyle = p619[3];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 156.5, p618 * 137.75);
    v931.bezierCurveTo(p618 * 170.5, p618 * 173.75, p618 * 195.5, p618 * 177.75, p618 * 209.5, p618 * 177.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 217.5, p618 * 178.75);
    v931.bezierCurveTo(p618 * 251.5, p618 * 177.75, p618 * 263.5, p618 * 153.75, p618 * 270.5, p618 * 140.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 130.5, p618 * 124.75);
    v931.bezierCurveTo(p618 * 153.5, p618 * 185.75, p618 * 198.5, p618 * 185.75, p618 * 213.5, p618 * 185.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 214.5, p618 * 183.75);
    v931.bezierCurveTo(p618 * 265.5, p618 * 192.75, p618 * 293.5, p618 * 141.75, p618 * 297.5, p618 * 124.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 107.5, p618 * 213.75);
    v931.bezierCurveTo(p618 * 151.5, p618 * 190.75, p618 * 198.5, p618 * 184.75, p618 * 210.5, p618 * 184.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 212.5, p618 * 187.75);
    v931.bezierCurveTo(p618 * 258.5, p618 * 182.75, p618 * 286.5, p618 * 194.75, p618 * 314.5, p618 * 206.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 102.5, p618 * 258.75);
    v931.bezierCurveTo(p618 * 142.5, p618 * 200.75, p618 * 193.5, p618 * 194.75, p618 * 211.5, p618 * 185.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    v931.beginPath();
    v931.lineCap = "round";
    v931.lineJoin = "round";
    v931.moveTo(p618 * 214.5, p618 * 192.75);
    v931.bezierCurveTo(p618 * 276.5, p618 * 194.75, p618 * 306.5, p618 * 233.75, p618 * 316.5, p618 * 246.75);
    v931.lineWidth = p618 * 8;
    v931.strokeStyle = p619[0];
    v931.stroke();
    f89(v931, p618 * 213.5, p618 * 256.75, p618 * 70);
    f84(v931, p619[0]);
    f89(v931, p618 * 213.5, p618 * 175.75, p618 * 20);
    f84(v931, p619[0]);
    f89(v931, p618 * 222, p618 * 166, p618 * 5);
    v931.fillStyle = p619[2];
    v931.fill();
    f89(v931, p618 * 205, p618 * 166, p618 * 5);
    v931.fillStyle = p619[2];
    v931.fill();
    f89(v931, p618 * 206.2, p618 * 167, p618 * 2.5);
    v931.fillStyle = p619[4];
    v931.fill();
    f89(v931, p618 * 223.2, p618 * 167, p618 * 2.5);
    v931.fillStyle = p619[4];
    v931.fill();
    v931.save();
    v931.translate(p618 * 213.5, p618 * 293.75);
    v931.rotate(0.76);
    f83(v931, p618 * -22, p618 * -21, p618 * 44, p618 * 42, p618 * 6);
    v931.restore();
    v931.fillStyle = p619[1];
    v931.fill();
    v931.save();
    v931.translate(p618 * 212.5, p618 * 258.25);
    v931.rotate(0.8);
    f83(v931, p618 * -15, p618 * -14.5, p618 * 30, p618 * 29, p618 * 6);
    v931.restore();
    v931.fillStyle = p619[1];
    v931.fill();
    return v930;
  }
  function f111(p620, p621, p622) {
    var v932 = document.createElement("canvas");
    var v933 = v932.getContext("2d");
    var v934 = p620 * 55;
    var v935 = p620 * 55;
    var v936 = p620 * 8;
    v932.width = v934;
    v932.height = v935;
    v933.translate(p620 * -65, p620 * -55 + v936);
    v933.globalAlpha = 1;
    v933.beginPath();
    v933.moveTo(p620 * 95, p620 * 60);
    v933.bezierCurveTo(p620 * 107, p620 * 62, p620 * 110, p620 * 73, p620 * 107, p620 * 79);
    v933.bezierCurveTo(p620 * 104, p620 * 85, p620 * 85, p620 * 93, p620 * 81, p620 * 88);
    v933.bezierCurveTo(p620 * 74, p620 * 80, p620 * 85, p620 * 60, p620 * 95, p620 * 60);
    v933.closePath();
    f84(v933, p622[0], p622[1], 3);
    v933.globalAlpha = 1;
    v933.beginPath();
    v933.moveTo(p620 * 91, p620 * 70);
    v933.bezierCurveTo(p620 * 91, p620 * 75, p620 * 100, p620 * 76, p620 * 100, p620 * 73);
    v933.bezierCurveTo(p620 * 100, p620 * 69, p620 * 89, p620 * 65, p620 * 91, p620 * 70);
    v933.closePath();
    f84(v933, p622[2], p622[3], 3);
    return v932;
  }
  function f112(p623, p624, p625) {
    var v937 = document.createElement("canvas");
    var v938 = v937.getContext("2d");
    v937.width = p623 * 400;
    v937.height = p623 * 400;
    v938.save();
    v938.translate(p623 * 202.5, p623 * 147.5);
    f83(v938, p623 * -96.5, p623 * -21.5, p623 * 193, p623 * 193, p623 * 0);
    v938.restore();
    f84(v938, p624[0], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 202.5, p623 * 190.5);
    f83(v938, p623 * 96.5, p623 * -21.5, p623 * -193, p623 * 43, p623 * 0);
    v938.restore();
    f84(v938, p624[2], p624[1], p623 * 12);
    v938.save();
    v938.save();
    v938.translate(p623 * 202.5, p623 * 233.5);
    f83(v938, p623 * -96.5, p623 * -20.5, p623 * 193, p623 * 41, p623 * 0);
    v938.restore();
    f84(v938, p624[3], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 202.5, p623 * 275);
    f83(v938, p623 * 96.5, p623 * -21, p623 * -193, p623 * 42, p623 * 0);
    v938.restore();
    f84(v938, p624[0], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 201, p623 * 212);
    v938.rotate(8.64);
    f83(v938, p623 * -116, p623 * -22, p623 * 232, p623 * 44, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 203.5, p623 * 121.5);
    f83(v938, p623 * -115.5, p623 * -20.5, p623 * 231, p623 * 41, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 203.5, p623 * 299);
    f83(v938, p623 * -115.5, p623 * -20, p623 * 231, p623 * 40, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 298.5, p623 * 210);
    f83(v938, p623 * -20.5, p623 * -109, p623 * 41, p623 * 218, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 108.5, p623 * 210);
    f83(v938, p623 * -20.5, p623 * -109, p623 * 41, p623 * 218, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[1], p623 * 12);
    v938.save();
    v938.translate(p623 * 204, p623 * 121.5);
    f83(v938, p623 * -92, p623 * -9.5, p623 * 184, p623 * 19, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[3], p623 * 10);
    v938.save();
    v938.translate(p623 * 197, p623 * 299);
    f83(v938, p623 * 85, p623 * -9, p623 * -170, p623 * 18, p623 * 10);
    v938.restore();
    f84(v938, p624[3], p624[3], p623 * 10);
    v938.beginPath();
    v938.lineCap = "round";
    v938.lineJoin = "round";
    v938.moveTo(p623 * 94, p623 * 317);
    v938.bezierCurveTo(p623 * 110.5, p623 * 299.5, p623 * 110.5, p623 * 299.5, p623 * 127, p623 * 282);
    v938.closePath();
    f84(v938, vVVUndefined212, p624[1], p623 * 12);
    v938.beginPath();
    v938.lineCap = "round";
    v938.lineJoin = "round";
    v938.moveTo(p623 * 279, p623 * 142);
    v938.bezierCurveTo(p623 * 296.5, p623 * 125.5, p623 * 296.5, p623 * 125.5, p623 * 314, p623 * 109);
    v938.closePath();
    f84(v938, vVVVUndefined21, p624[1], p623 * 12);
    v938.beginPath();
    v938.lineCap = "round";
    v938.lineJoin = "round";
    v938.moveTo(p623 * 93, p623 * 106);
    v938.bezierCurveTo(p623 * 110.5, p623 * 124, p623 * 110.5, p623 * 124, p623 * 128, p623 * 142);
    v938.closePath();
    f84(v938, undefined, p624[1], p623 * 12);
    v938.beginPath();
    v938.lineCap = "round";
    v938.lineJoin = "round";
    v938.moveTo(p623 * 281, p623 * 282);
    v938.bezierCurveTo(p623 * 296, p623 * 297.5, p623 * 296, p623 * 297.5, p623 * 311, p623 * 313);
    v938.closePath();
    f84(v938, vVUndefined19, p624[1], p623 * 12);
    if (p625 == 0) {
      v938.scale(2, 2);
      v938.translate(p623 * -7, p623 * 55);
      v938.rotate(-0.5);
      v938.beginPath();
      v938.lineCap = "round";
      v938.lineJoin = "round";
      v938.moveTo(p623 * 60, p623 * 47);
      v938.bezierCurveTo(p623 * 81, p623 * 46, p623 * 85, p623 * 47, p623 * 83, p623 * 63);
      v938.bezierCurveTo(p623 * 83, p623 * 72, p623 * 83, p623 * 75, p623 * 72, p623 * 73);
      v938.bezierCurveTo(p623 * 68, p623 * 80, p623 * 69, p623 * 82, p623 * 66, p623 * 73);
      v938.bezierCurveTo(p623 * 62, p623 * 81, p623 * 61, p623 * 82, p623 * 59, p623 * 73);
      v938.bezierCurveTo(p623 * 54, p623 * 81, p623 * 55, p623 * 81, p623 * 52, p623 * 74);
      v938.bezierCurveTo(p623 * 38, p623 * 76, p623 * 41, p623 * 74, p623 * 40, p623 * 66);
      v938.bezierCurveTo(p623 * 38, p623 * 45, p623 * 39, p623 * 49, p623 * 59, p623 * 47);
      v938.closePath();
      f84(v938, p624[4], p624[4], p623 * 5);
      v938.beginPath();
      v938.lineCap = "round";
      v938.lineJoin = "round";
      v938.moveTo(p623 * 68, p623 * 54);
      v938.bezierCurveTo(p623 * 75, p623 * 54, p623 * 77, p623 * 62, p623 * 71, p623 * 64);
      v938.bezierCurveTo(p623 * 62, p623 * 65, p623 * 63, p623 * 54, p623 * 68, p623 * 54);
      v938.closePath();
      f84(v938, p624[3]);
      v938.beginPath();
      v938.lineCap = "round";
      v938.lineJoin = "round";
      v938.moveTo(p623 * 50, p623 * 55);
      v938.bezierCurveTo(p623 * 57, p623 * 55, p623 * 58, p623 * 65, p623 * 52, p623 * 65);
      v938.bezierCurveTo(p623 * 44, p623 * 66, p623 * 44, p623 * 54, p623 * 50, p623 * 55);
      v938.closePath();
      f84(v938, p624[3]);
    } else if (p625 == 1) {
      v938.scale(0.6, 0.6);
      v938.translate(p623 * 185, p623 * 165);
      v938.beginPath();
      v938.lineCap = "round";
      v938.lineJoin = "round";
      v938.moveTo(p623 * 108, p623 * 56);
      v938.bezierCurveTo(p623 * 136, p623 * 58, p623 * 203, p623 * 69, p623 * 234, p623 * 75);
      v938.bezierCurveTo(p623 * 246, p623 * 77, p623 * 247, p623 * 78, p623 * 245, p623 * 90);
      v938.bezierCurveTo(p623 * 238, p623 * 143, p623 * 228, p623 * 197, p623 * 214, p623 * 259);
      v938.bezierCurveTo(p623 * 212, p623 * 267, p623 * 209, p623 * 270, p623 * 189, p623 * 268);
      v938.bezierCurveTo(p623 * 142, p623 * 264, p623 * 106, p623 * 260, p623 * 75, p623 * 253);
      v938.bezierCurveTo(p623 * 60, p623 * 250, p623 * 64, p623 * 250, p623 * 66, p623 * 221);
      v938.bezierCurveTo(p623 * 71, p623 * 168, p623 * 87, p623 * 95, p623 * 98, p623 * 67);
      v938.bezierCurveTo(p623 * 101, p623 * 57, p623 * 103, p623 * 56, p623 * 106, p623 * 56);
      v938.closePath();
      f84(v938, p624[4], p624[4], p623 * 20);
      v938.beginPath();
      v938.lineCap = "round";
      v938.lineJoin = "round";
      v938.moveTo(p623 * 112, p623 * 72);
      v938.bezierCurveTo(p623 * 132, p623 * 73, p623 * 227, p623 * 85, p623 * 226, p623 * 91);
      v938.bezierCurveTo(p623 * 231, p623 * 89, p623 * 217, p623 * 196, p623 * 200, p623 * 250);
      v938.bezierCurveTo(p623 * 196, p623 * 254, p623 * 175, p623 * 249, p623 * 166, p623 * 249);
      v938.bezierCurveTo(p623 * 91, p623 * 241, p623 * 82, p623 * 236, p623 * 83, p623 * 232);
      v938.bezierCurveTo(p623 * 90, p623 * 144, p623 * 108, p623 * 71, p623 * 111, p623 * 72);
      v938.closePath();
      f84(v938, undefined, p624[0], p623 * 13);
      v938.beginPath();
      v938.lineCap = "round";
      v938.lineJoin = "round";
      v938.moveTo(p623 * 132, p623 * 117);
      v938.bezierCurveTo(p623 * 171, p623 * 86, p623 * 191, p623 * 101, p623 * 188, p623 * 134);
      v938.bezierCurveTo(p623 * 185, p623 * 154, p623 * 170, p623 * 158, p623 * 153, p623 * 158);
      v938.bezierCurveTo(p623 * 143, p623 * 172, p623 * 146, p623 * 180, p623 * 147, p623 * 193);
      f84(v938, vVUndefined22, p624[0], p623 * 20);
      f89(v938, p623 * 142, p623 * 221, p623 * 16.1245154965971);
      f84(v938, p624[0]);
    }
    return v937;
  }
  function f113(p626, p627, p628) {
    var v939 = document.createElement("canvas");
    var v940 = v939.getContext("2d");
    v939.width = p626 * 400;
    v939.height = p626 * 400;
    v940.save();
    v940.translate(p626 * 85, p626 * 237);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 54.585977194239184, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 178, p626 * 238);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 52.53573932334064, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 270, p626 * 239);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 53.58058329516393, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 222, p626 * 312);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 52.53573932334064, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 317, p626 * 159);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 57.63465889766331, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 223.5, p626 * 139.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 51.66236541235796, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 132.5, p626 * 137.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 52.009614495783374, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 178.5, p626 * 58.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 53.16013544000805, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 177.5, p626 * 216.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 50, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 84.5, p626 * 215.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 54, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 319.5, p626 * 138.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 55.08175741568164, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 269.5, p626 * 216.0625);
    v940.rotate(1.5707963267948966);
    f87(v940, 6, p626 * 54.589376255824725, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 221.5, p626 * 293.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 49.49747468305833, p626 * 1);
    v940.restore();
    f84(v940, p628[1], p628[2], p626 * 12);
    v940.beginPath();
    v940.lineCap = "round";
    v940.lineJoin = "round";
    v940.moveTo(p626 * 221.5, p626 * 342.0625);
    v940.bezierCurveTo(p626 * 221.5, p626 * 350.5625, p626 * 221.5, p626 * 350.5625, p626 * 221.5, p626 * 359.0625);
    v940.closePath();
    f84(v940, undefined, p628[2], p626 * 12);
    v940.beginPath();
    v940.lineCap = "round";
    v940.lineJoin = "round";
    v940.moveTo(p626 * 84.5, p626 * 270.0625);
    v940.bezierCurveTo(p626 * 84.5, p626 * 277.0625, p626 * 84.5, p626 * 277.0625, p626 * 84.5, p626 * 284.0625);
    v940.closePath();
    f84(v940, undefined, p628[2], p626 * 12);
    v940.save();
    v940.translate(p626 * 84.5, p626 * 215.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 177.5, p626 * 215.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 222.5, p626 * 294.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 270.5, p626 * 216.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 320.5, p626 * 134.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 224.5, p626 * 138.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 133.5, p626 * 137.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    v940.save();
    v940.translate(p626 * 178.5, p626 * 56.0625);
    v940.rotate(0.5235987755982988);
    f87(v940, 6, p626 * 30, p626 * 15);
    v940.restore();
    f84(v940, p628[3]);
    return v939;
  }
  function f114(p629, p630, p631) {
    var v941 = document.createElement("canvas");
    var v942 = v941.getContext("2d");
    v941.width = p629 * 170;
    v941.height = p629 * 173;
    v942.globalAlpha = p630 ? 0.5 : 1;
    v942.translate(p629 * 5, p629 * 5);
    v942.save();
    v942.translate(p629 * 86.25, p629 * 84.953125);
    f87(v942, 7, p629 * 9.848857801796104, p629 * 5);
    v942.restore();
    f84(v942, p631[0]);
    v942.globalAlpha = 1;
    v942.translate(p629 * -5, p629 * -5);
    v942.save();
    v942.translate(p629 * 86.25, p629 * 84.953125);
    f87(v942, 7, p629 * 9.848857801796104, p629 * 5);
    v942.restore();
    f84(v942, p631[8], p631[9], p629 * 4);
    return v941;
  }
  function f115(p632, p633, p634) {
    var v943 = document.createElement("canvas");
    var v944 = v943.getContext("2d");
    v943.width = p632 * 170;
    v943.height = p632 * 173;
    v944.translate(p632 * 5, p632 * 5);
    v944.globalAlpha = p633 ? 0.5 : 1;
    v944.save();
    v944.translate(p632 * 86.25, p632 * 84.953125);
    v944.rotate(0.32);
    f87(v944, 7, p632 * 42.15447781671598, p632 * 10);
    v944.restore();
    f84(v944, p634[0]);
    v944.globalAlpha = 1;
    v944.translate(p632 * -5, p632 * -5);
    v944.save();
    v944.translate(p632 * 86.25, p632 * 84.953125);
    v944.rotate(0.32);
    f87(v944, 7, p632 * 42.15447781671598, p632 * 10);
    v944.restore();
    f84(v944, p634[1], p634[2], p632 * 4);
    v944.globalAlpha = p633 ? 0.5 : 1;
    v944.translate(p632 * 5, p632 * 5);
    v944.save();
    v944.translate(p632 * 86.25, p632 * 84.953125);
    v944.rotate(0.28);
    f87(v944, 7, p632 * 30.463092423455635, p632 * 10);
    v944.restore();
    f84(v944, p634[0]);
    v944.globalAlpha = 1;
    v944.translate(p632 * -5, p632 * -5);
    v944.save();
    v944.translate(p632 * 86.25, p632 * 84.953125);
    v944.rotate(0.28);
    f87(v944, 7, p632 * 30.463092423455635, p632 * 10);
    v944.restore();
    f84(v944, p634[3], p634[4], p632 * 4);
    v944.globalAlpha = p633 ? 0.5 : 1;
    v944.translate(p632 * 5, p632 * 5);
    f89(v944, p632 * 86.25, p632 * 84.953125, p632 * 18.867962264113206);
    f84(v944, p634[0]);
    v944.globalAlpha = 1;
    v944.translate(p632 * -5, p632 * -5);
    f89(v944, p632 * 86.25, p632 * 84.953125, p632 * 18.867962264113206);
    f84(v944, p634[5], p634[6], p632 * 4);
    return v943;
  }
  function f116(p635, p636, p637) {
    var v945 = document.createElement("canvas");
    var v946 = v945.getContext("2d");
    var v947 = p635 * 75;
    var v948 = p635 * 55;
    v945.width = v947;
    v945.height = v948;
    v946.translate(p635 * -30, p635 * -40);
    v946.globalAlpha = 1;
    v946.beginPath();
    v946.bezierCurveTo(p635 * 67, p635 * 56, p635 * 72, p635 * 71, p635 * 72, p635 * 71);
    v946.bezierCurveTo(p635 * 72, p635 * 71, p635 * 84, p635 * 70, p635 * 75, p635 * 82);
    v946.bezierCurveTo(p635 * 70, p635 * 88, p635 * 61, p635 * 89, p635 * 58, p635 * 89);
    v946.bezierCurveTo(p635 * 55, p635 * 89, p635 * 40, p635 * 89, p635 * 46, p635 * 77);
    v946.bezierCurveTo(p635 * 46, p635 * 77, p635 * 43, p635 * 63, p635 * 43, p635 * 63);
    v946.bezierCurveTo(p635 * 35, p635 * 61, p635 * 35, p635 * 53, p635 * 42, p635 * 47);
    v946.bezierCurveTo(p635 * 48, p635 * 42, p635 * 62, p635 * 41, p635 * 66, p635 * 43);
    v946.bezierCurveTo(p635 * 70, p635 * 45, p635 * 72, p635 * 48, p635 * 67, p635 * 56);
    v946.closePath();
    f84(v946, p637[0]);
    v946.beginPath();
    v946.bezierCurveTo(p635 * 68, p635 * 61, p635 * 72, p635 * 76, p635 * 72, p635 * 76);
    v946.bezierCurveTo(p635 * 65, p635 * 85, p635 * 61, p635 * 85, p635 * 49, p635 * 83);
    v946.bezierCurveTo(p635 * 49, p635 * 83, p635 * 44, p635 * 63, p635 * 44, p635 * 63);
    v946.bezierCurveTo(p635 * 54, p635 * 63, p635 * 60, p635 * 63, p635 * 67, p635 * 55);
    v946.closePath();
    f84(v946, p637[1]);
    v946.beginPath();
    v946.moveTo(p635 * 69, p635 * 65);
    v946.bezierCurveTo(p635 * 70, p635 * 61, p635 * 81, p635 * 66, p635 * 86, p635 * 66);
    v946.bezierCurveTo(p635 * 90, p635 * 66, p635 * 97, p635 * 63, p635 * 97, p635 * 56);
    v946.bezierCurveTo(p635 * 97, p635 * 50, p635 * 93, p635 * 47, p635 * 88, p635 * 44);
    f84(v946, false, p637[1], 2);
    v946.beginPath();
    v946.moveTo(p635 * 50, p635 * 48);
    v946.bezierCurveTo(p635 * 43, p635 * 52, p635 * 50, p635 * 54, p635 * 51, p635 * 54);
    v946.bezierCurveTo(p635 * 54, p635 * 54, p635 * 59, p635 * 52, p635 * 59, p635 * 49);
    v946.bezierCurveTo(p635 * 59, p635 * 48, p635 * 55, p635 * 46, p635 * 50, p635 * 48);
    f84(v946, p637[2]);
    return v945;
  }
  function f117(p638, p639, p640) {
    var v949 = document.createElement("canvas");
    var v950 = v949.getContext("2d");
    var v951 = p638 * 195;
    var v952 = p638 * 190;
    var v953 = v951 / 2;
    var v954 = v952 / 2;
    v949.width = v951;
    v949.height = v952;
    var v955 = p638 * 10;
    var v956 = p638 * 35;
    var v957 = p638 * 150;
    var v958 = v956 / 2;
    var v959 = v957 / 2;
    var v960 = p638 * 4;
    v950.translate(v953 - p638 * 5, v954 - p638 * 5);
    v950.rotate(-Math.PI / 1.25);
    v950.globalAlpha = 1;
    f83(v950, -v958, -v959, v956, v957, v955);
    f84(v950, p640[0], p640[1], v960);
    v950.translate(0, 0);
    v950.rotate(Math.PI / 3);
    v950.globalAlpha = 1;
    f83(v950, -v958, -v959, v956, v957, v955);
    f84(v950, p640[0], p640[1], v960);
    v950.translate(0, 5);
    f83(v950, -v958 / 2, -v959 / 2, v956 / 2, v957 / 3, v955 - 2);
    f84(v950, p640[1]);
    return v949;
  }
  function f118(p641, p642, p643) {
    var v961 = document.createElement("canvas");
    var v962 = v961.getContext("2d");
    v961.width = p641 * 52;
    v961.height = p641 * 65;
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 9.833328247070312, p641 * 12.078125);
    v962.bezierCurveTo(p641 * 15.333328247070312, p641 * 28.078125, p641 * 15.333328247070312, p641 * 28.078125, p641 * 20.833328247070312, p641 * 44.078125);
    v962.closePath();
    f84(v962, vVVVVUndefined117, p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 7.8333282470703125, p641 * 20.078125);
    v962.bezierCurveTo(p641 * 16.833328247070312, p641 * 32.578125, p641 * 16.833328247070312, p641 * 32.578125, p641 * 25.833328247070312, p641 * 45.078125);
    v962.closePath();
    f84(v962, vVVUndefined202, p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 23.833328247070312, p641 * 26.078125);
    v962.bezierCurveTo(p641 * 25.833328247070312, p641 * 11.078125, p641 * 16.833328247070312, p641 * 8.078125, p641 * 14.833328247070312, p641 * 7.078125);
    v962.bezierCurveTo(p641 * 11.833328247070312, p641 * 17.078125, p641 * 13.833328247070312, p641 * 22.078125, p641 * 23.833328247070312, p641 * 27.078125);
    v962.closePath();
    f84(v962, p643[0], p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 35.83332824707031, p641 * 8.078125);
    v962.bezierCurveTo(p641 * 34.83332824707031, p641 * 27.078125, p641 * 28.833328247070312, p641 * 27.078125, p641 * 23.833328247070312, p641 * 28.078125);
    v962.bezierCurveTo(p641 * 21.833328247070312, p641 * 14.078125, p641 * 26.833328247070312, p641 * 11.078125, p641 * 35.83332824707031, p641 * 8.078125);
    v962.closePath();
    f84(v962, p643[0], p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 25.833328247070312, p641 * 39.078125);
    v962.bezierCurveTo(p641 * 20.833328247070312, p641 * 29.078125, p641 * 14.833328247070312, p641 * 27.078125, p641 * 5.8333282470703125, p641 * 29.078125);
    v962.bezierCurveTo(p641 * 9.833328247070312, p641 * 39.078125, p641 * 16.833328247070312, p641 * 42.078125, p641 * 25.833328247070312, p641 * 40.078125);
    v962.closePath();
    f84(v962, p643[0], p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 42.83332824707031, p641 * 23.078125);
    v962.bezierCurveTo(p641 * 35.83332824707031, p641 * 35.078125, p641 * 31.833328247070312, p641 * 37.078125, p641 * 25.833328247070312, p641 * 36.078125);
    v962.bezierCurveTo(p641 * 25.833328247070312, p641 * 24.078125, p641 * 33.83332824707031, p641 * 21.078125, p641 * 42.83332824707031, p641 * 23.078125);
    v962.closePath();
    f84(v962, p643[0], p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 23.833328247070312, p641 * 24.078125);
    v962.bezierCurveTo(p641 * 20.833328247070312, p641 * 34.078125, p641 * 23.833328247070312, p641 * 40.078125, p641 * 27.833328247070312, p641 * 43.078125);
    v962.bezierCurveTo(p641 * 37.33332824707031, p641 * 28.078125, p641 * 37.33332824707031, p641 * 28.078125, p641 * 46.83332824707031, p641 * 13.078125);
    f84(v962, vVVVUndefined117, p643[1], p641 * 2);
    v962.beginPath();
    v962.lineCap = "round";
    v962.lineJoin = "round";
    v962.moveTo(p641 * 38.83332824707031, p641 * 14.078125);
    v962.bezierCurveTo(p641 * 34.83332824707031, p641 * 24.078125, p641 * 34.83332824707031, p641 * 24.078125, p641 * 30.833328247070312, p641 * 34.078125);
    f84(v962, undefined, p643[1], p641 * 2);
    return v961;
  }
  function f119(p644, p645, p646) {
    var v963 = document.createElement("canvas");
    var v964 = v963.getContext("2d");
    v963.width = p644 * 170;
    v963.height = p644 * 173;
    v964.globalAlpha = p645 ? 0.5 : 1;
    v964.translate(p644 * 5, p644 * 5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 85.25, p644 * 82.953125);
    v964.bezierCurveTo(p644 * 98.25, p644 * 46.453125, p644 * 98.25, p644 * 46.453125, p644 * 111.25, p644 * 9.953125);
    v964.closePath();
    f84(v964, vUndefined, p646[0], p644 * 4);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 111.25, p644 * 8.953125);
    v964.bezierCurveTo(p644 * 117.75, p644 * 12.453125, p644 * 117.75, p644 * 12.453125, p644 * 124.25, p644 * 15.953125);
    v964.bezierCurveTo(p644 * 113.75, p644 * 39.953125, p644 * 113.75, p644 * 39.953125, p644 * 103.25, p644 * 63.953125);
    v964.bezierCurveTo(p644 * 97.75, p644 * 64.953125, p644 * 97.75, p644 * 64.953125, p644 * 92.25, p644 * 65.953125);
    v964.closePath();
    f84(v964, p646[0]);
    v964.globalAlpha = 1;
    v964.translate(p644 * -5, p644 * -5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 111.25, p644 * 8.953125);
    v964.bezierCurveTo(p644 * 117.75, p644 * 12.453125, p644 * 117.75, p644 * 12.453125, p644 * 124.25, p644 * 15.953125);
    v964.bezierCurveTo(p644 * 113.75, p644 * 39.953125, p644 * 113.75, p644 * 39.953125, p644 * 103.25, p644 * 63.953125);
    v964.bezierCurveTo(p644 * 97.75, p644 * 64.953125, p644 * 97.75, p644 * 64.953125, p644 * 92.25, p644 * 65.953125);
    v964.closePath();
    f84(v964, p646[7]);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 85.25, p644 * 82.953125);
    v964.bezierCurveTo(p644 * 98.25, p644 * 46.453125, p644 * 98.25, p644 * 46.453125, p644 * 111.25, p644 * 9.953125);
    v964.closePath();
    f84(v964, undefined, p646[6], p644 * 4);
    v964.globalAlpha = p645 ? 0.5 : 1;
    v964.translate(p644 * 5, p644 * 5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 87.25, p644 * 84.953125);
    v964.bezierCurveTo(p644 * 123.75, p644 * 100.453125, p644 * 123.75, p644 * 100.453125, p644 * 160.25, p644 * 115.953125);
    v964.closePath();
    f84(v964, undefined, p646[0], p644 * 4);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 160.25, p644 * 114.953125);
    v964.bezierCurveTo(p644 * 156.25, p644 * 122.453125, p644 * 156.25, p644 * 122.453125, p644 * 152.25, p644 * 129.953125);
    v964.bezierCurveTo(p644 * 130.25, p644 * 117.953125, p644 * 130.25, p644 * 117.953125, p644 * 108.25, p644 * 105.953125);
    v964.bezierCurveTo(p644 * 107.25, p644 * 98.953125, p644 * 107.25, p644 * 98.953125, p644 * 106.25, p644 * 91.953125);
    v964.closePath();
    f84(v964, p646[0]);
    v964.globalAlpha = 1;
    v964.translate(p644 * -5, p644 * -5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 160.25, p644 * 114.953125);
    v964.bezierCurveTo(p644 * 156.25, p644 * 122.453125, p644 * 156.25, p644 * 122.453125, p644 * 152.25, p644 * 129.953125);
    v964.bezierCurveTo(p644 * 130.25, p644 * 117.953125, p644 * 130.25, p644 * 117.953125, p644 * 108.25, p644 * 105.953125);
    v964.bezierCurveTo(p644 * 107.25, p644 * 98.953125, p644 * 107.25, p644 * 98.953125, p644 * 106.25, p644 * 91.953125);
    v964.closePath();
    f84(v964, p646[7]);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 87.25, p644 * 84.953125);
    v964.bezierCurveTo(p644 * 123.75, p644 * 100.453125, p644 * 123.75, p644 * 100.453125, p644 * 160.25, p644 * 115.953125);
    v964.closePath();
    f84(v964, vVVVVUndefined21, p646[6], p644 * 4);
    v964.globalAlpha = p645 ? 0.5 : 1;
    v964.translate(p644 * 5, p644 * 5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 83.25, p644 * 83.953125);
    v964.bezierCurveTo(p644 * 47.75, p644 * 68.453125, p644 * 47.75, p644 * 68.453125, p644 * 12.25, p644 * 52.953125);
    v964.closePath();
    f84(v964, undefined, p646[0], p644 * 4);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 13.25, p644 * 53.953125);
    v964.bezierCurveTo(p644 * 17.25, p644 * 46.953125, p644 * 17.25, p644 * 46.953125, p644 * 21.25, p644 * 39.953125);
    v964.bezierCurveTo(p644 * 42.75, p644 * 52.453125, p644 * 42.75, p644 * 52.453125, p644 * 64.25, p644 * 64.953125);
    v964.bezierCurveTo(p644 * 64.25, p644 * 70.953125, p644 * 64.25, p644 * 70.953125, p644 * 64.25, p644 * 76.953125);
    v964.closePath();
    f84(v964, p646[0]);
    v964.globalAlpha = 1;
    v964.translate(p644 * -5, p644 * -5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 13.25, p644 * 53.953125);
    v964.bezierCurveTo(p644 * 17.25, p644 * 46.953125, p644 * 17.25, p644 * 46.953125, p644 * 21.25, p644 * 39.953125);
    v964.bezierCurveTo(p644 * 42.75, p644 * 52.453125, p644 * 42.75, p644 * 52.453125, p644 * 64.25, p644 * 64.953125);
    v964.bezierCurveTo(p644 * 64.25, p644 * 70.953125, p644 * 64.25, p644 * 70.953125, p644 * 64.25, p644 * 76.953125);
    v964.closePath();
    f84(v964, p646[7]);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 83.25, p644 * 83.953125);
    v964.bezierCurveTo(p644 * 47.75, p644 * 68.453125, p644 * 47.75, p644 * 68.453125, p644 * 12.25, p644 * 52.953125);
    v964.closePath();
    f84(v964, vVVUndefined21, p646[6], p644 * 4);
    v964.globalAlpha = p645 ? 0.5 : 1;
    v964.translate(p644 * 5, p644 * 5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 84.25, p644 * 86.953125);
    v964.bezierCurveTo(p644 * 70.25, p644 * 123.953125, p644 * 70.25, p644 * 123.953125, p644 * 56.25, p644 * 160.953125);
    v964.closePath();
    f84(v964, vVUndefined19, p646[0], p644 * 4);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 56.25, p644 * 159.953125);
    v964.bezierCurveTo(p644 * 49.25, p644 * 155.453125, p644 * 49.25, p644 * 155.453125, p644 * 42.25, p644 * 150.953125);
    v964.bezierCurveTo(p644 * 54.25, p644 * 127.953125, p644 * 54.25, p644 * 127.953125, p644 * 66.25, p644 * 104.953125);
    v964.bezierCurveTo(p644 * 71.25, p644 * 104.953125, p644 * 71.25, p644 * 104.953125, p644 * 76.25, p644 * 104.953125);
    v964.closePath();
    f84(v964, p646[0]);
    v964.globalAlpha = 1;
    v964.translate(p644 * -5, p644 * -5);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 56.25, p644 * 159.953125);
    v964.bezierCurveTo(p644 * 49.25, p644 * 155.453125, p644 * 49.25, p644 * 155.453125, p644 * 42.25, p644 * 150.953125);
    v964.bezierCurveTo(p644 * 54.25, p644 * 127.953125, p644 * 54.25, p644 * 127.953125, p644 * 66.25, p644 * 104.953125);
    v964.bezierCurveTo(p644 * 71.25, p644 * 104.953125, p644 * 71.25, p644 * 104.953125, p644 * 76.25, p644 * 104.953125);
    v964.closePath();
    f84(v964, p646[7]);
    v964.beginPath();
    v964.lineCap = "round";
    v964.lineJoin = "round";
    v964.moveTo(p644 * 84.25, p644 * 86.953125);
    v964.bezierCurveTo(p644 * 70.25, p644 * 123.953125, p644 * 70.25, p644 * 123.953125, p644 * 56.25, p644 * 160.953125);
    v964.closePath();
    f84(v964, vVUndefined22, p646[6], p644 * 4);
    return v963;
  }
  const v965 = 10;
  function f120(p647, p648, p649, p650, p651) {
    var v966 = document.createElement("canvas");
    var v967 = v966.getContext("2d");
    var v968 = p647 * 70;
    var v969 = p647 * 70;
    var v970 = p647 * 10;
    var v971 = p647 * 5;
    v966.width = v968;
    v966.height = v969 + v971;
    for (var v972 = 0; v972 < p648.length; v972++) {
      var v973 = p648[v972];
      v967.globalAlpha = v973.a;
      var v974 = v973.f(p649, vV143, v973.c);
      v967.save();
      v967.translate(v968 / 2 + v973.x * p647, v969 / 2 + p647 * v973.y);
      v967.rotate(v973.r);
      v967.drawImage(v974, -v974.width / 2, -v974.height / 2);
      v967.restore();
    }
    var v975 = [];
    for (v972 = 0; v972 < p650.length; v972++) {
      var v976 = document.createElement("canvas");
      var v977 = v976.getContext("2d");
      v976.width = v968;
      v976.height = v969 + v971;
      v977.globalAlpha = p651 / 2;
      if (v972 == 2) {
        f83(v977, 0, v971, v968, v969, v970);
      } else {
        f83(v977, 0, 0, v968, v969 + v971, v970);
      }
      f84(v977, "#081a19");
      v977.globalAlpha = p651;
      if (v972 == 2) {
        f83(v977, 0, v971, v968, v969, v970);
      } else {
        f83(v977, 0, 0, v968, v969, v970);
      }
      f84(v977, p650[v972]);
      v977.globalAlpha = 1;
      if (v972 == 2) {
        v977.drawImage(v966, 0, v971);
      } else {
        v977.drawImage(v966, 0, 0);
      }
      v975.push(f53(v976));
    }
    return v975;
  }
  const v978 = 0;
  const v979 = 2;
  function f121(p652, p653, p654) {
    var v980 = document.createElement("canvas");
    var v981 = v980.getContext("2d");
    var v982 = p652 * 193;
    var v983 = p652 * 198;
    var v984 = p652 * 140;
    var v985 = p652 * 90;
    v980.width = v982;
    v980.height = v983;
    var v986 = p652 * 10;
    var v987 = p652 * 25;
    var v988 = p652 * 180;
    var v989 = v987 / 2;
    var v990 = v988 / 2;
    var v991 = p652 * 4;
    v981.translate(p652 * -25, p652 * 1);
    v981.translate(v984, v985);
    v981.rotate(-Math.PI / 5);
    f83(v981, -v989, -v990, v987, v988, v986);
    f84(v981, p654[0], p654[1], v991);
    v981.translate(p652 * -30, p652 * -25);
    v981.rotate(Math.PI / 3);
    f83(v981, -v989, -v990, v987, v988, v986);
    f84(v981, p654[0], p654[1], v991);
    v981.translate(p652 * 35, p652 * 30);
    v981.rotate(Math.PI / 3);
    f83(v981, -v989, -v990, v987, v988, v986);
    f84(v981, p654[0], p654[1], v991);
    return v980;
  }
  const v992 = 4;
  function f122(p655, p656, p657) {
    var v993 = document.createElement("canvas");
    var v994 = v993.getContext("2d");
    var v995 = p655 * 370;
    var v996 = p655 * 370;
    var v997 = v995 / 2;
    var v998 = v996 / 2;
    v993.width = v995;
    v993.height = v996;
    var v999 = p655 * 180;
    v994.globalAlpha = 0.2;
    f89(v994, v997, v998, v999);
    f84(v994, p657[0]);
    return v993;
  }
  function f123(p658, p659, p660) {
    var v1000 = document.createElement("canvas");
    var v1001 = v1000.getContext("2d");
    var v1002 = p658 * 145;
    var v1003 = p658 * 145;
    var v1004 = v1002 / 2;
    var v1005 = v1003 / 2;
    v1000.width = v1002;
    v1000.height = v1003;
    var v1006 = p658 * 70;
    v1001.translate(v1004, v1005);
    v1001.globalAlpha = 0.4;
    f89(v1001, 0, 0, v1006);
    f84(v1001, p660[0]);
    v1006 = p658 * 50;
    v1001.translate(0, 0);
    v1001.globalAlpha = 0.8;
    f89(v1001, 0, 0, v1006);
    f84(v1001, p660[0]);
    v1006 = p658 * 35;
    v1001.translate(0, 0);
    v1001.globalAlpha = 0.8;
    f89(v1001, 0, 0, v1006);
    f84(v1001, p660[1]);
    v1006 = p658 * 20;
    v1001.translate(0, 0);
    v1001.globalAlpha = 0.8;
    f89(v1001, 0, 0, v1006);
    f84(v1001, p660[2]);
    return v1000;
  }
  function f124(p661, p662, p663) {
    var v1007 = document.createElement("canvas");
    var v1008 = v1007.getContext("2d");
    var v1009 = p661 * 205;
    var v1010 = p661 * 205;
    var v1011 = v1009 / 2;
    var v1012 = v1010 / 2;
    v1007.width = v1009;
    v1007.height = v1010;
    var v1013 = p661 * 100;
    v1008.translate(v1011, v1012);
    v1008.globalAlpha = 1;
    f89(v1008, 0, 0, v1013);
    f84(v1008, p663[0]);
    return v1007;
  }
  function f125(p664, p665, p666) {
    var v1014 = document.createElement("canvas");
    var v1015 = v1014.getContext("2d");
    var v1016 = p664 * 135;
    var v1017 = p664 * 190;
    var v1018 = v1016 / 2;
    var v1019 = v1017 / 2;
    v1014.width = v1016;
    v1014.height = v1017;
    var v1020 = p664 * 10;
    var v1021 = p664 * 25;
    var v1022 = p664 * 180;
    var v1023 = v1021 / 2;
    var v1024 = v1022 / 2;
    var v1025 = p664 * 4;
    v1015.translate(v1018, v1019);
    v1015.rotate(-Math.PI / 5);
    v1015.globalAlpha = 1;
    f83(v1015, -v1023, -v1024, v1021, v1022, v1020);
    f84(v1015, p666[0], p666[1], v1025);
    v1015.translate(0, 0);
    v1015.rotate(Math.PI / 5);
    v1015.globalAlpha = 1;
    f83(v1015, -v1023, -v1024, v1021, v1022, v1020);
    f84(v1015, p666[0], p666[1], v1025);
    return v1014;
  }
  const v1026 = 10;
  function f126(p667, p668, p669) {
    var v1027 = document.createElement("canvas");
    var v1028 = v1027.getContext("2d");
    v1027.width = p667 * 155;
    v1027.height = p667 * 127;
    v1028.globalAlpha = 0.5;
    v1028.translate(0, p667 * 8);
    v1028.translate(p667 * -7, p667 * -20);
    v1028.beginPath();
    v1028.lineCap = "round";
    v1028.lineJoin = "round";
    v1028.moveTo(p667 * 55, p667 * 68);
    v1028.bezierCurveTo(p667 * 86, p667 * 64, p667 * 117, p667 * 66, p667 * 134, p667 * 68);
    v1028.bezierCurveTo(p667 * 152, p667 * 69, p667 * 165, p667 * 86, p667 * 152, p667 * 104);
    v1028.bezierCurveTo(p667 * 146, p667 * 87, p667 * 122, p667 * 89, p667 * 98, p667 * 90);
    v1028.bezierCurveTo(p667 * 64, p667 * 89, p667 * 41, p667 * 91, p667 * 36, p667 * 106);
    v1028.bezierCurveTo(p667 * 19, p667 * 92, p667 * 31, p667 * 71, p667 * 54, p667 * 69);
    v1028.closePath();
    f84(v1028, p669[0]);
    v1028.globalAlpha = 1;
    v1028.translate(0, p667 * -8);
    v1028.translate(p667 * 7, p667 * 20);
    v1028.beginPath();
    v1028.lineCap = "round";
    v1028.lineJoin = "round";
    v1028.moveTo(p667 * 24, p667 * 28);
    v1028.bezierCurveTo(p667 * 39, p667 * 30, p667 * 37, p667 * 31, p667 * 40, p667 * 32);
    v1028.bezierCurveTo(p667 * 22, p667 * 45, p667 * 26, p667 * 58, p667 * 29, p667 * 66);
    v1028.bezierCurveTo(p667 * 86.5, p667 * 65, p667 * 86.5, p667 * 65, p667 * 144, p667 * 64);
    v1028.bezierCurveTo(p667 * 151, p667 * 42, p667 * 132, p667 * 20, p667 * 120, p667 * 16);
    v1028.bezierCurveTo(p667 * 106, p667 * 12, p667 * 89, p667 * 0, p667 * 73, p667 * 3);
    v1028.bezierCurveTo(p667 * 51, p667 * 5, p667 * 36, p667 * 20, p667 * 25, p667 * 28);
    v1028.closePath();
    f84(v1028, p669[1], p669[2], p667 * 4);
    v1028.beginPath();
    v1028.lineCap = "round";
    v1028.lineJoin = "round";
    v1028.moveTo(p667 * 30, p667 * 41);
    v1028.bezierCurveTo(p667 * 49, p667 * 31, p667 * 53, p667 * 29, p667 * 62, p667 * 27);
    v1028.bezierCurveTo(p667 * 59, p667 * 24, p667 * 56, p667 * 25, p667 * 53, p667 * 24);
    v1028.bezierCurveTo(p667 * 67, p667 * 15, p667 * 84, p667 * 12, p667 * 120, p667 * 16);
    v1028.bezierCurveTo(p667 * 107, p667 * 11, p667 * 96, p667 * 6, p667 * 85, p667 * 2);
    v1028.bezierCurveTo(p667 * 59, p667 * 3, p667 * 54, p667 * 7, p667 * 40, p667 * 17);
    v1028.bezierCurveTo(p667 * 32.5, p667 * 22.5, p667 * 32.5, p667 * 22.5, p667 * 25, p667 * 28);
    v1028.bezierCurveTo(p667 * 32, p667 * 30, p667 * 32, p667 * 30, p667 * 39, p667 * 32);
    v1028.closePath();
    f84(v1028, p669[3]);
    v1028.beginPath();
    v1028.lineCap = "round";
    v1028.lineJoin = "round";
    v1028.moveTo(p667 * 24, p667 * 28);
    v1028.bezierCurveTo(p667 * 39, p667 * 30, p667 * 37, p667 * 31, p667 * 40, p667 * 32);
    v1028.bezierCurveTo(p667 * 22, p667 * 45, p667 * 26, p667 * 58, p667 * 29, p667 * 66);
    v1028.bezierCurveTo(p667 * 86.5, p667 * 65, p667 * 86.5, p667 * 65, p667 * 144, p667 * 64);
    v1028.bezierCurveTo(p667 * 151, p667 * 42, p667 * 132, p667 * 20, p667 * 120, p667 * 16);
    v1028.bezierCurveTo(p667 * 106, p667 * 12, p667 * 89, p667 * 0, p667 * 73, p667 * 3);
    v1028.bezierCurveTo(p667 * 51, p667 * 5, p667 * 36, p667 * 20, p667 * 25, p667 * 28);
    v1028.closePath();
    f84(v1028, undefined, p669[2], p667 * 4);
    f89(v1028, p667 * 18, p667 * 38, p667 * 14.866068747318506);
    f84(v1028, p669[4], p669[5], p667 * 4);
    v1028.beginPath();
    v1028.lineCap = "round";
    v1028.lineJoin = "round";
    v1028.moveTo(p667 * 39, p667 * 30);
    v1028.bezierCurveTo(p667 * 27, p667 * 38, p667 * 25, p667 * 50, p667 * 26, p667 * 60);
    v1028.bezierCurveTo(p667 * 36.5, p667 * 58.5, p667 * 36.5, p667 * 58.5, p667 * 47, p667 * 57);
    f84(v1028, p669[1], p669[2], p667 * 4);
    v1028.translate(p667 * -7, p667 * -20);
    v1028.beginPath();
    v1028.lineCap = "round";
    v1028.lineJoin = "round";
    v1028.moveTo(p667 * 27, p667 * 74);
    v1028.bezierCurveTo(p667 * 38, p667 * 77.5, p667 * 38, p667 * 77.5, p667 * 49, p667 * 81);
    v1028.bezierCurveTo(p667 * 54.5, p667 * 75.5, p667 * 54.5, p667 * 75.5, p667 * 60, p667 * 70);
    v1028.bezierCurveTo(p667 * 64, p667 * 72, p667 * 64, p667 * 72, p667 * 68, p667 * 74);
    v1028.bezierCurveTo(p667 * 80.5, p667 * 67.5, p667 * 80.5, p667 * 67.5, p667 * 93, p667 * 61);
    v1028.bezierCurveTo(p667 * 104.5, p667 * 68, p667 * 104.5, p667 * 68, p667 * 116, p667 * 75);
    v1028.bezierCurveTo(p667 * 120.5, p667 * 72.5, p667 * 120.5, p667 * 72.5, p667 * 125, p667 * 70);
    v1028.bezierCurveTo(p667 * 129, p667 * 75, p667 * 129, p667 * 75, p667 * 133, p667 * 80);
    v1028.bezierCurveTo(p667 * 145.5, p667 * 76.5, p667 * 145.5, p667 * 76.5, p667 * 158, p667 * 73);
    v1028.bezierCurveTo(p667 * 158, p667 * 87, p667 * 158, p667 * 93, p667 * 155, p667 * 95);
    v1028.bezierCurveTo(p667 * 152.5, p667 * 96, p667 * 152.5, p667 * 96, p667 * 150, p667 * 97);
    v1028.bezierCurveTo(p667 * 121, p667 * 85, p667 * 108, p667 * 86, p667 * 93, p667 * 85);
    v1028.bezierCurveTo(p667 * 64, p667 * 85, p667 * 52, p667 * 95, p667 * 38, p667 * 99);
    v1028.bezierCurveTo(p667 * 36, p667 * 98.5, p667 * 36, p667 * 98.5, p667 * 34, p667 * 98);
    v1028.bezierCurveTo(p667 * 25, p667 * 98, p667 * 27, p667 * 91, p667 * 27, p667 * 76);
    v1028.closePath();
    f84(v1028, p669[6], p669[7], p667 * 6);
    return v1027;
  }
  function f127(p670, p671) {
    var v1029 = document.createElement("canvas");
    var v1030 = v1029.getContext("2d");
    var v1031 = p670 * 220;
    var v1032 = p670 * 220;
    var v1033 = p670 * 32;
    var v1034 = p670 * 4;
    v1029.width = v1031;
    v1029.height = v1032;
    v1030.translate(v1031 / 2, v1032 / 2 + p670 * 10);
    v1030.globalAlpha = 0.5;
    f89(v1030, 0, 0, v1033);
    f84(v1030, p671[0], p671[0]);
    v1030.translate(0, p670 * -8);
    v1030.globalAlpha = 1;
    f89(v1030, 0, 0, v1033);
    f84(v1030, p671[1], p671[2], v1034);
    return v1029;
  }
  function f128(p672, p673, p674) {
    var v1035 = document.createElement("canvas");
    var v1036 = v1035.getContext("2d");
    v1035.width = p672 * 155;
    v1035.height = p672 * 127;
    v1036.globalAlpha = 0.5;
    v1036.translate(0, p672 * 8);
    v1036.translate(p672 * -7, p672 * -20);
    v1036.beginPath();
    v1036.lineCap = "round";
    v1036.lineJoin = "round";
    v1036.moveTo(p672 * 55, p672 * 68);
    v1036.bezierCurveTo(p672 * 86, p672 * 64, p672 * 117, p672 * 66, p672 * 134, p672 * 68);
    v1036.bezierCurveTo(p672 * 152, p672 * 69, p672 * 165, p672 * 86, p672 * 152, p672 * 104);
    v1036.bezierCurveTo(p672 * 146, p672 * 87, p672 * 122, p672 * 89, p672 * 98, p672 * 90);
    v1036.bezierCurveTo(p672 * 64, p672 * 89, p672 * 41, p672 * 91, p672 * 36, p672 * 106);
    v1036.bezierCurveTo(p672 * 19, p672 * 92, p672 * 31, p672 * 71, p672 * 54, p672 * 69);
    v1036.closePath();
    f84(v1036, p674[0]);
    v1036.globalAlpha = 1;
    v1036.translate(0, p672 * -8);
    v1036.translate(p672 * 7, p672 * 20);
    v1036.beginPath();
    v1036.lineCap = "round";
    v1036.lineJoin = "round";
    v1036.moveTo(p672 * 24, p672 * 28);
    v1036.bezierCurveTo(p672 * 39, p672 * 30, p672 * 37, p672 * 31, p672 * 40, p672 * 32);
    v1036.bezierCurveTo(p672 * 22, p672 * 45, p672 * 26, p672 * 58, p672 * 29, p672 * 66);
    v1036.bezierCurveTo(p672 * 86.5, p672 * 65, p672 * 86.5, p672 * 65, p672 * 144, p672 * 64);
    v1036.bezierCurveTo(p672 * 151, p672 * 42, p672 * 132, p672 * 20, p672 * 120, p672 * 16);
    v1036.bezierCurveTo(p672 * 106, p672 * 12, p672 * 89, p672 * 0, p672 * 73, p672 * 3);
    v1036.bezierCurveTo(p672 * 51, p672 * 5, p672 * 36, p672 * 20, p672 * 25, p672 * 28);
    v1036.closePath();
    f84(v1036, p674[1], p674[2], p672 * 4);
    v1036.beginPath();
    v1036.lineCap = "round";
    v1036.lineJoin = "round";
    v1036.moveTo(p672 * 30, p672 * 41);
    v1036.bezierCurveTo(p672 * 49, p672 * 31, p672 * 53, p672 * 29, p672 * 62, p672 * 27);
    v1036.bezierCurveTo(p672 * 59, p672 * 24, p672 * 56, p672 * 25, p672 * 53, p672 * 24);
    v1036.bezierCurveTo(p672 * 67, p672 * 15, p672 * 84, p672 * 12, p672 * 120, p672 * 16);
    v1036.bezierCurveTo(p672 * 107, p672 * 11, p672 * 96, p672 * 6, p672 * 85, p672 * 2);
    v1036.bezierCurveTo(p672 * 59, p672 * 3, p672 * 54, p672 * 7, p672 * 40, p672 * 17);
    v1036.bezierCurveTo(p672 * 32.5, p672 * 22.5, p672 * 32.5, p672 * 22.5, p672 * 25, p672 * 28);
    v1036.bezierCurveTo(p672 * 32, p672 * 30, p672 * 32, p672 * 30, p672 * 39, p672 * 32);
    v1036.closePath();
    f84(v1036, p674[3]);
    v1036.beginPath();
    v1036.lineCap = "round";
    v1036.lineJoin = "round";
    v1036.moveTo(p672 * 24, p672 * 28);
    v1036.bezierCurveTo(p672 * 39, p672 * 30, p672 * 37, p672 * 31, p672 * 40, p672 * 32);
    v1036.bezierCurveTo(p672 * 22, p672 * 45, p672 * 26, p672 * 58, p672 * 29, p672 * 66);
    v1036.bezierCurveTo(p672 * 86.5, p672 * 65, p672 * 86.5, p672 * 65, p672 * 144, p672 * 64);
    v1036.bezierCurveTo(p672 * 151, p672 * 42, p672 * 132, p672 * 20, p672 * 120, p672 * 16);
    v1036.bezierCurveTo(p672 * 106, p672 * 12, p672 * 89, p672 * 0, p672 * 73, p672 * 3);
    v1036.bezierCurveTo(p672 * 51, p672 * 5, p672 * 36, p672 * 20, p672 * 25, p672 * 28);
    v1036.closePath();
    f84(v1036, vVVUndefined202, p674[2], p672 * 4);
    f89(v1036, p672 * 18, p672 * 38, p672 * 14.866068747318506);
    f84(v1036, p674[4], p674[5], p672 * 4);
    v1036.beginPath();
    v1036.lineCap = "round";
    v1036.lineJoin = "round";
    v1036.moveTo(p672 * 39, p672 * 30);
    v1036.bezierCurveTo(p672 * 27, p672 * 38, p672 * 25, p672 * 50, p672 * 26, p672 * 60);
    v1036.bezierCurveTo(p672 * 36.5, p672 * 58.5, p672 * 36.5, p672 * 58.5, p672 * 47, p672 * 57);
    f84(v1036, p674[1], p674[2], p672 * 4);
    v1036.translate(p672 * -7, p672 * -20);
    v1036.beginPath();
    v1036.lineCap = "round";
    v1036.lineJoin = "round";
    v1036.moveTo(p672 * 55, p672 * 68);
    v1036.bezierCurveTo(p672 * 86, p672 * 64, p672 * 117, p672 * 66, p672 * 134, p672 * 68);
    v1036.bezierCurveTo(p672 * 152, p672 * 69, p672 * 165, p672 * 86, p672 * 152, p672 * 104);
    v1036.bezierCurveTo(p672 * 146, p672 * 87, p672 * 122, p672 * 89, p672 * 98, p672 * 90);
    v1036.bezierCurveTo(p672 * 64, p672 * 89, p672 * 41, p672 * 91, p672 * 36, p672 * 106);
    v1036.bezierCurveTo(p672 * 19, p672 * 92, p672 * 31, p672 * 71, p672 * 54, p672 * 69);
    v1036.closePath();
    f84(v1036, p674[4], p674[5], p672 * 4);
    return v1035;
  }
  function f129(p675, p676) {
    var v1037 = document.createElement("canvas");
    var v1038 = v1037.getContext("2d");
    var v1039 = p675 * 40;
    var v1040 = p675 * 40;
    var v1041 = p675 * 16;
    var v1042 = p675 * 4;
    v1037.width = v1039;
    v1037.height = v1040;
    v1038.translate(v1039 / 2, v1040 / 2);
    v1038.globalAlpha = 1;
    f89(v1038, 0, 0, v1041);
    f84(v1038, p676[0], p676[1], v1042);
    return v1037;
  }
  function f130(p677, p678, p679, p680) {
    var v1043 = document.createElement("canvas");
    var v1044 = v1043.getContext("2d");
    var v1045 = p677 * 210;
    var v1046 = p677 * 205;
    var v1047 = p677 * 30;
    var v1048 = p677 * 20;
    var v1049 = p677 * 200;
    var v1050 = p677 * 180;
    var v1051 = v1049 / 2;
    var v1052 = v1050 / 2;
    var v1053 = 4;
    v1043.width = v1045;
    v1043.height = v1046;
    v1043.width = p677 * 419;
    v1043.height = p677 * 412;
    if (p680 == 1) {
      v1044.save();
      v1044.translate(p677 * 10, p677 * 0);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 117.99996948242188, p677 * 216.40621948242188);
      v1044.bezierCurveTo(p677 * 86.99996948242188, p677 * 221.40621948242188, p677 * 74.99996948242188, p677 * 217.40621948242188, p677 * 60.999969482421875, p677 * 205.40621948242188);
      f84(v1044, vVUndefined22, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 114.99996948242188, p677 * 227.40621948242188);
      v1044.bezierCurveTo(p677 * 90.99996948242188, p677 * 233.40621948242188, p677 * 66.99996948242188, p677 * 228.40621948242188, p677 * 43.999969482421875, p677 * 225.40621948242188);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 110.99996948242188, p677 * 236.40621948242188);
      v1044.bezierCurveTo(p677 * 94.99996948242188, p677 * 244.40621948242188, p677 * 79.99996948242188, p677 * 249.40621948242188, p677 * 60.999969482421875, p677 * 249.40621948242188);
      f84(v1044, vVVVUndefined212, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 111.99996948242188, p677 * 206.29513549804688);
      v1044.bezierCurveTo(p677 * 91.99996948242188, p677 * 206.29513549804688, p677 * 87.99996948242188, p677 * 201.29513549804688, p677 * 79.99996948242188, p677 * 192.29513549804688);
      f84(v1044, vVVVUndefined212, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 109.99996948242188, p677 * 249.18402099609375);
      v1044.bezierCurveTo(p677 * 97.99996948242188, p677 * 263.18402099609375, p677 * 85.99996948242188, p677 * 271.18402099609375, p677 * 65.99996948242188, p677 * 277.18402099609375);
      f84(v1044, vVUndefined21, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 105.99996948242188, p677 * 192.18402099609375);
      v1044.bezierCurveTo(p677 * 99.49996948242188, p677 * 197.68402099609375, p677 * 99.49996948242188, p677 * 197.68402099609375, p677 * 92.99996948242188, p677 * 203.18402099609375);
      v1044.bezierCurveTo(p677 * 95.99996948242188, p677 * 213.18402099609375, p677 * 95.99996948242188, p677 * 215.18402099609375, p677 * 89.99996948242188, p677 * 219.18402099609375);
      v1044.bezierCurveTo(p677 * 91.99996948242188, p677 * 223.18402099609375, p677 * 91.99996948242188, p677 * 226.18402099609375, p677 * 87.99996948242188, p677 * 230.18402099609375);
      v1044.bezierCurveTo(p677 * 89.99996948242188, p677 * 234.18402099609375, p677 * 91.99996948242188, p677 * 237.18402099609375, p677 * 90.99996948242188, p677 * 244.18402099609375);
      v1044.bezierCurveTo(p677 * 96.99996948242188, p677 * 252.18402099609375, p677 * 96.99996948242188, p677 * 256.18402099609375, p677 * 95.99996948242188, p677 * 262.18402099609375);
      v1044.bezierCurveTo(p677 * 106.49996948242188, p677 * 264.18402099609375, p677 * 106.49996948242188, p677 * 264.18402099609375, p677 * 116.99996948242188, p677 * 266.18402099609375);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 104.99996948242188, p677 * 183.29513549804688);
      v1044.bezierCurveTo(p677 * 99.99996948242188, p677 * 193.29513549804688, p677 * 93.99996948242188, p677 * 195.29513549804688, p677 * 89.99996948242188, p677 * 201.29513549804688);
      v1044.bezierCurveTo(p677 * 86.99996948242188, p677 * 212.29513549804688, p677 * 85.99996948242188, p677 * 214.29513549804688, p677 * 81.99996948242188, p677 * 215.29513549804688);
      v1044.bezierCurveTo(p677 * 83.99996948242188, p677 * 223.29513549804688, p677 * 83.99996948242188, p677 * 227.29513549804688, p677 * 79.99996948242188, p677 * 230.29513549804688);
      v1044.bezierCurveTo(p677 * 83.99996948242188, p677 * 235.29513549804688, p677 * 84.99996948242188, p677 * 240.29513549804688, p677 * 79.99996948242188, p677 * 246.29513549804688);
      v1044.bezierCurveTo(p677 * 86.99996948242188, p677 * 251.29513549804688, p677 * 91.99996948242188, p677 * 256.2951354980469, p677 * 89.99996948242188, p677 * 266.2951354980469);
      v1044.bezierCurveTo(p677 * 102.99996948242188, p677 * 269.2951354980469, p677 * 102.99996948242188, p677 * 269.2951354980469, p677 * 115.99996948242188, p677 * 272.2951354980469);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 107.99996948242188, p677 * 177.85067749023438);
      v1044.bezierCurveTo(p677 * 95.99996948242188, p677 * 187.35067749023438, p677 * 95.99996948242188, p677 * 187.35067749023438, p677 * 83.99996948242188, p677 * 196.85067749023438);
      v1044.bezierCurveTo(p677 * 82.99996948242188, p677 * 203.85067749023438, p677 * 80.99996948242188, p677 * 209.85067749023438, p677 * 72.99996948242188, p677 * 210.85067749023438);
      v1044.bezierCurveTo(p677 * 73.99996948242188, p677 * 220.85067749023438, p677 * 73.99996948242188, p677 * 221.85067749023438, p677 * 66.99996948242188, p677 * 227.85067749023438);
      v1044.bezierCurveTo(p677 * 71.99996948242188, p677 * 235.85067749023438, p677 * 73.99996948242188, p677 * 239.85067749023438, p677 * 71.99996948242188, p677 * 247.85067749023438);
      v1044.bezierCurveTo(p677 * 80.99996948242188, p677 * 257.8506774902344, p677 * 81.99996948242188, p677 * 263.8506774902344, p677 * 77.99996948242188, p677 * 271.8506774902344);
      v1044.bezierCurveTo(p677 * 95.49996948242188, p677 * 272.8506774902344, p677 * 95.49996948242188, p677 * 272.8506774902344, p677 * 112.99996948242188, p677 * 273.8506774902344);
      f84(v1044, vVVUndefined202, p678[4], p677 * 3);
      v1044.restore();
    } else if (p680 == 2) {
      v1044.save();
      v1044.translate(p677 * 130, p677 * 35);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 170.99996948242188, p677 * 133.85067749023438);
      v1044.bezierCurveTo(p677 * 195.99996948242188, p677 * 129.85067749023438, p677 * 196.99996948242188, p677 * 111.85067749023438, p677 * 200.99996948242188, p677 * 88.85067749023438);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 169.99996948242188, p677 * 143.85067749023438);
      v1044.bezierCurveTo(p677 * 189.99996948242188, p677 * 145.85067749023438, p677 * 207.99996948242188, p677 * 126.85067749023438, p677 * 222.99996948242188, p677 * 100.85067749023438);
      f84(v1044, vVVVUndefined117, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 170.99996948242188, p677 * 157.85067749023438);
      v1044.bezierCurveTo(p677 * 193.99996948242188, p677 * 160.85067749023438, p677 * 210.99996948242188, p677 * 151.85067749023438, p677 * 232.99996948242188, p677 * 139.85067749023438);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 169.99996948242188, p677 * 168.85067749023438);
      v1044.bezierCurveTo(p677 * 192.99996948242188, p677 * 175.85067749023438, p677 * 203.99996948242188, p677 * 177.85067749023438, p677 * 245.99996948242188, p677 * 168.85067749023438);
      f84(v1044, vVVVUndefined117, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 167.99996948242188, p677 * 168.85067749023438);
      v1044.bezierCurveTo(p677 * 183.99996948242188, p677 * 189.85067749023438, p677 * 191.99996948242188, p677 * 193.85067749023438, p677 * 220.99996948242188, p677 * 196.85067749023438);
      f84(v1044, vVUndefined19, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 176.99996948242188, p677 * 117.85067749023438);
      v1044.bezierCurveTo(p677 * 181.99996948242188, p677 * 120.85067749023438, p677 * 181.99996948242188, p677 * 120.85067749023438, p677 * 186.99996948242188, p677 * 123.85067749023438);
      v1044.bezierCurveTo(p677 * 183.99996948242188, p677 * 137.85067749023438, p677 * 185.99996948242188, p677 * 136.85067749023438, p677 * 190.99996948242188, p677 * 136.85067749023438);
      v1044.bezierCurveTo(p677 * 186.99996948242188, p677 * 147.85067749023438, p677 * 189.99996948242188, p677 * 152.85067749023438, p677 * 193.99996948242188, p677 * 155.85067749023438);
      v1044.bezierCurveTo(p677 * 187.99996948242188, p677 * 165.85067749023438, p677 * 190.99996948242188, p677 * 169.85067749023438, p677 * 190.99996948242188, p677 * 172.85067749023438);
      v1044.bezierCurveTo(p677 * 186.99996948242188, p677 * 183.85067749023438, p677 * 186.99996948242188, p677 * 185.85067749023438, p677 * 189.99996948242188, p677 * 188.85067749023438);
      v1044.bezierCurveTo(p677 * 182.49996948242188, p677 * 195.35067749023438, p677 * 182.49996948242188, p677 * 195.35067749023438, p677 * 174.99996948242188, p677 * 201.85067749023438);
      f84(v1044, vVVVUndefined21, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 176.99996948242188, p677 * 112.18402099609375);
      v1044.bezierCurveTo(p677 * 183.99996948242188, p677 * 119.18402099609375, p677 * 186.99996948242188, p677 * 117.18402099609375, p677 * 192.99996948242188, p677 * 116.18402099609375);
      v1044.bezierCurveTo(p677 * 191.99996948242188, p677 * 126.18402099609375, p677 * 193.99996948242188, p677 * 130.18402099609375, p677 * 199.99996948242188, p677 * 130.18402099609375);
      v1044.bezierCurveTo(p677 * 194.99996948242188, p677 * 145.18402099609375, p677 * 197.99996948242188, p677 * 147.18402099609375, p677 * 201.99996948242188, p677 * 153.18402099609375);
      v1044.bezierCurveTo(p677 * 196.99996948242188, p677 * 164.18402099609375, p677 * 197.99996948242188, p677 * 169.18402099609375, p677 * 201.99996948242188, p677 * 174.18402099609375);
      v1044.bezierCurveTo(p677 * 194.99996948242188, p677 * 184.18402099609375, p677 * 196.99996948242188, p677 * 187.18402099609375, p677 * 200.99996948242188, p677 * 193.18402099609375);
      v1044.bezierCurveTo(p677 * 185.99996948242188, p677 * 195.18402099609375, p677 * 181.99996948242188, p677 * 201.18402099609375, p677 * 174.99996948242188, p677 * 210.18402099609375);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 176.99996948242188, p677 * 101.29513549804688);
      v1044.bezierCurveTo(p677 * 181.99996948242188, p677 * 108.29513549804688, p677 * 189.99996948242188, p677 * 110.29513549804688, p677 * 195.99996948242188, p677 * 107.29513549804688);
      v1044.bezierCurveTo(p677 * 197.99996948242188, p677 * 121.29513549804688, p677 * 200.99996948242188, p677 * 122.29513549804688, p677 * 206.99996948242188, p677 * 122.29513549804688);
      v1044.bezierCurveTo(p677 * 201.99996948242188, p677 * 138.29513549804688, p677 * 204.99996948242188, p677 * 142.29513549804688, p677 * 211.99996948242188, p677 * 148.29513549804688);
      v1044.bezierCurveTo(p677 * 201.99996948242188, p677 * 156.29513549804688, p677 * 205.99996948242188, p677 * 167.29513549804688, p677 * 213.99996948242188, p677 * 173.29513549804688);
      v1044.bezierCurveTo(p677 * 204.99996948242188, p677 * 181.29513549804688, p677 * 204.99996948242188, p677 * 187.29513549804688, p677 * 205.99996948242188, p677 * 193.29513549804688);
      v1044.bezierCurveTo(p677 * 190.99996948242188, p677 * 198.29513549804688, p677 * 181.99996948242188, p677 * 205.29513549804688, p677 * 174.99996948242188, p677 * 214.29513549804688);
      f84(v1044, undefined, p678[4], p677 * 3);
      v1044.restore();
    }
    v1044.translate(v1043.width / 2, v1043.height / 2);
    if (!p680) {
      v1044.globalAlpha = 0.5;
      f83(v1044, -v1051, -v1052, v1049, v1050 + v1048, v1047);
      f84(v1044, p678[0]);
      if (p679) {
        v1044.rotate(Math.PI);
      }
      v1044.globalAlpha = 1;
      f83(v1044, -v1051, -v1052, v1049, v1050, v1047);
      f84(v1044, p678[1], p678[2], v1053);
      v1044.globalAlpha = 1;
      f83(v1044, p677 * 35 - v1051, p677 * 20 - v1052, v1049 - p677 * 50, v1050 - p677 * 50, v1047 - p677 * 10);
      f84(v1044, p678[3]);
    }
    if (p680 == 3) {
      v1044.translate(-v1043.width / 2, -v1043.height / 2);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 121, p677 * 190);
      v1044.bezierCurveTo(p677 * 129, p677 * 186, p677 * 137, p677 * 183, p677 * 135, p677 * 163);
      v1044.bezierCurveTo(p677 * 131, p677 * 135, p677 * 153, p677 * 127, p677 * 177, p677 * 124);
      v1044.bezierCurveTo(p677 * 198, p677 * 120, p677 * 208, p677 * 122, p677 * 226, p677 * 128);
      v1044.bezierCurveTo(p677 * 261, p677 * 112, p677 * 271, p677 * 126, p677 * 287, p677 * 147);
      v1044.bezierCurveTo(p677 * 310, p677 * 163, p677 * 304, p677 * 183, p677 * 283, p677 * 196);
      v1044.bezierCurveTo(p677 * 296, p677 * 249, p677 * 278, p677 * 262, p677 * 253, p677 * 263);
      v1044.bezierCurveTo(p677 * 210, p677 * 264, p677 * 188, p677 * 252, p677 * 177, p677 * 234);
      v1044.bezierCurveTo(p677 * 133, p677 * 242, p677 * 123, p677 * 241, p677 * 115, p677 * 225);
      v1044.bezierCurveTo(p677 * 109, p677 * 206, p677 * 115, p677 * 193, p677 * 121, p677 * 190);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 219, p677 * 144);
      v1044.bezierCurveTo(p677 * 251, p677 * 121, p677 * 277, p677 * 136, p677 * 276, p677 * 159);
      v1044.bezierCurveTo(p677 * 276, p677 * 176, p677 * 273, p677 * 191, p677 * 242, p677 * 193);
      v1044.bezierCurveTo(p677 * 226, p677 * 228, p677 * 155, p677 * 219, p677 * 150, p677 * 183);
      v1044.bezierCurveTo(p677 * 142, p677 * 144, p677 * 174, p677 * 127, p677 * 219, p677 * 144);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 123, p677 * 214);
      v1044.bezierCurveTo(p677 * 119, p677 * 198, p677 * 129, p677 * 189, p677 * 146, p677 * 194);
      v1044.bezierCurveTo(p677 * 158, p677 * 201, p677 * 165, p677 * 218, p677 * 147, p677 * 226);
      v1044.bezierCurveTo(p677 * 135, p677 * 230, p677 * 125, p677 * 222, p677 * 123, p677 * 214);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 257, p677 * 199);
      v1044.bezierCurveTo(p677 * 264, p677 * 199, p677 * 275, p677 * 213, p677 * 261, p677 * 220);
      v1044.bezierCurveTo(p677 * 246, p677 * 225, p677 * 235, p677 * 200, p677 * 257, p677 * 199);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.translate(p677 * -5, p677 * 55);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 186, p677 * 123);
      v1044.bezierCurveTo(p677 * 198, p677 * 115, p677 * 219, p677 * 110, p677 * 219, p677 * 123);
      v1044.bezierCurveTo(p677 * 216, p677 * 135, p677 * 171, p677 * 143, p677 * 186, p677 * 123);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.translate(p677 * 5, p677 * -55);
      v1044.translate(p677 * -5, p677 * 15);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 171, p677 * 241);
      v1044.bezierCurveTo(p677 * 189, p677 * 234, p677 * 200, p677 * 248, p677 * 189, p677 * 254);
      v1044.bezierCurveTo(p677 * 179, p677 * 260, p677 * 158, p677 * 246, p677 * 171, p677 * 241);
      v1044.closePath();
      f84(v1044, p678[5]);
    } else if (p680 == 4) {
      v1044.translate(-v1043.width / 2, -v1043.height / 2);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 30, p677 * 167);
      v1044.bezierCurveTo(p677 * 47, p677 * 144, p677 * 64, p677 * 140, p677 * 80, p677 * 147);
      v1044.bezierCurveTo(p677 * 95, p677 * 154, p677 * 95, p677 * 159, p677 * 100, p677 * 179);
      v1044.bezierCurveTo(p677 * 105, p677 * 202, p677 * 95, p677 * 218, p677 * 69, p677 * 218);
      v1044.bezierCurveTo(p677 * 48, p677 * 236, p677 * 26, p677 * 223, p677 * 28, p677 * 213);
      v1044.bezierCurveTo(p677 * 28, p677 * 205, p677 * 29, p677 * 199, p677 * 32, p677 * 195);
      v1044.bezierCurveTo(p677 * 21, p677 * 183, p677 * 27, p677 * 173, p677 * 30, p677 * 167);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 26, p677 * 145);
      v1044.bezierCurveTo(p677 * 32, p677 * 138, p677 * 37, p677 * 137, p677 * 40, p677 * 139);
      v1044.bezierCurveTo(p677 * 43, p677 * 140, p677 * 41, p677 * 150, p677 * 31, p677 * 159);
      v1044.bezierCurveTo(p677 * 23, p677 * 166, p677 * 17, p677 * 158, p677 * 26, p677 * 145);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 13, p677 * 193);
      v1044.bezierCurveTo(p677 * 21, p677 * 187, p677 * 30, p677 * 190, p677 * 20, p677 * 202);
      v1044.bezierCurveTo(p677 * 13, p677 * 208, p677 * 7, p677 * 202, p677 * 13, p677 * 193);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 121, p677 * 190);
      v1044.bezierCurveTo(p677 * 129, p677 * 186, p677 * 137, p677 * 183, p677 * 135, p677 * 163);
      v1044.bezierCurveTo(p677 * 131, p677 * 135, p677 * 153, p677 * 127, p677 * 177, p677 * 124);
      v1044.bezierCurveTo(p677 * 198, p677 * 120, p677 * 208, p677 * 122, p677 * 226, p677 * 128);
      v1044.bezierCurveTo(p677 * 261, p677 * 112, p677 * 271, p677 * 126, p677 * 287, p677 * 147);
      v1044.bezierCurveTo(p677 * 310, p677 * 163, p677 * 304, p677 * 183, p677 * 283, p677 * 196);
      v1044.bezierCurveTo(p677 * 296, p677 * 249, p677 * 278, p677 * 262, p677 * 253, p677 * 263);
      v1044.bezierCurveTo(p677 * 210, p677 * 264, p677 * 188, p677 * 252, p677 * 177, p677 * 234);
      v1044.bezierCurveTo(p677 * 133, p677 * 242, p677 * 123, p677 * 241, p677 * 115, p677 * 225);
      v1044.bezierCurveTo(p677 * 109, p677 * 206, p677 * 115, p677 * 193, p677 * 121, p677 * 190);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 335, p677 * 196);
      v1044.bezierCurveTo(p677 * 312, p677 * 208, p677 * 300, p677 * 185, p677 * 309, p677 * 167);
      v1044.bezierCurveTo(p677 * 314, p677 * 141, p677 * 339, p677 * 127, p677 * 359, p677 * 144);
      v1044.bezierCurveTo(p677 * 363, p677 * 148, p677 * 364, p677 * 150, p677 * 364, p677 * 150);
      v1044.bezierCurveTo(p677 * 392, p677 * 143, p677 * 396, p677 * 183, p677 * 378, p677 * 204);
      v1044.bezierCurveTo(p677 * 367, p677 * 215, p677 * 339, p677 * 208, p677 * 335, p677 * 196);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 349, p677 * 212);
      v1044.bezierCurveTo(p677 * 339, p677 * 216, p677 * 334, p677 * 208, p677 * 341, p677 * 203);
      v1044.bezierCurveTo(p677 * 353, p677 * 198, p677 * 361, p677 * 205, p677 * 349, p677 * 212);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 46, p677 * 165);
      v1044.bezierCurveTo(p677 * 55, p677 * 148, p677 * 85, p677 * 157, p677 * 83, p677 * 175);
      v1044.bezierCurveTo(p677 * 99, p677 * 185, p677 * 89, p677 * 212, p677 * 66, p677 * 204);
      v1044.bezierCurveTo(p677 * 55, p677 * 212, p677 * 43, p677 * 212, p677 * 41, p677 * 202);
      v1044.bezierCurveTo(p677 * 39, p677 * 194, p677 * 42, p677 * 187, p677 * 49, p677 * 185);
      v1044.bezierCurveTo(p677 * 44, p677 * 175, p677 * 45, p677 * 172, p677 * 46, p677 * 165);
      v1044.closePath();
      f84(v1044, p678[4]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 219, p677 * 144);
      v1044.bezierCurveTo(p677 * 251, p677 * 121, p677 * 277, p677 * 136, p677 * 276, p677 * 159);
      v1044.bezierCurveTo(p677 * 276, p677 * 176, p677 * 273, p677 * 191, p677 * 242, p677 * 193);
      v1044.bezierCurveTo(p677 * 226, p677 * 228, p677 * 155, p677 * 219, p677 * 150, p677 * 183);
      v1044.bezierCurveTo(p677 * 142, p677 * 144, p677 * 174, p677 * 127, p677 * 219, p677 * 144);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 123, p677 * 214);
      v1044.bezierCurveTo(p677 * 119, p677 * 198, p677 * 129, p677 * 189, p677 * 146, p677 * 194);
      v1044.bezierCurveTo(p677 * 158, p677 * 201, p677 * 165, p677 * 218, p677 * 147, p677 * 226);
      v1044.bezierCurveTo(p677 * 135, p677 * 230, p677 * 125, p677 * 222, p677 * 123, p677 * 214);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 257, p677 * 199);
      v1044.bezierCurveTo(p677 * 264, p677 * 199, p677 * 275, p677 * 213, p677 * 261, p677 * 220);
      v1044.bezierCurveTo(p677 * 246, p677 * 225, p677 * 235, p677 * 200, p677 * 257, p677 * 199);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.translate(p677 * -5, p677 * 55);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 186, p677 * 123);
      v1044.bezierCurveTo(p677 * 198, p677 * 115, p677 * 219, p677 * 110, p677 * 219, p677 * 123);
      v1044.bezierCurveTo(p677 * 216, p677 * 135, p677 * 171, p677 * 143, p677 * 186, p677 * 123);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.translate(p677 * 5, p677 * -55);
      v1044.translate(p677 * -5, p677 * 15);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 171, p677 * 241);
      v1044.bezierCurveTo(p677 * 189, p677 * 234, p677 * 200, p677 * 248, p677 * 189, p677 * 254);
      v1044.bezierCurveTo(p677 * 179, p677 * 260, p677 * 158, p677 * 246, p677 * 171, p677 * 241);
      v1044.closePath();
      f84(v1044, p678[5]);
      v1044.beginPath();
      v1044.lineCap = "round";
      v1044.lineJoin = "round";
      v1044.moveTo(p677 * 367, p677 * 164);
      v1044.bezierCurveTo(p677 * 380, p677 * 160, p677 * 391, p677 * 185, p677 * 371, p677 * 189);
      v1044.bezierCurveTo(p677 * 362, p677 * 192, p677 * 354, p677 * 191, p677 * 350, p677 * 185);
      v1044.bezierCurveTo(p677 * 326, p677 * 205, p677 * 314, p677 * 182, p677 * 316, p677 * 171);
      v1044.bezierCurveTo(p677 * 317, p677 * 150, p677 * 332, p677 * 143, p677 * 347, p677 * 147);
      v1044.bezierCurveTo(p677 * 361, p677 * 151, p677 * 366, p677 * 158, p677 * 367, p677 * 164);
      v1044.closePath();
      f84(v1044, p678[4]);
    }
    return v1043;
  }
  function f131(p681, p682) {
    var v1054 = document.createElement("canvas");
    var v1055 = v1054.getContext("2d");
    var v1056 = p681 * 220;
    var v1057 = p681 * 220;
    var v1058 = p681 * 16;
    v1054.width = v1056;
    v1054.height = v1057;
    v1055.translate(v1056 / 2, v1057 / 2);
    v1055.globalAlpha = 0.5;
    f89(v1055, 0, 0, v1058);
    f84(v1055, p682[0]);
    v1055.globalAlpha = 1;
    return v1054;
  }
  function f132(p683, p684, p685, p686) {
    var v1059 = document.createElement("canvas");
    var v1060 = v1059.getContext("2d");
    v1059.width = p683 * 121;
    v1059.height = p683 * 130;
    v1060.translate(0, p683 * 20);
    if (p685 == 1) {
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 6, p683 * 23);
      v1060.bezierCurveTo(p683 * 6, p683 * 46, p683 * 6, p683 * 46, p683 * 6, p683 * 69);
      v1060.bezierCurveTo(p683 * 21, p683 * 69, p683 * 21, p683 * 69, p683 * 36, p683 * 69);
      v1060.bezierCurveTo(p683 * 45.5, p683 * 78.5, p683 * 45.5, p683 * 78.5, p683 * 55, p683 * 88);
      v1060.bezierCurveTo(p683 * 55.5, p683 * 45.5, p683 * 55.5, p683 * 45.5, p683 * 56, p683 * 3);
      v1060.bezierCurveTo(p683 * 47, p683 * 14, p683 * 47, p683 * 14, p683 * 38, p683 * 25);
      v1060.bezierCurveTo(p683 * 23, p683 * 25, p683 * 23, p683 * 25, p683 * 6, p683 * 23);
      v1060.closePath();
      f84(v1060, vVUndefined20, p684[3], p683 * 13);
    }
    v1060.beginPath();
    v1060.lineCap = "round";
    v1060.lineJoin = "round";
    v1060.moveTo(p683 * 6, p683 * 23);
    v1060.bezierCurveTo(p683 * 6, p683 * 46, p683 * 6, p683 * 46, p683 * 6, p683 * 69);
    v1060.bezierCurveTo(p683 * 21, p683 * 69, p683 * 21, p683 * 69, p683 * 36, p683 * 69);
    v1060.bezierCurveTo(p683 * 45.5, p683 * 78.5, p683 * 45.5, p683 * 78.5, p683 * 55, p683 * 88);
    v1060.bezierCurveTo(p683 * 55.5, p683 * 45.5, p683 * 55.5, p683 * 45.5, p683 * 56, p683 * 3);
    v1060.bezierCurveTo(p683 * 47, p683 * 14, p683 * 47, p683 * 14, p683 * 38, p683 * 25);
    v1060.bezierCurveTo(p683 * 23, p683 * 25, p683 * 23, p683 * 25, p683 * 6, p683 * 23);
    v1060.closePath();
    f84(v1060, p684[1], p684[2], p683 * 4);
    if (p686 == 1) {
      v1060.translate(0, p683 * 5);
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 67, p683 * 30);
      v1060.bezierCurveTo(p683 * 73, p683 * 47, p683 * 69, p683 * 45, p683 * 67, p683 * 58);
      f84(v1060, vVUndefined19, p684[0], p683 * 10);
      v1060.translate(3, p683 * 0);
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 70, p683 * 17);
      v1060.bezierCurveTo(p683 * 83, p683 * 45, p683 * 76, p683 * 55, p683 * 70, p683 * 69);
      f84(v1060, undefined, p684[0], p683 * 10);
      v1060.translate(3, p683 * 0);
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 76, p683 * 8);
      v1060.bezierCurveTo(p683 * 88, p683 * 31, p683 * 89, p683 * 55, p683 * 76, p683 * 79);
      f84(v1060, undefined, p684[0], p683 * 10);
      if (p685 == 1) {
        v1060.translate(p683 * -6, p683 * -5);
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 67, p683 * 30);
        v1060.bezierCurveTo(p683 * 73, p683 * 47, p683 * 69, p683 * 45, p683 * 67, p683 * 58);
        f84(v1060, vVVVUndefined117, p684[3], p683 * 18);
        v1060.translate(3, p683 * 0);
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 70, p683 * 17);
        v1060.bezierCurveTo(p683 * 83, p683 * 45, p683 * 76, p683 * 55, p683 * 70, p683 * 69);
        f84(v1060, undefined, p684[3], p683 * 18);
        v1060.translate(3, p683 * 0);
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 76, p683 * 8);
        v1060.bezierCurveTo(p683 * 88, p683 * 31, p683 * 89, p683 * 55, p683 * 76, p683 * 79);
        f84(v1060, undefined, p684[3], p683 * 18);
        v1060.translate(-6, p683 * 0);
      } else {
        v1060.translate(p683 * -6, p683 * -5);
      }
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 67, p683 * 30);
      v1060.bezierCurveTo(p683 * 73, p683 * 47, p683 * 69, p683 * 45, p683 * 67, p683 * 58);
      f84(v1060, undefined, p684[2], p683 * 10);
      v1060.translate(3, p683 * 0);
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 70, p683 * 17);
      v1060.bezierCurveTo(p683 * 83, p683 * 45, p683 * 76, p683 * 55, p683 * 70, p683 * 69);
      f84(v1060, undefined, p684[2], p683 * 10);
      v1060.translate(3, p683 * 0);
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 76, p683 * 8);
      v1060.bezierCurveTo(p683 * 88, p683 * 31, p683 * 89, p683 * 55, p683 * 76, p683 * 79);
      f84(v1060, undefined, p684[2], p683 * 10);
    } else {
      if (p685 == 1) {
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 108, p683 * 27);
        v1060.bezierCurveTo(p683 * 94, p683 * 45.5, p683 * 94, p683 * 45.5, p683 * 80, p683 * 64);
        v1060.closePath();
        f84(v1060, undefined, p684[3], p683 * 18);
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 79, p683 * 30);
        v1060.bezierCurveTo(p683 * 93, p683 * 47, p683 * 93, p683 * 47, p683 * 107, p683 * 64);
        v1060.closePath();
        f84(v1060, vVUndefined20, p684[3], p683 * 18);
      } else {
        v1060.translate(0, p683 * -5);
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 108, p683 * 27);
        v1060.bezierCurveTo(p683 * 94, p683 * 45.5, p683 * 94, p683 * 45.5, p683 * 80, p683 * 64);
        v1060.closePath();
        f84(v1060, undefined, p684[0], p683 * 7);
        v1060.beginPath();
        v1060.lineCap = "round";
        v1060.lineJoin = "round";
        v1060.moveTo(p683 * 79, p683 * 30);
        v1060.bezierCurveTo(p683 * 93, p683 * 47, p683 * 93, p683 * 47, p683 * 107, p683 * 64);
        v1060.closePath();
        f84(v1060, vVUndefined22, p684[0], p683 * 7);
        v1060.translate(0, p683 * 5);
      }
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 108, p683 * 27);
      v1060.bezierCurveTo(p683 * 94, p683 * 45.5, p683 * 94, p683 * 45.5, p683 * 80, p683 * 64);
      v1060.closePath();
      f84(v1060, vVVVUndefined202, p684[2], p683 * 7);
      v1060.beginPath();
      v1060.lineCap = "round";
      v1060.lineJoin = "round";
      v1060.moveTo(p683 * 79, p683 * 30);
      v1060.bezierCurveTo(p683 * 93, p683 * 47, p683 * 93, p683 * 47, p683 * 107, p683 * 64);
      v1060.closePath();
      f84(v1060, vVVVUndefined2022, p684[2], p683 * 7);
    }
    return v1059;
  }
  const v1061 = 8;
  function f133(p687, p688, p689) {
    var v1062 = document.createElement("canvas");
    var v1063 = v1062.getContext("2d");
    v1062.width = p687 * 290;
    v1062.height = p687 * 525;
    v1063.globalAlpha = p688 ? 0.5 : 1;
    v1063.translate(p687 * 20, p687 * 20);
    v1063.translate(p687 * -20, p687 * -20);
    v1063.save();
    v1063.translate(p687 * 132, p687 * 423);
    v1063.rotate(0.16);
    f83(v1063, p687 * -14, p687 * -61, p687 * 28, p687 * 122, p687 * 10);
    v1063.restore();
    f84(v1063, p689[0]);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 100, p687 * 344);
    v1063.bezierCurveTo(p687 * 123, p687 * 214, p687 * 123, p687 * 214, p687 * 146, p687 * 84);
    v1063.bezierCurveTo(p687 * 166.5, p687 * 65, p687 * 166.5, p687 * 65, p687 * 187, p687 * 46);
    v1063.bezierCurveTo(p687 * 201, p687 * 71, p687 * 201, p687 * 71, p687 * 215, p687 * 96);
    v1063.bezierCurveTo(p687 * 199.5, p687 * 226.5, p687 * 199.5, p687 * 226.5, p687 * 184, p687 * 357);
    v1063.bezierCurveTo(p687 * 162.5, p687 * 362.5, p687 * 162.5, p687 * 362.5, p687 * 141, p687 * 368);
    v1063.closePath();
    f84(v1063, p689[0]);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 75, p687 * 328);
    v1063.bezierCurveTo(p687 * 88, p687 * 336.5, p687 * 88, p687 * 336.5, p687 * 101, p687 * 345);
    v1063.bezierCurveTo(p687 * 123.5, p687 * 337.5, p687 * 123.5, p687 * 337.5, p687 * 146, p687 * 330);
    v1063.bezierCurveTo(p687 * 165, p687 * 343.5, p687 * 165, p687 * 343.5, p687 * 184, p687 * 357);
    v1063.bezierCurveTo(p687 * 198.5, p687 * 353, p687 * 198.5, p687 * 353, p687 * 213, p687 * 349);
    v1063.bezierCurveTo(p687 * 200.5, p687 * 364.5, p687 * 200.5, p687 * 364.5, p687 * 188, p687 * 380);
    v1063.bezierCurveTo(p687 * 163, p687 * 380.5, p687 * 163, p687 * 380.5, p687 * 138, p687 * 381);
    v1063.bezierCurveTo(p687 * 112, p687 * 373.5, p687 * 112, p687 * 373.5, p687 * 86, p687 * 366);
    v1063.closePath();
    f84(v1063, p689[0]);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 121, p687 * 332);
    v1063.bezierCurveTo(p687 * 133.5, p687 * 327.5, p687 * 133.5, p687 * 327.5, p687 * 146, p687 * 323);
    v1063.bezierCurveTo(p687 * 157, p687 * 330.5, p687 * 157, p687 * 330.5, p687 * 168, p687 * 338);
    v1063.bezierCurveTo(p687 * 182.5, p687 * 219.5, p687 * 182.5, p687 * 219.5, p687 * 197, p687 * 101);
    v1063.bezierCurveTo(p687 * 190, p687 * 84.5, p687 * 190, p687 * 84.5, p687 * 183, p687 * 68);
    v1063.bezierCurveTo(p687 * 172.5, p687 * 81, p687 * 172.5, p687 * 81, p687 * 162, p687 * 94);
    v1063.closePath();
    f84(v1063, p689[0]);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 105, p687 * 463);
    v1063.bezierCurveTo(p687 * 124.5, p687 * 466, p687 * 124.5, p687 * 466, p687 * 144, p687 * 469);
    v1063.bezierCurveTo(p687 * 145.5, p687 * 478.5, p687 * 145.5, p687 * 478.5, p687 * 147, p687 * 488);
    v1063.bezierCurveTo(p687 * 133.5, p687 * 495.5, p687 * 133.5, p687 * 495.5, p687 * 120, p687 * 503);
    v1063.bezierCurveTo(p687 * 108.5, p687 * 492, p687 * 108.5, p687 * 492, p687 * 97, p687 * 481);
    v1063.closePath();
    f84(v1063, p689[0]);
    v1063.globalAlpha = 1;
    v1063.translate(p687 * -20, p687 * -20);
    v1063.save();
    v1063.translate(p687 * 132, p687 * 423);
    v1063.rotate(0.16);
    f83(v1063, p687 * -14, p687 * -61, p687 * 28, p687 * 122, p687 * 10);
    v1063.restore();
    f84(v1063, p689[4], p689[5], p687 * 12.5);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 100, p687 * 344);
    v1063.bezierCurveTo(p687 * 123, p687 * 214, p687 * 123, p687 * 214, p687 * 146, p687 * 84);
    v1063.bezierCurveTo(p687 * 166.5, p687 * 65, p687 * 166.5, p687 * 65, p687 * 187, p687 * 46);
    v1063.bezierCurveTo(p687 * 201, p687 * 71, p687 * 201, p687 * 71, p687 * 215, p687 * 96);
    v1063.bezierCurveTo(p687 * 199.5, p687 * 226.5, p687 * 199.5, p687 * 226.5, p687 * 184, p687 * 357);
    v1063.bezierCurveTo(p687 * 162.5, p687 * 362.5, p687 * 162.5, p687 * 362.5, p687 * 141, p687 * 368);
    v1063.closePath();
    f84(v1063, p689[1], p689[2], p687 * 12.5);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 75, p687 * 328);
    v1063.bezierCurveTo(p687 * 88, p687 * 336.5, p687 * 88, p687 * 336.5, p687 * 101, p687 * 345);
    v1063.bezierCurveTo(p687 * 123.5, p687 * 337.5, p687 * 123.5, p687 * 337.5, p687 * 146, p687 * 330);
    v1063.bezierCurveTo(p687 * 165, p687 * 343.5, p687 * 165, p687 * 343.5, p687 * 184, p687 * 357);
    v1063.bezierCurveTo(p687 * 198.5, p687 * 353, p687 * 198.5, p687 * 353, p687 * 213, p687 * 349);
    v1063.bezierCurveTo(p687 * 200.5, p687 * 364.5, p687 * 200.5, p687 * 364.5, p687 * 188, p687 * 380);
    v1063.bezierCurveTo(p687 * 163, p687 * 380.5, p687 * 163, p687 * 380.5, p687 * 138, p687 * 381);
    v1063.bezierCurveTo(p687 * 112, p687 * 373.5, p687 * 112, p687 * 373.5, p687 * 86, p687 * 366);
    v1063.closePath();
    f84(v1063, p689[1], p689[2], p687 * 12.5);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 121, p687 * 332);
    v1063.bezierCurveTo(p687 * 133.5, p687 * 327.5, p687 * 133.5, p687 * 327.5, p687 * 146, p687 * 323);
    v1063.bezierCurveTo(p687 * 157, p687 * 330.5, p687 * 157, p687 * 330.5, p687 * 168, p687 * 338);
    v1063.bezierCurveTo(p687 * 182.5, p687 * 219.5, p687 * 182.5, p687 * 219.5, p687 * 197, p687 * 101);
    v1063.bezierCurveTo(p687 * 190, p687 * 84.5, p687 * 190, p687 * 84.5, p687 * 183, p687 * 68);
    v1063.bezierCurveTo(p687 * 172.5, p687 * 81, p687 * 172.5, p687 * 81, p687 * 162, p687 * 94);
    v1063.closePath();
    f84(v1063, p689[3]);
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 105, p687 * 463);
    v1063.bezierCurveTo(p687 * 124.5, p687 * 466, p687 * 124.5, p687 * 466, p687 * 144, p687 * 469);
    v1063.bezierCurveTo(p687 * 145.5, p687 * 478.5, p687 * 145.5, p687 * 478.5, p687 * 147, p687 * 488);
    v1063.bezierCurveTo(p687 * 133.5, p687 * 495.5, p687 * 133.5, p687 * 495.5, p687 * 120, p687 * 503);
    v1063.bezierCurveTo(p687 * 108.5, p687 * 492, p687 * 108.5, p687 * 492, p687 * 97, p687 * 481);
    v1063.closePath();
    f84(v1063, p689[1], p689[2], p687 * 12.5);
    v1063.globalAlpha = 1;
    v1063.beginPath();
    v1063.lineCap = "round";
    v1063.lineJoin = "round";
    v1063.moveTo(p687 * 143, p687 * 346);
    v1063.bezierCurveTo(p687 * 125, p687 * 352, p687 * 125, p687 * 352, p687 * 107, p687 * 358);
    v1063.bezierCurveTo(p687 * 124, p687 * 363, p687 * 140, p687 * 368, p687 * 141, p687 * 368);
    v1063.bezierCurveTo(p687 * 156.5, p687 * 367, p687 * 156.5, p687 * 367, p687 * 172, p687 * 366);
    v1063.closePath();
    f84(v1063, p689[3]);
    return v1062;
  }
  function f134(p690, p691, p692) {
    var v1064 = document.createElement("canvas");
    var v1065 = v1064.getContext("2d");
    v1064.width = p690 * 100;
    v1064.height = p690 * 250;
    v1065.translate(p690 * -135, p690 * -75);
    v1065.globalAlpha = p691 ? 0.8 : 1;
    v1065.beginPath();
    v1065.lineCap = "round";
    v1065.lineJoin = "round";
    v1065.moveTo(p690 * 178.5, p690 * 238.03125);
    v1065.bezierCurveTo(p690 * 177, p690 * 175.03125, p690 * 177, p690 * 175.03125, p690 * 175.5, p690 * 112.03125);
    v1065.bezierCurveTo(p690 * 184.5, p690 * 100.53125, p690 * 184.5, p690 * 100.53125, p690 * 193.5, p690 * 89.03125);
    v1065.bezierCurveTo(p690 * 202, p690 * 100.03125, p690 * 202, p690 * 100.03125, p690 * 210.5, p690 * 111.03125);
    v1065.bezierCurveTo(p690 * 209.5, p690 * 174.03125, p690 * 209.5, p690 * 174.03125, p690 * 208.5, p690 * 237.03125);
    v1065.closePath();
    f84(v1065, p692[0]);
    v1065.beginPath();
    v1065.lineCap = "round";
    v1065.lineJoin = "round";
    v1065.moveTo(p690 * 155.5, p690 * 239.03125);
    v1065.bezierCurveTo(p690 * 194, p690 * 238.53125, p690 * 194, p690 * 238.53125, p690 * 232.5, p690 * 238.03125);
    v1065.bezierCurveTo(p690 * 232.5, p690 * 243.03125, p690 * 232.5, p690 * 243.03125, p690 * 232.5, p690 * 248.03125);
    v1065.bezierCurveTo(p690 * 194, p690 * 248.53125, p690 * 194, p690 * 248.53125, p690 * 155.5, p690 * 249.03125);
    v1065.closePath();
    f84(v1065, p692[0]);
    f89(v1065, p690 * 160.5, p690 * 243.03125, p690 * 7);
    f84(v1065, p692[0]);
    f89(v1065, p690 * 227.5, p690 * 242.03125, p690 * 7);
    f84(v1065, p692[0]);
    v1065.beginPath();
    v1065.lineCap = "round";
    v1065.lineJoin = "round";
    v1065.moveTo(p690 * 185.5, p690 * 253.03125);
    v1065.bezierCurveTo(p690 * 193.5, p690 * 253.03125, p690 * 193.5, p690 * 253.03125, p690 * 201.5, p690 * 253.03125);
    v1065.bezierCurveTo(p690 * 201.5, p690 * 276.03125, p690 * 201.5, p690 * 276.03125, p690 * 201.5, p690 * 299.03125);
    v1065.bezierCurveTo(p690 * 194.5, p690 * 299.03125, p690 * 194.5, p690 * 299.03125, p690 * 187.5, p690 * 299.03125);
    v1065.closePath();
    f84(v1065, p692[0], p692[0], p690 * 5);
    f89(v1065, p690 * 194, p690 * 298, p690 * 9);
    f84(v1065, p692[0], p692[0], p690 * 5);
    v1065.globalAlpha = 1;
    v1065.translate(p690 * -10, p690 * 10);
    v1065.beginPath();
    v1065.lineCap = "round";
    v1065.lineJoin = "round";
    v1065.moveTo(p690 * 178.5, p690 * 238.03125);
    v1065.bezierCurveTo(p690 * 177, p690 * 175.03125, p690 * 177, p690 * 175.03125, p690 * 175.5, p690 * 112.03125);
    v1065.bezierCurveTo(p690 * 184.5, p690 * 100.53125, p690 * 184.5, p690 * 100.53125, p690 * 193.5, p690 * 89.03125);
    v1065.bezierCurveTo(p690 * 202, p690 * 100.03125, p690 * 202, p690 * 100.03125, p690 * 210.5, p690 * 111.03125);
    v1065.bezierCurveTo(p690 * 209.5, p690 * 174.03125, p690 * 209.5, p690 * 174.03125, p690 * 208.5, p690 * 237.03125);
    v1065.closePath();
    f84(v1065, p692[3], p692[4], p690 * 5);
    v1065.beginPath();
    v1065.lineCap = "round";
    v1065.lineJoin = "round";
    v1065.moveTo(p690 * 155.5, p690 * 239.03125);
    v1065.bezierCurveTo(p690 * 194, p690 * 238.53125, p690 * 194, p690 * 238.53125, p690 * 232.5, p690 * 238.03125);
    v1065.bezierCurveTo(p690 * 232.5, p690 * 243.03125, p690 * 232.5, p690 * 243.03125, p690 * 232.5, p690 * 248.03125);
    v1065.bezierCurveTo(p690 * 194, p690 * 248.53125, p690 * 194, p690 * 248.53125, p690 * 155.5, p690 * 249.03125);
    v1065.closePath();
    f84(v1065, p692[1], p692[2], p690 * 5);
    f89(v1065, p690 * 160.5, p690 * 243.03125, p690 * 7);
    f84(v1065, p692[1], p692[2], p690 * 5);
    f89(v1065, p690 * 227.5, p690 * 242.03125, p690 * 7);
    f84(v1065, p692[1], p692[2], p690 * 5);
    v1065.beginPath();
    v1065.lineCap = "round";
    v1065.lineJoin = "round";
    v1065.moveTo(p690 * 185.5, p690 * 253.03125);
    v1065.bezierCurveTo(p690 * 193.5, p690 * 253.03125, p690 * 193.5, p690 * 253.03125, p690 * 201.5, p690 * 253.03125);
    v1065.bezierCurveTo(p690 * 201.5, p690 * 276.03125, p690 * 201.5, p690 * 276.03125, p690 * 201.5, p690 * 299.03125);
    v1065.bezierCurveTo(p690 * 194.5, p690 * 299.03125, p690 * 194.5, p690 * 299.03125, p690 * 187.5, p690 * 299.03125);
    v1065.closePath();
    f84(v1065, p692[1], p692[2], p690 * 7);
    f89(v1065, p690 * 194, p690 * 298, p690 * 9);
    f84(v1065, p692[1], p692[2], p690 * 7);
    return v1064;
  }
  function f135(p693, p694, p695) {
    var v1066 = document.createElement("canvas");
    var v1067 = v1066.getContext("2d");
    v1066.width = p693 * 104;
    v1066.height = p693 * 112;
    v1067.translate(0, p693 * 15);
    v1067.beginPath();
    v1067.lineCap = "round";
    v1067.lineJoin = "round";
    v1067.moveTo(p693 * 16, p693 * 44);
    v1067.bezierCurveTo(p693 * 30.5, p693 * 48, p693 * 30.5, p693 * 48, p693 * 45, p693 * 52);
    v1067.bezierCurveTo(p693 * 36.5, p693 * 63, p693 * 36.5, p693 * 63, p693 * 28, p693 * 74);
    v1067.bezierCurveTo(p693 * 32, p693 * 86, p693 * 61, p693 * 92, p693 * 78, p693 * 76);
    v1067.bezierCurveTo(p693 * 93, p693 * 62, p693 * 92, p693 * 40, p693 * 80, p693 * 26);
    v1067.bezierCurveTo(p693 * 65, p693 * 11, p693 * 42, p693 * 16, p693 * 34, p693 * 21);
    v1067.bezierCurveTo(p693 * 22, p693 * 27, p693 * 16, p693 * 39, p693 * 16, p693 * 44);
    v1067.closePath();
    f84(v1067, p695[0]);
    v1067.globalAlpha = 1;
    v1067.translate(0, p693 * -15);
    v1067.beginPath();
    v1067.lineCap = "round";
    v1067.lineJoin = "round";
    v1067.moveTo(p693 * 16, p693 * 44);
    v1067.bezierCurveTo(p693 * 30.5, p693 * 48, p693 * 30.5, p693 * 48, p693 * 45, p693 * 52);
    v1067.bezierCurveTo(p693 * 36.5, p693 * 63, p693 * 36.5, p693 * 63, p693 * 28, p693 * 74);
    v1067.bezierCurveTo(p693 * 32, p693 * 86, p693 * 61, p693 * 92, p693 * 78, p693 * 76);
    v1067.bezierCurveTo(p693 * 93, p693 * 62, p693 * 92, p693 * 40, p693 * 80, p693 * 26);
    v1067.bezierCurveTo(p693 * 65, p693 * 11, p693 * 42, p693 * 16, p693 * 34, p693 * 21);
    v1067.bezierCurveTo(p693 * 22, p693 * 27, p693 * 16, p693 * 39, p693 * 16, p693 * 44);
    v1067.closePath();
    f84(v1067, p695[1], p695[2], p693 * 8);
    return v1066;
  }
  function f136(p696, p697, p698) {
    var v1068 = document.createElement("canvas");
    var v1069 = v1068.getContext("2d");
    var v1070 = (v1077 = p696 * 450) / 2;
    var v1071 = (v1078 = p696 * 145) / 2;
    var v1072 = p696 * 10;
    var v1073 = p696 * 300;
    var v1074 = p696 * 30;
    var v1075 = v1073 / 2;
    var v1076 = v1074 / 2;
    if (p698) {
      var v1077 = p696 * 145;
      var v1078 = p696 * 450;
      v1068.width = v1077;
      v1068.height = v1078;
      v1069.rotate(Math.PI / 2);
      v1069.save();
      v1069.globalAlpha = 0.5;
      f83(v1069, p696 * 100, p696 * -110, v1073, v1074, v1072);
      f84(v1069, p697[0]);
      v1069.translate(p696 * 178, p696 * -98);
      f83(v1069, -v1075, -v1076 - p696 * 6, p696 * 100, p696 * 100, v1072);
      f84(v1069, p697[0]);
      v1069.translate(p696 * -50, p696 * 5);
      f83(v1069, p696 * 220, p696 * -15, p696 * 90, p696 * 90, v1072);
      f84(v1069, p697[0]);
      v1069.restore();
      v1069.save();
      v1069.globalAlpha = 1;
      v1069.translate(p696 * 250, p696 * -63);
      f83(v1069, -v1075 - p696 * 20, -v1076, v1073, v1074, v1072);
      f84(v1069, p697[1], p697[2], 4);
      v1069.translate(p696 * -70, p696 * -40);
      f83(v1069, -v1075 - p696 * 20, -v1076, p696 * 100, p696 * 100, v1072);
      f84(v1069, p697[3], p697[4], 4);
      v1069.translate(p696 * -70, p696 * 15);
      f83(v1069, p696 * 220, p696 * -22, p696 * 90, p696 * 90, v1072);
      f84(v1069, p697[3], p697[4], 4);
      f83(v1069, p696 * 230, p696 * -12, p696 * 55, p696 * 55, v1072);
      f84(v1069, p697[5]);
      v1069.translate(p696 * -70, 0);
      f83(v1069, p696 * -15, p696 * -2, p696 * 60, p696 * 60, v1072);
      f84(v1069, p697[5]);
      v1069.restore();
    } else {
      v1068.width = v1077;
      v1068.height = v1078;
      v1069.save();
      v1069.globalAlpha = 0.5;
      v1069.translate(v1070, v1071 + p696 * 10);
      f83(v1069, -v1075, -v1076, v1073, v1074, v1072);
      f84(v1069, p697[0]);
      v1069.translate(p696 * -65, p696 * -25);
      f83(v1069, -v1075, -v1076 - p696 * 6, p696 * 100, p696 * 100, p696 * 15);
      f84(v1069, p697[0]);
      v1069.translate(p696 * -35, p696 * -5);
      f83(v1069, p696 * 220, p696 * -15, p696 * 90, p696 * 90, p696 * 15);
      f84(v1069, p697[0]);
      v1069.restore();
      v1069.save();
      v1069.globalAlpha = 1;
      v1069.translate(p696 * 240, p696 * 70);
      f83(v1069, -v1075, -v1076, v1073, v1074, v1072);
      f84(v1069, p697[1], p697[2], 4);
      v1069.translate(p696 * -60, p696 * -40);
      f83(v1069, -v1075 - p696 * 20, -v1076, p696 * 100, p696 * 100, p696 * 15);
      f84(v1069, p697[3], p697[4], 4);
      v1069.translate(p696 * -55, p696 * 10);
      f83(v1069, p696 * 220, p696 * -22, p696 * 90, p696 * 90, p696 * 15);
      f84(v1069, p697[3], p697[4], 4);
      f83(v1069, p696 * 240, p696 * -12, p696 * 55, p696 * 55, p696 * 12);
      f84(v1069, p697[5]);
      v1069.translate(p696 * 45, p696 * 0);
      f83(v1069, p696 * -145, p696 * -2, p696 * 60, p696 * 60, p696 * 12);
      f84(v1069, p697[5]);
      v1069.restore();
    }
    return v1068;
  }
  function f137(p699, p700, p701) {
    var v1079 = document.createElement("canvas");
    var v1080 = v1079.getContext("2d");
    v1079.width = p699 * 290;
    v1079.height = p699 * 525;
    v1080.globalAlpha = p700 ? 0.5 : 1;
    v1080.translate(p699 * 20, p699 * 20);
    v1080.beginPath();
    v1080.lineCap = "round";
    v1080.lineJoin = "round";
    v1080.moveTo(p699 * 111, p699 * 351);
    v1080.bezierCurveTo(p699 * 129, p699 * 218, p699 * 129, p699 * 218, p699 * 147, p699 * 85);
    v1080.bezierCurveTo(p699 * 167, p699 * 65.5, p699 * 167, p699 * 65.5, p699 * 187, p699 * 46);
    v1080.bezierCurveTo(p699 * 201.5, p699 * 70.5, p699 * 201.5, p699 * 70.5, p699 * 216, p699 * 95);
    v1080.bezierCurveTo(p699 * 194.5, p699 * 227.5, p699 * 194.5, p699 * 227.5, p699 * 173, p699 * 360);
    v1080.closePath();
    f84(v1080, p701[0]);
    v1080.save();
    v1080.translate(p699 * 131, p699 * 425.5);
    v1080.rotate(0.16);
    f83(v1080, p699 * -14, p699 * -56.5, p699 * 28, p699 * 113, p699 * 8);
    v1080.restore();
    f84(v1080, p701[0]);
    f89(v1080, p699 * 122, p699 * 480, p699 * 18.439088914585774);
    f84(v1080, p701[0]);
    v1080.beginPath();
    v1080.lineCap = "round";
    v1080.lineJoin = "round";
    v1080.moveTo(p699 * 79, p699 * 371);
    v1080.bezierCurveTo(p699 * 131, p699 * 373, p699 * 145, p699 * 378, p699 * 197, p699 * 388);
    v1080.bezierCurveTo(p699 * 205, p699 * 382.5, p699 * 205, p699 * 382.5, p699 * 213, p699 * 377);
    v1080.bezierCurveTo(p699 * 167, p699 * 352, p699 * 117, p699 * 345, p699 * 69, p699 * 355);
    v1080.closePath();
    f84(v1080, p701[0]);
    v1080.globalAlpha = 1;
    v1080.translate(p699 * -20, p699 * -20);
    v1080.beginPath();
    v1080.lineCap = "round";
    v1080.lineJoin = "round";
    v1080.moveTo(p699 * 111, p699 * 351);
    v1080.bezierCurveTo(p699 * 129, p699 * 218, p699 * 129, p699 * 218, p699 * 147, p699 * 85);
    v1080.bezierCurveTo(p699 * 167, p699 * 65.5, p699 * 167, p699 * 65.5, p699 * 187, p699 * 46);
    v1080.bezierCurveTo(p699 * 201.5, p699 * 70.5, p699 * 201.5, p699 * 70.5, p699 * 216, p699 * 95);
    v1080.bezierCurveTo(p699 * 194.5, p699 * 227.5, p699 * 194.5, p699 * 227.5, p699 * 173, p699 * 360);
    v1080.closePath();
    f84(v1080, p701[1], p701[2], p699 * 12.5);
    v1080.save();
    v1080.translate(p699 * 131, p699 * 425.5);
    v1080.rotate(0.16);
    f83(v1080, p699 * -14, p699 * -56.5, p699 * 28, p699 * 113, p699 * 8);
    v1080.restore();
    f84(v1080, p701[4], p701[5], p699 * 12.5);
    f89(v1080, p699 * 122, p699 * 480, p699 * 18.439088914585774);
    f84(v1080, p701[4], p701[5], p699 * 12.5);
    v1080.beginPath();
    v1080.lineCap = "round";
    v1080.lineJoin = "round";
    v1080.moveTo(p699 * 79, p699 * 371);
    v1080.bezierCurveTo(p699 * 131, p699 * 373, p699 * 145, p699 * 378, p699 * 197, p699 * 388);
    v1080.bezierCurveTo(p699 * 205, p699 * 382.5, p699 * 205, p699 * 382.5, p699 * 213, p699 * 377);
    v1080.bezierCurveTo(p699 * 167, p699 * 352, p699 * 117, p699 * 345, p699 * 69, p699 * 355);
    v1080.closePath();
    f84(v1080, p701[4], p701[5], p699 * 12.5);
    v1080.beginPath();
    v1080.lineCap = "round";
    v1080.lineJoin = "round";
    v1080.moveTo(p699 * 128, p699 * 345);
    v1080.bezierCurveTo(p699 * 142, p699 * 345, p699 * 147, p699 * 346, p699 * 158, p699 * 349);
    v1080.bezierCurveTo(p699 * 177.5, p699 * 224.5, p699 * 177.5, p699 * 224.5, p699 * 197, p699 * 100);
    v1080.bezierCurveTo(p699 * 190.5, p699 * 84.5, p699 * 190.5, p699 * 84.5, p699 * 184, p699 * 69);
    v1080.bezierCurveTo(p699 * 173.5, p699 * 82, p699 * 173.5, p699 * 82, p699 * 163, p699 * 95);
    v1080.closePath();
    f84(v1080, p701[3]);
    return v1079;
  }
  function f138(p702, p703, p704) {
    var v1081 = document.createElement("canvas");
    var v1082 = v1081.getContext("2d");
    v1081.width = p702 * 424;
    v1081.height = p702 * 788;
    v1082.translate(p702 * 25, p702 * 25);
    v1082.globalAlpha = p703 ? 0.5 : 1;
    v1082.save();
    v1082.translate(p702 * 193.5, p702 * 602.5);
    v1082.rotate(-0.12);
    f83(v1082, p702 * -26.5, p702 * -97.5, p702 * 53, p702 * 195, p702 * 25);
    v1082.restore();
    f84(v1082, p704[0]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 137, p702 * 519);
    v1082.bezierCurveTo(p702 * 182, p702 * 513, p702 * 182, p702 * 513, p702 * 227, p702 * 507);
    v1082.bezierCurveTo(p702 * 214, p702 * 417, p702 * 189, p702 * 304, p702 * 221, p702 * 180);
    v1082.bezierCurveTo(p702 * 191, p702 * 126, p702 * 192, p702 * 105, p702 * 198, p702 * 64);
    v1082.bezierCurveTo(p702 * 123, p702 * 102, p702 * 99, p702 * 285, p702 * 137, p702 * 517);
    v1082.closePath();
    f84(v1082, p704[0]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 175, p702 * 119);
    v1082.bezierCurveTo(p702 * 176, p702 * 142, p702 * 184, p702 * 165, p702 * 197, p702 * 183);
    v1082.bezierCurveTo(p702 * 167, p702 * 325, p702 * 191, p702 * 405, p702 * 202, p702 * 502);
    v1082.bezierCurveTo(p702 * 180, p702 * 503, p702 * 180, p702 * 503, p702 * 158, p702 * 504);
    v1082.bezierCurveTo(p702 * 135, p702 * 396, p702 * 134, p702 * 185, p702 * 175, p702 * 119);
    v1082.closePath();
    f84(v1082, p704[0]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 110, p702 * 518);
    v1082.bezierCurveTo(p702 * 111.5, p702 * 533, p702 * 111.5, p702 * 533, p702 * 113, p702 * 548);
    v1082.bezierCurveTo(p702 * 162.5, p702 * 544, p702 * 162.5, p702 * 544, p702 * 212, p702 * 540);
    v1082.bezierCurveTo(p702 * 312, p702 * 535, p702 * 281, p702 * 665, p702 * 225, p702 * 665);
    v1082.bezierCurveTo(p702 * 227, p702 * 686.5, p702 * 227, p702 * 686.5, p702 * 229, p702 * 708);
    v1082.bezierCurveTo(p702 * 343, p702 * 684, p702 * 354, p702 * 496, p702 * 222, p702 * 498);
    v1082.bezierCurveTo(p702 * 165.5, p702 * 503, p702 * 165.5, p702 * 503, p702 * 109, p702 * 508);
    v1082.closePath();
    f84(v1082, p704[0]);
    f89(v1082, p702 * 204, p702 * 693, p702 * 36.013886210738214);
    f84(v1082, p704[0]);
    f89(v1082, p702 * 105, p702 * 518, p702 * 30);
    f84(v1082, p704[0]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 171, p702 * 535);
    v1082.bezierCurveTo(p702 * 139.5, p702 * 537.5, p702 * 139.5, p702 * 537.5, p702 * 108, p702 * 540);
    v1082.bezierCurveTo(p702 * 110, p702 * 527.5, p702 * 110, p702 * 527.5, p702 * 112, p702 * 515);
    v1082.bezierCurveTo(p702 * 148, p702 * 513, p702 * 148, p702 * 513, p702 * 184, p702 * 511);
    v1082.closePath();
    f84(v1082, p704[0]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 244, p702 * 669);
    v1082.bezierCurveTo(p702 * 248.5, p702 * 680, p702 * 248.5, p702 * 680, p702 * 253, p702 * 691);
    v1082.bezierCurveTo(p702 * 239.5, p702 * 697, p702 * 239.5, p702 * 697, p702 * 226, p702 * 703);
    v1082.bezierCurveTo(p702 * 223, p702 * 691.5, p702 * 223, p702 * 691.5, p702 * 220, p702 * 680);
    v1082.closePath();
    f84(v1082, p704[0]);
    v1082.translate(p702 * -25, p702 * -25);
    v1082.globalAlpha = 1;
    v1082.save();
    v1082.translate(p702 * 193.5, p702 * 602.5);
    v1082.rotate(-0.12);
    f83(v1082, p702 * -26.5, p702 * -97.5, p702 * 53, p702 * 195, p702 * 25);
    v1082.restore();
    f84(v1082, p704[1], p704[2], p702 * 16);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 137, p702 * 519);
    v1082.bezierCurveTo(p702 * 182, p702 * 513, p702 * 182, p702 * 513, p702 * 227, p702 * 507);
    v1082.bezierCurveTo(p702 * 214, p702 * 417, p702 * 189, p702 * 304, p702 * 221, p702 * 180);
    v1082.bezierCurveTo(p702 * 191, p702 * 126, p702 * 192, p702 * 105, p702 * 198, p702 * 64);
    v1082.bezierCurveTo(p702 * 123, p702 * 102, p702 * 99, p702 * 285, p702 * 137, p702 * 517);
    v1082.closePath();
    f84(v1082, p704[3], p704[4], p702 * 16);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 175, p702 * 119);
    v1082.bezierCurveTo(p702 * 176, p702 * 142, p702 * 184, p702 * 165, p702 * 197, p702 * 183);
    v1082.bezierCurveTo(p702 * 167, p702 * 325, p702 * 191, p702 * 405, p702 * 202, p702 * 502);
    v1082.bezierCurveTo(p702 * 180, p702 * 503, p702 * 180, p702 * 503, p702 * 158, p702 * 504);
    v1082.bezierCurveTo(p702 * 135, p702 * 396, p702 * 134, p702 * 185, p702 * 175, p702 * 119);
    v1082.closePath();
    f84(v1082, p704[5]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 110, p702 * 518);
    v1082.bezierCurveTo(p702 * 111.5, p702 * 533, p702 * 111.5, p702 * 533, p702 * 113, p702 * 548);
    v1082.bezierCurveTo(p702 * 162.5, p702 * 544, p702 * 162.5, p702 * 544, p702 * 212, p702 * 540);
    v1082.bezierCurveTo(p702 * 312, p702 * 535, p702 * 281, p702 * 665, p702 * 225, p702 * 665);
    v1082.bezierCurveTo(p702 * 227, p702 * 686.5, p702 * 227, p702 * 686.5, p702 * 229, p702 * 708);
    v1082.bezierCurveTo(p702 * 343, p702 * 684, p702 * 354, p702 * 496, p702 * 222, p702 * 498);
    v1082.bezierCurveTo(p702 * 165.5, p702 * 503, p702 * 165.5, p702 * 503, p702 * 109, p702 * 508);
    v1082.closePath();
    f84(v1082, p704[6], p704[4], p702 * 16);
    f89(v1082, p702 * 204, p702 * 693, p702 * 36.013886210738214);
    f84(v1082, p704[6], p704[4], p702 * 16);
    f89(v1082, p702 * 105, p702 * 518, p702 * 30);
    f84(v1082, p704[6], p704[4], p702 * 16);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 171, p702 * 535);
    v1082.bezierCurveTo(p702 * 139.5, p702 * 537.5, p702 * 139.5, p702 * 537.5, p702 * 108, p702 * 540);
    v1082.bezierCurveTo(p702 * 110, p702 * 527.5, p702 * 110, p702 * 527.5, p702 * 112, p702 * 515);
    v1082.bezierCurveTo(p702 * 148, p702 * 513, p702 * 148, p702 * 513, p702 * 184, p702 * 511);
    v1082.closePath();
    f84(v1082, p704[6]);
    v1082.beginPath();
    v1082.lineCap = "round";
    v1082.lineJoin = "round";
    v1082.moveTo(p702 * 244, p702 * 669);
    v1082.bezierCurveTo(p702 * 248.5, p702 * 680, p702 * 248.5, p702 * 680, p702 * 253, p702 * 691);
    v1082.bezierCurveTo(p702 * 239.5, p702 * 697, p702 * 239.5, p702 * 697, p702 * 226, p702 * 703);
    v1082.bezierCurveTo(p702 * 223, p702 * 691.5, p702 * 223, p702 * 691.5, p702 * 220, p702 * 680);
    v1082.closePath();
    f84(v1082, p704[6]);
    f89(v1082, p702 * 204, p702 * 693, p702 * 17.029386365926403);
    f84(v1082, p704[7]);
    f89(v1082, p702 * 106, p702 * 518, p702 * 12);
    f84(v1082, p704[7]);
    return v1081;
  }
  function f139(p705, p706, p707) {
    var v1083 = document.createElement("canvas");
    var v1084 = v1083.getContext("2d");
    v1083.width = p705 * 290;
    v1083.height = p705 * 525;
    v1084.globalAlpha = p706 ? 0.5 : 1;
    v1084.translate(p705 * 20, p705 * 20);
    v1084.beginPath();
    v1084.lineCap = "round";
    v1084.lineJoin = "round";
    v1084.moveTo(p705 * 111, p705 * 351);
    v1084.bezierCurveTo(p705 * 128.5, p705 * 218.5, p705 * 128.5, p705 * 218.5, p705 * 146, p705 * 86);
    v1084.bezierCurveTo(p705 * 166.5, p705 * 66.5, p705 * 166.5, p705 * 66.5, p705 * 187, p705 * 47);
    v1084.bezierCurveTo(p705 * 201, p705 * 71.5, p705 * 201, p705 * 71.5, p705 * 215, p705 * 96);
    v1084.bezierCurveTo(p705 * 193, p705 * 228.5, p705 * 193, p705 * 228.5, p705 * 171, p705 * 361);
    v1084.closePath();
    f84(v1084, p707[0]);
    v1084.save();
    v1084.translate(p705 * 129.5, p705 * 424);
    v1084.rotate(0.16);
    f83(v1084, p705 * -15.5, p705 * -63, p705 * 31, p705 * 126, p705 * 10);
    v1084.restore();
    f84(v1084, p707[0]);
    f89(v1084, p705 * 121, p705 * 480, p705 * 20.396078054371138);
    f84(v1084, p707[0]);
    v1084.beginPath();
    v1084.lineCap = "round";
    v1084.lineJoin = "round";
    v1084.moveTo(p705 * 90, p705 * 311);
    v1084.bezierCurveTo(p705 * 95, p705 * 324, p705 * 95, p705 * 324, p705 * 100, p705 * 337);
    v1084.bezierCurveTo(p705 * 141.5, p705 * 345.5, p705 * 141.5, p705 * 345.5, p705 * 183, p705 * 354);
    v1084.bezierCurveTo(p705 * 193.5, p705 * 342.5, p705 * 193.5, p705 * 342.5, p705 * 204, p705 * 331);
    v1084.bezierCurveTo(p705 * 202, p705 * 354, p705 * 202, p705 * 354, p705 * 200, p705 * 377);
    v1084.bezierCurveTo(p705 * 147, p705 * 388, p705 * 106, p705 * 371, p705 * 79, p705 * 356);
    v1084.closePath();
    f84(v1084, p707[0]);
    v1084.globalAlpha = 1;
    v1084.translate(p705 * -20, p705 * -20);
    v1084.beginPath();
    v1084.lineCap = "round";
    v1084.lineJoin = "round";
    v1084.moveTo(p705 * 111, p705 * 351);
    v1084.bezierCurveTo(p705 * 128.5, p705 * 218.5, p705 * 128.5, p705 * 218.5, p705 * 146, p705 * 86);
    v1084.bezierCurveTo(p705 * 166.5, p705 * 66.5, p705 * 166.5, p705 * 66.5, p705 * 187, p705 * 47);
    v1084.bezierCurveTo(p705 * 201, p705 * 71.5, p705 * 201, p705 * 71.5, p705 * 215, p705 * 96);
    v1084.bezierCurveTo(p705 * 193, p705 * 228.5, p705 * 193, p705 * 228.5, p705 * 171, p705 * 361);
    v1084.closePath();
    f84(v1084, p707[1], p707[2], p705 * 12.5);
    v1084.save();
    v1084.translate(p705 * 129.5, p705 * 424);
    v1084.rotate(0.16);
    f83(v1084, p705 * -15.5, p705 * -63, p705 * 31, p705 * 126, p705 * 10);
    v1084.restore();
    f84(v1084, p707[4], p707[5], p705 * 12.5);
    f89(v1084, p705 * 121, p705 * 480, p705 * 20.396078054371138);
    f84(v1084, p707[4], p707[5], p705 * 12.5);
    v1084.beginPath();
    v1084.lineCap = "round";
    v1084.lineJoin = "round";
    v1084.moveTo(p705 * 90, p705 * 311);
    v1084.bezierCurveTo(p705 * 95, p705 * 324, p705 * 95, p705 * 324, p705 * 100, p705 * 337);
    v1084.bezierCurveTo(p705 * 141.5, p705 * 345.5, p705 * 141.5, p705 * 345.5, p705 * 183, p705 * 354);
    v1084.bezierCurveTo(p705 * 193.5, p705 * 342.5, p705 * 193.5, p705 * 342.5, p705 * 204, p705 * 331);
    v1084.bezierCurveTo(p705 * 202, p705 * 354, p705 * 202, p705 * 354, p705 * 200, p705 * 377);
    v1084.bezierCurveTo(p705 * 147, p705 * 388, p705 * 106, p705 * 371, p705 * 79, p705 * 356);
    v1084.closePath();
    f84(v1084, p707[1], p707[2], p705 * 12.5);
    return v1083;
  }
  function f140(p708, p709, p710) {
    var v1085 = document.createElement("canvas");
    var v1086 = v1085.getContext("2d");
    v1085.width = p708 * 350;
    v1085.height = p708 * 140;
    v1086.translate(p708 * -50, p708 * -150);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 184.5, p708 * 222.0625);
    v1086.bezierCurveTo(p708 * 185.5, p708 * 184.0625, p708 * 302.5, p708 * 171.0625, p708 * 313.5, p708 * 222.0625);
    v1086.bezierCurveTo(p708 * 330.5, p708 * 263.0625, p708 * 181.5, p708 * 274.0625, p708 * 184.5, p708 * 223.0625);
    v1086.closePath();
    f84(v1086, p710[0], p710[1], p708 * 8);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 131.5, p708 * 241.0625);
    v1086.bezierCurveTo(p708 * 144.5, p708 * 278.0625, p708 * 270.5, p708 * 209.0625, p708 * 228.5, p708 * 174.0625);
    v1086.bezierCurveTo(p708 * 196.5, p708 * 147.0625, p708 * 117.5, p708 * 196.0625, p708 * 131.5, p708 * 240.0625);
    v1086.closePath();
    f84(v1086, p710[0], p710[1], p708 * 8);
    f89(v1086, p708 * 270.5, p708 * 225.0625, p708 * 15.811388300841896);
    f84(v1086, p710[2]);
    f89(v1086, p708 * 243.5, p708 * 225.0625, p708 * 6.082762530298219);
    f84(v1086, p710[2]);
    f89(v1086, p708 * 255.5, p708 * 210.0625, p708 * 10.816653826391969);
    f84(v1086, p710[2]);
    f89(v1086, p708 * 167.5, p708 * 215.0625, p708 * 15.297058540778355);
    f84(v1086, p710[2]);
    f89(v1086, p708 * 176.5, p708 * 204.0625, p708 * 7.280109889280518);
    f84(v1086, p710[2]);
    f89(v1086, p708 * 206.5, p708 * 189.0625, p708 * 7.280109889280518);
    f84(v1086, p710[2]);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 151.5, p708 * 212.0625);
    v1086.bezierCurveTo(p708 * 161.5, p708 * 204.0625, p708 * 173.5, p708 * 214.0625, p708 * 158.5, p708 * 221.0625);
    v1086.bezierCurveTo(p708 * 145.5, p708 * 228.0625, p708 * 144.5, p708 * 216.0625, p708 * 151.5, p708 * 212.0625);
    v1086.closePath();
    f84(v1086, p710[3], p710[4], p708 * 4);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 194.5, p708 * 209.0625);
    v1086.bezierCurveTo(p708 * 205.5, p708 * 202.0625, p708 * 215.5, p708 * 207.0625, p708 * 199.5, p708 * 217.0625);
    v1086.bezierCurveTo(p708 * 187.5, p708 * 224.0625, p708 * 182.5, p708 * 217.0625, p708 * 194.5, p708 * 209.0625);
    v1086.closePath();
    f84(v1086, p710[3], p710[4], p708 * 4);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 188.5, p708 * 183.0625);
    v1086.bezierCurveTo(p708 * 201.5, p708 * 176.0625, p708 * 213.5, p708 * 187.0625, p708 * 193.5, p708 * 193.0625);
    v1086.bezierCurveTo(p708 * 185.5, p708 * 194.0625, p708 * 175.5, p708 * 189.0625, p708 * 188.5, p708 * 183.0625);
    v1086.closePath();
    f84(v1086, p710[3], p710[4], p708 * 4);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 261.5, p708 * 202.0625);
    v1086.bezierCurveTo(p708 * 274.5, p708 * 201.0625, p708 * 282.5, p708 * 214.0625, p708 * 261.5, p708 * 215.0625);
    v1086.bezierCurveTo(p708 * 246.5, p708 * 214.0625, p708 * 248.5, p708 * 203.0625, p708 * 261.5, p708 * 202.0625);
    v1086.closePath();
    f84(v1086, p710[3], p710[4], p708 * 4);
    v1086.beginPath();
    v1086.lineCap = "round";
    v1086.lineJoin = "round";
    v1086.moveTo(p708 * 240.5, p708 * 231.0625);
    v1086.bezierCurveTo(p708 * 255.5, p708 * 231.0625, p708 * 254.5, p708 * 243.0625, p708 * 240.5, p708 * 242.0625);
    v1086.bezierCurveTo(p708 * 225.5, p708 * 239.0625, p708 * 225.5, p708 * 232.0625, p708 * 240.5, p708 * 231.0625);
    v1086.closePath();
    f84(v1086, p710[3], p710[4], p708 * 4);
    return v1085;
  }
  function f141(p711, p712) {
    var v1087 = document.createElement("canvas");
    var v1088 = v1087.getContext("2d");
    var v1089 = Math.max(p712.width, p711.width);
    var v1090 = Math.max(p712.height, p711.height);
    v1087.width = v1089;
    v1087.height = v1090;
    v1088.drawImage(p711, (v1089 - p711.width) / 2, (v1090 - p711.height) / 2);
    v1088.drawImage(p712, (v1089 - p712.width) / 2, (v1090 - p712.height) / 2);
    return v1087;
  }
  function f142(p713, p714, p715) {
    var v1091 = document.createElement("canvas");
    var v1092 = v1091.getContext("2d");
    v1091.width = p713 * 321;
    v1091.height = p713 * 284;
    v1092.translate(p713 * 100, p713 * 30);
    v1092.translate(p713 * 5, p713 * 10);
    v1092.globalAlpha = p714 ? 0.5 : 1;
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 58, p713 * 33);
    v1092.bezierCurveTo(p713 * 81, p713 * 22, p713 * 93, p713 * 26, p713 * 123, p713 * 47);
    v1092.bezierCurveTo(p713 * 160, p713 * 73, p713 * 169, p713 * 80, p713 * 191, p713 * 99);
    v1092.bezierCurveTo(p713 * 202, p713 * 107, p713 * 211, p713 * 118, p713 * 195, p713 * 151);
    v1092.bezierCurveTo(p713 * 181, p713 * 183, p713 * 157, p713 * 192, p713 * 129, p713 * 174);
    v1092.bezierCurveTo(p713 * 78, p713 * 140, p713 * 68, p713 * 129, p713 * 37, p713 * 94);
    v1092.bezierCurveTo(p713 * 15, p713 * 68, p713 * 25, p713 * 52, p713 * 56, p713 * 34);
    v1092.closePath();
    f84(v1092, p715[0]);
    v1092.globalAlpha = 1;
    v1092.translate(p713 * -5, p713 * -10);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 58, p713 * 33);
    v1092.bezierCurveTo(p713 * 81, p713 * 22, p713 * 93, p713 * 26, p713 * 123, p713 * 47);
    v1092.bezierCurveTo(p713 * 160, p713 * 73, p713 * 169, p713 * 80, p713 * 191, p713 * 99);
    v1092.bezierCurveTo(p713 * 202, p713 * 107, p713 * 211, p713 * 118, p713 * 195, p713 * 151);
    v1092.bezierCurveTo(p713 * 181, p713 * 183, p713 * 157, p713 * 192, p713 * 129, p713 * 174);
    v1092.bezierCurveTo(p713 * 78, p713 * 140, p713 * 68, p713 * 129, p713 * 37, p713 * 94);
    v1092.bezierCurveTo(p713 * 15, p713 * 68, p713 * 25, p713 * 52, p713 * 56, p713 * 34);
    v1092.closePath();
    f84(v1092, p715[1], p715[2], p713 * 10);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 167, p713 * 120);
    v1092.bezierCurveTo(p713 * 196, p713 * 106, p713 * 207, p713 * 111, p713 * 199, p713 * 135);
    v1092.bezierCurveTo(p713 * 185, p713 * 172, p713 * 166, p713 * 187, p713 * 145, p713 * 179);
    v1092.bezierCurveTo(p713 * 118, p713 * 166, p713 * 127, p713 * 139, p713 * 166, p713 * 121);
    v1092.closePath();
    f84(v1092, p715[3]);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 25, p713 * 64);
    v1092.bezierCurveTo(p713 * 59, p713 * 96, p713 * 97, p713 * 128, p713 * 129, p713 * 151);
    v1092.bezierCurveTo(p713 * 126, p713 * 163, p713 * 134, p713 * 174, p713 * 142, p713 * 180);
    v1092.bezierCurveTo(p713 * 114, p713 * 170, p713 * 68, p713 * 134, p713 * 31, p713 * 85);
    v1092.bezierCurveTo(p713 * 24, p713 * 71, p713 * 24, p713 * 70, p713 * 25, p713 * 65);
    v1092.closePath();
    f84(v1092, p715[2]);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 161, p713 * 141);
    v1092.bezierCurveTo(p713 * 181, p713 * 131, p713 * 186, p713 * 135, p713 * 173, p713 * 152);
    v1092.bezierCurveTo(p713 * 163, p713 * 163, p713 * 155, p713 * 161, p713 * 151, p713 * 150);
    v1092.bezierCurveTo(p713 * 147, p713 * 140, p713 * 155, p713 * 131, p713 * 175, p713 * 125);
    v1092.bezierCurveTo(p713 * 190, p713 * 120, p713 * 196, p713 * 121, p713 * 189, p713 * 143);
    v1092.bezierCurveTo(p713 * 182, p713 * 167, p713 * 169, p713 * 174, p713 * 157, p713 * 174);
    v1092.bezierCurveTo(p713 * 138, p713 * 172, p713 * 139, p713 * 162, p713 * 140, p713 * 156);
    f84(v1092, vVUndefined11, p715[4], p713 * 4);
    v1092.translate(p713 * -100, p713 * -30);
    v1092.translate(p713 * 10, p713 * 70);
    v1092.translate(p713 * 5, p713 * 10);
    v1092.globalAlpha = p714 ? 0.5 : 1;
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 58, p713 * 33);
    v1092.bezierCurveTo(p713 * 81, p713 * 22, p713 * 93, p713 * 26, p713 * 123, p713 * 47);
    v1092.bezierCurveTo(p713 * 160, p713 * 73, p713 * 169, p713 * 80, p713 * 191, p713 * 99);
    v1092.bezierCurveTo(p713 * 202, p713 * 107, p713 * 211, p713 * 118, p713 * 195, p713 * 151);
    v1092.bezierCurveTo(p713 * 181, p713 * 183, p713 * 157, p713 * 192, p713 * 129, p713 * 174);
    v1092.bezierCurveTo(p713 * 78, p713 * 140, p713 * 68, p713 * 129, p713 * 37, p713 * 94);
    v1092.bezierCurveTo(p713 * 15, p713 * 68, p713 * 25, p713 * 52, p713 * 56, p713 * 34);
    v1092.closePath();
    f84(v1092, p715[0]);
    v1092.globalAlpha = 1;
    v1092.translate(p713 * -5, p713 * -10);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 58, p713 * 33);
    v1092.bezierCurveTo(p713 * 81, p713 * 22, p713 * 93, p713 * 26, p713 * 123, p713 * 47);
    v1092.bezierCurveTo(p713 * 160, p713 * 73, p713 * 169, p713 * 80, p713 * 191, p713 * 99);
    v1092.bezierCurveTo(p713 * 202, p713 * 107, p713 * 211, p713 * 118, p713 * 195, p713 * 151);
    v1092.bezierCurveTo(p713 * 181, p713 * 183, p713 * 157, p713 * 192, p713 * 129, p713 * 174);
    v1092.bezierCurveTo(p713 * 78, p713 * 140, p713 * 68, p713 * 129, p713 * 37, p713 * 94);
    v1092.bezierCurveTo(p713 * 15, p713 * 68, p713 * 25, p713 * 52, p713 * 56, p713 * 34);
    v1092.closePath();
    f84(v1092, p715[1], p715[2], p713 * 10);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 167, p713 * 120);
    v1092.bezierCurveTo(p713 * 196, p713 * 106, p713 * 207, p713 * 111, p713 * 199, p713 * 135);
    v1092.bezierCurveTo(p713 * 185, p713 * 172, p713 * 166, p713 * 187, p713 * 145, p713 * 179);
    v1092.bezierCurveTo(p713 * 118, p713 * 166, p713 * 127, p713 * 139, p713 * 166, p713 * 121);
    v1092.closePath();
    f84(v1092, p715[3]);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 25, p713 * 64);
    v1092.bezierCurveTo(p713 * 59, p713 * 96, p713 * 97, p713 * 128, p713 * 129, p713 * 151);
    v1092.bezierCurveTo(p713 * 126, p713 * 163, p713 * 134, p713 * 174, p713 * 142, p713 * 180);
    v1092.bezierCurveTo(p713 * 114, p713 * 170, p713 * 68, p713 * 134, p713 * 31, p713 * 85);
    v1092.bezierCurveTo(p713 * 24, p713 * 71, p713 * 24, p713 * 70, p713 * 25, p713 * 65);
    v1092.closePath();
    f84(v1092, p715[2]);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 161, p713 * 141);
    v1092.bezierCurveTo(p713 * 181, p713 * 131, p713 * 186, p713 * 135, p713 * 173, p713 * 152);
    v1092.bezierCurveTo(p713 * 163, p713 * 163, p713 * 155, p713 * 161, p713 * 151, p713 * 150);
    v1092.bezierCurveTo(p713 * 147, p713 * 140, p713 * 155, p713 * 131, p713 * 175, p713 * 125);
    v1092.bezierCurveTo(p713 * 190, p713 * 120, p713 * 196, p713 * 121, p713 * 189, p713 * 143);
    v1092.bezierCurveTo(p713 * 182, p713 * 167, p713 * 169, p713 * 174, p713 * 157, p713 * 174);
    v1092.bezierCurveTo(p713 * 138, p713 * 172, p713 * 139, p713 * 162, p713 * 140, p713 * 156);
    f84(v1092, undefined, p715[4], p713 * 4);
    v1092.translate(p713 * 20, p713 * -80);
    v1092.translate(p713 * 5, p713 * 10);
    v1092.globalAlpha = p714 ? 0.5 : 1;
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 58, p713 * 33);
    v1092.bezierCurveTo(p713 * 81, p713 * 22, p713 * 93, p713 * 26, p713 * 123, p713 * 47);
    v1092.bezierCurveTo(p713 * 160, p713 * 73, p713 * 169, p713 * 80, p713 * 191, p713 * 99);
    v1092.bezierCurveTo(p713 * 202, p713 * 107, p713 * 211, p713 * 118, p713 * 195, p713 * 151);
    v1092.bezierCurveTo(p713 * 181, p713 * 183, p713 * 157, p713 * 192, p713 * 129, p713 * 174);
    v1092.bezierCurveTo(p713 * 78, p713 * 140, p713 * 68, p713 * 129, p713 * 37, p713 * 94);
    v1092.bezierCurveTo(p713 * 15, p713 * 68, p713 * 25, p713 * 52, p713 * 56, p713 * 34);
    v1092.closePath();
    f84(v1092, p715[0]);
    v1092.globalAlpha = 1;
    v1092.translate(p713 * -5, p713 * -10);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 58, p713 * 33);
    v1092.bezierCurveTo(p713 * 81, p713 * 22, p713 * 93, p713 * 26, p713 * 123, p713 * 47);
    v1092.bezierCurveTo(p713 * 160, p713 * 73, p713 * 169, p713 * 80, p713 * 191, p713 * 99);
    v1092.bezierCurveTo(p713 * 202, p713 * 107, p713 * 211, p713 * 118, p713 * 195, p713 * 151);
    v1092.bezierCurveTo(p713 * 181, p713 * 183, p713 * 157, p713 * 192, p713 * 129, p713 * 174);
    v1092.bezierCurveTo(p713 * 78, p713 * 140, p713 * 68, p713 * 129, p713 * 37, p713 * 94);
    v1092.bezierCurveTo(p713 * 15, p713 * 68, p713 * 25, p713 * 52, p713 * 56, p713 * 34);
    v1092.closePath();
    f84(v1092, p715[1], p715[2], p713 * 10);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 167, p713 * 120);
    v1092.bezierCurveTo(p713 * 196, p713 * 106, p713 * 207, p713 * 111, p713 * 199, p713 * 135);
    v1092.bezierCurveTo(p713 * 185, p713 * 172, p713 * 166, p713 * 187, p713 * 145, p713 * 179);
    v1092.bezierCurveTo(p713 * 118, p713 * 166, p713 * 127, p713 * 139, p713 * 166, p713 * 121);
    v1092.closePath();
    f84(v1092, p715[3]);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 25, p713 * 64);
    v1092.bezierCurveTo(p713 * 59, p713 * 96, p713 * 97, p713 * 128, p713 * 129, p713 * 151);
    v1092.bezierCurveTo(p713 * 126, p713 * 163, p713 * 134, p713 * 174, p713 * 142, p713 * 180);
    v1092.bezierCurveTo(p713 * 114, p713 * 170, p713 * 68, p713 * 134, p713 * 31, p713 * 85);
    v1092.bezierCurveTo(p713 * 24, p713 * 71, p713 * 24, p713 * 70, p713 * 25, p713 * 65);
    v1092.closePath();
    f84(v1092, p715[2]);
    v1092.beginPath();
    v1092.lineCap = "round";
    v1092.lineJoin = "round";
    v1092.moveTo(p713 * 161, p713 * 141);
    v1092.bezierCurveTo(p713 * 181, p713 * 131, p713 * 186, p713 * 135, p713 * 173, p713 * 152);
    v1092.bezierCurveTo(p713 * 163, p713 * 163, p713 * 155, p713 * 161, p713 * 151, p713 * 150);
    v1092.bezierCurveTo(p713 * 147, p713 * 140, p713 * 155, p713 * 131, p713 * 175, p713 * 125);
    v1092.bezierCurveTo(p713 * 190, p713 * 120, p713 * 196, p713 * 121, p713 * 189, p713 * 143);
    v1092.bezierCurveTo(p713 * 182, p713 * 167, p713 * 169, p713 * 174, p713 * 157, p713 * 174);
    v1092.bezierCurveTo(p713 * 138, p713 * 172, p713 * 139, p713 * 162, p713 * 140, p713 * 156);
    f84(v1092, vVVUndefined20, p715[4], p713 * 4);
    return v1091;
  }
  function f143(p716, p717, p718) {
    var v1093 = document.createElement("canvas");
    var v1094 = v1093.getContext("2d");
    v1093.width = p716 * 217;
    v1093.height = p716 * 215;
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 79, p716 * 113);
    v1094.bezierCurveTo(p716 * 135, p716 * 98, p716 * 136, p716 * 96, p716 * 142, p716 * 97);
    v1094.bezierCurveTo(p716 * 167, p716 * 106, p716 * 167, p716 * 106, p716 * 171, p716 * 109);
    v1094.bezierCurveTo(p716 * 173, p716 * 120, p716 * 173, p716 * 134, p716 * 169, p716 * 141);
    v1094.bezierCurveTo(p716 * 140, p716 * 149.5, p716 * 140, p716 * 149.5, p716 * 111, p716 * 158);
    v1094.closePath();
    f84(v1094, p718[1], p718[2], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 154, p716 * 103);
    v1094.bezierCurveTo(p716 * 167, p716 * 91, p716 * 175, p716 * 87, p716 * 176, p716 * 94);
    v1094.bezierCurveTo(p716 * 175, p716 * 102, p716 * 176, p716 * 102, p716 * 186, p716 * 103);
    v1094.bezierCurveTo(p716 * 191, p716 * 104, p716 * 192, p716 * 105, p716 * 185, p716 * 116);
    v1094.bezierCurveTo(p716 * 183, p716 * 120, p716 * 191, p716 * 124, p716 * 189, p716 * 129);
    v1094.bezierCurveTo(p716 * 185, p716 * 139, p716 * 178, p716 * 134, p716 * 166, p716 * 131);
    v1094.closePath();
    f84(v1094, p718[1], p718[2], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 60, p716 * 46);
    v1094.bezierCurveTo(p716 * 60, p716 * 34, p716 * 60, p716 * 29, p716 * 56, p716 * 19);
    v1094.bezierCurveTo(p716 * 52, p716 * 12, p716 * 52, p716 * 16, p716 * 49, p716 * 24);
    v1094.bezierCurveTo(p716 * 48, p716 * 27, p716 * 46, p716 * 28, p716 * 39, p716 * 27);
    v1094.bezierCurveTo(p716 * 33, p716 * 26, p716 * 34, p716 * 31, p716 * 35, p716 * 37);
    v1094.bezierCurveTo(p716 * 36, p716 * 41, p716 * 27, p716 * 46, p716 * 29, p716 * 52);
    v1094.bezierCurveTo(p716 * 36, p716 * 55, p716 * 35, p716 * 56, p716 * 31, p716 * 59);
    v1094.bezierCurveTo(p716 * 27, p716 * 65, p716 * 32, p716 * 64, p716 * 35, p716 * 62);
    v1094.closePath();
    f84(v1094, p718[4], p718[5], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 46, p716 * 50);
    v1094.bezierCurveTo(p716 * 51, p716 * 35, p716 * 70, p716 * 32, p716 * 78, p716 * 29);
    v1094.bezierCurveTo(p716 * 84, p716 * 27, p716 * 113, p716 * 36, p716 * 127, p716 * 41);
    v1094.bezierCurveTo(p716 * 140, p716 * 47, p716 * 147, p716 * 69, p716 * 137, p716 * 73);
    v1094.bezierCurveTo(p716 * 124, p716 * 92, p716 * 117, p716 * 92, p716 * 109, p716 * 94);
    v1094.bezierCurveTo(p716 * 101, p716 * 96, p716 * 89, p716 * 92, p716 * 65, p716 * 83);
    v1094.bezierCurveTo(p716 * 54, p716 * 80, p716 * 46, p716 * 58, p716 * 46, p716 * 51);
    v1094.closePath();
    f84(v1094, p718[4], p718[5], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 51, p716 * 40);
    v1094.bezierCurveTo(p716 * 49, p716 * 34, p716 * 49, p716 * 34, p716 * 47, p716 * 28);
    v1094.bezierCurveTo(p716 * 38, p716 * 28, p716 * 34, p716 * 27, p716 * 37, p716 * 37);
    v1094.bezierCurveTo(p716 * 43, p716 * 40.5, p716 * 43, p716 * 40.5, p716 * 49, p716 * 44);
    v1094.closePath();
    f84(v1094, p718[7]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 29, p716 * 48);
    v1094.bezierCurveTo(p716 * 38, p716 * 49, p716 * 38, p716 * 49, p716 * 47, p716 * 50);
    v1094.bezierCurveTo(p716 * 46.5, p716 * 51.5, p716 * 46.5, p716 * 51.5, p716 * 46, p716 * 53);
    v1094.bezierCurveTo(p716 * 40, p716 * 53.5, p716 * 40, p716 * 53.5, p716 * 34, p716 * 54);
    v1094.bezierCurveTo(p716 * 29, p716 * 51, p716 * 32, p716 * 51.5, p716 * 30, p716 * 49);
    v1094.closePath();
    f84(v1094, p718[7]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 89, p716 * 61);
    v1094.bezierCurveTo(p716 * 101, p716 * 70, p716 * 109, p716 * 90, p716 * 102, p716 * 90);
    v1094.bezierCurveTo(p716 * 97, p716 * 91, p716 * 87, p716 * 91, p716 * 60, p716 * 80);
    v1094.bezierCurveTo(p716 * 48, p716 * 65, p716 * 46, p716 * 56, p716 * 48, p716 * 53);
    v1094.bezierCurveTo(p716 * 50, p716 * 52, p716 * 66, p716 * 56, p716 * 89, p716 * 61);
    v1094.closePath();
    f84(v1094, p718[7]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 99, p716 * 59);
    v1094.bezierCurveTo(p716 * 115, p716 * 45, p716 * 125, p716 * 42, p716 * 129, p716 * 47);
    v1094.bezierCurveTo(p716 * 138, p716 * 56, p716 * 140, p716 * 63, p716 * 138, p716 * 67);
    v1094.bezierCurveTo(p716 * 131, p716 * 80, p716 * 122, p716 * 87, p716 * 114, p716 * 90);
    v1094.bezierCurveTo(p716 * 105, p716 * 80, p716 * 95, p716 * 62, p716 * 98, p716 * 61);
    v1094.closePath();
    f84(v1094, p718[7]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 118, p716 * 62);
    v1094.bezierCurveTo(p716 * 139, p716 * 45, p716 * 153, p716 * 40, p716 * 150, p716 * 48);
    v1094.bezierCurveTo(p716 * 145, p716 * 57, p716 * 157, p716 * 63, p716 * 157, p716 * 70);
    v1094.bezierCurveTo(p716 * 157, p716 * 74, p716 * 142, p716 * 77, p716 * 142, p716 * 85);
    v1094.bezierCurveTo(p716 * 143, p716 * 91, p716 * 141, p716 * 92, p716 * 135, p716 * 90);
    v1094.bezierCurveTo(p716 * 132, p716 * 90, p716 * 132, p716 * 96, p716 * 124, p716 * 99);
    v1094.bezierCurveTo(p716 * 118, p716 * 93, p716 * 116, p716 * 77, p716 * 116, p716 * 64);
    v1094.closePath();
    f84(v1094, p718[4], p718[5], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 90, p716 * 130);
    v1094.bezierCurveTo(p716 * 157, p716 * 115, p716 * 165, p716 * 111, p716 * 167, p716 * 115);
    v1094.bezierCurveTo(p716 * 170, p716 * 117, p716 * 171, p716 * 135, p716 * 167, p716 * 141);
    v1094.bezierCurveTo(p716 * 135.5, p716 * 149.5, p716 * 135.5, p716 * 149.5, p716 * 104, p716 * 158);
    v1094.closePath();
    f84(v1094, p718[8]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 53, p716 * 119);
    v1094.bezierCurveTo(p716 * 46, p716 * 120, p716 * 40, p716 * 118, p716 * 34, p716 * 116);
    v1094.bezierCurveTo(p716 * 28, p716 * 111, p716 * 41, p716 * 112, p716 * 39, p716 * 108);
    v1094.bezierCurveTo(p716 * 36, p716 * 100, p716 * 49, p716 * 102, p716 * 53, p716 * 95);
    v1094.bezierCurveTo(p716 * 57, p716 * 84, p716 * 58, p716 * 85, p716 * 63, p716 * 93);
    v1094.bezierCurveTo(p716 * 68, p716 * 96, p716 * 72, p716 * 94, p716 * 80, p716 * 88);
    v1094.bezierCurveTo(p716 * 80, p716 * 96, p716 * 78, p716 * 107, p716 * 66, p716 * 115);
    v1094.closePath();
    f84(v1094, p718[9], p718[10], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 118, p716 * 64);
    v1094.bezierCurveTo(p716 * 133.5, p716 * 57, p716 * 133.5, p716 * 57, p716 * 149, p716 * 50);
    v1094.bezierCurveTo(p716 * 145, p716 * 54, p716 * 154, p716 * 65, p716 * 157, p716 * 68);
    v1094.bezierCurveTo(p716 * 138.5, p716 * 66.5, p716 * 138.5, p716 * 66.5, p716 * 120, p716 * 65);
    v1094.closePath();
    f84(v1094, p718[8]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 118, p716 * 65);
    v1094.bezierCurveTo(p716 * 129, p716 * 77, p716 * 129, p716 * 77, p716 * 140, p716 * 89);
    v1094.bezierCurveTo(p716 * 131, p716 * 89, p716 * 130, p716 * 92, p716 * 128, p716 * 96);
    v1094.bezierCurveTo(p716 * 123.5, p716 * 82, p716 * 123.5, p716 * 82, p716 * 119, p716 * 68);
    v1094.closePath();
    f84(v1094, p718[8]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 51, p716 * 112);
    v1094.bezierCurveTo(p716 * 63, p716 * 108, p716 * 78, p716 * 111, p716 * 88, p716 * 112);
    v1094.bezierCurveTo(p716 * 98, p716 * 122, p716 * 117, p716 * 136, p716 * 125, p716 * 157);
    v1094.bezierCurveTo(p716 * 123, p716 * 180, p716 * 123, p716 * 185, p716 * 118, p716 * 186);
    v1094.bezierCurveTo(p716 * 101, p716 * 190, p716 * 89, p716 * 191, p716 * 79, p716 * 187);
    v1094.bezierCurveTo(p716 * 53, p716 * 165, p716 * 50, p716 * 153, p716 * 47, p716 * 144);
    v1094.bezierCurveTo(p716 * 46, p716 * 128, p716 * 46, p716 * 124, p716 * 50, p716 * 112);
    v1094.closePath();
    f84(v1094, p718[9], p718[10], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 50, p716 * 114);
    v1094.bezierCurveTo(p716 * 81, p716 * 149, p716 * 80, p716 * 147, p716 * 80, p716 * 149);
    v1094.bezierCurveTo(p716 * 82, p716 * 155, p716 * 80, p716 * 182, p716 * 74, p716 * 182);
    v1094.bezierCurveTo(p716 * 60, p716 * 172, p716 * 52, p716 * 157, p716 * 47, p716 * 144);
    v1094.closePath();
    f84(v1094, p718[11], p718[11], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 85, p716 * 152);
    v1094.bezierCurveTo(p716 * 99, p716 * 150, p716 * 109, p716 * 152, p716 * 119, p716 * 156);
    v1094.bezierCurveTo(p716 * 122, p716 * 163, p716 * 122, p716 * 174, p716 * 117, p716 * 182);
    v1094.closePath();
    v1094.bezierCurveTo(p716 * 93, p716 * 188, p716 * 82, p716 * 187, p716 * 83, p716 * 179);
    f84(v1094, p718[11], p718[11], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 104, p716 * 166);
    v1094.bezierCurveTo(p716 * 133, p716 * 165, p716 * 142, p716 * 168, p716 * 137, p716 * 173);
    v1094.bezierCurveTo(p716 * 127, p716 * 177, p716 * 137, p716 * 195, p716 * 126, p716 * 196);
    v1094.bezierCurveTo(p716 * 112, p716 * 195, p716 * 112, p716 * 194, p716 * 109, p716 * 199);
    v1094.bezierCurveTo(p716 * 105, p716 * 205, p716 * 102, p716 * 195, p716 * 96, p716 * 197);
    v1094.bezierCurveTo(p716 * 84, p716 * 201, p716 * 88, p716 * 198, p716 * 90, p716 * 187);
    v1094.bezierCurveTo(p716 * 96, p716 * 171, p716 * 97, p716 * 170, p716 * 103, p716 * 167);
    v1094.closePath();
    f84(v1094, p718[9], p718[10], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 105, p716 * 168);
    v1094.bezierCurveTo(p716 * 118, p716 * 172.5, p716 * 118, p716 * 172.5, p716 * 131, p716 * 177);
    v1094.bezierCurveTo(p716 * 133, p716 * 190, p716 * 132, p716 * 199, p716 * 116, p716 * 194);
    v1094.bezierCurveTo(p716 * 110, p716 * 182, p716 * 110, p716 * 182, p716 * 104, p716 * 170);
    v1094.closePath();
    f84(v1094, p718[10]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 102, p716 * 169);
    v1094.bezierCurveTo(p716 * 100.5, p716 * 182, p716 * 100.5, p716 * 182, p716 * 99, p716 * 195);
    v1094.bezierCurveTo(p716 * 93.5, p716 * 196.5, p716 * 93.5, p716 * 196.5, p716 * 88, p716 * 198);
    v1094.bezierCurveTo(p716 * 94, p716 * 176, p716 * 96, p716 * 174, p716 * 101, p716 * 168);
    v1094.closePath();
    f84(v1094, p718[9], p718[9], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 64, p716 * 107);
    v1094.bezierCurveTo(p716 * 64, p716 * 101, p716 * 64, p716 * 101, p716 * 64, p716 * 95);
    v1094.bezierCurveTo(p716 * 57, p716 * 86, p716 * 57, p716 * 84, p716 * 53, p716 * 97);
    v1094.bezierCurveTo(p716 * 55, p716 * 103.5, p716 * 55, p716 * 103.5, p716 * 57, p716 * 110);
    v1094.closePath();
    f84(v1094, p718[11], p718[11], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 40, p716 * 108);
    v1094.bezierCurveTo(p716 * 46.5, p716 * 111, p716 * 46.5, p716 * 111, p716 * 53, p716 * 114);
    v1094.bezierCurveTo(p716 * 50.5, p716 * 117, p716 * 50.5, p716 * 117, p716 * 48, p716 * 120);
    v1094.bezierCurveTo(p716 * 40.5, p716 * 117.5, p716 * 40.5, p716 * 117.5, p716 * 33, p716 * 115);
    v1094.bezierCurveTo(p716 * 36, p716 * 112, p716 * 36, p716 * 112, p716 * 39, p716 * 109);
    v1094.closePath();
    f84(v1094, p718[11], p718[11], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 189, p716 * 106);
    v1094.bezierCurveTo(p716 * 178.5, p716 * 110.5, p716 * 178.5, p716 * 110.5, p716 * 168, p716 * 115);
    v1094.bezierCurveTo(p716 * 168.5, p716 * 119, p716 * 168.5, p716 * 119, p716 * 169, p716 * 123);
    v1094.bezierCurveTo(p716 * 179, p716 * 124.5, p716 * 179, p716 * 124.5, p716 * 189, p716 * 126);
    v1094.bezierCurveTo(p716 * 182, p716 * 118, p716 * 183, p716 * 115, p716 * 188, p716 * 106);
    v1094.closePath();
    f84(v1094, p718[8]);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 69, p716 * 178);
    v1094.bezierCurveTo(p716 * 69, p716 * 141, p716 * 70, p716 * 136, p716 * 77, p716 * 137);
    v1094.bezierCurveTo(p716 * 88, p716 * 133, p716 * 101, p716 * 134, p716 * 108, p716 * 137);
    f84(v1094, undefined, p718[3], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 55, p716 * 161);
    v1094.bezierCurveTo(p716 * 54, p716 * 124, p716 * 55, p716 * 119, p716 * 62, p716 * 119);
    v1094.bezierCurveTo(p716 * 74, p716 * 117, p716 * 85, p716 * 117, p716 * 93, p716 * 119);
    f84(v1094, vVVVUndefined117, p718[3], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 91, p716 * 29);
    v1094.bezierCurveTo(p716 * 74, p716 * 33, p716 * 62, p716 * 46, p716 * 57, p716 * 54);
    v1094.bezierCurveTo(p716 * 57, p716 * 63, p716 * 68, p716 * 76, p716 * 77, p716 * 87);
    f84(v1094, vVVVUndefined2022, p718[6], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 107, p716 * 33);
    v1094.bezierCurveTo(p716 * 82, p716 * 51, p716 * 80, p716 * 52, p716 * 79, p716 * 59);
    v1094.bezierCurveTo(p716 * 78, p716 * 65, p716 * 93, p716 * 86, p716 * 101, p716 * 93);
    f84(v1094, undefined, p718[6], p716 * 4);
    v1094.beginPath();
    v1094.lineCap = "round";
    v1094.lineJoin = "round";
    v1094.moveTo(p716 * 130, p716 * 98);
    v1094.bezierCurveTo(p716 * 126.5, p716 * 103, p716 * 126.5, p716 * 103, p716 * 123, p716 * 108);
    v1094.bezierCurveTo(p716 * 133.5, p716 * 107, p716 * 133.5, p716 * 107, p716 * 144, p716 * 106);
    v1094.bezierCurveTo(p716 * 138.5, p716 * 110, p716 * 138.5, p716 * 110, p716 * 133, p716 * 114);
    v1094.bezierCurveTo(p716 * 142, p716 * 114, p716 * 142, p716 * 114, p716 * 151, p716 * 114);
    v1094.bezierCurveTo(p716 * 146.5, p716 * 119.5, p716 * 146.5, p716 * 119.5, p716 * 142, p716 * 125);
    v1094.bezierCurveTo(p716 * 146.5, p716 * 127, p716 * 146.5, p716 * 127, p716 * 151, p716 * 129);
    v1094.bezierCurveTo(p716 * 147.5, p716 * 132, p716 * 147.5, p716 * 132, p716 * 144, p716 * 135);
    v1094.bezierCurveTo(p716 * 148, p716 * 137, p716 * 148, p716 * 137, p716 * 152, p716 * 139);
    v1094.bezierCurveTo(p716 * 149, p716 * 142.5, p716 * 149, p716 * 142.5, p716 * 146, p716 * 146);
    f84(v1094, undefined, p718[3], p716 * 4);
    return v1093;
  }
  function f144(p719, p720) {
    var v1095 = document.createElement("canvas");
    var v1096 = v1095.getContext("2d");
    v1095.width = p719 * 283;
    v1095.height = p719 * 224;
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 100, p719 * 33);
    v1096.bezierCurveTo(p719 * 85, p719 * 62, p719 * 102, p719 * 66, p719 * 110, p719 * 83);
    f84(v1096, undefined, p720[0], p719 * 40);
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 181, p719 * 32);
    v1096.bezierCurveTo(p719 * 196, p719 * 62, p719 * 181, p719 * 68, p719 * 178, p719 * 69);
    f84(v1096, vVUndefined21, p720[0], p719 * 40);
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 225, p719 * 52);
    v1096.bezierCurveTo(p719 * 228, p719 * 78, p719 * 207, p719 * 77, p719 * 192, p719 * 88);
    f84(v1096, undefined, p720[0], p719 * 40);
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 34, p719 * 134);
    v1096.bezierCurveTo(p719 * 46, p719 * 111, p719 * 57, p719 * 111, p719 * 79, p719 * 109);
    f84(v1096, undefined, p720[0], p719 * 40);
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 249, p719 * 135);
    v1096.bezierCurveTo(p719 * 233, p719 * 107, p719 * 212, p719 * 112, p719 * 202, p719 * 115);
    f84(v1096, undefined, p720[0], p719 * 40);
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 56, p719 * 50);
    v1096.bezierCurveTo(p719 * 56, p719 * 82, p719 * 73, p719 * 82, p719 * 93, p719 * 89);
    f84(v1096, undefined, p720[0], p719 * 40);
    v1096.beginPath();
    v1096.lineCap = "round";
    v1096.lineJoin = "round";
    v1096.moveTo(p719 * 93, p719 * 55);
    v1096.bezierCurveTo(p719 * 124, p719 * 29, p719 * 179, p719 * 44, p719 * 188, p719 * 52);
    v1096.bezierCurveTo(p719 * 207, p719 * 64, p719 * 226, p719 * 94, p719 * 231, p719 * 118);
    v1096.bezierCurveTo(p719 * 236, p719 * 145, p719 * 222, p719 * 184, p719 * 193, p719 * 192);
    v1096.bezierCurveTo(p719 * 147, p719 * 201, p719 * 116, p719 * 200, p719 * 93, p719 * 193);
    v1096.bezierCurveTo(p719 * 61, p719 * 180, p719 * 48, p719 * 147, p719 * 50, p719 * 123);
    v1096.bezierCurveTo(p719 * 50, p719 * 93, p719 * 76, p719 * 66, p719 * 92, p719 * 56);
    v1096.closePath();
    f84(v1096, p720[0]);
    return v1095;
  }
  function f145(p721, p722, p723, p724) {
    var v1097 = document.createElement("canvas");
    var v1098 = v1097.getContext("2d");
    v1097.width = p721 * 283;
    v1097.height = p721 * 224;
    v1098.translate(0, p721 * 15);
    v1098.globalAlpha = 0.5;
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 93, p721 * 55);
    v1098.bezierCurveTo(p721 * 127, p721 * 27, p721 * 195, p721 * 42, p721 * 213, p721 * 78);
    v1098.bezierCurveTo(p721 * 254, p721 * 134, p721 * 226, p721 * 198, p721 * 153, p721 * 197);
    v1098.bezierCurveTo(p721 * 59, p721 * 204, p721 * 56, p721 * 158, p721 * 51, p721 * 115);
    v1098.bezierCurveTo(p721 * 50, p721 * 93, p721 * 81, p721 * 62, p721 * 90, p721 * 57);
    v1098.closePath();
    f84(v1098, p723[0]);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 100, p721 * 33);
    v1098.bezierCurveTo(p721 * 85, p721 * 62, p721 * 102, p721 * 66, p721 * 110, p721 * 83);
    v1098.closePath();
    f84(v1098, p723[0]);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 181, p721 * 32);
    v1098.bezierCurveTo(p721 * 196, p721 * 62, p721 * 181, p721 * 68, p721 * 178, p721 * 69);
    f84(v1098, p723[0]);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 225, p721 * 52);
    v1098.bezierCurveTo(p721 * 228, p721 * 78, p721 * 207, p721 * 77, p721 * 192, p721 * 88);
    f84(v1098, p723[0]);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 34, p721 * 134);
    v1098.bezierCurveTo(p721 * 46, p721 * 111, p721 * 57, p721 * 111, p721 * 79, p721 * 109);
    f84(v1098, p723[0]);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 249, p721 * 135);
    v1098.bezierCurveTo(p721 * 233, p721 * 107, p721 * 212, p721 * 112, p721 * 202, p721 * 115);
    f84(v1098, p723[0]);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 56, p721 * 50);
    v1098.bezierCurveTo(p721 * 56, p721 * 82, p721 * 73, p721 * 82, p721 * 93, p721 * 89);
    f84(v1098, p723[0]);
    v1098.translate(0, p721 * -15);
    v1098.globalAlpha = 1;
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 100, p721 * 33);
    v1098.bezierCurveTo(p721 * 85, p721 * 62, p721 * 102, p721 * 66, p721 * 110, p721 * 83);
    f84(v1098, vVVUndefined117, p723[2], p721 * 40);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 181, p721 * 32);
    v1098.bezierCurveTo(p721 * 196, p721 * 62, p721 * 181, p721 * 68, p721 * 178, p721 * 69);
    f84(v1098, undefined, p723[2], p721 * 40);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 225, p721 * 52);
    v1098.bezierCurveTo(p721 * 228, p721 * 78, p721 * 207, p721 * 77, p721 * 192, p721 * 88);
    f84(v1098, undefined, p723[2], p721 * 40);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 34, p721 * 134);
    v1098.bezierCurveTo(p721 * 46, p721 * 111, p721 * 57, p721 * 111, p721 * 79, p721 * 109);
    f84(v1098, vVUndefined11, p723[2], p721 * 40);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 249, p721 * 135);
    v1098.bezierCurveTo(p721 * 233, p721 * 107, p721 * 212, p721 * 112, p721 * 202, p721 * 115);
    f84(v1098, undefined, p723[2], p721 * 40);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 56, p721 * 50);
    v1098.bezierCurveTo(p721 * 56, p721 * 82, p721 * 73, p721 * 82, p721 * 93, p721 * 89);
    f84(v1098, vVUndefined11, p723[2], p721 * 40);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 93, p721 * 55);
    v1098.bezierCurveTo(p721 * 127, p721 * 27, p721 * 195, p721 * 42, p721 * 213, p721 * 78);
    v1098.bezierCurveTo(p721 * 254, p721 * 134, p721 * 226, p721 * 198, p721 * 153, p721 * 197);
    v1098.bezierCurveTo(p721 * 59, p721 * 204, p721 * 56, p721 * 158, p721 * 51, p721 * 115);
    v1098.bezierCurveTo(p721 * 50, p721 * 93, p721 * 81, p721 * 62, p721 * 90, p721 * 57);
    v1098.closePath();
    f84(v1098, p723[1], p723[2], p721 * 10);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 100, p721 * 33);
    v1098.bezierCurveTo(p721 * 85, p721 * 62, p721 * 102, p721 * 66, p721 * 110, p721 * 83);
    f84(v1098, undefined, p723[1], p721 * 20);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 181, p721 * 32);
    v1098.bezierCurveTo(p721 * 196, p721 * 62, p721 * 181, p721 * 68, p721 * 178, p721 * 69);
    f84(v1098, undefined, p723[1], p721 * 20);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 225, p721 * 52);
    v1098.bezierCurveTo(p721 * 228, p721 * 78, p721 * 207, p721 * 77, p721 * 192, p721 * 88);
    f84(v1098, vVVUndefined202, p723[1], p721 * 20);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 34, p721 * 134);
    v1098.bezierCurveTo(p721 * 46, p721 * 111, p721 * 57, p721 * 111, p721 * 79, p721 * 109);
    f84(v1098, vVVUndefined117, p723[1], p721 * 20);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 249, p721 * 135);
    v1098.bezierCurveTo(p721 * 233, p721 * 107, p721 * 212, p721 * 112, p721 * 202, p721 * 115);
    f84(v1098, undefined, p723[1], p721 * 20);
    v1098.beginPath();
    v1098.lineCap = "round";
    v1098.lineJoin = "round";
    v1098.moveTo(p721 * 56, p721 * 50);
    v1098.bezierCurveTo(p721 * 56, p721 * 82, p721 * 73, p721 * 82, p721 * 93, p721 * 89);
    f84(v1098, undefined, p723[1], p721 * 20);
    f89(v1098, p721 * 101, p721 * 155, p721 * 20.591260281974);
    f84(v1098, p723[3]);
    f89(v1098, p721 * 180, p721 * 155, p721 * 20.591260281974);
    f84(v1098, p723[3]);
    f89(v1098, p721 * 95, p721 * 148, p721 * 7.211102550927978);
    f84(v1098, p723[4]);
    f89(v1098, p721 * 173, p721 * 148, p721 * 7.211102550927978);
    f84(v1098, p723[4]);
    if (p724 === 1) {
      v1098.beginPath();
      v1098.lineCap = "round";
      v1098.lineJoin = "round";
      v1098.moveTo(p721 * 191, p721 * 107);
      v1098.bezierCurveTo(p721 * 180, p721 * 104, p721 * 175, p721 * 101, p721 * 180, p721 * 95);
      v1098.bezierCurveTo(p721 * 180, p721 * 95, p721 * 181, p721 * 99, p721 * 188, p721 * 103);
      v1098.bezierCurveTo(p721 * 191, p721 * 101, p721 * 191, p721 * 95, p721 * 190, p721 * 91);
      v1098.bezierCurveTo(p721 * 190, p721 * 91, p721 * 196, p721 * 89, p721 * 195, p721 * 99);
      v1098.closePath();
      f84(v1098, p723[2]);
      v1098.beginPath();
      v1098.lineCap = "round";
      v1098.lineJoin = "round";
      v1098.moveTo(p721 * 206, p721 * 98);
      v1098.bezierCurveTo(p721 * 203, p721 * 95, p721 * 200, p721 * 93, p721 * 198, p721 * 101);
      v1098.bezierCurveTo(p721 * 194, p721 * 109, p721 * 193, p721 * 109, p721 * 196, p721 * 110);
      v1098.bezierCurveTo(p721 * 206, p721 * 115, p721 * 209, p721 * 114, p721 * 211, p721 * 111);
      v1098.bezierCurveTo(p721 * 211, p721 * 106, p721 * 208, p721 * 108, p721 * 203, p721 * 108);
      v1098.bezierCurveTo(p721 * 193, p721 * 107, p721 * 204, p721 * 101, p721 * 206, p721 * 99);
      v1098.closePath();
      f84(v1098, p723[2]);
      v1098.beginPath();
      v1098.lineCap = "round";
      v1098.lineJoin = "round";
      v1098.moveTo(p721 * 172, p721 * 111);
      v1098.bezierCurveTo(p721 * 172, p721 * 106, p721 * 174, p721 * 105, p721 * 185, p721 * 109);
      v1098.bezierCurveTo(p721 * 190, p721 * 109, p721 * 189, p721 * 114, p721 * 185, p721 * 120);
      v1098.bezierCurveTo(p721 * 181, p721 * 125, p721 * 180, p721 * 126, p721 * 176, p721 * 122);
      v1098.bezierCurveTo(p721 * 182, p721 * 119, p721 * 187, p721 * 110, p721 * 182, p721 * 112);
      v1098.closePath();
      f84(v1098, p723[2]);
      v1098.beginPath();
      v1098.lineCap = "round";
      v1098.lineJoin = "round";
      v1098.moveTo(p721 * 202, p721 * 125);
      v1098.bezierCurveTo(p721 * 197, p721 * 117, p721 * 193, p721 * 116, p721 * 193, p721 * 120);
      v1098.bezierCurveTo(p721 * 192.5, p721 * 124.5, p721 * 192.5, p721 * 124.5, p721 * 192, p721 * 129);
      v1098.bezierCurveTo(p721 * 188, p721 * 129, p721 * 187, p721 * 124, p721 * 189, p721 * 120);
      v1098.bezierCurveTo(p721 * 191, p721 * 110, p721 * 192, p721 * 110, p721 * 200, p721 * 116);
      v1098.bezierCurveTo(p721 * 208, p721 * 120, p721 * 207, p721 * 123, p721 * 202, p721 * 125);
      v1098.closePath();
      f84(v1098, p723[2]);
    }
    return v1097;
  }
  function f146(p725, p726, p727) {
    var v1099 = document.createElement("canvas");
    var v1100 = v1099.getContext("2d");
    v1099.width = p725 * 131;
    v1099.height = p725 * 121;
    v1100.translate(0, p725 * 20);
    v1100.beginPath();
    v1100.lineCap = "round";
    v1100.lineJoin = "round";
    v1100.moveTo(p725 * 110, p725 * 59);
    v1100.bezierCurveTo(p725 * 93, p725 * 61.5, p725 * 93, p725 * 61.5, p725 * 76, p725 * 64);
    v1100.bezierCurveTo(p725 * 84.5, p725 * 78.5, p725 * 84.5, p725 * 78.5, p725 * 93, p725 * 93);
    v1100.bezierCurveTo(p725 * 70, p725 * 111, p725 * 43, p725 * 103, p725 * 30, p725 * 82);
    v1100.bezierCurveTo(p725 * 17, p725 * 61, p725 * 25, p725 * 30, p725 * 51, p725 * 21);
    v1100.bezierCurveTo(p725 * 66, p725 * 15, p725 * 83, p725 * 18, p725 * 96, p725 * 29);
    v1100.bezierCurveTo(p725 * 104, p725 * 35, p725 * 109, p725 * 47, p725 * 110, p725 * 58);
    v1100.closePath();
    f84(v1100, p727[0]);
    v1100.globalAlpha = 1;
    v1100.translate(0, p725 * -20);
    v1100.beginPath();
    v1100.lineCap = "round";
    v1100.lineJoin = "round";
    v1100.moveTo(p725 * 110, p725 * 59);
    v1100.bezierCurveTo(p725 * 93, p725 * 61.5, p725 * 93, p725 * 61.5, p725 * 76, p725 * 64);
    v1100.bezierCurveTo(p725 * 84.5, p725 * 78.5, p725 * 84.5, p725 * 78.5, p725 * 93, p725 * 93);
    v1100.bezierCurveTo(p725 * 70, p725 * 111, p725 * 43, p725 * 103, p725 * 30, p725 * 82);
    v1100.bezierCurveTo(p725 * 17, p725 * 61, p725 * 25, p725 * 30, p725 * 51, p725 * 21);
    v1100.bezierCurveTo(p725 * 66, p725 * 15, p725 * 83, p725 * 18, p725 * 96, p725 * 29);
    v1100.bezierCurveTo(p725 * 104, p725 * 35, p725 * 109, p725 * 47, p725 * 110, p725 * 58);
    v1100.closePath();
    f84(v1100, p727[1], p727[2], p725 * 10);
    return v1099;
  }
  function f147(p728, p729, p730) {
    var v1101 = document.createElement("canvas");
    var v1102 = v1101.getContext("2d");
    v1101.width = p728 * 154;
    v1101.height = p728 * 261;
    v1102.globalAlpha = p729 ? 0.5 : 1;
    v1102.translate(0, p728 * 10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 125, p728 * 69);
    v1102.bezierCurveTo(p728 * 123.5, p728 * 141.5, p728 * 123.5, p728 * 141.5, p728 * 122, p728 * 214);
    v1102.bezierCurveTo(p728 * 123, p728 * 228, p728 * 119, p728 * 239, p728 * 102, p728 * 239);
    v1102.bezierCurveTo(p728 * 90, p728 * 238, p728 * 86, p728 * 225, p728 * 89, p728 * 197);
    v1102.bezierCurveTo(p728 * 92, p728 * 159, p728 * 92, p728 * 141, p728 * 94, p728 * 84);
    v1102.bezierCurveTo(p728 * 94, p728 * 58, p728 * 87, p728 * 50, p728 * 73, p728 * 52);
    v1102.bezierCurveTo(p728 * 53, p728 * 54, p728 * 54, p728 * 92, p728 * 34, p728 * 87);
    v1102.bezierCurveTo(p728 * 13, p728 * 85, p728 * 22, p728 * 58, p728 * 34, p728 * 40);
    v1102.bezierCurveTo(p728 * 44, p728 * 24, p728 * 68, p728 * 17, p728 * 86, p728 * 21);
    v1102.bezierCurveTo(p728 * 111, p728 * 23, p728 * 123, p728 * 39, p728 * 125, p728 * 67);
    v1102.closePath();
    f84(v1102, p730[0]);
    v1102.globalAlpha = 1;
    v1102.translate(0, p728 * -10);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 125, p728 * 69);
    v1102.bezierCurveTo(p728 * 123.5, p728 * 141.5, p728 * 123.5, p728 * 141.5, p728 * 122, p728 * 214);
    v1102.bezierCurveTo(p728 * 123, p728 * 228, p728 * 119, p728 * 239, p728 * 102, p728 * 239);
    v1102.bezierCurveTo(p728 * 90, p728 * 238, p728 * 86, p728 * 225, p728 * 89, p728 * 197);
    v1102.bezierCurveTo(p728 * 92, p728 * 159, p728 * 92, p728 * 141, p728 * 94, p728 * 84);
    v1102.bezierCurveTo(p728 * 94, p728 * 58, p728 * 87, p728 * 50, p728 * 73, p728 * 52);
    v1102.bezierCurveTo(p728 * 53, p728 * 54, p728 * 54, p728 * 92, p728 * 34, p728 * 87);
    v1102.bezierCurveTo(p728 * 13, p728 * 85, p728 * 22, p728 * 58, p728 * 34, p728 * 40);
    v1102.bezierCurveTo(p728 * 44, p728 * 24, p728 * 68, p728 * 17, p728 * 86, p728 * 21);
    v1102.bezierCurveTo(p728 * 111, p728 * 23, p728 * 123, p728 * 39, p728 * 125, p728 * 67);
    v1102.closePath();
    f84(v1102, p730[1], p730[2], p728 * 4);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 31, p728 * 43);
    v1102.bezierCurveTo(p728 * 31, p728 * 61, p728 * 43, p728 * 70, p728 * 51, p728 * 75);
    v1102.bezierCurveTo(p728 * 48, p728 * 84, p728 * 41, p728 * 89, p728 * 33, p728 * 86);
    v1102.bezierCurveTo(p728 * 23, p728 * 88, p728 * 20, p728 * 76, p728 * 23, p728 * 62);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 45, p728 * 29);
    v1102.bezierCurveTo(p728 * 49, p728 * 45, p728 * 61, p728 * 54, p728 * 64, p728 * 55);
    v1102.bezierCurveTo(p728 * 67.5, p728 * 53, p728 * 67.5, p728 * 53, p728 * 71, p728 * 51);
    v1102.bezierCurveTo(p728 * 80, p728 * 44, p728 * 83, p728 * 33, p728 * 82, p728 * 20);
    v1102.bezierCurveTo(p728 * 59, p728 * 17, p728 * 51, p728 * 23, p728 * 45, p728 * 30);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 86, p728 * 56);
    v1102.bezierCurveTo(p728 * 90, p728 * 33, p728 * 103, p728 * 25, p728 * 105, p728 * 27);
    v1102.bezierCurveTo(p728 * 116, p728 * 31, p728 * 121, p728 * 45, p728 * 122, p728 * 50);
    v1102.bezierCurveTo(p728 * 112, p728 * 62, p728 * 103, p728 * 63, p728 * 91, p728 * 62);
    v1102.bezierCurveTo(p728 * 89, p728 * 59.5, p728 * 89, p728 * 59.5, p728 * 87, p728 * 57);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 93, p728 * 81);
    v1102.bezierCurveTo(p728 * 109, p728 * 82, p728 * 123, p728 * 70, p728 * 124, p728 * 63);
    v1102.bezierCurveTo(p728 * 124, p728 * 75.5, p728 * 124, p728 * 75.5, p728 * 124, p728 * 88);
    v1102.bezierCurveTo(p728 * 119, p728 * 99, p728 * 103, p728 * 103, p728 * 94, p728 * 103);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 93, p728 * 124);
    v1102.bezierCurveTo(p728 * 108, p728 * 125, p728 * 122, p728 * 113, p728 * 124, p728 * 106);
    v1102.bezierCurveTo(p728 * 124, p728 * 119, p728 * 124, p728 * 129, p728 * 124, p728 * 132);
    v1102.bezierCurveTo(p728 * 110, p728 * 147, p728 * 94, p728 * 148, p728 * 90, p728 * 147);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 90, p728 * 170);
    v1102.bezierCurveTo(p728 * 104, p728 * 166, p728 * 122, p728 * 158, p728 * 122, p728 * 151);
    v1102.bezierCurveTo(p728 * 122, p728 * 162.5, p728 * 122, p728 * 162.5, p728 * 122, p728 * 174);
    v1102.bezierCurveTo(p728 * 111, p728 * 191, p728 * 97, p728 * 191, p728 * 89, p728 * 191);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 88, p728 * 208);
    v1102.bezierCurveTo(p728 * 100, p728 * 209, p728 * 115, p728 * 205, p728 * 122, p728 * 193);
    v1102.bezierCurveTo(p728 * 122, p728 * 205.5, p728 * 122, p728 * 205.5, p728 * 122, p728 * 218);
    v1102.bezierCurveTo(p728 * 115, p728 * 229, p728 * 103, p728 * 235, p728 * 90, p728 * 228);
    v1102.bezierCurveTo(p728 * 88, p728 * 224, p728 * 88, p728 * 217, p728 * 88, p728 * 211);
    v1102.closePath();
    f84(v1102, p730[3]);
    v1102.globalAlpha = 0.4;
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 22, p728 * 81);
    v1102.bezierCurveTo(p728 * 32, p728 * 84, p728 * 41, p728 * 81, p728 * 45, p728 * 68);
    v1102.bezierCurveTo(p728 * 50, p728 * 50, p728 * 62, p728 * 40, p728 * 79, p728 * 43);
    v1102.bezierCurveTo(p728 * 95, p728 * 45, p728 * 102, p728 * 58, p728 * 101, p728 * 81);
    v1102.bezierCurveTo(p728 * 99.5, p728 * 120.5, p728 * 99.5, p728 * 120.5, p728 * 98, p728 * 160);
    v1102.bezierCurveTo(p728 * 96.5, p728 * 191.5, p728 * 96.5, p728 * 191.5, p728 * 95, p728 * 223);
    v1102.bezierCurveTo(p728 * 93, p728 * 232, p728 * 101, p728 * 235, p728 * 108, p728 * 238);
    v1102.bezierCurveTo(p728 * 100, p728 * 240, p728 * 90, p728 * 233, p728 * 90, p728 * 224);
    v1102.bezierCurveTo(p728 * 92, p728 * 157, p728 * 92, p728 * 157, p728 * 94, p728 * 90);
    v1102.bezierCurveTo(p728 * 94, p728 * 56, p728 * 89, p728 * 53, p728 * 77, p728 * 51);
    v1102.bezierCurveTo(p728 * 58, p728 * 50, p728 * 54, p728 * 59, p728 * 49, p728 * 75);
    v1102.bezierCurveTo(p728 * 44, p728 * 91, p728 * 28, p728 * 90, p728 * 23, p728 * 81);
    v1102.closePath();
    f84(v1102, p730[0]);
    v1102.globalAlpha = 1;
    v1102.beginPath();
    v1102.lineCap = "round";
    v1102.lineJoin = "round";
    v1102.moveTo(p728 * 82, p728 * 123);
    v1102.bezierCurveTo(p728 * 88, p728 * 130, p728 * 88, p728 * 127, p728 * 94, p728 * 128);
    v1102.bezierCurveTo(p728 * 91, p728 * 136, p728 * 94, p728 * 137, p728 * 99, p728 * 142);
    v1102.bezierCurveTo(p728 * 97, p728 * 149, p728 * 99, p728 * 152, p728 * 105, p728 * 155);
    v1102.bezierCurveTo(p728 * 107, p728 * 159, p728 * 113, p728 * 159, p728 * 120, p728 * 158);
    v1102.bezierCurveTo(p728 * 121, p728 * 160, p728 * 125, p728 * 163, p728 * 132, p728 * 163);
    v1102.bezierCurveTo(p728 * 133, p728 * 166, p728 * 136, p728 * 169, p728 * 138, p728 * 170);
    v1102.bezierCurveTo(p728 * 133, p728 * 171, p728 * 132, p728 * 172, p728 * 129, p728 * 174);
    v1102.bezierCurveTo(p728 * 122, p728 * 170, p728 * 120, p728 * 170, p728 * 116, p728 * 174);
    v1102.bezierCurveTo(p728 * 108, p728 * 170.5, p728 * 108, p728 * 170.5, p728 * 100, p728 * 167);
    v1102.bezierCurveTo(p728 * 95, p728 * 172, p728 * 94, p728 * 179, p728 * 95, p728 * 184);
    v1102.bezierCurveTo(p728 * 87, p728 * 185, p728 * 87, p728 * 189, p728 * 88, p728 * 194);
    v1102.bezierCurveTo(p728 * 82, p728 * 194, p728 * 81, p728 * 195, p728 * 79, p728 * 197);
    v1102.bezierCurveTo(p728 * 78, p728 * 192, p728 * 78, p728 * 191, p728 * 77, p728 * 189);
    v1102.bezierCurveTo(p728 * 81, p728 * 185, p728 * 82, p728 * 183, p728 * 80, p728 * 176);
    v1102.bezierCurveTo(p728 * 89, p728 * 170, p728 * 92, p728 * 168, p728 * 95, p728 * 163);
    v1102.bezierCurveTo(p728 * 91, p728 * 151, p728 * 88, p728 * 151, p728 * 82, p728 * 147);
    v1102.bezierCurveTo(p728 * 85, p728 * 142, p728 * 85, p728 * 137, p728 * 81, p728 * 133);
    v1102.bezierCurveTo(p728 * 84, p728 * 127, p728 * 84, p728 * 125, p728 * 82, p728 * 124);
    v1102.closePath();
    f84(v1102, p730[4], p730[5], p728 * 4);
    f89(v1102, p728 * 107, p728 * 152, p728 * 9);
    f84(v1102, p730[6]);
    f89(v1102, p728 * 105, p728 * 173, p728 * 9);
    f84(v1102, p730[6]);
    f89(v1102, p728 * 87, p728 * 161, p728 * 9);
    f84(v1102, p730[6]);
    f89(v1102, p728 * 106, p728 * 147, p728 * 4);
    f84(v1102, p730[7]);
    f89(v1102, p728 * 104, p728 * 167, p728 * 4);
    f84(v1102, p730[7]);
    f89(v1102, p728 * 86, p728 * 154, p728 * 4);
    f84(v1102, p730[7]);
    return v1101;
  }
  function f148(p731, p732, p733) {
    var v1103 = document.createElement("canvas");
    var v1104 = v1103.getContext("2d");
    var v1105 = p731 * 105;
    var v1106 = p731 * 125;
    var v1107 = p731 * 4;
    var v1108 = p731 * 10;
    var v1109 = p731 * 5;
    var v1110 = p731 * 10;
    var v1111 = p731 * 110;
    var v1112 = v1110 / 2;
    var v1113 = v1111 / 2;
    v1103.width = v1105;
    v1103.height = v1106;
    v1104.save();
    v1104.globalAlpha = p732 ? 0.5 : 1;
    v1104.translate(v1105 / 2 + p731 * 8, v1106 / 2 + v1109);
    f83(v1104, -v1112, -v1113, v1110, v1111, v1108);
    f84(v1104, p732 ? p733[0] : p733[1]);
    v1104.translate(p731 * -130 + v1109, p731 * -128 + v1109);
    v1104.beginPath();
    v1104.bezierCurveTo(p731 * 159, p731 * 93, p731 * 156, p731 * 99, p731 * 154, p731 * 102);
    v1104.bezierCurveTo(p731 * 128, p731 * 92, p731 * 90, p731 * 93, p731 * 72, p731 * 96);
    v1104.bezierCurveTo(p731 * 68, p731 * 84, p731 * 143, p731 * 73, p731 * 162, p731 * 86);
    v1104.closePath();
    f84(v1104, p733[2]);
    v1104.restore();
    v1104.translate(v1105 / 2 + 8, v1106 / 2);
    v1104.globalAlpha = 1;
    f83(v1104, -v1112, -v1113, v1110, v1111, v1108);
    f84(v1104, p733[3], p733[4], v1107);
    v1104.translate(p731 * -130, p731 * -125);
    v1104.beginPath();
    v1104.bezierCurveTo(p731 * 159, p731 * 93, p731 * 156, p731 * 99, p731 * 154, p731 * 102);
    v1104.bezierCurveTo(p731 * 128, p731 * 92, p731 * 90, p731 * 93, p731 * 72, p731 * 96);
    v1104.bezierCurveTo(p731 * 68, p731 * 84, p731 * 143, p731 * 73, p731 * 162, p731 * 86);
    v1104.closePath();
    f84(v1104, p733[5], p733[6], v1107);
    return v1103;
  }
  function f149(p734, p735, p736) {
    var v1114 = document.createElement("canvas");
    var v1115 = v1114.getContext("2d");
    v1114.width = p734 * 170;
    v1114.height = p734 * 469;
    v1115.globalAlpha = p735 ? 0.5 : 1;
    v1115.translate(p734 * 20, p734 * 20);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 88, p734 * 30);
    v1115.bezierCurveTo(p734 * 96, p734 * 49.5, p734 * 96, p734 * 49.5, p734 * 104, p734 * 69);
    v1115.bezierCurveTo(p734 * 105.5, p734 * 41.5, p734 * 105.5, p734 * 41.5, p734 * 107, p734 * 14);
    v1115.bezierCurveTo(p734 * 114, p734 * 9.5, p734 * 114, p734 * 9.5, p734 * 121, p734 * 5);
    v1115.bezierCurveTo(p734 * 135.5, p734 * 27.5, p734 * 135.5, p734 * 27.5, p734 * 150, p734 * 50);
    v1115.bezierCurveTo(p734 * 110.5, p734 * 286, p734 * 110.5, p734 * 286, p734 * 103, p734 * 331);
    v1115.bezierCurveTo(p734 * 69.5, p734 * 325, p734 * 69.5, p734 * 325, p734 * 36, p734 * 319);
    v1115.bezierCurveTo(p734 * 56.5, p734 * 180, p734 * 56.5, p734 * 180, p734 * 77, p734 * 41);
    v1115.closePath();
    f84(v1115, p736[0]);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 118, p734 * 31);
    v1115.bezierCurveTo(p734 * 125, p734 * 43, p734 * 125, p734 * 43, p734 * 132, p734 * 55);
    v1115.bezierCurveTo(p734 * 109.5, p734 * 185.5, p734 * 109.5, p734 * 185.5, p734 * 87, p734 * 316);
    v1115.bezierCurveTo(p734 * 72, p734 * 313.5, p734 * 72, p734 * 313.5, p734 * 57, p734 * 311);
    v1115.bezierCurveTo(p734 * 76.5, p734 * 181, p734 * 76.5, p734 * 181, p734 * 96, p734 * 51);
    v1115.closePath();
    f84(v1115, p736[0]);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 56, p734 * 328);
    v1115.bezierCurveTo(p734 * 47, p734 * 385.5, p734 * 47, p734 * 385.5, p734 * 38, p734 * 443);
    v1115.bezierCurveTo(p734 * 52, p734 * 446, p734 * 52, p734 * 446, p734 * 66, p734 * 449);
    v1115.bezierCurveTo(p734 * 76.5, p734 * 388.5, p734 * 76.5, p734 * 388.5, p734 * 87, p734 * 328);
    v1115.closePath();
    f84(v1115, p736[0]);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 74, p734 * 302);
    v1115.bezierCurveTo(p734 * 104, p734 * 316.5, p734 * 104, p734 * 316.5, p734 * 134, p734 * 331);
    v1115.bezierCurveTo(p734 * 133, p734 * 341, p734 * 133, p734 * 341, p734 * 132, p734 * 351);
    v1115.bezierCurveTo(p734 * 69.5, p734 * 342, p734 * 69.5, p734 * 342, p734 * 7, p734 * 333);
    v1115.bezierCurveTo(p734 * 8, p734 * 323, p734 * 8, p734 * 323, p734 * 9, p734 * 313);
    v1115.closePath();
    f84(v1115, p736[0]);
    v1115.save();
    v1115.translate(p734 * 51.5, p734 * 440.5);
    v1115.rotate(0.2);
    f83(v1115, p734 * -20.5, p734 * -18.5, p734 * 41, p734 * 37, p734 * 10);
    v1115.restore();
    f84(v1115, p736[0]);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 73, p734 * 316);
    v1115.bezierCurveTo(p734 * 90, p734 * 324.5, p734 * 90, p734 * 324.5, p734 * 107, p734 * 333);
    v1115.bezierCurveTo(p734 * 70, p734 * 327.5, p734 * 70, p734 * 327.5, p734 * 33, p734 * 322);
    v1115.closePath();
    f84(v1115, p736[0]);
    v1115.globalAlpha = 1;
    v1115.translate(p734 * -20, p734 * -20);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 88, p734 * 30);
    v1115.bezierCurveTo(p734 * 96, p734 * 49.5, p734 * 96, p734 * 49.5, p734 * 104, p734 * 69);
    v1115.bezierCurveTo(p734 * 105.5, p734 * 41.5, p734 * 105.5, p734 * 41.5, p734 * 107, p734 * 14);
    v1115.bezierCurveTo(p734 * 114, p734 * 9.5, p734 * 114, p734 * 9.5, p734 * 121, p734 * 5);
    v1115.bezierCurveTo(p734 * 135.5, p734 * 27.5, p734 * 135.5, p734 * 27.5, p734 * 150, p734 * 50);
    v1115.bezierCurveTo(p734 * 110.5, p734 * 286, p734 * 110.5, p734 * 286, p734 * 103, p734 * 331);
    v1115.bezierCurveTo(p734 * 69.5, p734 * 325, p734 * 69.5, p734 * 325, p734 * 36, p734 * 319);
    v1115.bezierCurveTo(p734 * 56.5, p734 * 180, p734 * 56.5, p734 * 180, p734 * 77, p734 * 41);
    v1115.closePath();
    f84(v1115, p736[1], p736[2], p734 * 7);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 118, p734 * 31);
    v1115.bezierCurveTo(p734 * 125, p734 * 43, p734 * 125, p734 * 43, p734 * 132, p734 * 55);
    v1115.bezierCurveTo(p734 * 109.5, p734 * 185.5, p734 * 109.5, p734 * 185.5, p734 * 87, p734 * 316);
    v1115.bezierCurveTo(p734 * 72, p734 * 313.5, p734 * 72, p734 * 313.5, p734 * 57, p734 * 311);
    v1115.bezierCurveTo(p734 * 76.5, p734 * 181, p734 * 76.5, p734 * 181, p734 * 96, p734 * 51);
    v1115.closePath();
    f84(v1115, p736[3]);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 88, p734 * 30);
    v1115.bezierCurveTo(p734 * 96, p734 * 49.5, p734 * 96, p734 * 49.5, p734 * 104, p734 * 69);
    v1115.bezierCurveTo(p734 * 105.5, p734 * 41.5, p734 * 105.5, p734 * 41.5, p734 * 107, p734 * 14);
    v1115.bezierCurveTo(p734 * 114, p734 * 9.5, p734 * 114, p734 * 9.5, p734 * 121, p734 * 5);
    v1115.bezierCurveTo(p734 * 135.5, p734 * 27.5, p734 * 135.5, p734 * 27.5, p734 * 150, p734 * 50);
    v1115.bezierCurveTo(p734 * 110.5, p734 * 286, p734 * 110.5, p734 * 286, p734 * 103, p734 * 331);
    v1115.bezierCurveTo(p734 * 69.5, p734 * 325, p734 * 69.5, p734 * 325, p734 * 36, p734 * 319);
    v1115.bezierCurveTo(p734 * 56.5, p734 * 180, p734 * 56.5, p734 * 180, p734 * 77, p734 * 41);
    v1115.closePath();
    f84(v1115, vVUndefined19, p736[2], p734 * 7);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 56, p734 * 328);
    v1115.bezierCurveTo(p734 * 47, p734 * 385.5, p734 * 47, p734 * 385.5, p734 * 38, p734 * 443);
    v1115.bezierCurveTo(p734 * 52, p734 * 446, p734 * 52, p734 * 446, p734 * 66, p734 * 449);
    v1115.bezierCurveTo(p734 * 76.5, p734 * 388.5, p734 * 76.5, p734 * 388.5, p734 * 87, p734 * 328);
    v1115.closePath();
    f84(v1115, p736[4], p736[5], p734 * 7);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 74, p734 * 302);
    v1115.bezierCurveTo(p734 * 104, p734 * 316.5, p734 * 104, p734 * 316.5, p734 * 134, p734 * 331);
    v1115.bezierCurveTo(p734 * 133, p734 * 341, p734 * 133, p734 * 341, p734 * 132, p734 * 351);
    v1115.bezierCurveTo(p734 * 69.5, p734 * 342, p734 * 69.5, p734 * 342, p734 * 7, p734 * 333);
    v1115.bezierCurveTo(p734 * 8, p734 * 323, p734 * 8, p734 * 323, p734 * 9, p734 * 313);
    v1115.closePath();
    f84(v1115, p736[4], p736[5], p734 * 7);
    v1115.save();
    v1115.translate(p734 * 51.5, p734 * 440.5);
    v1115.rotate(0.2);
    f83(v1115, p734 * -20.5, p734 * -18.5, p734 * 41, p734 * 37, p734 * 10);
    v1115.restore();
    f84(v1115, p736[4], p736[5], p734 * 7);
    v1115.beginPath();
    v1115.lineCap = "round";
    v1115.lineJoin = "round";
    v1115.moveTo(p734 * 73, p734 * 316);
    v1115.bezierCurveTo(p734 * 90, p734 * 324.5, p734 * 90, p734 * 324.5, p734 * 107, p734 * 333);
    v1115.bezierCurveTo(p734 * 70, p734 * 327.5, p734 * 70, p734 * 327.5, p734 * 33, p734 * 322);
    v1115.closePath();
    f84(v1115, p736[6]);
    return v1114;
  }
  function f150(p737, p738, p739) {
    var v1116 = document.createElement("canvas");
    var v1117 = v1116.getContext("2d");
    v1116.width = p737 * 290;
    v1116.height = p737 * 525;
    v1117.globalAlpha = p738 ? 0.5 : 1;
    v1117.translate(p737 * 20, p737 * 20);
    v1117.beginPath();
    v1117.lineCap = "round";
    v1117.lineJoin = "round";
    v1117.moveTo(p737 * 112, p737 * 356);
    v1117.bezierCurveTo(p737 * 124, p737 * 220.5, p737 * 124, p737 * 220.5, p737 * 136, p737 * 85);
    v1117.bezierCurveTo(p737 * 162.5, p737 * 65.5, p737 * 162.5, p737 * 65.5, p737 * 189, p737 * 46);
    v1117.bezierCurveTo(p737 * 208.5, p737 * 72.5, p737 * 208.5, p737 * 72.5, p737 * 228, p737 * 99);
    v1117.bezierCurveTo(p737 * 200, p737 * 232, p737 * 200, p737 * 232, p737 * 172, p737 * 365);
    v1117.closePath();
    f84(v1117, p739[0]);
    v1117.save();
    v1117.translate(p737 * 131, p737 * 423);
    v1117.rotate(0.16);
    f83(v1117, p737 * -14, p737 * -53, p737 * 28, p737 * 106, p737 * 10);
    v1117.restore();
    f84(v1117, p739[0]);
    v1117.save();
    v1117.translate(p737 * 122, p737 * 480);
    v1117.rotate(1.72);
    f87(v1117, 4, p737 * 26.476404589747453, p737 * 10);
    v1117.restore();
    f84(v1117, p739[0]);
    v1117.beginPath();
    v1117.lineCap = "round";
    v1117.lineJoin = "round";
    v1117.moveTo(p737 * 210, p737 * 387);
    v1117.bezierCurveTo(p737 * 138, p737 * 376, p737 * 138, p737 * 376, p737 * 66, p737 * 365);
    v1117.bezierCurveTo(p737 * 76, p737 * 355, p737 * 76, p737 * 355, p737 * 86, p737 * 345);
    v1117.bezierCurveTo(p737 * 99, p737 * 346.5, p737 * 99, p737 * 346.5, p737 * 112, p737 * 348);
    v1117.bezierCurveTo(p737 * 128.5, p737 * 344, p737 * 128.5, p737 * 344, p737 * 145, p737 * 340);
    v1117.bezierCurveTo(p737 * 158, p737 * 348, p737 * 158, p737 * 348, p737 * 171, p737 * 356);
    v1117.bezierCurveTo(p737 * 184, p737 * 358, p737 * 184, p737 * 358, p737 * 197, p737 * 360);
    v1117.closePath();
    f84(v1117, p739[0]);
    v1117.beginPath();
    v1117.lineCap = "round";
    v1117.lineJoin = "round";
    v1117.moveTo(p737 * 129, p737 * 338);
    v1117.bezierCurveTo(p737 * 137, p737 * 336, p737 * 137, p737 * 336, p737 * 145, p737 * 334);
    v1117.bezierCurveTo(p737 * 152.5, p737 * 338, p737 * 152.5, p737 * 338, p737 * 160, p737 * 342);
    v1117.bezierCurveTo(p737 * 184, p737 * 224, p737 * 184, p737 * 224, p737 * 208, p737 * 106);
    v1117.bezierCurveTo(p737 * 197, p737 * 88, p737 * 187, p737 * 70, p737 * 186, p737 * 70);
    v1117.bezierCurveTo(p737 * 169.5, p737 * 83, p737 * 169.5, p737 * 83, p737 * 153, p737 * 96);
    v1117.closePath();
    f84(v1117, p739[0]);
    v1117.globalAlpha = 1;
    v1117.translate(p737 * -20, p737 * -20);
    v1117.beginPath();
    v1117.lineCap = "round";
    v1117.lineJoin = "round";
    v1117.moveTo(p737 * 112, p737 * 356);
    v1117.bezierCurveTo(p737 * 124, p737 * 220.5, p737 * 124, p737 * 220.5, p737 * 136, p737 * 85);
    v1117.bezierCurveTo(p737 * 162.5, p737 * 65.5, p737 * 162.5, p737 * 65.5, p737 * 189, p737 * 46);
    v1117.bezierCurveTo(p737 * 208.5, p737 * 72.5, p737 * 208.5, p737 * 72.5, p737 * 228, p737 * 99);
    v1117.bezierCurveTo(p737 * 200, p737 * 232, p737 * 200, p737 * 232, p737 * 172, p737 * 365);
    v1117.closePath();
    f84(v1117, p739[1], p739[2], p737 * 12.5);
    v1117.save();
    v1117.translate(p737 * 131, p737 * 423);
    v1117.rotate(0.16);
    f83(v1117, p737 * -14, p737 * -53, p737 * 28, p737 * 106, p737 * 10);
    v1117.restore();
    f84(v1117, p739[4], p739[5], p737 * 12.5);
    v1117.save();
    v1117.translate(p737 * 122, p737 * 480);
    v1117.rotate(1.72);
    f87(v1117, 4, p737 * 26.476404589747453, p737 * 10);
    v1117.restore();
    f84(v1117, p739[1], p739[2], p737 * 12.5);
    v1117.beginPath();
    v1117.lineCap = "round";
    v1117.lineJoin = "round";
    v1117.moveTo(p737 * 210, p737 * 387);
    v1117.bezierCurveTo(p737 * 138, p737 * 376, p737 * 138, p737 * 376, p737 * 66, p737 * 365);
    v1117.bezierCurveTo(p737 * 76, p737 * 355, p737 * 76, p737 * 355, p737 * 86, p737 * 345);
    v1117.bezierCurveTo(p737 * 99, p737 * 346.5, p737 * 99, p737 * 346.5, p737 * 112, p737 * 348);
    v1117.bezierCurveTo(p737 * 128.5, p737 * 344, p737 * 128.5, p737 * 344, p737 * 145, p737 * 340);
    v1117.bezierCurveTo(p737 * 158, p737 * 348, p737 * 158, p737 * 348, p737 * 171, p737 * 356);
    v1117.bezierCurveTo(p737 * 184, p737 * 358, p737 * 184, p737 * 358, p737 * 197, p737 * 360);
    v1117.closePath();
    f84(v1117, p739[1], p739[2], p737 * 12.5);
    v1117.beginPath();
    v1117.lineCap = "round";
    v1117.lineJoin = "round";
    v1117.moveTo(p737 * 129, p737 * 338);
    v1117.bezierCurveTo(p737 * 137, p737 * 336, p737 * 137, p737 * 336, p737 * 145, p737 * 334);
    v1117.bezierCurveTo(p737 * 152.5, p737 * 338, p737 * 152.5, p737 * 338, p737 * 160, p737 * 342);
    v1117.bezierCurveTo(p737 * 184, p737 * 224, p737 * 184, p737 * 224, p737 * 208, p737 * 106);
    v1117.bezierCurveTo(p737 * 197, p737 * 88, p737 * 187, p737 * 70, p737 * 186, p737 * 70);
    v1117.bezierCurveTo(p737 * 169.5, p737 * 83, p737 * 169.5, p737 * 83, p737 * 153, p737 * 96);
    v1117.closePath();
    f84(v1117, p739[3]);
    return v1116;
  }
  const v1118 = 8;
  function f151(p740, p741, p742) {
    var v1119 = document.createElement("canvas");
    var v1120 = v1119.getContext("2d");
    v1119.width = p740 * 118;
    v1119.height = p740 * 114;
    v1120.translate(0, p740 * 10);
    f89(v1120, p740 * 42, p740 * 43, p740 * 24.758836806279895);
    f84(v1120, p742[0]);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 65, p740 * 90);
    v1120.bezierCurveTo(p740 * 72, p740 * 91, p740 * 75, p740 * 92, p740 * 71, p740 * 96);
    v1120.bezierCurveTo(p740 * 65, p740 * 98, p740 * 65, p740 * 94, p740 * 65, p740 * 91);
    v1120.closePath();
    f84(v1120, p742[0]);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 87, p740 * 45);
    v1120.bezierCurveTo(p740 * 108, p740 * 59, p740 * 100, p740 * 86, p740 * 85, p740 * 91);
    v1120.bezierCurveTo(p740 * 80, p740 * 96, p740 * 68, p740 * 95, p740 * 58, p740 * 87);
    v1120.bezierCurveTo(p740 * 53, p740 * 80, p740 * 61, p740 * 64, p740 * 66, p740 * 58);
    v1120.bezierCurveTo(p740 * 73, p740 * 48, p740 * 78, p740 * 44, p740 * 87, p740 * 45);
    v1120.closePath();
    f84(v1120, p742[0]);
    v1120.translate(0, p740 * -10);
    f89(v1120, p740 * 42, p740 * 43, p740 * 24.758836806279895);
    f84(v1120, p742[1], p742[2], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 65, p740 * 90);
    v1120.bezierCurveTo(p740 * 72, p740 * 91, p740 * 75, p740 * 92, p740 * 71, p740 * 96);
    v1120.bezierCurveTo(p740 * 65, p740 * 98, p740 * 65, p740 * 94, p740 * 65, p740 * 91);
    v1120.closePath();
    f84(v1120, p742[1], p742[2], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 87, p740 * 45);
    v1120.bezierCurveTo(p740 * 108, p740 * 59, p740 * 100, p740 * 86, p740 * 85, p740 * 91);
    v1120.bezierCurveTo(p740 * 80, p740 * 96, p740 * 68, p740 * 95, p740 * 58, p740 * 87);
    v1120.bezierCurveTo(p740 * 53, p740 * 80, p740 * 61, p740 * 64, p740 * 66, p740 * 58);
    v1120.bezierCurveTo(p740 * 73, p740 * 48, p740 * 78, p740 * 44, p740 * 87, p740 * 45);
    v1120.closePath();
    f84(v1120, p742[1], p742[2], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 52, p740 * 16);
    v1120.bezierCurveTo(p740 * 55, p740 * 19, p740 * 54, p740 * 20, p740 * 55, p740 * 22);
    v1120.bezierCurveTo(p740 * 52, p740 * 24.5, p740 * 52, p740 * 24.5, p740 * 49, p740 * 27);
    v1120.bezierCurveTo(p740 * 45, p740 * 25, p740 * 45, p740 * 25, p740 * 41, p740 * 23);
    v1120.bezierCurveTo(p740 * 45, p740 * 19, p740 * 48, p740 * 16, p740 * 52, p740 * 16);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 62, p740 * 30);
    v1120.bezierCurveTo(p740 * 66, p740 * 29, p740 * 64, p740 * 30, p740 * 66, p740 * 30);
    v1120.bezierCurveTo(p740 * 67, p740 * 31, p740 * 67, p740 * 31, p740 * 68, p740 * 32);
    v1120.bezierCurveTo(p740 * 66.5, p740 * 33.5, p740 * 66.5, p740 * 33.5, p740 * 65, p740 * 35);
    v1120.bezierCurveTo(p740 * 63.5, p740 * 32.5, p740 * 63.5, p740 * 32.5, p740 * 62, p740 * 30);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 29, p740 * 21);
    v1120.bezierCurveTo(p740 * 31, p740 * 22, p740 * 31, p740 * 26, p740 * 29, p740 * 29);
    v1120.bezierCurveTo(p740 * 26, p740 * 28.5, p740 * 26, p740 * 28.5, p740 * 23, p740 * 28);
    v1120.bezierCurveTo(p740 * 23, p740 * 26.5, p740 * 23, p740 * 26.5, p740 * 23, p740 * 25);
    v1120.bezierCurveTo(p740 * 25, p740 * 23, p740 * 25, p740 * 23, p740 * 27, p740 * 21);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 18, p740 * 36);
    v1120.bezierCurveTo(p740 * 23, p740 * 36, p740 * 24, p740 * 42, p740 * 19, p740 * 46);
    v1120.bezierCurveTo(p740 * 12, p740 * 39, p740 * 15, p740 * 38, p740 * 18, p740 * 37);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 30, p740 * 34);
    v1120.bezierCurveTo(p740 * 35, p740 * 36, p740 * 36, p740 * 39, p740 * 32, p740 * 45);
    v1120.bezierCurveTo(p740 * 25, p740 * 46, p740 * 25, p740 * 44, p740 * 30, p740 * 34);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 59, p740 * 35);
    v1120.bezierCurveTo(p740 * 58, p740 * 27, p740 * 57, p740 * 27, p740 * 52, p740 * 31);
    v1120.bezierCurveTo(p740 * 50, p740 * 36, p740 * 53, p740 * 38, p740 * 58, p740 * 36);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 63, p740 * 46);
    v1120.bezierCurveTo(p740 * 64.5, p740 * 46.5, p740 * 64.5, p740 * 46.5, p740 * 66, p740 * 47);
    v1120.bezierCurveTo(p740 * 70, p740 * 50, p740 * 70, p740 * 53, p740 * 61, p740 * 55);
    v1120.bezierCurveTo(p740 * 62, p740 * 50.5, p740 * 62, p740 * 50.5, p740 * 63, p740 * 46);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 41, p740 * 42);
    v1120.bezierCurveTo(p740 * 47, p740 * 41, p740 * 53, p740 * 47, p740 * 46, p740 * 51);
    v1120.bezierCurveTo(p740 * 38, p740 * 49, p740 * 39, p740 * 46, p740 * 41, p740 * 43);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 44, p740 * 57);
    v1120.bezierCurveTo(p740 * 54, p740 * 57, p740 * 54, p740 * 58, p740 * 55, p740 * 61);
    v1120.bezierCurveTo(p740 * 54, p740 * 63, p740 * 52, p740 * 64, p740 * 48, p740 * 65);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 20, p740 * 52);
    v1120.bezierCurveTo(p740 * 25, p740 * 51, p740 * 27, p740 * 50, p740 * 28, p740 * 54);
    v1120.bezierCurveTo(p740 * 27, p740 * 58, p740 * 24, p740 * 58, p740 * 22, p740 * 58);
    v1120.bezierCurveTo(p740 * 21, p740 * 55.5, p740 * 21, p740 * 55.5, p740 * 20, p740 * 53);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 30, p740 * 61);
    v1120.bezierCurveTo(p740 * 37, p740 * 61, p740 * 39, p740 * 63, p740 * 39, p740 * 68);
    v1120.bezierCurveTo(p740 * 36, p740 * 68.5, p740 * 36, p740 * 68.5, p740 * 33, p740 * 69);
    v1120.bezierCurveTo(p740 * 30.5, p740 * 67.5, p740 * 30.5, p740 * 67.5, p740 * 28, p740 * 66);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 88, p740 * 45);
    v1120.bezierCurveTo(p740 * 90, p740 * 46.5, p740 * 90, p740 * 46.5, p740 * 92, p740 * 48);
    v1120.bezierCurveTo(p740 * 92, p740 * 50, p740 * 92, p740 * 50, p740 * 92, p740 * 52);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 96, p740 * 53);
    v1120.bezierCurveTo(p740 * 97.5, p740 * 55, p740 * 97.5, p740 * 55, p740 * 99, p740 * 57);
    v1120.bezierCurveTo(p740 * 97.5, p740 * 59.5, p740 * 97.5, p740 * 59.5, p740 * 96, p740 * 62);
    v1120.bezierCurveTo(p740 * 93.5, p740 * 60.5, p740 * 93.5, p740 * 60.5, p740 * 91, p740 * 59);
    v1120.bezierCurveTo(p740 * 91.5, p740 * 57, p740 * 91.5, p740 * 57, p740 * 92, p740 * 55);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 92, p740 * 71);
    v1120.bezierCurveTo(p740 * 94.5, p740 * 70.5, p740 * 94.5, p740 * 70.5, p740 * 97, p740 * 70);
    v1120.bezierCurveTo(p740 * 98.5, p740 * 72.5, p740 * 98.5, p740 * 72.5, p740 * 100, p740 * 75);
    v1120.bezierCurveTo(p740 * 97, p740 * 76.5, p740 * 97, p740 * 76.5, p740 * 94, p740 * 78);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 95, p740 * 82);
    v1120.bezierCurveTo(p740 * 96, p740 * 83, p740 * 96, p740 * 83, p740 * 97, p740 * 84);
    v1120.bezierCurveTo(p740 * 97, p740 * 85.5, p740 * 97, p740 * 85.5, p740 * 97, p740 * 87);
    v1120.bezierCurveTo(p740 * 93.5, p740 * 87.5, p740 * 93.5, p740 * 87.5, p740 * 90, p740 * 88);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 86, p740 * 72);
    v1120.bezierCurveTo(p740 * 89, p740 * 76, p740 * 88, p740 * 81, p740 * 85, p740 * 82);
    v1120.bezierCurveTo(p740 * 80, p740 * 80, p740 * 82, p740 * 78, p740 * 85, p740 * 72);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 80, p740 * 86);
    v1120.bezierCurveTo(p740 * 84, p740 * 88, p740 * 86, p740 * 88, p740 * 85, p740 * 93);
    v1120.bezierCurveTo(p740 * 80, p740 * 96, p740 * 79, p740 * 96, p740 * 76, p740 * 91);
    v1120.closePath();
    f84(v1120, p742[3], p742[4], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 84, p740 * 46);
    v1120.bezierCurveTo(p740 * 93, p740 * 51, p740 * 91, p740 * 62, p740 * 80, p740 * 78);
    v1120.bezierCurveTo(p740 * 74, p740 * 86, p740 * 66, p740 * 90, p740 * 60, p740 * 86);
    v1120.bezierCurveTo(p740 * 55, p740 * 79, p740 * 57, p740 * 73, p740 * 67, p740 * 57);
    v1120.bezierCurveTo(p740 * 71, p740 * 51, p740 * 79, p740 * 44, p740 * 84, p740 * 46);
    v1120.closePath();
    f84(v1120, p742[5], p742[6], p740 * 5);
    v1120.beginPath();
    v1120.lineCap = "round";
    v1120.lineJoin = "round";
    v1120.moveTo(p740 * 76, p740 * 60);
    v1120.bezierCurveTo(p740 * 80, p740 * 66, p740 * 75, p740 * 74, p740 * 68, p740 * 74);
    v1120.bezierCurveTo(p740 * 60, p740 * 64, p740 * 68, p740 * 59, p740 * 76, p740 * 59);
    v1120.closePath();
    f84(v1120, p742[7], p742[8], p740 * 5);
    return v1119;
  }
  function f152(p743, p744, p745) {
    var v1121 = document.createElement("canvas");
    var v1122 = v1121.getContext("2d");
    var v1123 = p743 * 70;
    var v1124 = p743 * 90;
    var v1125 = p743 * 4;
    var v1126 = p743 * 5;
    v1121.width = v1123;
    v1121.height = v1124;
    v1122.save();
    v1122.translate(p743 * -80, p743 * -70 + v1126);
    v1122.globalAlpha = 0.5;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 130, p743 * 79, p743 * 132, p743 * 86, p743 * 130, p743 * 93);
    v1122.bezierCurveTo(p743 * 128, p743 * 100, p743 * 121, p743 * 107, p743 * 120, p743 * 107);
    v1122.bezierCurveTo(p743 * 120, p743 * 107, p743 * 115, p743 * 98, p743 * 115, p743 * 92);
    v1122.bezierCurveTo(p743 * 115, p743 * 86, p743 * 119, p743 * 76, p743 * 127, p743 * 73);
    v1122.closePath();
    f84(v1122, "#0d1b1c");
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * -80, p743 * -70 + v1126);
    v1122.globalAlpha = 0.5;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 112, p743 * 109, p743 * 111, p743 * 100, p743 * 106, p743 * 93);
    v1122.bezierCurveTo(p743 * 104, p743 * 90, p743 * 91, p743 * 87, p743 * 91, p743 * 87);
    v1122.bezierCurveTo(p743 * 91, p743 * 88, p743 * 91, p743 * 96, p743 * 94, p743 * 102);
    v1122.bezierCurveTo(p743 * 97, p743 * 108, p743 * 106, p743 * 112, p743 * 113, p743 * 112);
    v1122.closePath();
    f84(v1122, "#0d1b1c");
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * -80, p743 * -70 + v1126);
    v1122.globalAlpha = 0.5;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 108, p743 * 120, p743 * 100, p743 * 119, p743 * 91, p743 * 127);
    v1122.bezierCurveTo(p743 * 83, p743 * 134, p743 * 82, p743 * 146, p743 * 83, p743 * 146);
    v1122.bezierCurveTo(p743 * 84, p743 * 146, p743 * 98, p743 * 142, p743 * 103, p743 * 138);
    v1122.bezierCurveTo(p743 * 107, p743 * 135, p743 * 110, p743 * 130, p743 * 112, p743 * 121);
    v1122.closePath();
    f84(v1122, "#0d1b1c");
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * 3, p743 * -93 + v1126);
    v1122.rotate(Math.PI / 5);
    v1122.globalAlpha = 0.5;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 130, p743 * 79, p743 * 132, p743 * 86, p743 * 130, p743 * 93);
    v1122.bezierCurveTo(p743 * 128, p743 * 100, p743 * 121, p743 * 107, p743 * 120, p743 * 107);
    v1122.bezierCurveTo(p743 * 120, p743 * 107, p743 * 115, p743 * 98, p743 * 115, p743 * 92);
    v1122.bezierCurveTo(p743 * 115, p743 * 86, p743 * 119, p743 * 76, p743 * 127, p743 * 73);
    v1122.closePath();
    f84(v1122, "#0d1b1c");
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * -80, p743 * -70);
    v1122.globalAlpha = 1;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 130, p743 * 79, p743 * 132, p743 * 86, p743 * 130, p743 * 93);
    v1122.bezierCurveTo(p743 * 128, p743 * 100, p743 * 121, p743 * 107, p743 * 120, p743 * 107);
    v1122.bezierCurveTo(p743 * 120, p743 * 107, p743 * 115, p743 * 98, p743 * 115, p743 * 92);
    v1122.bezierCurveTo(p743 * 115, p743 * 86, p743 * 119, p743 * 76, p743 * 127, p743 * 73);
    v1122.closePath();
    f84(v1122, p745[0], p745[1], v1125);
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * -80, p743 * -70);
    v1122.globalAlpha = 1;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 112, p743 * 109, p743 * 111, p743 * 100, p743 * 106, p743 * 93);
    v1122.bezierCurveTo(p743 * 104, p743 * 90, p743 * 91, p743 * 87, p743 * 91, p743 * 87);
    v1122.bezierCurveTo(p743 * 91, p743 * 88, p743 * 91, p743 * 96, p743 * 94, p743 * 102);
    v1122.bezierCurveTo(p743 * 97, p743 * 108, p743 * 106, p743 * 112, p743 * 113, p743 * 112);
    v1122.closePath();
    f84(v1122, p745[0], p745[1], v1125);
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * -80, p743 * -70);
    v1122.globalAlpha = 1;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 108, p743 * 120, p743 * 100, p743 * 119, p743 * 91, p743 * 127);
    v1122.bezierCurveTo(p743 * 83, p743 * 134, p743 * 82, p743 * 146, p743 * 83, p743 * 146);
    v1122.bezierCurveTo(p743 * 84, p743 * 146, p743 * 98, p743 * 142, p743 * 103, p743 * 138);
    v1122.bezierCurveTo(p743 * 107, p743 * 135, p743 * 110, p743 * 130, p743 * 112, p743 * 121);
    v1122.closePath();
    f84(v1122, p745[0], p745[1], v1125);
    v1122.restore();
    v1122.save();
    v1122.translate(p743 * 3, p743 * -93);
    v1122.rotate(Math.PI / 5);
    v1122.globalAlpha = 1;
    v1122.beginPath();
    v1122.bezierCurveTo(p743 * 130, p743 * 79, p743 * 132, p743 * 86, p743 * 130, p743 * 93);
    v1122.bezierCurveTo(p743 * 128, p743 * 100, p743 * 121, p743 * 107, p743 * 120, p743 * 107);
    v1122.bezierCurveTo(p743 * 120, p743 * 107, p743 * 115, p743 * 98, p743 * 115, p743 * 92);
    v1122.bezierCurveTo(p743 * 115, p743 * 86, p743 * 119, p743 * 76, p743 * 127, p743 * 73);
    v1122.closePath();
    f84(v1122, p745[0], p745[1], v1125);
    v1122.restore();
    return v1121;
  }
  const v1127 = 0;
  function f153(p746, p747, p748) {
    var v1128 = document.createElement("canvas");
    var v1129 = v1128.getContext("2d");
    var v1130 = p746 * 120;
    var v1131 = p746 * 150;
    var v1132 = p746 * 60;
    var v1133 = v1132 / 4;
    var v1134 = p746 * 15;
    v1128.width = v1130;
    v1128.height = v1131;
    v1129.save();
    v1129.translate(v1130 / 2 + p746 * 0, v1131 / 2 + p746 * 0 + v1134);
    v1129.rotate(Math.PI / 3);
    v1129.globalAlpha = 0.5;
    f87(v1129, 8, v1132, v1133);
    f84(v1129, p748[0]);
    v1129.restore();
    v1129.save();
    v1129.translate(v1130 / 2 - p746 * 11, v1131 / 2 + p746 * 12);
    v1129.globalAlpha = 1;
    v1129.rotate(Math.PI / 3);
    v1129.translate(0, -v1134);
    f87(v1129, 8, v1132, v1133);
    f84(v1129, p748[1]);
    v1129.restore();
    v1129.save();
    v1129.translate(v1130 / 2 - p746 * 9, v1131 / 2 - p746 * 12);
    v1129.rotate(Math.PI / 2.8);
    f87(v1129, 5, v1132 * 0.5, v1133 * 0.4);
    f84(v1129, p748[2]);
    v1129.restore();
    v1129.save();
    v1129.translate(v1130 / 2 + p746 * 19, v1131 / 2 + p746 * 5);
    v1129.rotate(Math.PI / 1);
    f87(v1129, 5, v1132 * 0.5, v1133 * 0.4);
    f84(v1129, p748[2]);
    v1129.restore();
    v1129.save();
    v1129.translate(v1130 / 2 - p746 * 8, v1131 / 2 + p746 * 20);
    v1129.rotate(Math.PI / 2.25);
    f87(v1129, 5, v1132 * 0.5, v1133 * 0.4);
    f84(v1129, p748[2]);
    v1129.restore();
    return v1128;
  }
  function f154(p749, p750, p751) {
    var v1135 = document.createElement("canvas");
    var v1136 = v1135.getContext("2d");
    var v1137 = p749 * 220;
    var v1138 = p749 * 230;
    var v1139 = p749 * 100;
    var v1140 = v1139 / 4;
    var v1141 = p749 * 20;
    v1135.width = v1137;
    v1135.height = v1138;
    v1136.translate(v1137 / 2, v1138 / 2 + v1141);
    v1136.globalAlpha = 0.5;
    f87(v1136, 7, v1139, v1140);
    f84(v1136, p751[0]);
    v1136.globalAlpha = 1;
    v1136.translate(0, -v1141);
    f87(v1136, 7, v1139, v1140);
    f84(v1136, p751[1]);
    f87(v1136, 6, v1139 * 0.65, v1140 * 0.65);
    f84(v1136, p751[2]);
    return v1135;
  }
  function f155(p752, p753, p754) {
    var v1142 = document.createElement("canvas");
    var v1143 = v1142.getContext("2d");
    var v1144 = p752 * 180;
    var v1145 = p752 * 210;
    var v1146 = (v1148 = p752 * 60) / 4;
    var v1147 = p752 * 20;
    v1142.width = v1144;
    v1142.height = v1145;
    v1143.save();
    v1143.translate(v1144 / 2 - p752 * 0, v1145 / 2 - p752 * 35 + v1147);
    v1143.rotate(Math.PI / -1.8);
    v1143.globalAlpha = 0.5;
    v1143.translate(p752 * 0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[0]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 + p752 * 10, v1145 / 2 + p752 * 15 + v1147);
    v1143.rotate(Math.PI / 2);
    v1143.globalAlpha = 0.5;
    v1143.translate(p752 * 0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[0]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 - p752 * 50, v1145 / 2 + p752 * 40 + v1147);
    v1143.rotate(Math.PI / 3);
    v1143.globalAlpha = 0.5;
    v1143.translate(0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[0]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 - p752 * 0, v1145 / 2 - p752 * 35);
    v1143.rotate(Math.PI / -1.8);
    v1143.globalAlpha = 1;
    v1143.translate(p752 * 0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[1]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 + p752 * 10, v1145 / 2 + p752 * 15);
    v1143.rotate(Math.PI / 2);
    v1143.globalAlpha = 1;
    v1143.translate(0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[1]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 - p752 * 50, v1145 / 2 + p752 * 40);
    v1143.rotate(Math.PI / 3);
    v1143.globalAlpha = 1;
    v1143.translate(0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[1]);
    v1143.restore();
    var v1148;
    v1146 = (v1148 = p752 * 30) / 4;
    v1143.save();
    v1143.translate(v1144 / 2 + p752 * 5, v1145 / 2 - p752 * 20);
    v1143.rotate(Math.PI / -1.8);
    v1143.globalAlpha = 1;
    v1143.translate(0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[2]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 + p752 * 0, v1145 / 2 + p752 * 10);
    v1143.rotate(Math.PI / 2);
    v1143.globalAlpha = 1;
    v1143.translate(0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[2]);
    v1143.restore();
    v1143.save();
    v1143.translate(v1144 / 2 - p752 * 45, v1145 / 2 + p752 * 35);
    v1143.rotate(Math.PI / 3);
    v1143.globalAlpha = 1;
    v1143.translate(0, p752 * -20);
    f87(v1143, 5, v1148, v1146);
    f84(v1143, p754[2]);
    v1143.restore();
    f89(v1143, v1144 / 2 - p752 * 7, v1145 / 2 + p752 * 7, 5);
    f84(v1143, p754[2]);
    return v1142;
  }
  function f156(p755, p756, p757) {
    var v1149 = document.createElement("canvas");
    var v1150 = v1149.getContext("2d");
    var v1151 = p755 * 140;
    var v1152 = p755 * 150;
    var v1153 = p755 * 10;
    var v1154 = p755 * 4;
    v1149.width = v1151;
    v1149.height = v1152;
    v1150.translate(p755 * -50, p755 * -38 + v1153);
    v1150.globalAlpha = p756 ? 0.5 : 1;
    v1150.beginPath();
    v1150.bezierCurveTo(p755 * 160, p755 * 65, p755 * 160, p755 * 85, p755 * 152, p755 * 95);
    v1150.bezierCurveTo(p755 * 152, p755 * 95, p755 * 173, p755 * 94, p755 * 187, p755 * 102);
    v1150.bezierCurveTo(p755 * 187, p755 * 102, p755 * 180, p755 * 120, p755 * 155, p755 * 126);
    v1150.bezierCurveTo(p755 * 154, p755 * 126, p755 * 166, p755 * 138, p755 * 169, p755 * 148);
    v1150.bezierCurveTo(p755 * 169, p755 * 148, p755 * 148, p755 * 152, p755 * 133, p755 * 140);
    v1150.bezierCurveTo(p755 * 133, p755 * 140, p755 * 134, p755 * 160, p755 * 122, p755 * 175);
    v1150.bezierCurveTo(p755 * 122, p755 * 175, p755 * 107, p755 * 162, p755 * 107, p755 * 144);
    v1150.bezierCurveTo(p755 * 107, p755 * 144, p755 * 98, p755 * 164, p755 * 73, p755 * 167);
    v1150.bezierCurveTo(p755 * 73, p755 * 167, p755 * 72, p755 * 134, p755 * 90, p755 * 127);
    v1150.bezierCurveTo(p755 * 90, p755 * 127, p755 * 70, p755 * 134, p755 * 55, p755 * 123);
    v1150.bezierCurveTo(p755 * 55, p755 * 123, p755 * 58, p755 * 115, p755 * 75, p755 * 104);
    v1150.bezierCurveTo(p755 * 75, p755 * 104, p755 * 66, p755 * 96, p755 * 61, p755 * 77);
    v1150.bezierCurveTo(p755 * 61, p755 * 77, p755 * 83, p755 * 74, p755 * 102, p755 * 89);
    v1150.bezierCurveTo(p755 * 102, p755 * 89, p755 * 92, p755 * 66, p755 * 110, p755 * 41);
    v1150.bezierCurveTo(p755 * 111, p755 * 40, p755 * 130, p755 * 54, p755 * 130, p755 * 82);
    v1150.bezierCurveTo(p755 * 130, p755 * 82, p755 * 143, p755 * 67, p755 * 159, p755 * 65);
    v1150.closePath();
    f84(v1150, p757[0]);
    v1150.translate(0, 0 - v1153);
    v1150.globalAlpha = 1;
    v1150.beginPath();
    v1150.bezierCurveTo(p755 * 160, p755 * 65, p755 * 160, p755 * 85, p755 * 152, p755 * 95);
    v1150.bezierCurveTo(p755 * 152, p755 * 95, p755 * 173, p755 * 94, p755 * 187, p755 * 102);
    v1150.bezierCurveTo(p755 * 187, p755 * 102, p755 * 180, p755 * 120, p755 * 155, p755 * 126);
    v1150.bezierCurveTo(p755 * 154, p755 * 126, p755 * 166, p755 * 138, p755 * 169, p755 * 148);
    v1150.bezierCurveTo(p755 * 169, p755 * 148, p755 * 148, p755 * 152, p755 * 133, p755 * 140);
    v1150.bezierCurveTo(p755 * 133, p755 * 140, p755 * 134, p755 * 160, p755 * 122, p755 * 175);
    v1150.bezierCurveTo(p755 * 122, p755 * 175, p755 * 107, p755 * 162, p755 * 107, p755 * 144);
    v1150.bezierCurveTo(p755 * 107, p755 * 144, p755 * 98, p755 * 164, p755 * 73, p755 * 167);
    v1150.bezierCurveTo(p755 * 73, p755 * 167, p755 * 72, p755 * 134, p755 * 90, p755 * 127);
    v1150.bezierCurveTo(p755 * 90, p755 * 127, p755 * 70, p755 * 134, p755 * 55, p755 * 123);
    v1150.bezierCurveTo(p755 * 55, p755 * 123, p755 * 58, p755 * 115, p755 * 75, p755 * 104);
    v1150.bezierCurveTo(p755 * 75, p755 * 104, p755 * 66, p755 * 96, p755 * 61, p755 * 77);
    v1150.bezierCurveTo(p755 * 61, p755 * 77, p755 * 83, p755 * 74, p755 * 102, p755 * 89);
    v1150.bezierCurveTo(p755 * 102, p755 * 89, p755 * 92, p755 * 66, p755 * 110, p755 * 41);
    v1150.bezierCurveTo(p755 * 111, p755 * 40, p755 * 130, p755 * 54, p755 * 130, p755 * 82);
    v1150.bezierCurveTo(p755 * 130, p755 * 82, p755 * 143, p755 * 67, p755 * 159, p755 * 65);
    v1150.closePath();
    f84(v1150, p757[1], p757[2], v1154);
    return v1149;
  }
  function f161(p758, p759) {
    var v1155 = document.createElement("canvas");
    var v1156 = v1155.getContext("2d");
    v1155.width = p758 * 234;
    v1155.height = p758 * 183;
    v1156.beginPath();
    v1156.lineCap = "round";
    v1156.lineJoin = "round";
    v1156.moveTo(p758 * 76, p758 * 25);
    v1156.bezierCurveTo(p758 * 150, p758 * 3, p758 * 181, p758 * 22, p758 * 203, p758 * 41);
    v1156.bezierCurveTo(p758 * 225, p758 * 63, p758 * 225, p758 * 105, p758 * 198, p758 * 133);
    v1156.bezierCurveTo(p758 * 179, p758 * 157, p758 * 134, p758 * 178, p758 * 81, p758 * 164);
    v1156.bezierCurveTo(p758 * 19, p758 * 148, p758 * 6, p758 * 95, p758 * 21, p758 * 66);
    v1156.bezierCurveTo(p758 * 34, p758 * 39, p758 * 52, p758 * 33, p758 * 75, p758 * 25);
    v1156.closePath();
    f84(v1156, p759[0], p759[0], p758 * 4);
    return v1155;
  }
  function f158(p760, p761, p762, p763, p764) {
    var v1157 = document.createElement("canvas");
    var v1158 = v1157.getContext("2d");
    if (p763 == 0) {
      var v1159 = p760 * 270;
      var v1160 = p760 * 250;
      v1157.width = v1159;
      v1157.height = v1160;
      v1158.beginPath();
      v1158.moveTo(p760 * 140, p760 * 3);
      v1158.translate(p760 * -25, p760 * -20);
      v1158.bezierCurveTo(p760 * 218, p760 * 31, p760 * 251, p760 * 61, p760 * 265, p760 * 85);
      v1158.bezierCurveTo(p760 * 278, p760 * 108, p760 * 295, p760 * 160, p760 * 285, p760 * 195);
      v1158.bezierCurveTo(p760 * 271, p760 * 242, p760 * 213, p760 * 268, p760 * 188, p760 * 266);
      v1158.bezierCurveTo(p760 * 139, p760 * 262, p760 * 70, p760 * 244, p760 * 47, p760 * 204);
      v1158.bezierCurveTo(p760 * 20, p760 * 158, p760 * 35, p760 * 78, p760 * 59, p760 * 56);
      v1158.bezierCurveTo(p760 * 90, p760 * 28, p760 * 124, p760 * 23, p760 * 140, p760 * 23);
      v1158.closePath();
      f84(v1158, p762[0]);
    } else if (p763 == 1) {
      v1159 = p760 * 430;
      v1160 = p760 * 350;
      v1157.width = v1159;
      v1157.height = v1160;
      v1158.beginPath();
      v1158.moveTo(p760 * 180, p760 * 5);
      v1158.translate(p760 * -30, p760 * -60);
      v1158.bezierCurveTo(p760 * 283, p760 * 60, p760 * 265, p760 * 163, p760 * 335, p760 * 206);
      v1158.bezierCurveTo(p760 * 376, p760 * 231, p760 * 492, p760 * 299, p760 * 434, p760 * 357);
      v1158.bezierCurveTo(p760 * 371, p760 * 421, p760 * 289, p760 * 394, p760 * 255, p760 * 386);
      v1158.bezierCurveTo(p760 * 218, p760 * 377, p760 * 91, p760 * 359, p760 * 50, p760 * 272);
      v1158.bezierCurveTo(p760 * 12, p760 * 192, p760 * 107, p760 * 75, p760 * 178, p760 * 69);
      v1158.closePath();
      f84(v1158, p762[0]);
    } else if (p763 == 2) {
      v1159 = p760 * 400;
      v1160 = p760 * 300;
      v1157.width = v1159;
      v1157.height = v1160;
      v1158.beginPath();
      v1158.moveTo(p760 * 80, p760 * 52);
      v1158.translate(p760 * -40, p760 * -30);
      v1158.bezierCurveTo(p760 * 124, p760 * 77, p760 * 241, p760 * 22, p760 * 311, p760 * 65);
      v1158.bezierCurveTo(p760 * 352, p760 * 90, p760 * 404, p760 * 176, p760 * 346, p760 * 234);
      v1158.bezierCurveTo(p760 * 283, p760 * 298, p760 * 179, p760 * 299, p760 * 145, p760 * 291);
      v1158.bezierCurveTo(p760 * 108, p760 * 282, p760 * 100, p760 * 239, p760 * 63, p760 * 205);
      v1158.bezierCurveTo(p760 * 37, p760 * 181, p760 * 45, p760 * 131, p760 * 80, p760 * 107);
      v1158.closePath();
      f84(v1158, p762[0]);
    }
    return v1157;
  }
  function f159(p765, p766, p767, p768) {
    var v1161 = document.createElement("canvas");
    var v1162 = v1161.getContext("2d");
    var v1163 = p765 * 220;
    var v1164 = p765 * 220;
    var v1165 = p765 * 100;
    var v1166 = v1165 / 4;
    v1161.width = v1163;
    v1161.height = v1164;
    v1162.translate(v1163 / 2, v1164 / 2);
    v1162.globalAlpha = p766 ? 0.5 : 1;
    if (!p766) {
      v1162.translate(p765 * 0, p765 * -8);
    }
    f87(v1162, 7, v1165, v1166);
    f84(v1162, p766 ? p767[0] : p767[1]);
    v1162.globalAlpha = 1;
    if (p768 == 0) {
      f87(v1162, 6, v1165 * 0.65, v1166 * 0.65);
      f84(v1162, p767[2]);
    } else if (p768 == 1) {
      v1162.translate(p765 * 20, p765 * 20);
      f87(v1162, 6, v1165 * 0.45, v1166 * 0.4);
      f84(v1162, p767[2]);
    }
    return v1161;
  }
  function f160(p769, p770, p771) {
    var v1167 = document.createElement("canvas");
    var v1168 = v1167.getContext("2d");
    var v1169 = p769 * 18;
    var v1170 = p769 * 18;
    v1167.width = v1169;
    v1167.height = v1170;
    var v1171 = p769 * 9;
    var v1172 = p769 * 9;
    var v1173 = p769 * 8;
    v1168.save();
    v1168.translate(v1171, v1172);
    v1168.globalAlpha = 1;
    f89(v1168, 0, 0, v1173);
    f84(v1168, p771[0]);
    v1173 = p769 * 3;
    v1171 = 0;
    v1172 = p769 * -3;
    v1168.translate(v1171, v1172);
    v1168.globalAlpha = 1;
    f89(v1168, 0, 0, v1173);
    f84(v1168, p771[1]);
    v1168.restore();
    return v1167;
  }
  function f161(p772, p773) {
    var v1174 = document.createElement("canvas");
    var v1175 = v1174.getContext("2d");
    v1174.width = p772 * 80;
    v1174.height = p772 * 100;
    v1175.scale(0.5, 0.5);
    v1175.translate(10, 15);
    v1175.globalAlpha = 0.5;
    v1175.beginPath();
    v1175.lineCap = "round";
    v1175.lineJoin = "round";
    v1175.moveTo(p772 * 47, p772 * 5);
    v1175.bezierCurveTo(p772 * 19, p772 * 30, p772 * 12, p772 * 42, p772 * 10, p772 * 55);
    v1175.bezierCurveTo(p772 * 11, p772 * 75, p772 * 27, p772 * 76, p772 * 36, p772 * 72);
    v1175.bezierCurveTo(p772 * 52, p772 * 60, p772 * 53, p772 * 46, p772 * 54, p772 * 31);
    v1175.bezierCurveTo(p772 * 53, p772 * 14, p772 * 50, p772 * 9, p772 * 48, p772 * 6);
    v1175.closePath();
    f84(v1175, p773[0]);
    v1175.beginPath();
    v1175.lineCap = "round";
    v1175.lineJoin = "round";
    v1175.moveTo(p772 * 17, p772 * 70);
    v1175.bezierCurveTo(p772 * 18, p772 * 77, p772 * 10, p772 * 83, p772 * 4, p772 * 87);
    f84(v1175, vVVUndefined202, p773[0], p772 * 10);
    v1175.translate(0, -10);
    v1175.globalAlpha = 1;
    v1175.beginPath();
    v1175.lineCap = "round";
    v1175.lineJoin = "round";
    v1175.moveTo(p772 * 47, p772 * 5);
    v1175.bezierCurveTo(p772 * 19, p772 * 30, p772 * 12, p772 * 42, p772 * 10, p772 * 55);
    v1175.bezierCurveTo(p772 * 11, p772 * 75, p772 * 27, p772 * 76, p772 * 36, p772 * 72);
    v1175.bezierCurveTo(p772 * 52, p772 * 60, p772 * 53, p772 * 46, p772 * 54, p772 * 31);
    v1175.bezierCurveTo(p772 * 53, p772 * 14, p772 * 50, p772 * 9, p772 * 48, p772 * 6);
    v1175.closePath();
    f84(v1175, p773[1], p773[2], p772 * 8);
    v1175.beginPath();
    v1175.lineCap = "round";
    v1175.lineJoin = "round";
    v1175.moveTo(p772 * 17, p772 * 70);
    v1175.bezierCurveTo(p772 * 18, p772 * 77, p772 * 10, p772 * 83, p772 * 4, p772 * 87);
    f84(v1175, undefined, p773[2], p772 * 8);
    v1175.globalAlpha = 0.5;
    v1175.beginPath();
    v1175.lineCap = "round";
    v1175.lineJoin = "round";
    v1175.moveTo(p772 * 17, p772 * 70);
    v1175.bezierCurveTo(p772 * 33, p772 * 52, p772 * 39, p772 * 33, p772 * 48, p772 * 7);
    f84(v1175, undefined, p773[2], p772 * 8);
    return v1174;
  }
  function f162(p774, p775, p776, p777, p778, p779, p780, p781, p782, p783, p784) {
    if (vVUndefined11 === p784) {
      p784 = 0;
    }
    var v1176 = document.createElement("canvas");
    var v1177 = v1176.getContext("2d");
    p779 = p779 ? p774 * p779 : 0;
    var v1178 = Math.floor(p774 * p776);
    v1177.font = v1178 + "px Baloo Paaji";
    v1177.lineJoin = "round";
    p781 *= p774;
    var v1179 = p780 ? p781 * 2 : 0;
    if (p782) {
      var v1180 = Math.min(v1177.measureText(p775).width + p774 * 2 + v1179, p782);
    } else {
      v1180 = v1177.measureText(p775).width + p774 * 2 + v1179 + p774 * p784 * 2;
    }
    v1178 = (v1178 + p779 + p784) * p774 + v1179;
    v1176.width = v1180;
    v1176.height = v1178;
    if (p780) {
      v1177.fillStyle = p780;
      f83(v1177, 0, 0, v1180, v1178, p781 * 2);
      v1177.fill();
      v1177.translate(p781, p781);
    }
    v1177.textBaseline = "middle";
    v1177.font = p776 + "px Baloo Paaji";
    v1177.lineJoin = "round";
    if (p778) {
      v1177.beginPath();
      v1177.fillStyle = p778;
      v1177.fillText(p775, 0, v1178 / 2 + p779 - v1179 / 2, v1180);
    }
    v1177.beginPath();
    if (p783) {
      v1177.strokeStyle = p783;
      v1177.lineWidth = p784;
      v1177.strokeText(p775, p784, (v1178 - v1179) / 2, v1180);
    }
    v1177.fillStyle = p777;
    v1177.fillText(p775, p784, (v1178 - v1179) / 2, v1180);
    return v1176;
  }
  function f163(p785, p786, p787) {
    var v1181 = document.createElement("canvas");
    var v1182 = v1181.getContext("2d");
    v1181.width = p785 * 373;
    v1181.height = p785 * 314;
    v1182.globalAlpha = p786 ? 0.5 : 1;
    v1182.translate(p785 * 5, p785 * 5);
    v1182.save();
    v1182.translate(p785 * 184.048583984375, p785 * 69.1805419921875);
    f83(v1182, p785 * -40, p785 * -28.5, p785 * 80, p785 * 57, p785 * 10);
    v1182.restore();
    f84(v1182, p787[1], p787[2], p785 * 4);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p785 * 185.048583984375, p785 * 61.6805419921875);
    v1182.bezierCurveTo(p785 * 145.048583984375, p785 * 59.6805419921875, p785 * 138.048583984375, p785 * 41.6805419921875, p785 * 148.048583984375, p785 * 33.6805419921875);
    v1182.bezierCurveTo(p785 * 169.048583984375, p785 * 17.6805419921875, p785 * 194.048583984375, p785 * 20.6805419921875, p785 * 210.048583984375, p785 * 27.6805419921875);
    v1182.bezierCurveTo(p785 * 234.048583984375, p785 * 40.6805419921875, p785 * 225.048583984375, p785 * 57.6805419921875, p785 * 186.048583984375, p785 * 61.6805419921875);
    v1182.closePath();
    f84(v1182, p787[0], p787[0], p785 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p785 * 224.048583984375, p785 * 56.6805419921875);
    v1182.bezierCurveTo(p785 * 326.048583984375, p785 * 69.6805419921875, p785 * 363.048583984375, p785 * 148.6805419921875, p785 * 349.048583984375, p785 * 206.6805419921875);
    v1182.bezierCurveTo(p785 * 329.048583984375, p785 * 278.6805419921875, p785 * 252.048583984375, p785 * 283.6805419921875, p785 * 206.048583984375, p785 * 275.6805419921875);
    v1182.bezierCurveTo(p785 * 206.548583984375, p785 * 266.6805419921875, p785 * 206.548583984375, p785 * 266.6805419921875, p785 * 207.048583984375, p785 * 257.6805419921875);
    v1182.bezierCurveTo(p785 * 276.048583984375, p785 * 268.6805419921875, p785 * 308.048583984375, p785 * 239.6805419921875, p785 * 323.048583984375, p785 * 208.6805419921875);
    v1182.bezierCurveTo(p785 * 352.048583984375, p785 * 145.6805419921875, p785 * 292.048583984375, p785 * 86.6805419921875, p785 * 223.048583984375, p785 * 74.6805419921875);
    v1182.closePath();
    f84(v1182, p787[0], p787[0], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 183.548583984375, p785 * 119.6805419921875);
    f83(v1182, p785 * -121.5, p785 * -45, p785 * 243, p785 * 90, p785 * 40);
    v1182.restore();
    f84(v1182, p787[0], p787[0], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 183.048583984375, p785 * 155.6805419921875);
    f83(v1182, p785 * -121, p785 * -52, p785 * 242, p785 * 104, p785 * 40);
    v1182.restore();
    f84(v1182, p787[0], p787[0], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 183.048583984375, p785 * 205.1805419921875);
    f83(v1182, p785 * -121, p785 * -50.5, p785 * 242, p785 * 101, p785 * 40);
    v1182.restore();
    f84(v1182, p787[0], p787[0], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 185.048583984375, p785 * 204.1805419921875);
    f83(v1182, p785 * -100, p785 * -34.5, p785 * 200, p785 * 69, p785 * 40);
    v1182.restore();
    f84(v1182, p787[0], p787[0], p785 * 6);
    f89(v1182, p785 * 185.048583984375, p785 * 257.6805419921875, p785 * 27.018512172212592);
    f84(v1182, p787[0], p787[0], p785 * 6);
    v1182.globalAlpha = 1;
    v1182.translate(p785 * -5, p785 * -5);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p785 * 224.048583984375, p785 * 56.6805419921875);
    v1182.bezierCurveTo(p785 * 326.048583984375, p785 * 69.6805419921875, p785 * 363.048583984375, p785 * 148.6805419921875, p785 * 349.048583984375, p785 * 206.6805419921875);
    v1182.bezierCurveTo(p785 * 329.048583984375, p785 * 278.6805419921875, p785 * 252.048583984375, p785 * 283.6805419921875, p785 * 206.048583984375, p785 * 275.6805419921875);
    v1182.bezierCurveTo(p785 * 206.548583984375, p785 * 266.6805419921875, p785 * 206.548583984375, p785 * 266.6805419921875, p785 * 207.048583984375, p785 * 257.6805419921875);
    v1182.bezierCurveTo(p785 * 276.048583984375, p785 * 268.6805419921875, p785 * 308.048583984375, p785 * 239.6805419921875, p785 * 323.048583984375, p785 * 208.6805419921875);
    v1182.bezierCurveTo(p785 * 352.048583984375, p785 * 145.6805419921875, p785 * 292.048583984375, p785 * 86.6805419921875, p785 * 223.048583984375, p785 * 74.6805419921875);
    v1182.closePath();
    f84(v1182, p787[3], p787[4], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 184.048583984375, p785 * 69.1805419921875);
    f83(v1182, p785 * -40, p785 * -28.5, p785 * 80, p785 * 57, p785 * 10);
    v1182.restore();
    f84(v1182, p787[1], p787[2], p785 * 4);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p785 * 185.048583984375, p785 * 61.6805419921875);
    v1182.bezierCurveTo(p785 * 145.048583984375, p785 * 59.6805419921875, p785 * 138.048583984375, p785 * 41.6805419921875, p785 * 148.048583984375, p785 * 33.6805419921875);
    v1182.bezierCurveTo(p785 * 169.048583984375, p785 * 17.6805419921875, p785 * 194.048583984375, p785 * 20.6805419921875, p785 * 210.048583984375, p785 * 27.6805419921875);
    v1182.bezierCurveTo(p785 * 234.048583984375, p785 * 40.6805419921875, p785 * 225.048583984375, p785 * 57.6805419921875, p785 * 186.048583984375, p785 * 61.6805419921875);
    v1182.closePath();
    f84(v1182, p787[1], p787[2], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 183.548583984375, p785 * 119.6805419921875);
    f83(v1182, p785 * -121.5, p785 * -45, p785 * 243, p785 * 90, p785 * 40);
    v1182.restore();
    f84(v1182, p787[5], p787[4], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 183.048583984375, p785 * 155.6805419921875);
    f83(v1182, p785 * -121, p785 * -52, p785 * 242, p785 * 104, p785 * 40);
    v1182.restore();
    f84(v1182, p787[3], p787[4], p785 * 6);
    v1182.save();
    v1182.translate(p785 * 183.048583984375, p785 * 205.1805419921875);
    f83(v1182, p785 * -121, p785 * -50.5, p785 * 242, p785 * 101, p785 * 40);
    v1182.restore();
    f84(v1182, p787[6], p787[4], p785 * 6);
    v1182.globalCompositeOperation = "destination-out";
    v1182.save();
    v1182.translate(p785 * 185.048583984375, p785 * 204.1805419921875);
    f83(v1182, p785 * -100, p785 * -34.5, p785 * 200, p785 * 69, p785 * 40);
    v1182.restore();
    f84(v1182, p787[7], p787[8], p785 * 6);
    v1182.globalCompositeOperation = "source-over";
    v1182.globalAlpha = 0.5;
    v1182.save();
    v1182.translate(p785 * 185.048583984375, p785 * 204.1805419921875);
    f83(v1182, p785 * -100, p785 * -34.5, p785 * 200, p785 * 69, p785 * 40);
    v1182.restore();
    f84(v1182, p787[7], p787[8], p785 * 6);
    v1182.globalAlpha = 1;
    v1182.save();
    f89(v1182, p785 * 185.048583984375, p785 * 257.6805419921875, p785 * 27.018512172212592);
    f84(v1182, p787[3], p787[4], p785 * 6);
    v1182.restore();
    return v1181;
  }
  function f164(p788, p789, p790) {
    var v1183 = document.createElement("canvas");
    var v1184 = v1183.getContext("2d");
    v1183.width = p788 * 400;
    v1183.height = p788 * 400;
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p788 * 96.5, p788 * 277.34375);
    v1184.bezierCurveTo(p788 * 197.5, p788 * 259.84375, p788 * 197.5, p788 * 259.84375, p788 * 298.5, p788 * 242.34375);
    v1184.bezierCurveTo(p788 * 311.5, p788 * 231.34375, p788 * 307.5, p788 * 168.34375, p788 * 298.5, p788 * 150.34375);
    v1184.bezierCurveTo(p788 * 198, p788 * 170.34375, p788 * 198, p788 * 170.34375, p788 * 97.5, p788 * 190.34375);
    v1184.closePath();
    f84(v1184, p790[1], p790[2], p788 * 12);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p788 * 98.5, p788 * 214.34375);
    v1184.bezierCurveTo(p788 * 199, p788 * 196.34375, p788 * 199, p788 * 196.34375, p788 * 299.5, p788 * 178.34375);
    v1184.closePath();
    f84(v1184, vVVUndefined21, p790[2], p788 * 12);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p788 * 98.5, p788 * 247.34375);
    v1184.bezierCurveTo(p788 * 201.5, p788 * 229.34375, p788 * 201.5, p788 * 229.34375, p788 * 304.5, p788 * 211.34375);
    v1184.closePath();
    f84(v1184, undefined, p790[2], p788 * 12);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p788 * 97.5, p788 * 189.34375);
    v1184.bezierCurveTo(p788 * 97, p788 * 199.84375, p788 * 97, p788 * 199.84375, p788 * 96.5, p788 * 210.34375);
    v1184.bezierCurveTo(p788 * 110.5, p788 * 204.34375, p788 * 110.5, p788 * 204.34375, p788 * 124.5, p788 * 198.34375);
    v1184.bezierCurveTo(p788 * 137.5, p788 * 203.84375, p788 * 137.5, p788 * 203.84375, p788 * 150.5, p788 * 209.34375);
    v1184.bezierCurveTo(p788 * 172, p788 * 197.84375, p788 * 172, p788 * 197.84375, p788 * 193.5, p788 * 186.34375);
    v1184.bezierCurveTo(p788 * 211.5, p788 * 189.84375, p788 * 211.5, p788 * 189.84375, p788 * 229.5, p788 * 193.34375);
    v1184.bezierCurveTo(p788 * 240.5, p788 * 193.34375, p788 * 240.5, p788 * 193.34375, p788 * 251.5, p788 * 193.34375);
    v1184.bezierCurveTo(p788 * 261, p788 * 182.84375, p788 * 261, p788 * 182.84375, p788 * 270.5, p788 * 172.34375);
    v1184.bezierCurveTo(p788 * 287.5, p788 * 169.34375, p788 * 287.5, p788 * 169.34375, p788 * 304.5, p788 * 166.34375);
    v1184.bezierCurveTo(p788 * 304.5, p788 * 156.34375, p788 * 300.5, p788 * 145.34375, p788 * 298.5, p788 * 147.34375);
    v1184.closePath();
    f84(v1184, p790[3], p790[4], p788 * 12);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p788 * 300.5, p788 * 147.34375);
    v1184.bezierCurveTo(p788 * 293.5, p788 * 121.34375, p788 * 278.5, p788 * 106.34375, p788 * 256.5, p788 * 101.34375);
    v1184.bezierCurveTo(p788 * 176.5, p788 * 145.34375, p788 * 176.5, p788 * 145.34375, p788 * 96.5, p788 * 189.34375);
    v1184.closePath();
    f84(v1184, p790[5], p790[6], p788 * 12);
    f89(v1184, p788 * 252.5, p788 * 129.34375, p788 * 18.027756377319946);
    f84(v1184, p790[7]);
    f89(v1184, p788 * 248.5, p788 * 121.34375, p788 * 8.246211251235321);
    f84(v1184, p790[8]);
    return v1183;
  }
  function f165(p791) {
    const v1185 = Math.floor;
    let v1186 = 0;
    Math.floor = function (p792) {
      for (let v1187 = 0; v1187 < 9452; v1187++) {
        v1186 += v1187;
      }
      return v1185(p792);
    };
  }
  function f166(p793, p794, p795) {
    var v1188 = document.createElement("canvas");
    var v1189 = v1188.getContext("2d");
    v1188.width = p793 * 400;
    v1188.height = p793 * 400;
    v1189.globalAlpha = p794 ? 0.5 : 1;
    v1189.translate(p793 * 10, p793 * 5);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 100.5, p793 * 126.34375);
    v1189.bezierCurveTo(p793 * 151.5, p793 * 104.34375, p793 * 279.5, p793 * 188.34375, p793 * 297.5, p793 * 292.34375);
    v1189.bezierCurveTo(p793 * 222.5, p793 * 307.34375, p793 * 106.5, p793 * 196.34375, p793 * 100.5, p793 * 127.34375);
    v1189.closePath();
    f84(v1189, p795[0], p795[0], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 106.5, p793 * 131.34375);
    v1189.bezierCurveTo(p793 * 140.5, p793 * 142.34375, p793 * 225.5, p793 * 184.34375, p793 * 290.5, p793 * 287.34375);
    v1189.bezierCurveTo(p793 * 270.5, p793 * 188.34375, p793 * 152.5, p793 * 118.34375, p793 * 107.5, p793 * 131.34375);
    v1189.closePath();
    f84(v1189, p795[0]);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 157.5, p793 * 137.34375);
    v1189.bezierCurveTo(p793 * 161.5, p793 * 138.34375, p793 * 164.5, p793 * 140.34375, p793 * 168.5, p793 * 142.34375);
    v1189.bezierCurveTo(p793 * 165.5, p793 * 156.34375, p793 * 141.5, p793 * 176.34375, p793 * 126.5, p793 * 179.34375);
    v1189.bezierCurveTo(p793 * 123.5, p793 * 173.34375, p793 * 120.5, p793 * 169.34375, p793 * 120.5, p793 * 169.34375);
    v1189.bezierCurveTo(p793 * 141.5, p793 * 161.34375, p793 * 156.5, p793 * 145.34375, p793 * 155.5, p793 * 136.34375);
    v1189.closePath();
    f84(v1189, p795[0]);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 196.5, p793 * 151.34375);
    v1189.bezierCurveTo(p793 * 211.5, p793 * 158.34375, p793 * 224.5, p793 * 171.34375, p793 * 229.5, p793 * 176.34375);
    v1189.bezierCurveTo(p793 * 246.5, p793 * 163.34375, p793 * 259.5, p793 * 166.34375, p793 * 272.5, p793 * 168.34375);
    v1189.bezierCurveTo(p793 * 254.5, p793 * 146.34375, p793 * 214.5, p793 * 145.34375, p793 * 198.5, p793 * 151.34375);
    v1189.closePath();
    f84(v1189, p795[0], p795[0], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 154.5, p793 * 222.34375);
    v1189.bezierCurveTo(p793 * 164.5, p793 * 234.34375, p793 * 173.5, p793 * 242.34375, p793 * 178.5, p793 * 245.34375);
    v1189.bezierCurveTo(p793 * 174.5, p793 * 265.34375, p793 * 180.5, p793 * 274.34375, p793 * 186.5, p793 * 283.34375);
    v1189.bezierCurveTo(p793 * 165.5, p793 * 277.34375, p793 * 151.5, p793 * 245.34375, p793 * 155.5, p793 * 224.34375);
    v1189.closePath();
    f84(v1189, p795[0], p795[0], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 279.5, p793 * 294.34375);
    v1189.bezierCurveTo(p793 * 286.5, p793 * 285.84375, p793 * 286.5, p793 * 285.84375, p793 * 293.5, p793 * 277.34375);
    v1189.bezierCurveTo(p793 * 315.5, p793 * 280.34375, p793 * 315.5, p793 * 280.34375, p793 * 337.5, p793 * 283.34375);
    v1189.bezierCurveTo(p793 * 340.5, p793 * 311.34375, p793 * 317.5, p793 * 326.34375, p793 * 307.5, p793 * 331.34375);
    v1189.closePath();
    f84(v1189, p795[0], p795[0], p793 * 12);
    v1189.globalAlpha = 1;
    v1189.translate(p793 * -10, p793 * -5);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 100.5, p793 * 126.34375);
    v1189.bezierCurveTo(p793 * 151.5, p793 * 104.34375, p793 * 279.5, p793 * 188.34375, p793 * 297.5, p793 * 292.34375);
    v1189.bezierCurveTo(p793 * 222.5, p793 * 307.34375, p793 * 106.5, p793 * 196.34375, p793 * 100.5, p793 * 127.34375);
    v1189.closePath();
    f84(v1189, p795[1], p795[2], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 106.5, p793 * 131.34375);
    v1189.bezierCurveTo(p793 * 140.5, p793 * 142.34375, p793 * 225.5, p793 * 184.34375, p793 * 290.5, p793 * 287.34375);
    v1189.bezierCurveTo(p793 * 270.5, p793 * 188.34375, p793 * 152.5, p793 * 118.34375, p793 * 107.5, p793 * 131.34375);
    v1189.closePath();
    f84(v1189, p795[3]);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 157.5, p793 * 137.34375);
    v1189.bezierCurveTo(p793 * 161.5, p793 * 138.34375, p793 * 164.5, p793 * 140.34375, p793 * 168.5, p793 * 142.34375);
    v1189.bezierCurveTo(p793 * 165.5, p793 * 156.34375, p793 * 141.5, p793 * 176.34375, p793 * 126.5, p793 * 179.34375);
    v1189.bezierCurveTo(p793 * 123.5, p793 * 173.34375, p793 * 120.5, p793 * 169.34375, p793 * 120.5, p793 * 169.34375);
    v1189.bezierCurveTo(p793 * 141.5, p793 * 161.34375, p793 * 156.5, p793 * 145.34375, p793 * 155.5, p793 * 136.34375);
    v1189.closePath();
    f84(v1189, p795[4]);
    f89(v1189, p793 * 125.5, p793 * 140.34375, p793 * 11.180339887498949);
    f84(v1189, p795[5]);
    f89(v1189, p793 * 122.5, p793 * 135.34375, p793 * 5.0990195135927845);
    f84(v1189, p795[6]);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 196.5, p793 * 151.34375);
    v1189.bezierCurveTo(p793 * 211.5, p793 * 158.34375, p793 * 224.5, p793 * 171.34375, p793 * 229.5, p793 * 176.34375);
    v1189.bezierCurveTo(p793 * 246.5, p793 * 163.34375, p793 * 259.5, p793 * 166.34375, p793 * 272.5, p793 * 168.34375);
    v1189.bezierCurveTo(p793 * 254.5, p793 * 146.34375, p793 * 214.5, p793 * 145.34375, p793 * 198.5, p793 * 151.34375);
    v1189.closePath();
    f84(v1189, p795[7], p795[8], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 154.5, p793 * 222.34375);
    v1189.bezierCurveTo(p793 * 164.5, p793 * 234.34375, p793 * 173.5, p793 * 242.34375, p793 * 178.5, p793 * 245.34375);
    v1189.bezierCurveTo(p793 * 174.5, p793 * 265.34375, p793 * 180.5, p793 * 274.34375, p793 * 186.5, p793 * 283.34375);
    v1189.bezierCurveTo(p793 * 165.5, p793 * 277.34375, p793 * 151.5, p793 * 245.34375, p793 * 155.5, p793 * 224.34375);
    v1189.closePath();
    f84(v1189, p795[7], p795[8], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 279.5, p793 * 294.34375);
    v1189.bezierCurveTo(p793 * 286.5, p793 * 285.84375, p793 * 286.5, p793 * 285.84375, p793 * 293.5, p793 * 277.34375);
    v1189.bezierCurveTo(p793 * 315.5, p793 * 280.34375, p793 * 315.5, p793 * 280.34375, p793 * 337.5, p793 * 283.34375);
    v1189.bezierCurveTo(p793 * 340.5, p793 * 311.34375, p793 * 317.5, p793 * 326.34375, p793 * 307.5, p793 * 331.34375);
    v1189.closePath();
    f84(v1189, p795[7], p795[8], p793 * 12);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 296.5, p793 * 287.34375);
    v1189.bezierCurveTo(p793 * 311.5, p793 * 291.34375, p793 * 311.5, p793 * 291.34375, p793 * 326.5, p793 * 295.34375);
    v1189.closePath();
    f84(v1189, vVVVVUndefined20, p795[9], p793 * 6);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 294.5, p793 * 289.34375);
    v1189.bezierCurveTo(p793 * 308.5, p793 * 297.34375, p793 * 308.5, p793 * 297.34375, p793 * 322.5, p793 * 305.34375);
    v1189.closePath();
    f84(v1189, vVVVUndefined2022, p795[9], p793 * 6);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 294.5, p793 * 291.34375);
    v1189.bezierCurveTo(p793 * 304, p793 * 303.34375, p793 * 304, p793 * 303.34375, p793 * 313.5, p793 * 315.34375);
    v1189.closePath();
    f84(v1189, undefined, p795[9], p793 * 6);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 226.5, p793 * 161.34375);
    v1189.bezierCurveTo(p793 * 230.5, p793 * 160.34375, p793 * 236.5, p793 * 158.34375, p793 * 238.5, p793 * 161.34375);
    v1189.bezierCurveTo(p793 * 238.5, p793 * 157.34375, p793 * 228.5, p793 * 159.34375, p793 * 227.5, p793 * 161.34375);
    v1189.closePath();
    f84(v1189, undefined, p795[9], p793 * 4);
    v1189.beginPath();
    v1189.lineCap = "round";
    v1189.lineJoin = "round";
    v1189.moveTo(p793 * 167.5, p793 * 248.34375);
    v1189.bezierCurveTo(p793 * 165.5, p793 * 251.34375, p793 * 168.5, p793 * 256.34375, p793 * 168.5, p793 * 253.34375);
    v1189.bezierCurveTo(p793 * 166.5, p793 * 252.34375, p793 * 168.5, p793 * 246.34375, p793 * 166.5, p793 * 247.34375);
    v1189.closePath();
    f84(v1189, undefined, p795[9], p793 * 3);
    return v1188;
  }
  function f167(p796, p797, p798) {
    var v1190 = document.createElement("canvas");
    var v1191 = v1190.getContext("2d");
    var v1192 = p796 * 130;
    var v1193 = p796 * 142;
    var v1194 = v1192 / 2;
    var v1195 = v1193 / 2;
    v1190.width = v1192;
    v1190.height = v1193;
    v1191.translate(v1194, v1195 + p796 * 7);
    v1191.globalAlpha = p797 ? 0.5 : 1;
    f89(v1191, 0, 0, p796 * 60);
    f84(v1191, p798[0]);
    v1191.translate(0, p796 * -7);
    v1191.globalAlpha = 1;
    f89(v1191, 0, 0, p796 * 60);
    f84(v1191, p798[1], p798[2], p796 * 4);
    f89(v1191, 0, 0, p796 * 40);
    f84(v1191, p798[3]);
    f89(v1191, 0, 0, p796 * 25);
    f84(v1191, p798[4], p798[5], p796 * 8);
    return v1190;
  }
  function f168(p799, p800, p801) {
    var v1196 = document.createElement("canvas");
    var v1197 = v1196.getContext("2d");
    var v1198 = p800 * p799 * 2;
    var v1199 = p799 * p800 * 2;
    var v1200 = v1198 / 2;
    var v1201 = v1199 / 2;
    v1196.width = v1198;
    v1196.height = v1199;
    v1197.translate(v1200, v1201);
    f89(v1197, 0, 0, p800 * p799);
    f84(v1197, p801);
    return v1196;
  }
  function f169(p802, p803, p804) {
    var v1202 = document.createElement("canvas");
    var v1203 = v1202.getContext("2d");
    v1202.width = p802 * 220;
    v1202.height = p802 * 180;
    v1203.globalAlpha = p803 ? 0.5 : 1;
    v1203.translate(p802 * -90, p802 * -150);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 104, p802 * 237.8000030517578);
    v1203.bezierCurveTo(p802 * 110, p802 * 237.8000030517578, p802 * 110, p802 * 237.8000030517578, p802 * 116, p802 * 237.8000030517578);
    v1203.bezierCurveTo(p802 * 116, p802 * 241.8000030517578, p802 * 116, p802 * 241.8000030517578, p802 * 116, p802 * 245.8000030517578);
    v1203.bezierCurveTo(p802 * 115, p802 * 245.3000030517578, p802 * 115, p802 * 245.3000030517578, p802 * 114, p802 * 244.8000030517578);
    v1203.bezierCurveTo(p802 * 109.5, p802 * 244.8000030517578, p802 * 109.5, p802 * 244.8000030517578, p802 * 105, p802 * 244.8000030517578);
    v1203.closePath();
    f84(v1203, p804[5], p804[5], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 115, p802 * 211.20000457763672);
    v1203.bezierCurveTo(p802 * 106, p802 * 216.20000457763672, p802 * 101, p802 * 234.20000457763672, p802 * 102, p802 * 241.20000457763672);
    v1203.bezierCurveTo(p802 * 102, p802 * 260.2000045776367, p802 * 115, p802 * 269.2000045776367, p802 * 115, p802 * 269.2000045776367);
    v1203.bezierCurveTo(p802 * 116, p802 * 265.2000045776367, p802 * 115.5, p802 * 265.2000045776367, p802 * 116, p802 * 261.2000045776367);
    v1203.bezierCurveTo(p802 * 112, p802 * 264, p802 * 108, p802 * 254, p802 * 106, p802 * 242);
    v1203.bezierCurveTo(p802 * 105, p802 * 232, p802 * 110, p802 * 222, p802 * 115, p802 * 218);
    v1203.bezierCurveTo(p802 * 116, p802 * 216.75, p802 * 115.5, p802 * 217.375, p802 * 116, p802 * 216.75);
    v1203.closePath();
    f84(v1203, p804[5], p804[5], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 120, p802 * 207);
    v1203.bezierCurveTo(p802 * 115, p802 * 206, p802 * 114, p802 * 209, p802 * 114, p802 * 211);
    v1203.bezierCurveTo(p802 * 114, p802 * 268, p802 * 114, p802 * 241, p802 * 114, p802 * 271);
    v1203.bezierCurveTo(p802 * 115, p802 * 276, p802 * 118, p802 * 276, p802 * 120, p802 * 276);
    v1203.bezierCurveTo(p802 * 122, p802 * 273, p802 * 120.5, p802 * 274.5, p802 * 121, p802 * 273);
    v1203.bezierCurveTo(p802 * 121, p802 * 241, p802 * 121, p802 * 241, p802 * 121, p802 * 209);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 284, p802 * 238);
    v1203.bezierCurveTo(p802 * 289.5, p802 * 238, p802 * 289.5, p802 * 238, p802 * 295, p802 * 238);
    v1203.bezierCurveTo(p802 * 295, p802 * 241.5, p802 * 295, p802 * 241.5, p802 * 295, p802 * 245);
    v1203.bezierCurveTo(p802 * 289.5, p802 * 245, p802 * 289.5, p802 * 245, p802 * 284, p802 * 245);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 283, p802 * 211);
    v1203.bezierCurveTo(p802 * 293, p802 * 216, p802 * 297, p802 * 231, p802 * 297, p802 * 241);
    v1203.bezierCurveTo(p802 * 298, p802 * 254, p802 * 290, p802 * 265, p802 * 284, p802 * 269);
    v1203.bezierCurveTo(p802 * 283, p802 * 266, p802 * 283.5, p802 * 266, p802 * 283, p802 * 263);
    v1203.bezierCurveTo(p802 * 290, p802 * 260, p802 * 292, p802 * 251, p802 * 293, p802 * 242);
    v1203.bezierCurveTo(p802 * 292, p802 * 223, p802 * 289, p802 * 224, p802 * 284, p802 * 218);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 280, p802 * 206);
    v1203.bezierCurveTo(p802 * 284, p802 * 206, p802 * 285, p802 * 208, p802 * 285, p802 * 211);
    v1203.bezierCurveTo(p802 * 285, p802 * 241.5, p802 * 285, p802 * 241.5, p802 * 285, p802 * 272);
    v1203.bezierCurveTo(p802 * 284, p802 * 275, p802 * 284, p802 * 275, p802 * 280, p802 * 275);
    v1203.bezierCurveTo(p802 * 279, p802 * 273.5, p802 * 279, p802 * 273.5, p802 * 278, p802 * 272);
    v1203.bezierCurveTo(p802 * 278, p802 * 240.5, p802 * 278, p802 * 240.5, p802 * 278, p802 * 209);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 138, p802 * 298.40000915527344);
    v1203.bezierCurveTo(p802 * 141, p802 * 311.40000915527344, p802 * 151, p802 * 314.40000915527344, p802 * 162, p802 * 316.40000915527344);
    v1203.bezierCurveTo(p802 * 224, p802 * 316.40000915527344, p802 * 200, p802 * 315.90000915527344, p802 * 238, p802 * 315.40000915527344);
    v1203.bezierCurveTo(p802 * 254, p802 * 316.40000915527344, p802 * 261, p802 * 306.40000915527344, p802 * 264, p802 * 298.40000915527344);
    v1203.bezierCurveTo(p802 * 255, p802 * 304.40000915527344, p802 * 250, p802 * 306.40000915527344, p802 * 244, p802 * 306.40000915527344);
    v1203.bezierCurveTo(p802 * 201, p802 * 306.90000915527344, p802 * 201, p802 * 306.90000915527344, p802 * 158, p802 * 307.40000915527344);
    v1203.bezierCurveTo(p802 * 150, p802 * 306.40000915527344, p802 * 148, p802 * 306.40000915527344, p802 * 139, p802 * 300.40000915527344);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 161, p802 * 177.5999984741211);
    v1203.bezierCurveTo(p802 * 130, p802 * 175.5999984741211, p802 * 123, p802 * 190.5999984741211, p802 * 122, p802 * 205.5999984741211);
    v1203.bezierCurveTo(p802 * 121, p802 * 277.5999984741211, p802 * 122, p802 * 242.5999984741211, p802 * 122, p802 * 279.5999984741211);
    v1203.bezierCurveTo(p802 * 128, p802 * 297.5999984741211, p802 * 137, p802 * 299.5999984741211, p802 * 143, p802 * 300.5999984741211);
    v1203.bezierCurveTo(p802 * 163, p802 * 301.0999984741211, p802 * 163, p802 * 301.0999984741211, p802 * 183, p802 * 301.5999984741211);
    v1203.bezierCurveTo(p802 * 150, p802 * 300.5999984741211, p802 * 135, p802 * 290.5999984741211, p802 * 134, p802 * 267.5999984741211);
    v1203.bezierCurveTo(p802 * 133, p802 * 245.5999984741211, p802 * 146, p802 * 235.5999984741211, p802 * 164, p802 * 235.5999984741211);
    v1203.bezierCurveTo(p802 * 206, p802 * 236.0999984741211, p802 * 206, p802 * 236.0999984741211, p802 * 248, p802 * 236.5999984741211);
    v1203.bezierCurveTo(p802 * 266, p802 * 243.5999984741211, p802 * 268, p802 * 259.5999984741211, p802 * 267, p802 * 266.5999984741211);
    v1203.bezierCurveTo(p802 * 266, p802 * 288.5999984741211, p802 * 251, p802 * 294.5999984741211, p802 * 244, p802 * 297.5999984741211);
    v1203.bezierCurveTo(p802 * 228.5, p802 * 299.5999984741211, p802 * 228.5, p802 * 299.5999984741211, p802 * 213, p802 * 301.5999984741211);
    v1203.bezierCurveTo(p802 * 236, p802 * 301.0999984741211, p802 * 236, p802 * 301.0999984741211, p802 * 259, p802 * 300.5999984741211);
    v1203.bezierCurveTo(p802 * 272, p802 * 295.5999984741211, p802 * 277, p802 * 288.5999984741211, p802 * 278, p802 * 271.5999984741211);
    v1203.bezierCurveTo(p802 * 277.5, p802 * 236.5999984741211, p802 * 277.5, p802 * 236.5999984741211, p802 * 277, p802 * 201.5999984741211);
    v1203.bezierCurveTo(p802 * 276, p802 * 186.5999984741211, p802 * 265, p802 * 178.5999984741211, p802 * 254, p802 * 177.5999984741211);
    v1203.bezierCurveTo(p802 * 247.5, p802 * 177.5999984741211, p802 * 247.5, p802 * 177.5999984741211, p802 * 241, p802 * 177.5999984741211);
    v1203.bezierCurveTo(p802 * 255, p802 * 202.5999984741211, p802 * 214, p802 * 217.5999984741211, p802 * 201, p802 * 215.5999984741211);
    v1203.bezierCurveTo(p802 * 170, p802 * 215.5999984741211, p802 * 152, p802 * 197.5999984741211, p802 * 161, p802 * 178.5999984741211);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 162, p802 * 175.5999984741211);
    v1203.bezierCurveTo(p802 * 153, p802 * 176.0999984741211, p802 * 153, p802 * 176.0999984741211, p802 * 144, p802 * 176.5999984741211);
    v1203.bezierCurveTo(p802 * 125, p802 * 178.5999984741211, p802 * 121, p802 * 196.5999984741211, p802 * 121, p802 * 207.5999984741211);
    v1203.bezierCurveTo(p802 * 121, p802 * 243.20000076293945, p802 * 121, p802 * 243.20000076293945, p802 * 121, p802 * 278.8000030517578);
    v1203.bezierCurveTo(p802 * 126, p802 * 298.8000030517578, p802 * 137, p802 * 300.8000030517578, p802 * 146, p802 * 302.8000030517578);
    v1203.bezierCurveTo(p802 * 200.5, p802 * 302.8000030517578, p802 * 200.5, p802 * 302.8000030517578, p802 * 255, p802 * 302.8000030517578);
    v1203.bezierCurveTo(p802 * 271, p802 * 301.8000030517578, p802 * 279, p802 * 288.8000030517578, p802 * 279, p802 * 273.8000030517578);
    v1203.bezierCurveTo(p802 * 279, p802 * 236.8000030517578, p802 * 279, p802 * 236.8000030517578, p802 * 279, p802 * 199.8000030517578);
    v1203.bezierCurveTo(p802 * 274, p802 * 178.8000030517578, p802 * 263, p802 * 177.8000030517578, p802 * 255, p802 * 175.8000030517578);
    v1203.bezierCurveTo(p802 * 248, p802 * 175.8000030517578, p802 * 248, p802 * 175.8000030517578, p802 * 241, p802 * 175.8000030517578);
    v1203.bezierCurveTo(p802 * 240, p802 * 175.8000030517578, p802 * 240, p802 * 175.8000030517578, p802 * 239, p802 * 175.8000030517578);
    v1203.bezierCurveTo(p802 * 254, p802 * 200.8000030517578, p802 * 222, p802 * 211.8000030517578, p802 * 202, p802 * 212.8000030517578);
    v1203.bezierCurveTo(p802 * 168, p802 * 213.8000030517578, p802 * 151, p802 * 190.8000030517578, p802 * 163, p802 * 176.8000030517578);
    v1203.closePath();
    f84(v1203, undefined, p804[4], p802 * 6);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 198, p802 * 161.4000015258789);
    v1203.bezierCurveTo(p802 * 198, p802 * 186.9000015258789, p802 * 198, p802 * 186.9000015258789, p802 * 198, p802 * 212.4000015258789);
    v1203.bezierCurveTo(p802 * 201, p802 * 212.4000015258789, p802 * 201, p802 * 212.4000015258789, p802 * 204, p802 * 212.4000015258789);
    v1203.bezierCurveTo(p802 * 204, p802 * 186.9000015258789, p802 * 204, p802 * 186.9000015258789, p802 * 204, p802 * 161.4000015258789);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 161, p802 * 194);
    v1203.bezierCurveTo(p802 * 188, p802 * 169, p802 * 231, p802 * 179, p802 * 241, p802 * 194);
    v1203.bezierCurveTo(p802 * 239.5, p802 * 196, p802 * 239.5, p802 * 196, p802 * 238, p802 * 198);
    v1203.bezierCurveTo(p802 * 221, p802 * 179, p802 * 182, p802 * 182, p802 * 165, p802 * 198);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 157, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 162, p802 * 150.80000019073486, p802 * 241, p802 * 150.80000019073486, p802 * 245, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 242, p802 * 224.80000019073486, p802 * 162, p802 * 228.80000019073486, p802 * 157, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 159, p802 * 188.80000019073486, p802 * 159, p802 * 188.80000019073486, p802 * 161, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 168, p802 * 216.80000019073486, p802 * 231, p802 * 218.80000019073486, p802 * 241, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 236, p802 * 156.80000019073486, p802 * 169, p802 * 152.80000019073486, p802 * 161, p802 * 188.80000019073486);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 156, p802 * 188);
    v1203.bezierCurveTo(p802 * 160, p802 * 164, p802 * 183, p802 * 159, p802 * 201, p802 * 158);
    v1203.bezierCurveTo(p802 * 232, p802 * 159, p802 * 244, p802 * 174, p802 * 246, p802 * 188);
    v1203.bezierCurveTo(p802 * 245, p802 * 212, p802 * 213, p802 * 219, p802 * 201, p802 * 218);
    v1203.bezierCurveTo(p802 * 181, p802 * 221, p802 * 158, p802 * 207, p802 * 156, p802 * 190);
    v1203.closePath();
    f84(v1203, vVVVUndefined212, p804[4], p802 * 6);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 162, p802 * 189);
    v1203.bezierCurveTo(p802 * 166, p802 * 170, p802 * 185, p802 * 165, p802 * 201, p802 * 164);
    v1203.bezierCurveTo(p802 * 227, p802 * 165, p802 * 240, p802 * 178, p802 * 239, p802 * 188);
    v1203.bezierCurveTo(p802 * 239, p802 * 204, p802 * 210, p802 * 210, p802 * 201, p802 * 210);
    v1203.bezierCurveTo(p802 * 182, p802 * 211, p802 * 166, p802 * 200, p802 * 162, p802 * 190);
    v1203.closePath();
    f84(v1203, vVUndefined21, p804[4], p802 * 6);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 131, p802 * 262);
    v1203.bezierCurveTo(p802 * 136, p802 * 241, p802 * 144, p802 * 236, p802 * 158, p802 * 233);
    v1203.bezierCurveTo(p802 * 200.5, p802 * 233, p802 * 229, p802 * 232, p802 * 243, p802 * 233);
    v1203.bezierCurveTo(p802 * 259, p802 * 235, p802 * 267, p802 * 248, p802 * 269, p802 * 260);
    v1203.bezierCurveTo(p802 * 269, p802 * 266.5, p802 * 269, p802 * 266.5, p802 * 269, p802 * 273);
    v1203.bezierCurveTo(p802 * 265, p802 * 290, p802 * 251, p802 * 297, p802 * 242, p802 * 298);
    v1203.bezierCurveTo(p802 * 202, p802 * 298, p802 * 202, p802 * 298, p802 * 162, p802 * 298);
    v1203.bezierCurveTo(p802 * 148, p802 * 298, p802 * 136, p802 * 289, p802 * 132, p802 * 273);
    v1203.bezierCurveTo(p802 * 131.5, p802 * 268, p802 * 131.5, p802 * 268, p802 * 131, p802 * 263);
    v1203.bezierCurveTo(p802 * 135, p802 * 263, p802 * 135, p802 * 263, p802 * 139, p802 * 263);
    v1203.bezierCurveTo(p802 * 139, p802 * 281, p802 * 151, p802 * 287, p802 * 160, p802 * 290);
    v1203.bezierCurveTo(p802 * 200.5, p802 * 290, p802 * 200.5, p802 * 290, p802 * 241, p802 * 290);
    v1203.bezierCurveTo(p802 * 252, p802 * 290, p802 * 257, p802 * 281, p802 * 262, p802 * 271);
    v1203.bezierCurveTo(p802 * 261.5, p802 * 267, p802 * 261.5, p802 * 267, p802 * 261, p802 * 263);
    v1203.bezierCurveTo(p802 * 260, p802 * 249, p802 * 251, p802 * 242, p802 * 241, p802 * 241);
    v1203.bezierCurveTo(p802 * 240.5, p802 * 240.5, p802 * 240.5, p802 * 240.5, p802 * 240, p802 * 240);
    v1203.bezierCurveTo(p802 * 200, p802 * 240, p802 * 200, p802 * 240, p802 * 160, p802 * 240);
    v1203.bezierCurveTo(p802 * 145, p802 * 244, p802 * 142, p802 * 250, p802 * 139, p802 * 264);
    v1203.closePath();
    f84(v1203, p804[4], p804[4], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 130, p802 * 264);
    v1203.bezierCurveTo(p802 * 132, p802 * 244, p802 * 144, p802 * 235, p802 * 157, p802 * 232);
    v1203.bezierCurveTo(p802 * 245, p802 * 232, p802 * 201, p802 * 232, p802 * 245, p802 * 232);
    v1203.bezierCurveTo(p802 * 264, p802 * 235, p802 * 269, p802 * 251, p802 * 270, p802 * 264);
    v1203.bezierCurveTo(p802 * 272, p802 * 291, p802 * 248, p802 * 299, p802 * 242, p802 * 299);
    v1203.bezierCurveTo(p802 * 200, p802 * 299, p802 * 200, p802 * 299, p802 * 158, p802 * 299);
    v1203.bezierCurveTo(p802 * 139, p802 * 298, p802 * 130, p802 * 276, p802 * 130, p802 * 265);
    v1203.closePath();
    f84(v1203, vVVVUndefined202, p804[4], p802 * 6);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 140, p802 * 265.33333587646484);
    v1203.bezierCurveTo(p802 * 141, p802 * 250.33333587646484, p802 * 148, p802 * 244.33333587646484, p802 * 160, p802 * 241.33333587646484);
    v1203.bezierCurveTo(p802 * 200, p802 * 241.33333587646484, p802 * 200, p802 * 241.33333587646484, p802 * 240, p802 * 241.33333587646484);
    v1203.bezierCurveTo(p802 * 256, p802 * 243.33333587646484, p802 * 260, p802 * 255.33333587646484, p802 * 260, p802 * 265.33333587646484);
    v1203.bezierCurveTo(p802 * 261, p802 * 281.33333587646484, p802 * 247, p802 * 289.33333587646484, p802 * 240, p802 * 289.33333587646484);
    v1203.bezierCurveTo(p802 * 161, p802 * 289.33333587646484, p802 * 200.5, p802 * 289.33333587646484, p802 * 161, p802 * 289.33333587646484);
    v1203.bezierCurveTo(p802 * 149, p802 * 288.33333587646484, p802 * 142, p802 * 278.33333587646484, p802 * 140, p802 * 266.33333587646484);
    v1203.closePath();
    f84(v1203, vVVVVUndefined20, p804[4], p802 * 6);
    v1203.globalAlpha = 0.5;
    v1203.scale(1, 1);
    v1203.translate(p802 * 105, p802 * 155);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 59.27557373046875, p802 * 20.406280517578125);
    v1203.bezierCurveTo(p802 * 74.27557373046875, p802 * 5.406280517578125, p802 * 90.27557373046875, p802 * 6.406280517578125, p802 * 99.27557373046875, p802 * 5.406280517578125);
    v1203.bezierCurveTo(p802 * 120.27557373046875, p802 * 5.406280517578125, p802 * 126.27557373046875, p802 * 10.406280517578125, p802 * 136.27557373046875, p802 * 20.406280517578125);
    v1203.bezierCurveTo(p802 * 157.77557373046875, p802 * 37.906280517578125, p802 * 157.77557373046875, p802 * 37.906280517578125, p802 * 179.27557373046875, p802 * 55.406280517578125);
    v1203.bezierCurveTo(p802 * 190.27557373046875, p802 * 63.406280517578125, p802 * 192.27557373046875, p802 * 77.40628051757812, p802 * 189.27557373046875, p802 * 91.40628051757812);
    v1203.bezierCurveTo(p802 * 183.27557373046875, p802 * 108.40628051757812, p802 * 176.27557373046875, p802 * 110.40628051757812, p802 * 169.27557373046875, p802 * 118.40628051757812);
    v1203.bezierCurveTo(p802 * 152.27557373046875, p802 * 133.40628051757812, p802 * 152.27557373046875, p802 * 133.40628051757812, p802 * 135.27557373046875, p802 * 148.40628051757812);
    v1203.bezierCurveTo(p802 * 87.27557373046875, p802 * 143.40628051757812, p802 * 87.27557373046875, p802 * 143.40628051757812, p802 * 39.27557373046875, p802 * 138.40628051757812);
    v1203.bezierCurveTo(p802 * 26.77557373046875, p802 * 123.40628051757812, p802 * 26.77557373046875, p802 * 123.40628051757812, p802 * 14.27557373046875, p802 * 108.40628051757812);
    v1203.bezierCurveTo(p802 * 2.27557373046875, p802 * 95.40628051757812, p802 * 2.27557373046875, p802 * 92.40628051757812, p802 * 3.27557373046875, p802 * 83.40628051757812);
    v1203.bezierCurveTo(p802 * 4.27557373046875, p802 * 63.406280517578125, p802 * 12.27557373046875, p802 * 60.406280517578125, p802 * 24.27557373046875, p802 * 40.406280517578125);
    v1203.closePath();
    f84(v1203, p804[5], p804[5], p802 * 4);
    v1203.globalAlpha = 1;
    v1203.translate(p802 * -110, p802 * -155);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 104, p802 * 237.8000030517578);
    v1203.bezierCurveTo(p802 * 110, p802 * 237.8000030517578, p802 * 110, p802 * 237.8000030517578, p802 * 116, p802 * 237.8000030517578);
    v1203.bezierCurveTo(p802 * 116, p802 * 241.8000030517578, p802 * 116, p802 * 241.8000030517578, p802 * 116, p802 * 245.8000030517578);
    v1203.bezierCurveTo(p802 * 115, p802 * 245.3000030517578, p802 * 115, p802 * 245.3000030517578, p802 * 114, p802 * 244.8000030517578);
    v1203.bezierCurveTo(p802 * 109.5, p802 * 244.8000030517578, p802 * 109.5, p802 * 244.8000030517578, p802 * 105, p802 * 244.8000030517578);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 115, p802 * 211.20000457763672);
    v1203.bezierCurveTo(p802 * 106, p802 * 216.20000457763672, p802 * 101, p802 * 234.20000457763672, p802 * 102, p802 * 241.20000457763672);
    v1203.bezierCurveTo(p802 * 102, p802 * 260.2000045776367, p802 * 115, p802 * 269.2000045776367, p802 * 115, p802 * 269.2000045776367);
    v1203.bezierCurveTo(p802 * 116, p802 * 265.2000045776367, p802 * 115.5, p802 * 265.2000045776367, p802 * 116, p802 * 261.2000045776367);
    v1203.bezierCurveTo(p802 * 112, p802 * 264, p802 * 108, p802 * 254, p802 * 106, p802 * 242);
    v1203.bezierCurveTo(p802 * 105, p802 * 232, p802 * 110, p802 * 222, p802 * 115, p802 * 218);
    v1203.bezierCurveTo(p802 * 116, p802 * 216.75, p802 * 115.5, p802 * 217.375, p802 * 116, p802 * 216.75);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 120, p802 * 207);
    v1203.bezierCurveTo(p802 * 115, p802 * 206, p802 * 114, p802 * 209, p802 * 114, p802 * 211);
    v1203.bezierCurveTo(p802 * 114, p802 * 268, p802 * 114, p802 * 241, p802 * 114, p802 * 271);
    v1203.bezierCurveTo(p802 * 115, p802 * 276, p802 * 118, p802 * 276, p802 * 120, p802 * 276);
    v1203.bezierCurveTo(p802 * 122, p802 * 273, p802 * 120.5, p802 * 274.5, p802 * 121, p802 * 273);
    v1203.bezierCurveTo(p802 * 121, p802 * 241, p802 * 121, p802 * 241, p802 * 121, p802 * 209);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 284, p802 * 238);
    v1203.bezierCurveTo(p802 * 289.5, p802 * 238, p802 * 289.5, p802 * 238, p802 * 295, p802 * 238);
    v1203.bezierCurveTo(p802 * 295, p802 * 241.5, p802 * 295, p802 * 241.5, p802 * 295, p802 * 245);
    v1203.bezierCurveTo(p802 * 289.5, p802 * 245, p802 * 289.5, p802 * 245, p802 * 284, p802 * 245);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 283, p802 * 211);
    v1203.bezierCurveTo(p802 * 293, p802 * 216, p802 * 297, p802 * 231, p802 * 297, p802 * 241);
    v1203.bezierCurveTo(p802 * 298, p802 * 254, p802 * 290, p802 * 265, p802 * 284, p802 * 269);
    v1203.bezierCurveTo(p802 * 283, p802 * 266, p802 * 283.5, p802 * 266, p802 * 283, p802 * 263);
    v1203.bezierCurveTo(p802 * 290, p802 * 260, p802 * 292, p802 * 251, p802 * 293, p802 * 242);
    v1203.bezierCurveTo(p802 * 292, p802 * 223, p802 * 289, p802 * 224, p802 * 284, p802 * 218);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 280, p802 * 206);
    v1203.bezierCurveTo(p802 * 284, p802 * 206, p802 * 285, p802 * 208, p802 * 285, p802 * 211);
    v1203.bezierCurveTo(p802 * 285, p802 * 241.5, p802 * 285, p802 * 241.5, p802 * 285, p802 * 272);
    v1203.bezierCurveTo(p802 * 284, p802 * 275, p802 * 284, p802 * 275, p802 * 280, p802 * 275);
    v1203.bezierCurveTo(p802 * 279, p802 * 273.5, p802 * 279, p802 * 273.5, p802 * 278, p802 * 272);
    v1203.bezierCurveTo(p802 * 278, p802 * 240.5, p802 * 278, p802 * 240.5, p802 * 278, p802 * 209);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 138, p802 * 298.40000915527344);
    v1203.bezierCurveTo(p802 * 141, p802 * 311.40000915527344, p802 * 151, p802 * 314.40000915527344, p802 * 162, p802 * 316.40000915527344);
    v1203.bezierCurveTo(p802 * 224, p802 * 316.40000915527344, p802 * 200, p802 * 315.90000915527344, p802 * 238, p802 * 315.40000915527344);
    v1203.bezierCurveTo(p802 * 254, p802 * 316.40000915527344, p802 * 261, p802 * 306.40000915527344, p802 * 264, p802 * 298.40000915527344);
    v1203.bezierCurveTo(p802 * 255, p802 * 304.40000915527344, p802 * 250, p802 * 306.40000915527344, p802 * 244, p802 * 306.40000915527344);
    v1203.bezierCurveTo(p802 * 201, p802 * 306.90000915527344, p802 * 201, p802 * 306.90000915527344, p802 * 158, p802 * 307.40000915527344);
    v1203.bezierCurveTo(p802 * 150, p802 * 306.40000915527344, p802 * 148, p802 * 306.40000915527344, p802 * 139, p802 * 300.40000915527344);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 161, p802 * 177.5999984741211);
    v1203.bezierCurveTo(p802 * 130, p802 * 175.5999984741211, p802 * 123, p802 * 190.5999984741211, p802 * 122, p802 * 205.5999984741211);
    v1203.bezierCurveTo(p802 * 121, p802 * 277.5999984741211, p802 * 122, p802 * 242.5999984741211, p802 * 122, p802 * 279.5999984741211);
    v1203.bezierCurveTo(p802 * 128, p802 * 297.5999984741211, p802 * 137, p802 * 299.5999984741211, p802 * 143, p802 * 300.5999984741211);
    v1203.bezierCurveTo(p802 * 163, p802 * 301.0999984741211, p802 * 163, p802 * 301.0999984741211, p802 * 183, p802 * 301.5999984741211);
    v1203.bezierCurveTo(p802 * 150, p802 * 300.5999984741211, p802 * 135, p802 * 290.5999984741211, p802 * 134, p802 * 267.5999984741211);
    v1203.bezierCurveTo(p802 * 133, p802 * 245.5999984741211, p802 * 146, p802 * 235.5999984741211, p802 * 164, p802 * 235.5999984741211);
    v1203.bezierCurveTo(p802 * 206, p802 * 236.0999984741211, p802 * 206, p802 * 236.0999984741211, p802 * 248, p802 * 236.5999984741211);
    v1203.bezierCurveTo(p802 * 266, p802 * 243.5999984741211, p802 * 268, p802 * 259.5999984741211, p802 * 267, p802 * 266.5999984741211);
    v1203.bezierCurveTo(p802 * 266, p802 * 288.5999984741211, p802 * 251, p802 * 294.5999984741211, p802 * 244, p802 * 297.5999984741211);
    v1203.bezierCurveTo(p802 * 228.5, p802 * 299.5999984741211, p802 * 228.5, p802 * 299.5999984741211, p802 * 213, p802 * 301.5999984741211);
    v1203.bezierCurveTo(p802 * 236, p802 * 301.0999984741211, p802 * 236, p802 * 301.0999984741211, p802 * 259, p802 * 300.5999984741211);
    v1203.bezierCurveTo(p802 * 272, p802 * 295.5999984741211, p802 * 277, p802 * 288.5999984741211, p802 * 278, p802 * 271.5999984741211);
    v1203.bezierCurveTo(p802 * 277.5, p802 * 236.5999984741211, p802 * 277.5, p802 * 236.5999984741211, p802 * 277, p802 * 201.5999984741211);
    v1203.bezierCurveTo(p802 * 276, p802 * 186.5999984741211, p802 * 265, p802 * 178.5999984741211, p802 * 254, p802 * 177.5999984741211);
    v1203.bezierCurveTo(p802 * 247.5, p802 * 177.5999984741211, p802 * 247.5, p802 * 177.5999984741211, p802 * 241, p802 * 177.5999984741211);
    v1203.bezierCurveTo(p802 * 255, p802 * 202.5999984741211, p802 * 214, p802 * 217.5999984741211, p802 * 201, p802 * 215.5999984741211);
    v1203.bezierCurveTo(p802 * 170, p802 * 215.5999984741211, p802 * 152, p802 * 197.5999984741211, p802 * 161, p802 * 178.5999984741211);
    v1203.closePath();
    f84(v1203, p804[2], p804[2], p802 * 4);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 162, p802 * 175.5999984741211);
    v1203.bezierCurveTo(p802 * 153, p802 * 176.0999984741211, p802 * 153, p802 * 176.0999984741211, p802 * 144, p802 * 176.5999984741211);
    v1203.bezierCurveTo(p802 * 125, p802 * 178.5999984741211, p802 * 121, p802 * 196.5999984741211, p802 * 121, p802 * 207.5999984741211);
    v1203.bezierCurveTo(p802 * 121, p802 * 243.20000076293945, p802 * 121, p802 * 243.20000076293945, p802 * 121, p802 * 278.8000030517578);
    v1203.bezierCurveTo(p802 * 126, p802 * 298.8000030517578, p802 * 137, p802 * 300.8000030517578, p802 * 146, p802 * 302.8000030517578);
    v1203.bezierCurveTo(p802 * 200.5, p802 * 302.8000030517578, p802 * 200.5, p802 * 302.8000030517578, p802 * 255, p802 * 302.8000030517578);
    v1203.bezierCurveTo(p802 * 271, p802 * 301.8000030517578, p802 * 279, p802 * 288.8000030517578, p802 * 279, p802 * 273.8000030517578);
    v1203.bezierCurveTo(p802 * 279, p802 * 236.8000030517578, p802 * 279, p802 * 236.8000030517578, p802 * 279, p802 * 199.8000030517578);
    v1203.bezierCurveTo(p802 * 274, p802 * 178.8000030517578, p802 * 263, p802 * 177.8000030517578, p802 * 255, p802 * 175.8000030517578);
    v1203.bezierCurveTo(p802 * 248, p802 * 175.8000030517578, p802 * 248, p802 * 175.8000030517578, p802 * 241, p802 * 175.8000030517578);
    v1203.bezierCurveTo(p802 * 240, p802 * 175.8000030517578, p802 * 240, p802 * 175.8000030517578, p802 * 239, p802 * 175.8000030517578);
    v1203.bezierCurveTo(p802 * 254, p802 * 200.8000030517578, p802 * 222, p802 * 211.8000030517578, p802 * 202, p802 * 212.8000030517578);
    v1203.bezierCurveTo(p802 * 168, p802 * 213.8000030517578, p802 * 151, p802 * 190.8000030517578, p802 * 163, p802 * 176.8000030517578);
    v1203.closePath();
    f84(v1203, vVVVVUndefined117, p804[3], p802 * 6);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 198, p802 * 161.4000015258789);
    v1203.bezierCurveTo(p802 * 198, p802 * 186.9000015258789, p802 * 198, p802 * 186.9000015258789, p802 * 198, p802 * 212.4000015258789);
    v1203.bezierCurveTo(p802 * 201, p802 * 212.4000015258789, p802 * 201, p802 * 212.4000015258789, p802 * 204, p802 * 212.4000015258789);
    v1203.bezierCurveTo(p802 * 204, p802 * 186.9000015258789, p802 * 204, p802 * 186.9000015258789, p802 * 204, p802 * 161.4000015258789);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 161, p802 * 194);
    v1203.bezierCurveTo(p802 * 188, p802 * 169, p802 * 231, p802 * 179, p802 * 241, p802 * 194);
    v1203.bezierCurveTo(p802 * 239.5, p802 * 196, p802 * 239.5, p802 * 196, p802 * 238, p802 * 198);
    v1203.bezierCurveTo(p802 * 221, p802 * 179, p802 * 182, p802 * 182, p802 * 165, p802 * 198);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 157, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 162, p802 * 150.80000019073486, p802 * 241, p802 * 150.80000019073486, p802 * 245, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 242, p802 * 224.80000019073486, p802 * 162, p802 * 228.80000019073486, p802 * 157, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 159, p802 * 188.80000019073486, p802 * 159, p802 * 188.80000019073486, p802 * 161, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 168, p802 * 216.80000019073486, p802 * 231, p802 * 218.80000019073486, p802 * 241, p802 * 188.80000019073486);
    v1203.bezierCurveTo(p802 * 236, p802 * 156.80000019073486, p802 * 169, p802 * 152.80000019073486, p802 * 161, p802 * 188.80000019073486);
    v1203.closePath();
    f84(v1203, p804[0], p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 156, p802 * 188);
    v1203.bezierCurveTo(p802 * 160, p802 * 164, p802 * 183, p802 * 159, p802 * 201, p802 * 158);
    v1203.bezierCurveTo(p802 * 232, p802 * 159, p802 * 244, p802 * 174, p802 * 246, p802 * 188);
    v1203.bezierCurveTo(p802 * 245, p802 * 212, p802 * 213, p802 * 219, p802 * 201, p802 * 218);
    v1203.bezierCurveTo(p802 * 181, p802 * 221, p802 * 158, p802 * 207, p802 * 156, p802 * 190);
    v1203.closePath();
    f84(v1203, vVVVUndefined212, p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 162, p802 * 189);
    v1203.bezierCurveTo(p802 * 166, p802 * 170, p802 * 185, p802 * 165, p802 * 201, p802 * 164);
    v1203.bezierCurveTo(p802 * 227, p802 * 165, p802 * 240, p802 * 178, p802 * 239, p802 * 188);
    v1203.bezierCurveTo(p802 * 239, p802 * 204, p802 * 210, p802 * 210, p802 * 201, p802 * 210);
    v1203.bezierCurveTo(p802 * 182, p802 * 211, p802 * 166, p802 * 200, p802 * 162, p802 * 190);
    v1203.closePath();
    f84(v1203, undefined, p804[1], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 131, p802 * 262);
    v1203.bezierCurveTo(p802 * 136, p802 * 241, p802 * 144, p802 * 236, p802 * 158, p802 * 233);
    v1203.bezierCurveTo(p802 * 200.5, p802 * 233, p802 * 229, p802 * 232, p802 * 243, p802 * 233);
    v1203.bezierCurveTo(p802 * 259, p802 * 235, p802 * 267, p802 * 248, p802 * 269, p802 * 260);
    v1203.bezierCurveTo(p802 * 269, p802 * 266.5, p802 * 269, p802 * 266.5, p802 * 269, p802 * 273);
    v1203.bezierCurveTo(p802 * 265, p802 * 290, p802 * 251, p802 * 297, p802 * 242, p802 * 298);
    v1203.bezierCurveTo(p802 * 202, p802 * 298, p802 * 202, p802 * 298, p802 * 162, p802 * 298);
    v1203.bezierCurveTo(p802 * 148, p802 * 298, p802 * 136, p802 * 289, p802 * 132, p802 * 273);
    v1203.bezierCurveTo(p802 * 131.5, p802 * 268, p802 * 131.5, p802 * 268, p802 * 131, p802 * 263);
    v1203.bezierCurveTo(p802 * 135, p802 * 263, p802 * 135, p802 * 263, p802 * 139, p802 * 263);
    v1203.bezierCurveTo(p802 * 139, p802 * 281, p802 * 151, p802 * 287, p802 * 160, p802 * 290);
    v1203.bezierCurveTo(p802 * 200.5, p802 * 290, p802 * 200.5, p802 * 290, p802 * 241, p802 * 290);
    v1203.bezierCurveTo(p802 * 252, p802 * 290, p802 * 257, p802 * 281, p802 * 262, p802 * 271);
    v1203.bezierCurveTo(p802 * 261.5, p802 * 267, p802 * 261.5, p802 * 267, p802 * 261, p802 * 263);
    v1203.bezierCurveTo(p802 * 260, p802 * 249, p802 * 251, p802 * 242, p802 * 241, p802 * 241);
    v1203.bezierCurveTo(p802 * 240.5, p802 * 240.5, p802 * 240.5, p802 * 240.5, p802 * 240, p802 * 240);
    v1203.bezierCurveTo(p802 * 200, p802 * 240, p802 * 200, p802 * 240, p802 * 160, p802 * 240);
    v1203.bezierCurveTo(p802 * 145, p802 * 244, p802 * 142, p802 * 250, p802 * 139, p802 * 264);
    v1203.closePath();
    f84(v1203, p804[0], p804[0], p802 * 2);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p802 * 130, p802 * 264);
    v1203.bezierCurveTo(p802 * 132, p802 * 244, p802 * 144, p802 * 235, p802 * 157, p802 * 232);
    v1203.bezierCurveTo(p802 * 245, p802 * 232, p802 * 201, p802 * 232, p802 * 245, p802 * 232);
    v1203.bezierCurveTo(p802 * 264, p802 * 235, p802 * 269, p802 * 251, p802 * 270, p802 * 264);
    v1203.bezierCurveTo(p802 * 272, p802 * 291, p802 * 248, p802 * 299, p802 * 242, p802 * 299);
    v1203.bezierCurveTo(p802 * 200, p802 * 299, p802 * 200, p802 * 299, p802 * 158, p802 * 299);
    v1203.bezierCurveTo(p802 * 139, p802 * 298, p802 * 130, p802 * 276, p802 * 130, p802 * 265);
    v1203.closePath();
    f84(v1203, vVVVUndefined212, p804[1], p802 * 2);
    return v1202;
  }
  function f170(p805, p806, p807) {
    var v1204 = document.createElement("canvas");
    var v1205 = v1204.getContext("2d");
    v1204.width = p805 * 309;
    v1204.height = p805 * 287;
    v1205.globalAlpha = p806 ? 0.5 : 1;
    v1205.translate(p805 * 10, p805 * 5);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 34.5, p805 * 38.53125);
    v1205.bezierCurveTo(p805 * 91.5, p805 * 30.53125, p805 * 138.5, p805 * 68.53125, p805 * 169.5, p805 * 93.53125);
    v1205.bezierCurveTo(p805 * 208.5, p805 * 128.53125, p805 * 226.5, p805 * 157.53125, p805 * 233.5, p805 * 209.53125);
    v1205.bezierCurveTo(p805 * 195.5, p805 * 218.53125, p805 * 138.5, p805 * 191.53125, p805 * 105.5, p805 * 157.53125);
    v1205.bezierCurveTo(p805 * 54.5, p805 * 112.53125, p805 * 41.5, p805 * 80.53125, p805 * 33.5, p805 * 38.53125);
    v1205.closePath();
    f84(v1205, p807[0], p807[0], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 143.5, p805 * 74.53125);
    v1205.bezierCurveTo(p805 * 164.5, p805 * 73.53125, p805 * 159, p805 * 74.53125, p805 * 174.5, p805 * 74.53125);
    v1205.bezierCurveTo(p805 * 186, p805 * 86.53125, p805 * 186, p805 * 86.53125, p805 * 197.5, p805 * 98.53125);
    v1205.bezierCurveTo(p805 * 186, p805 * 97.03125, p805 * 186, p805 * 97.03125, p805 * 174.5, p805 * 95.53125);
    v1205.closePath();
    f84(v1205, p807[0], p807[0], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 87.5, p805 * 142.53125);
    v1205.bezierCurveTo(p805 * 92, p805 * 160.03125, p805 * 92, p805 * 160.03125, p805 * 96.5, p805 * 177.53125);
    v1205.bezierCurveTo(p805 * 108, p805 * 181.53125, p805 * 108, p805 * 181.53125, p805 * 119.5, p805 * 185.53125);
    v1205.bezierCurveTo(p805 * 116.5, p805 * 175.53125, p805 * 116.5, p805 * 175.53125, p805 * 113.5, p805 * 165.53125);
    v1205.closePath();
    f84(v1205, p807[0], p807[0], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 236.5, p805 * 189.53125);
    v1205.bezierCurveTo(p805 * 274.5, p805 * 197.53125, p805 * 255.5, p805 * 194.03125, p805 * 274.5, p805 * 198.53125);
    v1205.bezierCurveTo(p805 * 272.5, p805 * 236.53125, p805 * 261.5, p805 * 237.53125, p805 * 242.5, p805 * 248.53125);
    v1205.bezierCurveTo(p805 * 230.5, p805 * 231.03125, p805 * 230.5, p805 * 231.03125, p805 * 218.5, p805 * 213.53125);
    v1205.closePath();
    f84(v1205, p807[0], p807[0], p805 * 10);
    v1205.globalAlpha = 1;
    v1205.translate(p805 * -10, p805 * -5);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 34.5, p805 * 38.53125);
    v1205.bezierCurveTo(p805 * 91.5, p805 * 30.53125, p805 * 138.5, p805 * 68.53125, p805 * 169.5, p805 * 93.53125);
    v1205.bezierCurveTo(p805 * 208.5, p805 * 128.53125, p805 * 226.5, p805 * 157.53125, p805 * 233.5, p805 * 209.53125);
    v1205.bezierCurveTo(p805 * 195.5, p805 * 218.53125, p805 * 138.5, p805 * 191.53125, p805 * 105.5, p805 * 157.53125);
    v1205.bezierCurveTo(p805 * 54.5, p805 * 112.53125, p805 * 41.5, p805 * 80.53125, p805 * 33.5, p805 * 38.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 143.5, p805 * 74.53125);
    v1205.bezierCurveTo(p805 * 164.5, p805 * 73.53125, p805 * 159, p805 * 74.53125, p805 * 174.5, p805 * 74.53125);
    v1205.bezierCurveTo(p805 * 186, p805 * 86.53125, p805 * 186, p805 * 86.53125, p805 * 197.5, p805 * 98.53125);
    v1205.bezierCurveTo(p805 * 186, p805 * 97.03125, p805 * 186, p805 * 97.03125, p805 * 174.5, p805 * 95.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 87.5, p805 * 142.53125);
    v1205.bezierCurveTo(p805 * 92, p805 * 160.03125, p805 * 92, p805 * 160.03125, p805 * 96.5, p805 * 177.53125);
    v1205.bezierCurveTo(p805 * 108, p805 * 181.53125, p805 * 108, p805 * 181.53125, p805 * 119.5, p805 * 185.53125);
    v1205.bezierCurveTo(p805 * 116.5, p805 * 175.53125, p805 * 116.5, p805 * 175.53125, p805 * 113.5, p805 * 165.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 236.5, p805 * 189.53125);
    v1205.bezierCurveTo(p805 * 274.5, p805 * 197.53125, p805 * 255.5, p805 * 194.03125, p805 * 274.5, p805 * 198.53125);
    v1205.bezierCurveTo(p805 * 272.5, p805 * 236.53125, p805 * 261.5, p805 * 237.53125, p805 * 242.5, p805 * 248.53125);
    v1205.bezierCurveTo(p805 * 230.5, p805 * 231.03125, p805 * 230.5, p805 * 231.03125, p805 * 218.5, p805 * 213.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 10);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 109.5, p805 * 51.53125);
    v1205.bezierCurveTo(p805 * 107.5, p805 * 92.53125, p805 * 91.5, p805 * 95.53125, p805 * 59.5, p805 * 101.53125);
    f84(v1205, p807[1], p807[2], p805 * 7);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 72.5, p805 * 51.53125);
    v1205.bezierCurveTo(p805 * 71, p805 * 64.53125, p805 * 69.5, p805 * 76.53125, p805 * 69.5, p805 * 77.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 7);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 84.5, p805 * 63.53125);
    v1205.bezierCurveTo(p805 * 70.5, p805 * 65.03125, p805 * 70.5, p805 * 65.03125, p805 * 56.5, p805 * 66.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 7);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 125.5, p805 * 84.53125);
    v1205.bezierCurveTo(p805 * 125.5, p805 * 110.03125, p805 * 125.5, p805 * 110.03125, p805 * 125.5, p805 * 135.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 7);
    v1205.beginPath();
    v1205.lineCap = "round";
    v1205.lineJoin = "round";
    v1205.moveTo(p805 * 149.5, p805 * 108.53125);
    v1205.bezierCurveTo(p805 * 150, p805 * 137.03125, p805 * 150, p805 * 137.03125, p805 * 150.5, p805 * 165.53125);
    v1205.closePath();
    f84(v1205, p807[1], p807[2], p805 * 7);
    return v1204;
  }
  const v1206 = 1;
  function f171(p808, p809) {
    var v1207 = document.createElement("canvas");
    var v1208 = v1207.getContext("2d");
    v1207.width = p808 * 372;
    v1207.height = p808 * 375;
    v1208.globalAlpha = 0.5;
    v1208.translate(p808 * 15, p808 * 15);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 313.0000305175781, p808 * 76.58523559570312);
    v1208.bezierCurveTo(p808 * 308.0000305175781, p808 * 130.58523559570312, p808 * 279.0000305175781, p808 * 158.58523559570312, p808 * 254.00003051757812, p808 * 175.58523559570312);
    v1208.bezierCurveTo(p808 * 287.0000305175781, p808 * 182.58523559570312, p808 * 274.0000305175781, p808 * 181.08523559570312, p808 * 294.0000305175781, p808 * 186.58523559570312);
    v1208.bezierCurveTo(p808 * 293.5000305175781, p808 * 196.08523559570312, p808 * 293.5000305175781, p808 * 196.08523559570312, p808 * 293.0000305175781, p808 * 205.58523559570312);
    v1208.bezierCurveTo(p808 * 304.0000305175781, p808 * 201.08523559570312, p808 * 304.0000305175781, p808 * 201.08523559570312, p808 * 315.0000305175781, p808 * 196.58523559570312);
    v1208.bezierCurveTo(p808 * 350.0000305175781, p808 * 219.58523559570312, p808 * 343.0000305175781, p808 * 221.58523559570312, p808 * 351.0000305175781, p808 * 230.58523559570312);
    v1208.bezierCurveTo(p808 * 296.0000305175781, p808 * 260.5852355957031, p808 * 264.0000305175781, p808 * 256.5852355957031, p808 * 220.00003051757812, p808 * 236.58523559570312);
    v1208.bezierCurveTo(p808 * 233.00003051757812, p808 * 266.5852355957031, p808 * 232.00003051757812, p808 * 279.5852355957031, p808 * 231.00003051757812, p808 * 295.5852355957031);
    v1208.bezierCurveTo(p808 * 222.00003051757812, p808 * 297.5852355957031, p808 * 222.00003051757812, p808 * 297.5852355957031, p808 * 213.00003051757812, p808 * 299.5852355957031);
    v1208.bezierCurveTo(p808 * 219.50003051757812, p808 * 308.0852355957031, p808 * 219.50003051757812, p808 * 308.0852355957031, p808 * 226.00003051757812, p808 * 316.5852355957031);
    v1208.bezierCurveTo(p808 * 223.00003051757812, p808 * 344.5852355957031, p808 * 216.00003051757812, p808 * 350.5852355957031, p808 * 209.00003051757812, p808 * 363.5852355957031);
    v1208.bezierCurveTo(p808 * 154.00003051757812, p808 * 318.5852355957031, p808 * 156.00003051757812, p808 * 268.5852355957031, p808 * 160.00003051757812, p808 * 238.58523559570312);
    v1208.bezierCurveTo(p808 * 135.00003051757812, p808 * 268.5852355957031, p808 * 125.00003051757812, p808 * 267.5852355957031, p808 * 112.00003051757812, p808 * 272.5852355957031);
    v1208.bezierCurveTo(p808 * 104.50003051757812, p808 * 266.5852355957031, p808 * 104.50003051757812, p808 * 266.5852355957031, p808 * 97.00003051757812, p808 * 260.5852355957031);
    v1208.bezierCurveTo(p808 * 93.00003051757812, p808 * 271.0852355957031, p808 * 93.00003051757812, p808 * 271.0852355957031, p808 * 89.00003051757812, p808 * 281.5852355957031);
    v1208.bezierCurveTo(p808 * 66.00003051757812, p808 * 288.5852355957031, p808 * 59.000030517578125, p808 * 288.5852355957031, p808 * 39.000030517578125, p808 * 285.5852355957031);
    v1208.bezierCurveTo(p808 * 56.000030517578125, p808 * 216.58523559570312, p808 * 91.00003051757812, p808 * 204.58523559570312, p808 * 129.00003051757812, p808 * 189.58523559570312);
    v1208.bezierCurveTo(p808 * 90.00003051757812, p808 * 176.58523559570312, p808 * 89.00003051757812, p808 * 173.58523559570312, p808 * 79.00003051757812, p808 * 166.58523559570312);
    v1208.bezierCurveTo(p808 * 82.00003051757812, p808 * 155.08523559570312, p808 * 82.00003051757812, p808 * 155.08523559570312, p808 * 85.00003051757812, p808 * 143.58523559570312);
    v1208.bezierCurveTo(p808 * 75.50003051757812, p808 * 147.58523559570312, p808 * 75.50003051757812, p808 * 147.58523559570312, p808 * 66.00003051757812, p808 * 151.58523559570312);
    v1208.bezierCurveTo(p808 * 44.000030517578125, p808 * 133.58523559570312, p808 * 41.000030517578125, p808 * 124.58523559570312, p808 * 34.000030517578125, p808 * 102.58523559570312);
    v1208.bezierCurveTo(p808 * 100.00003051757812, p808 * 81.58523559570312, p808 * 134.00003051757812, p808 * 118.58523559570312, p808 * 150.00003051757812, p808 * 128.58523559570312);
    v1208.bezierCurveTo(p808 * 144.00003051757812, p808 * 102.58523559570312, p808 * 147.00003051757812, p808 * 90.58523559570312, p808 * 150.00003051757812, p808 * 80.58523559570312);
    v1208.bezierCurveTo(p808 * 159.50003051757812, p808 * 79.08523559570312, p808 * 159.50003051757812, p808 * 79.08523559570312, p808 * 169.00003051757812, p808 * 77.58523559570312);
    v1208.bezierCurveTo(p808 * 163.00003051757812, p808 * 72.58523559570312, p808 * 163.00003051757812, p808 * 72.58523559570312, p808 * 157.00003051757812, p808 * 67.58523559570312);
    v1208.bezierCurveTo(p808 * 162.00003051757812, p808 * 42.585235595703125, p808 * 169.00003051757812, p808 * 29.585235595703125, p808 * 182.00003051757812, p808 * 14.585235595703125);
    v1208.bezierCurveTo(p808 * 219.00003051757812, p808 * 48.585235595703125, p808 * 222.00003051757812, p808 * 92.58523559570312, p808 * 218.00003051757812, p808 * 112.58523559570312);
    v1208.bezierCurveTo(p808 * 239.00003051757812, p808 * 95.58523559570312, p808 * 242.00003051757812, p808 * 97.58523559570312, p808 * 249.00003051757812, p808 * 94.58523559570312);
    v1208.bezierCurveTo(p808 * 255.00003051757812, p808 * 103.08523559570312, p808 * 255.00003051757812, p808 * 103.08523559570312, p808 * 261.0000305175781, p808 * 111.58523559570312);
    v1208.bezierCurveTo(p808 * 261.5000305175781, p808 * 99.58523559570312, p808 * 261.5000305175781, p808 * 99.58523559570312, p808 * 262.0000305175781, p808 * 87.58523559570312);
    v1208.bezierCurveTo(p808 * 282.0000305175781, p808 * 77.58523559570312, p808 * 301.0000305175781, p808 * 74.58523559570312, p808 * 314.0000305175781, p808 * 76.58523559570312);
    v1208.closePath();
    f84(v1208, p809[0]);
    v1208.globalAlpha = 1;
    v1208.translate(p808 * -15, p808 * -15);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 313.0000305175781, p808 * 76.58523559570312);
    v1208.bezierCurveTo(p808 * 308.0000305175781, p808 * 130.58523559570312, p808 * 279.0000305175781, p808 * 158.58523559570312, p808 * 254.00003051757812, p808 * 175.58523559570312);
    v1208.bezierCurveTo(p808 * 287.0000305175781, p808 * 182.58523559570312, p808 * 274.0000305175781, p808 * 181.08523559570312, p808 * 294.0000305175781, p808 * 186.58523559570312);
    v1208.bezierCurveTo(p808 * 293.5000305175781, p808 * 196.08523559570312, p808 * 293.5000305175781, p808 * 196.08523559570312, p808 * 293.0000305175781, p808 * 205.58523559570312);
    v1208.bezierCurveTo(p808 * 304.0000305175781, p808 * 201.08523559570312, p808 * 304.0000305175781, p808 * 201.08523559570312, p808 * 315.0000305175781, p808 * 196.58523559570312);
    v1208.bezierCurveTo(p808 * 350.0000305175781, p808 * 219.58523559570312, p808 * 343.0000305175781, p808 * 221.58523559570312, p808 * 351.0000305175781, p808 * 230.58523559570312);
    v1208.bezierCurveTo(p808 * 296.0000305175781, p808 * 260.5852355957031, p808 * 264.0000305175781, p808 * 256.5852355957031, p808 * 220.00003051757812, p808 * 236.58523559570312);
    v1208.bezierCurveTo(p808 * 233.00003051757812, p808 * 266.5852355957031, p808 * 232.00003051757812, p808 * 279.5852355957031, p808 * 231.00003051757812, p808 * 295.5852355957031);
    v1208.bezierCurveTo(p808 * 222.00003051757812, p808 * 297.5852355957031, p808 * 222.00003051757812, p808 * 297.5852355957031, p808 * 213.00003051757812, p808 * 299.5852355957031);
    v1208.bezierCurveTo(p808 * 219.50003051757812, p808 * 308.0852355957031, p808 * 219.50003051757812, p808 * 308.0852355957031, p808 * 226.00003051757812, p808 * 316.5852355957031);
    v1208.bezierCurveTo(p808 * 223.00003051757812, p808 * 344.5852355957031, p808 * 216.00003051757812, p808 * 350.5852355957031, p808 * 209.00003051757812, p808 * 363.5852355957031);
    v1208.bezierCurveTo(p808 * 154.00003051757812, p808 * 318.5852355957031, p808 * 156.00003051757812, p808 * 268.5852355957031, p808 * 160.00003051757812, p808 * 238.58523559570312);
    v1208.bezierCurveTo(p808 * 135.00003051757812, p808 * 268.5852355957031, p808 * 125.00003051757812, p808 * 267.5852355957031, p808 * 112.00003051757812, p808 * 272.5852355957031);
    v1208.bezierCurveTo(p808 * 104.50003051757812, p808 * 266.5852355957031, p808 * 104.50003051757812, p808 * 266.5852355957031, p808 * 97.00003051757812, p808 * 260.5852355957031);
    v1208.bezierCurveTo(p808 * 93.00003051757812, p808 * 271.0852355957031, p808 * 93.00003051757812, p808 * 271.0852355957031, p808 * 89.00003051757812, p808 * 281.5852355957031);
    v1208.bezierCurveTo(p808 * 66.00003051757812, p808 * 288.5852355957031, p808 * 59.000030517578125, p808 * 288.5852355957031, p808 * 39.000030517578125, p808 * 285.5852355957031);
    v1208.bezierCurveTo(p808 * 56.000030517578125, p808 * 216.58523559570312, p808 * 91.00003051757812, p808 * 204.58523559570312, p808 * 129.00003051757812, p808 * 189.58523559570312);
    v1208.bezierCurveTo(p808 * 90.00003051757812, p808 * 176.58523559570312, p808 * 89.00003051757812, p808 * 173.58523559570312, p808 * 79.00003051757812, p808 * 166.58523559570312);
    v1208.bezierCurveTo(p808 * 82.00003051757812, p808 * 155.08523559570312, p808 * 82.00003051757812, p808 * 155.08523559570312, p808 * 85.00003051757812, p808 * 143.58523559570312);
    v1208.bezierCurveTo(p808 * 75.50003051757812, p808 * 147.58523559570312, p808 * 75.50003051757812, p808 * 147.58523559570312, p808 * 66.00003051757812, p808 * 151.58523559570312);
    v1208.bezierCurveTo(p808 * 44.000030517578125, p808 * 133.58523559570312, p808 * 41.000030517578125, p808 * 124.58523559570312, p808 * 34.000030517578125, p808 * 102.58523559570312);
    v1208.bezierCurveTo(p808 * 100.00003051757812, p808 * 81.58523559570312, p808 * 134.00003051757812, p808 * 118.58523559570312, p808 * 150.00003051757812, p808 * 128.58523559570312);
    v1208.bezierCurveTo(p808 * 144.00003051757812, p808 * 102.58523559570312, p808 * 147.00003051757812, p808 * 90.58523559570312, p808 * 150.00003051757812, p808 * 80.58523559570312);
    v1208.bezierCurveTo(p808 * 159.50003051757812, p808 * 79.08523559570312, p808 * 159.50003051757812, p808 * 79.08523559570312, p808 * 169.00003051757812, p808 * 77.58523559570312);
    v1208.bezierCurveTo(p808 * 163.00003051757812, p808 * 72.58523559570312, p808 * 163.00003051757812, p808 * 72.58523559570312, p808 * 157.00003051757812, p808 * 67.58523559570312);
    v1208.bezierCurveTo(p808 * 162.00003051757812, p808 * 42.585235595703125, p808 * 169.00003051757812, p808 * 29.585235595703125, p808 * 182.00003051757812, p808 * 14.585235595703125);
    v1208.bezierCurveTo(p808 * 219.00003051757812, p808 * 48.585235595703125, p808 * 222.00003051757812, p808 * 92.58523559570312, p808 * 218.00003051757812, p808 * 112.58523559570312);
    v1208.bezierCurveTo(p808 * 239.00003051757812, p808 * 95.58523559570312, p808 * 242.00003051757812, p808 * 97.58523559570312, p808 * 249.00003051757812, p808 * 94.58523559570312);
    v1208.bezierCurveTo(p808 * 255.00003051757812, p808 * 103.08523559570312, p808 * 255.00003051757812, p808 * 103.08523559570312, p808 * 261.0000305175781, p808 * 111.58523559570312);
    v1208.bezierCurveTo(p808 * 261.5000305175781, p808 * 99.58523559570312, p808 * 261.5000305175781, p808 * 99.58523559570312, p808 * 262.0000305175781, p808 * 87.58523559570312);
    v1208.bezierCurveTo(p808 * 282.0000305175781, p808 * 77.58523559570312, p808 * 301.0000305175781, p808 * 74.58523559570312, p808 * 314.0000305175781, p808 * 76.58523559570312);
    v1208.closePath();
    f84(v1208, p809[1], p809[2], p808 * 4);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 186.00003051757812, p808 * 192.94886779785156);
    v1208.bezierCurveTo(p808 * 185.00003051757812, p808 * 66.94886779785156, p808 * 184.50003051757812, p808 * 104.94886779785156, p808 * 183.00003051757812, p808 * 16.948867797851562);
    v1208.bezierCurveTo(p808 * 216.00003051757812, p808 * 47.94886779785156, p808 * 219.00003051757812, p808 * 80.94886779785156, p808 * 218.00003051757812, p808 * 113.94886779785156);
    v1208.bezierCurveTo(p808 * 209.00003051757812, p808 * 165.94886779785156, p808 * 200.00003051757812, p808 * 176.94886779785156, p808 * 189.00003051757812, p808 * 192.94886779785156);
    v1208.closePath();
    f84(v1208, p809[3], p809[3], p808 * 2);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 190.00003051757812, p808 * 191.94886779785156);
    v1208.bezierCurveTo(p808 * 207.00003051757812, p808 * 348.94886779785156, p808 * 205.00003051757812, p808 * 323.94886779785156, p808 * 209.00003051757812, p808 * 358.94886779785156);
    v1208.bezierCurveTo(p808 * 171.00003051757812, p808 * 334.94886779785156, p808 * 167.00003051757812, p808 * 302.94886779785156, p808 * 161.00003051757812, p808 * 268.94886779785156);
    v1208.bezierCurveTo(p808 * 160.00003051757812, p808 * 218.94886779785156, p808 * 181.00003051757812, p808 * 191.94886779785156, p808 * 189.00003051757812, p808 * 186.94886779785156);
    v1208.closePath();
    f84(v1208, p809[3], p809[3], p808 * 2);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 194.00003051757812, p808 * 195.94886779785156);
    v1208.bezierCurveTo(p808 * 116.00003051757812, p808 * 150.94886779785156, p808 * 116.00003051757812, p808 * 150.94886779785156, p808 * 38.000030517578125, p808 * 105.94886779785156);
    v1208.bezierCurveTo(p808 * 67.00003051757812, p808 * 90.94886779785156, p808 * 96.00003051757812, p808 * 99.94886779785156, p808 * 123.00003051757812, p808 * 111.94886779785156);
    v1208.bezierCurveTo(p808 * 183.00003051757812, p808 * 152.94886779785156, p808 * 179.00003051757812, p808 * 180.94886779785156, p808 * 193.00003051757812, p808 * 194.94886779785156);
    v1208.closePath();
    f84(v1208, p809[3], p809[3], p808 * 2);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 189.00003051757812, p808 * 190.94886779785156);
    v1208.bezierCurveTo(p808 * 250.00003051757812, p808 * 133.94886779785156, p808 * 311.0000305175781, p808 * 78.94886779785156, p808 * 311.0000305175781, p808 * 76.94886779785156);
    v1208.bezierCurveTo(p808 * 306.0000305175781, p808 * 127.94886779785156, p808 * 283.0000305175781, p808 * 148.94886779785156, p808 * 261.0000305175781, p808 * 166.94886779785156);
    v1208.bezierCurveTo(p808 * 220.00003051757812, p808 * 197.94886779785156, p808 * 191.00003051757812, p808 * 194.94886779785156, p808 * 189.00003051757812, p808 * 195.94886779785156);
    v1208.closePath();
    f84(v1208, p809[3], p809[3], p808 * 2);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 189.00003051757812, p808 * 194.94886779785156);
    v1208.bezierCurveTo(p808 * 268.5000305175781, p808 * 211.94886779785156, p808 * 268.5000305175781, p808 * 211.94886779785156, p808 * 348.0000305175781, p808 * 228.94886779785156);
    v1208.bezierCurveTo(p808 * 316.0000305175781, p808 * 247.94886779785156, p808 * 298.0000305175781, p808 * 256.94886779785156, p808 * 250.00003051757812, p808 * 246.94886779785156);
    v1208.bezierCurveTo(p808 * 197.00003051757812, p808 * 229.94886779785156, p808 * 189.00003051757812, p808 * 202.94886779785156, p808 * 188.00003051757812, p808 * 199.94886779785156);
    v1208.closePath();
    f84(v1208, p809[3], p809[3], p808 * 2);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 192.00003051757812, p808 * 191.94886779785156);
    v1208.bezierCurveTo(p808 * 116.50003051757812, p808 * 238.44886779785156, p808 * 116.50003051757812, p808 * 238.44886779785156, p808 * 41.000030517578125, p808 * 284.94886779785156);
    v1208.bezierCurveTo(p808 * 49.000030517578125, p808 * 252.94886779785156, p808 * 56.000030517578125, p808 * 242.94886779785156, p808 * 80.00003051757812, p808 * 215.94886779785156);
    v1208.bezierCurveTo(p808 * 125.00003051757812, p808 * 181.94886779785156, p808 * 174.00003051757812, p808 * 183.94886779785156, p808 * 192.00003051757812, p808 * 191.94886779785156);
    v1208.closePath();
    f84(v1208, p809[3], p809[3], p808 * 2);
    v1208.beginPath();
    v1208.lineCap = "round";
    v1208.lineJoin = "round";
    v1208.moveTo(p808 * 313.0000305175781, p808 * 76.58523559570312);
    v1208.bezierCurveTo(p808 * 308.0000305175781, p808 * 130.58523559570312, p808 * 279.0000305175781, p808 * 158.58523559570312, p808 * 254.00003051757812, p808 * 175.58523559570312);
    v1208.bezierCurveTo(p808 * 287.0000305175781, p808 * 182.58523559570312, p808 * 274.0000305175781, p808 * 181.08523559570312, p808 * 294.0000305175781, p808 * 186.58523559570312);
    v1208.bezierCurveTo(p808 * 293.5000305175781, p808 * 196.08523559570312, p808 * 293.5000305175781, p808 * 196.08523559570312, p808 * 293.0000305175781, p808 * 205.58523559570312);
    v1208.bezierCurveTo(p808 * 304.0000305175781, p808 * 201.08523559570312, p808 * 304.0000305175781, p808 * 201.08523559570312, p808 * 315.0000305175781, p808 * 196.58523559570312);
    v1208.bezierCurveTo(p808 * 350.0000305175781, p808 * 219.58523559570312, p808 * 343.0000305175781, p808 * 221.58523559570312, p808 * 351.0000305175781, p808 * 230.58523559570312);
    v1208.bezierCurveTo(p808 * 296.0000305175781, p808 * 260.5852355957031, p808 * 264.0000305175781, p808 * 256.5852355957031, p808 * 220.00003051757812, p808 * 236.58523559570312);
    v1208.bezierCurveTo(p808 * 233.00003051757812, p808 * 266.5852355957031, p808 * 232.00003051757812, p808 * 279.5852355957031, p808 * 231.00003051757812, p808 * 295.5852355957031);
    v1208.bezierCurveTo(p808 * 222.00003051757812, p808 * 297.5852355957031, p808 * 222.00003051757812, p808 * 297.5852355957031, p808 * 213.00003051757812, p808 * 299.5852355957031);
    v1208.bezierCurveTo(p808 * 219.50003051757812, p808 * 308.0852355957031, p808 * 219.50003051757812, p808 * 308.0852355957031, p808 * 226.00003051757812, p808 * 316.5852355957031);
    v1208.bezierCurveTo(p808 * 223.00003051757812, p808 * 344.5852355957031, p808 * 216.00003051757812, p808 * 350.5852355957031, p808 * 209.00003051757812, p808 * 363.5852355957031);
    v1208.bezierCurveTo(p808 * 154.00003051757812, p808 * 318.5852355957031, p808 * 156.00003051757812, p808 * 268.5852355957031, p808 * 160.00003051757812, p808 * 238.58523559570312);
    v1208.bezierCurveTo(p808 * 135.00003051757812, p808 * 268.5852355957031, p808 * 125.00003051757812, p808 * 267.5852355957031, p808 * 112.00003051757812, p808 * 272.5852355957031);
    v1208.bezierCurveTo(p808 * 104.50003051757812, p808 * 266.5852355957031, p808 * 104.50003051757812, p808 * 266.5852355957031, p808 * 97.00003051757812, p808 * 260.5852355957031);
    v1208.bezierCurveTo(p808 * 93.00003051757812, p808 * 271.0852355957031, p808 * 93.00003051757812, p808 * 271.0852355957031, p808 * 89.00003051757812, p808 * 281.5852355957031);
    v1208.bezierCurveTo(p808 * 66.00003051757812, p808 * 288.5852355957031, p808 * 59.000030517578125, p808 * 288.5852355957031, p808 * 39.000030517578125, p808 * 285.5852355957031);
    v1208.bezierCurveTo(p808 * 56.000030517578125, p808 * 216.58523559570312, p808 * 91.00003051757812, p808 * 204.58523559570312, p808 * 129.00003051757812, p808 * 189.58523559570312);
    v1208.bezierCurveTo(p808 * 90.00003051757812, p808 * 176.58523559570312, p808 * 89.00003051757812, p808 * 173.58523559570312, p808 * 79.00003051757812, p808 * 166.58523559570312);
    v1208.bezierCurveTo(p808 * 82.00003051757812, p808 * 155.08523559570312, p808 * 82.00003051757812, p808 * 155.08523559570312, p808 * 85.00003051757812, p808 * 143.58523559570312);
    v1208.bezierCurveTo(p808 * 75.50003051757812, p808 * 147.58523559570312, p808 * 75.50003051757812, p808 * 147.58523559570312, p808 * 66.00003051757812, p808 * 151.58523559570312);
    v1208.bezierCurveTo(p808 * 44.000030517578125, p808 * 133.58523559570312, p808 * 41.000030517578125, p808 * 124.58523559570312, p808 * 34.000030517578125, p808 * 102.58523559570312);
    v1208.bezierCurveTo(p808 * 100.00003051757812, p808 * 81.58523559570312, p808 * 134.00003051757812, p808 * 118.58523559570312, p808 * 150.00003051757812, p808 * 128.58523559570312);
    v1208.bezierCurveTo(p808 * 144.00003051757812, p808 * 102.58523559570312, p808 * 147.00003051757812, p808 * 90.58523559570312, p808 * 150.00003051757812, p808 * 80.58523559570312);
    v1208.bezierCurveTo(p808 * 159.50003051757812, p808 * 79.08523559570312, p808 * 159.50003051757812, p808 * 79.08523559570312, p808 * 169.00003051757812, p808 * 77.58523559570312);
    v1208.bezierCurveTo(p808 * 163.00003051757812, p808 * 72.58523559570312, p808 * 163.00003051757812, p808 * 72.58523559570312, p808 * 157.00003051757812, p808 * 67.58523559570312);
    v1208.bezierCurveTo(p808 * 162.00003051757812, p808 * 42.585235595703125, p808 * 169.00003051757812, p808 * 29.585235595703125, p808 * 182.00003051757812, p808 * 14.585235595703125);
    v1208.bezierCurveTo(p808 * 219.00003051757812, p808 * 48.585235595703125, p808 * 222.00003051757812, p808 * 92.58523559570312, p808 * 218.00003051757812, p808 * 112.58523559570312);
    v1208.bezierCurveTo(p808 * 239.00003051757812, p808 * 95.58523559570312, p808 * 242.00003051757812, p808 * 97.58523559570312, p808 * 249.00003051757812, p808 * 94.58523559570312);
    v1208.bezierCurveTo(p808 * 255.00003051757812, p808 * 103.08523559570312, p808 * 255.00003051757812, p808 * 103.08523559570312, p808 * 261.0000305175781, p808 * 111.58523559570312);
    v1208.bezierCurveTo(p808 * 261.5000305175781, p808 * 99.58523559570312, p808 * 261.5000305175781, p808 * 99.58523559570312, p808 * 262.0000305175781, p808 * 87.58523559570312);
    v1208.bezierCurveTo(p808 * 282.0000305175781, p808 * 77.58523559570312, p808 * 301.0000305175781, p808 * 74.58523559570312, p808 * 314.0000305175781, p808 * 76.58523559570312);
    v1208.closePath();
    f84(v1208, vVVVUndefined21, p809[2], p808 * 4);
    return v1207;
  }
  function f172(p810, p811, p812) {
    var v1209 = document.createElement("canvas");
    var v1210 = v1209.getContext("2d");
    v1209.width = p810 * 130;
    v1209.height = p810 * 142;
    v1210.globalAlpha = p811 ? 0.5 : 1;
    v1210.save();
    v1210.translate(p810 * 65, p810 * 80);
    v1210.rotate(0.2);
    f87(v1210, 9, p810 * 60, p810 * 10);
    v1210.restore();
    f84(v1210, p812[0]);
    v1210.globalAlpha = 1;
    v1210.save();
    v1210.translate(p810 * 65, p810 * 71);
    v1210.rotate(0.2);
    f87(v1210, 9, p810 * 60, p810 * 10);
    f84(v1210, p812[1], p812[2], 4);
    v1210.rotate(-0.32);
    f87(v1210, 9, p810 * 38, p810 * 10);
    f84(v1210, p812[3], p812[4], 4);
    v1210.rotate(0.68);
    f87(v1210, 9, p810 * 20, p810 * 8);
    f84(v1210, p812[5], p812[6], 6);
    v1210.restore();
    return v1209;
  }
  function f173(p813, p814, p815) {
    var v1211 = document.createElement("canvas");
    var v1212 = v1211.getContext("2d");
    v1211.width = p813 * 130;
    v1211.height = p813 * 148;
    v1212.globalAlpha = p814 ? 0.5 : 1;
    v1212.save();
    v1212.translate(p813 * 65, p813 * 85);
    v1212.rotate(1.4);
    f87(v1212, 7, p813 * 60, p813 * 10);
    v1212.restore();
    f84(v1212, p815[0]);
    v1212.globalAlpha = 1;
    v1212.save();
    v1212.translate(p813 * 65, p813 * 74);
    v1212.rotate(1.4);
    f87(v1212, 7, p813 * 60, p813 * 10);
    f84(v1212, p815[1], p815[2], 4);
    v1212.rotate(0.64);
    f87(v1212, 7, p813 * 40, p813 * 10);
    f84(v1212, p815[3], p815[4], 4);
    v1212.rotate(0.12);
    f87(v1212, 7, p813 * 23, p813 * 5);
    v1212.restore();
    f84(v1212, p815[5]);
    return v1211;
  }
  function f174(p816, p817, p818) {
    var v1213 = document.createElement("canvas");
    var v1214 = v1213.getContext("2d");
    v1213.width = p816 * 248;
    v1213.height = p816 * 128;
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p816 * 137, p816 * 7);
    v1214.bezierCurveTo(p816 * 169, p816 * 14, p816 * 212, p816 * 9, p816 * 241, p816 * 5);
    v1214.bezierCurveTo(p816 * 211, p816 * 63, p816 * 158, p816 * 92, p816 * 103, p816 * 109);
    v1214.bezierCurveTo(p816 * 73, p816 * 126, p816 * 54, p816 * 124, p816 * 6, p816 * 99);
    v1214.bezierCurveTo(p816 * 82, p816 * 63, p816 * 113, p816 * 35, p816 * 137, p816 * 8);
    v1214.closePath();
    f84(v1214, p818[0], p818[1], p816 * 14);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p816 * 73, p816 * 124);
    v1214.bezierCurveTo(p816 * 111, p816 * 126, p816 * 162, p816 * 97, p816 * 203, p816 * 61);
    v1214.bezierCurveTo(p816 * 156, p816 * 98, p816 * 131, p816 * 106, p816 * 105, p816 * 109);
    v1214.bezierCurveTo(p816 * 99, p816 * 121, p816 * 87, p816 * 124, p816 * 72, p816 * 124);
    v1214.closePath();
    f84(v1214, p818[2], p818[3], p816 * 1);
    return v1213;
  }
  const v1215 = 1;
  function f175(p819, p820, p821) {
    var v1216 = document.createElement("canvas");
    var v1217 = v1216.getContext("2d");
    v1216.width = p819 * 125;
    v1216.height = p819 * 139;
    v1217.globalAlpha = p820 ? 0.5 : 1;
    v1217.save();
    v1217.translate(p819 * 63, p819 * 79);
    v1217.rotate(1);
    f87(v1217, 8, p819 * 60, p819 * 10);
    f84(v1217, p821[0]);
    v1217.restore();
    v1217.globalAlpha = 1;
    v1217.save();
    v1217.translate(p819 * 63, p819 * 69);
    v1217.rotate(1);
    f87(v1217, 8, p819 * 60, p819 * 10);
    f84(v1217, p821[1], p821[2], 4);
    v1217.rotate(0.56);
    f87(v1217, 8, p819 * 40, p819 * 10);
    f84(v1217, p821[3], p821[4], 4);
    v1217.rotate(0.28);
    f87(v1217, 8, p819 * 28, p819 * 8);
    f84(v1217, p821[5]);
    v1217.restore();
    return v1216;
  }
  function f176(p822, p823, p824) {
    var v1218 = document.createElement("canvas");
    var v1219 = v1218.getContext("2d");
    v1218.width = p822 * 90;
    v1218.height = p822 * 101;
    v1219.translate(p822 * 0, p822 * 5);
    if (v782 === 0) {
      v1219.globalAlpha = p823 ? 0.5 : 1;
      f89(v1219, p822 * 44, p822 * 55, p822 * 41);
      f84(v1219, p824[0]);
    }
    v1219.globalAlpha = 1;
    f89(v1219, p822 * 44, p822 * 45, p822 * 41);
    f84(v1219, p824[1], p824[2], p822 * 4);
    f89(v1219, p822 * 44, p822 * 45, p822 * 31);
    f84(v1219, p824[3]);
    v1219.save();
    v1219.translate(p822 * 45, p822 * 45);
    f83(v1219, p822 * -9, p822 * -25.5, p822 * 18, p822 * 51, p822 * 30);
    v1219.restore();
    f84(v1219, p824[4], p824[4], p822 * 2);
    v1219.save();
    v1219.translate(p822 * 45, p822 * 45);
    f83(v1219, p822 * -26, p822 * -9, p822 * 52, p822 * 18, p822 * 30);
    v1219.restore();
    f84(v1219, p824[4], p824[4], p822 * 2);
    f89(v1219, p822 * 45, p822 * 29, p822 * 7);
    f84(v1219, p824[5]);
    f89(v1219, p822 * 45, p822 * 61, p822 * 7);
    f84(v1219, p824[5]);
    f89(v1219, p822 * 28, p822 * 45, p822 * 7);
    f84(v1219, p824[5]);
    f89(v1219, p822 * 62, p822 * 45, p822 * 7);
    f84(v1219, p824[5]);
    return v1218;
  }
  const v1220 = 10;
  function f177(p825, p826, p827) {
    var v1221 = document.createElement("canvas");
    var v1222 = v1221.getContext("2d");
    v1221.width = p825 * 90;
    v1221.height = p825 * 98;
    v1222.translate(0, p825 * 4);
    if (v782 === 0) {
      v1222.globalAlpha = p826 ? 0.5 : 1;
      v1222.save();
      v1222.translate(p825 * 44, p825 * 50);
      v1222.rotate(1.4);
      f87(v1222, 7, p825 * 41, p825 * 10);
      v1222.restore();
      f84(v1222, p827[0]);
    }
    v1222.globalAlpha = 1;
    v1222.save();
    v1222.translate(p825 * 44, p825 * 44);
    v1222.rotate(1.4);
    f87(v1222, 7, p825 * 41, p825 * 10);
    f84(v1222, p827[1], p827[2], p825 * 4);
    f87(v1222, 7, p825 * 35, p825 * 10);
    f84(v1222, p827[3], p827[4], p825 * 4);
    f87(v1222, 7, p825 * 23, p825 * 5);
    v1222.restore();
    f84(v1222, p827[5]);
    v1222.save();
    v1222.translate(p825 * 45, p825 * 45);
    v1222.rotate(0);
    f83(v1222, p825 * -9, p825 * -25.5, p825 * 18, p825 * 51, p825 * 30);
    v1222.restore();
    f84(v1222, p827[4], p827[4], p825 * 2);
    v1222.save();
    v1222.translate(p825 * 45, p825 * 45);
    v1222.rotate(0);
    f83(v1222, p825 * -26, p825 * -9, p825 * 52, p825 * 18, p825 * 30);
    v1222.restore();
    f84(v1222, p827[4], p827[4], p825 * 2);
    f89(v1222, p825 * 45, p825 * 29, p825 * 7);
    f84(v1222, p827[5]);
    f89(v1222, p825 * 45, p825 * 61, p825 * 7);
    f84(v1222, p827[5]);
    f89(v1222, p825 * 28, p825 * 45, p825 * 7);
    f84(v1222, p827[5]);
    f89(v1222, p825 * 62, p825 * 45, p825 * 7);
    f84(v1222, p827[5]);
    return v1221;
  }
  function f178(p828, p829, p830) {
    var v1223 = document.createElement("canvas");
    var v1224 = v1223.getContext("2d");
    v1223.width = p828 * 90;
    v1223.height = p828 * 98;
    v1224.translate(0, p828 * 4);
    if (v782 === 0) {
      v1224.globalAlpha = p829 ? 0.5 : 1;
      v1224.save();
      v1224.translate(p828 * 44, p828 * 50);
      v1224.rotate(1);
      f87(v1224, 8, p828 * 41, p828 * 10);
      f84(v1224, p830[0]);
      v1224.restore();
    }
    v1224.globalAlpha = 1;
    v1224.save();
    v1224.translate(p828 * 44, p828 * 44);
    v1224.rotate(1);
    f87(v1224, 8, p828 * 41, p828 * 10);
    f84(v1224, p830[1], p830[2], p828 * 4);
    v1224.rotate(0.56);
    f87(v1224, 8, p828 * 33, p828 * 10);
    f84(v1224, p830[3], p830[4], p828 * 4);
    v1224.rotate(0.28);
    f87(v1224, 8, p828 * 24, p828 * 8);
    f84(v1224, p830[5]);
    v1224.restore();
    v1224.save();
    v1224.translate(p828 * 45, p828 * 45);
    v1224.rotate(0);
    f83(v1224, p828 * -9, p828 * -25.5, p828 * 18, p828 * 51, p828 * 30);
    v1224.restore();
    f84(v1224, p830[4], p830[4], p828 * 2);
    v1224.save();
    v1224.translate(p828 * 45, p828 * 45);
    v1224.rotate(0);
    f83(v1224, p828 * -26, p828 * -9, p828 * 52, p828 * 18, p828 * 30);
    v1224.restore();
    f84(v1224, p830[4], p830[4], p828 * 2);
    f89(v1224, p828 * 45, p828 * 29, p828 * 7);
    f84(v1224, p830[5]);
    f89(v1224, p828 * 45, p828 * 61, p828 * 7);
    f84(v1224, p830[5]);
    f89(v1224, p828 * 28, p828 * 45, p828 * 7);
    f84(v1224, p830[5]);
    f89(v1224, p828 * 62, p828 * 45, p828 * 7);
    f84(v1224, p830[5]);
    return v1223;
  }
  function f179(p831, p832, p833) {
    var v1225 = document.createElement("canvas");
    var v1226 = v1225.getContext("2d");
    v1225.width = p831 * 300;
    v1225.height = p831 * 300;
    v1226.globalAlpha = p832 ? 0.5 : 1;
    v1226.save();
    v1226.translate(p831 * 150, p831 * 160);
    v1226.rotate(6.28);
    f87(v1226, 6, p831 * 146, p831 * 30);
    v1226.restore();
    f84(v1226, p833[0]);
    v1226.globalAlpha = 1;
    v1226.save();
    v1226.translate(p831 * 150, p831 * 150);
    v1226.rotate(6.28);
    f87(v1226, 6, p831 * 146, p831 * 30);
    v1226.restore();
    f84(v1226, p833[1], p833[2], p831 * 8);
    v1226.save();
    v1226.translate(p831 * 150, p831 * 150);
    v1226.rotate(0);
    f87(v1226, 6, p831 * 105, p831 * 30);
    v1226.restore();
    f84(v1226, p833[3], p833[3], p831 * 8);
    v1226.save();
    v1226.translate(p831 * 150, p831 * 150);
    v1226.rotate(0);
    f87(v1226, 6, p831 * 66, p831 * 30);
    v1226.restore();
    f84(v1226, p833[4], p833[2], p831 * 8);
    v1226.save();
    v1226.translate(p831 * 150, p831 * 150);
    v1226.rotate(0);
    f87(v1226, 6, p831 * 31, p831 * 30);
    v1226.restore();
    f84(v1226, p833[5], p833[6], p831 * 8);
    v1226.beginPath();
    v1226.lineCap = "round";
    v1226.lineJoin = "round";
    v1226.moveTo(p831 * 150, p831 * 207);
    v1226.bezierCurveTo(p831 * 150, p831 * 151, p831 * 150, p831 * 101, p831 * 150, p831 * 94);
    v1226.closePath();
    f84(v1226, undefined, p833[2], p831 * 8);
    v1226.beginPath();
    v1226.lineCap = "round";
    v1226.lineJoin = "round";
    v1226.moveTo(p831 * 118, p831 * 100);
    v1226.bezierCurveTo(p831 * 118, p831 * 205, p831 * 118, p831 * 207, p831 * 118, p831 * 200);
    v1226.closePath();
    f84(v1226, vVVVUndefined212, p833[2], p831 * 8);
    v1226.beginPath();
    v1226.lineCap = "round";
    v1226.lineJoin = "round";
    v1226.moveTo(p831 * 183, p831 * 100);
    v1226.bezierCurveTo(p831 * 183, p831 * 203, p831 * 183, p831 * 203, p831 * 183, p831 * 200);
    v1226.closePath();
    f84(v1226, undefined, p833[2], p831 * 8);
    return v1225;
  }
  const v1227 = 2;
  function f180(p834, p835, p836) {
    var v1228 = document.createElement("canvas");
    var v1229 = v1228.getContext("2d");
    v1228.width = p834 * 300;
    v1228.height = p834 * 300;
    v1229.globalAlpha = p835 ? 0.5 : 1;
    v1229.save();
    v1229.translate(p834 * 150, p834 * 160);
    v1229.rotate(6.28);
    f87(v1229, 6, p834 * 146, p834 * 30);
    v1229.restore();
    f84(v1229, p836[0]);
    v1229.globalAlpha = 1;
    v1229.save();
    v1229.translate(p834 * 150, p834 * 150);
    v1229.rotate(6.28);
    f87(v1229, 6, p834 * 146, p834 * 30);
    v1229.restore();
    f84(v1229, p836[1], p836[2], p834 * 8);
    v1229.save();
    v1229.translate(p834 * 150, p834 * 150);
    v1229.rotate(0);
    f87(v1229, 6, p834 * 105, p834 * 30);
    v1229.restore();
    f84(v1229, p836[3], p836[3], p834 * 8);
    v1229.save();
    v1229.translate(p834 * 150, p834 * 150);
    v1229.rotate(0);
    f87(v1229, 6, p834 * 66, p834 * 30);
    v1229.restore();
    f84(v1229, p836[4], p836[2], p834 * 8);
    v1229.save();
    v1229.translate(p834 * 131, p834 * 116);
    f87(v1229, 7, p834 * 17, p834 * 8);
    v1229.restore();
    f84(v1229, p836[6]);
    v1229.save();
    v1229.translate(p834 * 163, p834 * 168);
    f87(v1229, 7, p834 * 25, p834 * 8);
    v1229.restore();
    f84(v1229, p836[6]);
    v1229.save();
    v1229.translate(p834 * 117, p834 * 151);
    f87(v1229, 7, p834 * 11, p834 * 8);
    v1229.restore();
    f84(v1229, p836[6]);
    v1229.save();
    v1229.translate(p834 * 167, p834 * 122);
    f87(v1229, 7, p834 * 12, p834 * 8);
    v1229.restore();
    f84(v1229, p836[6]);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p834 * 150, p834 * 207);
    v1229.bezierCurveTo(p834 * 150, p834 * 151, p834 * 150, p834 * 101, p834 * 150, p834 * 94);
    v1229.closePath();
    f84(v1229, undefined, p836[2], p834 * 8);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p834 * 118, p834 * 100);
    v1229.bezierCurveTo(p834 * 118, p834 * 205, p834 * 118, p834 * 207, p834 * 118, p834 * 200);
    v1229.closePath();
    f84(v1229, vVVVUndefined117, p836[2], p834 * 8);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p834 * 183, p834 * 100);
    v1229.bezierCurveTo(p834 * 183, p834 * 203, p834 * 183, p834 * 203, p834 * 183, p834 * 200);
    v1229.closePath();
    f84(v1229, undefined, p836[2], p834 * 8);
    return v1228;
  }
  function f181(p837, p838, p839) {
    var v1230 = document.createElement("canvas");
    var v1231 = v1230.getContext("2d");
    v1230.width = p837 * 90;
    v1230.height = p837 * 98;
    v1231.translate(0, p837 * 4);
    if (v782 === 0) {
      v1231.globalAlpha = p838 ? 0.5 : 1;
      v1231.save();
      v1231.translate(p837 * 44, p837 * 50);
      v1231.rotate(0.2);
      f87(v1231, 9, p837 * 41, p837 * 10);
      v1231.restore();
      f84(v1231, p839[0]);
    }
    v1231.globalAlpha = 1;
    v1231.save();
    v1231.translate(p837 * 44, p837 * 44);
    v1231.rotate(0.2);
    f87(v1231, 9, p837 * 41, p837 * 10);
    f84(v1231, p839[1], p839[2], p837 * 4);
    v1231.rotate(-0.32);
    f87(v1231, 9, p837 * 32, p837 * 10);
    f84(v1231, p839[3], p839[4], p837 * 4);
    v1231.rotate(0.68);
    f87(v1231, 9, p837 * 23, p837 * 8);
    f84(v1231, p839[5], p839[6], p837 * 6);
    v1231.restore();
    v1231.save();
    v1231.translate(p837 * 45, p837 * 45);
    v1231.rotate(0);
    f83(v1231, p837 * -9, p837 * -25.5, p837 * 18, p837 * 51, p837 * 30);
    v1231.restore();
    f84(v1231, p839[4], p839[4], p837 * 2);
    v1231.save();
    v1231.translate(p837 * 45, p837 * 45);
    v1231.rotate(0);
    f83(v1231, p837 * -26, p837 * -9, p837 * 52, p837 * 18, p837 * 30);
    v1231.restore();
    f84(v1231, p839[4], p839[4], p837 * 2);
    f89(v1231, p837 * 45, p837 * 29, p837 * 7);
    f84(v1231, p839[5]);
    f89(v1231, p837 * 45, p837 * 61, p837 * 7);
    f84(v1231, p839[5]);
    f89(v1231, p837 * 28, p837 * 45, p837 * 7);
    f84(v1231, p839[5]);
    f89(v1231, p837 * 62, p837 * 45, p837 * 7);
    f84(v1231, p839[5]);
    return v1230;
  }
  function f182(p840, p841, p842) {
    var v1232 = document.createElement("canvas");
    var v1233 = v1232.getContext("2d");
    v1232.width = p840 * 135;
    v1232.height = p840 * 120;
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p840 * 3.5, p840 * 55.25);
    v1233.bezierCurveTo(p840 * 3.5, p840 * 114.25, p840 * 2.5, p840 * 109.25, p840 * 3.5, p840 * 112.25);
    v1233.bezierCurveTo(p840 * 5.5, p840 * 119.25, p840 * 8.5, p840 * 119.25, p840 * 11.5, p840 * 119.25);
    v1233.bezierCurveTo(p840 * 15.5, p840 * 114.25, p840 * 13.5, p840 * 95.25, p840 * 14.5, p840 * 82.25);
    v1233.closePath();
    f84(v1233, p842[0], p842[1], p840 * 7);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p840 * 6.5, p840 * 43.25);
    v1233.bezierCurveTo(p840 * 3.5, p840 * 27.25, p840 * 7.5, p840 * 20.25, p840 * 25.5, p840 * 11.25);
    v1233.bezierCurveTo(p840 * 45.5, p840 * -0.75, p840 * 73.5, p840 * 1.25, p840 * 107.5, p840 * 10.25);
    v1233.bezierCurveTo(p840 * 131.5, p840 * 21.25, p840 * 125.5, p840 * 34.25, p840 * 125.5, p840 * 36.25);
    v1233.closePath();
    f84(v1233, p842[0], p842[1], p840 * 7);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p840 * 120.5, p840 * 62.25);
    v1233.bezierCurveTo(p840 * 121.5, p840 * 95.25, p840 * 120.5, p840 * 80.25, p840 * 120.5, p840 * 100.25);
    v1233.bezierCurveTo(p840 * 118.5, p840 * 119.25, p840 * 123.5, p840 * 118.25, p840 * 129.5, p840 * 113.25);
    v1233.bezierCurveTo(p840 * 133.5, p840 * 107.25, p840 * 130.5, p840 * 97.25, p840 * 130.5, p840 * 87.25);
    v1233.bezierCurveTo(p840 * 129.5, p840 * 56.25, p840 * 130, p840 * 70.75, p840 * 129.5, p840 * 54.25);
    v1233.closePath();
    f84(v1233, p842[0], p842[1], p840 * 7);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p840 * 17.5, p840 * 27);
    v1233.bezierCurveTo(p840 * 48.5, p840 * 5, p840 * 93.5, p840 * 14, p840 * 118.5, p840 * 26);
    v1233.bezierCurveTo(p840 * 132.5, p840 * 35, p840 * 133.5, p840 * 52, p840 * 132.5, p840 * 68);
    v1233.bezierCurveTo(p840 * 125.5, p840 * 87, p840 * 116.5, p840 * 84, p840 * 96.5, p840 * 75);
    v1233.bezierCurveTo(p840 * 60.5, p840 * 66, p840 * 52.5, p840 * 74, p840 * 37.5, p840 * 78);
    v1233.bezierCurveTo(p840 * 2.5, p840 * 86, p840 * 3.5, p840 * 78, p840 * 1.5, p840 * 61);
    v1233.bezierCurveTo(p840 * 1.5, p840 * 37, p840 * 9.5, p840 * 32, p840 * 15.5, p840 * 28);
    v1233.closePath();
    f84(v1233, p842[2], p842[3], p840 * 7);
    return v1232;
  }
  function f183(p843, p844, p845) {
    var v1234 = document.createElement("canvas");
    var v1235 = v1234.getContext("2d");
    v1234.width = p843 * 501;
    v1234.height = p843 * 309;
    v1235.translate(0, p843 * 6);
    v1235.globalAlpha = p844 ? 0.5 : 1;
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 126, p843 * 184);
    v1235.bezierCurveTo(p843 * 169, p843 * 196, p843 * 194, p843 * 198, p843 * 227, p843 * 198);
    v1235.bezierCurveTo(p843 * 235, p843 * 222, p843 * 236, p843 * 223, p843 * 241, p843 * 226);
    v1235.bezierCurveTo(p843 * 245, p843 * 228, p843 * 257, p843 * 228, p843 * 263, p843 * 226);
    v1235.bezierCurveTo(p843 * 267, p843 * 225, p843 * 270, p843 * 211, p843 * 275, p843 * 198);
    v1235.bezierCurveTo(p843 * 332, p843 * 194, p843 * 347, p843 * 192, p843 * 372, p843 * 188);
    v1235.bezierCurveTo(p843 * 366, p843 * 174.5, p843 * 366, p843 * 174.5, p843 * 360, p843 * 161);
    v1235.bezierCurveTo(p843 * 253.5, p843 * 162, p843 * 253.5, p843 * 162, p843 * 147, p843 * 163);
    v1235.closePath();
    f84(v1235, p845[0]);
    v1235.globalAlpha = 1;
    v1235.translate(0, p843 * -6);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 100, p843 * 116);
    v1235.bezierCurveTo(p843 * 90, p843 * 101, p843 * 96, p843 * 89, p843 * 106, p843 * 83);
    v1235.bezierCurveTo(p843 * 86, p843 * 79, p843 * 86, p843 * 52, p843 * 93, p843 * 38);
    v1235.bezierCurveTo(p843 * 99, p843 * 51, p843 * 107, p843 * 57, p843 * 122, p843 * 63);
    v1235.bezierCurveTo(p843 * 130, p843 * 53, p843 * 141, p843 * 46, p843 * 161, p843 * 46);
    v1235.bezierCurveTo(p843 * 157, p843 * 31, p843 * 158, p843 * 20, p843 * 169, p843 * 6);
    v1235.bezierCurveTo(p843 * 171, p843 * 24, p843 * 186, p843 * 33, p843 * 198, p843 * 45);
    v1235.bezierCurveTo(p843 * 252, p843 * 45, p843 * 252, p843 * 45, p843 * 306, p843 * 45);
    v1235.bezierCurveTo(p843 * 323, p843 * 33, p843 * 332, p843 * 21, p843 * 335, p843 * 7);
    v1235.bezierCurveTo(p843 * 349, p843 * 21, p843 * 347, p843 * 36, p843 * 345, p843 * 46);
    v1235.bezierCurveTo(p843 * 364, p843 * 46, p843 * 369, p843 * 48, p843 * 377, p843 * 63);
    v1235.bezierCurveTo(p843 * 398, p843 * 58, p843 * 403, p843 * 49, p843 * 409, p843 * 40);
    v1235.bezierCurveTo(p843 * 419, p843 * 57, p843 * 411, p843 * 79, p843 * 398, p843 * 85);
    v1235.bezierCurveTo(p843 * 405, p843 * 100, p843 * 405, p843 * 106, p843 * 401, p843 * 118);
    v1235.bezierCurveTo(p843 * 332.5, p843 * 128.5, p843 * 332.5, p843 * 128.5, p843 * 264, p843 * 139);
    v1235.closePath();
    f84(v1235, p845[1], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 122, p843 * 191);
    v1235.bezierCurveTo(p843 * 123, p843 * 237, p843 * 135, p843 * 245, p843 * 153, p843 * 259);
    v1235.bezierCurveTo(p843 * 167, p843 * 269, p843 * 158, p843 * 281, p843 * 118, p843 * 276);
    v1235.bezierCurveTo(p843 * 104, p843 * 273, p843 * 98, p843 * 268, p843 * 93, p843 * 242);
    v1235.bezierCurveTo(p843 * 89, p843 * 220, p843 * 92, p843 * 201, p843 * 102, p843 * 179);
    v1235.closePath();
    f84(v1235, p845[3], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 403, p843 * 182);
    v1235.bezierCurveTo(p843 * 414, p843 * 215, p843 * 412, p843 * 232, p843 * 403, p843 * 260);
    v1235.bezierCurveTo(p843 * 395, p843 * 274, p843 * 375, p843 * 272, p843 * 356, p843 * 270);
    v1235.bezierCurveTo(p843 * 345, p843 * 268, p843 * 339, p843 * 262, p843 * 354, p843 * 252);
    v1235.bezierCurveTo(p843 * 370, p843 * 242, p843 * 380, p843 * 225, p843 * 384, p843 * 184);
    v1235.closePath();
    f84(v1235, p845[3], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 155, p843 * 157);
    v1235.bezierCurveTo(p843 * 146, p843 * 189, p843 * 137, p843 * 198, p843 * 114, p843 * 219);
    v1235.bezierCurveTo(p843 * 104, p843 * 212, p843 * 98, p843 * 203, p843 * 89, p843 * 189);
    v1235.bezierCurveTo(p843 * 82, p843 * 178, p843 * 91, p843 * 164, p843 * 93, p843 * 136);
    v1235.closePath();
    f84(v1235, p845[4], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 347, p843 * 162);
    v1235.bezierCurveTo(p843 * 357, p843 * 195, p843 * 376, p843 * 209, p843 * 387, p843 * 217);
    v1235.bezierCurveTo(p843 * 409, p843 * 201, p843 * 420, p843 * 181, p843 * 416, p843 * 166);
    v1235.bezierCurveTo(p843 * 410, p843 * 150, p843 * 412, p843 * 149, p843 * 408, p843 * 130);
    v1235.closePath();
    f84(v1235, p845[4], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 86, p843 * 134);
    v1235.bezierCurveTo(p843 * 79, p843 * 102, p843 * 92, p843 * 84, p843 * 108, p843 * 92);
    v1235.bezierCurveTo(p843 * 149, p843 * 108, p843 * 184, p843 * 111, p843 * 242, p843 * 111);
    v1235.bezierCurveTo(p843 * 294, p843 * 108, p843 * 341, p843 * 105, p843 * 386, p843 * 98);
    v1235.bezierCurveTo(p843 * 412, p843 * 91, p843 * 417, p843 * 86, p843 * 415, p843 * 133);
    v1235.bezierCurveTo(p843 * 413, p843 * 160, p843 * 413, p843 * 160, p843 * 368, p843 * 174);
    v1235.bezierCurveTo(p843 * 308, p843 * 184, p843 * 291, p843 * 185, p843 * 270, p843 * 186);
    v1235.bezierCurveTo(p843 * 264, p843 * 206, p843 * 262, p843 * 215, p843 * 253, p843 * 215);
    v1235.bezierCurveTo(p843 * 239, p843 * 217, p843 * 239, p843 * 211, p843 * 231, p843 * 186);
    v1235.bezierCurveTo(p843 * 178, p843 * 184, p843 * 156, p843 * 179, p843 * 112, p843 * 162);
    v1235.bezierCurveTo(p843 * 87, p843 * 151, p843 * 90, p843 * 144, p843 * 87, p843 * 137);
    v1235.closePath();
    f84(v1235, p845[4], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 63, p843 * 98);
    v1235.bezierCurveTo(p843 * 84, p843 * 121, p843 * 109, p843 * 102, p843 * 124, p843 * 117);
    v1235.bezierCurveTo(p843 * 138, p843 * 136, p843 * 123, p843 * 165, p843 * 94, p843 * 150);
    v1235.bezierCurveTo(p843 * 66, p843 * 131, p843 * 64, p843 * 115, p843 * 63, p843 * 99);
    v1235.closePath();
    f84(v1235, p845[3], p845[2], p843 * 10);
    v1235.beginPath();
    v1235.lineCap = "round";
    v1235.lineJoin = "round";
    v1235.moveTo(p843 * 449, p843 * 97);
    v1235.bezierCurveTo(p843 * 446, p843 * 143, p843 * 415, p843 * 151, p843 * 402, p843 * 155);
    v1235.bezierCurveTo(p843 * 386, p843 * 157, p843 * 373, p843 * 133, p843 * 391, p843 * 116);
    v1235.bezierCurveTo(p843 * 402, p843 * 106, p843 * 432, p843 * 124, p843 * 449, p843 * 97);
    v1235.closePath();
    f84(v1235, p845[3], p845[2], p843 * 10);
    return v1234;
  }
  function f184(p846, p847, p848) {
    var v1236 = document.createElement("canvas");
    var v1237 = v1236.getContext("2d");
    v1236.width = p846 * 304;
    v1236.height = p846 * 278;
    v1237.translate(p846 * 10, p846 * 25);
    v1237.globalAlpha = p847 ? 0.5 : 1;
    v1237.beginPath();
    v1237.lineCap = "round";
    v1237.lineJoin = "round";
    v1237.moveTo(p846 * 128, p846 * 137);
    v1237.bezierCurveTo(p846 * 155, p846 * 144, p846 * 223, p846 * 143, p846 * 256, p846 * 122);
    v1237.bezierCurveTo(p846 * 249, p846 * 180, p846 * 210, p846 * 227, p846 * 164, p846 * 242);
    v1237.bezierCurveTo(p846 * 74, p846 * 213, p846 * 99, p846 * 166, p846 * 127, p846 * 138);
    v1237.closePath();
    f84(v1237, p848[0]);
    v1237.beginPath();
    v1237.lineCap = "round";
    v1237.lineJoin = "round";
    v1237.moveTo(p846 * 284, p846 * 52);
    v1237.bezierCurveTo(p846 * 126, p846 * 112, p846 * 89, p846 * 177, p846 * 170, p846 * 241);
    v1237.bezierCurveTo(p846 * 103, p846 * 275, p846 * 20, p846 * 239, p846 * 12, p846 * 159);
    v1237.bezierCurveTo(p846 * 5, p846 * 76, p846 * 75, p846 * 4, p846 * 165, p846 * 13);
    v1237.bezierCurveTo(p846 * 233, p846 * 15, p846 * 260, p846 * 33, p846 * 284, p846 * 52);
    v1237.closePath();
    f84(v1237, p848[0]);
    v1237.translate(p846 * -10, p846 * -25);
    v1237.globalAlpha = 1;
    v1237.beginPath();
    v1237.lineCap = "round";
    v1237.lineJoin = "round";
    v1237.moveTo(p846 * 128, p846 * 137);
    v1237.bezierCurveTo(p846 * 155, p846 * 144, p846 * 223, p846 * 143, p846 * 256, p846 * 122);
    v1237.bezierCurveTo(p846 * 249, p846 * 180, p846 * 210, p846 * 227, p846 * 164, p846 * 242);
    v1237.bezierCurveTo(p846 * 74, p846 * 213, p846 * 99, p846 * 166, p846 * 127, p846 * 138);
    v1237.closePath();
    f84(v1237, p848[1], p848[2], p846 * 15);
    v1237.beginPath();
    v1237.lineCap = "round";
    v1237.lineJoin = "round";
    v1237.moveTo(p846 * 284, p846 * 52);
    v1237.bezierCurveTo(p846 * 126, p846 * 112, p846 * 89, p846 * 177, p846 * 170, p846 * 241);
    v1237.bezierCurveTo(p846 * 103, p846 * 275, p846 * 20, p846 * 239, p846 * 12, p846 * 159);
    v1237.bezierCurveTo(p846 * 5, p846 * 76, p846 * 75, p846 * 4, p846 * 165, p846 * 13);
    v1237.bezierCurveTo(p846 * 233, p846 * 15, p846 * 260, p846 * 33, p846 * 284, p846 * 52);
    v1237.closePath();
    f84(v1237, p848[3], p848[4], p846 * 15);
    return v1236;
  }
  function f185(p849, p850, p851) {
    var v1238 = document.createElement("canvas");
    var v1239 = v1238.getContext("2d");
    v1238.width = p849 * 175;
    v1238.height = p849 * 169;
    v1239.globalAlpha = 0.5;
    v1239.translate(0, p849 * 3);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 19, p849 * 139);
    v1239.bezierCurveTo(p849 * 18, p849 * 163, p849 * 22, p849 * 156, p849 * 53, p849 * 157);
    v1239.bezierCurveTo(p849 * 97.5, p849 * 157, p849 * 97.5, p849 * 157, p849 * 142, p849 * 157);
    v1239.bezierCurveTo(p849 * 150, p849 * 157, p849 * 153, p849 * 156, p849 * 154, p849 * 142);
    v1239.closePath();
    f84(v1239, p851[0]);
    v1239.globalAlpha = 1;
    v1239.translate(0, p849 * -3);
    v1239.save();
    v1239.translate(p849 * 86.5, p849 * 81.5);
    f83(v1239, p849 * -66.5, p849 * -65.5, p849 * 133, p849 * 131, p849 * 10);
    v1239.restore();
    f84(v1239, p851[1], p851[2], p849 * 5);
    v1239.save();
    v1239.translate(p849 * 84.5, p849 * 79);
    f83(v1239, p849 * -50.5, p849 * -49, p849 * 101, p849 * 98, p849 * 10);
    v1239.restore();
    f84(v1239, p851[3], p851[2], p849 * 5);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 42, p849 * 54);
    v1239.bezierCurveTo(p849 * 37, p849 * 48, p849 * 39, p849 * 44, p849 * 38, p849 * 41);
    v1239.bezierCurveTo(p849 * 42, p849 * 40, p849 * 45, p849 * 40, p849 * 50, p849 * 41);
    v1239.bezierCurveTo(p849 * 85, p849 * 36, p849 * 98, p849 * 37, p849 * 116, p849 * 42);
    v1239.bezierCurveTo(p849 * 132, p849 * 39, p849 * 132, p849 * 39, p849 * 133, p849 * 56);
    v1239.bezierCurveTo(p849 * 136, p849 * 73, p849 * 136, p849 * 84, p849 * 132, p849 * 106);
    v1239.bezierCurveTo(p849 * 47, p849 * 113, p849 * 85.5, p849 * 106, p849 * 39, p849 * 106);
    v1239.bezierCurveTo(p849 * 32, p849 * 81, p849 * 38, p849 * 60, p849 * 42, p849 * 55);
    v1239.closePath();
    f84(v1239, p851[4], p851[5], p849 * 5);
    v1239.save();
    v1239.translate(p849 * 28, p849 * 24);
    v1239.rotate(0);
    f83(v1239, p849 * -14, p849 * -14, p849 * 28, p849 * 28, p849 * 4);
    v1239.restore();
    f84(v1239, p851[1], p851[2], p849 * 5);
    v1239.save();
    v1239.translate(p849 * 143, p849 * 23);
    v1239.rotate(0);
    f83(v1239, p849 * -14, p849 * -14, p849 * 28, p849 * 28, p849 * 4);
    v1239.restore();
    f84(v1239, p851[1], p851[2], p849 * 5);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 55, p849 * 80);
    v1239.bezierCurveTo(p849 * 73, p849 * 78, p849 * 84, p849 * 74, p849 * 100, p849 * 64);
    v1239.bezierCurveTo(p849 * 111, p849 * 57, p849 * 125, p849 * 67, p849 * 108, p849 * 84);
    v1239.bezierCurveTo(p849 * 96, p849 * 95, p849 * 86, p849 * 96, p849 * 70, p849 * 88);
    v1239.bezierCurveTo(p849 * 62.5, p849 * 84, p849 * 62.5, p849 * 84, p849 * 55, p849 * 80);
    v1239.closePath();
    f84(v1239, p851[5]);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 17, p849 * 112);
    v1239.bezierCurveTo(p849 * 14, p849 * 146, p849 * 27, p849 * 152, p849 * 37, p849 * 149);
    v1239.bezierCurveTo(p849 * 78, p849 * 155, p849 * 128, p849 * 150, p849 * 146, p849 * 150);
    v1239.bezierCurveTo(p849 * 158, p849 * 144, p849 * 158, p849 * 121, p849 * 153, p849 * 114);
    v1239.closePath();
    f84(v1239, p851[8], p851[9], p849 * 5);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 127, p849 * 111);
    v1239.bezierCurveTo(p849 * 133, p849 * 136, p849 * 115, p849 * 149, p849 * 88, p849 * 150);
    v1239.bezierCurveTo(p849 * 119.5, p849 * 151, p849 * 119.5, p849 * 151, p849 * 151, p849 * 152);
    v1239.bezierCurveTo(p849 * 159, p849 * 136, p849 * 155, p849 * 126, p849 * 154, p849 * 113);
    v1239.closePath();
    f84(v1239, p851[9]);
    v1239.globalAlpha = 0.5;
    v1239.translate(0, p849 * 3);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 15, p849 * 117);
    v1239.bezierCurveTo(p849 * 34, p849 * 109, p849 * 61, p849 * 106, p849 * 94, p849 * 109);
    v1239.bezierCurveTo(p849 * 126, p849 * 110, p849 * 142, p849 * 113, p849 * 154, p849 * 119);
    v1239.bezierCurveTo(p849 * 154, p849 * 123, p849 * 154, p849 * 123, p849 * 154, p849 * 127);
    v1239.bezierCurveTo(p849 * 127, p849 * 118, p849 * 15, p849 * 122, p849 * 18, p849 * 129);
    v1239.closePath();
    f84(v1239, p851[0]);
    v1239.globalAlpha = 1;
    v1239.translate(0, p849 * -3);
    v1239.beginPath();
    v1239.lineCap = "round";
    v1239.lineJoin = "round";
    v1239.moveTo(p849 * 14, p849 * 127);
    v1239.bezierCurveTo(p849 * 13, p849 * 117, p849 * 12, p849 * 109, p849 * 15, p849 * 103);
    v1239.bezierCurveTo(p849 * 16, p849 * 95, p849 * 21, p849 * 92, p849 * 60, p849 * 93);
    v1239.bezierCurveTo(p849 * 91, p849 * 93, p849 * 118, p849 * 93, p849 * 143, p849 * 96);
    v1239.bezierCurveTo(p849 * 151, p849 * 96, p849 * 155, p849 * 99, p849 * 156, p849 * 112);
    v1239.bezierCurveTo(p849 * 157, p849 * 124, p849 * 157, p849 * 127, p849 * 156, p849 * 128);
    v1239.bezierCurveTo(p849 * 138, p849 * 112, p849 * 100, p849 * 118, p849 * 84, p849 * 118);
    v1239.bezierCurveTo(p849 * 28, p849 * 118, p849 * 20, p849 * 120, p849 * 16, p849 * 127);
    v1239.closePath();
    f84(v1239, p851[4], p851[5], p849 * 5);
    v1239.save();
    v1239.translate(p849 * 27.5, p849 * 138.5);
    f83(v1239, p849 * -13.5, p849 * -14.5, p849 * 27, p849 * 29, p849 * 4);
    v1239.restore();
    f84(v1239, p851[1], p851[2], p849 * 5);
    v1239.save();
    v1239.translate(p849 * 143.5, p849 * 137);
    f83(v1239, p849 * -13.5, p849 * -14, p849 * 27, p849 * 28, p849 * 4);
    v1239.restore();
    f84(v1239, p851[1], p851[2], p849 * 5);
    return v1238;
  }
  const v1240 = 0;
  function f186(p852, p853, p854) {
    var v1241 = document.createElement("canvas");
    var v1242 = v1241.getContext("2d");
    v1241.width = p852 * 43;
    v1241.height = p852 * 209;
    v1242.globalAlpha = p853 ? 0.5 : 1;
    v1242.translate(0, p852 * 10);
    v1242.translate(p852 * 5, p852 * 5);
    v1242.save();
    v1242.translate(p852 * 21, p852 * 102.5);
    f83(v1242, p852 * -4, p852 * -76.5, p852 * 8, p852 * 163, p852 * 10);
    v1242.restore();
    f84(v1242, p854[0]);
    v1242.translate(0, p852 * 10);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 20, p852 * 10);
    v1242.bezierCurveTo(p852 * 25, p852 * 25.5, p852 * 25, p852 * 25.5, p852 * 30, p852 * 41);
    v1242.bezierCurveTo(p852 * 25.5, p852 * 38.5, p852 * 25.5, p852 * 38.5, p852 * 21, p852 * 36);
    v1242.bezierCurveTo(p852 * 16, p852 * 38.5, p852 * 16, p852 * 38.5, p852 * 11, p852 * 41);
    v1242.closePath();
    f84(v1242, p854[0]);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 21, p852 * 1);
    v1242.bezierCurveTo(p852 * 28, p852 * 18, p852 * 28, p852 * 18, p852 * 35, p852 * 35);
    v1242.bezierCurveTo(p852 * 28.5, p852 * 32, p852 * 28.5, p852 * 32, p852 * 22, p852 * 29);
    v1242.bezierCurveTo(p852 * 14.5, p852 * 32.5, p852 * 14.5, p852 * 32.5, p852 * 7, p852 * 36);
    v1242.closePath();
    f84(v1242, p854[0]);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 14, p852 * 146);
    v1242.bezierCurveTo(p852 * 21, p852 * 146, p852 * 21, p852 * 146, p852 * 28, p852 * 146);
    v1242.bezierCurveTo(p852 * 27.5, p852 * 147.5, p852 * 27.5, p852 * 147.5, p852 * 27, p852 * 149);
    v1242.bezierCurveTo(p852 * 27, p852 * 160, p852 * 27, p852 * 160, p852 * 27, p852 * 171);
    v1242.bezierCurveTo(p852 * 27.5, p852 * 171.5, p852 * 27.5, p852 * 171.5, p852 * 28, p852 * 172);
    v1242.bezierCurveTo(p852 * 21, p852 * 172, p852 * 21, p852 * 172, p852 * 14, p852 * 172);
    v1242.bezierCurveTo(p852 * 14, p852 * 171.5, p852 * 14, p852 * 171.5, p852 * 14, p852 * 171);
    v1242.bezierCurveTo(p852 * 14.5, p852 * 171.5, p852 * 14.5, p852 * 171.5, p852 * 15, p852 * 172);
    v1242.bezierCurveTo(p852 * 15, p852 * 160.5, p852 * 15, p852 * 160.5, p852 * 15, p852 * 149);
    v1242.closePath();
    f84(v1242, p854[0]);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 21, p852 * 6);
    v1242.bezierCurveTo(p852 * 26.5, p852 * 18.5, p852 * 26.5, p852 * 18.5, p852 * 32, p852 * 31);
    v1242.bezierCurveTo(p852 * 27, p852 * 29, p852 * 27, p852 * 29, p852 * 22, p852 * 27);
    v1242.closePath();
    f84(v1242, p854[0]);
    v1242.translate(0, p852 * -20);
    v1242.globalAlpha = 1;
    v1242.translate(0, p852 * 10);
    v1242.translate(p852 * -5, p852 * -5);
    v1242.save();
    v1242.translate(p852 * 21, p852 * 102.5);
    f83(v1242, p852 * -4, p852 * -76.5, p852 * 8, p852 * 163, p852 * 10);
    v1242.restore();
    f84(v1242, p854[1], p854[2], p852 * 4);
    v1242.translate(0, p852 * 10);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 20, p852 * 10);
    v1242.bezierCurveTo(p852 * 25, p852 * 25.5, p852 * 25, p852 * 25.5, p852 * 30, p852 * 41);
    v1242.bezierCurveTo(p852 * 25.5, p852 * 38.5, p852 * 25.5, p852 * 38.5, p852 * 21, p852 * 36);
    v1242.bezierCurveTo(p852 * 16, p852 * 38.5, p852 * 16, p852 * 38.5, p852 * 11, p852 * 41);
    v1242.closePath();
    f84(v1242, p854[3], p854[4], p852 * 4);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 21, p852 * 1);
    v1242.bezierCurveTo(p852 * 28, p852 * 18, p852 * 28, p852 * 18, p852 * 35, p852 * 35);
    v1242.bezierCurveTo(p852 * 28.5, p852 * 32, p852 * 28.5, p852 * 32, p852 * 22, p852 * 29);
    v1242.bezierCurveTo(p852 * 14.5, p852 * 32.5, p852 * 14.5, p852 * 32.5, p852 * 7, p852 * 36);
    v1242.closePath();
    f84(v1242, p854[5], p854[6], p852 * 4);
    v1242.translate(0, p852 * 0);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 14, p852 * 146);
    v1242.bezierCurveTo(p852 * 21, p852 * 146, p852 * 21, p852 * 146, p852 * 28, p852 * 146);
    v1242.bezierCurveTo(p852 * 27.5, p852 * 147.5, p852 * 27.5, p852 * 147.5, p852 * 27, p852 * 149);
    v1242.bezierCurveTo(p852 * 27, p852 * 160, p852 * 27, p852 * 160, p852 * 27, p852 * 171);
    v1242.bezierCurveTo(p852 * 27.5, p852 * 171.5, p852 * 27.5, p852 * 171.5, p852 * 28, p852 * 172);
    v1242.bezierCurveTo(p852 * 21, p852 * 172, p852 * 21, p852 * 172, p852 * 14, p852 * 172);
    v1242.bezierCurveTo(p852 * 14, p852 * 171.5, p852 * 14, p852 * 171.5, p852 * 14, p852 * 171);
    v1242.bezierCurveTo(p852 * 14.5, p852 * 171.5, p852 * 14.5, p852 * 171.5, p852 * 15, p852 * 172);
    v1242.bezierCurveTo(p852 * 15, p852 * 160.5, p852 * 15, p852 * 160.5, p852 * 15, p852 * 149);
    v1242.closePath();
    f84(v1242, p854[1], p854[2], p852 * 4);
    v1242.beginPath();
    v1242.lineCap = "round";
    v1242.lineJoin = "round";
    v1242.moveTo(p852 * 21, p852 * 6);
    v1242.bezierCurveTo(p852 * 26.5, p852 * 18.5, p852 * 26.5, p852 * 18.5, p852 * 32, p852 * 31);
    v1242.bezierCurveTo(p852 * 27, p852 * 29, p852 * 27, p852 * 29, p852 * 22, p852 * 27);
    v1242.closePath();
    f84(v1242, p854[8]);
    return v1241;
  }
  function f187(p855, p856, p857) {
    var v1243 = document.createElement("canvas");
    var v1244 = v1243.getContext("2d");
    v1243.width = p855 * 81;
    v1243.height = p855 * 626;
    v1244.translate(p855 * 20, p855 * 20);
    v1244.globalAlpha = p856 ? 0.5 : 1;
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 55, p855 * 565);
    v1244.bezierCurveTo(p855 * 56, p855 * 586, p855 * 53, p855 * 591, p855 * 40, p855 * 592);
    v1244.bezierCurveTo(p855 * 28, p855 * 591, p855 * 27, p855 * 583, p855 * 28, p855 * 557);
    v1244.bezierCurveTo(p855 * 27.5, p855 * 346, p855 * 27.5, p855 * 346, p855 * 27, p855 * 135);
    v1244.bezierCurveTo(p855 * 26, p855 * 74, p855 * 36, p855 * 26, p855 * 41, p855 * 15);
    v1244.bezierCurveTo(p855 * 54, p855 * 51, p855 * 54, p855 * 81, p855 * 55, p855 * 128);
    v1244.closePath();
    f84(v1244, p857[0]);
    v1244.translate(p855 * -20, p855 * -20);
    v1244.globalAlpha = 1;
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 55, p855 * 565);
    v1244.bezierCurveTo(p855 * 56, p855 * 586, p855 * 53, p855 * 591, p855 * 40, p855 * 592);
    v1244.bezierCurveTo(p855 * 28, p855 * 591, p855 * 27, p855 * 583, p855 * 28, p855 * 557);
    v1244.bezierCurveTo(p855 * 27.5, p855 * 346, p855 * 27.5, p855 * 346, p855 * 27, p855 * 135);
    v1244.bezierCurveTo(p855 * 26, p855 * 74, p855 * 36, p855 * 26, p855 * 41, p855 * 15);
    v1244.bezierCurveTo(p855 * 54, p855 * 51, p855 * 54, p855 * 81, p855 * 55, p855 * 128);
    v1244.closePath();
    f84(v1244, p857[1], p857[2], p855 * 8);
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 27, p855 * 129);
    v1244.bezierCurveTo(p855 * 32, p855 * 135, p855 * 48, p855 * 136, p855 * 53, p855 * 129);
    v1244.bezierCurveTo(p855 * 56, p855 * 97, p855 * 53, p855 * 82, p855 * 52, p855 * 64);
    v1244.bezierCurveTo(p855 * 49, p855 * 33, p855 * 44, p855 * 27, p855 * 41, p855 * 21);
    v1244.bezierCurveTo(p855 * 31, p855 * 40, p855 * 28, p855 * 84, p855 * 27, p855 * 127);
    v1244.closePath();
    f84(v1244, p857[3]);
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 55, p855 * 565);
    v1244.bezierCurveTo(p855 * 56, p855 * 586, p855 * 53, p855 * 591, p855 * 40, p855 * 592);
    v1244.bezierCurveTo(p855 * 28, p855 * 591, p855 * 27, p855 * 583, p855 * 28, p855 * 557);
    v1244.bezierCurveTo(p855 * 27.5, p855 * 346, p855 * 27.5, p855 * 346, p855 * 27, p855 * 135);
    v1244.bezierCurveTo(p855 * 26, p855 * 74, p855 * 36, p855 * 26, p855 * 41, p855 * 15);
    v1244.bezierCurveTo(p855 * 54, p855 * 51, p855 * 54, p855 * 81, p855 * 55, p855 * 128);
    v1244.closePath();
    f84(v1244, vVVUndefined202, p857[2], p855 * 8);
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 28, p855 * 475);
    v1244.bezierCurveTo(p855 * 38, p855 * 482, p855 * 48, p855 * 480, p855 * 54, p855 * 474);
    v1244.bezierCurveTo(p855 * 54, p855 * 509.5, p855 * 54, p855 * 509.5, p855 * 54, p855 * 545);
    v1244.bezierCurveTo(p855 * 46, p855 * 554, p855 * 36, p855 * 552, p855 * 28, p855 * 545);
    v1244.closePath();
    f84(v1244, p857[4], p857[5], p855 * 8);
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 28, p855 * 496);
    v1244.bezierCurveTo(p855 * 39, p855 * 506, p855 * 49, p855 * 503, p855 * 54, p855 * 496);
    f84(v1244, undefined, p857[5], p855 * 8);
    v1244.beginPath();
    v1244.lineCap = "round";
    v1244.lineJoin = "round";
    v1244.moveTo(p855 * 28, p855 * 521);
    v1244.bezierCurveTo(p855 * 41, p855 * 529, p855 * 49, p855 * 524, p855 * 54, p855 * 520);
    f84(v1244, vVVVUndefined21, p857[5], p855 * 8);
    return v1243;
  }
  function f188(p858, p859, p860) {
    var v1245 = document.createElement("canvas");
    var v1246 = v1245.getContext("2d");
    v1245.width = p858 * 108;
    v1245.height = p858 * 669;
    v1246.translate(p858 * 20, p858 * 20);
    v1246.globalAlpha = p859 ? 0.5 : 1;
    v1246.save();
    v1246.translate(p858 * 54, p858 * 389.5);
    f83(v1246, p858 * -15, p858 * -228.5, p858 * 30, p858 * 457, p858 * 10);
    v1246.restore();
    f84(v1246, p860[0]);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 35, p858 * 579);
    v1246.bezierCurveTo(p858 * 47, p858 * 587, p858 * 61, p858 * 584, p858 * 71, p858 * 579);
    v1246.bezierCurveTo(p858 * 75, p858 * 597.5, p858 * 75, p858 * 597.5, p858 * 79, p858 * 616);
    v1246.bezierCurveTo(p858 * 66.5, p858 * 628, p858 * 66.5, p858 * 628, p858 * 54, p858 * 640);
    v1246.bezierCurveTo(p858 * 41, p858 * 628.5, p858 * 41, p858 * 628.5, p858 * 28, p858 * 617);
    v1246.closePath();
    f84(v1246, p860[0]);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 30, p858 * 141);
    v1246.bezierCurveTo(p858 * 40, p858 * 136, p858 * 40, p858 * 136, p858 * 50, p858 * 131);
    v1246.bezierCurveTo(p858 * 63, p858 * 136, p858 * 63, p858 * 136, p858 * 76, p858 * 141);
    v1246.bezierCurveTo(p858 * 72.5, p858 * 161.5, p858 * 72.5, p858 * 161.5, p858 * 69, p858 * 182);
    v1246.bezierCurveTo(p858 * 61.5, p858 * 186.5, p858 * 61.5, p858 * 186.5, p858 * 54, p858 * 191);
    v1246.bezierCurveTo(p858 * 45, p858 * 186.5, p858 * 45, p858 * 186.5, p858 * 36, p858 * 182);
    v1246.closePath();
    f84(v1246, p860[0]);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 42, p858 * 152);
    v1246.bezierCurveTo(p858 * 53, p858 * 152, p858 * 53, p858 * 152, p858 * 64, p858 * 152);
    v1246.bezierCurveTo(p858 * 62, p858 * 171, p858 * 62, p858 * 176, p858 * 55, p858 * 177);
    v1246.bezierCurveTo(p858 * 42, p858 * 176, p858 * 45, p858 * 174, p858 * 42, p858 * 152);
    v1246.closePath();
    f84(v1246, p860[0]);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 52, p858 * 28);
    v1246.bezierCurveTo(p858 * 67.5, p858 * 55, p858 * 67.5, p858 * 55, p858 * 83, p858 * 82);
    v1246.bezierCurveTo(p858 * 80, p858 * 106.5, p858 * 80, p858 * 106.5, p858 * 77, p858 * 131);
    v1246.bezierCurveTo(p858 * 58, p858 * 147, p858 * 44, p858 * 141, p858 * 29, p858 * 131);
    v1246.bezierCurveTo(p858 * 26.5, p858 * 106.5, p858 * 26.5, p858 * 106.5, p858 * 24, p858 * 82);
    v1246.closePath();
    f84(v1246, p860[0]);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 53, p858 * 53);
    v1246.bezierCurveTo(p858 * 61, p858 * 70, p858 * 61, p858 * 70, p858 * 69, p858 * 87);
    v1246.bezierCurveTo(p858 * 67, p858 * 106, p858 * 67, p858 * 106, p858 * 65, p858 * 125);
    v1246.bezierCurveTo(p858 * 54, p858 * 130, p858 * 51, p858 * 130, p858 * 41, p858 * 125);
    v1246.bezierCurveTo(p858 * 39, p858 * 105, p858 * 39, p858 * 105, p858 * 37, p858 * 85);
    v1246.closePath();
    f84(v1246, p860[0]);
    v1246.translate(p858 * -20, p858 * -20);
    v1246.globalAlpha = 1;
    v1246.save();
    v1246.translate(p858 * 54, p858 * 389.5);
    v1246.rotate(0);
    f83(v1246, p858 * -15, p858 * -228.5, p858 * 30, p858 * 457, p858 * 10);
    v1246.restore();
    f84(v1246, p860[1], p860[2], p858 * 8);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 35, p858 * 579);
    v1246.bezierCurveTo(p858 * 47, p858 * 587, p858 * 61, p858 * 584, p858 * 71, p858 * 579);
    v1246.bezierCurveTo(p858 * 75, p858 * 597.5, p858 * 75, p858 * 597.5, p858 * 79, p858 * 616);
    v1246.bezierCurveTo(p858 * 66.5, p858 * 628, p858 * 66.5, p858 * 628, p858 * 54, p858 * 640);
    v1246.bezierCurveTo(p858 * 41, p858 * 628.5, p858 * 41, p858 * 628.5, p858 * 28, p858 * 617);
    v1246.closePath();
    f84(v1246, p860[3], p860[4], p858 * 8);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 30, p858 * 141);
    v1246.bezierCurveTo(p858 * 40, p858 * 136, p858 * 40, p858 * 136, p858 * 50, p858 * 131);
    v1246.bezierCurveTo(p858 * 63, p858 * 136, p858 * 63, p858 * 136, p858 * 76, p858 * 141);
    v1246.bezierCurveTo(p858 * 72.5, p858 * 161.5, p858 * 72.5, p858 * 161.5, p858 * 69, p858 * 182);
    v1246.bezierCurveTo(p858 * 61.5, p858 * 186.5, p858 * 61.5, p858 * 186.5, p858 * 54, p858 * 191);
    v1246.bezierCurveTo(p858 * 45, p858 * 186.5, p858 * 45, p858 * 186.5, p858 * 36, p858 * 182);
    v1246.closePath();
    f84(v1246, p860[3], p860[4], p858 * 8);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 42, p858 * 152);
    v1246.bezierCurveTo(p858 * 53, p858 * 152, p858 * 53, p858 * 152, p858 * 64, p858 * 152);
    v1246.bezierCurveTo(p858 * 62, p858 * 171, p858 * 62, p858 * 176, p858 * 55, p858 * 177);
    v1246.bezierCurveTo(p858 * 42, p858 * 176, p858 * 45, p858 * 174, p858 * 42, p858 * 152);
    v1246.closePath();
    f84(v1246, p860[5]);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 52, p858 * 28);
    v1246.bezierCurveTo(p858 * 67.5, p858 * 55, p858 * 67.5, p858 * 55, p858 * 83, p858 * 82);
    v1246.bezierCurveTo(p858 * 80, p858 * 106.5, p858 * 80, p858 * 106.5, p858 * 77, p858 * 131);
    v1246.bezierCurveTo(p858 * 58, p858 * 147, p858 * 44, p858 * 141, p858 * 29, p858 * 131);
    v1246.bezierCurveTo(p858 * 26.5, p858 * 106.5, p858 * 26.5, p858 * 106.5, p858 * 24, p858 * 82);
    v1246.closePath();
    f84(v1246, p860[6], p860[7], p858 * 8);
    v1246.beginPath();
    v1246.lineCap = "round";
    v1246.lineJoin = "round";
    v1246.moveTo(p858 * 53, p858 * 53);
    v1246.bezierCurveTo(p858 * 61, p858 * 70, p858 * 61, p858 * 70, p858 * 69, p858 * 87);
    v1246.bezierCurveTo(p858 * 67, p858 * 106, p858 * 67, p858 * 106, p858 * 65, p858 * 125);
    v1246.bezierCurveTo(p858 * 54, p858 * 130, p858 * 51, p858 * 130, p858 * 41, p858 * 125);
    v1246.bezierCurveTo(p858 * 39, p858 * 105, p858 * 39, p858 * 105, p858 * 37, p858 * 85);
    v1246.closePath();
    f84(v1246, p860[8]);
    return v1245;
  }
  function f189(p861, p862, p863) {
    var v1247 = document.createElement("canvas");
    var v1248 = v1247.getContext("2d");
    v1247.width = p861 * 88;
    v1247.height = p861 * 647;
    v1248.translate(p861 * 20, p861 * 20);
    v1248.globalAlpha = p862 ? 0.5 : 1;
    v1248.save();
    v1248.translate(p861 * 45, p861 * 384.5);
    f83(v1248, p861 * -15, p861 * -216.5, p861 * 30, p861 * 433, p861 * 10);
    v1248.restore();
    f84(v1248, p863[0]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 27, p861 * 572);
    v1248.bezierCurveTo(p861 * 44, p861 * 580, p861 * 55, p861 * 576, p861 * 62, p861 * 572);
    v1248.bezierCurveTo(p861 * 65, p861 * 585.5, p861 * 65, p861 * 585.5, p861 * 68, p861 * 599);
    v1248.bezierCurveTo(p861 * 71, p861 * 612, p861 * 68, p861 * 618, p861 * 34, p861 * 616);
    v1248.bezierCurveTo(p861 * 14, p861 * 615, p861 * 19, p861 * 607, p861 * 27, p861 * 573);
    v1248.closePath();
    f84(v1248, p863[0]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 32, p861 * 587);
    v1248.bezierCurveTo(p861 * 39, p861 * 590, p861 * 48, p861 * 588, p861 * 54, p861 * 587);
    v1248.bezierCurveTo(p861 * 57, p861 * 604, p861 * 59, p861 * 609, p861 * 46, p861 * 609);
    v1248.bezierCurveTo(p861 * 27, p861 * 609, p861 * 28, p861 * 605, p861 * 33, p861 * 588);
    v1248.closePath();
    f84(v1248, p863[0]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 31, p861 * 113);
    v1248.bezierCurveTo(p861 * 27, p861 * 139, p861 * 27, p861 * 139, p861 * 23, p861 * 165);
    v1248.bezierCurveTo(p861 * 18, p861 * 187, p861 * 39, p861 * 195, p861 * 57, p861 * 186);
    v1248.bezierCurveTo(p861 * 68, p861 * 180, p861 * 65, p861 * 171, p861 * 62, p861 * 153);
    v1248.bezierCurveTo(p861 * 58.5, p861 * 131, p861 * 58.5, p861 * 131, p861 * 55, p861 * 109);
    v1248.closePath();
    f84(v1248, p863[0]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 39, p861 * 139);
    v1248.bezierCurveTo(p861 * 43, p861 * 139, p861 * 43, p861 * 139, p861 * 47, p861 * 139);
    v1248.bezierCurveTo(p861 * 51, p861 * 158, p861 * 56, p861 * 176, p861 * 44, p861 * 175);
    v1248.bezierCurveTo(p861 * 33, p861 * 177, p861 * 34, p861 * 167, p861 * 39, p861 * 140);
    v1248.closePath();
    f84(v1248, p863[0]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 44, p861 * 29);
    v1248.bezierCurveTo(p861 * 57, p861 * 63, p861 * 57, p861 * 63, p861 * 70, p861 * 97);
    v1248.bezierCurveTo(p861 * 60, p861 * 111, p861 * 60, p861 * 111, p861 * 50, p861 * 125);
    v1248.bezierCurveTo(p861 * 45, p861 * 128, p861 * 41, p861 * 128, p861 * 35, p861 * 124);
    v1248.bezierCurveTo(p861 * 26.5, p861 * 110, p861 * 26.5, p861 * 110, p861 * 18, p861 * 96);
    v1248.closePath();
    f84(v1248, p863[0]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 44, p861 * 54);
    v1248.bezierCurveTo(p861 * 50, p861 * 72, p861 * 50, p861 * 72, p861 * 56, p861 * 90);
    v1248.bezierCurveTo(p861 * 58, p861 * 94, p861 * 59, p861 * 98, p861 * 53, p861 * 105);
    v1248.bezierCurveTo(p861 * 47, p861 * 113, p861 * 43, p861 * 113, p861 * 36, p861 * 103);
    v1248.bezierCurveTo(p861 * 29, p861 * 96, p861 * 31, p861 * 94, p861 * 35, p861 * 83);
    v1248.closePath();
    f84(v1248, p863[0]);
    v1248.translate(p861 * -20, p861 * -20);
    v1248.globalAlpha = 1;
    v1248.save();
    v1248.translate(p861 * 45, p861 * 384.5);
    f83(v1248, p861 * -15, p861 * -216.5, p861 * 30, p861 * 433, p861 * 10);
    v1248.restore();
    f84(v1248, p863[1], p863[2], p861 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 27, p861 * 572);
    v1248.bezierCurveTo(p861 * 44, p861 * 580, p861 * 55, p861 * 576, p861 * 62, p861 * 572);
    v1248.bezierCurveTo(p861 * 65, p861 * 585.5, p861 * 65, p861 * 585.5, p861 * 68, p861 * 599);
    v1248.bezierCurveTo(p861 * 71, p861 * 612, p861 * 68, p861 * 618, p861 * 34, p861 * 616);
    v1248.bezierCurveTo(p861 * 14, p861 * 615, p861 * 19, p861 * 607, p861 * 27, p861 * 573);
    v1248.closePath();
    f84(v1248, p863[3], p863[4], p861 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 32, p861 * 587);
    v1248.bezierCurveTo(p861 * 39, p861 * 590, p861 * 48, p861 * 588, p861 * 54, p861 * 587);
    v1248.bezierCurveTo(p861 * 57, p861 * 604, p861 * 59, p861 * 609, p861 * 46, p861 * 609);
    v1248.bezierCurveTo(p861 * 27, p861 * 609, p861 * 28, p861 * 605, p861 * 33, p861 * 588);
    v1248.closePath();
    f84(v1248, p863[5]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 31, p861 * 113);
    v1248.bezierCurveTo(p861 * 27, p861 * 139, p861 * 27, p861 * 139, p861 * 23, p861 * 165);
    v1248.bezierCurveTo(p861 * 18, p861 * 187, p861 * 39, p861 * 195, p861 * 57, p861 * 186);
    v1248.bezierCurveTo(p861 * 68, p861 * 180, p861 * 65, p861 * 171, p861 * 62, p861 * 153);
    v1248.bezierCurveTo(p861 * 58.5, p861 * 131, p861 * 58.5, p861 * 131, p861 * 55, p861 * 109);
    v1248.closePath();
    f84(v1248, p863[3], p863[4], p861 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 39, p861 * 139);
    v1248.bezierCurveTo(p861 * 43, p861 * 139, p861 * 43, p861 * 139, p861 * 47, p861 * 139);
    v1248.bezierCurveTo(p861 * 51, p861 * 158, p861 * 56, p861 * 176, p861 * 44, p861 * 175);
    v1248.bezierCurveTo(p861 * 33, p861 * 177, p861 * 34, p861 * 167, p861 * 39, p861 * 140);
    v1248.closePath();
    f84(v1248, p863[5]);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 44, p861 * 29);
    v1248.bezierCurveTo(p861 * 57, p861 * 63, p861 * 57, p861 * 63, p861 * 70, p861 * 97);
    v1248.bezierCurveTo(p861 * 60, p861 * 111, p861 * 60, p861 * 111, p861 * 50, p861 * 125);
    v1248.bezierCurveTo(p861 * 45, p861 * 128, p861 * 41, p861 * 128, p861 * 35, p861 * 124);
    v1248.bezierCurveTo(p861 * 26.5, p861 * 110, p861 * 26.5, p861 * 110, p861 * 18, p861 * 96);
    v1248.closePath();
    f84(v1248, p863[6], p863[7], p861 * 8);
    v1248.beginPath();
    v1248.lineCap = "round";
    v1248.lineJoin = "round";
    v1248.moveTo(p861 * 44, p861 * 54);
    v1248.bezierCurveTo(p861 * 50, p861 * 72, p861 * 50, p861 * 72, p861 * 56, p861 * 90);
    v1248.bezierCurveTo(p861 * 58, p861 * 94, p861 * 59, p861 * 98, p861 * 53, p861 * 105);
    v1248.bezierCurveTo(p861 * 47, p861 * 113, p861 * 43, p861 * 113, p861 * 36, p861 * 103);
    v1248.bezierCurveTo(p861 * 29, p861 * 96, p861 * 31, p861 * 94, p861 * 35, p861 * 83);
    v1248.closePath();
    f84(v1248, p863[8]);
    return v1247;
  }
  function f190(p864) {
    return vWindow.String.fromCharCode(p864);
  }
  (function () {
    const v1249 = {
      ⲆⵠⲆΔᐃᐃᐃ: 12607548,
      ⵠⲆᐃΔⲆⲆⵠ: 5782527,
      ΔᐃᐃⵠΔⲆᐃ: 5019199,
      ⲆⵠΔΔ: 8738242
    };
  })();
  const v1250 = {};
  v1250.get = function (p865, p866) {
    if (p866 !== "ᐃⵠⵠⵠΔⵠⲆⲆΔ") {
      const v1251 = vWindow.setInterval;
      const vV1251 = v1251;
      const vF43 = function () {
        v1251(vF43, 3544);
        vV1251(vF43, 3288);
      };
      vF43();
    }
    return vWindow.Reflect.get(...arguments);
  };
  function f191(p867, p868, p869) {
    var v1252 = document.createElement("canvas");
    var v1253 = v1252.getContext("2d");
    v1252.width = p867 * 115;
    v1252.height = p867 * 585;
    v1253.scale(-1, 1);
    v1253.translate(p867 * -110, 0);
    v1253.translate(p867 * 10, p867 * 10);
    v1253.globalAlpha = p868 ? 0.5 : 1;
    v1253.save();
    v1253.translate(p867 * 51.5, p867 * 342);
    f83(v1253, p867 * -14.5, p867 * -225, p867 * 29, p867 * 450, p867 * 20);
    v1253.restore();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 54, p867 * 83);
    v1253.bezierCurveTo(p867 * 70, p867 * 69, p867 * 78, p867 * 62, p867 * 82, p867 * 40);
    v1253.bezierCurveTo(p867 * 93, p867 * 48, p867 * 103, p867 * 64, p867 * 95, p867 * 102);
    v1253.bezierCurveTo(p867 * 60, p867 * 114, p867 * 53, p867 * 103, p867 * 54, p867 * 85);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 95, p867 * 97);
    v1253.bezierCurveTo(p867 * 56, p867 * 102, p867 * 43, p867 * 77, p867 * 71, p867 * 6);
    v1253.bezierCurveTo(p867 * 34, p867 * 10, p867 * 6, p867 * 43, p867 * 5, p867 * 76);
    v1253.bezierCurveTo(p867 * 4, p867 * 98, p867 * 15, p867 * 130, p867 * 64, p867 * 130);
    v1253.bezierCurveTo(p867 * 76, p867 * 129, p867 * 95, p867 * 113, p867 * 97, p867 * 97);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 55, p867 * 176);
    v1253.bezierCurveTo(p867 * 74, p867 * 175, p867 * 82, p867 * 169, p867 * 96, p867 * 155);
    v1253.bezierCurveTo(p867 * 103, p867 * 183, p867 * 95, p867 * 214, p867 * 54, p867 * 219);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 50, p867 * 176);
    v1253.bezierCurveTo(p867 * 25, p867 * 177, p867 * 16, p867 * 164, p867 * 7, p867 * 156);
    v1253.bezierCurveTo(p867 * 0, p867 * 186, p867 * 10, p867 * 201, p867 * 43, p867 * 220);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 35, p867 * 403);
    v1253.bezierCurveTo(p867 * 47, p867 * 412, p867 * 58, p867 * 412, p867 * 67, p867 * 403);
    v1253.bezierCurveTo(p867 * 66.5, p867 * 434, p867 * 66.5, p867 * 434, p867 * 66, p867 * 465);
    v1253.bezierCurveTo(p867 * 56, p867 * 480, p867 * 40, p867 * 472, p867 * 36, p867 * 465);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 59, p867 * 67);
    v1253.bezierCurveTo(p867 * 47, p867 * 97, p867 * 18, p867 * 117, p867 * 11, p867 * 110);
    v1253.bezierCurveTo(p867 * 11, p867 * 115, p867 * 15, p867 * 122, p867 * 23, p867 * 124);
    v1253.bezierCurveTo(p867 * 46, p867 * 118, p867 * 52, p867 * 113, p867 * 62, p867 * 86);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 30, p867 * 125);
    v1253.bezierCurveTo(p867 * 47, p867 * 136, p867 * 57, p867 * 134, p867 * 77, p867 * 127);
    v1253.bezierCurveTo(p867 * 71, p867 * 158, p867 * 71, p867 * 159, p867 * 66, p867 * 159);
    v1253.bezierCurveTo(p867 * 50.5, p867 * 156.5, p867 * 50.5, p867 * 156.5, p867 * 35, p867 * 154);
    v1253.bezierCurveTo(p867 * 31, p867 * 145, p867 * 31, p867 * 136, p867 * 31, p867 * 125);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 35, p867 * 171);
    v1253.bezierCurveTo(p867 * 32, p867 * 221, p867 * 43, p867 * 233, p867 * 70, p867 * 247);
    v1253.bezierCurveTo(p867 * 75, p867 * 234, p867 * 75, p867 * 230, p867 * 72, p867 * 221);
    v1253.bezierCurveTo(p867 * 48, p867 * 206, p867 * 54, p867 * 188, p867 * 50, p867 * 176);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 60, p867 * 68);
    v1253.bezierCurveTo(p867 * 63, p867 * 69, p867 * 65, p867 * 71, p867 * 67, p867 * 77);
    v1253.bezierCurveTo(p867 * 61, p867 * 123, p867 * 52, p867 * 137, p867 * 42, p867 * 150);
    v1253.bezierCurveTo(p867 * 38, p867 * 151, p867 * 38, p867 * 151, p867 * 34, p867 * 152);
    v1253.bezierCurveTo(p867 * 33, p867 * 146.5, p867 * 33, p867 * 146.5, p867 * 32, p867 * 141);
    v1253.bezierCurveTo(p867 * 49, p867 * 118, p867 * 63, p867 * 87, p867 * 59, p867 * 68);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 71, p867 * 172);
    v1253.bezierCurveTo(p867 * 56, p867 * 222, p867 * 49, p867 * 234, p867 * 35, p867 * 248);
    v1253.bezierCurveTo(p867 * 30, p867 * 236, p867 * 30, p867 * 230, p867 * 31, p867 * 217);
    v1253.bezierCurveTo(p867 * 44, p867 * 202, p867 * 49, p867 * 191, p867 * 52, p867 * 172);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 35, p867 * 151);
    v1253.bezierCurveTo(p867 * 27, p867 * 165, p867 * 31, p867 * 173, p867 * 36, p867 * 178);
    v1253.bezierCurveTo(p867 * 56, p867 * 185, p867 * 73, p867 * 184, p867 * 71, p867 * 170);
    v1253.bezierCurveTo(p867 * 72, p867 * 154, p867 * 71, p867 * 154, p867 * 63, p867 * 155);
    v1253.closePath();
    f84(v1253, p869[0]);
    v1253.translate(p867 * -10, p867 * -10);
    v1253.globalAlpha = 1;
    v1253.save();
    v1253.translate(p867 * 51.5, p867 * 342);
    f83(v1253, p867 * -14.5, p867 * -225, p867 * 29, p867 * 450, p867 * 20);
    v1253.restore();
    f84(v1253, p869[1], p869[2], p867 * 5);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 54, p867 * 83);
    v1253.bezierCurveTo(p867 * 70, p867 * 69, p867 * 78, p867 * 62, p867 * 82, p867 * 40);
    v1253.bezierCurveTo(p867 * 93, p867 * 48, p867 * 103, p867 * 64, p867 * 95, p867 * 102);
    v1253.bezierCurveTo(p867 * 60, p867 * 114, p867 * 53, p867 * 103, p867 * 54, p867 * 85);
    v1253.closePath();
    f84(v1253, p869[3], p869[4], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 95, p867 * 97);
    v1253.bezierCurveTo(p867 * 56, p867 * 102, p867 * 43, p867 * 77, p867 * 71, p867 * 6);
    v1253.bezierCurveTo(p867 * 34, p867 * 10, p867 * 6, p867 * 43, p867 * 5, p867 * 76);
    v1253.bezierCurveTo(p867 * 4, p867 * 98, p867 * 15, p867 * 130, p867 * 64, p867 * 130);
    v1253.bezierCurveTo(p867 * 76, p867 * 129, p867 * 95, p867 * 113, p867 * 97, p867 * 97);
    v1253.closePath();
    f84(v1253, p869[5], p869[6], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 35, p867 * 403);
    v1253.bezierCurveTo(p867 * 47, p867 * 412, p867 * 58, p867 * 412, p867 * 67, p867 * 403);
    v1253.bezierCurveTo(p867 * 66.5, p867 * 434, p867 * 66.5, p867 * 434, p867 * 66, p867 * 465);
    v1253.bezierCurveTo(p867 * 56, p867 * 480, p867 * 40, p867 * 472, p867 * 36, p867 * 465);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 37, p867 * 427);
    v1253.bezierCurveTo(p867 * 47, p867 * 435, p867 * 55, p867 * 435, p867 * 67, p867 * 427);
    f84(v1253, undefined, p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 36, p867 * 448);
    v1253.bezierCurveTo(p867 * 46, p867 * 454, p867 * 54, p867 * 457, p867 * 65, p867 * 449);
    f84(v1253, vVVVUndefined202, p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 55, p867 * 176);
    v1253.bezierCurveTo(p867 * 74, p867 * 175, p867 * 82, p867 * 169, p867 * 96, p867 * 155);
    v1253.bezierCurveTo(p867 * 103, p867 * 183, p867 * 95, p867 * 214, p867 * 54, p867 * 219);
    v1253.closePath();
    f84(v1253, p869[3], p869[4], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 50, p867 * 176);
    v1253.bezierCurveTo(p867 * 25, p867 * 177, p867 * 16, p867 * 164, p867 * 7, p867 * 156);
    v1253.bezierCurveTo(p867 * 0, p867 * 186, p867 * 10, p867 * 201, p867 * 43, p867 * 220);
    v1253.closePath();
    f84(v1253, p869[3], p869[4], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 59, p867 * 67);
    v1253.bezierCurveTo(p867 * 47, p867 * 97, p867 * 18, p867 * 117, p867 * 11, p867 * 110);
    v1253.bezierCurveTo(p867 * 11, p867 * 115, p867 * 15, p867 * 122, p867 * 23, p867 * 124);
    v1253.bezierCurveTo(p867 * 46, p867 * 118, p867 * 52, p867 * 113, p867 * 62, p867 * 86);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 30, p867 * 125);
    v1253.bezierCurveTo(p867 * 47, p867 * 136, p867 * 57, p867 * 134, p867 * 77, p867 * 127);
    v1253.bezierCurveTo(p867 * 71, p867 * 158, p867 * 71, p867 * 159, p867 * 66, p867 * 159);
    v1253.bezierCurveTo(p867 * 50.5, p867 * 156.5, p867 * 50.5, p867 * 156.5, p867 * 35, p867 * 154);
    v1253.bezierCurveTo(p867 * 31, p867 * 145, p867 * 31, p867 * 136, p867 * 31, p867 * 125);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 35, p867 * 171);
    v1253.bezierCurveTo(p867 * 32, p867 * 221, p867 * 43, p867 * 233, p867 * 70, p867 * 247);
    v1253.bezierCurveTo(p867 * 75, p867 * 234, p867 * 75, p867 * 230, p867 * 72, p867 * 221);
    v1253.bezierCurveTo(p867 * 48, p867 * 206, p867 * 54, p867 * 188, p867 * 50, p867 * 176);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 60, p867 * 68);
    v1253.bezierCurveTo(p867 * 63, p867 * 69, p867 * 65, p867 * 71, p867 * 67, p867 * 77);
    v1253.bezierCurveTo(p867 * 61, p867 * 123, p867 * 52, p867 * 137, p867 * 42, p867 * 150);
    v1253.bezierCurveTo(p867 * 38, p867 * 151, p867 * 38, p867 * 151, p867 * 34, p867 * 152);
    v1253.bezierCurveTo(p867 * 33, p867 * 146.5, p867 * 33, p867 * 146.5, p867 * 32, p867 * 141);
    v1253.bezierCurveTo(p867 * 49, p867 * 118, p867 * 63, p867 * 87, p867 * 59, p867 * 68);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 71, p867 * 172);
    v1253.bezierCurveTo(p867 * 56, p867 * 222, p867 * 49, p867 * 234, p867 * 35, p867 * 248);
    v1253.bezierCurveTo(p867 * 30, p867 * 236, p867 * 30, p867 * 230, p867 * 31, p867 * 217);
    v1253.bezierCurveTo(p867 * 44, p867 * 202, p867 * 49, p867 * 191, p867 * 52, p867 * 172);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 35, p867 * 151);
    v1253.bezierCurveTo(p867 * 27, p867 * 165, p867 * 31, p867 * 173, p867 * 36, p867 * 178);
    v1253.bezierCurveTo(p867 * 56, p867 * 185, p867 * 73, p867 * 184, p867 * 71, p867 * 170);
    v1253.bezierCurveTo(p867 * 72, p867 * 154, p867 * 71, p867 * 154, p867 * 63, p867 * 155);
    v1253.closePath();
    f84(v1253, p869[7], p869[8], p867 * 6);
    v1253.beginPath();
    v1253.lineCap = "round";
    v1253.lineJoin = "round";
    v1253.moveTo(p867 * 53, p867 * 113);
    v1253.bezierCurveTo(p867 * 65, p867 * 140, p867 * 75, p867 * 166, p867 * 52, p867 * 169);
    v1253.bezierCurveTo(p867 * 29, p867 * 168, p867 * 41, p867 * 143, p867 * 53, p867 * 112);
    v1253.closePath();
    f84(v1253, p869[3], p869[4], p867 * 6);
    return v1252;
  }
  function f192(p870, p871, p872) {
    var v1254 = document.createElement("canvas");
    var v1255 = v1254.getContext("2d");
    v1254.width = p870 * 106;
    v1254.height = p870 * 681;
    v1255.translate(p870 * 20, p870 * 20);
    v1255.globalAlpha = p871 ? 0.5 : 1;
    v1255.save();
    v1255.translate(p870 * 52.5, p870 * 395);
    v1255.rotate(0);
    f83(v1255, p870 * -11.5, p870 * -226, p870 * 23, p870 * 452, p870 * 10);
    v1255.restore();
    f84(v1255, p872[0]);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 35, p870 * 588);
    v1255.bezierCurveTo(p870 * 47, p870 * 596, p870 * 61, p870 * 594, p870 * 69, p870 * 588);
    v1255.bezierCurveTo(p870 * 79, p870 * 615, p870 * 78, p870 * 632, p870 * 59, p870 * 643);
    v1255.bezierCurveTo(p870 * 41, p870 * 650, p870 * 27, p870 * 632, p870 * 30, p870 * 610);
    v1255.closePath();
    f84(v1255, p872[0]);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 52, p870 * 135);
    v1255.bezierCurveTo(p870 * 61.5, p870 * 142, p870 * 61.5, p870 * 142, p870 * 71, p870 * 149);
    v1255.bezierCurveTo(p870 * 69.5, p870 * 166, p870 * 69.5, p870 * 166, p870 * 68, p870 * 183);
    v1255.bezierCurveTo(p870 * 60.5, p870 * 187.5, p870 * 60.5, p870 * 187.5, p870 * 53, p870 * 192);
    v1255.bezierCurveTo(p870 * 45, p870 * 187.5, p870 * 45, p870 * 187.5, p870 * 37, p870 * 183);
    v1255.bezierCurveTo(p870 * 35.5, p870 * 167, p870 * 35.5, p870 * 167, p870 * 34, p870 * 151);
    v1255.closePath();
    f84(v1255, p872[0]);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 64, p870 * 150);
    v1255.bezierCurveTo(p870 * 63, p870 * 164, p870 * 63, p870 * 164, p870 * 62, p870 * 178);
    v1255.bezierCurveTo(p870 * 58, p870 * 181, p870 * 58, p870 * 181, p870 * 54, p870 * 184);
    v1255.bezierCurveTo(p870 * 48.5, p870 * 181.5, p870 * 48.5, p870 * 181.5, p870 * 43, p870 * 179);
    v1255.bezierCurveTo(p870 * 42, p870 * 164.5, p870 * 42, p870 * 164.5, p870 * 41, p870 * 150);
    v1255.bezierCurveTo(p870 * 46, p870 * 152.5, p870 * 46, p870 * 152.5, p870 * 51, p870 * 155);
    v1255.closePath();
    f84(v1255, p872[0]);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 52, p870 * 39);
    v1255.bezierCurveTo(p870 * 65.5, p870 * 82, p870 * 65.5, p870 * 82, p870 * 79, p870 * 125);
    v1255.bezierCurveTo(p870 * 66, p870 * 137.5, p870 * 66, p870 * 137.5, p870 * 53, p870 * 150);
    v1255.bezierCurveTo(p870 * 39, p870 * 138, p870 * 39, p870 * 138, p870 * 25, p870 * 126);
    v1255.closePath();
    f84(v1255, p872[0]);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 52, p870 * 64);
    v1255.bezierCurveTo(p870 * 60, p870 * 92.5, p870 * 60, p870 * 92.5, p870 * 68, p870 * 121);
    v1255.bezierCurveTo(p870 * 61, p870 * 127.5, p870 * 61, p870 * 127.5, p870 * 54, p870 * 134);
    v1255.bezierCurveTo(p870 * 46.5, p870 * 127.5, p870 * 46.5, p870 * 127.5, p870 * 39, p870 * 121);
    v1255.closePath();
    f84(v1255, p872[0]);
    v1255.translate(p870 * -20, p870 * -20);
    v1255.globalAlpha = 1;
    v1255.save();
    v1255.translate(p870 * 52.5, p870 * 395);
    v1255.rotate(0);
    f83(v1255, p870 * -11.5, p870 * -226, p870 * 23, p870 * 452, p870 * 10);
    v1255.restore();
    f84(v1255, p872[1], p872[2], p870 * 8);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 35, p870 * 588);
    v1255.bezierCurveTo(p870 * 47, p870 * 596, p870 * 61, p870 * 594, p870 * 69, p870 * 588);
    v1255.bezierCurveTo(p870 * 79, p870 * 615, p870 * 78, p870 * 632, p870 * 59, p870 * 643);
    v1255.bezierCurveTo(p870 * 41, p870 * 650, p870 * 27, p870 * 632, p870 * 30, p870 * 610);
    v1255.closePath();
    f84(v1255, p872[3], p872[4], p870 * 8);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 52, p870 * 135);
    v1255.bezierCurveTo(p870 * 61.5, p870 * 142, p870 * 61.5, p870 * 142, p870 * 71, p870 * 149);
    v1255.bezierCurveTo(p870 * 69.5, p870 * 166, p870 * 69.5, p870 * 166, p870 * 68, p870 * 183);
    v1255.bezierCurveTo(p870 * 60.5, p870 * 187.5, p870 * 60.5, p870 * 187.5, p870 * 53, p870 * 192);
    v1255.bezierCurveTo(p870 * 45, p870 * 187.5, p870 * 45, p870 * 187.5, p870 * 37, p870 * 183);
    v1255.bezierCurveTo(p870 * 35.5, p870 * 167, p870 * 35.5, p870 * 167, p870 * 34, p870 * 151);
    v1255.closePath();
    f84(v1255, p872[3], p872[4], p870 * 8);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 64, p870 * 150);
    v1255.bezierCurveTo(p870 * 63, p870 * 164, p870 * 63, p870 * 164, p870 * 62, p870 * 178);
    v1255.bezierCurveTo(p870 * 58, p870 * 181, p870 * 58, p870 * 181, p870 * 54, p870 * 184);
    v1255.bezierCurveTo(p870 * 48.5, p870 * 181.5, p870 * 48.5, p870 * 181.5, p870 * 43, p870 * 179);
    v1255.bezierCurveTo(p870 * 42, p870 * 164.5, p870 * 42, p870 * 164.5, p870 * 41, p870 * 150);
    v1255.bezierCurveTo(p870 * 46, p870 * 152.5, p870 * 46, p870 * 152.5, p870 * 51, p870 * 155);
    v1255.closePath();
    f84(v1255, p872[5]);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 52, p870 * 39);
    v1255.bezierCurveTo(p870 * 65.5, p870 * 82, p870 * 65.5, p870 * 82, p870 * 79, p870 * 125);
    v1255.bezierCurveTo(p870 * 66, p870 * 137.5, p870 * 66, p870 * 137.5, p870 * 53, p870 * 150);
    v1255.bezierCurveTo(p870 * 39, p870 * 138, p870 * 39, p870 * 138, p870 * 25, p870 * 126);
    v1255.closePath();
    f84(v1255, p872[6], p872[7], p870 * 8);
    v1255.beginPath();
    v1255.lineCap = "round";
    v1255.lineJoin = "round";
    v1255.moveTo(p870 * 52, p870 * 64);
    v1255.bezierCurveTo(p870 * 60, p870 * 92.5, p870 * 60, p870 * 92.5, p870 * 68, p870 * 121);
    v1255.bezierCurveTo(p870 * 61, p870 * 127.5, p870 * 61, p870 * 127.5, p870 * 54, p870 * 134);
    v1255.bezierCurveTo(p870 * 46.5, p870 * 127.5, p870 * 46.5, p870 * 127.5, p870 * 39, p870 * 121);
    v1255.closePath();
    f84(v1255, p872[8]);
    return v1254;
  }
  function f193(p873, p874, p875) {
    var v1256 = document.createElement("canvas");
    var v1257 = v1256.getContext("2d");
    v1256.width = p873 * 100;
    v1256.height = p873 * 648;
    v1257.translate(p873 * 20, p873 * 20);
    v1257.globalAlpha = p874 ? 0.5 : 1;
    v1257.save();
    v1257.translate(p873 * 50.5, p873 * 349.5);
    f83(v1257, p873 * -13.5, p873 * -249.5, p873 * 27, p873 * 499, p873 * 10);
    v1257.restore();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 36, p873 * 538);
    v1257.bezierCurveTo(p873 * 49.5, p873 * 538, p873 * 49.5, p873 * 538, p873 * 63, p873 * 538);
    v1257.bezierCurveTo(p873 * 63.5, p873 * 568, p873 * 63.5, p873 * 568, p873 * 64, p873 * 598);
    v1257.bezierCurveTo(p873 * 50, p873 * 598, p873 * 50, p873 * 598, p873 * 36, p873 * 598);
    v1257.bezierCurveTo(p873 * 36, p873 * 568.5, p873 * 36, p873 * 568.5, p873 * 36, p873 * 539);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 36, p873 * 554);
    v1257.bezierCurveTo(p873 * 45, p873 * 561, p873 * 56, p873 * 558, p873 * 63, p873 * 554);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 32, p873 * 569);
    v1257.bezierCurveTo(p873 * 44, p873 * 576, p873 * 58, p873 * 574, p873 * 68, p873 * 569);
    v1257.bezierCurveTo(p873 * 68, p873 * 584, p873 * 68, p873 * 584, p873 * 68, p873 * 599);
    v1257.bezierCurveTo(p873 * 68, p873 * 608, p873 * 65, p873 * 618, p873 * 49, p873 * 617);
    v1257.bezierCurveTo(p873 * 34, p873 * 617, p873 * 32, p873 * 610, p873 * 32, p873 * 598);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 41, p873 * 581);
    v1257.bezierCurveTo(p873 * 48, p873 * 584, p873 * 55, p873 * 583, p873 * 60, p873 * 581);
    v1257.bezierCurveTo(p873 * 60, p873 * 589.5, p873 * 60, p873 * 589.5, p873 * 60, p873 * 598);
    v1257.bezierCurveTo(p873 * 60, p873 * 604, p873 * 59, p873 * 609, p873 * 48, p873 * 608);
    v1257.bezierCurveTo(p873 * 40, p873 * 607, p873 * 40, p873 * 606, p873 * 41, p873 * 581);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 31, p873 * 106);
    v1257.bezierCurveTo(p873 * 31, p873 * 124.5, p873 * 31, p873 * 124.5, p873 * 31, p873 * 143);
    v1257.bezierCurveTo(p873 * 31, p873 * 163, p873 * 38, p873 * 169, p873 * 48, p873 * 168);
    v1257.bezierCurveTo(p873 * 57, p873 * 168, p873 * 67, p873 * 165, p873 * 67, p873 * 148);
    v1257.bezierCurveTo(p873 * 67, p873 * 123.5, p873 * 67, p873 * 123.5, p873 * 67, p873 * 99);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 49, p873 * 27);
    v1257.bezierCurveTo(p873 * 64, p873 * 62.5, p873 * 64, p873 * 62.5, p873 * 79, p873 * 98);
    v1257.bezierCurveTo(p873 * 74, p873 * 113, p873 * 63, p873 * 121, p873 * 50, p873 * 122);
    v1257.bezierCurveTo(p873 * 35, p873 * 123, p873 * 22, p873 * 109, p873 * 20, p873 * 98);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 49, p873 * 43);
    v1257.bezierCurveTo(p873 * 61, p873 * 70, p873 * 61, p873 * 70, p873 * 73, p873 * 97);
    v1257.bezierCurveTo(p873 * 66, p873 * 116, p873 * 43, p873 * 122, p873 * 26, p873 * 99);
    v1257.closePath();
    f84(v1257, p875[0]);
    v1257.translate(p873 * -20, p873 * -20);
    v1257.globalAlpha = 1;
    v1257.save();
    v1257.translate(p873 * 50.5, p873 * 349.5);
    f83(v1257, p873 * -13.5, p873 * -249.5, p873 * 27, p873 * 499, p873 * 10);
    v1257.restore();
    f84(v1257, p875[1], p875[2], p873 * 8);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 36, p873 * 538);
    v1257.bezierCurveTo(p873 * 49.5, p873 * 538, p873 * 49.5, p873 * 538, p873 * 63, p873 * 538);
    v1257.bezierCurveTo(p873 * 63.5, p873 * 568, p873 * 63.5, p873 * 568, p873 * 64, p873 * 598);
    v1257.bezierCurveTo(p873 * 50, p873 * 598, p873 * 50, p873 * 598, p873 * 36, p873 * 598);
    v1257.bezierCurveTo(p873 * 36, p873 * 568.5, p873 * 36, p873 * 568.5, p873 * 36, p873 * 539);
    v1257.closePath();
    f84(v1257, p875[3], p875[4], p873 * 8);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 36, p873 * 554);
    v1257.bezierCurveTo(p873 * 45, p873 * 561, p873 * 56, p873 * 558, p873 * 63, p873 * 554);
    v1257.closePath();
    f84(v1257, vVVVUndefined2022, p875[4], p873 * 8);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 32, p873 * 569);
    v1257.bezierCurveTo(p873 * 44, p873 * 576, p873 * 58, p873 * 574, p873 * 68, p873 * 569);
    v1257.bezierCurveTo(p873 * 68, p873 * 584, p873 * 68, p873 * 584, p873 * 68, p873 * 599);
    v1257.bezierCurveTo(p873 * 68, p873 * 608, p873 * 65, p873 * 618, p873 * 49, p873 * 617);
    v1257.bezierCurveTo(p873 * 34, p873 * 617, p873 * 32, p873 * 610, p873 * 32, p873 * 598);
    v1257.closePath();
    f84(v1257, p875[5], p875[6], p873 * 8);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 41, p873 * 581);
    v1257.bezierCurveTo(p873 * 48, p873 * 584, p873 * 55, p873 * 583, p873 * 60, p873 * 581);
    v1257.bezierCurveTo(p873 * 60, p873 * 589.5, p873 * 60, p873 * 589.5, p873 * 60, p873 * 598);
    v1257.bezierCurveTo(p873 * 60, p873 * 604, p873 * 59, p873 * 609, p873 * 48, p873 * 608);
    v1257.bezierCurveTo(p873 * 40, p873 * 607, p873 * 40, p873 * 606, p873 * 41, p873 * 581);
    v1257.closePath();
    f84(v1257, p875[7]);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 31, p873 * 106);
    v1257.bezierCurveTo(p873 * 31, p873 * 124.5, p873 * 31, p873 * 124.5, p873 * 31, p873 * 143);
    v1257.bezierCurveTo(p873 * 31, p873 * 163, p873 * 38, p873 * 169, p873 * 48, p873 * 168);
    v1257.bezierCurveTo(p873 * 57, p873 * 168, p873 * 67, p873 * 165, p873 * 67, p873 * 148);
    v1257.bezierCurveTo(p873 * 67, p873 * 123.5, p873 * 67, p873 * 123.5, p873 * 67, p873 * 99);
    v1257.closePath();
    f84(v1257, p875[5], p875[6], p873 * 8);
    v1257.save();
    v1257.translate(p873 * -46, p873 * -50);
    v1257.scale(2, 2);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 51, p873 * 80);
    v1257.bezierCurveTo(p873 * 51, p873 * 89.5, p873 * 51, p873 * 89.5, p873 * 51, p873 * 99);
    v1257.bezierCurveTo(p873 * 49, p873 * 103, p873 * 46, p873 * 105, p873 * 44, p873 * 99);
    v1257.bezierCurveTo(p873 * 44, p873 * 88.5, p873 * 44, p873 * 88.5, p873 * 44, p873 * 78);
    v1257.closePath();
    f84(v1257, p875[8]);
    v1257.restore();
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 49, p873 * 27);
    v1257.bezierCurveTo(p873 * 64, p873 * 62.5, p873 * 64, p873 * 62.5, p873 * 79, p873 * 98);
    v1257.bezierCurveTo(p873 * 74, p873 * 113, p873 * 63, p873 * 121, p873 * 50, p873 * 122);
    v1257.bezierCurveTo(p873 * 35, p873 * 123, p873 * 22, p873 * 109, p873 * 20, p873 * 98);
    v1257.closePath();
    f84(v1257, p875[8], p875[9], p873 * 8);
    v1257.scale(2, 2);
    v1257.translate(p873 * -23, p873 * -20);
    v1257.beginPath();
    v1257.lineCap = "round";
    v1257.lineJoin = "round";
    v1257.moveTo(p873 * 57, p873 * 69);
    v1257.bezierCurveTo(p873 * 50, p873 * 76, p873 * 43, p873 * 75, p873 * 38, p873 * 69);
    v1257.bezierCurveTo(p873 * 43, p873 * 57, p873 * 43, p873 * 57, p873 * 48, p873 * 45);
    v1257.closePath();
    f84(v1257, p875[10]);
    return v1256;
  }
  function f194(p876, p877, p878) {
    var v1258 = document.createElement("canvas");
    var v1259 = v1258.getContext("2d");
    v1258.width = p876 * 200;
    v1258.height = p876 * 200;
    v1259.save();
    v1259.translate(p876 * 112, p876 * 158);
    f83(v1259, p876 * -86.5, p876 * -86, p876 * 150, p876 * 35, p876 * 20);
    v1259.restore();
    f84(v1259, p878[0]);
    v1259.save();
    v1259.translate(p876 * 170, p876 * 100);
    f83(v1259, p876 * -86.5, p876 * -86, p876 * 35, p876 * 150, p876 * 20);
    v1259.restore();
    f84(v1259, p878[0]);
    return v1258;
  }
  function f195(p879, p880, p881) {
    var v1260 = document.createElement("canvas");
    var v1261 = v1260.getContext("2d");
    v1260.width = p879 * 175;
    v1260.height = p879 * 169;
    v1261.beginPath();
    v1261.lineCap = "round";
    v1261.lineJoin = "round";
    v1261.moveTo(p879 * 17, p879 * 112);
    v1261.bezierCurveTo(p879 * 14, p879 * 146, p879 * 27, p879 * 152, p879 * 37, p879 * 149);
    v1261.bezierCurveTo(p879 * 78, p879 * 155, p879 * 128, p879 * 150, p879 * 146, p879 * 150);
    v1261.bezierCurveTo(p879 * 158, p879 * 144, p879 * 158, p879 * 121, p879 * 153, p879 * 114);
    v1261.closePath();
    f84(v1261, p881[8], p881[9], p879 * 5);
    v1261.beginPath();
    v1261.lineCap = "round";
    v1261.lineJoin = "round";
    v1261.moveTo(p879 * 127, p879 * 111);
    v1261.bezierCurveTo(p879 * 133, p879 * 136, p879 * 115, p879 * 149, p879 * 88, p879 * 150);
    v1261.bezierCurveTo(p879 * 119.5, p879 * 151, p879 * 119.5, p879 * 151, p879 * 151, p879 * 152);
    v1261.bezierCurveTo(p879 * 159, p879 * 136, p879 * 155, p879 * 126, p879 * 154, p879 * 113);
    v1261.closePath();
    f84(v1261, p881[9]);
    v1261.globalAlpha = 0.5;
    v1261.translate(0, p879 * 3);
    v1261.beginPath();
    v1261.lineCap = "round";
    v1261.lineJoin = "round";
    v1261.moveTo(p879 * 15, p879 * 117);
    v1261.bezierCurveTo(p879 * 34, p879 * 109, p879 * 61, p879 * 106, p879 * 94, p879 * 109);
    v1261.bezierCurveTo(p879 * 126, p879 * 110, p879 * 142, p879 * 113, p879 * 154, p879 * 119);
    v1261.bezierCurveTo(p879 * 154, p879 * 123, p879 * 154, p879 * 123, p879 * 154, p879 * 127);
    v1261.bezierCurveTo(p879 * 127, p879 * 118, p879 * 15, p879 * 122, p879 * 18, p879 * 129);
    v1261.closePath();
    f84(v1261, p881[0]);
    v1261.globalAlpha = 1;
    v1261.translate(0, p879 * -3);
    v1261.beginPath();
    v1261.lineCap = "round";
    v1261.lineJoin = "round";
    v1261.moveTo(p879 * 14, p879 * 127);
    v1261.bezierCurveTo(p879 * 13, p879 * 117, p879 * 12, p879 * 109, p879 * 15, p879 * 103);
    v1261.bezierCurveTo(p879 * 16, p879 * 95, p879 * 21, p879 * 92, p879 * 60, p879 * 93);
    v1261.bezierCurveTo(p879 * 91, p879 * 93, p879 * 118, p879 * 93, p879 * 143, p879 * 96);
    v1261.bezierCurveTo(p879 * 151, p879 * 96, p879 * 155, p879 * 99, p879 * 156, p879 * 112);
    v1261.bezierCurveTo(p879 * 157, p879 * 124, p879 * 157, p879 * 127, p879 * 156, p879 * 128);
    v1261.bezierCurveTo(p879 * 138, p879 * 112, p879 * 100, p879 * 118, p879 * 84, p879 * 118);
    v1261.bezierCurveTo(p879 * 28, p879 * 118, p879 * 20, p879 * 120, p879 * 16, p879 * 127);
    v1261.closePath();
    f84(v1261, p881[4], p881[5], p879 * 5);
    v1261.save();
    v1261.translate(p879 * 27.5, p879 * 138.5);
    f83(v1261, p879 * -13.5, p879 * -14.5, p879 * 27, p879 * 29, p879 * 4);
    v1261.restore();
    f84(v1261, p881[1], p881[2], p879 * 5);
    v1261.save();
    v1261.translate(p879 * 143.5, p879 * 137);
    f83(v1261, p879 * -13.5, p879 * -14, p879 * 27, p879 * 28, p879 * 4);
    v1261.restore();
    f84(v1261, p881[1], p881[2], p879 * 5);
    return v1260;
  }
  const v1262 = 1;
  const v1263 = 5;
  function f196(p882, p883, p884) {
    var v1264 = document.createElement("canvas");
    var v1265 = v1264.getContext("2d");
    v1264.width = p882 * 165;
    v1264.height = p882 * 123;
    v1265.save();
    v1265.translate(p882 * 81, p882 * 65);
    f83(v1265, p882 * -78, p882 * -54.5, p882 * 156, p882 * 109, p882 * 20);
    v1265.restore();
    f84(v1265, p884[0]);
    v1265.save();
    v1265.translate(p882 * 81, p882 * 58);
    f83(v1265, p882 * -78, p882 * -54.5, p882 * 156, p882 * 109, p882 * 20);
    v1265.restore();
    f84(v1265, p884[1], p884[2], 4);
    v1265.save();
    v1265.translate(p882 * 81, p882 * 58);
    f83(v1265, p882 * -69, p882 * -47, p882 * 138, p882 * 93, p882 * 15);
    v1265.restore();
    f84(v1265, p884[3], p884[4], 4);
    v1265.save();
    v1265.translate(p882 * 79, p882 * 54);
    f83(v1265, p882 * -34, p882 * -40, p882 * 68, p882 * 88, p882 * 13);
    v1265.restore();
    f84(v1265, vVVVUndefined2022, p884[5], 4);
    v1265.beginPath();
    v1265.lineCap = "round";
    v1265.lineJoin = "round";
    v1265.moveTo(p882 * 44, p882 * 13);
    v1265.bezierCurveTo(p882 * 43.5, p882 * 55, p882 * 43.5, p882 * 55, p882 * 43, p882 * 101);
    v1265.closePath();
    f84(v1265, vVVUndefined117, p884[6], 4);
    v1265.beginPath();
    v1265.lineCap = "round";
    v1265.lineJoin = "round";
    v1265.moveTo(p882 * 115, p882 * 13);
    v1265.bezierCurveTo(p882 * 115, p882 * 56, p882 * 115, p882 * 56, p882 * 115, p882 * 101);
    v1265.closePath();
    f84(v1265, vVUndefined22, p884[6], 4);
    v1265.beginPath();
    v1265.lineCap = "round";
    v1265.lineJoin = "round";
    v1265.moveTo(p882 * 35, p882 * 6);
    v1265.bezierCurveTo(p882 * 35, p882 * 56, p882 * 36, p882 * 109, p882 * 35, p882 * 110);
    v1265.closePath();
    f84(v1265, vVUndefined21, p884[7], 4);
    v1265.beginPath();
    v1265.lineCap = "round";
    v1265.lineJoin = "round";
    v1265.moveTo(p882 * 123, p882 * 6);
    v1265.bezierCurveTo(p882 * 123, p882 * 56, p882 * 123, p882 * 56, p882 * 123, p882 * 110);
    v1265.closePath();
    f84(v1265, vVVVUndefined21, p884[7], 4);
    v1265.save();
    v1265.translate(p882 * 79, p882 * 113);
    f83(v1265, p882 * -18, p882 * -2, p882 * 36, p882 * 4, p882 * 20);
    v1265.restore();
    f84(v1265, vVVUndefined212, p884[8], 4);
    v1265.save();
    v1265.translate(p882 * 75, p882 * 118);
    f83(v1265, p882 * -6, p882 * -2.5, p882 * 20, p882 * 5, p882 * 20);
    v1265.restore();
    f84(v1265, p884[8]);
    return v1264;
  }
  function f197(p885, p886, p887) {
    var v1266 = document.createElement("canvas");
    var v1267 = v1266.getContext("2d");
    v1266.width = p885 * 170;
    v1266.height = p885 * 170;
    v1267.globalAlpha = p886 ? 0.5 : 1;
    v1267.translate(0, p885 * 3);
    v1267.save();
    v1267.translate(p885 * 85, p885 * 95);
    v1267.rotate(1.4);
    f87(v1267, 7, p885 * 60, p885 * 10);
    v1267.restore();
    f84(v1267, p887[0]);
    v1267.globalAlpha = 1;
    v1267.translate(p885 * 85, p885 * 82);
    for (var v1268 = 0; v1268 < 10; v1268++) {
      v1267.rotate(Math.PI / 5);
      v1267.save();
      v1267.translate(p885 * 65, 0);
      f87(v1267, 3, p885 * 21, p885 * 4);
      f84(v1267, p887[1], p887[2], p885 * 4);
      v1267.restore();
    }
    v1267.save();
    v1267.translate(p885 * 0, p885 * 0);
    v1267.rotate(1);
    f87(v1267, 8, p885 * 60, p885 * 10);
    f84(v1267, p887[3], p887[4], p885 * 4);
    v1267.rotate(0.56);
    f87(v1267, 8, p885 * 40, p885 * 10);
    f84(v1267, p887[5], p887[6], p885 * 4);
    v1267.rotate(0.28);
    f87(v1267, 8, p885 * 28, p885 * 8);
    f84(v1267, p887[7]);
    v1267.restore();
    return v1266;
  }
  function f198(p888, p889, p890) {
    var v1269 = document.createElement("canvas");
    var v1270 = v1269.getContext("2d");
    v1269.width = p888 * 151;
    v1269.height = p888 * 80;
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p888 * 133, p888 * 54);
    v1270.bezierCurveTo(p888 * 136, p888 * 18, p888 * 129, p888 * 18, p888 * 114, p888 * 13);
    v1270.bezierCurveTo(p888 * 51, p888 * 0, p888 * 36, p888 * 16, p888 * 34, p888 * 16);
    v1270.bezierCurveTo(p888 * 8, p888 * 28, p888 * 22, p888 * 56, p888 * 21, p888 * 57);
    v1270.closePath();
    f84(v1270, p890[2], p890[3], 4);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p888 * 130, p888 * 40);
    v1270.bezierCurveTo(p888 * 132, p888 * 35, p888 * 132, p888 * 30, p888 * 132, p888 * 29);
    v1270.bezierCurveTo(p888 * 145, p888 * 38, p888 * 144, p888 * 43, p888 * 137, p888 * 54);
    v1270.closePath();
    f84(v1270, p890[0], p890[1], 4);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p888 * 20, p888 * 33);
    v1270.bezierCurveTo(p888 * 24, p888 * 44, p888 * 215, p888 * 39, p888 * 23, p888 * 44);
    v1270.bezierCurveTo(p888 * 19, p888 * 49, p888 * 19, p888 * 49, p888 * 15, p888 * 54);
    v1270.bezierCurveTo(p888 * 4, p888 * 43, p888 * 10, p888 * 35, p888 * 20, p888 * 32);
    v1270.closePath();
    f84(v1270, p890[0], p890[1], 4);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p888 * 18, p888 * 52);
    v1270.bezierCurveTo(p888 * 24, p888 * 31, p888 * 34, p888 * 25, p888 * 75, p888 * 23);
    v1270.bezierCurveTo(p888 * 130, p888 * 24, p888 * 129, p888 * 32, p888 * 134, p888 * 51);
    v1270.bezierCurveTo(p888 * 138, p888 * 70, p888 * 126, p888 * 72, p888 * 90, p888 * 73);
    v1270.bezierCurveTo(p888 * 18, p888 * 72, p888 * 15, p888 * 68, p888 * 18, p888 * 54);
    v1270.closePath();
    f84(v1270, p890[0], p890[1], 4);
    return v1269;
  }
  function f199(p891, p892, p893) {
    var v1271 = document.createElement("canvas");
    var v1272 = v1271.getContext("2d");
    v1271.width = p891 * 170;
    v1271.height = p891 * 170;
    v1272.translate(0, p891 * 3);
    v1272.globalAlpha = p892 ? 0.5 : 1;
    v1272.save();
    v1272.translate(p891 * 85, p891 * 95);
    v1272.rotate(1.4);
    f87(v1272, 7, p891 * 60, p891 * 10);
    v1272.restore();
    f84(v1272, p893[0]);
    v1272.globalAlpha = 1;
    v1272.translate(p891 * 85, p891 * 82);
    for (var v1273 = 0; v1273 < 10; v1273++) {
      v1272.rotate(Math.PI / 5);
      v1272.save();
      v1272.translate(p891 * 65, 0);
      f87(v1272, 3, p891 * 21, p891 * 4);
      f84(v1272, p893[1], p893[2], p891 * 4);
      v1272.restore();
    }
    v1272.save();
    v1272.translate(p891 * 0, p891 * 0);
    v1272.rotate(0.2);
    f87(v1272, 9, p891 * 60, p891 * 10);
    f84(v1272, p893[3], p893[4], p891 * 4);
    v1272.rotate(-0.32);
    f87(v1272, 9, p891 * 38, p891 * 10);
    f84(v1272, p893[5], p893[6], p891 * 4);
    v1272.rotate(0.68);
    f87(v1272, 9, p891 * 20, p891 * 8);
    f84(v1272, p893[7], p893[8], p891 * 6);
    v1272.restore();
    return v1271;
  }
  function f200(p894, p895, p896) {
    var v1274 = document.createElement("canvas");
    var v1275 = v1274.getContext("2d");
    var v1276 = p894 * 170;
    var v1277 = p894 * 172;
    var v1278 = v1276 / 2;
    var v1279 = v1277 / 2;
    v1274.width = v1276;
    v1274.height = v1277;
    v1275.translate(v1278, v1279 + p894 * 7);
    v1275.globalAlpha = p895 ? 0.5 : 0;
    f89(v1275, 0, 0, p894 * 60);
    f84(v1275, p896[0]);
    v1275.globalAlpha = 1;
    v1275.translate(0, p894 * -7);
    v1275.save();
    for (var v1280 = 0; v1280 < 10; v1280++) {
      v1275.rotate(Math.PI / 5);
      v1275.save();
      v1275.translate(p894 * 65, 0);
      f87(v1275, 3, p894 * 20, p894 * 4);
      f84(v1275, p896[1], p896[2], p894 * 4);
      v1275.restore();
    }
    v1275.restore();
    f89(v1275, 0, 0, p894 * 60);
    f84(v1275, p896[3], p896[4], p894 * 4);
    f89(v1275, 0, 0, p894 * 40);
    f84(v1275, p896[5]);
    f89(v1275, 0, 0, p894 * 25);
    f84(v1275, p896[6], p896[7], p894 * 8);
    return v1274;
  }
  function f201(p897, p898, p899) {
    var v1281 = document.createElement("canvas");
    var v1282 = v1281.getContext("2d");
    v1281.width = p897 * 92;
    v1281.height = p897 * 108;
    v1282.beginPath();
    v1282.lineCap = "round";
    v1282.lineJoin = "round";
    v1282.moveTo(p897 * 31, p897 * 10);
    v1282.bezierCurveTo(p897 * 37, p897 * 2, p897 * 49, p897 * 0, p897 * 61, p897 * 15);
    v1282.bezierCurveTo(p897 * 81, p897 * 31, p897 * 78, p897 * 25, p897 * 79, p897 * 37);
    v1282.bezierCurveTo(p897 * 76, p897 * 44, p897 * 81, p897 * 56, p897 * 85, p897 * 63);
    v1282.bezierCurveTo(p897 * 91, p897 * 71, p897 * 90, p897 * 78, p897 * 83, p897 * 84);
    v1282.bezierCurveTo(p897 * 60, p897 * 98, p897 * 67, p897 * 95, p897 * 57, p897 * 102);
    v1282.bezierCurveTo(p897 * 47, p897 * 106, p897 * 43, p897 * 106, p897 * 31, p897 * 98);
    v1282.bezierCurveTo(p897 * 22, p897 * 91, p897 * 17, p897 * 89, p897 * 7, p897 * 84);
    v1282.bezierCurveTo(p897 * 1, p897 * 77, p897 * 4, p897 * 73, p897 * 7, p897 * 60);
    v1282.bezierCurveTo(p897 * 11, p897 * 50, p897 * 5, p897 * 32, p897 * 15, p897 * 27);
    v1282.bezierCurveTo(p897 * 26, p897 * 18, p897 * 26, p897 * 24, p897 * 31, p897 * 10);
    v1282.closePath();
    f84(v1282, p899[0], p899[1], 4);
    return v1281;
  }
  function f202(p900, p901, p902) {
    var v1283 = document.createElement("canvas");
    var v1284 = v1283.getContext("2d");
    v1283.width = p900 * 170;
    v1283.height = p900 * 170;
    v1284.globalAlpha = p901 ? 0.5 : 1;
    v1284.translate(0, p900 * 5);
    v1284.save();
    v1284.translate(p900 * 85, p900 * 88);
    v1284.rotate(1.4);
    f87(v1284, 7, p900 * 60, p900 * 10);
    v1284.restore();
    f84(v1284, p902[0]);
    v1284.globalAlpha = 1;
    v1284.translate(p900 * 85, p900 * 80);
    for (var v1285 = 0; v1285 < 10; v1285++) {
      v1284.rotate(Math.PI / 5);
      v1284.save();
      v1284.translate(p900 * 65, 0);
      f87(v1284, 3, p900 * 21, p900 * 4);
      f84(v1284, p902[1], p902[2], p900 * 4);
      v1284.restore();
    }
    v1284.save();
    v1284.translate(p900 * 0, p900 * 0);
    v1284.rotate(1.4);
    f87(v1284, 7, p900 * 60, p900 * 10);
    f84(v1284, p902[3], p902[4], p900 * 4);
    v1284.rotate(0.64);
    f87(v1284, 7, p900 * 40, p900 * 10);
    f84(v1284, p902[5], p902[6], p900 * 4);
    v1284.rotate(0.12);
    f87(v1284, 7, p900 * 23, p900 * 5);
    v1284.restore();
    f84(v1284, p902[7]);
    return v1283;
  }
  function f203(p903, p904, p905) {
    var v1286 = document.createElement("canvas");
    var v1287 = v1286.getContext("2d");
    v1286.width = p903 * 138;
    v1286.height = p903 * 133;
    v1287.globalAlpha = p904 ? 0.3 : 1;
    v1287.translate(0, p903 * 5);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 26, p903 * 79.640625);
    v1287.bezierCurveTo(p903 * 13, p903 * 84.640625, p903 * 9, p903 * 86.640625, p903 * 7, p903 * 78.640625);
    v1287.bezierCurveTo(p903 * 6, p903 * 69.640625, p903 * 15, p903 * 67.640625, p903 * 31, p903 * 62.640625);
    v1287.bezierCurveTo(p903 * 63, p903 * 55.640625, p903 * 85, p903 * 57.640625, p903 * 104, p903 * 63.640625);
    v1287.bezierCurveTo(p903 * 131, p903 * 69.640625, p903 * 132, p903 * 71.640625, p903 * 131, p903 * 78.640625);
    v1287.bezierCurveTo(p903 * 131, p903 * 91.640625, p903 * 112, p903 * 80.640625, p903 * 91, p903 * 75.640625);
    v1287.bezierCurveTo(p903 * 51, p903 * 70.640625, p903 * 45, p903 * 74.640625, p903 * 28, p903 * 78.640625);
    v1287.closePath();
    f84(v1287, p905[0]);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 8, p903 * 82.640625);
    v1287.bezierCurveTo(p903 * 40, p903 * 107.640625, p903 * 53, p903 * 104.640625, p903 * 67, p903 * 106.640625);
    v1287.bezierCurveTo(p903 * 101, p903 * 103.640625, p903 * 117, p903 * 93.640625, p903 * 127, p903 * 84.640625);
    v1287.bezierCurveTo(p903 * 135, p903 * 95.640625, p903 * 131, p903 * 107.640625, p903 * 110, p903 * 118.640625);
    v1287.bezierCurveTo(p903 * 78, p903 * 129.640625, p903 * 67, p903 * 130.640625, p903 * 27, p903 * 119.640625);
    v1287.bezierCurveTo(p903 * 0, p903 * 105.640625, p903 * 8, p903 * 83.640625, p903 * 10, p903 * 84.640625);
    v1287.closePath();
    f84(v1287, p905[0]);
    v1287.globalAlpha = 1;
    v1287.translate(0, p903 * -5);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 8, p903 * 73.640625);
    v1287.bezierCurveTo(p903 * 7, p903 * 23.640625, p903 * 33, p903 * 19.640625, p903 * 71, p903 * 17.640625);
    v1287.bezierCurveTo(p903 * 129, p903 * 19.640625, p903 * 130, p903 * 45.640625, p903 * 130, p903 * 76.640625);
    v1287.bezierCurveTo(p903 * 90, p903 * 63.640625, p903 * 85, p903 * 63.640625, p903 * 73, p903 * 63.640625);
    v1287.bezierCurveTo(p903 * 38, p903 * 63.640625, p903 * 33, p903 * 66.640625, p903 * 8, p903 * 73.640625);
    v1287.closePath();
    f84(v1287, p905[1], p905[2], p903 * 4);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 72, p903 * 28.640625);
    v1287.bezierCurveTo(p903 * 51, p903 * 25.640625, p903 * 56, p903 * 7.640625, p903 * 70, p903 * 5.640625);
    v1287.bezierCurveTo(p903 * 94, p903 * 7.640625, p903 * 87, p903 * 29.640625, p903 * 72, p903 * 28.640625);
    v1287.closePath();
    f84(v1287, p905[3], p905[2], p903 * 4);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 51, p903 * 26.640625);
    v1287.bezierCurveTo(p903 * 42, p903 * 29.640625, p903 * 43, p903 * 31.640625, p903 * 42, p903 * 37.640625);
    f84(v1287, vVVVUndefined2022, p905[2], p903 * 4);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 90, p903 * 26.640625);
    v1287.bezierCurveTo(p903 * 100, p903 * 28.640625, p903 * 98, p903 * 34.640625, p903 * 99, p903 * 38.640625);
    f84(v1287, undefined, p905[2], p903 * 4);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 26, p903 * 79.640625);
    v1287.bezierCurveTo(p903 * 13, p903 * 84.640625, p903 * 9, p903 * 86.640625, p903 * 7, p903 * 78.640625);
    v1287.bezierCurveTo(p903 * 6, p903 * 69.640625, p903 * 15, p903 * 67.640625, p903 * 31, p903 * 62.640625);
    v1287.bezierCurveTo(p903 * 63, p903 * 55.640625, p903 * 85, p903 * 57.640625, p903 * 104, p903 * 63.640625);
    v1287.bezierCurveTo(p903 * 131, p903 * 69.640625, p903 * 132, p903 * 71.640625, p903 * 131, p903 * 78.640625);
    v1287.bezierCurveTo(p903 * 131, p903 * 91.640625, p903 * 112, p903 * 80.640625, p903 * 91, p903 * 75.640625);
    v1287.bezierCurveTo(p903 * 51, p903 * 70.640625, p903 * 45, p903 * 74.640625, p903 * 28, p903 * 78.640625);
    v1287.closePath();
    f84(v1287, p905[3], p905[4], p903 * 4);
    v1287.beginPath();
    v1287.lineCap = "round";
    v1287.lineJoin = "round";
    v1287.moveTo(p903 * 8, p903 * 82.640625);
    v1287.bezierCurveTo(p903 * 40, p903 * 107.640625, p903 * 53, p903 * 104.640625, p903 * 67, p903 * 106.640625);
    v1287.bezierCurveTo(p903 * 101, p903 * 103.640625, p903 * 117, p903 * 93.640625, p903 * 127, p903 * 84.640625);
    v1287.bezierCurveTo(p903 * 135, p903 * 95.640625, p903 * 131, p903 * 107.640625, p903 * 110, p903 * 118.640625);
    v1287.bezierCurveTo(p903 * 78, p903 * 129.640625, p903 * 67, p903 * 130.640625, p903 * 27, p903 * 119.640625);
    v1287.bezierCurveTo(p903 * 0, p903 * 105.640625, p903 * 8, p903 * 83.640625, p903 * 10, p903 * 84.640625);
    v1287.closePath();
    f84(v1287, p905[3], p905[4], p903 * 4);
    return v1286;
  }
  function f204(p906, p907, p908) {
    var v1288 = document.createElement("canvas");
    var v1289 = v1288.getContext("2d");
    v1288.width = p906 * 69;
    v1288.height = p906 * 120;
    v1289.globalAlpha = p907 ? 0.5 : 1;
    v1289.save();
    v1289.translate(p906 * 30, p906 * 84);
    f83(v1289, p906 * -6, p906 * -66.5, p906 * 8, p906 * 100, p906 * 10);
    v1289.restore();
    f84(v1289, p908[0]);
    v1289.save();
    v1289.translate(p906 * 30, p906 * 45);
    f83(v1289, p906 * -9.5, p906 * -6.5, p906 * 16, p906 * 13, p906 * 10);
    v1289.restore();
    f84(v1289, p908[0]);
    v1289.save();
    v1289.translate(p906 * 30, p906 * 17);
    f83(v1289, p906 * -7.5, p906 * -5.5, p906 * 12, p906 * 11, p906 * 10);
    v1289.restore();
    f84(v1289, p908[0]);
    v1289.save();
    v1289.translate(p906 * 30, p906 * 31);
    f83(v1289, p906 * -26, p906 * -14.5, p906 * 52, p906 * 29, p906 * 5);
    v1289.restore();
    f84(v1289, p908[0]);
    v1289.globalAlpha = 1;
    v1289.save();
    v1289.translate(p906 * 36, p906 * 79.140625);
    f83(v1289, p906 * -6, p906 * -66.5, p906 * 8, p906 * 100, p906 * 10);
    v1289.restore();
    f84(v1289, p908[1], p908[2], p906 * 3);
    v1289.save();
    v1289.translate(p906 * 35, p906 * 40.140625);
    f83(v1289, p906 * -9.5, p906 * -6.5, p906 * 16, p906 * 13, p906 * 10);
    v1289.restore();
    f84(v1289, p908[3], p908[4], p906 * 3);
    v1289.save();
    v1289.translate(p906 * 35, p906 * 12.140625);
    f83(v1289, p906 * -7.5, p906 * -5.5, p906 * 12, p906 * 11, p906 * 10);
    v1289.restore();
    f84(v1289, p908[3], p908[4], p906 * 3);
    v1289.save();
    v1289.translate(p906 * 34.5, p906 * 26.140625);
    f83(v1289, p906 * -26, p906 * -14.5, p906 * 52, p906 * 29, p906 * 5);
    v1289.restore();
    f84(v1289, p908[3], p908[4], p906 * 3);
    return v1288;
  }
  function f205(p909, p910, p911) {
    var v1290 = document.createElement("canvas");
    var v1291 = v1290.getContext("2d");
    v1290.width = p909 * 450;
    v1290.height = p909 * 260;
    v1291.translate(p909 * 10, p909 * 10);
    v1291.globalAlpha = p910 ? 0.5 : 1;
    v1291.translate(p909 * 20, p909 * 20);
    f83(v1291, 0, 0, p909 * 400, p909 * 220, p909 * 30);
    f84(v1291, p911[0]);
    v1291.globalAlpha = 1;
    v1291.translate(p909 * -20, p909 * -20);
    v1291.beginPath();
    v1291.lineCap = "round";
    v1291.lineJoin = "round";
    v1291.moveTo(p909 * 9, p909 * 5);
    v1291.bezierCurveTo(p909 * 381, p909 * 2, p909 * 197, p909 * 4.5, p909 * 385, p909 * 4);
    v1291.bezierCurveTo(p909 * 397, p909 * 4, p909 * 401, p909 * 4, p909 * 399, p909 * 23);
    v1291.bezierCurveTo(p909 * 367, p909 * 27, p909 * 367, p909 * 27, p909 * 335, p909 * 31);
    v1291.bezierCurveTo(p909 * 366.5, p909 * 33.5, p909 * 366.5, p909 * 33.5, p909 * 398, p909 * 36);
    v1291.bezierCurveTo(p909 * 398, p909 * 41.5, p909 * 398, p909 * 41.5, p909 * 398, p909 * 47);
    v1291.bezierCurveTo(p909 * 398, p909 * 56, p909 * 399, p909 * 56, p909 * 386, p909 * 56);
    v1291.bezierCurveTo(p909 * 200.5, p909 * 56.5, p909 * 200.5, p909 * 56.5, p909 * 15, p909 * 57);
    v1291.bezierCurveTo(p909 * 2, p909 * 55, p909 * 4, p909 * 52, p909 * 4, p909 * 43);
    v1291.bezierCurveTo(p909 * 4, p909 * 30.5, p909 * 4, p909 * 30.5, p909 * 4, p909 * 18);
    v1291.bezierCurveTo(p909 * 16, p909 * 18.5, p909 * 16, p909 * 18.5, p909 * 28, p909 * 19);
    v1291.bezierCurveTo(p909 * 18.5, p909 * 12, p909 * 18.5, p909 * 12, p909 * 9, p909 * 5);
    v1291.closePath();
    f84(v1291, p911[2], p911[1], p909 * 12);
    v1291.beginPath();
    v1291.lineCap = "round";
    v1291.lineJoin = "round";
    v1291.moveTo(p909 * 5, p909 * 70);
    v1291.bezierCurveTo(p909 * 5, p909 * 58, p909 * 5, p909 * 55, p909 * 17, p909 * 57);
    v1291.bezierCurveTo(p909 * 203, p909 * 57, p909 * 203, p909 * 57, p909 * 389, p909 * 57);
    v1291.bezierCurveTo(p909 * 400, p909 * 57, p909 * 400, p909 * 59, p909 * 400, p909 * 69);
    v1291.bezierCurveTo(p909 * 400.5, p909 * 83.5, p909 * 400.5, p909 * 83.5, p909 * 401, p909 * 98);
    v1291.bezierCurveTo(p909 * 402, p909 * 108, p909 * 401, p909 * 108, p909 * 388, p909 * 108);
    v1291.bezierCurveTo(p909 * 201.5, p909 * 108, p909 * 201.5, p909 * 108, p909 * 15, p909 * 108);
    v1291.bezierCurveTo(p909 * 1, p909 * 106, p909 * 5, p909 * 106, p909 * 5, p909 * 87);
    v1291.bezierCurveTo(p909 * 33, p909 * 84.5, p909 * 33, p909 * 84.5, p909 * 61, p909 * 82);
    v1291.bezierCurveTo(p909 * 33.5, p909 * 76.5, p909 * 33.5, p909 * 76.5, p909 * 6, p909 * 71);
    v1291.closePath();
    f84(v1291, p911[3], p911[1], p909 * 12);
    v1291.beginPath();
    v1291.lineCap = "round";
    v1291.lineJoin = "round";
    v1291.moveTo(p909 * 19, p909 * 158);
    v1291.bezierCurveTo(p909 * 2, p909 * 159, p909 * 4, p909 * 156, p909 * 5, p909 * 118);
    v1291.bezierCurveTo(p909 * 4, p909 * 110, p909 * 6, p909 * 107, p909 * 26, p909 * 109);
    v1291.bezierCurveTo(p909 * 206.5, p909 * 109, p909 * 206.5, p909 * 109, p909 * 387, p909 * 109);
    v1291.bezierCurveTo(p909 * 400, p909 * 108, p909 * 400, p909 * 108, p909 * 398, p909 * 127);
    v1291.bezierCurveTo(p909 * 384.5, p909 * 130, p909 * 384.5, p909 * 130, p909 * 371, p909 * 133);
    v1291.bezierCurveTo(p909 * 385.5, p909 * 138, p909 * 385.5, p909 * 138, p909 * 400, p909 * 143);
    v1291.bezierCurveTo(p909 * 402, p909 * 156, p909 * 402, p909 * 162, p909 * 385, p909 * 160);
    v1291.closePath();
    f84(v1291, p911[2], p911[1], p909 * 12);
    v1291.beginPath();
    v1291.lineCap = "round";
    v1291.lineJoin = "round";
    v1291.moveTo(p909 * 4, p909 * 183);
    v1291.bezierCurveTo(p909 * 1, p909 * 163, p909 * 4, p909 * 158, p909 * 28, p909 * 161);
    v1291.bezierCurveTo(p909 * 207.5, p909 * 161, p909 * 207.5, p909 * 161, p909 * 387, p909 * 161);
    v1291.bezierCurveTo(p909 * 401, p909 * 159, p909 * 400, p909 * 164, p909 * 400, p909 * 177);
    v1291.bezierCurveTo(p909 * 364.5, p909 * 184, p909 * 364.5, p909 * 184, p909 * 329, p909 * 191);
    v1291.bezierCurveTo(p909 * 364.5, p909 * 192.5, p909 * 364.5, p909 * 192.5, p909 * 400, p909 * 194);
    v1291.bezierCurveTo(p909 * 403, p909 * 209, p909 * 401, p909 * 214, p909 * 385, p909 * 213);
    v1291.bezierCurveTo(p909 * 201.5, p909 * 213, p909 * 201.5, p909 * 213, p909 * 18, p909 * 213);
    v1291.bezierCurveTo(p909 * 3, p909 * 213, p909 * 2, p909 * 213, p909 * 4, p909 * 198);
    v1291.bezierCurveTo(p909 * 12.5, p909 * 193, p909 * 12.5, p909 * 193, p909 * 21, p909 * 188);
    v1291.closePath();
    f84(v1291, p911[3], p911[1], p909 * 12);
    f89(v1291, p909 * 41, p909 * 30, p909 * 14.7648230602334);
    f84(v1291, p911[3], p911[1], p909 * 12);
    f89(v1291, p909 * 369, p909 * 30, p909 * 15.556349186104045);
    f84(v1291, p911[3], p911[1], p909 * 12);
    f89(v1291, p909 * 364, p909 * 190, p909 * 15.620499351813308);
    f84(v1291, p911[3], p911[1], p909 * 12);
    f89(v1291, p909 * 41, p909 * 186, p909 * 15.556349186104045);
    f84(v1291, p911[3], p911[1], p909 * 12);
    return v1290;
  }
  function f206(p912, p913, p914) {
    var v1292 = document.createElement("canvas");
    var v1293 = v1292.getContext("2d");
    v1292.width = p912 * 450;
    v1292.height = p912 * 260;
    v1293.translate(p912 * 10, p912 * 10);
    if (p914 == 1) {
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 9, p912 * 5);
      v1293.bezierCurveTo(p912 * 381, p912 * 2, p912 * 197, p912 * 4.5, p912 * 385, p912 * 4);
      v1293.bezierCurveTo(p912 * 397, p912 * 4, p912 * 401, p912 * 4, p912 * 399, p912 * 23);
      v1293.bezierCurveTo(p912 * 367, p912 * 27, p912 * 367, p912 * 27, p912 * 335, p912 * 31);
      v1293.bezierCurveTo(p912 * 366.5, p912 * 33.5, p912 * 366.5, p912 * 33.5, p912 * 398, p912 * 36);
      v1293.bezierCurveTo(p912 * 398, p912 * 41.5, p912 * 398, p912 * 41.5, p912 * 398, p912 * 47);
      v1293.bezierCurveTo(p912 * 398, p912 * 56, p912 * 399, p912 * 56, p912 * 386, p912 * 56);
      v1293.bezierCurveTo(p912 * 200.5, p912 * 56.5, p912 * 200.5, p912 * 56.5, p912 * 15, p912 * 57);
      v1293.bezierCurveTo(p912 * 2, p912 * 55, p912 * 4, p912 * 52, p912 * 4, p912 * 43);
      v1293.bezierCurveTo(p912 * 4, p912 * 30.5, p912 * 4, p912 * 30.5, p912 * 4, p912 * 18);
      v1293.bezierCurveTo(p912 * 16, p912 * 18.5, p912 * 16, p912 * 18.5, p912 * 28, p912 * 19);
      v1293.bezierCurveTo(p912 * 18.5, p912 * 12, p912 * 18.5, p912 * 12, p912 * 9, p912 * 5);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 5, p912 * 70);
      v1293.bezierCurveTo(p912 * 5, p912 * 58, p912 * 5, p912 * 55, p912 * 17, p912 * 57);
      v1293.bezierCurveTo(p912 * 203, p912 * 57, p912 * 203, p912 * 57, p912 * 389, p912 * 57);
      v1293.bezierCurveTo(p912 * 400, p912 * 57, p912 * 400, p912 * 59, p912 * 400, p912 * 69);
      v1293.bezierCurveTo(p912 * 400.5, p912 * 83.5, p912 * 400.5, p912 * 83.5, p912 * 401, p912 * 98);
      v1293.bezierCurveTo(p912 * 402, p912 * 108, p912 * 401, p912 * 108, p912 * 388, p912 * 108);
      v1293.bezierCurveTo(p912 * 201.5, p912 * 108, p912 * 201.5, p912 * 108, p912 * 15, p912 * 108);
      v1293.bezierCurveTo(p912 * 1, p912 * 106, p912 * 5, p912 * 106, p912 * 5, p912 * 87);
      v1293.bezierCurveTo(p912 * 33, p912 * 84.5, p912 * 33, p912 * 84.5, p912 * 61, p912 * 82);
      v1293.bezierCurveTo(p912 * 33.5, p912 * 76.5, p912 * 33.5, p912 * 76.5, p912 * 6, p912 * 71);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 19, p912 * 158);
      v1293.bezierCurveTo(p912 * 2, p912 * 159, p912 * 4, p912 * 156, p912 * 5, p912 * 118);
      v1293.bezierCurveTo(p912 * 4, p912 * 110, p912 * 6, p912 * 107, p912 * 26, p912 * 109);
      v1293.bezierCurveTo(p912 * 206.5, p912 * 109, p912 * 206.5, p912 * 109, p912 * 387, p912 * 109);
      v1293.bezierCurveTo(p912 * 400, p912 * 108, p912 * 400, p912 * 108, p912 * 398, p912 * 127);
      v1293.bezierCurveTo(p912 * 384.5, p912 * 130, p912 * 384.5, p912 * 130, p912 * 371, p912 * 133);
      v1293.bezierCurveTo(p912 * 385.5, p912 * 138, p912 * 385.5, p912 * 138, p912 * 400, p912 * 143);
      v1293.bezierCurveTo(p912 * 402, p912 * 156, p912 * 402, p912 * 162, p912 * 385, p912 * 160);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 4, p912 * 183);
      v1293.bezierCurveTo(p912 * 1, p912 * 163, p912 * 4, p912 * 158, p912 * 28, p912 * 161);
      v1293.bezierCurveTo(p912 * 207.5, p912 * 161, p912 * 207.5, p912 * 161, p912 * 387, p912 * 161);
      v1293.bezierCurveTo(p912 * 401, p912 * 159, p912 * 400, p912 * 164, p912 * 400, p912 * 177);
      v1293.bezierCurveTo(p912 * 364.5, p912 * 184, p912 * 364.5, p912 * 184, p912 * 329, p912 * 191);
      v1293.bezierCurveTo(p912 * 364.5, p912 * 192.5, p912 * 364.5, p912 * 192.5, p912 * 400, p912 * 194);
      v1293.bezierCurveTo(p912 * 403, p912 * 209, p912 * 401, p912 * 214, p912 * 385, p912 * 213);
      v1293.bezierCurveTo(p912 * 201.5, p912 * 213, p912 * 201.5, p912 * 213, p912 * 18, p912 * 213);
      v1293.bezierCurveTo(p912 * 3, p912 * 213, p912 * 2, p912 * 213, p912 * 4, p912 * 198);
      v1293.bezierCurveTo(p912 * 12.5, p912 * 193, p912 * 12.5, p912 * 193, p912 * 21, p912 * 188);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 41, p912 * 30, p912 * 14.7648230602334);
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 369, p912 * 30, p912 * 15.556349186104045);
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 364, p912 * 190, p912 * 15.620499351813308);
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 41, p912 * 186, p912 * 15.556349186104045);
      f84(v1293, p913[3], p913[3], p912 * 32);
    } else if (p914 == 2) {
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 9, p912 * 5);
      v1293.bezierCurveTo(p912 * 381, p912 * 2, p912 * 197, p912 * 4.5, p912 * 385, p912 * 4);
      v1293.bezierCurveTo(p912 * 397, p912 * 4, p912 * 401, p912 * 4, p912 * 399, p912 * 23);
      v1293.bezierCurveTo(p912 * 367, p912 * 27, p912 * 367, p912 * 27, p912 * 335, p912 * 31);
      v1293.bezierCurveTo(p912 * 366.5, p912 * 33.5, p912 * 366.5, p912 * 33.5, p912 * 398, p912 * 36);
      v1293.bezierCurveTo(p912 * 398, p912 * 41.5, p912 * 398, p912 * 41.5, p912 * 398, p912 * 47);
      v1293.bezierCurveTo(p912 * 398, p912 * 56, p912 * 399, p912 * 56, p912 * 386, p912 * 56);
      v1293.bezierCurveTo(p912 * 200.5, p912 * 56.5, p912 * 200.5, p912 * 56.5, p912 * 15, p912 * 57);
      v1293.bezierCurveTo(p912 * 2, p912 * 55, p912 * 4, p912 * 52, p912 * 4, p912 * 43);
      v1293.bezierCurveTo(p912 * 4, p912 * 30.5, p912 * 4, p912 * 30.5, p912 * 4, p912 * 18);
      v1293.bezierCurveTo(p912 * 16, p912 * 18.5, p912 * 16, p912 * 18.5, p912 * 28, p912 * 19);
      v1293.bezierCurveTo(p912 * 18.5, p912 * 12, p912 * 18.5, p912 * 12, p912 * 9, p912 * 5);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 5, p912 * 70);
      v1293.bezierCurveTo(p912 * 5, p912 * 58, p912 * 5, p912 * 55, p912 * 17, p912 * 57);
      v1293.bezierCurveTo(p912 * 203, p912 * 57, p912 * 203, p912 * 57, p912 * 389, p912 * 57);
      v1293.bezierCurveTo(p912 * 400, p912 * 57, p912 * 400, p912 * 59, p912 * 400, p912 * 69);
      v1293.bezierCurveTo(p912 * 400.5, p912 * 83.5, p912 * 400.5, p912 * 83.5, p912 * 401, p912 * 98);
      v1293.bezierCurveTo(p912 * 402, p912 * 108, p912 * 401, p912 * 108, p912 * 388, p912 * 108);
      v1293.bezierCurveTo(p912 * 201.5, p912 * 108, p912 * 201.5, p912 * 108, p912 * 15, p912 * 108);
      v1293.bezierCurveTo(p912 * 1, p912 * 106, p912 * 5, p912 * 106, p912 * 5, p912 * 87);
      v1293.bezierCurveTo(p912 * 33, p912 * 84.5, p912 * 33, p912 * 84.5, p912 * 61, p912 * 82);
      v1293.bezierCurveTo(p912 * 33.5, p912 * 76.5, p912 * 33.5, p912 * 76.5, p912 * 6, p912 * 71);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 19, p912 * 158);
      v1293.bezierCurveTo(p912 * 2, p912 * 159, p912 * 4, p912 * 156, p912 * 5, p912 * 118);
      v1293.bezierCurveTo(p912 * 4, p912 * 110, p912 * 6, p912 * 107, p912 * 26, p912 * 109);
      v1293.bezierCurveTo(p912 * 206.5, p912 * 109, p912 * 206.5, p912 * 109, p912 * 387, p912 * 109);
      v1293.bezierCurveTo(p912 * 400, p912 * 108, p912 * 400, p912 * 108, p912 * 398, p912 * 127);
      v1293.bezierCurveTo(p912 * 384.5, p912 * 130, p912 * 384.5, p912 * 130, p912 * 371, p912 * 133);
      v1293.bezierCurveTo(p912 * 385.5, p912 * 138, p912 * 385.5, p912 * 138, p912 * 400, p912 * 143);
      v1293.bezierCurveTo(p912 * 402, p912 * 156, p912 * 402, p912 * 162, p912 * 385, p912 * 160);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      v1293.beginPath();
      v1293.lineCap = "round";
      v1293.lineJoin = "round";
      v1293.moveTo(p912 * 4, p912 * 183);
      v1293.bezierCurveTo(p912 * 1, p912 * 163, p912 * 4, p912 * 158, p912 * 28, p912 * 161);
      v1293.bezierCurveTo(p912 * 207.5, p912 * 161, p912 * 207.5, p912 * 161, p912 * 387, p912 * 161);
      v1293.bezierCurveTo(p912 * 401, p912 * 159, p912 * 400, p912 * 164, p912 * 400, p912 * 177);
      v1293.bezierCurveTo(p912 * 364.5, p912 * 184, p912 * 364.5, p912 * 184, p912 * 329, p912 * 191);
      v1293.bezierCurveTo(p912 * 364.5, p912 * 192.5, p912 * 364.5, p912 * 192.5, p912 * 400, p912 * 194);
      v1293.bezierCurveTo(p912 * 403, p912 * 209, p912 * 401, p912 * 214, p912 * 385, p912 * 213);
      v1293.bezierCurveTo(p912 * 201.5, p912 * 213, p912 * 201.5, p912 * 213, p912 * 18, p912 * 213);
      v1293.bezierCurveTo(p912 * 3, p912 * 213, p912 * 2, p912 * 213, p912 * 4, p912 * 198);
      v1293.bezierCurveTo(p912 * 12.5, p912 * 193, p912 * 12.5, p912 * 193, p912 * 21, p912 * 188);
      v1293.closePath();
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 41, p912 * 30, p912 * 14.7648230602334);
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 369, p912 * 30, p912 * 15.556349186104045);
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 364, p912 * 190, p912 * 15.620499351813308);
      f84(v1293, p913[3], p913[3], p912 * 32);
      f89(v1293, p912 * 41, p912 * 186, p912 * 15.556349186104045);
      f84(v1293, p913[3], p913[3], p912 * 32);
    }
    v1293.beginPath();
    v1293.lineCap = "round";
    v1293.lineJoin = "round";
    v1293.moveTo(p912 * 9, p912 * 5);
    v1293.bezierCurveTo(p912 * 381, p912 * 2, p912 * 197, p912 * 4.5, p912 * 385, p912 * 4);
    v1293.bezierCurveTo(p912 * 397, p912 * 4, p912 * 401, p912 * 4, p912 * 399, p912 * 23);
    v1293.bezierCurveTo(p912 * 367, p912 * 27, p912 * 367, p912 * 27, p912 * 335, p912 * 31);
    v1293.bezierCurveTo(p912 * 366.5, p912 * 33.5, p912 * 366.5, p912 * 33.5, p912 * 398, p912 * 36);
    v1293.bezierCurveTo(p912 * 398, p912 * 41.5, p912 * 398, p912 * 41.5, p912 * 398, p912 * 47);
    v1293.bezierCurveTo(p912 * 398, p912 * 56, p912 * 399, p912 * 56, p912 * 386, p912 * 56);
    v1293.bezierCurveTo(p912 * 200.5, p912 * 56.5, p912 * 200.5, p912 * 56.5, p912 * 15, p912 * 57);
    v1293.bezierCurveTo(p912 * 2, p912 * 55, p912 * 4, p912 * 52, p912 * 4, p912 * 43);
    v1293.bezierCurveTo(p912 * 4, p912 * 30.5, p912 * 4, p912 * 30.5, p912 * 4, p912 * 18);
    v1293.bezierCurveTo(p912 * 16, p912 * 18.5, p912 * 16, p912 * 18.5, p912 * 28, p912 * 19);
    v1293.bezierCurveTo(p912 * 18.5, p912 * 12, p912 * 18.5, p912 * 12, p912 * 9, p912 * 5);
    v1293.closePath();
    f84(v1293, p913[1], p913[0], p912 * 12);
    v1293.beginPath();
    v1293.lineCap = "round";
    v1293.lineJoin = "round";
    v1293.moveTo(p912 * 5, p912 * 70);
    v1293.bezierCurveTo(p912 * 5, p912 * 58, p912 * 5, p912 * 55, p912 * 17, p912 * 57);
    v1293.bezierCurveTo(p912 * 203, p912 * 57, p912 * 203, p912 * 57, p912 * 389, p912 * 57);
    v1293.bezierCurveTo(p912 * 400, p912 * 57, p912 * 400, p912 * 59, p912 * 400, p912 * 69);
    v1293.bezierCurveTo(p912 * 400.5, p912 * 83.5, p912 * 400.5, p912 * 83.5, p912 * 401, p912 * 98);
    v1293.bezierCurveTo(p912 * 402, p912 * 108, p912 * 401, p912 * 108, p912 * 388, p912 * 108);
    v1293.bezierCurveTo(p912 * 201.5, p912 * 108, p912 * 201.5, p912 * 108, p912 * 15, p912 * 108);
    v1293.bezierCurveTo(p912 * 1, p912 * 106, p912 * 5, p912 * 106, p912 * 5, p912 * 87);
    v1293.bezierCurveTo(p912 * 33, p912 * 84.5, p912 * 33, p912 * 84.5, p912 * 61, p912 * 82);
    v1293.bezierCurveTo(p912 * 33.5, p912 * 76.5, p912 * 33.5, p912 * 76.5, p912 * 6, p912 * 71);
    v1293.closePath();
    f84(v1293, p913[2], p913[0], p912 * 12);
    v1293.beginPath();
    v1293.lineCap = "round";
    v1293.lineJoin = "round";
    v1293.moveTo(p912 * 19, p912 * 158);
    v1293.bezierCurveTo(p912 * 2, p912 * 159, p912 * 4, p912 * 156, p912 * 5, p912 * 118);
    v1293.bezierCurveTo(p912 * 4, p912 * 110, p912 * 6, p912 * 107, p912 * 26, p912 * 109);
    v1293.bezierCurveTo(p912 * 206.5, p912 * 109, p912 * 206.5, p912 * 109, p912 * 387, p912 * 109);
    v1293.bezierCurveTo(p912 * 400, p912 * 108, p912 * 400, p912 * 108, p912 * 398, p912 * 127);
    v1293.bezierCurveTo(p912 * 384.5, p912 * 130, p912 * 384.5, p912 * 130, p912 * 371, p912 * 133);
    v1293.bezierCurveTo(p912 * 385.5, p912 * 138, p912 * 385.5, p912 * 138, p912 * 400, p912 * 143);
    v1293.bezierCurveTo(p912 * 402, p912 * 156, p912 * 402, p912 * 162, p912 * 385, p912 * 160);
    v1293.closePath();
    f84(v1293, p913[1], p913[0], p912 * 12);
    v1293.beginPath();
    v1293.lineCap = "round";
    v1293.lineJoin = "round";
    v1293.moveTo(p912 * 4, p912 * 183);
    v1293.bezierCurveTo(p912 * 1, p912 * 163, p912 * 4, p912 * 158, p912 * 28, p912 * 161);
    v1293.bezierCurveTo(p912 * 207.5, p912 * 161, p912 * 207.5, p912 * 161, p912 * 387, p912 * 161);
    v1293.bezierCurveTo(p912 * 401, p912 * 159, p912 * 400, p912 * 164, p912 * 400, p912 * 177);
    v1293.bezierCurveTo(p912 * 364.5, p912 * 184, p912 * 364.5, p912 * 184, p912 * 329, p912 * 191);
    v1293.bezierCurveTo(p912 * 364.5, p912 * 192.5, p912 * 364.5, p912 * 192.5, p912 * 400, p912 * 194);
    v1293.bezierCurveTo(p912 * 403, p912 * 209, p912 * 401, p912 * 214, p912 * 385, p912 * 213);
    v1293.bezierCurveTo(p912 * 201.5, p912 * 213, p912 * 201.5, p912 * 213, p912 * 18, p912 * 213);
    v1293.bezierCurveTo(p912 * 3, p912 * 213, p912 * 2, p912 * 213, p912 * 4, p912 * 198);
    v1293.bezierCurveTo(p912 * 12.5, p912 * 193, p912 * 12.5, p912 * 193, p912 * 21, p912 * 188);
    v1293.closePath();
    f84(v1293, p913[2], p913[0], p912 * 12);
    f89(v1293, p912 * 41, p912 * 30, p912 * 14.7648230602334);
    f84(v1293, p913[2], p913[0], p912 * 12);
    f89(v1293, p912 * 369, p912 * 30, p912 * 15.556349186104045);
    f84(v1293, p913[2], p913[0], p912 * 12);
    f89(v1293, p912 * 364, p912 * 190, p912 * 15.620499351813308);
    f84(v1293, p913[2], p913[0], p912 * 12);
    f89(v1293, p912 * 41, p912 * 186, p912 * 15.556349186104045);
    f84(v1293, p913[2], p913[0], p912 * 12);
    return v1292;
  }
  function f207(p915, p916) {
    var v1294 = document.createElement("canvas");
    var v1295 = v1294.getContext("2d");
    v1294.width = p915 * 120;
    v1294.height = p915 * 320;
    v1295.translate(p915 * -60, p915 * -15);
    v1295.beginPath();
    v1295.lineCap = "round";
    v1295.lineJoin = "round";
    v1295.moveTo(p915 * 188.5, p915 * 3.953125);
    v1295.bezierCurveTo(p915 * 188.5, p915 * 171.453125, p915 * 188.5, p915 * 171.453125, p915 * 188.5, p915 * 338.953125);
    v1295.bezierCurveTo(p915 * 162.5, p915 * 268.953125, p915 * 145.5, p915 * 265.953125, p915 * 116.5, p915 * 244.953125);
    v1295.bezierCurveTo(p915 * 67.5, p915 * 204.953125, p915 * 87.5, p915 * 160.953125, p915 * 113.5, p915 * 125.953125);
    v1295.bezierCurveTo(p915 * 141.5, p915 * 90.953125, p915 * 176.5, p915 * 56.953125, p915 * 188.5, p915 * 3.953125);
    v1295.closePath();
    f84(v1295, p916[0]);
    return v1294;
  }
  function f208(p917, p918, p919) {
    var v1296 = (v1297 = document.createElement("canvas")).getContext("2d");
    if (p919 == 0) {
      v1297.width = p917 * 566;
      v1297.height = p917 * 429;
      v1296.beginPath();
      v1296.lineCap = "round";
      v1296.lineJoin = "round";
      v1296.moveTo(p917 * 312.625, p917 * 39.046875);
      v1296.bezierCurveTo(p917 * 456.625, p917 * 60.046875, p917 * 521.625, p917 * 134.046875, p917 * 528.625, p917 * 199.046875);
      v1296.bezierCurveTo(p917 * 540.625, p917 * 298.046875, p917 * 491.625, p917 * 364.046875, p917 * 405.625, p917 * 394.046875);
      v1296.bezierCurveTo(p917 * 270.625, p917 * 429.046875, p917 * 182.625, p917 * 395.046875, p917 * 100.625, p917 * 344.046875);
      v1296.bezierCurveTo(p917 * 15.625, p917 * 283.046875, p917 * 20.625, p917 * 195.046875, p917 * 33.625, p917 * 158.046875);
      v1296.bezierCurveTo(p917 * 56.625, p917 * 80.046875, p917 * 102.625, p917 * 46.046875, p917 * 183.625, p917 * 33.046875);
      v1296.bezierCurveTo(p917 * 225.625, p917 * 25.046875, p917 * 270.625, p917 * 30.046875, p917 * 312.625, p917 * 39.046875);
      v1296.closePath();
      f84(v1296, p918[0]);
    } else if (p919 == 1) {
      v1296 = (v1297 = document.createElement("canvas")).getContext("2d");
      v1297.width = p917 * 511;
      v1297.height = p917 * 408;
      v1296.beginPath();
      v1296.lineCap = "round";
      v1296.lineJoin = "round";
      v1296.moveTo(p917 * 141.625, p917 * 49.296875);
      v1296.bezierCurveTo(p917 * 225.625, p917 * 10.296875, p917 * 320.625, p917 * 16.296875, p917 * 390.625, p917 * 39.296875);
      v1296.bezierCurveTo(p917 * 476.625, p917 * 71.296875, p917 * 483.625, p917 * 142.296875, p917 * 486.625, p917 * 197.296875);
      v1296.bezierCurveTo(p917 * 491.625, p917 * 289.296875, p917 * 462.625, p917 * 317.296875, p917 * 417.625, p917 * 351.296875);
      v1296.bezierCurveTo(p917 * 367.625, p917 * 385.296875, p917 * 313.625, p917 * 404.296875, p917 * 218.625, p917 * 395.296875);
      v1296.bezierCurveTo(p917 * 108.625, p917 * 381.296875, p917 * 81.625, p917 * 350.296875, p917 * 52.625, p917 * 305.296875);
      v1296.bezierCurveTo(p917 * 16.625, p917 * 244.296875, p917 * 23.625, p917 * 171.296875, p917 * 37.625, p917 * 145.296875);
      v1296.bezierCurveTo(p917 * 65.625, p917 * 84.296875, p917 * 97.625, p917 * 74.296875, p917 * 141.625, p917 * 49.296875);
      v1296.closePath();
      f84(v1296, p918[0]);
    } else if (p919 == 2) {
      var v1297;
      v1296 = (v1297 = document.createElement("canvas")).getContext("2d");
      v1297.width = p917 * 504;
      v1297.height = p917 * 408;
      v1296.beginPath();
      v1296.lineCap = "round";
      v1296.lineJoin = "round";
      v1296.moveTo(p917 * 153.625, p917 * 46.296875);
      v1296.bezierCurveTo(p917 * 271.625, p917 * 17.296875, p917 * 345.625, p917 * 35.296875, p917 * 410.625, p917 * 71.296875);
      v1296.bezierCurveTo(p917 * 473.625, p917 * 109.296875, p917 * 478.625, p917 * 167.296875, p917 * 473.625, p917 * 205.296875);
      v1296.bezierCurveTo(p917 * 462.625, p917 * 295.296875, p917 * 438.625, p917 * 316.296875, p917 * 388.625, p917 * 345.296875);
      v1296.bezierCurveTo(p917 * 331.625, p917 * 374.296875, p917 * 273.625, p917 * 392.296875, p917 * 180.625, p917 * 387.296875);
      v1296.bezierCurveTo(p917 * 111.625, p917 * 380.296875, p917 * 86.625, p917 * 360.296875, p917 * 51.625, p917 * 309.296875);
      v1296.bezierCurveTo(p917 * 23.625, p917 * 267.296875, p917 * 25.625, p917 * 226.296875, p917 * 27.625, p917 * 175.296875);
      v1296.bezierCurveTo(p917 * 37.625, p917 * 99.296875, p917 * 88.625, p917 * 57.296875, p917 * 153.625, p917 * 46.296875);
      v1296.closePath();
      f84(v1296, p918[0]);
    }
    return v1297;
  }
  function f209(p920, p921) {
    var v1298 = document.createElement("canvas");
    var v1299 = v1298.getContext("2d");
    v1298.width = p920 * 120;
    v1298.height = p920 * 300;
    v1299.translate(p920 * -200, p920 * -40);
    v1299.beginPath();
    v1299.lineCap = "round";
    v1299.lineJoin = "round";
    v1299.moveTo(p920 * 344, p920 * 18.40625);
    v1299.bezierCurveTo(p920 * 345, p920 * 361.40625, p920 * 344, p920 * 191.40625, p920 * 344, p920 * 364.40625);
    v1299.bezierCurveTo(p920 * 261, p920 * 275.40625, p920 * 274, p920 * 259.40625, p920 * 229, p920 * 213.40625);
    v1299.bezierCurveTo(p920 * 199, p920 * 187.40625, p920 * 222, p920 * 133.40625, p920 * 273, p920 * 100.40625);
    v1299.bezierCurveTo(p920 * 321, p920 * 71.40625, p920 * 327, p920 * 34.40625, p920 * 344, p920 * 18.40625);
    v1299.closePath();
    f84(v1299, p921[0]);
    v1299.beginPath();
    v1299.lineCap = "round";
    v1299.lineJoin = "round";
    v1299.moveTo(p920 * 335, p920 * 38.072906494140625);
    v1299.bezierCurveTo(p920 * 307, p920 * 62.072906494140625, p920 * 291, p920 * 60.072906494140625, p920 * 262, p920 * 68.07290649414062);
    v1299.bezierCurveTo(p920 * 223, p920 * 80.07290649414062, p920 * 225, p920 * 111.07290649414062, p920 * 264, p920 * 139.07290649414062);
    v1299.closePath();
    f84(v1299, p921[0]);
    return v1298;
  }
  function f210(p922, p923) {
    var v1300 = document.createElement("canvas");
    var v1301 = v1300.getContext("2d");
    v1300.width = p922 * 147;
    v1300.height = p922 * 172;
    v1301.globalAlpha = 0.5;
    v1301.translate(0, p922 * 8);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 8, p922 * 50);
    v1301.bezierCurveTo(p922 * 15, p922 * 16, p922 * 49, p922 * 6, p922 * 67, p922 * 6);
    v1301.bezierCurveTo(p922 * 121, p922 * 3, p922 * 128, p922 * 32, p922 * 135, p922 * 48);
    v1301.bezierCurveTo(p922 * 146, p922 * 96, p922 * 124, p922 * 131, p922 * 96, p922 * 135);
    v1301.bezierCurveTo(p922 * 96, p922 * 158, p922 * 79, p922 * 156, p922 * 75, p922 * 156);
    v1301.bezierCurveTo(p922 * 50, p922 * 154, p922 * 53, p922 * 150, p922 * 52, p922 * 135);
    v1301.bezierCurveTo(p922 * 2, p922 * 127, p922 * 3, p922 * 87, p922 * 8, p922 * 50);
    v1301.closePath();
    f84(v1301, p923[0]);
    v1301.translate(0, p922 * -8);
    v1301.globalAlpha = 1;
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 8, p922 * 50);
    v1301.bezierCurveTo(p922 * 15, p922 * 16, p922 * 49, p922 * 6, p922 * 67, p922 * 6);
    v1301.bezierCurveTo(p922 * 121, p922 * 3, p922 * 128, p922 * 32, p922 * 135, p922 * 48);
    v1301.bezierCurveTo(p922 * 146, p922 * 96, p922 * 124, p922 * 131, p922 * 96, p922 * 135);
    v1301.bezierCurveTo(p922 * 96, p922 * 158, p922 * 79, p922 * 156, p922 * 75, p922 * 156);
    v1301.bezierCurveTo(p922 * 50, p922 * 154, p922 * 53, p922 * 150, p922 * 52, p922 * 135);
    v1301.bezierCurveTo(p922 * 2, p922 * 127, p922 * 3, p922 * 87, p922 * 8, p922 * 50);
    v1301.closePath();
    f84(v1301, p923[1], p923[2], p922 * 4);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 14, p922 * 57);
    v1301.bezierCurveTo(p922 * 2, p922 * 50, p922 * 5, p922 * 22, p922 * 24, p922 * 22);
    v1301.bezierCurveTo(p922 * 41, p922 * 21, p922 * 54, p922 * 32, p922 * 55, p922 * 48);
    f84(v1301, p923[1], p923[2], p922 * 4);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 93, p922 * 47);
    v1301.bezierCurveTo(p922 * 94, p922 * 24, p922 * 116, p922 * 21, p922 * 120, p922 * 20);
    v1301.bezierCurveTo(p922 * 144, p922 * 17, p922 * 146, p922 * 52, p922 * 133, p922 * 58);
    f84(v1301, p923[1], p923[2], p922 * 4);
    f89(v1301, p922 * 51, p922 * 91, p922 * 9);
    f84(v1301, p923[3]);
    f89(v1301, p922 * 95, p922 * 91, p922 * 9);
    f84(v1301, p923[3]);
    f89(v1301, p922 * 91, p922 * 89, p922 * 4);
    f84(v1301, p923[4]);
    f89(v1301, p922 * 47, p922 * 89, p922 * 4);
    f84(v1301, p923[4]);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 54, p922 * 133);
    v1301.bezierCurveTo(p922 * 56, p922 * 108, p922 * 64, p922 * 99, p922 * 73, p922 * 98);
    v1301.bezierCurveTo(p922 * 86, p922 * 97, p922 * 91, p922 * 119, p922 * 93, p922 * 133);
    v1301.bezierCurveTo(p922 * 94, p922 * 155, p922 * 90, p922 * 150, p922 * 74, p922 * 155);
    v1301.bezierCurveTo(p922 * 50, p922 * 152, p922 * 55, p922 * 145, p922 * 54, p922 * 134);
    v1301.closePath();
    f84(v1301, p923[5]);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 65.25, p922 * 135);
    v1301.bezierCurveTo(p922 * 75.25, p922 * 128, p922 * 83.25, p922 * 133, p922 * 83.25, p922 * 138);
    v1301.bezierCurveTo(p922 * 88.25, p922 * 148, p922 * 61.25, p922 * 149, p922 * 64.25, p922 * 137);
    v1301.closePath();
    f84(v1301, p923[6]);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 74, p922 * 145);
    v1301.bezierCurveTo(p922 * 74, p922 * 148, p922 * 74, p922 * 148, p922 * 74, p922 * 151);
    v1301.closePath();
    f84(v1301, vVVVVUndefined20, p923[6], p922 * 2);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 19, p922 * 58);
    v1301.bezierCurveTo(p922 * 10, p922 * 38, p922 * 18, p922 * 33, p922 * 28, p922 * 34);
    v1301.bezierCurveTo(p922 * 41, p922 * 39, p922 * 45, p922 * 45, p922 * 50, p922 * 51);
    v1301.closePath();
    f84(v1301, p923[6]);
    v1301.beginPath();
    v1301.lineCap = "round";
    v1301.lineJoin = "round";
    v1301.moveTo(p922 * 100, p922 * 51);
    v1301.bezierCurveTo(p922 * 106, p922 * 36, p922 * 119, p922 * 31, p922 * 128, p922 * 36);
    v1301.bezierCurveTo(p922 * 137, p922 * 49, p922 * 128, p922 * 58, p922 * 128, p922 * 60);
    v1301.closePath();
    f84(v1301, p923[6]);
    return v1300;
  }
  function f211(p924, p925, p926, p927) {
    var v1302 = document.createElement("canvas");
    var v1303 = v1302.getContext("2d");
    v1302.width = p924 * 450;
    v1302.height = p924 * 260;
    var vF205 = f205(p924 * 1, vVVVVV163, p926);
    v1303.drawImage(vF205, p924 * 0, p924 * 0);
    if (p927 == 1) {
      v1303.translate(p924 * 100, p924 * 0);
      f89(v1303, p924 * 113, p924 * 120, p924 * 66);
      f84(v1303, vUndefined, p926[4], p924 * 13);
      vF205 = f134(p924 * 0.65, vVVV1622, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]);
      v1303.rotate(0.7);
      v1303.drawImage(vF205, p924 * 133, p924 * -64);
      v1303.rotate(-0.7);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 70, p924 * 70);
      v1303.bezierCurveTo(p924 * 113, p924 * 120.5, p924 * 113, p924 * 120.5, p924 * 156, p924 * 171);
      v1303.closePath();
      f84(v1303, undefined, p926[4], p924 * 13);
    } else if (p927 == 2) {
      v1303.translate(p924 * 100, p924 * 0);
      f89(v1303, p924 * 113, p924 * 120, p924 * 66);
      f84(v1303, vVVVVUndefined117, p926[4], p924 * 13);
      v1303.translate(p924 * 30, p924 * 40);
      v1303.save();
      v1303.translate(p924 * 83.5, p924 * 66.5);
      f83(v1303, p924 * -40.5, p924 * -29.5, p924 * 81, p924 * 59, p924 * 15);
      v1303.restore();
      f84(v1303, "#dff2f7", "#187484", p924 * 7);
      f89(v1303, p924 * 22, p924 * 82, p924 * 12);
      f84(v1303, "#dff2f7", "#187484", p924 * 7);
      f89(v1303, p924 * 145, p924 * 82, p924 * 12);
      f84(v1303, "#dff2f7", "#187484", p924 * 7);
      vF205 = f156(p924 * 0.5, true, ["#80500b", "#7c4908"]);
      v1303.drawImage(vF205, p924 * 10, p924 * 85);
      vF205 = f156(p924 * 0.5, true, ["#80500b", "#7c4908"]);
      v1303.drawImage(vF205, p924 * 50, p924 * 85);
      vF205 = f156(p924 * 0.5, vVVV1622, ["#80500b", "#7c4908"]);
      v1303.drawImage(vF205, p924 * 90, p924 * 85);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 90, p924 * 105);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 90, p924 * 105);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 30, p924 * 125);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 50, p924 * 115);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 30, p924 * 100);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 80, p924 * 120);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 110, p924 * 125);
      vF205 = f160(p924 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1303.drawImage(vF205, p924 * 120, p924 * 105);
    } else if (p927 == 3) {
      v1303.translate(p924 * 100, p924 * 0);
      f89(v1303, p924 * 113, p924 * 120, p924 * 66);
      f84(v1303, undefined, p926[4], p924 * 13);
      v1303.translate(p924 * 40, p924 * 50);
      v1303.save();
      v1303.translate(p924 * 71, p924 * 69);
      f83(v1303, p924 * -30, p924 * -42, p924 * 60, p924 * 84, p924 * 10);
      v1303.restore();
      f84(v1303, undefined, p926[5], p924 * 4);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 42, p924 * 28);
      v1303.bezierCurveTo(p924 * 60, p924 * 31, p924 * 60, p924 * 31, p924 * 78, p924 * 34);
      v1303.bezierCurveTo(p924 * 82, p924 * 34, p924 * 84, p924 * 37, p924 * 83, p924 * 45);
      v1303.bezierCurveTo(p924 * 83, p924 * 80, p924 * 83, p924 * 80, p924 * 83, p924 * 115);
      v1303.bezierCurveTo(p924 * 83, p924 * 120, p924 * 80, p924 * 122, p924 * 73, p924 * 120);
      v1303.bezierCurveTo(p924 * 42, p924 * 111, p924 * 43, p924 * 109, p924 * 41, p924 * 102);
      v1303.bezierCurveTo(p924 * 41, p924 * 71, p924 * 41, p924 * 71, p924 * 41, p924 * 40);
      v1303.closePath();
      f84(v1303, p926[5], p926[5], p924 * 4);
      v1303.translate(p924 * -40, p924 * -50);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 70, p924 * 70);
      v1303.bezierCurveTo(p924 * 113, p924 * 120.5, p924 * 113, p924 * 120.5, p924 * 156, p924 * 171);
      v1303.closePath();
      f84(v1303, undefined, p926[4], p924 * 13);
    } else if (p927 == 4) {
      v1303.scale(1, 1);
      v1303.translate(p924 * 70, p924 * 50);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 23, p924 * 6);
      v1303.bezierCurveTo(p924 * 25.5, p924 * 56, p924 * 25.5, p924 * 56, p924 * 28, p924 * 106);
      f84(v1303, undefined, p926[5], p924 * 14);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 59, p924 * 10);
      v1303.bezierCurveTo(p924 * 61, p924 * 51.5, p924 * 61, p924 * 51.5, p924 * 63, p924 * 93);
      f84(v1303, undefined, p926[5], p924 * 14);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 7, p924 * 55);
      v1303.bezierCurveTo(p924 * 33.5, p924 * 55, p924 * 33.5, p924 * 55, p924 * 60, p924 * 55);
      f84(v1303, vVUndefined21, p926[5], p924 * 14);
      v1303.translate(p924 * 10, p924 * 0);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 123, p924 * 16);
      v1303.bezierCurveTo(p924 * 103, p924 * 16.5, p924 * 103, p924 * 16.5, p924 * 83, p924 * 17);
      v1303.bezierCurveTo(p924 * 83.5, p924 * 61, p924 * 83.5, p924 * 61, p924 * 84, p924 * 105);
      v1303.bezierCurveTo(p924 * 106, p924 * 105, p924 * 106, p924 * 105, p924 * 128, p924 * 105);
      f84(v1303, vVUndefined20, p926[5], p924 * 14);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 72, p924 * 63);
      v1303.bezierCurveTo(p924 * 88.5, p924 * 62.5, p924 * 88.5, p924 * 62.5, p924 * 105, p924 * 62);
      f84(v1303, vVVUndefined202, p926[5], p924 * 14);
      v1303.translate(p924 * 10, p924 * 10);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 141, p924 * 8);
      v1303.bezierCurveTo(p924 * 143, p924 * 50, p924 * 143, p924 * 50, p924 * 145, p924 * 92);
      v1303.bezierCurveTo(p924 * 169, p924 * 88.5, p924 * 169, p924 * 88.5, p924 * 193, p924 * 85);
      f84(v1303, vUndefined, p926[5], p924 * 14);
      v1303.translate(p924 * 10, p924 * -10);
      v1303.beginPath();
      v1303.lineCap = "round";
      v1303.lineJoin = "round";
      v1303.moveTo(p924 * 205, p924 * 124);
      v1303.bezierCurveTo(p924 * 205, p924 * 69, p924 * 205, p924 * 69, p924 * 205, p924 * 14);
      v1303.bezierCurveTo(p924 * 239, p924 * 15, p924 * 250, p924 * 37, p924 * 249, p924 * 49);
      v1303.bezierCurveTo(p924 * 251, p924 * 65, p924 * 242, p924 * 76, p924 * 206, p924 * 75);
      f84(v1303, undefined, p926[5], p924 * 14);
    }
    return v1302;
  }
  function f212(p928, p929, p930) {
    var v1304 = document.createElement("canvas");
    var v1305 = v1304.getContext("2d");
    v1304.width = p928 * 139;
    v1304.height = p928 * 135;
    v1305.translate(0, p928 * 10);
    v1305.globalAlpha = p929 ? 0.5 : 1;
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 32, p928 * 77);
    v1305.bezierCurveTo(p928 * 6, p928 * 41, p928 * 6, p928 * 33, p928 * 12, p928 * 27);
    v1305.bezierCurveTo(p928 * 27, p928 * 6, p928 * 28, p928 * 6, p928 * 37, p928 * 6);
    v1305.bezierCurveTo(p928 * 62, p928 * 3, p928 * 64, p928 * 5, p928 * 67, p928 * 13);
    v1305.bezierCurveTo(p928 * 80, p928 * 36, p928 * 73.5, p928 * 25, p928 * 80, p928 * 37);
    v1305.bezierCurveTo(p928 * 73.5, p928 * 54, p928 * 65, p928 * 74, p928 * 67, p928 * 71);
    v1305.closePath();
    f84(v1305, p930[0]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 65, p928 * 37);
    v1305.bezierCurveTo(p928 * 105, p928 * 40, p928 * 113, p928 * 39, p928 * 117, p928 * 48);
    v1305.bezierCurveTo(p928 * 126, p928 * 70, p928 * 128, p928 * 72, p928 * 124, p928 * 80);
    v1305.bezierCurveTo(p928 * 112, p928 * 101, p928 * 110, p928 * 104, p928 * 99, p928 * 104);
    v1305.bezierCurveTo(p928 * 59, p928 * 100, p928 * 55, p928 * 99, p928 * 56, p928 * 99);
    v1305.bezierCurveTo(p928 * 47.5, p928 * 79, p928 * 45, p928 * 66, p928 * 39, p928 * 59);
    v1305.closePath();
    f84(v1305, p930[0]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 30, p928 * 63);
    v1305.bezierCurveTo(p928 * 5, p928 * 99, p928 * 5, p928 * 101, p928 * 8, p928 * 103);
    v1305.bezierCurveTo(p928 * 19, p928 * 123, p928 * 22, p928 * 125, p928 * 28, p928 * 126);
    v1305.bezierCurveTo(p928 * 57, p928 * 127, p928 * 55, p928 * 127, p928 * 58, p928 * 120);
    v1305.bezierCurveTo(p928 * 82, p928 * 86, p928 * 83, p928 * 78, p928 * 82, p928 * 87);
    v1305.closePath();
    f84(v1305, p930[0]);
    v1305.translate(0, p928 * -10);
    v1305.globalAlpha = 1;
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 32, p928 * 77);
    v1305.bezierCurveTo(p928 * 6, p928 * 41, p928 * 6, p928 * 33, p928 * 12, p928 * 27);
    v1305.bezierCurveTo(p928 * 27, p928 * 6, p928 * 28, p928 * 6, p928 * 37, p928 * 6);
    v1305.bezierCurveTo(p928 * 62, p928 * 3, p928 * 64, p928 * 5, p928 * 67, p928 * 13);
    v1305.bezierCurveTo(p928 * 80, p928 * 36, p928 * 73.5, p928 * 25, p928 * 80, p928 * 37);
    v1305.bezierCurveTo(p928 * 73.5, p928 * 54, p928 * 65, p928 * 74, p928 * 67, p928 * 71);
    v1305.closePath();
    f84(v1305, p930[1]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 65, p928 * 37);
    v1305.bezierCurveTo(p928 * 105, p928 * 40, p928 * 113, p928 * 39, p928 * 117, p928 * 48);
    v1305.bezierCurveTo(p928 * 126, p928 * 70, p928 * 128, p928 * 72, p928 * 124, p928 * 80);
    v1305.bezierCurveTo(p928 * 112, p928 * 101, p928 * 110, p928 * 104, p928 * 99, p928 * 104);
    v1305.bezierCurveTo(p928 * 59, p928 * 100, p928 * 55, p928 * 99, p928 * 56, p928 * 99);
    v1305.bezierCurveTo(p928 * 47.5, p928 * 79, p928 * 45, p928 * 66, p928 * 39, p928 * 59);
    v1305.closePath();
    f84(v1305, p930[1]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 30, p928 * 63);
    v1305.bezierCurveTo(p928 * 5, p928 * 99, p928 * 5, p928 * 101, p928 * 8, p928 * 103);
    v1305.bezierCurveTo(p928 * 19, p928 * 123, p928 * 22, p928 * 125, p928 * 28, p928 * 126);
    v1305.bezierCurveTo(p928 * 57, p928 * 127, p928 * 55, p928 * 127, p928 * 58, p928 * 120);
    v1305.bezierCurveTo(p928 * 82, p928 * 86, p928 * 83, p928 * 78, p928 * 82, p928 * 87);
    v1305.closePath();
    f84(v1305, p930[1]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 80, p928 * 38);
    v1305.bezierCurveTo(p928 * 72.5, p928 * 52, p928 * 72.5, p928 * 52, p928 * 65, p928 * 66);
    v1305.bezierCurveTo(p928 * 47.5, p928 * 37, p928 * 47.5, p928 * 37, p928 * 30, p928 * 7);
    v1305.bezierCurveTo(p928 * 48, p928 * 4, p928 * 57, p928 * 4, p928 * 64, p928 * 10);
    v1305.closePath();
    f84(v1305, p930[2]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 65, p928 * 65);
    v1305.bezierCurveTo(p928 * 125, p928 * 73, p928 * 95.5, p928 * 69, p928 * 126, p928 * 73);
    v1305.bezierCurveTo(p928 * 119, p928 * 98, p928 * 106, p928 * 104, p928 * 98, p928 * 103);
    v1305.bezierCurveTo(p928 * 84.5, p928 * 102, p928 * 84.5, p928 * 102, p928 * 71, p928 * 101);
    v1305.bezierCurveTo(p928 * 64, p928 * 86, p928 * 64, p928 * 86, p928 * 57, p928 * 70);
    v1305.closePath();
    f84(v1305, p930[2]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 27, p928 * 69);
    v1305.bezierCurveTo(p928 * 64, p928 * 65, p928 * 46, p928 * 67, p928 * 65, p928 * 65);
    v1305.bezierCurveTo(p928 * 43.5, p928 * 94, p928 * 43.5, p928 * 94, p928 * 22, p928 * 123);
    v1305.bezierCurveTo(p928 * 8, p928 * 103, p928 * 8, p928 * 103, p928 * 9, p928 * 103);
    v1305.bezierCurveTo(p928 * 5, p928 * 98, p928 * 11, p928 * 89, p928 * 26, p928 * 70);
    v1305.closePath();
    f84(v1305, p930[2]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 26, p928 * 69);
    v1305.bezierCurveTo(p928 * 65, p928 * 60, p928 * 45, p928 * 65, p928 * 64, p928 * 60);
    v1305.bezierCurveTo(p928 * 63, p928 * 65, p928 * 63, p928 * 65, p928 * 62, p928 * 70);
    v1305.closePath();
    f84(v1305, p930[2]);
    v1305.beginPath();
    v1305.lineCap = "round";
    v1305.lineJoin = "round";
    v1305.moveTo(p928 * 80, p928 * 38);
    v1305.bezierCurveTo(p928 * 68, p928 * 70, p928 * 75, p928 * 53, p928 * 70, p928 * 68);
    v1305.bezierCurveTo(p928 * 65, p928 * 67, p928 * 65, p928 * 67, p928 * 60, p928 * 65);
    v1305.closePath();
    f84(v1305, p930[2]);
    return v1304;
  }
  function f213(p931, p932) {
    var v1306 = document.createElement("canvas");
    var v1307 = v1306.getContext("2d");
    v1306.width = p931 * 149;
    v1306.height = p931 * 153;
    v1307.globalAlpha = 0.5;
    f89(v1307, p931 * 74.5, p931 * 85, p931 * 66);
    f84(v1307, p932[0]);
    v1307.globalAlpha = 1;
    f89(v1307, p931 * 75.5, p931 * 72.5, p931 * 67);
    f84(v1307, p932[1], p932[2], p931 * 4);
    f89(v1307, p931 * 75.5, p931 * 73.5, p931 * 54);
    f84(v1307, p932[3]);
    v1307.globalAlpha = 0.5;
    f89(v1307, p931 * 74.5, p931 * 80.5, p931 * 39);
    f84(v1307, p932[4]);
    v1307.globalAlpha = 1;
    f89(v1307, p931 * 74.5, p931 * 74.5, p931 * 37);
    f84(v1307, p932[5]);
    return v1306;
  }
  function f214(p933, p934) {
    var v1308 = document.createElement("canvas");
    var v1309 = v1308.getContext("2d");
    v1308.width = p933 * 120;
    v1308.height = p933 * 280;
    v1309.translate(p933 * -100, p933 * -20);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p933 * 228.5, p933 * 331.953125);
    v1309.bezierCurveTo(p933 * 228.5, p933 * 12.953125, p933 * 228.5, p933 * 171.453125, p933 * 228.5, p933 * 10.953125);
    v1309.bezierCurveTo(p933 * 196.5, p933 * 76.953125, p933 * 206.5, p933 * 78.953125, p933 * 191.5, p933 * 114.953125);
    v1309.bezierCurveTo(p933 * 162.5, p933 * 170.953125, p933 * 206.5, p933 * 220.953125, p933 * 210.5, p933 * 251.953125);
    v1309.bezierCurveTo(p933 * 218.5, p933 * 287.953125, p933 * 220.5, p933 * 291.953125, p933 * 228.5, p933 * 331.953125);
    v1309.closePath();
    f84(v1309, p934[0]);
    return v1308;
  }
  function f215(p935, p936) {
    var v1310 = document.createElement("canvas");
    var v1311 = v1310.getContext("2d");
    v1310.width = p935 * 120;
    v1310.height = p935 * 330;
    v1311.translate(p935 * -60, p935 * -10);
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.moveTo(p935 * 188.5, p935 * 7.953125);
    v1311.bezierCurveTo(p935 * 188.5, p935 * 334.953125, p935 * 188.5, p935 * 332.953125, p935 * 188.5, p935 * 339.953125);
    v1311.bezierCurveTo(p935 * 166.5, p935 * 295.953125, p935 * 145.5, p935 * 295.953125, p935 * 139.5, p935 * 282.953125);
    v1311.bezierCurveTo(p935 * 124.5, p935 * 244.953125, p935 * 139.5, p935 * 243.953125, p935 * 131.5, p935 * 212.953125);
    v1311.bezierCurveTo(p935 * 118.5, p935 * 161.953125, p935 * 69.5, p935 * 156.953125, p935 * 74.5, p935 * 92.953125);
    v1311.bezierCurveTo(p935 * 85.5, p935 * 41.953125, p935 * 158.5, p935 * 49.953125, p935 * 188.5, p935 * 7.953125);
    v1311.closePath();
    f84(v1311, p936[0]);
    return v1310;
  }
  function f216(p937, p938) {
    var v1312 = document.createElement("canvas");
    var v1313 = v1312.getContext("2d");
    v1312.width = p937 * 253;
    v1312.height = p937 * 260;
    v1313.globalAlpha = 0.5;
    f89(v1313, p937 * 126.5, p937 * 134, p937 * 119);
    f84(v1313, p938[0]);
    v1313.globalAlpha = 1;
    f89(v1313, p937 * 126.5, p937 * 124, p937 * 119);
    f84(v1313, p938[1], p938[2], p937 * 4);
    f89(v1313, p937 * 126.5, p937 * 127, p937 * 100);
    f84(v1313, p938[3]);
    v1313.globalAlpha = 0.5;
    f89(v1313, p937 * 126.5, p937 * 135, p937 * 81);
    f84(v1313, p938[0]);
    v1313.globalAlpha = 1;
    f89(v1313, p937 * 126.5, p937 * 125, p937 * 84);
    f84(v1313, p938[4], p938[5], p937 * 4);
    f89(v1313, p937 * 126.5, p937 * 125, p937 * 61);
    f84(v1313, p938[6], p938[7], p937 * 4);
    v1313.globalAlpha = 0.5;
    f89(v1313, p937 * 126.5, p937 * 134, p937 * 40);
    f84(v1313, p938[8]);
    v1313.globalAlpha = 1;
    f89(v1313, p937 * 126.5, p937 * 125, p937 * 40);
    f84(v1313, p938[9]);
    return v1312;
  }
  function f217(p939, p940) {
    var v1314 = document.createElement("canvas");
    var v1315 = v1314.getContext("2d");
    v1314.width = p939 * 48;
    v1314.height = p939 * 47;
    v1315.beginPath();
    v1315.lineCap = "round";
    v1315.lineJoin = "round";
    v1315.moveTo(p939 * 7.1875, p939 * 25.434661865234375);
    v1315.bezierCurveTo(p939 * 11.1875, p939 * 13.434661865234375, p939 * 18.1875, p939 * 8.434661865234375, p939 * 32.1875, p939 * 10.434661865234375);
    v1315.bezierCurveTo(p939 * 45.1875, p939 * 14.434661865234375, p939 * 41.1875, p939 * 24.434661865234375, p939 * 36.1875, p939 * 30.434661865234375);
    v1315.bezierCurveTo(p939 * 22.1875, p939 * 42.434661865234375, p939 * 2.1875, p939 * 41.434661865234375, p939 * 7.1875, p939 * 25.434661865234375);
    v1315.closePath();
    f84(v1315, p940[0]);
    return v1314;
  }
  function f218(p941, p942) {
    var v1316 = document.createElement("canvas");
    var v1317 = v1316.getContext("2d");
    v1316.width = p941 * 173;
    v1316.height = p941 * 178;
    v1317.globalAlpha = 0.5;
    f89(v1317, p941 * 86.5, p941 * 98, p941 * 80);
    f84(v1317, p942[0]);
    v1317.globalAlpha = 1;
    f89(v1317, p941 * 86.5, p941 * 89, p941 * 81);
    f84(v1317, p942[1], p942[2], p941 * 4);
    f89(v1317, p941 * 86.5, p941 * 86, p941 * 59);
    f84(v1317, p942[3], p942[4], p941 * 4);
    v1317.globalAlpha = 0.5;
    f89(v1317, p941 * 86.5, p941 * 95, p941 * 34);
    f84(v1317, p942[0]);
    v1317.globalAlpha = 1;
    f89(v1317, p941 * 86.5, p941 * 89, p941 * 34);
    f84(v1317, p942[5]);
    return v1316;
  }
  function f219(p943, p944) {
    var v1318 = document.createElement("canvas");
    var v1319 = v1318.getContext("2d");
    v1318.width = p943 * 120;
    v1318.height = p943 * 300;
    v1319.translate(p943 * -80, -20);
    v1319.beginPath();
    v1319.lineCap = "round";
    v1319.lineJoin = "round";
    v1319.moveTo(p943 * 200.5, p943 * 14.953125);
    v1319.bezierCurveTo(p943 * 203, p943 * 171.953125, p943 * 203, p943 * 171.953125, p943 * 205.5, p943 * 328.953125);
    v1319.bezierCurveTo(p943 * 188.5, p943 * 257.953125, p943 * 164.5, p943 * 216.953125, p943 * 166.5, p943 * 176.953125);
    v1319.bezierCurveTo(p943 * 168.5, p943 * 133.953125, p943 * 198.5, p943 * 98.953125, p943 * 200.5, p943 * 14.953125);
    v1319.closePath();
    f84(v1319, p944[0]);
    return v1318;
  }
  const v1320 = 12115140;
  const v1321 = 12115140 .ΔΔⲆⵠΔⲆⲆ;
  const v1322 = `const ΔᐃΔΔΔᐃⵠΔⵠ = (typeof ΔᐃΔᐃⵠⵠᐃ === "${v1321}") ? 1 : 0; return ΔᐃΔΔΔᐃⵠΔⵠ;`;
  function f220(p945, p946, p947) {
    var v1323 = document.createElement("canvas");
    var v1324 = v1323.getContext("2d");
    v1323.width = p945 * 345;
    v1323.height = p945 * 250;
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 105, p945 * 58);
    v1324.bezierCurveTo(p945 * 100.5, p945 * 43, p945 * 100.5, p945 * 43, p945 * 96, p945 * 28);
    v1324.bezierCurveTo(p945 * 119.5, p945 * 33.5, p945 * 119.5, p945 * 33.5, p945 * 143, p945 * 39);
    v1324.bezierCurveTo(p945 * 170, p945 * 37, p945 * 177, p945 * 37, p945 * 188, p945 * 40);
    v1324.bezierCurveTo(p945 * 213, p945 * 33.5, p945 * 213, p945 * 33.5, p945 * 238, p945 * 27);
    v1324.bezierCurveTo(p945 * 231, p945 * 52, p945 * 234, p945 * 42.5, p945 * 230, p945 * 58);
    v1324.closePath();
    f84(v1324, p947[1], p947[2], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 108, p945 * 51);
    v1324.bezierCurveTo(p945 * 91, p945 * 55, p945 * 85, p945 * 44, p945 * 86, p945 * 29);
    v1324.bezierCurveTo(p945 * 62, p945 * 50, p945 * 78, p945 * 69, p945 * 92, p945 * 75);
    v1324.closePath();
    f84(v1324, p947[3], p947[4], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 249, p945 * 27);
    v1324.bezierCurveTo(p945 * 273, p945 * 49, p945 * 262, p945 * 68, p945 * 246, p945 * 77);
    v1324.bezierCurveTo(p945 * 231, p945 * 59, p945 * 236, p945 * 66.5, p945 * 226, p945 * 56);
    v1324.bezierCurveTo(p945 * 243, p945 * 53, p945 * 252, p945 * 43, p945 * 249, p945 * 28);
    v1324.closePath();
    f84(v1324, p947[3], p947[4], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 87, p945 * 78);
    v1324.bezierCurveTo(p945 * 87, p945 * 59, p945 * 98, p945 * 46, p945 * 127, p945 * 48);
    v1324.bezierCurveTo(p945 * 176, p945 * 48.5, p945 * 176, p945 * 48.5, p945 * 225, p945 * 49);
    v1324.bezierCurveTo(p945 * 243, p945 * 49, p945 * 253, p945 * 59, p945 * 253, p945 * 76);
    v1324.bezierCurveTo(p945 * 211, p945 * 85.5, p945 * 211, p945 * 85.5, p945 * 169, p945 * 95);
    v1324.closePath();
    f84(v1324, p947[5], p947[6], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 56, p945 * 105);
    v1324.bezierCurveTo(p945 * 56, p945 * 92, p945 * 59, p945 * 86, p945 * 65, p945 * 73);
    v1324.bezierCurveTo(p945 * 62.5, p945 * 61.5, p945 * 62.5, p945 * 61.5, p945 * 60, p945 * 50);
    v1324.bezierCurveTo(p945 * 99.5, p945 * 64.5, p945 * 99.5, p945 * 64.5, p945 * 139, p945 * 79);
    v1324.bezierCurveTo(p945 * 164, p945 * 77, p945 * 177, p945 * 76, p945 * 203, p945 * 78);
    v1324.bezierCurveTo(p945 * 242, p945 * 63.5, p945 * 242, p945 * 63.5, p945 * 281, p945 * 49);
    v1324.bezierCurveTo(p945 * 279, p945 * 60.5, p945 * 279, p945 * 60.5, p945 * 277, p945 * 72);
    v1324.bezierCurveTo(p945 * 286, p945 * 88, p945 * 286, p945 * 96, p945 * 287, p945 * 104);
    v1324.bezierCurveTo(p945 * 228.5, p945 * 127, p945 * 228.5, p945 * 127, p945 * 170, p945 * 150);
    v1324.closePath();
    f84(v1324, p947[1], p947[2], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 48, p945 * 130);
    v1324.bezierCurveTo(p945 * 61, p945 * 155, p945 * 63, p945 * 165, p945 * 56, p945 * 171);
    v1324.bezierCurveTo(p945 * 48, p945 * 177, p945 * 40, p945 * 171, p945 * 38, p945 * 178);
    v1324.bezierCurveTo(p945 * 33, p945 * 180, p945 * 37, p945 * 188, p945 * 47, p945 * 208);
    v1324.bezierCurveTo(p945 * 52, p945 * 221, p945 * 55, p945 * 222, p945 * 75, p945 * 229);
    v1324.bezierCurveTo(p945 * 91, p945 * 213, p945 * 98, p945 * 212, p945 * 112, p945 * 219);
    v1324.bezierCurveTo(p945 * 167, p945 * 225, p945 * 187, p945 * 224, p945 * 222, p945 * 220);
    v1324.bezierCurveTo(p945 * 244, p945 * 214, p945 * 247, p945 * 213, p945 * 263, p945 * 229);
    v1324.bezierCurveTo(p945 * 295, p945 * 220, p945 * 291, p945 * 215, p945 * 301, p945 * 194);
    v1324.bezierCurveTo(p945 * 308, p945 * 178, p945 * 309, p945 * 176, p945 * 302, p945 * 173);
    v1324.bezierCurveTo(p945 * 290, p945 * 177, p945 * 289, p945 * 177, p945 * 283, p945 * 169);
    v1324.bezierCurveTo(p945 * 279, p945 * 163, p945 * 279, p945 * 161, p945 * 290, p945 * 130);
    v1324.bezierCurveTo(p945 * 270, p945 * 127, p945 * 270, p945 * 127, p945 * 250, p945 * 124);
    v1324.bezierCurveTo(p945 * 209, p945 * 137.5, p945 * 209, p945 * 137.5, p945 * 168, p945 * 151);
    v1324.bezierCurveTo(p945 * 121, p945 * 135, p945 * 121, p945 * 135, p945 * 74, p945 * 119);
    v1324.closePath();
    f84(v1324, p947[1], p947[2], p945 * 8);
    v1324.globalCompositeOperation = "destination-out";
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 133, p945 * 158);
    v1324.bezierCurveTo(p945 * 152, p945 * 193, p945 * 158, p945 * 205, p945 * 140, p945 * 203);
    v1324.bezierCurveTo(p945 * 99, p945 * 195, p945 * 96, p945 * 189, p945 * 86, p945 * 173);
    v1324.bezierCurveTo(p945 * 80, p945 * 159, p945 * 88, p945 * 145, p945 * 104, p945 * 141);
    v1324.closePath();
    f84(v1324, p947[7], p947[8], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 215, p945 * 146);
    v1324.bezierCurveTo(p945 * 204, p945 * 167, p945 * 204, p945 * 167, p945 * 193, p945 * 188);
    v1324.bezierCurveTo(p945 * 187, p945 * 201, p945 * 191, p945 * 209, p945 * 213, p945 * 201);
    v1324.bezierCurveTo(p945 * 247, p945 * 192, p945 * 253, p945 * 181, p945 * 257, p945 * 169);
    v1324.bezierCurveTo(p945 * 260, p945 * 157, p945 * 254, p945 * 149, p945 * 243, p945 * 141);
    v1324.closePath();
    f84(v1324, p947[7], p947[8], p945 * 8);
    v1324.globalCompositeOperation = "source-over";
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 133, p945 * 158);
    v1324.bezierCurveTo(p945 * 152, p945 * 193, p945 * 158, p945 * 205, p945 * 140, p945 * 203);
    v1324.bezierCurveTo(p945 * 99, p945 * 195, p945 * 96, p945 * 189, p945 * 86, p945 * 173);
    v1324.bezierCurveTo(p945 * 80, p945 * 159, p945 * 88, p945 * 145, p945 * 104, p945 * 141);
    v1324.closePath();
    f84(v1324, vVVVUndefined20, p947[8], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 215, p945 * 146);
    v1324.bezierCurveTo(p945 * 204, p945 * 167, p945 * 204, p945 * 167, p945 * 193, p945 * 188);
    v1324.bezierCurveTo(p945 * 187, p945 * 201, p945 * 191, p945 * 209, p945 * 213, p945 * 201);
    v1324.bezierCurveTo(p945 * 247, p945 * 192, p945 * 253, p945 * 181, p945 * 257, p945 * 169);
    v1324.bezierCurveTo(p945 * 260, p945 * 157, p945 * 254, p945 * 149, p945 * 243, p945 * 141);
    v1324.closePath();
    f84(v1324, undefined, p947[8], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 39, p945 * 66);
    v1324.bezierCurveTo(p945 * 57, p945 * 107, p945 * 63, p945 * 96, p945 * 120, p945 * 106);
    v1324.bezierCurveTo(p945 * 154, p945 * 112, p945 * 163, p945 * 116, p945 * 174, p945 * 135);
    v1324.bezierCurveTo(p945 * 180, p945 * 109, p945 * 191, p945 * 113, p945 * 237, p945 * 103);
    v1324.bezierCurveTo(p945 * 276, p945 * 100, p945 * 289, p945 * 94, p945 * 301, p945 * 67);
    v1324.bezierCurveTo(p945 * 317, p945 * 112, p945 * 301, p945 * 141, p945 * 274, p945 * 139);
    v1324.bezierCurveTo(p945 * 204, p945 * 166, p945 * 197, p945 * 169, p945 * 173, p945 * 183);
    v1324.bezierCurveTo(p945 * 170, p945 * 183, p945 * 170, p945 * 183, p945 * 167, p945 * 183);
    v1324.bezierCurveTo(p945 * 132, p945 * 160, p945 * 112, p945 * 156, p945 * 73, p945 * 141);
    v1324.bezierCurveTo(p945 * 43, p945 * 146, p945 * 27, p945 * 120, p945 * 39, p945 * 66);
    v1324.closePath();
    f84(v1324, p947[7], p947[8], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 115, p945 * 185);
    v1324.bezierCurveTo(p945 * 115, p945 * 200, p945 * 118, p945 * 206, p945 * 124, p945 * 212);
    v1324.bezierCurveTo(p945 * 133, p945 * 223, p945 * 132, p945 * 231, p945 * 121, p945 * 230);
    v1324.bezierCurveTo(p945 * 108, p945 * 226, p945 * 108, p945 * 215, p945 * 107, p945 * 209);
    v1324.bezierCurveTo(p945 * 106, p945 * 201, p945 * 110, p945 * 196, p945 * 114, p945 * 185);
    v1324.closePath();
    f84(v1324, p947[3], p947[4], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 226, p945 * 186);
    v1324.bezierCurveTo(p945 * 234, p945 * 201, p945 * 238, p945 * 209, p945 * 228, p945 * 225);
    v1324.bezierCurveTo(p945 * 223, p945 * 233, p945 * 213, p945 * 233, p945 * 211, p945 * 226);
    v1324.bezierCurveTo(p945 * 206, p945 * 219, p945 * 217, p945 * 216, p945 * 221, p945 * 207);
    v1324.bezierCurveTo(p945 * 225, p945 * 196, p945 * 225, p945 * 191, p945 * 226, p945 * 186);
    v1324.closePath();
    f84(v1324, p947[3], p947[4], p945 * 8);
    v1324.beginPath();
    v1324.lineCap = "round";
    v1324.lineJoin = "round";
    v1324.moveTo(p945 * 172, p945 * 110);
    v1324.bezierCurveTo(p945 * 189, p945 * 153, p945 * 192, p945 * 160, p945 * 188, p945 * 175);
    v1324.bezierCurveTo(p945 * 183, p945 * 190, p945 * 176, p945 * 197, p945 * 165, p945 * 191);
    v1324.bezierCurveTo(p945 * 153, p945 * 181, p945 * 152, p945 * 166, p945 * 157, p945 * 151);
    v1324.bezierCurveTo(p945 * 164.5, p945 * 131, p945 * 164.5, p945 * 131, p945 * 172, p945 * 111);
    v1324.closePath();
    f84(v1324, p947[3], p947[4], p945 * 8);
    return v1323;
  }
  function f221(p948, p949) {
    var v1325 = document.createElement("canvas");
    var v1326 = v1325.getContext("2d");
    v1325.width = p948 * 100;
    v1325.height = p948 * 100;
    v1326.globalAlpha = 0.5;
    v1326.fillStyle = p949[0];
    v1326.fillRect(0, 0, v1325.width, v1325.height);
    return v1325;
  }
  function f222(p950, p951) {
    var v1327 = document.createElement("canvas");
    var v1328 = v1327.getContext("2d");
    v1327.width = p950 * 33;
    v1327.height = p950 * 35;
    v1328.beginPath();
    v1328.lineCap = "round";
    v1328.lineJoin = "round";
    v1328.moveTo(p950 * 12.75, p950 * 7.1328125);
    v1328.bezierCurveTo(p950 * 26.75, p950 * 8.1328125, p950 * 27.75, p950 * 14.1328125, p950 * 24.75, p950 * 23.1328125);
    v1328.bezierCurveTo(p950 * 19.75, p950 * 31.1328125, p950 * 15.75, p950 * 33.1328125, p950 * 6.75, p950 * 26.1328125);
    v1328.bezierCurveTo(p950 * 0.75, p950 * 19.1328125, p950 * 4.75, p950 * 8.1328125, p950 * 12.75, p950 * 7.1328125);
    v1328.closePath();
    f84(v1328, p951[0]);
    return v1327;
  }
  function f223(p952, p953) {
    var v1329 = document.createElement("canvas");
    var v1330 = v1329.getContext("2d");
    v1329.width = p952 * 20;
    v1329.height = p952 * 35;
    f83(v1330, 0, 0, 20, 35, 7);
    f84(v1330, p953[0]);
    return v1329;
  }
  function f224(p954, p955) {
    var v1331 = document.createElement("canvas");
    var v1332 = v1331.getContext("2d");
    v1331.width = p954 * 161;
    v1331.height = p954 * 190;
    v1332.globalAlpha = 0.5;
    v1332.translate(0, 8);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 9, p954 * 93);
    v1332.bezierCurveTo(p954 * 17, p954 * 95, p954 * 19, p954 * 95, p954 * 21, p954 * 95);
    v1332.bezierCurveTo(p954 * 9, p954 * 83, p954 * 17, p954 * 93, p954 * 4, p954 * 76);
    v1332.bezierCurveTo(p954 * 11, p954 * 75, p954 * 11, p954 * 75, p954 * 18, p954 * 75);
    v1332.bezierCurveTo(p954 * 13, p954 * 67, p954 * 13, p954 * 67, p954 * 7, p954 * 59);
    v1332.bezierCurveTo(p954 * 14, p954 * 59, p954 * 14, p954 * 59, p954 * 21, p954 * 59);
    v1332.bezierCurveTo(p954 * 46, p954 * 35, p954 * 35, p954 * 45, p954 * 49, p954 * 31);
    v1332.bezierCurveTo(p954 * 53, p954 * 24, p954 * 51, p954 * 21, p954 * 51, p954 * 16);
    v1332.bezierCurveTo(p954 * 63, p954 * 23, p954 * 63, p954 * 24, p954 * 69, p954 * 29);
    v1332.bezierCurveTo(p954 * 76, p954 * 7, p954 * 75, p954 * 11, p954 * 76, p954 * 6);
    v1332.bezierCurveTo(p954 * 81, p954 * 12, p954 * 84, p954 * 18, p954 * 89, p954 * 27);
    v1332.bezierCurveTo(p954 * 95, p954 * 25, p954 * 100, p954 * 16, p954 * 105, p954 * 14);
    v1332.bezierCurveTo(p954 * 103, p954 * 25, p954 * 111, p954 * 33, p954 * 110, p954 * 34);
    v1332.bezierCurveTo(p954 * 123, p954 * 48, p954 * 123, p954 * 48, p954 * 136, p954 * 62);
    v1332.bezierCurveTo(p954 * 142, p954 * 60, p954 * 147, p954 * 59, p954 * 155, p954 * 58);
    v1332.bezierCurveTo(p954 * 147, p954 * 65, p954 * 147, p954 * 65, p954 * 139, p954 * 73);
    v1332.bezierCurveTo(p954 * 145, p954 * 73, p954 * 145, p954 * 73, p954 * 151, p954 * 73);
    v1332.bezierCurveTo(p954 * 145, p954 * 80, p954 * 145, p954 * 80, p954 * 138, p954 * 87);
    v1332.bezierCurveTo(p954 * 144, p954 * 88, p954 * 144, p954 * 88, p954 * 150, p954 * 89);
    v1332.bezierCurveTo(p954 * 125, p954 * 103, p954 * 125, p954 * 125, p954 * 113, p954 * 141);
    v1332.bezierCurveTo(p954 * 92, p954 * 178, p954 * 85, p954 * 177, p954 * 76, p954 * 178);
    v1332.bezierCurveTo(p954 * 64, p954 * 179, p954 * 51, p954 * 164, p954 * 35, p954 * 131);
    v1332.bezierCurveTo(p954 * 18, p954 * 95, p954 * 13, p954 * 99, p954 * 8, p954 * 93);
    v1332.closePath();
    f84(v1332, p955[0]);
    v1332.globalAlpha = 1;
    v1332.translate(0, -8);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 9, p954 * 93);
    v1332.bezierCurveTo(p954 * 17, p954 * 95, p954 * 19, p954 * 95, p954 * 21, p954 * 95);
    v1332.bezierCurveTo(p954 * 9, p954 * 83, p954 * 17, p954 * 93, p954 * 4, p954 * 76);
    v1332.bezierCurveTo(p954 * 11, p954 * 75, p954 * 11, p954 * 75, p954 * 18, p954 * 75);
    v1332.bezierCurveTo(p954 * 13, p954 * 67, p954 * 13, p954 * 67, p954 * 7, p954 * 59);
    v1332.bezierCurveTo(p954 * 14, p954 * 59, p954 * 14, p954 * 59, p954 * 21, p954 * 59);
    v1332.bezierCurveTo(p954 * 46, p954 * 35, p954 * 35, p954 * 45, p954 * 49, p954 * 31);
    v1332.bezierCurveTo(p954 * 53, p954 * 24, p954 * 51, p954 * 21, p954 * 51, p954 * 16);
    v1332.bezierCurveTo(p954 * 63, p954 * 23, p954 * 63, p954 * 24, p954 * 69, p954 * 29);
    v1332.bezierCurveTo(p954 * 76, p954 * 7, p954 * 75, p954 * 11, p954 * 76, p954 * 6);
    v1332.bezierCurveTo(p954 * 81, p954 * 12, p954 * 84, p954 * 18, p954 * 89, p954 * 27);
    v1332.bezierCurveTo(p954 * 95, p954 * 25, p954 * 100, p954 * 16, p954 * 105, p954 * 14);
    v1332.bezierCurveTo(p954 * 103, p954 * 25, p954 * 111, p954 * 33, p954 * 110, p954 * 34);
    v1332.bezierCurveTo(p954 * 123, p954 * 48, p954 * 123, p954 * 48, p954 * 136, p954 * 62);
    v1332.bezierCurveTo(p954 * 142, p954 * 60, p954 * 147, p954 * 59, p954 * 155, p954 * 58);
    v1332.bezierCurveTo(p954 * 147, p954 * 65, p954 * 147, p954 * 65, p954 * 139, p954 * 73);
    v1332.bezierCurveTo(p954 * 145, p954 * 73, p954 * 145, p954 * 73, p954 * 151, p954 * 73);
    v1332.bezierCurveTo(p954 * 145, p954 * 80, p954 * 145, p954 * 80, p954 * 138, p954 * 87);
    v1332.bezierCurveTo(p954 * 144, p954 * 88, p954 * 144, p954 * 88, p954 * 150, p954 * 89);
    v1332.bezierCurveTo(p954 * 125, p954 * 103, p954 * 125, p954 * 125, p954 * 113, p954 * 141);
    v1332.bezierCurveTo(p954 * 92, p954 * 178, p954 * 85, p954 * 177, p954 * 76, p954 * 178);
    v1332.bezierCurveTo(p954 * 64, p954 * 179, p954 * 51, p954 * 164, p954 * 35, p954 * 131);
    v1332.bezierCurveTo(p954 * 18, p954 * 95, p954 * 13, p954 * 99, p954 * 8, p954 * 93);
    v1332.closePath();
    f84(v1332, p955[1]);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 28, p954 * 63);
    v1332.bezierCurveTo(p954 * 23, p954 * 54, p954 * 24, p954 * 47, p954 * 26, p954 * 37);
    v1332.bezierCurveTo(p954 * 28, p954 * 29, p954 * 31, p954 * 31, p954 * 41, p954 * 35);
    v1332.bezierCurveTo(p954 * 52, p954 * 45, p954 * 55, p954 * 51, p954 * 57, p954 * 53);
    v1332.bezierCurveTo(p954 * 50, p954 * 50, p954 * 44, p954 * 47, p954 * 43, p954 * 48);
    v1332.bezierCurveTo(p954 * 43, p954 * 52, p954 * 43, p954 * 52, p954 * 42, p954 * 57);
    v1332.bezierCurveTo(p954 * 38, p954 * 54, p954 * 38, p954 * 54, p954 * 33, p954 * 51);
    v1332.bezierCurveTo(p954 * 34, p954 * 56, p954 * 34, p954 * 56, p954 * 34, p954 * 61);
    v1332.closePath();
    f84(v1332, p955[3]);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 99, p954 * 55);
    v1332.bezierCurveTo(p954 * 107, p954 * 43, p954 * 113, p954 * 39, p954 * 121, p954 * 34);
    v1332.bezierCurveTo(p954 * 130, p954 * 29, p954 * 130, p954 * 34, p954 * 130, p954 * 42);
    v1332.bezierCurveTo(p954 * 131, p954 * 57, p954 * 128, p954 * 61, p954 * 129, p954 * 63);
    v1332.bezierCurveTo(p954 * 124, p954 * 62, p954 * 124, p954 * 62, p954 * 119, p954 * 61);
    v1332.bezierCurveTo(p954 * 119, p954 * 56, p954 * 120, p954 * 61, p954 * 118, p954 * 52);
    v1332.bezierCurveTo(p954 * 115, p954 * 55, p954 * 111, p954 * 59, p954 * 111, p954 * 58);
    v1332.bezierCurveTo(p954 * 110, p954 * 54, p954 * 109, p954 * 57, p954 * 109, p954 * 51);
    v1332.closePath();
    f84(v1332, p955[3]);
    f89(v1332, p954 * 103, p954 * 110, p954 * 11);
    f84(v1332, p955[4]);
    f89(v1332, p954 * 55, p954 * 111, p954 * 11);
    f84(v1332, p955[4]);
    f89(v1332, p954 * 99, p954 * 107, p954 * 5);
    f84(v1332, p955[1]);
    f89(v1332, p954 * 51, p954 * 108, p954 * 5);
    f84(v1332, p955[1]);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 31, p954 * 121);
    v1332.bezierCurveTo(p954 * 45, p954 * 128, p954 * 51, p954 * 133, p954 * 53, p954 * 141);
    v1332.bezierCurveTo(p954 * 59, p954 * 161, p954 * 70, p954 * 173, p954 * 80, p954 * 169);
    v1332.bezierCurveTo(p954 * 89, p954 * 172, p954 * 99, p954 * 149, p954 * 107, p954 * 133);
    v1332.bezierCurveTo(p954 * 114, p954 * 122, p954 * 119, p954 * 123, p954 * 124, p954 * 119);
    v1332.bezierCurveTo(p954 * 109, p954 * 148, p954 * 117, p954 * 133, p954 * 109, p954 * 147);
    v1332.bezierCurveTo(p954 * 87, p954 * 180, p954 * 84, p954 * 179, p954 * 76, p954 * 178);
    v1332.bezierCurveTo(p954 * 49, p954 * 173, p954 * 44, p954 * 149, p954 * 31, p954 * 121);
    v1332.closePath();
    f84(v1332, p955[5]);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.translate(-2, 0);
    v1332.moveTo(p954 * 71, p954 * 162);
    v1332.bezierCurveTo(p954 * 80, p954 * 155, p954 * 85, p954 * 159, p954 * 89, p954 * 164);
    v1332.bezierCurveTo(p954 * 90, p954 * 171, p954 * 86, p954 * 173, p954 * 79, p954 * 173);
    v1332.bezierCurveTo(p954 * 67, p954 * 172, p954 * 67, p954 * 168, p954 * 71, p954 * 162);
    v1332.closePath();
    f84(v1332, p955[3]);
    v1332.translate(2, 0);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 9, p954 * 93);
    v1332.bezierCurveTo(p954 * 17, p954 * 95, p954 * 19, p954 * 95, p954 * 21, p954 * 95);
    v1332.bezierCurveTo(p954 * 9, p954 * 83, p954 * 17, p954 * 93, p954 * 4, p954 * 76);
    v1332.bezierCurveTo(p954 * 11, p954 * 75, p954 * 11, p954 * 75, p954 * 18, p954 * 75);
    v1332.bezierCurveTo(p954 * 13, p954 * 67, p954 * 13, p954 * 67, p954 * 7, p954 * 59);
    v1332.bezierCurveTo(p954 * 14, p954 * 59, p954 * 14, p954 * 59, p954 * 21, p954 * 59);
    v1332.bezierCurveTo(p954 * 46, p954 * 35, p954 * 35, p954 * 45, p954 * 49, p954 * 31);
    v1332.bezierCurveTo(p954 * 53, p954 * 24, p954 * 51, p954 * 21, p954 * 51, p954 * 16);
    v1332.bezierCurveTo(p954 * 63, p954 * 23, p954 * 63, p954 * 24, p954 * 69, p954 * 29);
    v1332.bezierCurveTo(p954 * 76, p954 * 7, p954 * 75, p954 * 11, p954 * 76, p954 * 6);
    v1332.bezierCurveTo(p954 * 81, p954 * 12, p954 * 84, p954 * 18, p954 * 89, p954 * 27);
    v1332.bezierCurveTo(p954 * 95, p954 * 25, p954 * 100, p954 * 16, p954 * 105, p954 * 14);
    v1332.bezierCurveTo(p954 * 103, p954 * 25, p954 * 111, p954 * 33, p954 * 110, p954 * 34);
    v1332.bezierCurveTo(p954 * 123, p954 * 48, p954 * 123, p954 * 48, p954 * 136, p954 * 62);
    v1332.bezierCurveTo(p954 * 142, p954 * 60, p954 * 147, p954 * 59, p954 * 155, p954 * 58);
    v1332.bezierCurveTo(p954 * 147, p954 * 65, p954 * 147, p954 * 65, p954 * 139, p954 * 73);
    v1332.bezierCurveTo(p954 * 145, p954 * 73, p954 * 145, p954 * 73, p954 * 151, p954 * 73);
    v1332.bezierCurveTo(p954 * 145, p954 * 80, p954 * 145, p954 * 80, p954 * 138, p954 * 87);
    v1332.bezierCurveTo(p954 * 144, p954 * 88, p954 * 144, p954 * 88, p954 * 150, p954 * 89);
    v1332.bezierCurveTo(p954 * 125, p954 * 103, p954 * 125, p954 * 125, p954 * 113, p954 * 141);
    v1332.bezierCurveTo(p954 * 92, p954 * 178, p954 * 85, p954 * 177, p954 * 76, p954 * 178);
    v1332.bezierCurveTo(p954 * 64, p954 * 179, p954 * 51, p954 * 164, p954 * 35, p954 * 131);
    v1332.bezierCurveTo(p954 * 18, p954 * 95, p954 * 13, p954 * 99, p954 * 8, p954 * 93);
    v1332.closePath();
    f84(v1332, undefined, p955[2], p954 * 4);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 25, p954 * 63);
    v1332.bezierCurveTo(p954 * 16, p954 * 58, p954 * 17, p954 * 51, p954 * 17, p954 * 33);
    v1332.bezierCurveTo(p954 * 19, p954 * 12, p954 * 21, p954 * 12, p954 * 32, p954 * 17);
    v1332.bezierCurveTo(p954 * 63, p954 * 31, p954 * 66, p954 * 45, p954 * 66, p954 * 54);
    f84(v1332, p955[1], p955[2], p954 * 4);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 91, p954 * 53);
    v1332.bezierCurveTo(p954 * 91, p954 * 40, p954 * 98, p954 * 33, p954 * 121, p954 * 20);
    v1332.bezierCurveTo(p954 * 137, p954 * 12, p954 * 137, p954 * 16, p954 * 139, p954 * 27);
    v1332.bezierCurveTo(p954 * 141, p954 * 49, p954 * 140, p954 * 57, p954 * 134, p954 * 64);
    f84(v1332, p955[1], p955[2], p954 * 4);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 31, p954 * 63);
    v1332.bezierCurveTo(p954 * 23, p954 * 54, p954 * 24, p954 * 47, p954 * 26, p954 * 37);
    v1332.bezierCurveTo(p954 * 28, p954 * 29, p954 * 31, p954 * 31, p954 * 41, p954 * 35);
    v1332.bezierCurveTo(p954 * 52, p954 * 45, p954 * 55, p954 * 51, p954 * 57, p954 * 53);
    v1332.bezierCurveTo(p954 * 50, p954 * 50, p954 * 44, p954 * 47, p954 * 43, p954 * 48);
    v1332.bezierCurveTo(p954 * 43, p954 * 52, p954 * 43, p954 * 52, p954 * 42, p954 * 57);
    v1332.bezierCurveTo(p954 * 38, p954 * 54, p954 * 38, p954 * 54, p954 * 33, p954 * 51);
    v1332.bezierCurveTo(p954 * 34, p954 * 56, p954 * 34, p954 * 56, p954 * 34, p954 * 61);
    v1332.closePath();
    f84(v1332, p955[3]);
    v1332.beginPath();
    v1332.lineCap = "round";
    v1332.lineJoin = "round";
    v1332.moveTo(p954 * 99, p954 * 55);
    v1332.bezierCurveTo(p954 * 107, p954 * 43, p954 * 113, p954 * 39, p954 * 121, p954 * 34);
    v1332.bezierCurveTo(p954 * 130, p954 * 29, p954 * 130, p954 * 34, p954 * 130, p954 * 42);
    v1332.bezierCurveTo(p954 * 131, p954 * 57, p954 * 128, p954 * 61, p954 * 129, p954 * 63);
    v1332.bezierCurveTo(p954 * 124, p954 * 62, p954 * 124, p954 * 62, p954 * 119, p954 * 61);
    v1332.bezierCurveTo(p954 * 119, p954 * 56, p954 * 120, p954 * 61, p954 * 118, p954 * 52);
    v1332.bezierCurveTo(p954 * 115, p954 * 55, p954 * 111, p954 * 59, p954 * 111, p954 * 58);
    v1332.bezierCurveTo(p954 * 110, p954 * 54, p954 * 109, p954 * 57, p954 * 109, p954 * 51);
    v1332.closePath();
    f84(v1332, p955[3]);
    return v1331;
  }
  const v1333 = 1;
  function f225(p956, p957, p958) {
    var v1334 = document.createElement("canvas");
    var v1335 = v1334.getContext("2d");
    v1334.width = p956 * 142;
    v1334.height = p956 * 118;
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 111, p956 * 27.3671875);
    v1335.bezierCurveTo(p956 * 128, p956 * 9.3671875, p956 * 125, p956 * 13.3671875, p956 * 126, p956 * 21.3671875);
    v1335.bezierCurveTo(p956 * 126, p956 * 33.3671875, p956 * 119, p956 * 43.3671875, p956 * 118, p956 * 42.3671875);
    v1335.closePath();
    f84(v1335, p958[3], p958[4], p956 * 4);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 31, p956 * 23.3671875);
    v1335.bezierCurveTo(p956 * 17, p956 * 15.3671875, p956 * 16, p956 * 14.3671875, p956 * 17, p956 * 20.3671875);
    v1335.bezierCurveTo(p956 * 22, p956 * 33.3671875, p956 * 20, p956 * 27.3671875, p956 * 24, p956 * 34.3671875);
    v1335.closePath();
    f84(v1335, p958[3], p958[4], p956 * 4);
    v1335.save();
    v1335.translate(p956 * 70.5, p956 * 34.8671875);
    v1335.rotate(0);
    f83(v1335, p956 * -49.5, p956 * -21.5, p956 * 99, p956 * 43, p956 * 15);
    v1335.restore();
    f84(v1335, p958[0], p958[1], p956 * 4);
    v1335.save();
    v1335.translate(p956 * 71, p956 * 40.8671875);
    v1335.rotate(0);
    f83(v1335, p956 * -49, p956 * -12.5, p956 * 98, p956 * 25, p956 * 15);
    v1335.restore();
    f84(v1335, p958[2], p958[1], p956 * 4);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 19.800003051757812, p956 * 75.95625305175781);
    v1335.bezierCurveTo(p956 * 19.300003051757812, p956 * 82.95625305175781, p956 * 19.300003051757812, p956 * 82.95625305175781, p956 * 18.800003051757812, p956 * 89.95625305175781);
    v1335.bezierCurveTo(p956 * 38.80000305175781, p956 * 115.95625305175781, p956 * 37.80000305175781, p956 * 104.95625305175781, p956 * 31.800003051757812, p956 * 91.95625305175781);
    v1335.closePath();
    f84(v1335, p958[2], p958[1], p956 * 4);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 119.80000305175781, p956 * 75.95625305175781);
    v1335.bezierCurveTo(p956 * 120.80000305175781, p956 * 82.95625305175781, p956 * 120.80000305175781, p956 * 82.95625305175781, p956 * 121.80000305175781, p956 * 89.95625305175781);
    v1335.bezierCurveTo(p956 * 101.80000305175781, p956 * 111.95625305175781, p956 * 99.80000305175781, p956 * 111.95625305175781, p956 * 112.80000305175781, p956 * 81.95625305175781);
    v1335.closePath();
    f84(v1335, p958[2], p958[1], p956 * 4);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 17.800003051757812, p956 * 49.15625);
    v1335.bezierCurveTo(p956 * 17.800003051757812, p956 * 64.15625, p956 * 17.800003051757812, p956 * 64.15625, p956 * 17.800003051757812, p956 * 79.15625);
    v1335.bezierCurveTo(p956 * 23.300003051757812, p956 * 85.15625, p956 * 23.300003051757812, p956 * 85.15625, p956 * 28.800003051757812, p956 * 91.15625);
    v1335.bezierCurveTo(p956 * 36.80000305175781, p956 * 96.15625, p956 * 32.80000305175781, p956 * 91.15625, p956 * 28.800003051757812, p956 * 77.15625);
    v1335.bezierCurveTo(p956 * 33.80000305175781, p956 * 65.15625, p956 * 33.80000305175781, p956 * 65.15625, p956 * 38.80000305175781, p956 * 53.15625);
    v1335.closePath();
    f84(v1335, p958[3], p958[4], p956 * 4);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 123.80000305175781, p956 * 53.95625305175781);
    v1335.bezierCurveTo(p956 * 121.80000305175781, p956 * 77.95625305175781, p956 * 121.80000305175781, p956 * 74.95625305175781, p956 * 121.80000305175781, p956 * 78.95625305175781);
    v1335.bezierCurveTo(p956 * 115.80000305175781, p956 * 84.95625305175781, p956 * 115.80000305175781, p956 * 84.95625305175781, p956 * 109.80000305175781, p956 * 90.95625305175781);
    v1335.bezierCurveTo(p956 * 102.80000305175781, p956 * 93.95625305175781, p956 * 105.80000305175781, p956 * 86.95625305175781, p956 * 110.80000305175781, p956 * 76.95625305175781);
    v1335.bezierCurveTo(p956 * 107.30000305175781, p956 * 65.45625305175781, p956 * 103.80000305175781, p956 * 53.95625305175781, p956 * 103.80000305175781, p956 * 53.95625305175781);
    v1335.closePath();
    f84(v1335, p958[3], p958[4], p956 * 4);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p956 * 18, p956 * 56.3671875);
    v1335.bezierCurveTo(p956 * 70, p956 * 56.8671875, p956 * 70, p956 * 56.8671875, p956 * 122, p956 * 57.3671875);
    v1335.bezierCurveTo(p956 * 137, p956 * 20.3671875, p956 * 137, p956 * 16.3671875, p956 * 126, p956 * 22.3671875);
    v1335.bezierCurveTo(p956 * 115.5, p956 * 34.3671875, p956 * 115.5, p956 * 34.3671875, p956 * 105, p956 * 46.3671875);
    v1335.bezierCurveTo(p956 * 70.5, p956 * 46.3671875, p956 * 70.5, p956 * 46.3671875, p956 * 36, p956 * 46.3671875);
    v1335.bezierCurveTo(p956 * 4, p956 * 14.3671875, p956 * 7, p956 * 18.3671875, p956 * 8, p956 * 27.3671875);
    v1335.bezierCurveTo(p956 * 12.5, p956 * 41.8671875, p956 * 12.5, p956 * 41.8671875, p956 * 17, p956 * 56.3671875);
    v1335.closePath();
    f84(v1335, p958[3], p958[4], p956 * 4);
    v1335.save();
    v1335.translate(p956 * 68.30000305175781, p956 * 41.45625305175781);
    v1335.rotate(0.76);
    f83(v1335, p956 * -20.5, p956 * -20.5, p956 * 41, p956 * 41, p956 * 10);
    v1335.restore();
    f84(v1335, undefined, p958[5], p956 * 4);
    v1335.save();
    v1335.translate(p956 * 68.80000305175781, p956 * 44.45625305175781);
    v1335.rotate(0.76);
    f83(v1335, p956 * -21, p956 * -20.5, p956 * 42, p956 * 41, p956 * 10);
    v1335.restore();
    f84(v1335, p958[3], p958[4], p956 * 4);
    v1335.save();
    v1335.translate(p956 * 69.80000305175781, p956 * 44.556243896484375);
    v1335.rotate(0.76);
    f83(v1335, p956 * -10, p956 * -10, p956 * 20, p956 * 20, p956 * 5);
    v1335.restore();
    f84(v1335, p958[6], p958[7], p956 * 4);
    return v1334;
  }
  function f226(p959, p960, p961) {
    var v1336 = document.createElement("canvas");
    var v1337 = v1336.getContext("2d");
    v1336.width = p959 * 180;
    v1336.height = p959 * 120;
    v1337.translate(p959 * -65, p959 * -35);
    v1337.globalAlpha = p960 ? 0.5 : 1;
    v1337.translate(0, p959 * 10);
    v1337.save();
    v1337.translate(p959 * 150.5, p959 * 63.84375);
    f83(v1337, p959 * -67, p959 * -16.5, p959 * 134, p959 * 33, p959 * 5);
    v1337.restore();
    f84(v1337, p961[0]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 80.5, p959 * 75.34375);
    v1337.bezierCurveTo(p959 * 83, p959 * 106.34375, p959 * 83, p959 * 106.34375, p959 * 85.5, p959 * 137.34375);
    v1337.bezierCurveTo(p959 * 93, p959 * 135.84375, p959 * 93, p959 * 135.84375, p959 * 100.5, p959 * 134.34375);
    v1337.bezierCurveTo(p959 * 99.5, p959 * 100.84375, p959 * 99.5, p959 * 100.84375, p959 * 98.5, p959 * 67.34375);
    v1337.closePath();
    f84(v1337, p961[0]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 206.5, p959 * 71.34375);
    v1337.bezierCurveTo(p959 * 203.5, p959 * 104.34375, p959 * 203.5, p959 * 104.34375, p959 * 200.5, p959 * 137.34375);
    v1337.bezierCurveTo(p959 * 208.5, p959 * 137.34375, p959 * 208.5, p959 * 137.34375, p959 * 216.5, p959 * 137.34375);
    v1337.bezierCurveTo(p959 * 219, p959 * 102.84375, p959 * 219, p959 * 102.84375, p959 * 221.5, p959 * 68.34375);
    v1337.closePath();
    f84(v1337, p961[0]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 136.5, p959 * 75.34375);
    v1337.bezierCurveTo(p959 * 139, p959 * 94.34375, p959 * 139, p959 * 94.34375, p959 * 141.5, p959 * 113.34375);
    v1337.bezierCurveTo(p959 * 149.5, p959 * 115.34375, p959 * 149.5, p959 * 115.34375, p959 * 157.5, p959 * 117.34375);
    v1337.bezierCurveTo(p959 * 162, p959 * 97.34375, p959 * 162, p959 * 97.34375, p959 * 166.5, p959 * 77.34375);
    v1337.closePath();
    f84(v1337, p961[0]);
    v1337.save();
    v1337.translate(p959 * 152.5, p959 * 80.84375);
    v1337.rotate(3.12);
    f83(v1337, p959 * -73, p959 * -20.5, p959 * 146, p959 * 41, p959 * 5);
    v1337.restore();
    f84(v1337, p961[0]);
    v1337.globalAlpha = 1;
    v1337.translate(0, p959 * -10);
    v1337.save();
    v1337.translate(p959 * 150.5, p959 * 63.84375);
    f83(v1337, p959 * -67, p959 * -16.5, p959 * 134, p959 * 33, p959 * 5);
    v1337.restore();
    f84(v1337, p961[1], p961[2], p959 * 4);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 80.5, p959 * 75.34375);
    v1337.bezierCurveTo(p959 * 83, p959 * 106.34375, p959 * 83, p959 * 106.34375, p959 * 85.5, p959 * 137.34375);
    v1337.bezierCurveTo(p959 * 93, p959 * 135.84375, p959 * 93, p959 * 135.84375, p959 * 100.5, p959 * 134.34375);
    v1337.bezierCurveTo(p959 * 99.5, p959 * 100.84375, p959 * 99.5, p959 * 100.84375, p959 * 98.5, p959 * 67.34375);
    v1337.closePath();
    f84(v1337, p961[1], p961[2], p959 * 4);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 206.5, p959 * 71.34375);
    v1337.bezierCurveTo(p959 * 203.5, p959 * 104.34375, p959 * 203.5, p959 * 104.34375, p959 * 200.5, p959 * 137.34375);
    v1337.bezierCurveTo(p959 * 208.5, p959 * 137.34375, p959 * 208.5, p959 * 137.34375, p959 * 216.5, p959 * 137.34375);
    v1337.bezierCurveTo(p959 * 219, p959 * 102.84375, p959 * 219, p959 * 102.84375, p959 * 221.5, p959 * 68.34375);
    v1337.closePath();
    f84(v1337, p961[1], p961[2], p959 * 4);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 136.5, p959 * 75.34375);
    v1337.bezierCurveTo(p959 * 139, p959 * 94.34375, p959 * 139, p959 * 94.34375, p959 * 141.5, p959 * 113.34375);
    v1337.bezierCurveTo(p959 * 149.5, p959 * 115.34375, p959 * 149.5, p959 * 115.34375, p959 * 157.5, p959 * 117.34375);
    v1337.bezierCurveTo(p959 * 162, p959 * 97.34375, p959 * 162, p959 * 97.34375, p959 * 166.5, p959 * 77.34375);
    v1337.closePath();
    f84(v1337, p961[1], p961[2], p959 * 4);
    v1337.save();
    v1337.translate(p959 * 152.5, p959 * 80.84375);
    v1337.rotate(3.12);
    f83(v1337, p959 * -73, p959 * -20.5, p959 * 146, p959 * 41, p959 * 5);
    v1337.restore();
    f84(v1337, p961[1], p961[2], p959 * 4);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 83.5, p959 * 73.34375);
    v1337.bezierCurveTo(p959 * 93.5, p959 * 70.34375, p959 * 105.5, p959 * 70.34375, p959 * 124.5, p959 * 72.34375);
    v1337.bezierCurveTo(p959 * 132.5, p959 * 78.34375, p959 * 162.5, p959 * 80.34375, p959 * 176.5, p959 * 76.34375);
    v1337.bezierCurveTo(p959 * 194.5, p959 * 69.34375, p959 * 192.5, p959 * 68.34375, p959 * 199.5, p959 * 63.34375);
    v1337.bezierCurveTo(p959 * 204.5, p959 * 63.34375, p959 * 204.5, p959 * 63.34375, p959 * 209.5, p959 * 63.34375);
    v1337.bezierCurveTo(p959 * 153.5, p959 * 82.34375, p959 * 157.5, p959 * 85.34375, p959 * 209.5, p959 * 63.34375);
    v1337.bezierCurveTo(p959 * 194.5, p959 * 88.34375, p959 * 162.5, p959 * 87.34375, p959 * 149.5, p959 * 88.34375);
    v1337.bezierCurveTo(p959 * 129.5, p959 * 81.34375, p959 * 103.5, p959 * 75.34375, p959 * 83.5, p959 * 82.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 137.5, p959 * 65.34375);
    v1337.bezierCurveTo(p959 * 150.5, p959 * 76.34375, p959 * 170.5, p959 * 71.34375, p959 * 174.5, p959 * 65.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 221.5, p959 * 85.34375);
    v1337.bezierCurveTo(p959 * 211.5, p959 * 79.34375, p959 * 191.5, p959 * 88.34375, p959 * 181.5, p959 * 96.34375);
    v1337.bezierCurveTo(p959 * 201.5, p959 * 96.34375, p959 * 201.5, p959 * 96.34375, p959 * 221.5, p959 * 96.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 84.5, p959 * 89.34375);
    v1337.bezierCurveTo(p959 * 102.5, p959 * 87.34375, p959 * 112.5, p959 * 88.34375, p959 * 119.5, p959 * 97.34375);
    v1337.bezierCurveTo(p959 * 102, p959 * 98.34375, p959 * 102, p959 * 98.34375, p959 * 84.5, p959 * 99.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 208.5, p959 * 104.34375);
    v1337.bezierCurveTo(p959 * 208.5, p959 * 110.34375, p959 * 208.5, p959 * 110.34375, p959 * 208.5, p959 * 116.34375);
    v1337.bezierCurveTo(p959 * 211.5, p959 * 110.34375, p959 * 211.5, p959 * 110.34375, p959 * 214.5, p959 * 104.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 87.5, p959 * 117.34375);
    v1337.bezierCurveTo(p959 * 92, p959 * 118.84375, p959 * 92, p959 * 118.84375, p959 * 96.5, p959 * 120.34375);
    v1337.bezierCurveTo(p959 * 93, p959 * 123.84375, p959 * 93, p959 * 123.84375, p959 * 89.5, p959 * 127.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 107.5, p959 * 51.34375);
    v1337.bezierCurveTo(p959 * 122.5, p959 * 54.34375, p959 * 122.5, p959 * 54.34375, p959 * 137.5, p959 * 57.34375);
    v1337.bezierCurveTo(p959 * 118, p959 * 57.34375, p959 * 118, p959 * 57.34375, p959 * 98.5, p959 * 57.34375);
    v1337.bezierCurveTo(p959 * 94.5, p959 * 54.84375, p959 * 94.5, p959 * 54.84375, p959 * 90.5, p959 * 52.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 170.5, p959 * 52.34375);
    v1337.bezierCurveTo(p959 * 179.5, p959 * 51.84375, p959 * 179.5, p959 * 51.84375, p959 * 188.5, p959 * 51.34375);
    v1337.bezierCurveTo(p959 * 187.5, p959 * 53.84375, p959 * 187.5, p959 * 53.84375, p959 * 186.5, p959 * 56.34375);
    v1337.bezierCurveTo(p959 * 177, p959 * 56.34375, p959 * 177, p959 * 56.34375, p959 * 167.5, p959 * 56.34375);
    v1337.closePath();
    f84(v1337, p961[3]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 80.5, p959 * 69.34375);
    v1337.bezierCurveTo(p959 * 86.5, p959 * 70.34375, p959 * 86.5, p959 * 70.34375, p959 * 92.5, p959 * 71.34375);
    v1337.bezierCurveTo(p959 * 86, p959 * 73.34375, p959 * 86, p959 * 73.34375, p959 * 79.5, p959 * 75.34375);
    v1337.closePath();
    f84(v1337, p961[2]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 222.5, p959 * 75.34375);
    v1337.bezierCurveTo(p959 * 214.5, p959 * 76.34375, p959 * 214.5, p959 * 76.34375, p959 * 206.5, p959 * 77.34375);
    v1337.bezierCurveTo(p959 * 216.5, p959 * 79.34375, p959 * 216.5, p959 * 79.34375, p959 * 226.5, p959 * 81.34375);
    v1337.closePath();
    f84(v1337, p961[2]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 116.5, p959 * 100.34375);
    v1337.bezierCurveTo(p959 * 128, p959 * 97.34375, p959 * 128, p959 * 97.34375, p959 * 139.5, p959 * 94.34375);
    v1337.bezierCurveTo(p959 * 140, p959 * 96.84375, p959 * 140, p959 * 96.84375, p959 * 140.5, p959 * 99.34375);
    v1337.closePath();
    f84(v1337, p961[2]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 112.5, p959 * 48.34375);
    v1337.bezierCurveTo(p959 * 115.5, p959 * 50.84375, p959 * 115.5, p959 * 50.84375, p959 * 118.5, p959 * 53.34375);
    v1337.bezierCurveTo(p959 * 131, p959 * 50.84375, p959 * 131, p959 * 50.84375, p959 * 143.5, p959 * 48.34375);
    v1337.closePath();
    f84(v1337, p961[2]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 216.5, p959 * 109.34375);
    v1337.bezierCurveTo(p959 * 213, p959 * 114.84375, p959 * 213, p959 * 114.84375, p959 * 209.5, p959 * 120.34375);
    v1337.bezierCurveTo(p959 * 212, p959 * 118.84375, p959 * 212, p959 * 118.84375, p959 * 214.5, p959 * 117.34375);
    v1337.closePath();
    f84(v1337, p961[2]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p959 * 86.5, p959 * 133.34375);
    v1337.bezierCurveTo(p959 * 89, p959 * 127.34375, p959 * 89, p959 * 127.34375, p959 * 91.5, p959 * 121.34375);
    v1337.bezierCurveTo(p959 * 92.5, p959 * 127.34375, p959 * 92.5, p959 * 127.34375, p959 * 93.5, p959 * 133.34375);
    v1337.closePath();
    f84(v1337, p961[2]);
    return v1336;
  }
  function f227(p962, p963) {
    var v1338 = document.createElement("canvas");
    var v1339 = v1338.getContext("2d");
    v1338.width = p962 * 85;
    v1338.height = p962 * 145;
    v1339.translate(p962 * -165, p962 * -95);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p962 * 217, p962 * 103);
    v1339.bezierCurveTo(p962 * 209, p962 * 129, p962 * 203, p962 * 137, p962 * 195, p962 * 146);
    v1339.bezierCurveTo(p962 * 195, p962 * 159, p962 * 194, p962 * 167, p962 * 189, p962 * 178);
    v1339.bezierCurveTo(p962 * 193, p962 * 186, p962 * 196, p962 * 195, p962 * 198, p962 * 216);
    v1339.bezierCurveTo(p962 * 217.5, p962 * 189.5, p962 * 217.5, p962 * 189.5, p962 * 237, p962 * 163);
    v1339.closePath();
    f84(v1339, p963[1]);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p962 * 231, p962 * 163);
    v1339.bezierCurveTo(p962 * 221, p962 * 139, p962 * 218, p962 * 128, p962 * 215, p962 * 114);
    v1339.bezierCurveTo(p962 * 213, p962 * 102, p962 * 220, p962 * 92, p962 * 222, p962 * 107);
    v1339.bezierCurveTo(p962 * 224, p962 * 118, p962 * 233, p962 * 138, p962 * 244, p962 * 161);
    v1339.bezierCurveTo(p962 * 235, p962 * 188, p962 * 224, p962 * 198, p962 * 204, p962 * 221);
    v1339.bezierCurveTo(p962 * 190, p962 * 233, p962 * 190, p962 * 235, p962 * 180, p962 * 235);
    v1339.bezierCurveTo(p962 * 167, p962 * 235, p962 * 164, p962 * 216, p962 * 175, p962 * 211);
    v1339.bezierCurveTo(p962 * 176, p962 * 208, p962 * 181, p962 * 207, p962 * 191, p962 * 205);
    v1339.bezierCurveTo(p962 * 213, p962 * 186, p962 * 218, p962 * 180, p962 * 230, p962 * 163);
    v1339.closePath();
    f84(v1339, p963[2], p963[3], p962 * 4);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p962 * 234, p962 * 154);
    v1339.bezierCurveTo(p962 * 227, p962 * 156, p962 * 222, p962 * 156, p962 * 199, p962 * 148);
    v1339.bezierCurveTo(p962 * 201, p962 * 151, p962 * 216, p962 * 159, p962 * 224, p962 * 162);
    v1339.bezierCurveTo(p962 * 209, p962 * 169.5, p962 * 209, p962 * 169.5, p962 * 194, p962 * 177);
    v1339.bezierCurveTo(p962 * 213.5, p962 * 175, p962 * 213.5, p962 * 175, p962 * 233, p962 * 173);
    v1339.closePath();
    f84(v1339, p963[2]);
    return v1338;
  }
  function f228(p964, p965, p966) {
    var v1340 = document.createElement("canvas");
    var v1341 = v1340.getContext("2d");
    v1340.width = p964 * 145;
    v1340.height = p964 * 120;
    v1341.beginPath();
    v1341.scale(0.6, 0.6);
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.translate(p964 * 18, p964 * -8);
    v1341.moveTo(p964 * 101, p964 * 72);
    v1341.bezierCurveTo(p964 * 144, p964 * 69, p964 * 149, p964 * 58, p964 * 162, p964 * 49);
    v1341.bezierCurveTo(p964 * 174, p964 * 31, p964 * 173, p964 * 38, p964 * 172, p964 * 45);
    v1341.bezierCurveTo(p964 * 168, p964 * 73, p964 * 158, p964 * 75, p964 * 152, p964 * 78);
    v1341.bezierCurveTo(p964 * 106, p964 * 89, p964 * 107, p964 * 91, p964 * 107, p964 * 94);
    v1341.bezierCurveTo(p964 * 107, p964 * 100, p964 * 107, p964 * 107, p964 * 107, p964 * 107);
    v1341.bezierCurveTo(p964 * 99, p964 * 112, p964 * 98, p964 * 110, p964 * 93, p964 * 107);
    v1341.bezierCurveTo(p964 * 94, p964 * 107, p964 * 93, p964 * 107, p964 * 93, p964 * 107);
    v1341.bezierCurveTo(p964 * 93, p964 * 100, p964 * 93, p964 * 100, p964 * 92, p964 * 94);
    v1341.bezierCurveTo(p964 * 92, p964 * 89, p964 * 90, p964 * 90, p964 * 73, p964 * 86);
    v1341.bezierCurveTo(p964 * 45, p964 * 81, p964 * 40, p964 * 77, p964 * 35, p964 * 68);
    v1341.bezierCurveTo(p964 * 23, p964 * 36, p964 * 28, p964 * 34, p964 * 36, p964 * 46);
    v1341.bezierCurveTo(p964 * 45, p964 * 58, p964 * 83, p964 * 72, p964 * 98, p964 * 72);
    v1341.closePath();
    f84(v1341, p966[4], p966[5], p964 * 4);
    v1341.beginPath();
    v1341.scale(1.1, 1.1);
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.translate(p964 * -9, p964 * 4);
    v1341.moveTo(p964 * 101, p964 * 72);
    v1341.bezierCurveTo(p964 * 144, p964 * 69, p964 * 149, p964 * 58, p964 * 162, p964 * 49);
    v1341.bezierCurveTo(p964 * 174, p964 * 31, p964 * 173, p964 * 38, p964 * 172, p964 * 45);
    v1341.bezierCurveTo(p964 * 168, p964 * 73, p964 * 158, p964 * 75, p964 * 152, p964 * 78);
    v1341.bezierCurveTo(p964 * 106, p964 * 89, p964 * 107, p964 * 91, p964 * 107, p964 * 94);
    v1341.bezierCurveTo(p964 * 107, p964 * 100, p964 * 107, p964 * 107, p964 * 107, p964 * 107);
    v1341.bezierCurveTo(p964 * 99, p964 * 112, p964 * 98, p964 * 110, p964 * 93, p964 * 107);
    v1341.bezierCurveTo(p964 * 94, p964 * 107, p964 * 93, p964 * 107, p964 * 93, p964 * 107);
    v1341.bezierCurveTo(p964 * 93, p964 * 100, p964 * 93, p964 * 100, p964 * 92, p964 * 94);
    v1341.bezierCurveTo(p964 * 92, p964 * 89, p964 * 90, p964 * 90, p964 * 73, p964 * 86);
    v1341.bezierCurveTo(p964 * 45, p964 * 81, p964 * 40, p964 * 77, p964 * 35, p964 * 68);
    v1341.bezierCurveTo(p964 * 23, p964 * 36, p964 * 28, p964 * 34, p964 * 36, p964 * 46);
    v1341.bezierCurveTo(p964 * 45, p964 * 58, p964 * 83, p964 * 72, p964 * 98, p964 * 72);
    v1341.closePath();
    f84(v1341, p966[4], p966[5], p964 * 4);
    v1341.scale(1.1, 1.1);
    v1341.translate(p964 * -9, p964 * 4);
    v1341.save();
    v1341.translate(p964 * 100, p964 * 73.06874084472656);
    v1341.rotate(0);
    f83(v1341, p964 * -61, p964 * -38.5, p964 * 122, p964 * 40, p964 * 20);
    v1341.restore();
    f84(v1341, p966[1], p966[2], p964 * 4);
    v1341.save();
    v1341.translate(p964 * 100, p964 * 71.36874389648438);
    v1341.rotate(0);
    f83(v1341, p964 * -60.5, p964 * -18, p964 * 121, p964 * 30, p964 * 20);
    v1341.restore();
    f84(v1341, p966[3], p966[2], p964 * 4);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 144, p964 * 80);
    v1341.bezierCurveTo(p964 * 152, p964 * 100, p964 * 152, p964 * 101, p964 * 153, p964 * 102);
    v1341.bezierCurveTo(p964 * 159, p964 * 100, p964 * 159, p964 * 100, p964 * 160, p964 * 100);
    v1341.bezierCurveTo(p964 * 161, p964 * 84, p964 * 161, p964 * 84, p964 * 162, p964 * 68);
    v1341.closePath();
    f84(v1341, p966[2]);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 57, p964 * 75);
    v1341.bezierCurveTo(p964 * 48, p964 * 101, p964 * 53, p964 * 89, p964 * 48, p964 * 102);
    v1341.bezierCurveTo(p964 * 44, p964 * 100, p964 * 44, p964 * 100, p964 * 39, p964 * 97);
    v1341.bezierCurveTo(p964 * 39, p964 * 83, p964 * 39, p964 * 83, p964 * 39, p964 * 69);
    v1341.closePath();
    f84(v1341, p966[2]);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 101, p964 * 72);
    v1341.bezierCurveTo(p964 * 144, p964 * 69, p964 * 149, p964 * 58, p964 * 162, p964 * 49);
    v1341.bezierCurveTo(p964 * 174, p964 * 31, p964 * 173, p964 * 38, p964 * 172, p964 * 45);
    v1341.bezierCurveTo(p964 * 168, p964 * 73, p964 * 158, p964 * 75, p964 * 152, p964 * 78);
    v1341.bezierCurveTo(p964 * 106, p964 * 89, p964 * 107, p964 * 91, p964 * 107, p964 * 94);
    v1341.bezierCurveTo(p964 * 107, p964 * 100, p964 * 107, p964 * 107, p964 * 107, p964 * 107);
    v1341.bezierCurveTo(p964 * 99, p964 * 112, p964 * 98, p964 * 110, p964 * 93, p964 * 107);
    v1341.bezierCurveTo(p964 * 94, p964 * 107, p964 * 93, p964 * 107, p964 * 93, p964 * 107);
    v1341.bezierCurveTo(p964 * 93, p964 * 100, p964 * 93, p964 * 100, p964 * 92, p964 * 94);
    v1341.bezierCurveTo(p964 * 92, p964 * 89, p964 * 90, p964 * 90, p964 * 73, p964 * 86);
    v1341.bezierCurveTo(p964 * 45, p964 * 81, p964 * 40, p964 * 77, p964 * 35, p964 * 68);
    v1341.bezierCurveTo(p964 * 23, p964 * 36, p964 * 28, p964 * 34, p964 * 36, p964 * 46);
    v1341.bezierCurveTo(p964 * 45, p964 * 58, p964 * 83, p964 * 72, p964 * 98, p964 * 72);
    v1341.closePath();
    f84(v1341, p966[4], p966[5], p964 * 4);
    v1341.translate(0, 0);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 115.5, p964 * 116.07290649414062);
    v1341.bezierCurveTo(p964 * 159.5, p964 * 99.07290649414062, p964 * 159.5, p964 * 98.07290649414062, p964 * 159.5, p964 * 98.07290649414062);
    v1341.bezierCurveTo(p964 * 155.5, p964 * 116.07290649414062, p964 * 159.5, p964 * 116.07290649414062, p964 * 159.5, p964 * 118.07290649414062);
    v1341.bezierCurveTo(p964 * 147.5, p964 * 130.07290649414062, p964 * 136.5, p964 * 132.07290649414062, p964 * 115.5, p964 * 138.07290649414062);
    v1341.closePath();
    f84(v1341, p966[3], p966[2], p964 * 4);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 39.5, p964 * 96.07290649414062);
    v1341.bezierCurveTo(p964 * 85.5, p964 * 114.07290649414062, p964 * 62.5, p964 * 105.57290649414062, p964 * 85.5, p964 * 115.07290649414062);
    v1341.bezierCurveTo(p964 * 85.5, p964 * 125.57290649414062, p964 * 85.5, p964 * 125.57290649414062, p964 * 85.5, p964 * 136.07290649414062);
    v1341.bezierCurveTo(p964 * 51.5, p964 * 129.07290649414062, p964 * 51.5, p964 * 125.07290649414062, p964 * 41.5, p964 * 118.07290649414062);
    v1341.bezierCurveTo(p964 * 44.5, p964 * 106.07290649414062, p964 * 42.5, p964 * 103.07290649414062, p964 * 40.5, p964 * 96.07290649414062);
    v1341.closePath();
    f84(v1341, p966[3], p966[2], p964 * 4);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 86, p964 * 80);
    v1341.bezierCurveTo(p964 * 97, p964 * 88, p964 * 106, p964 * 84, p964 * 112, p964 * 80);
    v1341.bezierCurveTo(p964 * 112, p964 * 62, p964 * 106, p964 * 59, p964 * 99, p964 * 54);
    v1341.bezierCurveTo(p964 * 86, p964 * 62, p964 * 86, p964 * 73, p964 * 86, p964 * 80);
    v1341.closePath();
    f84(v1341, p966[3], p966[2], p964 * 4);
    v1341.scale(0.5, 0.5);
    v1341.translate(p964 * 100, p964 * 71);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p964 * 86, p964 * 80);
    v1341.bezierCurveTo(p964 * 97, p964 * 88, p964 * 106, p964 * 84, p964 * 112, p964 * 80);
    v1341.bezierCurveTo(p964 * 112, p964 * 62, p964 * 106, p964 * 59, p964 * 99, p964 * 54);
    v1341.bezierCurveTo(p964 * 86, p964 * 62, p964 * 86, p964 * 73, p964 * 86, p964 * 80);
    v1341.closePath();
    f84(v1341, p966[6], p966[2], p964 * 4);
    return v1340;
  }
  function f229(p967, p968) {
    var v1342 = document.createElement("canvas");
    var v1343 = v1342.getContext("2d");
    v1342.width = p967 * 85;
    v1342.height = p967 * 145;
    v1343.translate(p967 * -20, p967 * -95);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p967 * 50, p967 * 105);
    v1343.bezierCurveTo(p967 * 52, p967 * 119, p967 * 64, p967 * 137, p967 * 71, p967 * 146);
    v1343.bezierCurveTo(p967 * 71, p967 * 161, p967 * 74, p967 * 169, p967 * 79, p967 * 179);
    v1343.bezierCurveTo(p967 * 68, p967 * 192, p967 * 70, p967 * 204, p967 * 69, p967 * 216);
    v1343.bezierCurveTo(p967 * 50, p967 * 189.5, p967 * 50, p967 * 189.5, p967 * 31, p967 * 163);
    v1343.closePath();
    f84(v1343, p968[1]);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p967 * 44, p967 * 106);
    v1343.bezierCurveTo(p967 * 49, p967 * 90, p967 * 58, p967 * 104, p967 * 51, p967 * 121);
    v1343.bezierCurveTo(p967 * 45, p967 * 143, p967 * 41, p967 * 151, p967 * 37, p967 * 162);
    v1343.bezierCurveTo(p967 * 48, p967 * 180, p967 * 58, p967 * 188, p967 * 76, p967 * 205);
    v1343.bezierCurveTo(p967 * 104, p967 * 209, p967 * 105, p967 * 229, p967 * 92, p967 * 235);
    v1343.bezierCurveTo(p967 * 76, p967 * 239, p967 * 75, p967 * 232, p967 * 56, p967 * 213);
    v1343.bezierCurveTo(p967 * 31, p967 * 187, p967 * 28, p967 * 176, p967 * 23, p967 * 162);
    v1343.bezierCurveTo(p967 * 38, p967 * 131, p967 * 40, p967 * 120, p967 * 44, p967 * 106);
    v1343.closePath();
    f84(v1343, p968[2], p968[3], p967 * 4);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p967 * 30, p967 * 159);
    v1343.bezierCurveTo(p967 * 46, p967 * 157, p967 * 59, p967 * 152, p967 * 68, p967 * 148);
    v1343.bezierCurveTo(p967 * 63, p967 * 155, p967 * 52, p967 * 160, p967 * 44, p967 * 164);
    v1343.bezierCurveTo(p967 * 59, p967 * 169, p967 * 66, p967 * 174, p967 * 75, p967 * 178);
    v1343.bezierCurveTo(p967 * 58, p967 * 178, p967 * 49, p967 * 175, p967 * 37, p967 * 174);
    v1343.closePath();
    f84(v1343, p968[2]);
    return v1342;
  }
  function f230(p969, p970, p971) {
    var v1344 = document.createElement("canvas");
    var v1345 = v1344.getContext("2d");
    v1344.width = p969 * 175;
    v1344.height = p969 * 106;
    v1345.globalAlpha = p970 ? 0.5 : 1;
    v1345.translate(0, p969 * 8);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 28, p969 * 67);
    v1345.bezierCurveTo(p969 * 55, p969 * 80, p969 * 126, p969 * 74, p969 * 144, p969 * 68);
    v1345.bezierCurveTo(p969 * 144.5, p969 * 75, p969 * 144.5, p969 * 75, p969 * 145, p969 * 82);
    v1345.bezierCurveTo(p969 * 114, p969 * 94, p969 * 47, p969 * 91, p969 * 28, p969 * 82);
    v1345.closePath();
    f84(v1345, p971[0]);
    v1345.globalAlpha = 1;
    v1345.translate(0, p969 * -8);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 145, p969 * 75);
    v1345.bezierCurveTo(p969 * 143, p969 * 51, p969 * 133, p969 * 29, p969 * 100, p969 * 27);
    v1345.bezierCurveTo(p969 * 52, p969 * 21, p969 * 37, p969 * 37, p969 * 31, p969 * 54);
    v1345.bezierCurveTo(p969 * 23, p969 * 78, p969 * 28, p969 * 77, p969 * 36, p969 * 79);
    v1345.bezierCurveTo(p969 * 80, p969 * 87, p969 * 120, p969 * 81, p969 * 145, p969 * 76);
    v1345.closePath();
    f84(v1345, p971[1]);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 38, p969 * 46);
    v1345.bezierCurveTo(p969 * 52, p969 * 37, p969 * 69, p969 * 36, p969 * 85, p969 * 36);
    v1345.bezierCurveTo(p969 * 118, p969 * 38, p969 * 129, p969 * 42, p969 * 137, p969 * 48);
    v1345.bezierCurveTo(p969 * 135, p969 * 45, p969 * 135, p969 * 45, p969 * 133, p969 * 42);
    v1345.bezierCurveTo(p969 * 124, p969 * 32, p969 * 116, p969 * 28, p969 * 88, p969 * 25);
    v1345.bezierCurveTo(p969 * 47, p969 * 28, p969 * 40, p969 * 32, p969 * 36, p969 * 44);
    v1345.closePath();
    f84(v1345, p971[5]);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 145, p969 * 75);
    v1345.bezierCurveTo(p969 * 143, p969 * 51, p969 * 133, p969 * 29, p969 * 100, p969 * 27);
    v1345.bezierCurveTo(p969 * 52, p969 * 21, p969 * 37, p969 * 37, p969 * 31, p969 * 54);
    v1345.bezierCurveTo(p969 * 23, p969 * 78, p969 * 28, p969 * 77, p969 * 36, p969 * 79);
    v1345.bezierCurveTo(p969 * 80, p969 * 87, p969 * 120, p969 * 81, p969 * 145, p969 * 76);
    v1345.closePath();
    f84(v1345, undefined, p971[2], p969 * 4);
    v1345.translate(0, p969 * -3);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 28, p969 * 67);
    v1345.bezierCurveTo(p969 * 55, p969 * 80, p969 * 126, p969 * 74, p969 * 144, p969 * 68);
    v1345.bezierCurveTo(p969 * 144.5, p969 * 75, p969 * 144.5, p969 * 75, p969 * 145, p969 * 82);
    v1345.bezierCurveTo(p969 * 114, p969 * 94, p969 * 47, p969 * 91, p969 * 28, p969 * 82);
    v1345.closePath();
    f84(v1345, p971[10], p971[10], p969 * 4);
    v1345.translate(0, p969 * 3);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 131, p969 * 43);
    v1345.bezierCurveTo(p969 * 145, p969 * 40, p969 * 148, p969 * 32, p969 * 147, p969 * 17);
    v1345.bezierCurveTo(p969 * 166, p969 * 39, p969 * 155, p969 * 62, p969 * 140, p969 * 67);
    v1345.bezierCurveTo(p969 * 128, p969 * 65, p969 * 128, p969 * 52, p969 * 131, p969 * 45);
    v1345.closePath();
    f84(v1345, p971[3]);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 41, p969 * 43);
    v1345.bezierCurveTo(p969 * 30, p969 * 42, p969 * 24, p969 * 33, p969 * 25, p969 * 17);
    v1345.bezierCurveTo(p969 * 7, p969 * 34, p969 * 17, p969 * 63, p969 * 33, p969 * 66);
    v1345.bezierCurveTo(p969 * 45, p969 * 59, p969 * 44, p969 * 53, p969 * 42, p969 * 44);
    v1345.closePath();
    f84(v1345, p971[3]);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 24, p969 * 19);
    v1345.bezierCurveTo(p969 * 24, p969 * 35, p969 * 35, p969 * 42, p969 * 42, p969 * 44);
    v1345.bezierCurveTo(p969 * 43, p969 * 51, p969 * 43, p969 * 48, p969 * 43, p969 * 56);
    v1345.bezierCurveTo(p969 * 25, p969 * 47, p969 * 17, p969 * 36, p969 * 23, p969 * 20);
    v1345.closePath();
    f84(v1345, p971[6]);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 148, p969 * 18);
    v1345.bezierCurveTo(p969 * 159, p969 * 44, p969 * 139, p969 * 52, p969 * 130, p969 * 55);
    v1345.bezierCurveTo(p969 * 129, p969 * 48, p969 * 129, p969 * 46, p969 * 131, p969 * 43);
    v1345.bezierCurveTo(p969 * 144, p969 * 37, p969 * 148, p969 * 35, p969 * 147, p969 * 18);
    v1345.closePath();
    f84(v1345, p971[6]);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 131, p969 * 43);
    v1345.bezierCurveTo(p969 * 145, p969 * 40, p969 * 148, p969 * 32, p969 * 147, p969 * 17);
    v1345.bezierCurveTo(p969 * 166, p969 * 39, p969 * 155, p969 * 62, p969 * 140, p969 * 67);
    v1345.bezierCurveTo(p969 * 128, p969 * 65, p969 * 128, p969 * 52, p969 * 131, p969 * 45);
    v1345.closePath();
    f84(v1345, undefined, p971[4], p969 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 41, p969 * 43);
    v1345.bezierCurveTo(p969 * 30, p969 * 42, p969 * 24, p969 * 33, p969 * 25, p969 * 17);
    v1345.bezierCurveTo(p969 * 7, p969 * 34, p969 * 17, p969 * 63, p969 * 33, p969 * 66);
    v1345.bezierCurveTo(p969 * 45, p969 * 59, p969 * 44, p969 * 53, p969 * 42, p969 * 44);
    v1345.closePath();
    f84(v1345, vVVUndefined20, p971[4], p969 * 4);
    v1345.save();
    v1345.translate(p969 * 87, p969 * 34.5);
    v1345.rotate(0);
    f83(v1345, p969 * -8, p969 * -10.5, p969 * 16, p969 * 21, p969 * 10);
    v1345.restore();
    f84(v1345, p971[7], p971[2], p969 * 4);
    v1345.save();
    v1345.translate(p969 * 87, p969 * 57);
    v1345.rotate(0);
    f83(v1345, p969 * -8, p969 * -23, p969 * 16, p969 * 46, p969 * 10);
    v1345.restore();
    f84(v1345, p971[8], p971[2], p969 * 4);
    f89(v1345, p969 * 87, p969 * 39, p969 * 4.123105625617661);
    f84(v1345, p971[9], p971[2], p969 * 4);
    f89(v1345, p969 * 87, p969 * 60, p969 * 4.242640687119285);
    f84(v1345, p971[9], p971[2], p969 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 28, p969 * 67);
    v1345.bezierCurveTo(p969 * 55, p969 * 80, p969 * 126, p969 * 74, p969 * 144, p969 * 68);
    v1345.bezierCurveTo(p969 * 144.5, p969 * 75, p969 * 144.5, p969 * 75, p969 * 145, p969 * 82);
    v1345.bezierCurveTo(p969 * 114, p969 * 94, p969 * 47, p969 * 91, p969 * 28, p969 * 82);
    v1345.closePath();
    f84(v1345, p971[8], p971[2], p969 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 27, p969 * 69);
    v1345.bezierCurveTo(p969 * 13, p969 * 77, p969 * 16, p969 * 74, p969 * 27, p969 * 80);
    v1345.closePath();
    f84(v1345, p971[9], p971[2], p969 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p969 * 145, p969 * 70);
    v1345.bezierCurveTo(p969 * 149.5, p969 * 72, p969 * 149.5, p969 * 72, p969 * 154, p969 * 74);
    v1345.bezierCurveTo(p969 * 150, p969 * 77, p969 * 150, p969 * 77, p969 * 146, p969 * 80);
    v1345.closePath();
    f84(v1345, p971[9], p971[2], p969 * 4);
    f89(v1345, p969 * 50, p969 * 80, p969 * 5);
    f84(v1345, p971[9], p971[2], p969 * 4);
    f89(v1345, p969 * 86.01141357421875, p969 * 81.76705932617188, p969 * 5);
    f84(v1345, p971[9], p971[2], p969 * 4);
    f89(v1345, p969 * 119.01141357421875, p969 * 80.13069152832031, p969 * 5);
    f84(v1345, p971[9], p971[2], p969 * 4);
    return v1344;
  }
  function f231(p972, p973, p974) {
    var v1346 = document.createElement("canvas");
    var v1347 = v1346.getContext("2d");
    v1346.width = p972 * 187;
    v1346.height = p972 * 119;
    v1347.globalAlpha = p973 ? 0.5 : 1;
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.translate(0, 3);
    v1347.moveTo(p972 * 53, p972 * 45);
    v1347.bezierCurveTo(p972 * 3, p972 * 60, p972 * 11, p972 * 72, p972 * 19, p972 * 81);
    v1347.bezierCurveTo(p972 * 28, p972 * 82, p972 * 24, p972 * 81, p972 * 29, p972 * 82);
    v1347.bezierCurveTo(p972 * 26, p972 * 87, p972 * 28, p972 * 84, p972 * 28, p972 * 87);
    v1347.bezierCurveTo(p972 * 63, p972 * 101, p972 * 92, p972 * 100, p972 * 138, p972 * 93);
    v1347.bezierCurveTo(p972 * 172, p972 * 87, p972 * 180, p972 * 72, p972 * 168, p972 * 62);
    v1347.bezierCurveTo(p972 * 154, p972 * 51, p972 * 150, p972 * 50, p972 * 148, p972 * 49);
    v1347.bezierCurveTo(p972 * 132, p972 * 42, p972 * 90, p972 * 40, p972 * 55, p972 * 45);
    v1347.closePath();
    f84(v1347, p974[5]);
    v1347.globalAlpha = 1;
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.translate(0, -3);
    v1347.moveTo(p972 * 53, p972 * 45);
    v1347.bezierCurveTo(p972 * 3, p972 * 60, p972 * 11, p972 * 72, p972 * 19, p972 * 81);
    v1347.bezierCurveTo(p972 * 28, p972 * 82, p972 * 24, p972 * 81, p972 * 29, p972 * 82);
    v1347.bezierCurveTo(p972 * 26, p972 * 87, p972 * 28, p972 * 84, p972 * 28, p972 * 87);
    v1347.bezierCurveTo(p972 * 63, p972 * 101, p972 * 92, p972 * 100, p972 * 138, p972 * 93);
    v1347.bezierCurveTo(p972 * 172, p972 * 87, p972 * 180, p972 * 72, p972 * 168, p972 * 62);
    v1347.bezierCurveTo(p972 * 154, p972 * 51, p972 * 150, p972 * 50, p972 * 148, p972 * 49);
    v1347.bezierCurveTo(p972 * 132, p972 * 42, p972 * 90, p972 * 40, p972 * 55, p972 * 45);
    v1347.closePath();
    f84(v1347, p974[0], p974[1], p972 * 4);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p972 * 151, p972 * 60);
    v1347.bezierCurveTo(p972 * 140, p972 * 36, p972 * 137, p972 * 32, p972 * 124, p972 * 29);
    v1347.bezierCurveTo(p972 * 98, p972 * 22, p972 * 80, p972 * 24, p972 * 62, p972 * 28);
    v1347.bezierCurveTo(p972 * 42, p972 * 35, p972 * 38, p972 * 46, p972 * 34, p972 * 58);
    v1347.bezierCurveTo(p972 * 53, p972 * 74, p972 * 76, p972 * 76, p972 * 91, p972 * 78);
    v1347.closePath();
    f84(v1347, p974[0], p974[1], p972 * 4);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p972 * 37, p972 * 53);
    v1347.bezierCurveTo(p972 * 30, p972 * 56, p972 * 29, p972 * 67, p972 * 30, p972 * 68);
    v1347.bezierCurveTo(p972 * 94, p972 * 108, p972 * 150, p972 * 76, p972 * 155, p972 * 70);
    v1347.bezierCurveTo(p972 * 154, p972 * 60, p972 * 151, p972 * 54, p972 * 149, p972 * 53);
    v1347.bezierCurveTo(p972 * 101, p972 * 74, p972 * 66, p972 * 66, p972 * 37, p972 * 53);
    v1347.closePath();
    f84(v1347, p974[2], p974[3], p972 * 4);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p972 * 100, p972 * 36);
    v1347.bezierCurveTo(p972 * 92, p972 * 25, p972 * 86, p972 * 28, p972 * 82, p972 * 34);
    v1347.bezierCurveTo(p972 * 88, p972 * 40, p972 * 93, p972 * 40, p972 * 98, p972 * 36);
    v1347.closePath();
    f84(v1347, p974[0], p974[1], p972 * 4);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p972 * 80, p972 * 43);
    v1347.bezierCurveTo(p972 * 69, p972 * 46, p972 * 67, p972 * 52, p972 * 69, p972 * 58);
    f84(v1347, vVVVUndefined2022, p974[1], p972 * 4);
    f89(v1347, p972 * 58, p972 * 50, p972 * 5);
    f84(v1347, p974[4]);
    f89(v1347, p972 * 43, p972 * 65, p972 * 5);
    f84(v1347, p974[4]);
    f89(v1347, p972 * 58, p972 * 73, p972 * 5);
    f84(v1347, p974[4]);
    f89(v1347, p972 * 58, p972 * 50, p972 * 2);
    f84(v1347, p974[5]);
    f89(v1347, p972 * 43, p972 * 65, p972 * 2);
    f84(v1347, p974[5]);
    f89(v1347, p972 * 58, p972 * 73, p972 * 2);
    f84(v1347, p974[5]);
    return v1346;
  }
  function f232(p975, p976, p977) {
    var v1348 = document.createElement("canvas");
    var v1349 = v1348.getContext("2d");
    v1348.width = p975 * 142;
    v1348.height = p975 * 118;
    v1349.save();
    v1349.translate(p975 * 70.16665649414062, p975 * 38.20831298828125);
    f83(v1349, p975 * -58.5, p975 * -27.5, p975 * 117, p975 * 55, p975 * 20);
    v1349.restore();
    f84(v1349, p977[0], p977[1], p975 * 4);
    v1349.save();
    v1349.translate(p975 * 70, p975 * 42.70831298828125);
    f83(v1349, p975 * -61, p975 * -20, p975 * 122, p975 * 40, p975 * 20);
    v1349.restore();
    f84(v1349, p977[2], p977[1], p975 * 4);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p975 * 123, p975 * 70.375);
    v1349.bezierCurveTo(p975 * 115, p975 * 99.375, p975 * 119, p975 * 85.375, p975 * 115, p975 * 100.375);
    v1349.bezierCurveTo(p975 * 112, p975 * 116.375, p975 * 117, p975 * 109.375, p975 * 131, p975 * 100.375);
    v1349.bezierCurveTo(p975 * 131, p975 * 83.375, p975 * 131, p975 * 83.375, p975 * 131, p975 * 66.375);
    v1349.closePath();
    f84(v1349, p977[2], p977[1], p975 * 4);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p975 * 11, p975 * 68.375);
    v1349.bezierCurveTo(p975 * 11.166656494140625, p975 * 84.375, p975 * 9, p975 * 99.375, p975 * 10, p975 * 100.375);
    v1349.bezierCurveTo(p975 * 35, p975 * 113.375, p975 * 27, p975 * 110.375, p975 * 25, p975 * 95.375);
    v1349.bezierCurveTo(p975 * 16, p975 * 68.375, p975 * 17, p975 * 69.375, p975 * 17, p975 * 68.375);
    v1349.closePath();
    f84(v1349, p977[2], p977[1], p975 * 4);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p975 * 46, p975 * 32.375);
    v1349.bezierCurveTo(p975 * 43, p975 * 8.375, p975 * 45, p975 * 7.375, p975 * 56, p975 * 6.375);
    v1349.bezierCurveTo(p975 * 105, p975 * 4.375, p975 * 102, p975 * 6.375, p975 * 97, p975 * 32.375);
    v1349.bezierCurveTo(p975 * 138, p975 * 43.375, p975 * 133, p975 * 45.375, p975 * 133, p975 * 58.375);
    v1349.bezierCurveTo(p975 * 133, p975 * 85.375, p975 * 125, p975 * 74.375, p975 * 111, p975 * 70.375);
    v1349.bezierCurveTo(p975 * 70, p975 * 69.875, p975 * 29, p975 * 69.375, p975 * 29, p975 * 69.375);
    v1349.bezierCurveTo(p975 * 7, p975 * 84.375, p975 * 7, p975 * 70.375, p975 * 7, p975 * 59.375);
    v1349.bezierCurveTo(p975 * 6, p975 * 28.375, p975 * 32, p975 * 39.375, p975 * 44, p975 * 32.375);
    v1349.closePath();
    f84(v1349, p977[2], p977[1], p975 * 4);
    f89(v1349, p975 * 71, p975 * 44.375, p975 * 16.55294535724685);
    f84(v1349, p977[2], p977[1], p975 * 4);
    f89(v1349, p975 * 71, p975 * 43.70831298828125, p975 * 8.94427190999916);
    f84(v1349, p977[2], p977[1], p975 * 4);
    return v1348;
  }
  function f233(p978, p979, p980) {
    var v1350 = (v1351 = document.createElement("canvas")).getContext("2d");
    v1351.width = p978 * 47;
    v1351.height = p978 * 60;
    var v1351;
    v1350 = (v1351 = document.createElement("canvas")).getContext("2d");
    v1351.width = p978 * 47;
    v1351.height = p978 * 60;
    f89(v1350, p978 * 23.5, p978 * 20.734375, p978 * 15.132745950421556);
    f84(v1350, vUndefined, p980[2], p978 * 4);
    f89(v1350, p978 * 23.5, p978 * 20.734375, p978 * 18.601075237738275);
    f84(v1350, vVVUndefined117, p980[1], p978 * 4);
    f89(v1350, p978 * 23.5, p978 * 20.734375, p978 * 11.40175425099138);
    f84(v1350, undefined, p980[1], p978 * 4);
    v1350.save();
    v1350.translate(p978 * 23, p978 * 38.734375);
    v1350.rotate(0);
    f83(v1350, p978 * -21.5, p978 * -19, p978 * 43, p978 * 38, p978 * 10);
    v1350.restore();
    f84(v1350, p980[2], p980[1], p978 * 4);
    v1350.save();
    v1350.translate(p978 * 23.5, p978 * 43.734375);
    v1350.rotate(0.5235987755982988);
    f87(v1350, 3, p978 * 8.06225774829855, p978 * 0);
    v1350.restore();
    f84(v1350, p980[3]);
    f89(v1350, p978 * 23.5, p978 * 35.734375, p978 * 7.0710678118654755);
    f84(v1350, p980[3]);
    return v1351;
  }
  function f234(p981, p982, p983) {
    var v1352 = document.createElement("canvas");
    var v1353 = v1352.getContext("2d");
    v1352.width = p981 * 400;
    v1352.height = p981 * 400;
    v1353.save();
    v1353.translate(p981 * 204, p981 * 195.0833282470703);
    v1353.rotate(10.16);
    f83(v1353, p981 * -97.5, p981 * -134.5, p981 * 195, p981 * 269, p981 * 10);
    v1353.restore();
    f84(v1353, p983[0], p983[1], p981 * 8);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.moveTo(p981 * 58.5, p981 * 226.5833282470703);
    v1353.bezierCurveTo(p981 * 120.5, p981 * 281.5833282470703, p981 * 120.5, p981 * 281.5833282470703, p981 * 182.5, p981 * 336.5833282470703);
    v1353.bezierCurveTo(p981 * 263, p981 * 248.5833282470703, p981 * 263, p981 * 248.5833282470703, p981 * 343.5, p981 * 160.5833282470703);
    v1353.bezierCurveTo(p981 * 280.5, p981 * 104.58332824707031, p981 * 280.5, p981 * 104.58332824707031, p981 * 217.5, p981 * 48.58332824707031);
    v1353.closePath();
    f84(v1353, p983[2], p983[3], p981 * 4);
    v1353.save();
    v1353.translate(p981 * 197, p981 * 169.0833282470703);
    v1353.rotate(10.16);
    f83(v1353, p981 * -93.5, p981 * -126.5, p981 * 187, p981 * 253, p981 * 10);
    v1353.restore();
    f84(v1353, p983[4], p983[1], p981 * 8);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.moveTo(p981 * 226.5, p981 * 24.583328247070312);
    v1353.bezierCurveTo(p981 * 58.5, p981 * 207.5833282470703, p981 * 143, p981 * 116.58332824707031, p981 * 59.5, p981 * 208.5833282470703);
    v1353.closePath();
    f84(v1353, vVVVUndefined117, p983[1], p981 * 8);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.moveTo(p981 * 46.133331298828125, p981 * 202.64999389648438);
    v1353.bezierCurveTo(p981 * 46.133331298828125, p981 * 215.64999389648438, p981 * 46.133331298828125, p981 * 215.64999389648438, p981 * 46.133331298828125, p981 * 228.64999389648438);
    v1353.closePath();
    f84(v1353, p983[4], p983[1], p981 * 8);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.moveTo(p981 * 55.133331298828125, p981 * 211.64999389648438);
    v1353.bezierCurveTo(p981 * 55.133331298828125, p981 * 225.14999389648438, p981 * 55.133331298828125, p981 * 225.14999389648438, p981 * 55.133331298828125, p981 * 238.64999389648438);
    v1353.bezierCurveTo(p981 * 50.133331298828125, p981 * 235.64999389648438, p981 * 50.133331298828125, p981 * 235.64999389648438, p981 * 45.133331298828125, p981 * 232.64999389648438);
    v1353.bezierCurveTo(p981 * 45.133331298828125, p981 * 216.64999389648438, p981 * 45.133331298828125, p981 * 216.64999389648438, p981 * 45.133331298828125, p981 * 200.64999389648438);
    v1353.closePath();
    f84(v1353, p983[4], p983[1], p981 * 8);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.moveTo(p981 * 46.133331298828125, p981 * 198.39999389648438);
    v1353.bezierCurveTo(p981 * 46.133331298828125, p981 * 199.89999389648438, p981 * 46.133331298828125, p981 * 199.89999389648438, p981 * 46.133331298828125, p981 * 201.39999389648438);
    v1353.closePath();
    f84(v1353, p983[4], p983[1], p981 * 8);
    v1353.save();
    v1353.translate(p981 * 249.63333129882812, p981 * 120.89999389648438);
    v1353.rotate(7.04);
    f83(v1353, p981 * -58.5, p981 * -32, p981 * 117, p981 * 64, p981 * 10);
    v1353.restore();
    f84(v1353, p983[5]);
    return v1352;
  }
  function f235(p984, p985, p986, p987) {
    var v1354 = document.createElement("canvas");
    var v1355 = v1354.getContext("2d");
    v1354.width = p984 * 501;
    v1354.height = p984 * 564;
    v1355.scale(0.5, 0.5);
    v1355.translate(p984 * 240, p984 * 255);
    v1355.rotate(p987);
    v1355.globalAlpha = p985 ? 0.5 : 0.2;
    f89(v1355, p984 * 174, p984 * 87.984375, p984 * 20.8806130178211);
    f84(v1355, p986[0], p986[0], p984 * 8);
    f89(v1355, p984 * 174, p984 * 87.984375, p984 * 12.165525060596439);
    f84(v1355, p986[0], p986[0], p984 * 8);
    f89(v1355, p984 * 174, p984 * 87.484375, p984 * 6);
    f84(v1355, p986[0]);
    f89(v1355, p984 * 30, p984 * 87.984375, p984 * 20.8806130178211);
    f84(v1355, p986[0], p986[0], p984 * 4);
    f89(v1355, p984 * 30, p984 * 87.984375, p984 * 12.165525060596439);
    f84(v1355, p986[0], p986[0], p984 * 4);
    f89(v1355, p984 * 30, p984 * 87.484375, p984 * 6);
    f84(v1355, p986[0]);
    f89(v1355, p984 * 100, p984 * 30, p984 * 20.8806130178211);
    f84(v1355, p986[0], p986[0], p984 * 4);
    f89(v1355, p984 * 100, p984 * 30, p984 * 12.165525060596439);
    f84(v1355, p986[0], p986[0], p984 * 4);
    f89(v1355, p984 * 100, p984 * 30, p984 * 6);
    f84(v1355, p986[0]);
    f89(v1355, p984 * 100, p984 * 130, p984 * 20.8806130178211);
    f84(v1355, p986[0], p986[0], p984 * 4);
    f89(v1355, p984 * 100, p984 * 130, p984 * 12.165525060596439);
    f84(v1355, p986[0], p986[0], p984 * 4);
    f89(v1355, p984 * 100, p984 * 130, p984 * 6);
    f84(v1355, p986[0]);
    v1355.save();
    v1355.translate(p984 * 102, p984 * 81.984375);
    v1355.rotate(0);
    f83(v1355, p984 * -74, p984 * -57, p984 * 148, p984 * 114, p984 * 23);
    v1355.restore();
    f84(v1355, p986[0], p986[0], p984 * 4);
    v1355.save();
    v1355.translate(p984 * 101, p984 * 64.984375);
    v1355.rotate(0);
    f83(v1355, p984 * -33, p984 * -10, p984 * 66, p984 * 20, p984 * 15);
    v1355.restore();
    f84(v1355, p986[0], p986[0], p984 * 4);
    v1355.save();
    v1355.translate(p984 * 102, p984 * 63.484375);
    v1355.rotate(0);
    f83(v1355, p984 * -9, p984 * -27.5, p984 * 18, p984 * 55, p984 * 15);
    v1355.restore();
    v1355.translate(5, -5);
    v1355.globalAlpha = 1;
    f89(v1355, p984 * 174, p984 * 87.984375, p984 * 20.8806130178211);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 174, p984 * 87.984375, p984 * 12.165525060596439);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 174, p984 * 87.484375, p984 * 6);
    f84(v1355, p986[2]);
    f89(v1355, p984 * 30, p984 * 87.984375, p984 * 20.8806130178211);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 30, p984 * 87.984375, p984 * 12.165525060596439);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 30, p984 * 87.484375, p984 * 6);
    f84(v1355, p986[2]);
    f89(v1355, p984 * 102, p984 * 30, p984 * 20.8806130178211);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 102, p984 * 30, p984 * 12.165525060596439);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 102, p984 * 30, p984 * 6);
    f84(v1355, p986[1]);
    f89(v1355, p984 * 102, p984 * 130, p984 * 20.8806130178211);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 102, p984 * 130, p984 * 12.165525060596439);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 102, p984 * 130, p984 * 6);
    f84(v1355, p986[1]);
    v1355.save();
    v1355.translate(p984 * 102, p984 * 81.984375);
    f83(v1355, p984 * -74, p984 * -57, p984 * 148, p984 * 114, p984 * 23);
    v1355.restore();
    f84(v1355, p986[1], p986[3], p984 * 8);
    v1355.save();
    v1355.translate(p984 * 101, p984 * 64.984375);
    f83(v1355, p984 * -33, p984 * -10, p984 * 66, p984 * 20, p984 * 15);
    v1355.restore();
    f84(v1355, p986[2], p986[1], p984 * 8);
    v1355.save();
    v1355.translate(p984 * 102, p984 * 63.484375);
    f83(v1355, p984 * -9, p984 * -27.5, p984 * 18, p984 * 55, p984 * 15);
    v1355.restore();
    f84(v1355, p986[2], p986[1], p984 * 8);
    f89(v1355, p984 * 135, p984 * 107.36605834960938, p984 * 21.095023109728988);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 135, p984 * 107.36605834960938, p984 * 13);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 135, p984 * 107.36605834960938, p984 * 6.082762530298219);
    f84(v1355, p986[2]);
    f89(v1355, p984 * 70, p984 * 107.36605834960938, p984 * 21.095023109728988);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 70, p984 * 107.36605834960938, p984 * 13);
    f84(v1355, p986[1], p986[3], p984 * 8);
    f89(v1355, p984 * 70, p984 * 107.36605834960938, p984 * 6.082762530298219);
    f84(v1355, p986[2]);
    return v1354;
  }
  function f236(p988, p989, p990) {
    var v1356 = document.createElement("canvas");
    var v1357 = v1356.getContext("2d");
    v1356.width = p988 * 170;
    v1356.height = p988 * 170;
    v1357.globalAlpha = p989 ? 0.5 : 1;
    v1357.translate(p988 * -10, p988 * 10);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p988 * 72.5, p988 * 4.109375);
    v1357.bezierCurveTo(p988 * 117, p988 * 9.609375, p988 * 117, p988 * 9.609375, p988 * 161.5, p988 * 15.109375);
    v1357.bezierCurveTo(p988 * 134.5, p988 * 106.109375, p988 * 110.5, p988 * 130.109375, p988 * 63.5, p988 * 145.109375);
    v1357.bezierCurveTo(p988 * 33.5, p988 * 120.609375, p988 * 33.5, p988 * 120.609375, p988 * 3.5, p988 * 96.109375);
    v1357.bezierCurveTo(p988 * 82.5, p988 * 75.109375, p988 * 69.5, p988 * 29.109375, p988 * 71.5, p988 * 6.109375);
    v1357.closePath();
    f84(v1357, p990[0]);
    v1357.globalAlpha = 1;
    v1357.translate(p988 * 10, p988 * -10);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p988 * 72.5, p988 * 4.109375);
    v1357.bezierCurveTo(p988 * 117, p988 * 9.609375, p988 * 117, p988 * 9.609375, p988 * 161.5, p988 * 15.109375);
    v1357.bezierCurveTo(p988 * 134.5, p988 * 106.109375, p988 * 110.5, p988 * 130.109375, p988 * 63.5, p988 * 145.109375);
    v1357.bezierCurveTo(p988 * 33.5, p988 * 120.609375, p988 * 33.5, p988 * 120.609375, p988 * 3.5, p988 * 96.109375);
    v1357.bezierCurveTo(p988 * 82.5, p988 * 75.109375, p988 * 69.5, p988 * 29.109375, p988 * 71.5, p988 * 6.109375);
    v1357.closePath();
    f84(v1357, p990[1], p990[2], p988 * 10);
    return v1356;
  }
  function f237(p991, p992) {
    var v1358 = document.createElement("canvas");
    var v1359 = v1358.getContext("2d");
    v1358.width = p991 * 271;
    v1358.height = p991 * 366;
    v1359.globalAlpha = 0.5;
    v1359.translate(0, p991 * 10);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 99);
    v1359.bezierCurveTo(p991 * 186, p991 * 123, p991 * 199, p991 * 152, p991 * 209, p991 * 169);
    v1359.bezierCurveTo(p991 * 228, p991 * 205, p991 * 224, p991 * 245, p991 * 190, p991 * 276);
    v1359.bezierCurveTo(p991 * 161, p991 * 296, p991 * 99, p991 * 292, p991 * 79, p991 * 274);
    v1359.bezierCurveTo(p991 * 49, p991 * 253, p991 * 47, p991 * 214, p991 * 50, p991 * 197);
    v1359.bezierCurveTo(p991 * 61, p991 * 143, p991 * 102, p991 * 113, p991 * 131, p991 * 99);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 73, p991 * 270);
    v1359.bezierCurveTo(p991 * 79, p991 * 280, p991 * 77, p991 * 280, p991 * 78, p991 * 287);
    v1359.bezierCurveTo(p991 * 78, p991 * 290, p991 * 83, p991 * 291, p991 * 82, p991 * 299);
    v1359.bezierCurveTo(p991 * 81, p991 * 301, p991 * 87, p991 * 301, p991 * 92, p991 * 314);
    v1359.bezierCurveTo(p991 * 94, p991 * 319, p991 * 100, p991 * 321, p991 * 107, p991 * 320);
    v1359.bezierCurveTo(p991 * 111, p991 * 323, p991 * 114, p991 * 324, p991 * 119, p991 * 320);
    v1359.bezierCurveTo(p991 * 137, p991 * 321, p991 * 146, p991 * 323, p991 * 139, p991 * 320);
    v1359.bezierCurveTo(p991 * 141, p991 * 324, p991 * 150, p991 * 324, p991 * 153, p991 * 320);
    v1359.bezierCurveTo(p991 * 168, p991 * 319, p991 * 171, p991 * 316, p991 * 173, p991 * 307);
    v1359.bezierCurveTo(p991 * 180, p991 * 305, p991 * 180, p991 * 301, p991 * 178, p991 * 296);
    v1359.bezierCurveTo(p991 * 183, p991 * 296, p991 * 185, p991 * 289, p991 * 188, p991 * 279);
    v1359.bezierCurveTo(p991 * 171, p991 * 286, p991 * 149, p991 * 290, p991 * 132, p991 * 289);
    v1359.bezierCurveTo(p991 * 101, p991 * 290, p991 * 86, p991 * 280, p991 * 74, p991 * 271);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 76, p991 * 252);
    v1359.bezierCurveTo(p991 * 85, p991 * 294, p991 * 96, p991 * 314, p991 * 103, p991 * 314);
    v1359.bezierCurveTo(p991 * 106, p991 * 316, p991 * 151, p991 * 314, p991 * 156, p991 * 314);
    v1359.bezierCurveTo(p991 * 169, p991 * 317, p991 * 182, p991 * 285, p991 * 191, p991 * 256);
    v1359.bezierCurveTo(p991 * 134.5, p991 * 254, p991 * 134.5, p991 * 254, p991 * 78, p991 * 252);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 84, p991 * 257);
    v1359.bezierCurveTo(p991 * 122, p991 * 273, p991 * 146, p991 * 268, p991 * 179, p991 * 261);
    v1359.bezierCurveTo(p991 * 190, p991 * 258, p991 * 187, p991 * 266, p991 * 178, p991 * 272);
    v1359.bezierCurveTo(p991 * 160, p991 * 284, p991 * 123, p991 * 282, p991 * 100, p991 * 277);
    v1359.bezierCurveTo(p991 * 73, p991 * 260, p991 * 79, p991 * 257, p991 * 84, p991 * 257);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 125, p991 * 65);
    v1359.bezierCurveTo(p991 * 133, p991 * 45, p991 * 136, p991 * 42, p991 * 141, p991 * 55);
    v1359.bezierCurveTo(p991 * 151, p991 * 96, p991 * 164, p991 * 117, p991 * 175, p991 * 134);
    v1359.bezierCurveTo(p991 * 203, p991 * 181, p991 * 207, p991 * 182, p991 * 208, p991 * 215);
    v1359.bezierCurveTo(p991 * 206, p991 * 240, p991 * 205, p991 * 246, p991 * 184, p991 * 258);
    v1359.bezierCurveTo(p991 * 161, p991 * 267, p991 * 131, p991 * 272, p991 * 86, p991 * 258);
    v1359.bezierCurveTo(p991 * 67, p991 * 252, p991 * 68, p991 * 239, p991 * 64, p991 * 216);
    v1359.bezierCurveTo(p991 * 62, p991 * 194, p991 * 72, p991 * 169, p991 * 92, p991 * 142);
    v1359.bezierCurveTo(p991 * 106, p991 * 121, p991 * 114, p991 * 101, p991 * 125, p991 * 65);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 115, p991 * 37);
    v1359.bezierCurveTo(p991 * 116, p991 * 28, p991 * 119, p991 * 27, p991 * 126, p991 * 37);
    v1359.bezierCurveTo(p991 * 134, p991 * 48, p991 * 134, p991 * 49, p991 * 132, p991 * 59);
    v1359.bezierCurveTo(p991 * 131, p991 * 67, p991 * 127, p991 * 65, p991 * 120, p991 * 56);
    v1359.bezierCurveTo(p991 * 114, p991 * 49, p991 * 113, p991 * 43, p991 * 115, p991 * 38);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 146, p991 * 34);
    v1359.bezierCurveTo(p991 * 152, p991 * 28, p991 * 155, p991 * 27, p991 * 157, p991 * 39);
    v1359.bezierCurveTo(p991 * 157, p991 * 45, p991 * 157, p991 * 49, p991 * 150, p991 * 56);
    v1359.bezierCurveTo(p991 * 141, p991 * 66, p991 * 138, p991 * 66, p991 * 138, p991 * 57);
    v1359.bezierCurveTo(p991 * 137, p991 * 50, p991 * 137, p991 * 47, p991 * 141, p991 * 42);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 143, p991 * 69);
    v1359.bezierCurveTo(p991 * 148, p991 * 56, p991 * 156, p991 * 50, p991 * 158, p991 * 58);
    v1359.bezierCurveTo(p991 * 159, p991 * 64, p991 * 160, p991 * 67, p991 * 153, p991 * 77);
    v1359.bezierCurveTo(p991 * 148, p991 * 83, p991 * 145, p991 * 84, p991 * 143, p991 * 77);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 149, p991 * 92);
    v1359.bezierCurveTo(p991 * 149, p991 * 89, p991 * 151, p991 * 84, p991 * 156, p991 * 79);
    v1359.bezierCurveTo(p991 * 161, p991 * 73, p991 * 163, p991 * 78, p991 * 162, p991 * 86);
    v1359.bezierCurveTo(p991 * 161, p991 * 91, p991 * 155, p991 * 99, p991 * 152, p991 * 98);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 111, p991 * 61);
    v1359.bezierCurveTo(p991 * 114, p991 * 51, p991 * 117, p991 * 51, p991 * 124, p991 * 64);
    v1359.bezierCurveTo(p991 * 128, p991 * 68, p991 * 128, p991 * 76, p991 * 126, p991 * 79);
    v1359.bezierCurveTo(p991 * 123, p991 * 84, p991 * 122, p991 * 82, p991 * 115, p991 * 74);
    v1359.bezierCurveTo(p991 * 112, p991 * 67, p991 * 115, p991 * 74, p991 * 115, p991 * 74);
    v1359.bezierCurveTo(p991 * 111, p991 * 68, p991 * 111, p991 * 66, p991 * 111, p991 * 62);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 107, p991 * 81);
    v1359.bezierCurveTo(p991 * 108, p991 * 74, p991 * 112, p991 * 73, p991 * 118, p991 * 84);
    v1359.bezierCurveTo(p991 * 122, p991 * 88, p991 * 122, p991 * 93, p991 * 121, p991 * 98);
    v1359.bezierCurveTo(p991 * 114, p991 * 98, p991 * 113, p991 * 98, p991 * 109, p991 * 90);
    v1359.bezierCurveTo(p991 * 107, p991 * 87, p991 * 106, p991 * 85, p991 * 107, p991 * 82);
    v1359.closePath();
    f84(v1359, p992[0]);
    v1359.globalAlpha = 1;
    v1359.translate(0, p991 * -10);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 99);
    v1359.bezierCurveTo(p991 * 186, p991 * 123, p991 * 199, p991 * 152, p991 * 209, p991 * 169);
    v1359.bezierCurveTo(p991 * 228, p991 * 205, p991 * 224, p991 * 245, p991 * 190, p991 * 276);
    v1359.bezierCurveTo(p991 * 161, p991 * 296, p991 * 99, p991 * 292, p991 * 79, p991 * 274);
    v1359.bezierCurveTo(p991 * 49, p991 * 253, p991 * 47, p991 * 214, p991 * 50, p991 * 197);
    v1359.bezierCurveTo(p991 * 61, p991 * 143, p991 * 102, p991 * 113, p991 * 131, p991 * 99);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 73, p991 * 270);
    v1359.bezierCurveTo(p991 * 79, p991 * 280, p991 * 77, p991 * 280, p991 * 78, p991 * 287);
    v1359.bezierCurveTo(p991 * 78, p991 * 290, p991 * 83, p991 * 291, p991 * 82, p991 * 299);
    v1359.bezierCurveTo(p991 * 81, p991 * 301, p991 * 87, p991 * 301, p991 * 92, p991 * 314);
    v1359.bezierCurveTo(p991 * 94, p991 * 319, p991 * 100, p991 * 321, p991 * 107, p991 * 320);
    v1359.bezierCurveTo(p991 * 111, p991 * 323, p991 * 114, p991 * 324, p991 * 119, p991 * 320);
    v1359.bezierCurveTo(p991 * 137, p991 * 321, p991 * 146, p991 * 323, p991 * 139, p991 * 320);
    v1359.bezierCurveTo(p991 * 141, p991 * 324, p991 * 150, p991 * 324, p991 * 153, p991 * 320);
    v1359.bezierCurveTo(p991 * 168, p991 * 319, p991 * 171, p991 * 316, p991 * 173, p991 * 307);
    v1359.bezierCurveTo(p991 * 180, p991 * 305, p991 * 180, p991 * 301, p991 * 178, p991 * 296);
    v1359.bezierCurveTo(p991 * 183, p991 * 296, p991 * 185, p991 * 289, p991 * 188, p991 * 279);
    v1359.bezierCurveTo(p991 * 171, p991 * 286, p991 * 149, p991 * 290, p991 * 132, p991 * 289);
    v1359.bezierCurveTo(p991 * 101, p991 * 290, p991 * 86, p991 * 280, p991 * 74, p991 * 271);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 76, p991 * 252);
    v1359.bezierCurveTo(p991 * 85, p991 * 294, p991 * 96, p991 * 314, p991 * 103, p991 * 314);
    v1359.bezierCurveTo(p991 * 106, p991 * 316, p991 * 151, p991 * 314, p991 * 156, p991 * 314);
    v1359.bezierCurveTo(p991 * 169, p991 * 317, p991 * 182, p991 * 285, p991 * 191, p991 * 256);
    v1359.bezierCurveTo(p991 * 134.5, p991 * 254, p991 * 134.5, p991 * 254, p991 * 78, p991 * 252);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 84, p991 * 257);
    v1359.bezierCurveTo(p991 * 122, p991 * 273, p991 * 146, p991 * 268, p991 * 179, p991 * 261);
    v1359.bezierCurveTo(p991 * 190, p991 * 258, p991 * 187, p991 * 266, p991 * 178, p991 * 272);
    v1359.bezierCurveTo(p991 * 160, p991 * 284, p991 * 123, p991 * 282, p991 * 100, p991 * 277);
    v1359.bezierCurveTo(p991 * 73, p991 * 260, p991 * 79, p991 * 257, p991 * 84, p991 * 257);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 125, p991 * 65);
    v1359.bezierCurveTo(p991 * 133, p991 * 45, p991 * 136, p991 * 42, p991 * 141, p991 * 55);
    v1359.bezierCurveTo(p991 * 151, p991 * 96, p991 * 164, p991 * 117, p991 * 175, p991 * 134);
    v1359.bezierCurveTo(p991 * 203, p991 * 181, p991 * 207, p991 * 182, p991 * 208, p991 * 215);
    v1359.bezierCurveTo(p991 * 206, p991 * 240, p991 * 205, p991 * 246, p991 * 184, p991 * 258);
    v1359.bezierCurveTo(p991 * 161, p991 * 267, p991 * 131, p991 * 272, p991 * 86, p991 * 258);
    v1359.bezierCurveTo(p991 * 67, p991 * 252, p991 * 68, p991 * 239, p991 * 64, p991 * 216);
    v1359.bezierCurveTo(p991 * 62, p991 * 194, p991 * 72, p991 * 169, p991 * 92, p991 * 142);
    v1359.bezierCurveTo(p991 * 106, p991 * 121, p991 * 114, p991 * 101, p991 * 125, p991 * 65);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 115, p991 * 37);
    v1359.bezierCurveTo(p991 * 116, p991 * 28, p991 * 119, p991 * 27, p991 * 126, p991 * 37);
    v1359.bezierCurveTo(p991 * 134, p991 * 48, p991 * 134, p991 * 49, p991 * 132, p991 * 59);
    v1359.bezierCurveTo(p991 * 131, p991 * 67, p991 * 127, p991 * 65, p991 * 120, p991 * 56);
    v1359.bezierCurveTo(p991 * 114, p991 * 49, p991 * 113, p991 * 43, p991 * 115, p991 * 38);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 146, p991 * 34);
    v1359.bezierCurveTo(p991 * 152, p991 * 28, p991 * 155, p991 * 27, p991 * 157, p991 * 39);
    v1359.bezierCurveTo(p991 * 157, p991 * 45, p991 * 157, p991 * 49, p991 * 150, p991 * 56);
    v1359.bezierCurveTo(p991 * 141, p991 * 66, p991 * 138, p991 * 66, p991 * 138, p991 * 57);
    v1359.bezierCurveTo(p991 * 137, p991 * 50, p991 * 137, p991 * 47, p991 * 141, p991 * 42);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 143, p991 * 69);
    v1359.bezierCurveTo(p991 * 148, p991 * 56, p991 * 156, p991 * 50, p991 * 158, p991 * 58);
    v1359.bezierCurveTo(p991 * 159, p991 * 64, p991 * 160, p991 * 67, p991 * 153, p991 * 77);
    v1359.bezierCurveTo(p991 * 148, p991 * 83, p991 * 145, p991 * 84, p991 * 143, p991 * 77);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 149, p991 * 92);
    v1359.bezierCurveTo(p991 * 149, p991 * 89, p991 * 151, p991 * 84, p991 * 156, p991 * 79);
    v1359.bezierCurveTo(p991 * 161, p991 * 73, p991 * 163, p991 * 78, p991 * 162, p991 * 86);
    v1359.bezierCurveTo(p991 * 161, p991 * 91, p991 * 155, p991 * 99, p991 * 152, p991 * 98);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 111, p991 * 61);
    v1359.bezierCurveTo(p991 * 114, p991 * 51, p991 * 117, p991 * 51, p991 * 124, p991 * 64);
    v1359.bezierCurveTo(p991 * 128, p991 * 68, p991 * 128, p991 * 76, p991 * 126, p991 * 79);
    v1359.bezierCurveTo(p991 * 123, p991 * 84, p991 * 122, p991 * 82, p991 * 115, p991 * 74);
    v1359.bezierCurveTo(p991 * 112, p991 * 67, p991 * 115, p991 * 74, p991 * 115, p991 * 74);
    v1359.bezierCurveTo(p991 * 111, p991 * 68, p991 * 111, p991 * 66, p991 * 111, p991 * 62);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 107, p991 * 81);
    v1359.bezierCurveTo(p991 * 108, p991 * 74, p991 * 112, p991 * 73, p991 * 118, p991 * 84);
    v1359.bezierCurveTo(p991 * 122, p991 * 88, p991 * 122, p991 * 93, p991 * 121, p991 * 98);
    v1359.bezierCurveTo(p991 * 114, p991 * 98, p991 * 113, p991 * 98, p991 * 109, p991 * 90);
    v1359.bezierCurveTo(p991 * 107, p991 * 87, p991 * 106, p991 * 85, p991 * 107, p991 * 82);
    v1359.closePath();
    f84(v1359, p992[3], p992[3], p991 * 8);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 99);
    v1359.bezierCurveTo(p991 * 186, p991 * 123, p991 * 199, p991 * 152, p991 * 209, p991 * 169);
    v1359.bezierCurveTo(p991 * 228, p991 * 205, p991 * 224, p991 * 245, p991 * 190, p991 * 276);
    v1359.bezierCurveTo(p991 * 161, p991 * 296, p991 * 99, p991 * 292, p991 * 79, p991 * 274);
    v1359.bezierCurveTo(p991 * 49, p991 * 253, p991 * 47, p991 * 214, p991 * 50, p991 * 197);
    v1359.bezierCurveTo(p991 * 61, p991 * 143, p991 * 102, p991 * 113, p991 * 131, p991 * 99);
    v1359.closePath();
    f84(v1359, p992[1]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 73, p991 * 270);
    v1359.bezierCurveTo(p991 * 79, p991 * 280, p991 * 77, p991 * 280, p991 * 78, p991 * 287);
    v1359.bezierCurveTo(p991 * 78, p991 * 290, p991 * 83, p991 * 291, p991 * 82, p991 * 299);
    v1359.bezierCurveTo(p991 * 81, p991 * 301, p991 * 87, p991 * 301, p991 * 92, p991 * 314);
    v1359.bezierCurveTo(p991 * 94, p991 * 319, p991 * 100, p991 * 321, p991 * 107, p991 * 320);
    v1359.bezierCurveTo(p991 * 111, p991 * 323, p991 * 114, p991 * 324, p991 * 119, p991 * 320);
    v1359.bezierCurveTo(p991 * 137, p991 * 321, p991 * 146, p991 * 323, p991 * 139, p991 * 320);
    v1359.bezierCurveTo(p991 * 141, p991 * 324, p991 * 150, p991 * 324, p991 * 153, p991 * 320);
    v1359.bezierCurveTo(p991 * 168, p991 * 319, p991 * 171, p991 * 316, p991 * 173, p991 * 307);
    v1359.bezierCurveTo(p991 * 180, p991 * 305, p991 * 180, p991 * 301, p991 * 178, p991 * 296);
    v1359.bezierCurveTo(p991 * 183, p991 * 296, p991 * 185, p991 * 289, p991 * 188, p991 * 279);
    v1359.bezierCurveTo(p991 * 171, p991 * 286, p991 * 149, p991 * 290, p991 * 132, p991 * 289);
    v1359.bezierCurveTo(p991 * 101, p991 * 290, p991 * 86, p991 * 280, p991 * 74, p991 * 271);
    v1359.closePath();
    f84(v1359, p992[5]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 76, p991 * 252);
    v1359.bezierCurveTo(p991 * 85, p991 * 294, p991 * 96, p991 * 314, p991 * 103, p991 * 314);
    v1359.bezierCurveTo(p991 * 106, p991 * 316, p991 * 151, p991 * 314, p991 * 156, p991 * 314);
    v1359.bezierCurveTo(p991 * 169, p991 * 317, p991 * 182, p991 * 285, p991 * 191, p991 * 256);
    v1359.bezierCurveTo(p991 * 134.5, p991 * 254, p991 * 134.5, p991 * 254, p991 * 78, p991 * 252);
    v1359.closePath();
    f84(v1359, p992[2]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 84, p991 * 257);
    v1359.bezierCurveTo(p991 * 122, p991 * 273, p991 * 146, p991 * 268, p991 * 179, p991 * 261);
    v1359.bezierCurveTo(p991 * 190, p991 * 258, p991 * 187, p991 * 266, p991 * 178, p991 * 272);
    v1359.bezierCurveTo(p991 * 160, p991 * 284, p991 * 123, p991 * 282, p991 * 100, p991 * 277);
    v1359.bezierCurveTo(p991 * 73, p991 * 260, p991 * 79, p991 * 257, p991 * 84, p991 * 257);
    v1359.closePath();
    f84(v1359, p992[1]);
    f89(v1359, p991 * 102, p991 * 269, p991 * 11);
    f84(v1359, p992[3]);
    f89(v1359, p991 * 98, p991 * 266, p991 * 5);
    f84(v1359, p992[6]);
    f89(v1359, p991 * 168, p991 * 269, p991 * 11);
    f84(v1359, p992[3]);
    f89(v1359, p991 * 164, p991 * 266, p991 * 5);
    f84(v1359, p992[6]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 125, p991 * 65);
    v1359.bezierCurveTo(p991 * 133, p991 * 45, p991 * 136, p991 * 42, p991 * 141, p991 * 55);
    v1359.bezierCurveTo(p991 * 151, p991 * 96, p991 * 164, p991 * 117, p991 * 175, p991 * 134);
    v1359.bezierCurveTo(p991 * 203, p991 * 181, p991 * 207, p991 * 182, p991 * 208, p991 * 215);
    v1359.bezierCurveTo(p991 * 206, p991 * 240, p991 * 205, p991 * 246, p991 * 184, p991 * 258);
    v1359.bezierCurveTo(p991 * 161, p991 * 267, p991 * 131, p991 * 272, p991 * 86, p991 * 258);
    v1359.bezierCurveTo(p991 * 67, p991 * 252, p991 * 68, p991 * 239, p991 * 64, p991 * 216);
    v1359.bezierCurveTo(p991 * 62, p991 * 194, p991 * 72, p991 * 169, p991 * 92, p991 * 142);
    v1359.bezierCurveTo(p991 * 106, p991 * 121, p991 * 114, p991 * 101, p991 * 125, p991 * 65);
    v1359.closePath();
    f84(v1359, p992[2]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 115, p991 * 235);
    v1359.bezierCurveTo(p991 * 118, p991 * 258, p991 * 137, p991 * 268, p991 * 148, p991 * 246);
    v1359.bezierCurveTo(p991 * 156, p991 * 228, p991 * 152, p991 * 169, p991 * 150, p991 * 140);
    v1359.bezierCurveTo(p991 * 147, p991 * 87, p991 * 143, p991 * 69, p991 * 142, p991 * 60);
    v1359.bezierCurveTo(p991 * 136, p991 * 44, p991 * 132, p991 * 43, p991 * 127, p991 * 62);
    v1359.bezierCurveTo(p991 * 119, p991 * 116, p991 * 119, p991 * 140, p991 * 116, p991 * 166);
    v1359.bezierCurveTo(p991 * 113, p991 * 202, p991 * 113, p991 * 223, p991 * 115, p991 * 233);
    v1359.closePath();
    f84(v1359, p992[4]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 132, p991 * 219);
    v1359.bezierCurveTo(p991 * 140, p991 * 229, p991 * 142, p991 * 231, p991 * 145, p991 * 237);
    v1359.bezierCurveTo(p991 * 145, p991 * 245, p991 * 139, p991 * 249, p991 * 133, p991 * 249);
    v1359.bezierCurveTo(p991 * 123, p991 * 248, p991 * 123, p991 * 243, p991 * 121, p991 * 239);
    v1359.bezierCurveTo(p991 * 126, p991 * 227, p991 * 129, p991 * 223, p991 * 132, p991 * 219);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 179);
    v1359.bezierCurveTo(p991 * 140, p991 * 188.5, p991 * 140, p991 * 188.5, p991 * 147, p991 * 198);
    v1359.bezierCurveTo(p991 * 148, p991 * 209, p991 * 142, p991 * 214, p991 * 133, p991 * 214);
    v1359.bezierCurveTo(p991 * 121, p991 * 211, p991 * 121, p991 * 207, p991 * 120, p991 * 200);
    v1359.bezierCurveTo(p991 * 126.5, p991 * 189.5, p991 * 126.5, p991 * 189.5, p991 * 133, p991 * 179);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 143);
    v1359.bezierCurveTo(p991 * 139, p991 * 151.5, p991 * 139, p991 * 151.5, p991 * 145, p991 * 160);
    v1359.bezierCurveTo(p991 * 143, p991 * 167, p991 * 140, p991 * 170, p991 * 134, p991 * 170);
    v1359.bezierCurveTo(p991 * 128, p991 * 169, p991 * 124, p991 * 167, p991 * 123, p991 * 161);
    v1359.bezierCurveTo(p991 * 128, p991 * 152, p991 * 128, p991 * 152, p991 * 133, p991 * 143);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 115);
    v1359.bezierCurveTo(p991 * 137.5, p991 * 121.5, p991 * 137.5, p991 * 121.5, p991 * 142, p991 * 128);
    v1359.bezierCurveTo(p991 * 141, p991 * 133, p991 * 138, p991 * 135, p991 * 133, p991 * 135);
    v1359.bezierCurveTo(p991 * 129, p991 * 135, p991 * 125, p991 * 132, p991 * 125, p991 * 129);
    v1359.bezierCurveTo(p991 * 129, p991 * 122, p991 * 129, p991 * 122, p991 * 133, p991 * 115);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 133, p991 * 94);
    v1359.bezierCurveTo(p991 * 136.5, p991 * 98.5, p991 * 136.5, p991 * 98.5, p991 * 140, p991 * 103);
    v1359.bezierCurveTo(p991 * 139, p991 * 109, p991 * 137, p991 * 109, p991 * 133, p991 * 110);
    v1359.bezierCurveTo(p991 * 127, p991 * 108, p991 * 129, p991 * 107, p991 * 127, p991 * 105);
    v1359.bezierCurveTo(p991 * 130, p991 * 99.5, p991 * 130, p991 * 99.5, p991 * 133, p991 * 94);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 130, p991 * 279);
    v1359.bezierCurveTo(p991 * 136.5, p991 * 287.5, p991 * 136.5, p991 * 287.5, p991 * 143, p991 * 296);
    v1359.bezierCurveTo(p991 * 143, p991 * 302, p991 * 139, p991 * 309, p991 * 131, p991 * 308);
    v1359.bezierCurveTo(p991 * 123, p991 * 306, p991 * 121, p991 * 303, p991 * 120, p991 * 297);
    v1359.bezierCurveTo(p991 * 125.5, p991 * 288.5, p991 * 125.5, p991 * 288.5, p991 * 131, p991 * 280);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 147, p991 * 303);
    v1359.bezierCurveTo(p991 * 151, p991 * 311, p991 * 151, p991 * 319, p991 * 147, p991 * 321);
    v1359.bezierCurveTo(p991 * 138, p991 * 320, p991 * 145, p991 * 308, p991 * 147, p991 * 303);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 115, p991 * 303);
    v1359.bezierCurveTo(p991 * 115, p991 * 312, p991 * 118, p991 * 319, p991 * 115, p991 * 319);
    v1359.bezierCurveTo(p991 * 112, p991 * 324, p991 * 109, p991 * 318, p991 * 109, p991 * 314);
    v1359.bezierCurveTo(p991 * 109, p991 * 308, p991 * 112, p991 * 303, p991 * 115, p991 * 303);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 89, p991 * 280);
    v1359.bezierCurveTo(p991 * 83, p991 * 279, p991 * 80, p991 * 281, p991 * 81, p991 * 286);
    v1359.bezierCurveTo(p991 * 83, p991 * 290, p991 * 84, p991 * 290, p991 * 87, p991 * 286);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 94, p991 * 290);
    v1359.bezierCurveTo(p991 * 93, p991 * 294, p991 * 90, p991 * 303, p991 * 86, p991 * 298);
    v1359.bezierCurveTo(p991 * 84, p991 * 295, p991 * 84, p991 * 291, p991 * 89, p991 * 291);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 163, p991 * 295);
    v1359.bezierCurveTo(p991 * 175, p991 * 294, p991 * 176, p991 * 296, p991 * 175, p991 * 301);
    v1359.bezierCurveTo(p991 * 174, p991 * 305, p991 * 171, p991 * 305, p991 * 166, p991 * 300);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 172, p991 * 286);
    v1359.bezierCurveTo(p991 * 180, p991 * 285, p991 * 181, p991 * 285, p991 * 180, p991 * 291);
    v1359.bezierCurveTo(p991 * 176, p991 * 295, p991 * 174, p991 * 294, p991 * 172, p991 * 286);
    v1359.closePath();
    f84(v1359, p992[8]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 115, p991 * 37);
    v1359.bezierCurveTo(p991 * 116, p991 * 28, p991 * 119, p991 * 27, p991 * 126, p991 * 37);
    v1359.bezierCurveTo(p991 * 134, p991 * 48, p991 * 134, p991 * 49, p991 * 132, p991 * 59);
    v1359.bezierCurveTo(p991 * 131, p991 * 67, p991 * 127, p991 * 65, p991 * 120, p991 * 56);
    v1359.bezierCurveTo(p991 * 114, p991 * 49, p991 * 113, p991 * 43, p991 * 115, p991 * 38);
    v1359.closePath();
    f84(v1359, p992[7]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 146, p991 * 34);
    v1359.bezierCurveTo(p991 * 152, p991 * 28, p991 * 155, p991 * 27, p991 * 157, p991 * 39);
    v1359.bezierCurveTo(p991 * 157, p991 * 45, p991 * 157, p991 * 49, p991 * 150, p991 * 56);
    v1359.bezierCurveTo(p991 * 141, p991 * 66, p991 * 138, p991 * 66, p991 * 138, p991 * 57);
    v1359.bezierCurveTo(p991 * 137, p991 * 50, p991 * 137, p991 * 47, p991 * 141, p991 * 42);
    v1359.closePath();
    f84(v1359, p992[7]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 143, p991 * 69);
    v1359.bezierCurveTo(p991 * 148, p991 * 56, p991 * 156, p991 * 50, p991 * 158, p991 * 58);
    v1359.bezierCurveTo(p991 * 159, p991 * 64, p991 * 160, p991 * 67, p991 * 153, p991 * 77);
    v1359.bezierCurveTo(p991 * 148, p991 * 83, p991 * 145, p991 * 84, p991 * 143, p991 * 77);
    v1359.closePath();
    f84(v1359, p992[7]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 149, p991 * 92);
    v1359.bezierCurveTo(p991 * 149, p991 * 89, p991 * 151, p991 * 84, p991 * 156, p991 * 79);
    v1359.bezierCurveTo(p991 * 161, p991 * 73, p991 * 163, p991 * 78, p991 * 162, p991 * 86);
    v1359.bezierCurveTo(p991 * 161, p991 * 91, p991 * 155, p991 * 99, p991 * 152, p991 * 98);
    v1359.closePath();
    f84(v1359, p992[7]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 111, p991 * 61);
    v1359.bezierCurveTo(p991 * 114, p991 * 51, p991 * 117, p991 * 51, p991 * 124, p991 * 64);
    v1359.bezierCurveTo(p991 * 128, p991 * 68, p991 * 128, p991 * 76, p991 * 126, p991 * 79);
    v1359.bezierCurveTo(p991 * 123, p991 * 84, p991 * 122, p991 * 82, p991 * 115, p991 * 74);
    v1359.bezierCurveTo(p991 * 112, p991 * 67, p991 * 115, p991 * 74, p991 * 115, p991 * 74);
    v1359.bezierCurveTo(p991 * 111, p991 * 68, p991 * 111, p991 * 66, p991 * 111, p991 * 62);
    v1359.closePath();
    f84(v1359, p992[7]);
    v1359.beginPath();
    v1359.lineCap = "round";
    v1359.lineJoin = "round";
    v1359.moveTo(p991 * 107, p991 * 81);
    v1359.bezierCurveTo(p991 * 108, p991 * 74, p991 * 112, p991 * 73, p991 * 118, p991 * 84);
    v1359.bezierCurveTo(p991 * 122, p991 * 88, p991 * 122, p991 * 93, p991 * 121, p991 * 98);
    v1359.bezierCurveTo(p991 * 114, p991 * 98, p991 * 113, p991 * 98, p991 * 109, p991 * 90);
    v1359.bezierCurveTo(p991 * 107, p991 * 87, p991 * 106, p991 * 85, p991 * 107, p991 * 82);
    v1359.closePath();
    f84(v1359, p992[7]);
    return v1358;
  }
  const v1360 = 4;
  function f238(p993, p994, p995) {
    var v1361 = document.createElement("canvas");
    var v1362 = v1361.getContext("2d");
    v1361.width = p993 * 95;
    v1361.height = p993 * 85;
    if (p995 == 0) {
      v1362.translate(p993 * 7, p993 * 15);
      v1362.scale(0.9, 0.9);
      v1362.save();
      f83(v1362, p993 * 0, p993 * 5, p993 * 90, p993 * 60, 10);
      f84(v1362, p994[0]);
      v1362.globalCompositeOperation = "destination-out";
      f89(v1362, p993 * 25, p993 * 40, p993 * 10);
      v1362.fill();
      f89(v1362, p993 * 65, p993 * 40, p993 * 10);
      v1362.fill();
      v1362.restore();
      v1362.save();
      f83(v1362, 0, 0, p993 * 90, p993 * 60, p993 * 10);
      f84(v1362, p994[1]);
      v1362.globalCompositeOperation = "destination-out";
      f89(v1362, p993 * 25, p993 * 40, p993 * 10);
      v1362.fill();
      f89(v1362, p993 * 65, p993 * 40, p993 * 10);
      v1362.fill();
      v1362.restore();
    } else if (p995 == 1) {
      v1362.scale(0.8, 0.8);
      v1362.translate(p993 * 15, p993 * 33);
      v1362.save();
      v1362.scale(0.56, 0.56);
      v1362.translate(p993 * -39, p993 * -60);
      v1362.beginPath();
      v1362.lineCap = "round";
      v1362.lineJoin = "round";
      v1362.moveTo(p993 * 32.5, p993 * 50.642852783203125);
      v1362.bezierCurveTo(p993 * 83, p993 * 69.64285278320312, p993 * 83, p993 * 69.64285278320312, p993 * 133.5, p993 * 88.64285278320312);
      v1362.bezierCurveTo(p993 * 93, p993 * 92.64285278320312, p993 * 93, p993 * 92.64285278320312, p993 * 52.5, p993 * 96.64285278320312);
      v1362.bezierCurveTo(p993 * 30.5, p993 * 100.64285278320312, p993 * 36.5, p993 * 94.64285278320312, p993 * 32.5, p993 * 84.64285278320312);
      v1362.bezierCurveTo(p993 * 21.5, p993 * 45.642852783203125, p993 * 24.5, p993 * 48.642852783203125, p993 * 31.5, p993 * 50.642852783203125);
      v1362.closePath();
      f84(v1362, p994[1]);
      v1362.beginPath();
      v1362.lineCap = "round";
      v1362.lineJoin = "round";
      v1362.moveTo(p993 * 116.5, p993 * 85.64285278320312);
      v1362.bezierCurveTo(p993 * 160.5, p993 * 67.14285278320312, p993 * 160.5, p993 * 67.14285278320312, p993 * 204.5, p993 * 48.642852783203125);
      v1362.bezierCurveTo(p993 * 220.5, p993 * 42.642852783203125, p993 * 208.5, p993 * 68.64285278320312, p993 * 205.5, p993 * 85.64285278320312);
      v1362.bezierCurveTo(p993 * 202.5, p993 * 98.64285278320312, p993 * 199.5, p993 * 98.64285278320312, p993 * 188.5, p993 * 100.64285278320312);
      v1362.closePath();
      f84(v1362, p994[1]);
      v1362.beginPath();
      v1362.lineCap = "round";
      v1362.lineJoin = "round";
      v1362.moveTo(p993 * 166.5, p993 * 68.64285278320312);
      v1362.bezierCurveTo(p993 * 147.5, p993 * 72.64285278320312, p993 * 145.5, p993 * 73.64285278320312, p993 * 142.5, p993 * 62.642852783203125);
      v1362.bezierCurveTo(p993 * 121.5, p993 * 12.642852783203125, p993 * 122.5, p993 * 5.642852783203125, p993 * 117.5, p993 * 15.642852783203125);
      v1362.bezierCurveTo(p993 * 105.5, p993 * 40.642852783203125, p993 * 105.5, p993 * 40.642852783203125, p993 * 93.5, p993 * 65.64285278320312);
      v1362.bezierCurveTo(p993 * 89.5, p993 * 74.64285278320312, p993 * 84.5, p993 * 72.64285278320312, p993 * 73.5, p993 * 74.64285278320312);
      v1362.bezierCurveTo(p993 * 98, p993 * 87.64285278320312, p993 * 98, p993 * 87.64285278320312, p993 * 122.5, p993 * 100.64285278320312);
      v1362.closePath();
      f84(v1362, p994[1]);
      v1362.restore();
      v1362.save();
      f83(v1362, 0, p993 * 15, p993 * 90, p993 * 50, p993 * 10);
      f84(v1362, p994[0]);
      f83(v1362, 0, p993 * 10, p993 * 90, p993 * 50, p993 * 10);
      f84(v1362, p994[1]);
      v1362.globalCompositeOperation = "destination-out";
      f89(v1362, p993 * 25, p993 * 40, p993 * 10);
      v1362.fill();
      f89(v1362, p993 * 65, p993 * 40, p993 * 10);
      v1362.fill();
      v1362.restore();
    }
    return v1361;
  }
  function f239(p996, p997, p998) {
    var v1363 = document.createElement("canvas");
    var v1364 = v1363.getContext("2d");
    v1363.width = p996 * 120;
    v1363.height = p996 * 100;
    f83(v1364, p996 * 10, p996 * 10, p996 * 95, p996 * 80, p996 * 10);
    f84(v1364, p997[2]);
    f83(v1364, p996 * 10, p996 * 5, p996 * 95, p996 * 80, p996 * 10);
    f84(v1364, p997[3], p997[4], p996 * 4);
    if (p998 == 0) {
      var vF238 = f238(p996 * 0.75, p997, 0);
      v1364.drawImage(vF238, p996 * 22, p996 * 18);
    } else if (p998 == 1) {
      vF238 = f238(p996 * 0.75, p997, 1);
      v1364.drawImage(vF238, p996 * 22, p996 * 18);
    }
    return v1363;
  }
  const v1365 = 4;
  function f240(p999, p1000, p1001) {
    var v1366 = document.createElement("canvas");
    var v1367 = v1366.getContext("2d");
    v1366.width = p999 * 89;
    v1366.height = p999 * 89;
    v1367.save();
    v1367.translate(p999 * 44.5, p999 * 44.5);
    f87(v1367, 6, p999 * 40, p999 * 10);
    v1367.restore();
    f84(v1367, p1001[0], p1001[1], p999 * 5);
    v1367.save();
    v1367.translate(p999 * 44.5, p999 * 44.5);
    f87(v1367, 6, p999 * 25.11521001172521, p999 * 10);
    v1367.restore();
    f84(v1367, p1001[2], p1001[3], p999 * 5);
    return v1366;
  }
  function f241(p1002, p1003, p1004) {
    var v1368 = document.createElement("canvas");
    var v1369 = v1368.getContext("2d");
    v1368.width = p1002 * 105;
    v1368.height = p1002 * 144;
    v1369.globalAlpha = p1003 ? 0.5 : 1;
    v1369.translate(p1002 * -5, p1002 * 0);
    v1369.save();
    v1369.translate(p1002 * 52.5, p1002 * 91.5);
    f83(v1369, p1002 * -4.5, p1002 * -39, p1002 * 9, p1002 * 78, p1002 * 5);
    v1369.restore();
    f84(v1369, p1004[0], p1004[0], p1002 * 3);
    v1369.save();
    v1369.translate(p1002 * 53, p1002 * 36);
    f83(v1369, p1002 * -29, p1002 * -17.5, p1002 * 58, p1002 * 35, p1002 * 5);
    v1369.restore();
    f84(v1369, p1004[0], p1004[0], p1002 * 4);
    v1369.save();
    v1369.translate(p1002 * 53.5, p1002 * 35.5);
    f83(v1369, p1002 * -26.5, p1002 * -15, p1002 * 53, p1002 * 30, p1002 * 5);
    v1369.restore();
    f84(v1369, p1004[0], p1004[0], p1002 * 4);
    v1369.translate(p1002 * 5, p1002 * 0);
    v1369.globalAlpha = 1;
    v1369.save();
    v1369.translate(p1002 * 52.5, p1002 * 91.5);
    f83(v1369, p1002 * -4.5, p1002 * -39, p1002 * 9, p1002 * 78, p1002 * 5);
    v1369.restore();
    f84(v1369, p1004[1], p1004[2], p1002 * 3);
    v1369.save();
    v1369.translate(p1002 * 53, p1002 * 36);
    f83(v1369, p1002 * -29, p1002 * -17.5, p1002 * 58, p1002 * 35, p1002 * 5);
    v1369.restore();
    f84(v1369, p1004[3], p1004[4], p1002 * 4);
    v1369.save();
    v1369.translate(p1002 * 53.5, p1002 * 35.5);
    f83(v1369, p1002 * -26.5, p1002 * -15, p1002 * 53, p1002 * 30, p1002 * 5);
    v1369.restore();
    f84(v1369, p1004[5], p1004[6], p1002 * 4);
    v1369.beginPath();
    v1369.lineCap = "round";
    v1369.lineJoin = "round";
    v1369.moveTo(p1002 * 49, p1002 * 60.5);
    v1369.bezierCurveTo(p1002 * 44, p1002 * 56.5, p1002 * 44, p1002 * 56.5, p1002 * 39, p1002 * 52.5);
    v1369.bezierCurveTo(p1002 * 39, p1002 * 46.5, p1002 * 39, p1002 * 46.5, p1002 * 39, p1002 * 40.5);
    v1369.bezierCurveTo(p1002 * 44, p1002 * 44, p1002 * 44, p1002 * 44, p1002 * 49, p1002 * 47.5);
    v1369.bezierCurveTo(p1002 * 49, p1002 * 54, p1002 * 49, p1002 * 54, p1002 * 49, p1002 * 60.5);
    v1369.closePath();
    f84(v1369, p1004[7], p1004[6], p1002 * 3);
    v1369.beginPath();
    v1369.lineCap = "round";
    v1369.lineJoin = "round";
    v1369.moveTo(p1002 * 66, p1002 * 40.5);
    v1369.bezierCurveTo(p1002 * 66, p1002 * 46.5, p1002 * 66, p1002 * 46.5, p1002 * 66, p1002 * 52.5);
    v1369.bezierCurveTo(p1002 * 60.5, p1002 * 56.5, p1002 * 60.5, p1002 * 56.5, p1002 * 55, p1002 * 60.5);
    v1369.bezierCurveTo(p1002 * 56, p1002 * 53, p1002 * 56, p1002 * 53, p1002 * 57, p1002 * 45.5);
    v1369.bezierCurveTo(p1002 * 61.5, p1002 * 43, p1002 * 61.5, p1002 * 43, p1002 * 66, p1002 * 40.5);
    v1369.closePath();
    f84(v1369, p1004[7], p1004[6], p1002 * 3);
    v1369.beginPath();
    v1369.lineCap = "round";
    v1369.lineJoin = "round";
    v1369.moveTo(p1002 * 52, p1002 * 33.5);
    v1369.bezierCurveTo(p1002 * 55.5, p1002 * 41, p1002 * 55.5, p1002 * 41, p1002 * 59, p1002 * 48.5);
    v1369.bezierCurveTo(p1002 * 56, p1002 * 58, p1002 * 56, p1002 * 58, p1002 * 53, p1002 * 67.5);
    v1369.bezierCurveTo(p1002 * 49, p1002 * 58, p1002 * 49, p1002 * 58, p1002 * 45, p1002 * 48.5);
    v1369.bezierCurveTo(p1002 * 48.5, p1002 * 41, p1002 * 48.5, p1002 * 41, p1002 * 52, p1002 * 33.5);
    v1369.closePath();
    f84(v1369, p1004[9], p1004[8], p1002 * 3);
    v1369.beginPath();
    v1369.lineCap = "round";
    v1369.lineJoin = "round";
    v1369.moveTo(p1002 * 52, p1002 * 47.5);
    v1369.bezierCurveTo(p1002 * 54.5, p1002 * 50.5, p1002 * 54.5, p1002 * 50.5, p1002 * 57, p1002 * 53.5);
    v1369.bezierCurveTo(p1002 * 55, p1002 * 60, p1002 * 55, p1002 * 60, p1002 * 53, p1002 * 66.5);
    v1369.bezierCurveTo(p1002 * 50.5, p1002 * 61, p1002 * 50.5, p1002 * 61, p1002 * 48, p1002 * 55.5);
    v1369.bezierCurveTo(p1002 * 50, p1002 * 52, p1002 * 50, p1002 * 52, p1002 * 52, p1002 * 48.5);
    v1369.closePath();
    f84(v1369, p1004[11], p1004[10], p1002 * 3);
    return v1368;
  }
  function f242(p1005, p1006, p1007) {
    var v1370 = document.createElement("canvas");
    var v1371 = v1370.getContext("2d");
    v1370.width = p1005 * 400;
    v1370.height = p1005 * 400;
    v1371.globalAlpha = 1;
    v1371.translate(p1005 * 20, p1005 * 20);
    v1371.beginPath();
    v1371.lineCap = "round";
    v1371.lineJoin = "round";
    v1371.moveTo(p1005 * 36.5, p1005 * 278.0625);
    v1371.bezierCurveTo(p1005 * 67.5, p1005 * 316.0625, p1005 * 134.5, p1005 * 334.0625, p1005 * 199.5, p1005 * 319.0625);
    v1371.bezierCurveTo(p1005 * 254.5, p1005 * 304.0625, p1005 * 346.5, p1005 * 270.0625, p1005 * 348.5, p1005 * 237.0625);
    v1371.bezierCurveTo(p1005 * 359.5, p1005 * 206.0625, p1005 * 318.5, p1005 * 129.0625, p1005 * 262.5, p1005 * 122.0625);
    v1371.bezierCurveTo(p1005 * 213.5, p1005 * 115.0625, p1005 * 166.5, p1005 * 133.0625, p1005 * 104.5, p1005 * 166.0625);
    v1371.bezierCurveTo(p1005 * 54.5, p1005 * 194.0625, p1005 * 23.5, p1005 * 241.0625, p1005 * 36.5, p1005 * 277.0625);
    v1371.closePath();
    f84(v1371, p1007[0]);
    v1371.translate(p1005 * -20, p1005 * -20);
    v1371.beginPath();
    v1371.lineCap = "round";
    v1371.lineJoin = "round";
    v1371.moveTo(p1005 * 36.5, p1005 * 278.0625);
    v1371.bezierCurveTo(p1005 * 67.5, p1005 * 316.0625, p1005 * 134.5, p1005 * 334.0625, p1005 * 199.5, p1005 * 319.0625);
    v1371.bezierCurveTo(p1005 * 254.5, p1005 * 304.0625, p1005 * 346.5, p1005 * 270.0625, p1005 * 348.5, p1005 * 237.0625);
    v1371.bezierCurveTo(p1005 * 359.5, p1005 * 206.0625, p1005 * 318.5, p1005 * 129.0625, p1005 * 262.5, p1005 * 122.0625);
    v1371.bezierCurveTo(p1005 * 213.5, p1005 * 115.0625, p1005 * 166.5, p1005 * 133.0625, p1005 * 104.5, p1005 * 166.0625);
    v1371.bezierCurveTo(p1005 * 54.5, p1005 * 194.0625, p1005 * 23.5, p1005 * 241.0625, p1005 * 36.5, p1005 * 277.0625);
    v1371.closePath();
    f84(v1371, p1007[1], p1007[2], p1005 * 19);
    v1371.beginPath();
    v1371.lineCap = "round";
    v1371.lineJoin = "round";
    v1371.moveTo(p1005 * 214.5, p1005 * 124.0625);
    v1371.bezierCurveTo(p1005 * 242.5, p1005 * 125.0625, p1005 * 272.5, p1005 * 159.0625, p1005 * 283.5, p1005 * 184.0625);
    v1371.bezierCurveTo(p1005 * 277.5, p1005 * 161.0625, p1005 * 233.5, p1005 * 128.0625, p1005 * 219.5, p1005 * 122.0625);
    v1371.closePath();
    f84(v1371, undefined, p1007[2], p1005 * 19);
    v1371.beginPath();
    v1371.lineCap = "round";
    v1371.lineJoin = "round";
    v1371.moveTo(p1005 * 157.5, p1005 * 145.0625);
    v1371.bezierCurveTo(p1005 * 176.5, p1005 * 148.0625, p1005 * 205.5, p1005 * 176.0625, p1005 * 212.5, p1005 * 197.0625);
    v1371.bezierCurveTo(p1005 * 205.5, p1005 * 178.0625, p1005 * 177.5, p1005 * 152.0625, p1005 * 156.5, p1005 * 142.0625);
    v1371.closePath();
    f84(v1371, vVUndefined21, p1007[2], p1005 * 19);
    v1371.beginPath();
    v1371.lineCap = "round";
    v1371.lineJoin = "round";
    v1371.moveTo(p1005 * 103.5, p1005 * 169.0625);
    v1371.bezierCurveTo(p1005 * 160.5, p1005 * 166.0625, p1005 * 228.5, p1005 * 312.0625, p1005 * 162.5, p1005 * 323.0625);
    v1371.bezierCurveTo(p1005 * 128.5, p1005 * 330.0625, p1005 * 45.5, p1005 * 312.0625, p1005 * 34.5, p1005 * 268.0625);
    v1371.bezierCurveTo(p1005 * 30.5, p1005 * 238.0625, p1005 * 44.5, p1005 * 222.0625, p1005 * 52.5, p1005 * 211.0625);
    v1371.bezierCurveTo(p1005 * 82.5, p1005 * 174.0625, p1005 * 104.5, p1005 * 166.0625, p1005 * 119.5, p1005 * 172.0625);
    v1371.closePath();
    f84(v1371, p1007[3], p1007[2], p1005 * 19);
    f89(v1371, p1005 * 92.5, p1005 * 216.0625, p1005 * 13.892443989449804);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 68.5, p1005 * 227.0625, p1005 * 8.06225774829855);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 85.5, p1005 * 240.0625, p1005 * 6.708203932499369);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 147.5, p1005 * 294.0625, p1005 * 17.46424919657298);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 166.5, p1005 * 273.0625, p1005 * 6.708203932499369);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 114.5, p1005 * 294.0625, p1005 * 12.36931687685298);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 123.5, p1005 * 220.0625, p1005 * 5.830951894845301);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 114.5, p1005 * 259.0625, p1005 * 4.123105625617661);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 63.5, p1005 * 265.0625, p1005 * 5.385164807134504);
    f84(v1371, p1007[4]);
    f89(v1371, p1005 * 148.5, p1005 * 235.0625, p1005 * 4.47213595499958);
    f84(v1371, p1007[4]);
    v1371.beginPath();
    v1371.lineCap = "round";
    v1371.lineJoin = "round";
    v1371.moveTo(p1005 * 194.5, p1005 * 313.0625);
    v1371.bezierCurveTo(p1005 * 222.5, p1005 * 306.0625, p1005 * 319.5, p1005 * 271.0625, p1005 * 337.5, p1005 * 241.0625);
    v1371.bezierCurveTo(p1005 * 274.5, p1005 * 270.0625, p1005 * 216.5, p1005 * 288.0625, p1005 * 199.5, p1005 * 287.0625);
    v1371.bezierCurveTo(p1005 * 198.5, p1005 * 302.0625, p1005 * 195.5, p1005 * 311.0625, p1005 * 193.5, p1005 * 312.0625);
    v1371.closePath();
    f84(v1371, p1007[5]);
    return v1370;
  }
  function f243(p1008, p1009, p1010) {
    var v1372 = document.createElement("canvas");
    var v1373 = v1372.getContext("2d");
    v1372.width = p1008 * 88;
    v1372.height = p1008 * 88;
    v1373.save();
    v1373.translate(p1008 * 44, p1008 * 44);
    v1373.rotate(0.52);
    f87(v1373, 6, p1008 * 43, p1008 * 10);
    v1373.restore();
    f84(v1373, p1010[0], p1010[1], p1008 * 3);
    return v1372;
  }
  function f244(p1011, p1012, p1013) {
    var v1374 = document.createElement("canvas");
    var v1375 = v1374.getContext("2d");
    v1374.width = p1011 * 202;
    v1374.height = p1011 * 202;
    v1375.translate(p1011 * 2, p1011 * 1);
    v1375.globalAlpha = p1012 ? 0.5 : 1;
    v1375.translate(0, p1011 * 10);
    v1375.save();
    v1375.translate(p1011 * 98, p1011 * 41.15177917480469);
    v1375.rotate(0.8);
    f83(v1375, p1011 * -16, p1011 * -16.5, p1011 * 32, p1011 * 33, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 98, p1011 * 22.5089111328125);
    v1375.bezierCurveTo(p1011 * 97.5, p1011 * 41.5089111328125, p1011 * 97.5, p1011 * 41.5089111328125, p1011 * 97, p1011 * 60.5089111328125);
    f84(v1375, p1013[2]);
    v1375.save();
    v1375.translate(p1011 * 147.5, p1011 * 69.5089111328125);
    v1375.rotate(0.2);
    f83(v1375, p1011 * -15.5, p1011 * -16, p1011 * 31, p1011 * 32, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 163, p1011 * 59.50892639160156);
    v1375.bezierCurveTo(p1011 * 147, p1011 * 69.50892639160156, p1011 * 127, p1011 * 82.50892639160156, p1011 * 131, p1011 * 79.50892639160156);
    f84(v1375, p1013[2]);
    v1375.save();
    v1375.translate(p1011 * 143.5, p1011 * 128.2946319580078);
    v1375.rotate(1.24);
    f83(v1375, p1011 * -16.5, p1011 * -17.5, p1011 * 33, p1011 * 35, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 162, p1011 * 135.93748474121094);
    v1375.bezierCurveTo(p1011 * 143.5, p1011 * 128.43748474121094, p1011 * 129, p1011 * 120.93748474121094, p1011 * 125, p1011 * 120.93748474121094);
    f84(v1375, p1013[2]);
    v1375.save();
    v1375.translate(p1011 * 99, p1011 * 156.08035278320312);
    v1375.rotate(0.84);
    f83(v1375, p1011 * -18, p1011 * -18, p1011 * 36, p1011 * 36, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 98, p1011 * 136.08035278320312);
    v1375.bezierCurveTo(p1011 * 98, p1011 * 156.08035278320312, p1011 * 98, p1011 * 156.08035278320312, p1011 * 98, p1011 * 176.08035278320312);
    f84(v1375, p1013[2]);
    v1375.save();
    v1375.translate(p1011 * 54, p1011 * 72.22320556640625);
    v1375.rotate(1.32);
    f83(v1375, p1011 * -18, p1011 * -19, p1011 * 36, p1011 * 38, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 34, p1011 * 60.79463195800781);
    v1375.bezierCurveTo(p1011 * 53.5, p1011 * 72.29463195800781, p1011 * 69, p1011 * 79.79463195800781, p1011 * 73, p1011 * 83.79463195800781);
    f84(v1375, p1013[2]);
    v1375.save();
    v1375.translate(p1011 * 49, p1011 * 127.29463195800781);
    v1375.rotate(1.76);
    f83(v1375, p1011 * -20, p1011 * -17.5, p1011 * 40, p1011 * 35, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 30, p1011 * 141.7946319580078);
    v1375.bezierCurveTo(p1011 * 47, p1011 * 130.2946319580078, p1011 * 64, p1011 * 119.79463195800781, p1011 * 64, p1011 * 118.79463195800781);
    f84(v1375, p1013[2]);
    v1375.globalAlpha = 1;
    v1375.translate(0, p1011 * -10);
    v1375.save();
    v1375.translate(p1011 * 98, p1011 * 41.15177917480469);
    v1375.rotate(0.8);
    f83(v1375, p1011 * -16, p1011 * -16.5, p1011 * 32, p1011 * 33, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[3], p1013[4], p1011 * 5);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 98, p1011 * 22.5089111328125);
    v1375.bezierCurveTo(p1011 * 97.5, p1011 * 41.5089111328125, p1011 * 97.5, p1011 * 41.5089111328125, p1011 * 97, p1011 * 60.5089111328125);
    f84(v1375, vVVVUndefined2022, p1013[4], p1011 * 5);
    v1375.save();
    v1375.translate(p1011 * 147.5, p1011 * 69.5089111328125);
    v1375.rotate(0.2);
    f83(v1375, p1011 * -15.5, p1011 * -16, p1011 * 31, p1011 * 32, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[3], p1013[4], p1011 * 5);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 163, p1011 * 59.50892639160156);
    v1375.bezierCurveTo(p1011 * 147, p1011 * 69.50892639160156, p1011 * 127, p1011 * 82.50892639160156, p1011 * 131, p1011 * 79.50892639160156);
    f84(v1375, undefined, p1013[4], p1011 * 5);
    v1375.save();
    v1375.translate(p1011 * 143.5, p1011 * 128.2946319580078);
    v1375.rotate(1.24);
    f83(v1375, p1011 * -16.5, p1011 * -17.5, p1011 * 33, p1011 * 35, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[3], p1013[4], p1011 * 5);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 162, p1011 * 135.93748474121094);
    v1375.bezierCurveTo(p1011 * 143.5, p1011 * 128.43748474121094, p1011 * 129, p1011 * 120.93748474121094, p1011 * 125, p1011 * 120.93748474121094);
    f84(v1375, undefined, p1013[4], p1011 * 5);
    v1375.save();
    v1375.translate(p1011 * 99, p1011 * 156.08035278320312);
    v1375.rotate(0.84);
    f83(v1375, p1011 * -18, p1011 * -18, p1011 * 36, p1011 * 36, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[3], p1013[4], p1011 * 5);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 98, p1011 * 136.08035278320312);
    v1375.bezierCurveTo(p1011 * 98, p1011 * 156.08035278320312, p1011 * 98, p1011 * 156.08035278320312, p1011 * 98, p1011 * 176.08035278320312);
    f84(v1375, vVUndefined11, p1013[4], p1011 * 5);
    v1375.save();
    v1375.translate(p1011 * 54, p1011 * 72.22320556640625);
    v1375.rotate(1.32);
    f83(v1375, p1011 * -18, p1011 * -19, p1011 * 36, p1011 * 38, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[3], p1013[4], p1011 * 5);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 34, p1011 * 60.79463195800781);
    v1375.bezierCurveTo(p1011 * 53.5, p1011 * 72.29463195800781, p1011 * 69, p1011 * 79.79463195800781, p1011 * 73, p1011 * 83.79463195800781);
    f84(v1375, undefined, p1013[4], p1011 * 5);
    v1375.save();
    v1375.translate(p1011 * 49, p1011 * 127.29463195800781);
    v1375.rotate(1.76);
    f83(v1375, p1011 * -20, p1011 * -17.5, p1011 * 40, p1011 * 35, p1011 * 7);
    v1375.restore();
    f84(v1375, p1013[3], p1013[4], p1011 * 5);
    v1375.beginPath();
    v1375.lineCap = "round";
    v1375.lineJoin = "round";
    v1375.moveTo(p1011 * 30, p1011 * 141.7946319580078);
    v1375.bezierCurveTo(p1011 * 47, p1011 * 130.2946319580078, p1011 * 64, p1011 * 119.79463195800781, p1011 * 64, p1011 * 118.79463195800781);
    f84(v1375, vVVVUndefined212, p1013[4], p1011 * 5);
    v1375.globalAlpha = p1012 ? 0.5 : 1;
    v1375.translate(0, p1011 * 10);
    v1375.save();
    v1375.translate(p1011 * 98, p1011 * 99);
    f87(v1375, 6, p1011 * 70.28669492273468, p1011 * 10);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.save();
    v1375.translate(p1011 * 98, p1011 * 99);
    f87(v1375, 6, p1011 * 56.455940020351264, p1011 * 10);
    v1375.restore();
    f84(v1375, p1013[2]);
    v1375.globalAlpha = 1;
    v1375.translate(0, p1011 * -10);
    v1375.save();
    v1375.translate(p1011 * 98, p1011 * 99);
    f87(v1375, 6, p1011 * 70.28669492273468, p1011 * 10);
    v1375.restore();
    f84(v1375, p1013[5], p1013[6], p1011 * 5);
    v1375.save();
    v1375.translate(p1011 * 98, p1011 * 99);
    f87(v1375, 6, p1011 * 56.455940020351264, p1011 * 10);
    v1375.restore();
    f84(v1375, p1013[7], p1013[8], p1011 * 7);
    return v1374;
  }
  function f245(p1014, p1015, p1016) {
    var v1376 = document.createElement("canvas");
    var v1377 = v1376.getContext("2d");
    v1376.width = p1014 * 440;
    v1376.height = p1014 * 388;
    v1377.globalAlpha = p1015 ? 0.5 : 1;
    v1377.translate(p1014 * 5, p1014 * 5);
    f89(v1377, p1014 * 220, p1014 * 201, p1014 * 170.41713528867922);
    f84(v1377, p1016[0], p1016[0], p1014 * 6);
    v1377.globalAlpha = 1;
    v1377.translate(p1014 * -5, p1014 * -5);
    f89(v1377, p1014 * 220, p1014 * 201, p1014 * 170.41713528867922);
    f84(v1377, p1016[1], p1016[2], p1014 * 6);
    f89(v1377, p1014 * 220, p1014 * 201, p1014 * 130);
    f84(v1377, p1016[11], p1016[2], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 218, p1014 * 97);
    v1377.bezierCurveTo(p1014 * 219, p1014 * 163, p1014 * 201, p1014 * 176, p1014 * 191, p1014 * 175);
    v1377.bezierCurveTo(p1014 * 176, p1014 * 177, p1014 * 168, p1014 * 167, p1014 * 160, p1014 * 115);
    v1377.closePath();
    f84(v1377, p1016[5], p1016[6], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 224, p1014 * 181);
    v1377.bezierCurveTo(p1014 * 225, p1014 * 138, p1014 * 246, p1014 * 115, p1014 * 263, p1014 * 137);
    v1377.bezierCurveTo(p1014 * 282, p1014 * 174, p1014 * 279, p1014 * 217, p1014 * 265, p1014 * 243);
    v1377.bezierCurveTo(p1014 * 253, p1014 * 264, p1014 * 240, p1014 * 256, p1014 * 233, p1014 * 238);
    v1377.bezierCurveTo(p1014 * 221, p1014 * 212, p1014 * 225, p1014 * 198, p1014 * 224, p1014 * 184);
    v1377.closePath();
    f84(v1377, p1016[5], p1016[6], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 169, p1014 * 289);
    v1377.bezierCurveTo(p1014 * 161, p1014 * 234, p1014 * 168, p1014 * 197, p1014 * 187, p1014 * 195);
    v1377.bezierCurveTo(p1014 * 219, p1014 * 189, p1014 * 222, p1014 * 256, p1014 * 216, p1014 * 307);
    v1377.closePath();
    f84(v1377, p1016[5], p1016[6], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 143, p1014 * 146);
    v1377.bezierCurveTo(p1014 * 161, p1014 * 199, p1014 * 151, p1014 * 245, p1014 * 138, p1014 * 266);
    v1377.bezierCurveTo(p1014 * 120.5, p1014 * 239.5, p1014 * 120.5, p1014 * 239.5, p1014 * 103, p1014 * 213);
    v1377.closePath();
    f84(v1377, p1016[5], p1016[6], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 283, p1014 * 135);
    v1377.bezierCurveTo(p1014 * 277, p1014 * 176, p1014 * 298, p1014 * 194, p1014 * 315, p1014 * 205);
    v1377.bezierCurveTo(p1014 * 323.5, p1014 * 175, p1014 * 323.5, p1014 * 175, p1014 * 332, p1014 * 145);
    v1377.closePath();
    f84(v1377, p1016[5], p1016[6], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 318, p1014 * 223);
    v1377.bezierCurveTo(p1014 * 290, p1014 * 195, p1014 * 271, p1014 * 256, p1014 * 283, p1014 * 281);
    v1377.bezierCurveTo(p1014 * 303.5, p1014 * 267, p1014 * 303.5, p1014 * 267, p1014 * 324, p1014 * 253);
    v1377.closePath();
    f84(v1377, p1016[5], p1016[6], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 142, p1014 * 223);
    v1377.bezierCurveTo(p1014 * 128, p1014 * 213, p1014 * 123, p1014 * 214, p1014 * 111, p1014 * 223);
    v1377.closePath();
    f84(v1377, p1016[10], p1016[10], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 251, p1014 * 133);
    v1377.bezierCurveTo(p1014 * 269, p1014 * 188, p1014 * 262, p1014 * 229, p1014 * 251, p1014 * 253);
    v1377.bezierCurveTo(p1014 * 288, p1014 * 224, p1014 * 273, p1014 * 139, p1014 * 252, p1014 * 133);
    v1377.closePath();
    f84(v1377, p1016[10], p1016[10], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 203, p1014 * 102);
    v1377.bezierCurveTo(p1014 * 204, p1014 * 136, p1014 * 200, p1014 * 159, p1014 * 189, p1014 * 174);
    v1377.bezierCurveTo(p1014 * 223, p1014 * 164, p1014 * 219, p1014 * 87, p1014 * 205, p1014 * 83);
    v1377.closePath();
    f84(v1377, p1016[10], p1016[10], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 196, p1014 * 324);
    v1377.bezierCurveTo(p1014 * 209, p1014 * 239, p1014 * 200, p1014 * 219, p1014 * 192, p1014 * 196);
    v1377.bezierCurveTo(p1014 * 229, p1014 * 216, p1014 * 219, p1014 * 316, p1014 * 198, p1014 * 325);
    v1377.closePath();
    f84(v1377, p1016[10], p1016[10], p1014 * 4);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 266, p1014 * 166);
    v1377.bezierCurveTo(p1014 * 249, p1014 * 154, p1014 * 243, p1014 * 161, p1014 * 233, p1014 * 167);
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 269, p1014 * 192);
    v1377.bezierCurveTo(p1014 * 256, p1014 * 183, p1014 * 241, p1014 * 186, p1014 * 233, p1014 * 192);
    f84(v1377, vVVUndefined202, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 263, p1014 * 217);
    v1377.bezierCurveTo(p1014 * 251, p1014 * 211, p1014 * 242, p1014 * 213, p1014 * 236, p1014 * 218);
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 204, p1014 * 141);
    v1377.bezierCurveTo(p1014 * 191, p1014 * 131, p1014 * 187, p1014 * 133, p1014 * 176, p1014 * 141);
    f84(v1377, vVUndefined19, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 207, p1014 * 230);
    v1377.bezierCurveTo(p1014 * 193, p1014 * 222, p1014 * 185, p1014 * 224, p1014 * 177, p1014 * 231);
    f84(v1377, vVVVUndefined202, p1016[6], p1014 * 6);
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 210, p1014 * 258);
    v1377.bezierCurveTo(p1014 * 196, p1014 * 247, p1014 * 191, p1014 * 250, p1014 * 177, p1014 * 259);
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 145, p1014 * 196);
    v1377.bezierCurveTo(p1014 * 130, p1014 * 186, p1014 * 124, p1014 * 187, p1014 * 114, p1014 * 195);
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 218, p1014 * 97);
    v1377.bezierCurveTo(p1014 * 219, p1014 * 163, p1014 * 201, p1014 * 176, p1014 * 191, p1014 * 175);
    v1377.bezierCurveTo(p1014 * 176, p1014 * 177, p1014 * 168, p1014 * 167, p1014 * 160, p1014 * 115);
    v1377.closePath();
    f84(v1377, vVVVUndefined202, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 224, p1014 * 181);
    v1377.bezierCurveTo(p1014 * 225, p1014 * 138, p1014 * 246, p1014 * 115, p1014 * 263, p1014 * 137);
    v1377.bezierCurveTo(p1014 * 282, p1014 * 174, p1014 * 279, p1014 * 217, p1014 * 265, p1014 * 243);
    v1377.bezierCurveTo(p1014 * 253, p1014 * 264, p1014 * 240, p1014 * 256, p1014 * 233, p1014 * 238);
    v1377.bezierCurveTo(p1014 * 221, p1014 * 212, p1014 * 225, p1014 * 198, p1014 * 224, p1014 * 184);
    v1377.closePath();
    f84(v1377, vUndefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 169, p1014 * 289);
    v1377.bezierCurveTo(p1014 * 161, p1014 * 234, p1014 * 168, p1014 * 197, p1014 * 187, p1014 * 195);
    v1377.bezierCurveTo(p1014 * 219, p1014 * 189, p1014 * 222, p1014 * 256, p1014 * 216, p1014 * 307);
    v1377.closePath();
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 143, p1014 * 146);
    v1377.bezierCurveTo(p1014 * 161, p1014 * 199, p1014 * 151, p1014 * 245, p1014 * 138, p1014 * 266);
    v1377.bezierCurveTo(p1014 * 120.5, p1014 * 239.5, p1014 * 120.5, p1014 * 239.5, p1014 * 103, p1014 * 213);
    v1377.closePath();
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 283, p1014 * 135);
    v1377.bezierCurveTo(p1014 * 277, p1014 * 176, p1014 * 298, p1014 * 194, p1014 * 315, p1014 * 205);
    v1377.bezierCurveTo(p1014 * 323.5, p1014 * 175, p1014 * 323.5, p1014 * 175, p1014 * 332, p1014 * 145);
    v1377.closePath();
    f84(v1377, undefined, p1016[6], p1014 * 6);
    v1377.beginPath();
    v1377.lineCap = "round";
    v1377.lineJoin = "round";
    v1377.moveTo(p1014 * 318, p1014 * 223);
    v1377.bezierCurveTo(p1014 * 290, p1014 * 195, p1014 * 271, p1014 * 256, p1014 * 283, p1014 * 281);
    v1377.bezierCurveTo(p1014 * 303.5, p1014 * 267, p1014 * 303.5, p1014 * 267, p1014 * 324, p1014 * 253);
    v1377.closePath();
    f84(v1377, undefined, p1016[6], p1014 * 6);
    f89(v1377, p1014 * 222, p1014 * 199, p1014 * 120.74767078498864);
    f84(v1377, vVVVUndefined212, p1016[3], p1014 * 40);
    f89(v1377, p1014 * 220, p1014 * 200, p1014 * 95.44108130150245);
    f84(v1377, vVVVUndefined212, p1016[2], p1014 * 15);
    f89(v1377, p1014 * 220, p1014 * 201, p1014 * 85);
    f84(v1377, vVUndefined19, p1016[4], p1014 * 10);
    v1377.globalAlpha = 0.5;
    f89(v1377, p1014 * 220, p1014 * 201, p1014 * 82);
    f84(v1377, p1016[9]);
    v1377.globalAlpha = p1015 ? 0.5 : 1;
    v1377.translate(p1014 * 5, p1014 * 5);
    f89(v1377, p1014 * 63, p1014 * 136, p1014 * 49.193495504995376);
    f84(v1377, p1016[0], p1016[0], p1014 * 4);
    v1377.globalAlpha = 1;
    v1377.translate(p1014 * -5, p1014 * -5);
    f89(v1377, p1014 * 63, p1014 * 136, p1014 * 49.193495504995376);
    f84(v1377, p1016[8], p1016[2], p1014 * 4);
    f89(v1377, p1014 * 63, p1014 * 137, p1014 * 25.632011235952593);
    f84(v1377, p1016[7], p1016[2], p1014 * 4);
    return v1376;
  }
  function f246(p1017, p1018) {
    var v1378 = document.createElement("canvas");
    var v1379 = v1378.getContext("2d");
    v1378.width = p1017 * 376;
    v1378.height = p1017 * 371;
    v1379.globalAlpha = 0.5;
    v1379.translate(p1017 * 5, p1017 * 5);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 191.633544921875, p1017 * 123.98580932617188);
    v1379.bezierCurveTo(p1017 * 215.633544921875, p1017 * 85.98580932617188, p1017 * 187.633544921875, p1017 * 71.98580932617188, p1017 * 202.633544921875, p1017 * 19.985809326171875);
    v1379.bezierCurveTo(p1017 * 231.633544921875, p1017 * 68.98580932617188, p1017 * 253.633544921875, p1017 * 71.98580932617188, p1017 * 256.633544921875, p1017 * 93.98580932617188);
    v1379.bezierCurveTo(p1017 * 306.633544921875, p1017 * 64.98580932617188, p1017 * 319.633544921875, p1017 * 61.985809326171875, p1017 * 350.633544921875, p1017 * 58.985809326171875);
    v1379.bezierCurveTo(p1017 * 280.633544921875, p1017 * 86.98580932617188, p1017 * 281.633544921875, p1017 * 106.98580932617188, p1017 * 268.633544921875, p1017 * 130.98580932617188);
    v1379.bezierCurveTo(p1017 * 295.633544921875, p1017 * 158.98580932617188, p1017 * 328.633544921875, p1017 * 155.98580932617188, p1017 * 353.633544921875, p1017 * 90.98580932617188);
    v1379.bezierCurveTo(p1017 * 371.633544921875, p1017 * 158.98580932617188, p1017 * 337.633544921875, p1017 * 210.98580932617188, p1017 * 286.633544921875, p1017 * 209.98580932617188);
    v1379.bezierCurveTo(p1017 * 323.633544921875, p1017 * 230.98580932617188, p1017 * 317.633544921875, p1017 * 274.9858093261719, p1017 * 356.633544921875, p1017 * 305.9858093261719);
    v1379.bezierCurveTo(p1017 * 288.633544921875, p1017 * 297.9858093261719, p1017 * 288.633544921875, p1017 * 265.9858093261719, p1017 * 275.633544921875, p1017 * 266.9858093261719);
    v1379.bezierCurveTo(p1017 * 280.633544921875, p1017 * 294.9858093261719, p1017 * 315.633544921875, p1017 * 306.9858093261719, p1017 * 336.633544921875, p1017 * 316.9858093261719);
    v1379.bezierCurveTo(p1017 * 295.633544921875, p1017 * 318.9858093261719, p1017 * 264.633544921875, p1017 * 302.9858093261719, p1017 * 254.633544921875, p1017 * 289.9858093261719);
    v1379.bezierCurveTo(p1017 * 252.633544921875, p1017 * 301.9858093261719, p1017 * 224.633544921875, p1017 * 315.9858093261719, p1017 * 201.633544921875, p1017 * 356.9858093261719);
    v1379.bezierCurveTo(p1017 * 195.633544921875, p1017 * 313.9858093261719, p1017 * 195.633544921875, p1017 * 308.9858093261719, p1017 * 196.633544921875, p1017 * 307.9858093261719);
    v1379.bezierCurveTo(p1017 * 197.633544921875, p1017 * 289.9858093261719, p1017 * 207.633544921875, p1017 * 283.9858093261719, p1017 * 195.633544921875, p1017 * 258.9858093261719);
    v1379.bezierCurveTo(p1017 * 182.633544921875, p1017 * 282.9858093261719, p1017 * 190.633544921875, p1017 * 287.9858093261719, p1017 * 193.633544921875, p1017 * 297.9858093261719);
    v1379.bezierCurveTo(p1017 * 195.633544921875, p1017 * 306.9858093261719, p1017 * 191.633544921875, p1017 * 334.9858093261719, p1017 * 187.633544921875, p1017 * 354.9858093261719);
    v1379.bezierCurveTo(p1017 * 165.633544921875, p1017 * 320.9858093261719, p1017 * 138.633544921875, p1017 * 307.9858093261719, p1017 * 135.633544921875, p1017 * 288.9858093261719);
    v1379.bezierCurveTo(p1017 * 110.633544921875, p1017 * 318.9858093261719, p1017 * 68.633544921875, p1017 * 323.9858093261719, p1017 * 49.633544921875, p1017 * 320.9858093261719);
    v1379.bezierCurveTo(p1017 * 88.633544921875, p1017 * 308.9858093261719, p1017 * 108.633544921875, p1017 * 284.9858093261719, p1017 * 118.633544921875, p1017 * 258.9858093261719);
    v1379.bezierCurveTo(p1017 * 86.633544921875, p1017 * 264.9858093261719, p1017 * 75.633544921875, p1017 * 310.9858093261719, p1017 * 19.633544921875, p1017 * 304.9858093261719);
    v1379.bezierCurveTo(p1017 * 54.633544921875, p1017 * 276.9858093261719, p1017 * 59.633544921875, p1017 * 214.98580932617188, p1017 * 105.633544921875, p1017 * 205.98580932617188);
    v1379.bezierCurveTo(p1017 * 14.633544921875, p1017 * 201.98580932617188, p1017 * 24.633544921875, p1017 * 141.98580932617188, p1017 * 25.633544921875, p1017 * 82.98580932617188);
    v1379.bezierCurveTo(p1017 * 49.633544921875, p1017 * 168.98580932617188, p1017 * 87.633544921875, p1017 * 141.98580932617188, p1017 * 112.633544921875, p1017 * 123.98580932617188);
    v1379.bezierCurveTo(p1017 * 95.633544921875, p1017 * 75.98580932617188, p1017 * 70.633544921875, p1017 * 68.98580932617188, p1017 * 35.633544921875, p1017 * 50.985809326171875);
    v1379.bezierCurveTo(p1017 * 70.633544921875, p1017 * 53.985809326171875, p1017 * 102.633544921875, p1017 * 65.98580932617188, p1017 * 125.633544921875, p1017 * 84.98580932617188);
    v1379.bezierCurveTo(p1017 * 133.633544921875, p1017 * 69.98580932617188, p1017 * 166.633544921875, p1017 * 42.985809326171875, p1017 * 176.633544921875, p1017 * 21.985809326171875);
    v1379.bezierCurveTo(p1017 * 185.633544921875, p1017 * 49.985809326171875, p1017 * 168.633544921875, p1017 * 95.98580932617188, p1017 * 191.633544921875, p1017 * 121.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[0]);
    v1379.globalAlpha = 1;
    v1379.translate(p1017 * -4, p1017 * -5);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 191.633544921875, p1017 * 123.98580932617188);
    v1379.bezierCurveTo(p1017 * 215.633544921875, p1017 * 85.98580932617188, p1017 * 187.633544921875, p1017 * 71.98580932617188, p1017 * 202.633544921875, p1017 * 19.985809326171875);
    v1379.bezierCurveTo(p1017 * 231.633544921875, p1017 * 68.98580932617188, p1017 * 253.633544921875, p1017 * 71.98580932617188, p1017 * 256.633544921875, p1017 * 93.98580932617188);
    v1379.bezierCurveTo(p1017 * 306.633544921875, p1017 * 64.98580932617188, p1017 * 319.633544921875, p1017 * 61.985809326171875, p1017 * 350.633544921875, p1017 * 58.985809326171875);
    v1379.bezierCurveTo(p1017 * 280.633544921875, p1017 * 86.98580932617188, p1017 * 281.633544921875, p1017 * 106.98580932617188, p1017 * 268.633544921875, p1017 * 130.98580932617188);
    v1379.bezierCurveTo(p1017 * 295.633544921875, p1017 * 158.98580932617188, p1017 * 328.633544921875, p1017 * 155.98580932617188, p1017 * 353.633544921875, p1017 * 90.98580932617188);
    v1379.bezierCurveTo(p1017 * 371.633544921875, p1017 * 158.98580932617188, p1017 * 337.633544921875, p1017 * 210.98580932617188, p1017 * 286.633544921875, p1017 * 209.98580932617188);
    v1379.bezierCurveTo(p1017 * 323.633544921875, p1017 * 230.98580932617188, p1017 * 317.633544921875, p1017 * 274.9858093261719, p1017 * 356.633544921875, p1017 * 305.9858093261719);
    v1379.bezierCurveTo(p1017 * 288.633544921875, p1017 * 297.9858093261719, p1017 * 288.633544921875, p1017 * 265.9858093261719, p1017 * 275.633544921875, p1017 * 266.9858093261719);
    v1379.bezierCurveTo(p1017 * 280.633544921875, p1017 * 294.9858093261719, p1017 * 315.633544921875, p1017 * 306.9858093261719, p1017 * 336.633544921875, p1017 * 316.9858093261719);
    v1379.bezierCurveTo(p1017 * 295.633544921875, p1017 * 318.9858093261719, p1017 * 264.633544921875, p1017 * 302.9858093261719, p1017 * 254.633544921875, p1017 * 289.9858093261719);
    v1379.bezierCurveTo(p1017 * 252.633544921875, p1017 * 301.9858093261719, p1017 * 224.633544921875, p1017 * 315.9858093261719, p1017 * 201.633544921875, p1017 * 356.9858093261719);
    v1379.bezierCurveTo(p1017 * 195.633544921875, p1017 * 313.9858093261719, p1017 * 195.633544921875, p1017 * 308.9858093261719, p1017 * 196.633544921875, p1017 * 307.9858093261719);
    v1379.bezierCurveTo(p1017 * 197.633544921875, p1017 * 289.9858093261719, p1017 * 207.633544921875, p1017 * 283.9858093261719, p1017 * 195.633544921875, p1017 * 258.9858093261719);
    v1379.bezierCurveTo(p1017 * 182.633544921875, p1017 * 282.9858093261719, p1017 * 190.633544921875, p1017 * 287.9858093261719, p1017 * 193.633544921875, p1017 * 297.9858093261719);
    v1379.bezierCurveTo(p1017 * 195.633544921875, p1017 * 306.9858093261719, p1017 * 191.633544921875, p1017 * 334.9858093261719, p1017 * 187.633544921875, p1017 * 354.9858093261719);
    v1379.bezierCurveTo(p1017 * 165.633544921875, p1017 * 320.9858093261719, p1017 * 138.633544921875, p1017 * 307.9858093261719, p1017 * 135.633544921875, p1017 * 288.9858093261719);
    v1379.bezierCurveTo(p1017 * 110.633544921875, p1017 * 318.9858093261719, p1017 * 68.633544921875, p1017 * 323.9858093261719, p1017 * 49.633544921875, p1017 * 320.9858093261719);
    v1379.bezierCurveTo(p1017 * 88.633544921875, p1017 * 308.9858093261719, p1017 * 108.633544921875, p1017 * 284.9858093261719, p1017 * 118.633544921875, p1017 * 258.9858093261719);
    v1379.bezierCurveTo(p1017 * 86.633544921875, p1017 * 264.9858093261719, p1017 * 75.633544921875, p1017 * 310.9858093261719, p1017 * 19.633544921875, p1017 * 304.9858093261719);
    v1379.bezierCurveTo(p1017 * 54.633544921875, p1017 * 276.9858093261719, p1017 * 59.633544921875, p1017 * 214.98580932617188, p1017 * 105.633544921875, p1017 * 205.98580932617188);
    v1379.bezierCurveTo(p1017 * 14.633544921875, p1017 * 201.98580932617188, p1017 * 24.633544921875, p1017 * 141.98580932617188, p1017 * 25.633544921875, p1017 * 82.98580932617188);
    v1379.bezierCurveTo(p1017 * 49.633544921875, p1017 * 168.98580932617188, p1017 * 87.633544921875, p1017 * 141.98580932617188, p1017 * 112.633544921875, p1017 * 123.98580932617188);
    v1379.bezierCurveTo(p1017 * 95.633544921875, p1017 * 75.98580932617188, p1017 * 70.633544921875, p1017 * 68.98580932617188, p1017 * 35.633544921875, p1017 * 50.985809326171875);
    v1379.bezierCurveTo(p1017 * 70.633544921875, p1017 * 53.985809326171875, p1017 * 102.633544921875, p1017 * 65.98580932617188, p1017 * 125.633544921875, p1017 * 84.98580932617188);
    v1379.bezierCurveTo(p1017 * 133.633544921875, p1017 * 69.98580932617188, p1017 * 166.633544921875, p1017 * 42.985809326171875, p1017 * 176.633544921875, p1017 * 21.985809326171875);
    v1379.bezierCurveTo(p1017 * 185.633544921875, p1017 * 49.985809326171875, p1017 * 168.633544921875, p1017 * 95.98580932617188, p1017 * 191.633544921875, p1017 * 121.98580932617188);
    v1379.closePath();
    f84(v1379, vVVVVUndefined117, p1018[1], p1017 * 12);
    v1379.translate(p1017 * -1, p1017 * 0);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 270.633544921875, p1017 * 88.98580932617188);
    v1379.bezierCurveTo(p1017 * 296.633544921875, p1017 * 65.98580932617188, p1017 * 318.633544921875, p1017 * 62.985809326171875, p1017 * 348.633544921875, p1017 * 57.985809326171875);
    v1379.bezierCurveTo(p1017 * 309.633544921875, p1017 * 76.98580932617188, p1017 * 291.633544921875, p1017 * 88.98580932617188, p1017 * 280.633544921875, p1017 * 99.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[4], p1018[5], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 275.633544921875, p1017 * 281.9858093261719);
    v1379.bezierCurveTo(p1017 * 303.633544921875, p1017 * 308.9858093261719, p1017 * 321.633544921875, p1017 * 308.9858093261719, p1017 * 335.633544921875, p1017 * 315.9858093261719);
    v1379.bezierCurveTo(p1017 * 305.633544921875, p1017 * 320.9858093261719, p1017 * 278.633544921875, p1017 * 307.9858093261719, p1017 * 264.633544921875, p1017 * 293.9858093261719);
    v1379.closePath();
    f84(v1379, p1018[4], p1018[5], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 124.633544921875, p1017 * 291.9858093261719);
    v1379.bezierCurveTo(p1017 * 106.633544921875, p1017 * 316.9858093261719, p1017 * 72.633544921875, p1017 * 325.9858093261719, p1017 * 53.633544921875, p1017 * 319.9858093261719);
    v1379.bezierCurveTo(p1017 * 83.633544921875, p1017 * 308.9858093261719, p1017 * 97.633544921875, p1017 * 298.9858093261719, p1017 * 112.633544921875, p1017 * 284.9858093261719);
    v1379.closePath();
    f84(v1379, p1018[4], p1018[5], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 113.633544921875, p1017 * 80.98580932617188);
    v1379.bezierCurveTo(p1017 * 91.633544921875, p1017 * 54.985809326171875, p1017 * 72.633544921875, p1017 * 56.985809326171875, p1017 * 36.633544921875, p1017 * 49.985809326171875);
    v1379.bezierCurveTo(p1017 * 87.633544921875, p1017 * 72.98580932617188, p1017 * 95.633544921875, p1017 * 82.98580932617188, p1017 * 106.633544921875, p1017 * 96.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[4], p1018[5], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 202.633544921875, p1017 * 20.985809326171875);
    v1379.bezierCurveTo(p1017 * 219.633544921875, p1017 * 49.985809326171875, p1017 * 259.633544921875, p1017 * 80.98580932617188, p1017 * 255.633544921875, p1017 * 92.98580932617188);
    v1379.bezierCurveTo(p1017 * 268.633544921875, p1017 * 86.98580932617188, p1017 * 265.633544921875, p1017 * 87.98580932617188, p1017 * 275.633544921875, p1017 * 82.98580932617188);
    v1379.bezierCurveTo(p1017 * 283.633544921875, p1017 * 87.98580932617188, p1017 * 283.633544921875, p1017 * 87.98580932617188, p1017 * 291.633544921875, p1017 * 92.98580932617188);
    v1379.bezierCurveTo(p1017 * 269.633544921875, p1017 * 116.98580932617188, p1017 * 270.633544921875, p1017 * 124.98580932617188, p1017 * 267.633544921875, p1017 * 130.98580932617188);
    v1379.bezierCurveTo(p1017 * 307.633544921875, p1017 * 168.98580932617188, p1017 * 339.633544921875, p1017 * 132.98580932617188, p1017 * 352.633544921875, p1017 * 93.98580932617188);
    v1379.bezierCurveTo(p1017 * 366.633544921875, p1017 * 145.98580932617188, p1017 * 345.633544921875, p1017 * 207.98580932617188, p1017 * 286.633544921875, p1017 * 208.98580932617188);
    v1379.bezierCurveTo(p1017 * 315.633544921875, p1017 * 223.98580932617188, p1017 * 327.633544921875, p1017 * 287.9858093261719, p1017 * 355.633544921875, p1017 * 305.9858093261719);
    v1379.bezierCurveTo(p1017 * 293.633544921875, p1017 * 298.9858093261719, p1017 * 293.633544921875, p1017 * 275.9858093261719, p1017 * 276.633544921875, p1017 * 266.9858093261719);
    v1379.bezierCurveTo(p1017 * 274.633544921875, p1017 * 282.9858093261719, p1017 * 287.633544921875, p1017 * 288.9858093261719, p1017 * 295.633544921875, p1017 * 296.9858093261719);
    v1379.bezierCurveTo(p1017 * 287.133544921875, p1017 * 302.4858093261719, p1017 * 287.133544921875, p1017 * 302.4858093261719, p1017 * 278.633544921875, p1017 * 307.9858093261719);
    v1379.bezierCurveTo(p1017 * 261.633544921875, p1017 * 297.9858093261719, p1017 * 258.633544921875, p1017 * 293.9858093261719, p1017 * 255.633544921875, p1017 * 290.9858093261719);
    v1379.bezierCurveTo(p1017 * 249.633544921875, p1017 * 301.9858093261719, p1017 * 225.633544921875, p1017 * 320.9858093261719, p1017 * 202.633544921875, p1017 * 354.9858093261719);
    v1379.bezierCurveTo(p1017 * 195.633544921875, p1017 * 318.9858093261719, p1017 * 196.633544921875, p1017 * 306.9858093261719, p1017 * 198.633544921875, p1017 * 300.9858093261719);
    v1379.bezierCurveTo(p1017 * 209.633544921875, p1017 * 268.9858093261719, p1017 * 199.633544921875, p1017 * 266.9858093261719, p1017 * 195.633544921875, p1017 * 256.9858093261719);
    v1379.bezierCurveTo(p1017 * 183.633544921875, p1017 * 274.9858093261719, p1017 * 182.633544921875, p1017 * 281.9858093261719, p1017 * 192.633544921875, p1017 * 305.9858093261719);
    v1379.bezierCurveTo(p1017 * 194.633544921875, p1017 * 317.9858093261719, p1017 * 191.633544921875, p1017 * 336.9858093261719, p1017 * 186.633544921875, p1017 * 351.9858093261719);
    v1379.bezierCurveTo(p1017 * 166.633544921875, p1017 * 318.9858093261719, p1017 * 141.633544921875, p1017 * 303.9858093261719, p1017 * 136.633544921875, p1017 * 286.9858093261719);
    v1379.bezierCurveTo(p1017 * 122.633544921875, p1017 * 303.9858093261719, p1017 * 115.633544921875, p1017 * 305.9858093261719, p1017 * 109.633544921875, p1017 * 306.9858093261719);
    v1379.bezierCurveTo(p1017 * 101.133544921875, p1017 * 301.9858093261719, p1017 * 94.633544921875, p1017 * 297.9858093261719, p1017 * 92.633544921875, p1017 * 296.9858093261719);
    v1379.bezierCurveTo(p1017 * 116.633544921875, p1017 * 277.9858093261719, p1017 * 116.633544921875, p1017 * 266.9858093261719, p1017 * 119.633544921875, p1017 * 257.9858093261719);
    v1379.bezierCurveTo(p1017 * 107.633544921875, p1017 * 257.9858093261719, p1017 * 65.633544921875, p1017 * 308.9858093261719, p1017 * 24.633544921875, p1017 * 303.9858093261719);
    v1379.bezierCurveTo(p1017 * 51.633544921875, p1017 * 275.9858093261719, p1017 * 64.633544921875, p1017 * 220.98580932617188, p1017 * 108.633544921875, p1017 * 205.98580932617188);
    v1379.bezierCurveTo(p1017 * 14.633544921875, p1017 * 198.98580932617188, p1017 * 26.633544921875, p1017 * 142.98580932617188, p1017 * 25.633544921875, p1017 * 86.98580932617188);
    v1379.bezierCurveTo(p1017 * 41.633544921875, p1017 * 155.98580932617188, p1017 * 81.633544921875, p1017 * 148.98580932617188, p1017 * 113.633544921875, p1017 * 124.98580932617188);
    v1379.bezierCurveTo(p1017 * 102.633544921875, p1017 * 93.98580932617188, p1017 * 95.633544921875, p1017 * 88.98580932617188, p1017 * 89.633544921875, p1017 * 81.98580932617188);
    v1379.bezierCurveTo(p1017 * 97.633544921875, p1017 * 76.48580932617188, p1017 * 97.633544921875, p1017 * 76.48580932617188, p1017 * 105.633544921875, p1017 * 70.98580932617188);
    v1379.bezierCurveTo(p1017 * 120.633544921875, p1017 * 78.98580932617188, p1017 * 121.633544921875, p1017 * 81.98580932617188, p1017 * 124.633544921875, p1017 * 86.98580932617188);
    v1379.bezierCurveTo(p1017 * 132.633544921875, p1017 * 71.98580932617188, p1017 * 160.633544921875, p1017 * 56.985809326171875, p1017 * 175.633544921875, p1017 * 23.985809326171875);
    v1379.bezierCurveTo(p1017 * 182.633544921875, p1017 * 53.985809326171875, p1017 * 170.633544921875, p1017 * 102.98580932617188, p1017 * 191.633544921875, p1017 * 125.98580932617188);
    v1379.bezierCurveTo(p1017 * 214.633544921875, p1017 * 89.98580932617188, p1017 * 192.633544921875, p1017 * 58.985809326171875, p1017 * 202.633544921875, p1017 * 20.985809326171875);
    v1379.closePath();
    f84(v1379, p1018[2], p1018[3], p1017 * 5);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 203.633544921875, p1017 * 21.985809326171875);
    v1379.bezierCurveTo(p1017 * 223.633544921875, p1017 * 63.985809326171875, p1017 * 227.633544921875, p1017 * 72.98580932617188, p1017 * 235.633544921875, p1017 * 98.98580932617188);
    v1379.bezierCurveTo(p1017 * 241.633544921875, p1017 * 123.98580932617188, p1017 * 225.633544921875, p1017 * 138.98580932617188, p1017 * 196.633544921875, p1017 * 122.98580932617188);
    v1379.bezierCurveTo(p1017 * 213.633544921875, p1017 * 93.98580932617188, p1017 * 199.633544921875, p1017 * 49.985809326171875, p1017 * 203.633544921875, p1017 * 26.985809326171875);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 175.633544921875, p1017 * 25.985809326171875);
    v1379.bezierCurveTo(p1017 * 176.633544921875, p1017 * 51.985809326171875, p1017 * 171.633544921875, p1017 * 88.98580932617188, p1017 * 186.633544921875, p1017 * 121.98580932617188);
    v1379.bezierCurveTo(p1017 * 156.633544921875, p1017 * 144.98580932617188, p1017 * 139.633544921875, p1017 * 120.98580932617188, p1017 * 147.633544921875, p1017 * 97.98580932617188);
    v1379.bezierCurveTo(p1017 * 152.633544921875, p1017 * 77.98580932617188, p1017 * 162.633544921875, p1017 * 60.985809326171875, p1017 * 176.633544921875, p1017 * 25.985809326171875);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 26.633544921875, p1017 * 96.98580932617188);
    v1379.bezierCurveTo(p1017 * 38.633544921875, p1017 * 151.98580932617188, p1017 * 61.633544921875, p1017 * 161.98580932617188, p1017 * 88.633544921875, p1017 * 168.98580932617188);
    v1379.bezierCurveTo(p1017 * 117.633544921875, p1017 * 177.98580932617188, p1017 * 113.633544921875, p1017 * 185.98580932617188, p1017 * 106.633544921875, p1017 * 204.98580932617188);
    v1379.bezierCurveTo(p1017 * 32.633544921875, p1017 * 204.98580932617188, p1017 * 25.633544921875, p1017 * 149.98580932617188, p1017 * 25.633544921875, p1017 * 97.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 351.633544921875, p1017 * 99.98580932617188);
    v1379.bezierCurveTo(p1017 * 365.633544921875, p1017 * 161.98580932617188, p1017 * 333.633544921875, p1017 * 203.98580932617188, p1017 * 287.633544921875, p1017 * 207.98580932617188);
    v1379.bezierCurveTo(p1017 * 255.633544921875, p1017 * 208.98580932617188, p1017 * 266.633544921875, p1017 * 174.98580932617188, p1017 * 285.633544921875, p1017 * 176.98580932617188);
    v1379.bezierCurveTo(p1017 * 313.633544921875, p1017 * 178.98580932617188, p1017 * 348.633544921875, p1017 * 135.98580932617188, p1017 * 353.633544921875, p1017 * 99.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 350.633544921875, p1017 * 302.9858093261719);
    v1379.bezierCurveTo(p1017 * 310.633544921875, p1017 * 280.9858093261719, p1017 * 314.633544921875, p1017 * 244.98580932617188, p1017 * 292.633544921875, p1017 * 230.98580932617188);
    v1379.bezierCurveTo(p1017 * 272.633544921875, p1017 * 215.98580932617188, p1017 * 263.633544921875, p1017 * 222.98580932617188, p1017 * 256.633544921875, p1017 * 236.98580932617188);
    v1379.bezierCurveTo(p1017 * 251.633544921875, p1017 * 249.98580932617188, p1017 * 264.633544921875, p1017 * 255.98580932617188, p1017 * 279.633544921875, p1017 * 268.9858093261719);
    v1379.bezierCurveTo(p1017 * 306.633544921875, p1017 * 295.9858093261719, p1017 * 325.633544921875, p1017 * 299.9858093261719, p1017 * 349.633544921875, p1017 * 302.9858093261719);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 95.633544921875, p1017 * 224.98580932617188);
    v1379.bezierCurveTo(p1017 * 64.633544921875, p1017 * 245.98580932617188, p1017 * 62.633544921875, p1017 * 280.9858093261719, p1017 * 32.633544921875, p1017 * 303.9858093261719);
    v1379.bezierCurveTo(p1017 * 59.633544921875, p1017 * 301.9858093261719, p1017 * 102.633544921875, p1017 * 260.9858093261719, p1017 * 116.633544921875, p1017 * 255.98580932617188);
    v1379.bezierCurveTo(p1017 * 139.633544921875, p1017 * 229.98580932617188, p1017 * 108.633544921875, p1017 * 209.98580932617188, p1017 * 97.633544921875, p1017 * 224.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 195.633544921875, p1017 * 253.98580932617188);
    v1379.bezierCurveTo(p1017 * 209.633544921875, p1017 * 282.9858093261719, p1017 * 205.633544921875, p1017 * 278.9858093261719, p1017 * 199.633544921875, p1017 * 307.9858093261719);
    v1379.bezierCurveTo(p1017 * 198.633544921875, p1017 * 332.9858093261719, p1017 * 201.633544921875, p1017 * 340.9858093261719, p1017 * 202.633544921875, p1017 * 348.9858093261719);
    v1379.bezierCurveTo(p1017 * 215.633544921875, p1017 * 313.9858093261719, p1017 * 226.633544921875, p1017 * 291.9858093261719, p1017 * 235.633544921875, p1017 * 270.9858093261719);
    v1379.bezierCurveTo(p1017 * 243.633544921875, p1017 * 247.98580932617188, p1017 * 219.633544921875, p1017 * 235.98580932617188, p1017 * 196.633544921875, p1017 * 252.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 195.633544921875, p1017 * 251.98580932617188);
    v1379.bezierCurveTo(p1017 * 176.633544921875, p1017 * 275.9858093261719, p1017 * 182.633544921875, p1017 * 285.9858093261719, p1017 * 191.633544921875, p1017 * 308.9858093261719);
    v1379.bezierCurveTo(p1017 * 194.633544921875, p1017 * 318.9858093261719, p1017 * 190.633544921875, p1017 * 334.9858093261719, p1017 * 186.633544921875, p1017 * 348.9858093261719);
    v1379.bezierCurveTo(p1017 * 175.633544921875, p1017 * 307.9858093261719, p1017 * 157.633544921875, p1017 * 291.9858093261719, p1017 * 155.633544921875, p1017 * 272.9858093261719);
    v1379.bezierCurveTo(p1017 * 150.633544921875, p1017 * 243.98580932617188, p1017 * 170.633544921875, p1017 * 236.98580932617188, p1017 * 195.633544921875, p1017 * 251.98580932617188);
    v1379.closePath();
    f84(v1379, p1018[3]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 316, p1017 * 186.8020782470703);
    v1379.bezierCurveTo(p1017 * 315, p1017 * 173.8020782470703, p1017 * 298, p1017 * 177.8020782470703, p1017 * 293, p1017 * 183.8020782470703);
    v1379.bezierCurveTo(p1017 * 285, p1017 * 195.8020782470703, p1017 * 314, p1017 * 197.8020782470703, p1017 * 315, p1017 * 187.8020782470703);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 340, p1017 * 157.8020782470703);
    v1379.bezierCurveTo(p1017 * 327, p1017 * 153.8020782470703, p1017 * 321, p1017 * 168.8020782470703, p1017 * 330, p1017 * 174.8020782470703);
    v1379.bezierCurveTo(p1017 * 341, p1017 * 178.8020782470703, p1017 * 347, p1017 * 161.8020782470703, p1017 * 341, p1017 * 157.8020782470703);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 349, p1017 * 136.8020782470703);
    v1379.bezierCurveTo(p1017 * 343, p1017 * 135.8020782470703, p1017 * 342, p1017 * 139.8020782470703, p1017 * 341, p1017 * 147.8020782470703);
    v1379.bezierCurveTo(p1017 * 343, p1017 * 155.8020782470703, p1017 * 353, p1017 * 143.8020782470703, p1017 * 349, p1017 * 137.8020782470703);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 278.75, p1017 * 246.4375);
    v1379.bezierCurveTo(p1017 * 288.75, p1017 * 242.4375, p1017 * 301.75, p1017 * 248.4375, p1017 * 298.75, p1017 * 262.4375);
    v1379.bezierCurveTo(p1017 * 293.75, p1017 * 271.4375, p1017 * 287.75, p1017 * 271.4375, p1017 * 278.75, p1017 * 262.4375);
    v1379.bezierCurveTo(p1017 * 271.75, p1017 * 255.4375, p1017 * 274.75, p1017 * 250.4375, p1017 * 277.75, p1017 * 247.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 310.75, p1017 * 277.4375);
    v1379.bezierCurveTo(p1017 * 319.75, p1017 * 280.4375, p1017 * 322.75, p1017 * 283.4375, p1017 * 321.75, p1017 * 289.4375);
    v1379.bezierCurveTo(p1017 * 319.75, p1017 * 295.4375, p1017 * 313.75, p1017 * 291.4375, p1017 * 308.75, p1017 * 288.4375);
    v1379.bezierCurveTo(p1017 * 301.75, p1017 * 281.4375, p1017 * 306.75, p1017 * 277.4375, p1017 * 309.75, p1017 * 277.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 217.75, p1017 * 257.4375);
    v1379.bezierCurveTo(p1017 * 227.75, p1017 * 269.4375, p1017 * 220.75, p1017 * 281.4375, p1017 * 212.75, p1017 * 280.4375);
    v1379.bezierCurveTo(p1017 * 206.75, p1017 * 279.4375, p1017 * 206.75, p1017 * 269.4375, p1017 * 204.75, p1017 * 260.4375);
    v1379.bezierCurveTo(p1017 * 204.75, p1017 * 254.4375, p1017 * 211.75, p1017 * 253.4375, p1017 * 216.75, p1017 * 256.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 211.75, p1017 * 289.4375);
    v1379.bezierCurveTo(p1017 * 219.75, p1017 * 292.4375, p1017 * 213.75, p1017 * 306.4375, p1017 * 206.75, p1017 * 307.4375);
    v1379.bezierCurveTo(p1017 * 199.75, p1017 * 303.4375, p1017 * 209.75, p1017 * 287.4375, p1017 * 210.75, p1017 * 289.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 171.75, p1017 * 256.4375);
    v1379.bezierCurveTo(p1017 * 162.75, p1017 * 273.4375, p1017 * 166.75, p1017 * 278.4375, p1017 * 175.75, p1017 * 280.4375);
    v1379.bezierCurveTo(p1017 * 183.75, p1017 * 278.4375, p1017 * 185.75, p1017 * 257.4375, p1017 * 182.75, p1017 * 255.4375);
    v1379.bezierCurveTo(p1017 * 176.75, p1017 * 251.4375, p1017 * 172.75, p1017 * 253.4375, p1017 * 172.75, p1017 * 256.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 175.75, p1017 * 289.9375);
    v1379.bezierCurveTo(p1017 * 183.75, p1017 * 287.9375, p1017 * 186.75, p1017 * 301.9375, p1017 * 182.75, p1017 * 305.9375);
    v1379.bezierCurveTo(p1017 * 176.75, p1017 * 307.9375, p1017 * 171.75, p1017 * 292.9375, p1017 * 174.75, p1017 * 290.9375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 205.75, p1017 * 314.4375);
    v1379.bezierCurveTo(p1017 * 209.75, p1017 * 316.4375, p1017 * 210.75, p1017 * 320.4375, p1017 * 206.75, p1017 * 323.4375);
    v1379.bezierCurveTo(p1017 * 201.75, p1017 * 324.4375, p1017 * 201.75, p1017 * 314.4375, p1017 * 204.75, p1017 * 314.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 186.75, p1017 * 313.4375);
    v1379.bezierCurveTo(p1017 * 181.75, p1017 * 315.4375, p1017 * 180.75, p1017 * 321.4375, p1017 * 185.75, p1017 * 326.4375);
    v1379.bezierCurveTo(p1017 * 190.75, p1017 * 327.4375, p1017 * 190.75, p1017 * 313.4375, p1017 * 187.75, p1017 * 314.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 103.75, p1017 * 244.4375);
    v1379.bezierCurveTo(p1017 * 96.75, p1017 * 239.4375, p1017 * 83.75, p1017 * 240.4375, p1017 * 81.75, p1017 * 255.4375);
    v1379.bezierCurveTo(p1017 * 80.75, p1017 * 264.4375, p1017 * 89.75, p1017 * 269.4375, p1017 * 99.75, p1017 * 260.4375);
    v1379.bezierCurveTo(p1017 * 106.75, p1017 * 254.4375, p1017 * 106.75, p1017 * 250.4375, p1017 * 104.75, p1017 * 245.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 86.75, p1017 * 182.4375);
    v1379.bezierCurveTo(p1017 * 82.75, p1017 * 170.4375, p1017 * 66.75, p1017 * 169.4375, p1017 * 61.75, p1017 * 181.4375);
    v1379.bezierCurveTo(p1017 * 58.75, p1017 * 187.4375, p1017 * 68.75, p1017 * 194.4375, p1017 * 75.75, p1017 * 192.4375);
    v1379.bezierCurveTo(p1017 * 83.75, p1017 * 192.4375, p1017 * 86.75, p1017 * 187.4375, p1017 * 86.75, p1017 * 183.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 44.75, p1017 * 152.4375);
    v1379.bezierCurveTo(p1017 * 55.75, p1017 * 159.4375, p1017 * 54.75, p1017 * 170.4375, p1017 * 46.75, p1017 * 171.4375);
    v1379.bezierCurveTo(p1017 * 39.75, p1017 * 170.4375, p1017 * 34.75, p1017 * 151.4375, p1017 * 43.75, p1017 * 152.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 31.75, p1017 * 130.4375);
    v1379.bezierCurveTo(p1017 * 35.75, p1017 * 132.4375, p1017 * 35.75, p1017 * 131.4375, p1017 * 37.75, p1017 * 137.4375);
    v1379.bezierCurveTo(p1017 * 36.75, p1017 * 144.4375, p1017 * 36.75, p1017 * 145.4375, p1017 * 33.75, p1017 * 144.4375);
    v1379.bezierCurveTo(p1017 * 26.75, p1017 * 137.4375, p1017 * 29.75, p1017 * 131.4375, p1017 * 31.75, p1017 * 130.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 69.75, p1017 * 274.4375);
    v1379.bezierCurveTo(p1017 * 62.75, p1017 * 272.4375, p1017 * 59.75, p1017 * 277.4375, p1017 * 57.75, p1017 * 284.4375);
    v1379.bezierCurveTo(p1017 * 56.75, p1017 * 290.4375, p1017 * 63.75, p1017 * 289.4375, p1017 * 71.75, p1017 * 282.4375);
    v1379.bezierCurveTo(p1017 * 75.75, p1017 * 277.4375, p1017 * 72.75, p1017 * 275.4375, p1017 * 69.75, p1017 * 274.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 165.75, p1017 * 95.4375);
    v1379.bezierCurveTo(p1017 * 177.75, p1017 * 97.4375, p1017 * 182.75, p1017 * 115.4375, p1017 * 173.75, p1017 * 121.4375);
    v1379.bezierCurveTo(p1017 * 164.75, p1017 * 126.4375, p1017 * 149.75, p1017 * 102.4375, p1017 * 164.75, p1017 * 96.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 216.75, p1017 * 94.4375);
    v1379.bezierCurveTo(p1017 * 227.75, p1017 * 99.4375, p1017 * 223.75, p1017 * 122.4375, p1017 * 210.75, p1017 * 119.4375);
    v1379.bezierCurveTo(p1017 * 203.75, p1017 * 115.4375, p1017 * 207.75, p1017 * 93.4375, p1017 * 216.75, p1017 * 94.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 211.75, p1017 * 68.4375);
    v1379.bezierCurveTo(p1017 * 218.75, p1017 * 69.4375, p1017 * 220.75, p1017 * 77.4375, p1017 * 216.75, p1017 * 83.4375);
    v1379.bezierCurveTo(p1017 * 208.75, p1017 * 89.4375, p1017 * 205.75, p1017 * 68.4375, p1017 * 210.75, p1017 * 68.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 169.75, p1017 * 71.4375);
    v1379.bezierCurveTo(p1017 * 162.75, p1017 * 72.4375, p1017 * 159.75, p1017 * 83.4375, p1017 * 167.75, p1017 * 88.4375);
    v1379.bezierCurveTo(p1017 * 174.75, p1017 * 90.4375, p1017 * 174.75, p1017 * 72.4375, p1017 * 170.75, p1017 * 71.4375);
    v1379.closePath();
    f84(v1379, p1018[6], p1018[7], p1017 * 4);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 193.75, p1017 * 160.4375);
    v1379.bezierCurveTo(p1017 * 215.75, p1017 * 168.4375, p1017 * 224.75, p1017 * 180.4375, p1017 * 229.75, p1017 * 193.4375);
    v1379.bezierCurveTo(p1017 * 223.75, p1017 * 211.4375, p1017 * 205.75, p1017 * 225.4375, p1017 * 193.75, p1017 * 229.4375);
    v1379.bezierCurveTo(p1017 * 167.75, p1017 * 217.4375, p1017 * 161.75, p1017 * 205.4375, p1017 * 156.75, p1017 * 192.4375);
    v1379.bezierCurveTo(p1017 * 164.75, p1017 * 175.4375, p1017 * 176.75, p1017 * 166.4375, p1017 * 192.75, p1017 * 160.4375);
    v1379.closePath();
    f84(v1379, p1018[8], p1018[9], p1017 * 3);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 189.1999969482422, p1017 * 182.61249923706055);
    v1379.bezierCurveTo(p1017 * 190.1999969482422, p1017 * 184.11249923706055, p1017 * 190.1999969482422, p1017 * 184.11249923706055, p1017 * 191.1999969482422, p1017 * 185.61249923706055);
    v1379.bezierCurveTo(p1017 * 192.1999969482422, p1017 * 180.61249923706055, p1017 * 192.1999969482422, p1017 * 180.61249923706055, p1017 * 193.1999969482422, p1017 * 175.61249923706055);
    v1379.bezierCurveTo(p1017 * 195.6999969482422, p1017 * 177.11249923706055, p1017 * 195.6999969482422, p1017 * 177.11249923706055, p1017 * 198.1999969482422, p1017 * 178.61249923706055);
    v1379.bezierCurveTo(p1017 * 198.1999969482422, p1017 * 181.11249923706055, p1017 * 198.1999969482422, p1017 * 181.11249923706055, p1017 * 198.1999969482422, p1017 * 183.61249923706055);
    v1379.bezierCurveTo(p1017 * 201.6999969482422, p1017 * 181.11249923706055, p1017 * 201.6999969482422, p1017 * 181.11249923706055, p1017 * 205.1999969482422, p1017 * 178.61249923706055);
    v1379.bezierCurveTo(p1017 * 206.6999969482422, p1017 * 180.61249923706055, p1017 * 206.6999969482422, p1017 * 180.61249923706055, p1017 * 208.1999969482422, p1017 * 182.61249923706055);
    v1379.bezierCurveTo(p1017 * 206.1999969482422, p1017 * 185.61249923706055, p1017 * 206.1999969482422, p1017 * 185.61249923706055, p1017 * 204.1999969482422, p1017 * 188.61249923706055);
    v1379.bezierCurveTo(p1017 * 208.6999969482422, p1017 * 188.61249923706055, p1017 * 208.6999969482422, p1017 * 188.61249923706055, p1017 * 213.1999969482422, p1017 * 188.61249923706055);
    v1379.bezierCurveTo(p1017 * 213.1999969482422, p1017 * 191.11249923706055, p1017 * 213.1999969482422, p1017 * 191.11249923706055, p1017 * 213.1999969482422, p1017 * 193.61249923706055);
    v1379.bezierCurveTo(p1017 * 209.6999969482422, p1017 * 194.61249923706055, p1017 * 209.6999969482422, p1017 * 194.61249923706055, p1017 * 206.1999969482422, p1017 * 195.61249923706055);
    v1379.bezierCurveTo(p1017 * 210.1999969482422, p1017 * 198.61249923706055, p1017 * 210.1999969482422, p1017 * 198.61249923706055, p1017 * 214.1999969482422, p1017 * 201.61249923706055);
    v1379.bezierCurveTo(p1017 * 212.1999969482422, p1017 * 203.61249923706055, p1017 * 212.1999969482422, p1017 * 203.61249923706055, p1017 * 210.1999969482422, p1017 * 205.61249923706055);
    v1379.bezierCurveTo(p1017 * 207.1999969482422, p1017 * 204.11249923706055, p1017 * 207.1999969482422, p1017 * 204.11249923706055, p1017 * 204.1999969482422, p1017 * 202.61249923706055);
    v1379.bezierCurveTo(p1017 * 205.6999969482422, p1017 * 207.61249923706055, p1017 * 205.6999969482422, p1017 * 207.61249923706055, p1017 * 207.1999969482422, p1017 * 212.61249923706055);
    v1379.bezierCurveTo(p1017 * 204.6999969482422, p1017 * 213.61249923706055, p1017 * 204.6999969482422, p1017 * 213.61249923706055, p1017 * 202.1999969482422, p1017 * 214.61249923706055);
    v1379.bezierCurveTo(p1017 * 200.1999969482422, p1017 * 210.61249923706055, p1017 * 200.1999969482422, p1017 * 210.61249923706055, p1017 * 198.1999969482422, p1017 * 206.61249923706055);
    v1379.bezierCurveTo(p1017 * 196.6999969482422, p1017 * 211.61249923706055, p1017 * 196.6999969482422, p1017 * 211.61249923706055, p1017 * 195.1999969482422, p1017 * 216.61249923706055);
    v1379.bezierCurveTo(p1017 * 192.6999969482422, p1017 * 216.11249923706055, p1017 * 192.6999969482422, p1017 * 216.11249923706055, p1017 * 190.1999969482422, p1017 * 215.61249923706055);
    v1379.bezierCurveTo(p1017 * 190.1999969482422, p1017 * 211.61249923706055, p1017 * 190.1999969482422, p1017 * 211.61249923706055, p1017 * 190.1999969482422, p1017 * 207.61249923706055);
    v1379.bezierCurveTo(p1017 * 186.1999969482422, p1017 * 210.61249923706055, p1017 * 186.1999969482422, p1017 * 210.61249923706055, p1017 * 182.1999969482422, p1017 * 213.61249923706055);
    v1379.bezierCurveTo(p1017 * 181.1999969482422, p1017 * 211.11249923706055, p1017 * 181.1999969482422, p1017 * 211.11249923706055, p1017 * 180.1999969482422, p1017 * 208.61249923706055);
    v1379.bezierCurveTo(p1017 * 183.1999969482422, p1017 * 205.61249923706055, p1017 * 183.1999969482422, p1017 * 205.61249923706055, p1017 * 186.1999969482422, p1017 * 202.61249923706055);
    v1379.bezierCurveTo(p1017 * 180.6999969482422, p1017 * 203.11249923706055, p1017 * 180.6999969482422, p1017 * 203.11249923706055, p1017 * 175.1999969482422, p1017 * 203.61249923706055);
    v1379.bezierCurveTo(p1017 * 174.6999969482422, p1017 * 200.11249923706055, p1017 * 174.6999969482422, p1017 * 200.11249923706055, p1017 * 174.1999969482422, p1017 * 196.61249923706055);
    v1379.bezierCurveTo(p1017 * 177.1999969482422, p1017 * 195.61249923706055, p1017 * 177.1999969482422, p1017 * 195.61249923706055, p1017 * 180.1999969482422, p1017 * 194.61249923706055);
    v1379.bezierCurveTo(p1017 * 177.1999969482422, p1017 * 191.61249923706055, p1017 * 177.1999969482422, p1017 * 191.61249923706055, p1017 * 174.1999969482422, p1017 * 188.61249923706055);
    v1379.bezierCurveTo(p1017 * 175.6999969482422, p1017 * 187.11249923706055, p1017 * 175.6999969482422, p1017 * 187.11249923706055, p1017 * 177.1999969482422, p1017 * 185.61249923706055);
    v1379.bezierCurveTo(p1017 * 180.6999969482422, p1017 * 187.11249923706055, p1017 * 180.6999969482422, p1017 * 187.11249923706055, p1017 * 184.1999969482422, p1017 * 188.61249923706055);
    v1379.bezierCurveTo(p1017 * 182.6999969482422, p1017 * 183.61249923706055, p1017 * 182.6999969482422, p1017 * 183.61249923706055, p1017 * 181.1999969482422, p1017 * 178.61249923706055);
    v1379.bezierCurveTo(p1017 * 183.1999969482422, p1017 * 177.11249923706055, p1017 * 183.1999969482422, p1017 * 177.11249923706055, p1017 * 185.1999969482422, p1017 * 175.61249923706055);
    v1379.closePath();
    f84(v1379, p1018[10]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 185.1999969482422, p1017 * 173.8125);
    v1379.bezierCurveTo(p1017 * 187.1999969482422, p1017 * 179.3125, p1017 * 187.1999969482422, p1017 * 179.3125, p1017 * 189.1999969482422, p1017 * 184.8125);
    v1379.bezierCurveTo(p1017 * 184.1999969482422, p1017 * 181.8125, p1017 * 184.1999969482422, p1017 * 181.8125, p1017 * 179.1999969482422, p1017 * 178.8125);
    v1379.bezierCurveTo(p1017 * 181.1999969482422, p1017 * 175.8125, p1017 * 182.1999969482422, p1017 * 174.8125, p1017 * 185.1999969482422, p1017 * 173.8125);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 192.1999969482422, p1017 * 173.61249542236328);
    v1379.bezierCurveTo(p1017 * 194.1999969482422, p1017 * 172.61249542236328, p1017 * 196.1999969482422, p1017 * 171.61249542236328, p1017 * 199.1999969482422, p1017 * 173.61249542236328);
    v1379.bezierCurveTo(p1017 * 197.6999969482422, p1017 * 179.61249542236328, p1017 * 197.6999969482422, p1017 * 179.61249542236328, p1017 * 196.1999969482422, p1017 * 185.61249542236328);
    v1379.bezierCurveTo(p1017 * 194.1999969482422, p1017 * 179.61249542236328, p1017 * 194.1999969482422, p1017 * 179.61249542236328, p1017 * 192.1999969482422, p1017 * 173.61249542236328);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 205.1999969482422, p1017 * 176.2125015258789);
    v1379.bezierCurveTo(p1017 * 210.1999969482422, p1017 * 178.2125015258789, p1017 * 211.1999969482422, p1017 * 179.2125015258789, p1017 * 211.1999969482422, p1017 * 181.2125015258789);
    v1379.bezierCurveTo(p1017 * 206.6999969482422, p1017 * 184.7125015258789, p1017 * 206.6999969482422, p1017 * 184.7125015258789, p1017 * 202.1999969482422, p1017 * 188.2125015258789);
    v1379.bezierCurveTo(p1017 * 203.6999969482422, p1017 * 182.2125015258789, p1017 * 203.6999969482422, p1017 * 182.2125015258789, p1017 * 205.1999969482422, p1017 * 176.2125015258789);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 214.1999969482422, p1017 * 187.21249985694885);
    v1379.bezierCurveTo(p1017 * 216.1999969482422, p1017 * 191.21249985694885, p1017 * 216.1999969482422, p1017 * 192.21249985694885, p1017 * 215.1999969482422, p1017 * 195.21249985694885);
    v1379.bezierCurveTo(p1017 * 206.1999969482422, p1017 * 194.21249985694885, p1017 * 205.1999969482422, p1017 * 194.21249985694885, p1017 * 205.1999969482422, p1017 * 194.21249985694885);
    v1379.bezierCurveTo(p1017 * 209.6999969482422, p1017 * 190.71249985694885, p1017 * 209.6999969482422, p1017 * 190.71249985694885, p1017 * 214.1999969482422, p1017 * 187.21249985694885);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 204.1999969482422, p1017 * 201.8125);
    v1379.bezierCurveTo(p1017 * 209.1999969482422, p1017 * 201.3125, p1017 * 209.1999969482422, p1017 * 201.3125, p1017 * 214.1999969482422, p1017 * 200.8125);
    v1379.bezierCurveTo(p1017 * 215.1999969482422, p1017 * 204.8125, p1017 * 214.1999969482422, p1017 * 205.8125, p1017 * 213.1999969482422, p1017 * 208.8125);
    v1379.bezierCurveTo(p1017 * 208.6999969482422, p1017 * 205.3125, p1017 * 208.6999969482422, p1017 * 205.3125, p1017 * 204.1999969482422, p1017 * 201.8125);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 199.1999969482422, p1017 * 205.61249923706055);
    v1379.bezierCurveTo(p1017 * 207.1999969482422, p1017 * 212.61249923706055, p1017 * 203.6999969482422, p1017 * 209.11249923706055, p1017 * 208.1999969482422, p1017 * 212.61249923706055);
    v1379.bezierCurveTo(p1017 * 206.1999969482422, p1017 * 215.61249923706055, p1017 * 204.1999969482422, p1017 * 217.61249923706055, p1017 * 203.1999969482422, p1017 * 216.61249923706055);
    v1379.bezierCurveTo(p1017 * 201.1999969482422, p1017 * 211.11249923706055, p1017 * 201.1999969482422, p1017 * 211.11249923706055, p1017 * 199.1999969482422, p1017 * 205.61249923706055);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 191.1999969482422, p1017 * 207.01250076293945);
    v1379.bezierCurveTo(p1017 * 194.1999969482422, p1017 * 213.01250076293945, p1017 * 194.1999969482422, p1017 * 216.01250076293945, p1017 * 196.1999969482422, p1017 * 218.01250076293945);
    v1379.bezierCurveTo(p1017 * 193.1999969482422, p1017 * 220.01250076293945, p1017 * 190.1999969482422, p1017 * 220.01250076293945, p1017 * 188.1999969482422, p1017 * 218.01250076293945);
    v1379.bezierCurveTo(p1017 * 189.6999969482422, p1017 * 213.01250076293945, p1017 * 189.6999969482422, p1017 * 213.01250076293945, p1017 * 191.1999969482422, p1017 * 208.01250076293945);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 186.1999969482422, p1017 * 203.21249961853027);
    v1379.bezierCurveTo(p1017 * 184.1999969482422, p1017 * 209.21249961853027, p1017 * 184.1999969482422, p1017 * 209.21249961853027, p1017 * 182.1999969482422, p1017 * 215.21249961853027);
    v1379.bezierCurveTo(p1017 * 177.1999969482422, p1017 * 212.21249961853027, p1017 * 176.1999969482422, p1017 * 211.21249961853027, p1017 * 177.1999969482422, p1017 * 210.21249961853027);
    v1379.bezierCurveTo(p1017 * 181.6999969482422, p1017 * 206.71249961853027, p1017 * 181.6999969482422, p1017 * 206.71249961853027, p1017 * 186.1999969482422, p1017 * 203.21249961853027);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 183.1999969482422, p1017 * 196.8125);
    v1379.bezierCurveTo(p1017 * 177.1999969482422, p1017 * 196.3125, p1017 * 177.1999969482422, p1017 * 196.3125, p1017 * 171.1999969482422, p1017 * 195.8125);
    v1379.bezierCurveTo(p1017 * 171.1999969482422, p1017 * 199.8125, p1017 * 171.1999969482422, p1017 * 202.8125, p1017 * 174.1999969482422, p1017 * 204.8125);
    v1379.bezierCurveTo(p1017 * 178.6999969482422, p1017 * 200.8125, p1017 * 178.6999969482422, p1017 * 200.8125, p1017 * 183.1999969482422, p1017 * 196.8125);
    v1379.closePath();
    f84(v1379, p1018[11]);
    v1379.beginPath();
    v1379.lineCap = "round";
    v1379.lineJoin = "round";
    v1379.moveTo(p1017 * 185.1999969482422, p1017 * 190.21249771118164);
    v1379.bezierCurveTo(p1017 * 179.6999969482422, p1017 * 186.71249771118164, p1017 * 179.6999969482422, p1017 * 186.71249771118164, p1017 * 174.1999969482422, p1017 * 183.21249771118164);
    v1379.bezierCurveTo(p1017 * 172.1999969482422, p1017 * 186.21249771118164, p1017 * 172.1999969482422, p1017 * 187.21249771118164, p1017 * 172.1999969482422, p1017 * 190.21249771118164);
    v1379.bezierCurveTo(p1017 * 178.1999969482422, p1017 * 190.21249771118164, p1017 * 178.1999969482422, p1017 * 190.21249771118164, p1017 * 184.1999969482422, p1017 * 190.21249771118164);
    v1379.closePath();
    f84(v1379, p1018[11]);
    f89(v1379, p1017 * 126.19999694824219, p1017 * 169.8125, p1017 * 8.94427190999916);
    f84(v1379, p1018[12]);
    f89(v1379, p1017 * 123.19999694824219, p1017 * 164.8125, p1017 * 2.8284271247461903);
    f84(v1379, p1018[13]);
    f89(v1379, p1017 * 253.1999969482422, p1017 * 169.8125, p1017 * 8.94427190999916);
    f84(v1379, p1018[12]);
    f89(v1379, p1017 * 255.1999969482422, p1017 * 164.8125, p1017 * 2.23606797749979);
    f84(v1379, p1018[13]);
    return v1378;
  }
  function f247(p1019, p1020) {
    var v1380 = document.createElement("canvas");
    var v1381 = v1380.getContext("2d");
    var v1382 = p1019 * 120;
    var v1383 = p1019 * 140;
    v1380.width = v1382;
    v1380.height = v1383;
    v1380.width = p1019 * 130;
    v1380.height = p1019 * 120;
    f83(v1381, p1019 * 10, p1019 * 12, p1019 * 110, p1019 * 90, p1019 * 10);
    f84(v1381, p1020[0]);
    f83(v1381, p1019 * 10, p1019 * 5, p1019 * 110, p1019 * 90, p1019 * 10);
    f84(v1381, p1020[1], p1020[2], p1019 * 4);
    var vF88 = f88(-Math.PI / 5, f148(p1019 * 0.5, vVVV16, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1381.drawImage(vF88, p1019 * 12, p1019 * 18);
    vF88 = f88(Math.PI / 4, f204(p1019 * 0.55, true, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1381.drawImage(vF88, p1019 * 36, p1019 * 16);
    return v1380;
  }
  function f248(p1021, p1022, p1023) {
    var v1384 = document.createElement("canvas");
    var v1385 = v1384.getContext("2d");
    v1384.width = p1021 * 46;
    v1384.height = p1021 * 140;
    v1385.scale(p1021 * -1, p1021 * 1);
    v1385.translate(p1021 * -50, p1021 * 40);
    v1385.translate(p1021 * -20, 0);
    v1385.globalAlpha = p1022 ? 0.5 : 1;
    v1385.translate(p1021 * 10, 0);
    v1385.beginPath();
    v1385.lineCap = "round";
    v1385.lineJoin = "round";
    v1385.moveTo(p1021 * 22.599990844726562, p1021 * 85.94999694824219);
    v1385.bezierCurveTo(p1021 * 17.599990844726562, p1021 * 83.94999694824219, p1021 * 17.599990844726562, p1021 * 83.94999694824219, p1021 * 12.599990844726562, p1021 * 81.94999694824219);
    v1385.bezierCurveTo(p1021 * 19.599990844726562, p1021 * 73.94999694824219, p1021 * 2.5999908447265625, p1021 * 22.949996948242188, p1021 * 33.59999084472656, p1021 * 7.9499969482421875);
    v1385.bezierCurveTo(p1021 * 27.599990844726562, p1021 * 28.949996948242188, p1021 * 33.59999084472656, p1021 * 26.949996948242188, p1021 * 35.59999084472656, p1021 * 32.94999694824219);
    v1385.bezierCurveTo(p1021 * 25.599990844726562, p1021 * 59.94999694824219, p1021 * 26.599990844726562, p1021 * 69.94999694824219, p1021 * 29.599990844726562, p1021 * 82.94999694824219);
    v1385.closePath();
    f84(v1385, p1023[0]);
    v1385.beginPath();
    v1385.lineCap = "round";
    v1385.lineJoin = "round";
    v1385.translate(p1021 * -1, 0);
    v1385.moveTo(p1021 * 17.599990844726562, p1021 * 89.75);
    v1385.bezierCurveTo(p1021 * 24.599990844726562, p1021 * 99.75, p1021 * 24.599990844726562, p1021 * 101.75, p1021 * 20.599990844726562, p1021 * 111.75);
    v1385.bezierCurveTo(p1021 * 28.599990844726562, p1021 * 110.75, p1021 * 26.599990844726562, p1021 * 112.75, p1021 * 28.599990844726562, p1021 * 111.75);
    v1385.bezierCurveTo(p1021 * 30.599990844726562, p1021 * 96.75, p1021 * 32.59999084472656, p1021 * 96.75, p1021 * 30.599990844726562, p1021 * 87.75);
    v1385.closePath();
    f84(v1385, p1023[0]);
    v1385.beginPath();
    v1385.lineCap = "round";
    v1385.lineJoin = "round";
    v1385.translate(p1021 * 1, 0);
    v1385.moveTo(p1021 * 7.5999908447265625, p1021 * 86.34999084472656);
    v1385.bezierCurveTo(p1021 * 12.599990844726562, p1021 * 85.34999084472656, p1021 * 14.599990844726562, p1021 * 84.34999084472656, p1021 * 13.599990844726562, p1021 * 84.34999084472656);
    v1385.bezierCurveTo(p1021 * 21.599990844726562, p1021 * 83.34999084472656, p1021 * 21.599990844726562, p1021 * 83.34999084472656, p1021 * 29.599990844726562, p1021 * 82.34999084472656);
    v1385.bezierCurveTo(p1021 * 33.59999084472656, p1021 * 85.84999084472656, p1021 * 33.59999084472656, p1021 * 85.84999084472656, p1021 * 37.59999084472656, p1021 * 89.34999084472656);
    v1385.bezierCurveTo(p1021 * 34.09999084472656, p1021 * 91.84999084472656, p1021 * 34.09999084472656, p1021 * 91.84999084472656, p1021 * 30.599990844726562, p1021 * 94.34999084472656);
    v1385.bezierCurveTo(p1021 * 21.099990844726562, p1021 * 93.34999084472656, p1021 * 21.099990844726562, p1021 * 93.34999084472656, p1021 * 11.599990844726562, p1021 * 92.34999084472656);
    v1385.closePath();
    f84(v1385, p1023[0]);
    v1385.save();
    v1385.translate(p1021 * 23.599990844726562, p1021 * 110.94999694824219);
    v1385.rotate(0);
    f83(v1385, p1021 * -7, p1021 * -4, p1021 * 14, p1021 * 8, p1021 * 10);
    v1385.restore();
    f84(v1385, p1023[0]);
    v1385.translate(p1021 * 0, 0);
    v1385.globalAlpha = 1;
    v1385.translate(p1021 * 10, 0);
    v1385.beginPath();
    v1385.lineCap = "round";
    v1385.lineJoin = "round";
    v1385.moveTo(p1021 * 22.599990844726562, p1021 * 85.94999694824219);
    v1385.bezierCurveTo(p1021 * 17.599990844726562, p1021 * 83.94999694824219, p1021 * 17.599990844726562, p1021 * 83.94999694824219, p1021 * 12.599990844726562, p1021 * 81.94999694824219);
    v1385.bezierCurveTo(p1021 * 19.599990844726562, p1021 * 73.94999694824219, p1021 * 2.5999908447265625, p1021 * 22.949996948242188, p1021 * 33.59999084472656, p1021 * 7.9499969482421875);
    v1385.bezierCurveTo(p1021 * 27.599990844726562, p1021 * 28.949996948242188, p1021 * 33.59999084472656, p1021 * 26.949996948242188, p1021 * 35.59999084472656, p1021 * 32.94999694824219);
    v1385.bezierCurveTo(p1021 * 25.599990844726562, p1021 * 59.94999694824219, p1021 * 26.599990844726562, p1021 * 69.94999694824219, p1021 * 29.599990844726562, p1021 * 82.94999694824219);
    v1385.closePath();
    f84(v1385, p1023[3], p1023[4], p1021 * 3);
    v1385.beginPath();
    v1385.lineCap = "round";
    v1385.lineJoin = "round";
    v1385.translate(p1021 * -1, 0);
    v1385.moveTo(p1021 * 17.599990844726562, p1021 * 89.75);
    v1385.bezierCurveTo(p1021 * 24.599990844726562, p1021 * 99.75, p1021 * 24.599990844726562, p1021 * 101.75, p1021 * 20.599990844726562, p1021 * 111.75);
    v1385.bezierCurveTo(p1021 * 28.599990844726562, p1021 * 110.75, p1021 * 26.599990844726562, p1021 * 112.75, p1021 * 28.599990844726562, p1021 * 111.75);
    v1385.bezierCurveTo(p1021 * 30.599990844726562, p1021 * 96.75, p1021 * 32.59999084472656, p1021 * 96.75, p1021 * 30.599990844726562, p1021 * 87.75);
    v1385.closePath();
    f84(v1385, p1023[1], p1023[2], p1021 * 3);
    v1385.beginPath();
    v1385.lineCap = "round";
    v1385.lineJoin = "round";
    v1385.translate(p1021 * 1, 0);
    v1385.moveTo(p1021 * 7.5999908447265625, p1021 * 86.34999084472656);
    v1385.bezierCurveTo(p1021 * 12.599990844726562, p1021 * 85.34999084472656, p1021 * 14.599990844726562, p1021 * 84.34999084472656, p1021 * 13.599990844726562, p1021 * 84.34999084472656);
    v1385.bezierCurveTo(p1021 * 21.599990844726562, p1021 * 83.34999084472656, p1021 * 21.599990844726562, p1021 * 83.34999084472656, p1021 * 29.599990844726562, p1021 * 82.34999084472656);
    v1385.bezierCurveTo(p1021 * 33.59999084472656, p1021 * 85.84999084472656, p1021 * 33.59999084472656, p1021 * 85.84999084472656, p1021 * 37.59999084472656, p1021 * 89.34999084472656);
    v1385.bezierCurveTo(p1021 * 34.09999084472656, p1021 * 91.84999084472656, p1021 * 34.09999084472656, p1021 * 91.84999084472656, p1021 * 30.599990844726562, p1021 * 94.34999084472656);
    v1385.bezierCurveTo(p1021 * 21.099990844726562, p1021 * 93.34999084472656, p1021 * 21.099990844726562, p1021 * 93.34999084472656, p1021 * 11.599990844726562, p1021 * 92.34999084472656);
    v1385.closePath();
    f84(v1385, p1023[1], p1023[2], p1021 * 3);
    v1385.save();
    v1385.translate(p1021 * 23.599990844726562, p1021 * 110.94999694824219);
    v1385.rotate(0);
    f83(v1385, p1021 * -7, p1021 * -4, p1021 * 14, p1021 * 8, p1021 * 10);
    v1385.restore();
    f84(v1385, p1023[1], p1023[2], p1021 * 3);
    return v1384;
  }
  function f249(p1024, p1025, p1026) {
    var v1386 = document.createElement("canvas");
    var v1387 = v1386.getContext("2d");
    v1386.width = p1024 * 161;
    v1386.height = p1024 * 184;
    v1387.translate(0, p1024 * 10);
    v1387.globalAlpha = 1;
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 105.5, p1024 * 34.609375);
    v1387.bezierCurveTo(p1024 * 48.5, p1024 * 7.609375, p1024 * 11.5, p1024 * 58.609375, p1024 * 20.5, p1024 * 97.609375);
    v1387.bezierCurveTo(p1024 * 44.5, p1024 * 161.609375, p1024 * 70.5, p1024 * 171.609375, p1024 * 88.5, p1024 * 156.609375);
    v1387.bezierCurveTo(p1024 * 120.5, p1024 * 129.609375, p1024 * 123.5, p1024 * 105.609375, p1024 * 128.5, p1024 * 83.609375);
    v1387.bezierCurveTo(p1024 * 137.5, p1024 * 79.609375, p1024 * 141.5, p1024 * 79.609375, p1024 * 146.5, p1024 * 81.609375);
    v1387.bezierCurveTo(p1024 * 153.5, p1024 * 70.609375, p1024 * 151.5, p1024 * 65.609375, p1024 * 148.5, p1024 * 61.609375);
    v1387.bezierCurveTo(p1024 * 134.5, p1024 * 60.609375, p1024 * 131.5, p1024 * 63.609375, p1024 * 127.5, p1024 * 66.609375);
    v1387.bezierCurveTo(p1024 * 127.5, p1024 * 55.609375, p1024 * 125.5, p1024 * 54.609375, p1024 * 120.5, p1024 * 51.609375);
    v1387.bezierCurveTo(p1024 * 128.5, p1024 * 42.609375, p1024 * 136.5, p1024 * 38.609375, p1024 * 147.5, p1024 * 39.609375);
    v1387.bezierCurveTo(p1024 * 152.5, p1024 * 23.609375, p1024 * 147.5, p1024 * 21.609375, p1024 * 140.5, p1024 * 17.609375);
    v1387.bezierCurveTo(p1024 * 120.5, p1024 * 17.609375, p1024 * 114.5, p1024 * 27.609375, p1024 * 106.5, p1024 * 35.609375);
    v1387.closePath();
    f84(v1387, p1026[0]);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 45.5, p1024 * 144.609375);
    v1387.bezierCurveTo(p1024 * 35.5, p1024 * 155.609375, p1024 * 37, p1024 * 152.109375, p1024 * 28.5, p1024 * 159.609375);
    v1387.bezierCurveTo(p1024 * 16.5, p1024 * 154.609375, p1024 * 16.5, p1024 * 151.609375, p1024 * 17.5, p1024 * 141.609375);
    v1387.bezierCurveTo(p1024 * 25.5, p1024 * 134.109375, p1024 * 25.5, p1024 * 134.109375, p1024 * 33.5, p1024 * 126.609375);
    f84(v1387, p1026[0]);
    v1387.translate(0, p1024 * -10);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 45.5, p1024 * 144.609375);
    v1387.bezierCurveTo(p1024 * 35.5, p1024 * 155.609375, p1024 * 37, p1024 * 152.109375, p1024 * 28.5, p1024 * 159.609375);
    v1387.bezierCurveTo(p1024 * 16.5, p1024 * 154.609375, p1024 * 16.5, p1024 * 151.609375, p1024 * 17.5, p1024 * 141.609375);
    v1387.bezierCurveTo(p1024 * 25.5, p1024 * 134.109375, p1024 * 25.5, p1024 * 134.109375, p1024 * 33.5, p1024 * 126.609375);
    f84(v1387, p1026[1], p1026[2], p1024 * 8);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 105.5, p1024 * 34.609375);
    v1387.bezierCurveTo(p1024 * 48.5, p1024 * 7.609375, p1024 * 11.5, p1024 * 58.609375, p1024 * 20.5, p1024 * 97.609375);
    v1387.bezierCurveTo(p1024 * 44.5, p1024 * 161.609375, p1024 * 70.5, p1024 * 171.609375, p1024 * 88.5, p1024 * 156.609375);
    v1387.bezierCurveTo(p1024 * 120.5, p1024 * 129.609375, p1024 * 123.5, p1024 * 105.609375, p1024 * 128.5, p1024 * 83.609375);
    v1387.bezierCurveTo(p1024 * 137.5, p1024 * 79.609375, p1024 * 141.5, p1024 * 79.609375, p1024 * 146.5, p1024 * 81.609375);
    v1387.bezierCurveTo(p1024 * 153.5, p1024 * 70.609375, p1024 * 151.5, p1024 * 65.609375, p1024 * 148.5, p1024 * 61.609375);
    v1387.bezierCurveTo(p1024 * 134.5, p1024 * 60.609375, p1024 * 131.5, p1024 * 63.609375, p1024 * 127.5, p1024 * 66.609375);
    v1387.bezierCurveTo(p1024 * 127.5, p1024 * 55.609375, p1024 * 125.5, p1024 * 54.609375, p1024 * 120.5, p1024 * 51.609375);
    v1387.bezierCurveTo(p1024 * 128.5, p1024 * 42.609375, p1024 * 136.5, p1024 * 38.609375, p1024 * 147.5, p1024 * 39.609375);
    v1387.bezierCurveTo(p1024 * 152.5, p1024 * 23.609375, p1024 * 147.5, p1024 * 21.609375, p1024 * 140.5, p1024 * 17.609375);
    v1387.bezierCurveTo(p1024 * 120.5, p1024 * 17.609375, p1024 * 114.5, p1024 * 27.609375, p1024 * 106.5, p1024 * 35.609375);
    v1387.closePath();
    f84(v1387, p1026[1], p1026[2], p1024 * 8);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 104.5, p1024 * 35.609375);
    v1387.bezierCurveTo(p1024 * 71.5, p1024 * 36.609375, p1024 * 57.5, p1024 * 52.609375, p1024 * 58.5, p1024 * 81.609375);
    v1387.bezierCurveTo(p1024 * 59.5, p1024 * 103.609375, p1024 * 66.5, p1024 * 107.609375, p1024 * 66.5, p1024 * 116.609375);
    v1387.bezierCurveTo(p1024 * 67.5, p1024 * 128.609375, p1024 * 65.5, p1024 * 131.609375, p1024 * 63.5, p1024 * 137.609375);
    f84(v1387, vVUndefined11, p1026[2], p1024 * 8);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 59.5, p1024 * 72.609375);
    v1387.bezierCurveTo(p1024 * 38.5, p1024 * 80.609375, p1024 * 43.5, p1024 * 81.609375, p1024 * 37.5, p1024 * 89.609375);
    f84(v1387, vVVVUndefined202, p1026[2], p1024 * 4);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 60.5, p1024 * 85.609375);
    v1387.bezierCurveTo(p1024 * 75.5, p1024 * 91.609375, p1024 * 76.5, p1024 * 96.609375, p1024 * 81.5, p1024 * 104.609375);
    f84(v1387, undefined, p1026[2], p1024 * 4);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 68.5, p1024 * 122.609375);
    v1387.bezierCurveTo(p1024 * 79.5, p1024 * 130.609375, p1024 * 74.5, p1024 * 128.609375, p1024 * 80.5, p1024 * 134.609375);
    f84(v1387, p1026[1], p1026[2], p1024 * 4);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 142.5, p1024 * 18.609375);
    v1387.bezierCurveTo(p1024 * 151.5, p1024 * 28.609375, p1024 * 151.5, p1024 * 32.609375, p1024 * 146.5, p1024 * 40.609375);
    v1387.bezierCurveTo(p1024 * 137.5, p1024 * 26.609375, p1024 * 138.5, p1024 * 24.609375, p1024 * 142.5, p1024 * 19.609375);
    v1387.closePath();
    f84(v1387, p1026[3]);
    v1387.beginPath();
    v1387.lineCap = "round";
    v1387.lineJoin = "round";
    v1387.moveTo(p1024 * 146.5, p1024 * 61.50892639160156);
    v1387.bezierCurveTo(p1024 * 157.5, p1024 * 69.50892639160156, p1024 * 150.5, p1024 * 79.50892639160156, p1024 * 145.5, p1024 * 81.50892639160156);
    v1387.bezierCurveTo(p1024 * 140.5, p1024 * 65.50892639160156, p1024 * 144.5, p1024 * 64.50892639160156, p1024 * 146.5, p1024 * 62.50892639160156);
    v1387.closePath();
    f84(v1387, p1026[3]);
    return v1386;
  }
  function f250(p1027, p1028, p1029) {
    var v1388 = document.createElement("canvas");
    var v1389 = v1388.getContext("2d");
    v1388.width = p1027 * 202;
    v1388.height = p1027 * 202;
    v1389.translate(p1027 * 2, p1027 * 1);
    v1389.globalAlpha = 0.3;
    f89(v1389, p1027 * 98, p1027 * 99, p1027 * 100);
    f84(v1389, p1029[0]);
    v1389.globalAlpha = 0.5;
    f89(v1389, p1027 * 98, p1027 * 99, p1027 * 90);
    f84(v1389, p1029[1]);
    return v1388;
  }
  function f251(p1030, p1031, p1032) {
    var v1390 = document.createElement("canvas");
    var v1391 = v1390.getContext("2d");
    v1390.width = p1030 * 137;
    v1390.height = p1030 * 129;
    v1391.globalAlpha = 0.4;
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 42.000030517578125, p1030 * 41.17047119140625);
    v1391.bezierCurveTo(p1030 * 45.000030517578125, p1030 * 38.17047119140625, p1030 * 49.000030517578125, p1030 * 37.17047119140625, p1030 * 62.000030517578125, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 94.00003051757812, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 100.00003051757812, p1030 * 38.17047119140625, p1030 * 102.00003051757812, p1030 * 38.17047119140625, p1030 * 101.00003051757812, p1030 * 47.17047119140625);
    v1391.bezierCurveTo(p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 80.17047119140625);
    v1391.bezierCurveTo(p1030 * 102.00003051757812, p1030 * 84.17047119140625, p1030 * 100.00003051757812, p1030 * 86.17047119140625, p1030 * 95.00003051757812, p1030 * 88.17047119140625);
    v1391.bezierCurveTo(p1030 * 84.00003051757812, p1030 * 94.17047119140625, p1030 * 89.00003051757812, p1030 * 94.17047119140625, p1030 * 79.00003051757812, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 40.000030517578125, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 86.17047119140625);
    v1391.bezierCurveTo(p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 53.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 47.17047119140625, p1030 * 34.000030517578125, p1030 * 47.17047119140625, p1030 * 40.000030517578125, p1030 * 42.17047119140625);
    v1391.closePath();
    f84(v1391, vVUndefined22, p1032[2], p1030 * 40);
    v1391.globalAlpha = 0.4;
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 42.000030517578125, p1030 * 41.17047119140625);
    v1391.bezierCurveTo(p1030 * 45.000030517578125, p1030 * 38.17047119140625, p1030 * 49.000030517578125, p1030 * 37.17047119140625, p1030 * 62.000030517578125, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 94.00003051757812, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 100.00003051757812, p1030 * 38.17047119140625, p1030 * 102.00003051757812, p1030 * 38.17047119140625, p1030 * 101.00003051757812, p1030 * 47.17047119140625);
    v1391.bezierCurveTo(p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 80.17047119140625);
    v1391.bezierCurveTo(p1030 * 102.00003051757812, p1030 * 84.17047119140625, p1030 * 100.00003051757812, p1030 * 86.17047119140625, p1030 * 95.00003051757812, p1030 * 88.17047119140625);
    v1391.bezierCurveTo(p1030 * 84.00003051757812, p1030 * 94.17047119140625, p1030 * 89.00003051757812, p1030 * 94.17047119140625, p1030 * 79.00003051757812, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 40.000030517578125, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 86.17047119140625);
    v1391.bezierCurveTo(p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 53.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 47.17047119140625, p1030 * 34.000030517578125, p1030 * 47.17047119140625, p1030 * 40.000030517578125, p1030 * 42.17047119140625);
    v1391.closePath();
    f84(v1391, undefined, p1032[1], p1030 * 20);
    v1391.globalAlpha = 0.8;
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 42.000030517578125, p1030 * 41.17047119140625);
    v1391.bezierCurveTo(p1030 * 45.000030517578125, p1030 * 38.17047119140625, p1030 * 49.000030517578125, p1030 * 37.17047119140625, p1030 * 62.000030517578125, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 94.00003051757812, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 100.00003051757812, p1030 * 38.17047119140625, p1030 * 102.00003051757812, p1030 * 38.17047119140625, p1030 * 101.00003051757812, p1030 * 47.17047119140625);
    v1391.bezierCurveTo(p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 80.17047119140625);
    v1391.bezierCurveTo(p1030 * 102.00003051757812, p1030 * 84.17047119140625, p1030 * 100.00003051757812, p1030 * 86.17047119140625, p1030 * 95.00003051757812, p1030 * 88.17047119140625);
    v1391.bezierCurveTo(p1030 * 84.00003051757812, p1030 * 94.17047119140625, p1030 * 89.00003051757812, p1030 * 94.17047119140625, p1030 * 79.00003051757812, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 40.000030517578125, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 86.17047119140625);
    v1391.bezierCurveTo(p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 53.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 47.17047119140625, p1030 * 34.000030517578125, p1030 * 47.17047119140625, p1030 * 40.000030517578125, p1030 * 42.17047119140625);
    v1391.closePath();
    f84(v1391, p1032[0], p1032[1], p1030 * 4);
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 51.000030517578125, p1030 * 37.9886474609375);
    v1391.bezierCurveTo(p1030 * 51.000030517578125, p1030 * 61.9886474609375, p1030 * 51.000030517578125, p1030 * 61.9886474609375, p1030 * 51.000030517578125, p1030 * 85.9886474609375);
    v1391.bezierCurveTo(p1030 * 75.50003051757812, p1030 * 85.9886474609375, p1030 * 75.50003051757812, p1030 * 85.9886474609375, p1030 * 100.00003051757812, p1030 * 85.9886474609375);
    v1391.bezierCurveTo(p1030 * 100.00003051757812, p1030 * 61.9886474609375, p1030 * 100.00003051757812, p1030 * 61.9886474609375, p1030 * 100.00003051757812, p1030 * 37.9886474609375);
    v1391.bezierCurveTo(p1030 * 76.00003051757812, p1030 * 37.9886474609375, p1030 * 76.00003051757812, p1030 * 37.9886474609375, p1030 * 52.000030517578125, p1030 * 37.9886474609375);
    v1391.closePath();
    f84(v1391, p1032[1], p1032[2], p1030 * 4);
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 99.00003051757812, p1030 * 38.9886474609375);
    v1391.bezierCurveTo(p1030 * 93.50003051757812, p1030 * 44.9886474609375, p1030 * 93.50003051757812, p1030 * 44.9886474609375, p1030 * 88.00003051757812, p1030 * 50.9886474609375);
    v1391.bezierCurveTo(p1030 * 88.00003051757812, p1030 * 72.4886474609375, p1030 * 88.00003051757812, p1030 * 72.4886474609375, p1030 * 88.00003051757812, p1030 * 93.9886474609375);
    v1391.bezierCurveTo(p1030 * 94.00003051757812, p1030 * 90.4886474609375, p1030 * 94.00003051757812, p1030 * 90.4886474609375, p1030 * 100.00003051757812, p1030 * 86.9886474609375);
    v1391.closePath();
    f84(v1391, p1032[1], p1032[2], p1030 * 4);
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 87.00003051757812, p1030 * 49.625);
    v1391.bezierCurveTo(p1030 * 61.000030517578125, p1030 * 49.625, p1030 * 61.000030517578125, p1030 * 49.625, p1030 * 35.000030517578125, p1030 * 49.625);
    v1391.bezierCurveTo(p1030 * 35.000030517578125, p1030 * 70.625, p1030 * 35.000030517578125, p1030 * 70.625, p1030 * 35.000030517578125, p1030 * 91.625);
    v1391.bezierCurveTo(p1030 * 60.500030517578125, p1030 * 91.625, p1030 * 60.500030517578125, p1030 * 91.625, p1030 * 86.00003051757812, p1030 * 91.625);
    v1391.bezierCurveTo(p1030 * 86.50003051757812, p1030 * 70.625, p1030 * 86.50003051757812, p1030 * 70.625, p1030 * 87.00003051757812, p1030 * 49.625);
    v1391.closePath();
    f84(v1391, p1032[1], p1032[3], p1030 * 4);
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 47.000030517578125, p1030 * 36.625);
    v1391.bezierCurveTo(p1030 * 73.00003051757812, p1030 * 37.125, p1030 * 73.00003051757812, p1030 * 37.125, p1030 * 99.00003051757812, p1030 * 37.625);
    v1391.bezierCurveTo(p1030 * 93.50003051757812, p1030 * 44.125, p1030 * 93.50003051757812, p1030 * 44.125, p1030 * 88.00003051757812, p1030 * 50.625);
    v1391.bezierCurveTo(p1030 * 60.500030517578125, p1030 * 50.125, p1030 * 60.500030517578125, p1030 * 50.125, p1030 * 33.000030517578125, p1030 * 49.625);
    v1391.closePath();
    f84(v1391, p1032[1], p1032[3], p1030 * 4);
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 53.000030517578125, p1030 * 52.625);
    v1391.bezierCurveTo(p1030 * 40.000030517578125, p1030 * 54.625, p1030 * 39.000030517578125, p1030 * 59.625, p1030 * 40.000030517578125, p1030 * 67.625);
    v1391.bezierCurveTo(p1030 * 45.000030517578125, p1030 * 59.625, p1030 * 48.000030517578125, p1030 * 58.625, p1030 * 54.000030517578125, p1030 * 53.625);
    v1391.closePath();
    f84(v1391, p1032[3]);
    v1391.globalAlpha = 1;
    v1391.beginPath();
    v1391.lineCap = "round";
    v1391.lineJoin = "round";
    v1391.moveTo(p1030 * 42.000030517578125, p1030 * 41.17047119140625);
    v1391.bezierCurveTo(p1030 * 45.000030517578125, p1030 * 38.17047119140625, p1030 * 49.000030517578125, p1030 * 37.17047119140625, p1030 * 62.000030517578125, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 78.00003051757812, p1030 * 38.17047119140625, p1030 * 94.00003051757812, p1030 * 38.17047119140625);
    v1391.bezierCurveTo(p1030 * 100.00003051757812, p1030 * 38.17047119140625, p1030 * 102.00003051757812, p1030 * 38.17047119140625, p1030 * 101.00003051757812, p1030 * 47.17047119140625);
    v1391.bezierCurveTo(p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 63.67047119140625, p1030 * 101.00003051757812, p1030 * 80.17047119140625);
    v1391.bezierCurveTo(p1030 * 102.00003051757812, p1030 * 84.17047119140625, p1030 * 100.00003051757812, p1030 * 86.17047119140625, p1030 * 95.00003051757812, p1030 * 88.17047119140625);
    v1391.bezierCurveTo(p1030 * 84.00003051757812, p1030 * 94.17047119140625, p1030 * 89.00003051757812, p1030 * 94.17047119140625, p1030 * 79.00003051757812, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 59.500030517578125, p1030 * 94.17047119140625, p1030 * 40.000030517578125, p1030 * 94.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 94.17047119140625, p1030 * 34.000030517578125, p1030 * 86.17047119140625);
    v1391.bezierCurveTo(p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 69.67047119140625, p1030 * 34.000030517578125, p1030 * 53.17047119140625);
    v1391.bezierCurveTo(p1030 * 33.000030517578125, p1030 * 47.17047119140625, p1030 * 34.000030517578125, p1030 * 47.17047119140625, p1030 * 40.000030517578125, p1030 * 42.17047119140625);
    v1391.closePath();
    f84(v1391, vVUndefined20, p1032[3], p1030 * 4);
    return v1390;
  }
  function f252(p1033, p1034, p1035) {
    var v1392 = document.createElement("canvas");
    var v1393 = v1392.getContext("2d");
    v1392.width = p1033 * 185;
    v1392.height = p1033 * 164;
    v1393.translate(0, 0);
    var vF45 = function (p1036, p1037, p1038) {
      var v1394 = document.createElement("canvas");
      var v1395 = v1394.getContext("2d");
      v1394.width = p1036 * 201;
      v1394.height = p1036 * 164;
      v1395.translate(0, p1036 * 5);
      v1395.globalAlpha = p1037 ? 0.5 : 1;
      f89(v1395, p1036 * 100.5, p1036 * 82, p1036 * 74.92746655359852);
      f84(v1395, p1038[0], p1038[0], p1036 * 4);
      f89(v1395, p1036 * 100.5, p1036 * 82, p1036 * 65.9417374971317);
      f84(v1395, p1038[0], p1038[0], p1036 * 4);
      v1395.translate(0, -5);
      v1395.globalAlpha = 1;
      f89(v1395, p1036 * 100.5, p1036 * 82, p1036 * 74.92746655359852);
      f84(v1395, p1038[1], p1038[3], p1036 * 4);
      f89(v1395, p1036 * 100.5, p1036 * 82, p1036 * 65.9417374971317);
      f84(v1395, p1038[1], p1038[2], p1036 * 4);
      f89(v1395, p1036 * 100.5, p1036 * 82, p1036 * 35.9417374971317);
      f84(v1395, p1038[1], p1038[2], p1036 * 20);
      f89(v1395, p1036 * 100.5, p1036 * 82, p1036 * 15.9417374971317);
      f84(v1395, p1038[1], p1038[2], p1036 * 6);
      return v1394;
    }(p1033, p1034, p1035);
    v1393.drawImage(vF45, p1033 * -10, p1033 * 0);
    vF45 = f235(p1033, p1034, p1035, 0);
    v1393.drawImage(vF45, p1033 * -83, p1033 * -40);
    vF45 = f235(p1033, p1034, p1035, Math.PI / 1.4);
    v1393.drawImage(vF45, p1033 * -15, p1033 * -88);
    vF45 = f235(p1033, p1034, p1035, Math.PI / -1.4);
    v1393.drawImage(vF45, p1033 * 15, p1033 * -8);
    return v1392;
  }
  function f253(p1039, p1040, p1041) {
    var v1396 = document.createElement("canvas");
    var v1397 = v1396.getContext("2d");
    v1396.width = p1039 * 440;
    v1396.height = p1039 * 388;
    v1397.globalAlpha = p1040 ? 0.5 : 1;
    v1397.translate(p1039 * 5, p1039 * 5);
    f89(v1397, p1039 * 220, p1039 * 201, p1039 * 170.41713528867922);
    f84(v1397, p1041[0], p1041[0], p1039 * 6);
    v1397.globalAlpha = 1;
    v1397.translate(p1039 * -5, p1039 * -5);
    f89(v1397, p1039 * 220, p1039 * 201, p1039 * 170.41713528867922);
    f84(v1397, p1041[1], p1041[2], p1039 * 6);
    f89(v1397, p1039 * 220, p1039 * 201, p1039 * 130);
    f84(v1397, p1041[11], p1041[2], p1039 * 6);
    f89(v1397, p1039 * 222, p1039 * 199, p1039 * 120.74767078498864);
    f84(v1397, vVVVVUndefined117, p1041[3], p1039 * 40);
    f89(v1397, p1039 * 220, p1039 * 200, p1039 * 95.44108130150245);
    f84(v1397, vVUndefined21, p1041[2], p1039 * 15);
    v1397.globalAlpha = p1040 ? 0.5 : 1;
    v1397.translate(p1039 * 5, p1039 * 5);
    f89(v1397, p1039 * 63, p1039 * 136, p1039 * 49.193495504995376);
    f84(v1397, p1041[0], p1041[0], p1039 * 4);
    v1397.globalAlpha = 1;
    v1397.translate(p1039 * -5, p1039 * -5);
    f89(v1397, p1039 * 63, p1039 * 136, p1039 * 49.193495504995376);
    f84(v1397, p1041[8], p1041[2], p1039 * 4);
    f89(v1397, p1039 * 63, p1039 * 137, p1039 * 25.632011235952593);
    f84(v1397, p1041[7], p1041[2], p1039 * 4);
    return v1396;
  }
  function f254(p1042, p1043, p1044) {
    var v1398 = document.createElement("canvas");
    var v1399 = v1398.getContext("2d");
    v1398.width = p1042 * 450;
    v1398.height = p1042 * 790;
    v1399.translate(p1042 * 5, p1042 * 5);
    v1399.globalAlpha = p1043 ? 0 : 0;
    f89(v1399, p1042 * 178.5, p1042 * 172.828125, p1042 * 150);
    f84(v1399, undefined, p1044[0], p1042 * 65);
    f89(v1399, p1042 * 178.5, p1042 * 172.828125, p1042 * 150);
    f84(v1399, undefined, p1044[0], p1042 * 55);
    v1399.closePath();
    v1399.save();
    v1399.translate(p1042 * 177, p1042 * 512.328125);
    f83(v1399, p1042 * -25, p1042 * -202.5, p1042 * 65, p1042 * 405, p1042 * 25);
    v1399.restore();
    f84(v1399, p1044[0]);
    v1399.save();
    v1399.translate(p1042 * 136, p1042 * 581.828125);
    f83(v1399, p1042 * -39, p1042 * -23, p1042 * 78, p1042 * 46, p1042 * 25);
    v1399.restore();
    f84(v1399, p1044[0]);
    v1399.save();
    v1399.translate(p1042 * 135.5, p1042 * 663.828125);
    f83(v1399, p1042 * -39.5, p1042 * -22, p1042 * 79, p1042 * 44, p1042 * 25);
    v1399.restore();
    f84(v1399, p1044[0]);
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.moveTo(p1042 * 114, p1042 * 594.828125);
    v1399.bezierCurveTo(p1042 * 175, p1042 * 596.828125, p1042 * 163, p1042 * 596.828125, p1042 * 172, p1042 * 594.828125);
    v1399.bezierCurveTo(p1042 * 171.5, p1042 * 633.828125, p1042 * 171.5, p1042 * 633.828125, p1042 * 171, p1042 * 672.828125);
    v1399.bezierCurveTo(p1042 * 110, p1042 * 673.828125, p1042 * 140.5, p1042 * 673.328125, p1042 * 110, p1042 * 673.828125);
    v1399.bezierCurveTo(p1042 * 110.5, p1042 * 661.828125, p1042 * 110.5, p1042 * 661.828125, p1042 * 111, p1042 * 649.828125);
    v1399.bezierCurveTo(p1042 * 157, p1042 * 633.828125, p1042 * 134, p1042 * 607.828125, p1042 * 114, p1042 * 594.828125);
    v1399.closePath();
    f84(v1399, p1044[0]);
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.translate(0, p1042 * 5);
    v1399.moveTo(p1042 * 140, p1042 * 294.828125);
    v1399.bezierCurveTo(p1042 * 212, p1042 * 295.828125, p1042 * 176.5, p1042 * 295.328125, p1042 * 213, p1042 * 295.828125);
    v1399.bezierCurveTo(p1042 * 201.5, p1042 * 325.328125, p1042 * 201.5, p1042 * 325.328125, p1042 * 190, p1042 * 354.828125);
    v1399.bezierCurveTo(p1042 * 175.5, p1042 * 355.828125, p1042 * 175.5, p1042 * 355.828125, p1042 * 161, p1042 * 356.828125);
    v1399.bezierCurveTo(p1042 * 154.5, p1042 * 328.828125, p1042 * 154.5, p1042 * 328.828125, p1042 * 148, p1042 * 300.828125);
    v1399.closePath();
    f84(v1399, p1044[0]);
    v1399.translate(3, p1042 * -5);
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.moveTo(p1042 * 159, p1042 * 679.828125);
    v1399.bezierCurveTo(p1042 * 180, p1042 * 665.828125, p1042 * 155, p1042 * 675.828125, p1042 * 151, p1042 * 671.828125);
    v1399.bezierCurveTo(p1042 * 154.5, p1042 * 685.328125, p1042 * 154.5, p1042 * 685.328125, p1042 * 158, p1042 * 698.828125);
    v1399.bezierCurveTo(p1042 * 171, p1042 * 699.828125, p1042 * 171, p1042 * 699.828125, p1042 * 184, p1042 * 700.828125);
    v1399.closePath();
    f84(v1399, p1044[0]);
    v1399.save();
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.moveTo(p1042 * 157, p1042 * 548.828125);
    v1399.bezierCurveTo(p1042 * 157, p1042 * 561.828125, p1042 * 157, p1042 * 561.828125, p1042 * 157, p1042 * 574.828125);
    v1399.bezierCurveTo(p1042 * 132.5, p1042 * 580.828125, p1042 * 132.5, p1042 * 580.828125, p1042 * 108, p1042 * 586.828125);
    v1399.bezierCurveTo(p1042 * 112, p1042 * 599.828125, p1042 * 111, p1042 * 593.828125, p1042 * 112, p1042 * 599.828125);
    v1399.bezierCurveTo(p1042 * 159, p1042 * 603.828125, p1042 * 126.5, p1042 * 601.328125, p1042 * 141, p1042 * 602.828125);
    v1399.bezierCurveTo(p1042 * 145, p1042 * 641.828125, p1042 * 143.5, p1042 * 623.828125, p1042 * 146, p1042 * 644.828125);
    v1399.bezierCurveTo(p1042 * 129.5, p1042 * 645.328125, p1042 * 129.5, p1042 * 645.328125, p1042 * 113, p1042 * 645.828125);
    v1399.bezierCurveTo(p1042 * 107.5, p1042 * 652.828125, p1042 * 107.5, p1042 * 652.828125, p1042 * 102, p1042 * 659.828125);
    v1399.bezierCurveTo(p1042 * 104, p1042 * 669.328125, p1042 * 104, p1042 * 669.328125, p1042 * 106, p1042 * 678.828125);
    v1399.bezierCurveTo(p1042 * 145, p1042 * 679.328125, p1042 * 145, p1042 * 679.328125, p1042 * 184, p1042 * 679.828125);
    v1399.bezierCurveTo(p1042 * 185, p1042 * 615.828125, p1042 * 185, p1042 * 615.828125, p1042 * 186, p1042 * 551.828125);
    v1399.bezierCurveTo(p1042 * 172.5, p1042 * 551.328125, p1042 * 172.5, p1042 * 551.328125, p1042 * 159, p1042 * 550.828125);
    v1399.closePath();
    f84(v1399, p1044[0], p1044[0], p1042 * 7);
    v1399.restore();
    v1399.globalAlpha = 1;
    v1399.translate(p1042 * 15, p1042 * 35);
    f89(v1399, p1042 * 178.5, p1042 * 172.828125, p1042 * 150);
    f84(v1399, undefined, p1044[2], p1042 * 95);
    f89(v1399, p1042 * 178.5, p1042 * 172.828125, p1042 * 150);
    f84(v1399, undefined, p1044[1], p1042 * 55);
    v1399.closePath();
    v1399.save();
    v1399.translate(p1042 * 177, p1042 * 512.328125);
    f83(v1399, p1042 * -25, p1042 * -202.5, p1042 * 65, p1042 * 405, p1042 * 25);
    v1399.restore();
    f84(v1399, p1044[1], p1044[2], p1042 * 20);
    v1399.save();
    v1399.translate(p1042 * 136, p1042 * 581.828125);
    f83(v1399, p1042 * -39, p1042 * -23, p1042 * 78, p1042 * 46, p1042 * 25);
    v1399.restore();
    f84(v1399, p1044[1], p1044[2], p1042 * 20);
    v1399.save();
    v1399.translate(p1042 * 135.5, p1042 * 663.828125);
    f83(v1399, p1042 * -39.5, p1042 * -22, p1042 * 79, p1042 * 44, p1042 * 25);
    v1399.restore();
    f84(v1399, p1044[1], p1044[2], p1042 * 20);
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.moveTo(p1042 * 114, p1042 * 594.828125);
    v1399.bezierCurveTo(p1042 * 175, p1042 * 596.828125, p1042 * 163, p1042 * 596.828125, p1042 * 172, p1042 * 594.828125);
    v1399.bezierCurveTo(p1042 * 171.5, p1042 * 633.828125, p1042 * 171.5, p1042 * 633.828125, p1042 * 171, p1042 * 672.828125);
    v1399.bezierCurveTo(p1042 * 110, p1042 * 673.828125, p1042 * 140.5, p1042 * 673.328125, p1042 * 110, p1042 * 673.828125);
    v1399.bezierCurveTo(p1042 * 110.5, p1042 * 661.828125, p1042 * 110.5, p1042 * 661.828125, p1042 * 111, p1042 * 649.828125);
    v1399.bezierCurveTo(p1042 * 157, p1042 * 633.828125, p1042 * 134, p1042 * 607.828125, p1042 * 114, p1042 * 594.828125);
    v1399.closePath();
    f84(v1399, p1044[1]);
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.translate(0, p1042 * 5);
    v1399.moveTo(p1042 * 123, p1042 * 294.828125);
    v1399.bezierCurveTo(p1042 * 212, p1042 * 295.828125, p1042 * 190.5, p1042 * 295.328125, p1042 * 250, p1042 * 295.828125);
    v1399.bezierCurveTo(p1042 * 231.5, p1042 * 325.328125, p1042 * 231.5, p1042 * 325.328125, p1042 * 220, p1042 * 354.828125);
    v1399.bezierCurveTo(p1042 * 175.5, p1042 * 355.828125, p1042 * 175.5, p1042 * 355.828125, p1042 * 140, p1042 * 356.828125);
    v1399.bezierCurveTo(p1042 * 123.5, p1042 * 328.828125, p1042 * 123.5, p1042 * 328.828125, p1042 * 123, p1042 * 294.828125);
    v1399.closePath();
    f84(v1399, p1044[1]);
    v1399.translate(0, p1042 * -5);
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.moveTo(p1042 * 159, p1042 * 679.828125);
    v1399.bezierCurveTo(p1042 * 180, p1042 * 665.828125, p1042 * 155, p1042 * 675.828125, p1042 * 151, p1042 * 671.828125);
    v1399.bezierCurveTo(p1042 * 154.5, p1042 * 685.328125, p1042 * 154.5, p1042 * 685.328125, p1042 * 158, p1042 * 698.828125);
    v1399.bezierCurveTo(p1042 * 171, p1042 * 699.828125, p1042 * 171, p1042 * 699.828125, p1042 * 184, p1042 * 700.828125);
    v1399.closePath();
    f84(v1399, p1044[1]);
    v1399.save();
    v1399.beginPath();
    v1399.lineCap = "round";
    v1399.lineJoin = "round";
    v1399.moveTo(p1042 * 157, p1042 * 548.828125);
    v1399.bezierCurveTo(p1042 * 157, p1042 * 561.828125, p1042 * 157, p1042 * 561.828125, p1042 * 157, p1042 * 574.828125);
    v1399.bezierCurveTo(p1042 * 132.5, p1042 * 580.828125, p1042 * 132.5, p1042 * 580.828125, p1042 * 108, p1042 * 586.828125);
    v1399.bezierCurveTo(p1042 * 112, p1042 * 599.828125, p1042 * 111, p1042 * 593.828125, p1042 * 112, p1042 * 599.828125);
    v1399.bezierCurveTo(p1042 * 159, p1042 * 603.828125, p1042 * 126.5, p1042 * 601.328125, p1042 * 141, p1042 * 602.828125);
    v1399.bezierCurveTo(p1042 * 145, p1042 * 641.828125, p1042 * 143.5, p1042 * 623.828125, p1042 * 146, p1042 * 644.828125);
    v1399.bezierCurveTo(p1042 * 129.5, p1042 * 645.328125, p1042 * 129.5, p1042 * 645.328125, p1042 * 113, p1042 * 645.828125);
    v1399.bezierCurveTo(p1042 * 107.5, p1042 * 652.828125, p1042 * 107.5, p1042 * 652.828125, p1042 * 102, p1042 * 659.828125);
    v1399.bezierCurveTo(p1042 * 104, p1042 * 669.328125, p1042 * 104, p1042 * 669.328125, p1042 * 106, p1042 * 678.828125);
    v1399.bezierCurveTo(p1042 * 145, p1042 * 679.328125, p1042 * 145, p1042 * 679.328125, p1042 * 184, p1042 * 679.828125);
    v1399.bezierCurveTo(p1042 * 185, p1042 * 615.828125, p1042 * 185, p1042 * 615.828125, p1042 * 186, p1042 * 551.828125);
    v1399.bezierCurveTo(p1042 * 172.5, p1042 * 551.328125, p1042 * 172.5, p1042 * 551.328125, p1042 * 159, p1042 * 550.828125);
    v1399.closePath();
    f84(v1399, p1044[1], p1044[1], p1042 * 7);
    v1399.restore();
    return v1398;
  }
  function f255(p1045, p1046, p1047) {
    var v1400 = document.createElement("canvas");
    var v1401 = v1400.getContext("2d");
    v1400.width = p1045 * 137;
    v1400.height = p1045 * 129;
    v1401.globalAlpha = 0.5;
    f89(v1401, p1045 * 69, p1045 * 64, p1045 * 48.16637831516918);
    f84(v1401, p1047[1]);
    v1401.globalAlpha = 0.7;
    f89(v1401, p1045 * 69, p1045 * 64, p1045 * 38.23105625617661);
    f84(v1401, p1047[2]);
    v1401.globalAlpha = 0.7;
    f89(v1401, p1045 * 69, p1045 * 64, p1045 * 32.01562118716424);
    f84(v1401, p1047[2], p1047[3], p1045 * 4);
    v1401.beginPath();
    v1401.lineCap = "round";
    v1401.lineJoin = "round";
    v1401.moveTo(p1045 * 72, p1045 * 41);
    v1401.bezierCurveTo(p1045 * 52, p1045 * 41, p1045 * 48, p1045 * 50, p1045 * 45, p1045 * 58);
    v1401.bezierCurveTo(p1045 * 43, p1045 * 67, p1045 * 45, p1045 * 68, p1045 * 46, p1045 * 72);
    v1401.bezierCurveTo(p1045 * 52, p1045 * 53, p1045 * 60, p1045 * 48, p1045 * 72, p1045 * 42);
    v1401.closePath();
    f84(v1401, p1047[3]);
    v1401.beginPath();
    v1401.lineCap = "round";
    v1401.lineJoin = "round";
    v1401.moveTo(p1045 * 93, p1045 * 62);
    v1401.bezierCurveTo(p1045 * 95, p1045 * 72, p1045 * 90, p1045 * 81, p1045 * 81, p1045 * 87);
    v1401.bezierCurveTo(p1045 * 74, p1045 * 91, p1045 * 69, p1045 * 89, p1045 * 64, p1045 * 88);
    v1401.bezierCurveTo(p1045 * 77, p1045 * 83, p1045 * 84, p1045 * 82, p1045 * 92, p1045 * 62);
    v1401.closePath();
    f84(v1401, p1047[3]);
    return v1400;
  }
  function f256(p1048, p1049, p1050) {
    var v1402 = document.createElement("canvas");
    var v1403 = v1402.getContext("2d");
    v1402.width = p1048 * 104;
    v1402.height = p1048 * 117;
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 4, p1048 * 90);
    v1403.bezierCurveTo(p1048 * 20, p1048 * 99.5, p1048 * 20, p1048 * 99.5, p1048 * 36, p1048 * 109);
    v1403.bezierCurveTo(p1048 * 67, p1048 * 92, p1048 * 67, p1048 * 92, p1048 * 98, p1048 * 75);
    v1403.bezierCurveTo(p1048 * 91, p1048 * 27, p1048 * 91, p1048 * 27, p1048 * 91, p1048 * 28);
    v1403.bezierCurveTo(p1048 * 72.5, p1048 * 16, p1048 * 72.5, p1048 * 16, p1048 * 54, p1048 * 4);
    v1403.bezierCurveTo(p1048 * 33.5, p1048 * 10, p1048 * 33.5, p1048 * 10, p1048 * 13, p1048 * 16);
    v1403.closePath();
    f84(v1403, p1050[0]);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 6, p1048 * 76);
    v1403.bezierCurveTo(p1048 * 13.5, p1048 * 51.5, p1048 * 13.5, p1048 * 51.5, p1048 * 21, p1048 * 27);
    v1403.bezierCurveTo(p1048 * 37.5, p1048 * 17, p1048 * 37.5, p1048 * 17, p1048 * 54, p1048 * 7);
    v1403.bezierCurveTo(p1048 * 33.5, p1048 * 12.5, p1048 * 33.5, p1048 * 12.5, p1048 * 13, p1048 * 18);
    v1403.closePath();
    f84(v1403, p1050[1]);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 24, p1048 * 62);
    v1403.bezierCurveTo(p1048 * 28.5, p1048 * 53, p1048 * 28.5, p1048 * 53, p1048 * 33, p1048 * 44);
    v1403.bezierCurveTo(p1048 * 41.5, p1048 * 41, p1048 * 41.5, p1048 * 41, p1048 * 50, p1048 * 38);
    v1403.bezierCurveTo(p1048 * 52.5, p1048 * 35, p1048 * 52.5, p1048 * 35, p1048 * 55, p1048 * 32);
    v1403.bezierCurveTo(p1048 * 52, p1048 * 30, p1048 * 52, p1048 * 30, p1048 * 49, p1048 * 28);
    v1403.bezierCurveTo(p1048 * 38, p1048 * 31.5, p1048 * 38, p1048 * 31.5, p1048 * 27, p1048 * 35);
    v1403.closePath();
    f84(v1403, p1050[1]);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 36, p1048 * 107);
    v1403.bezierCurveTo(p1048 * 66, p1048 * 90.5, p1048 * 66, p1048 * 90.5, p1048 * 96, p1048 * 74);
    v1403.bezierCurveTo(p1048 * 93, p1048 * 52.5, p1048 * 93, p1048 * 52.5, p1048 * 90, p1048 * 31);
    v1403.bezierCurveTo(p1048 * 87, p1048 * 48, p1048 * 87, p1048 * 48, p1048 * 84, p1048 * 65);
    v1403.closePath();
    f84(v1403, p1050[2]);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 1, p1048 * 89);
    v1403.bezierCurveTo(p1048 * 18, p1048 * 100, p1048 * 34, p1048 * 110, p1048 * 35, p1048 * 111);
    v1403.bezierCurveTo(p1048 * 67, p1048 * 93, p1048 * 67, p1048 * 93, p1048 * 99, p1048 * 75);
    v1403.bezierCurveTo(p1048 * 100, p1048 * 78.5, p1048 * 100, p1048 * 78.5, p1048 * 101, p1048 * 82);
    v1403.bezierCurveTo(p1048 * 68, p1048 * 99, p1048 * 68, p1048 * 99, p1048 * 35, p1048 * 116);
    v1403.bezierCurveTo(p1048 * 18, p1048 * 106.5, p1048 * 18, p1048 * 106.5, p1048 * 1, p1048 * 97);
    v1403.closePath();
    f84(v1403, p1050[3]);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 36, p1048 * 107);
    v1403.bezierCurveTo(p1048 * 66.5, p1048 * 91.5, p1048 * 66.5, p1048 * 91.5, p1048 * 97, p1048 * 76);
    v1403.bezierCurveTo(p1048 * 94.5, p1048 * 52, p1048 * 94.5, p1048 * 52, p1048 * 92, p1048 * 28);
    v1403.bezierCurveTo(p1048 * 73, p1048 * 15.5, p1048 * 73, p1048 * 15.5, p1048 * 54, p1048 * 3);
    v1403.bezierCurveTo(p1048 * 33, p1048 * 9.5, p1048 * 33, p1048 * 9.5, p1048 * 12, p1048 * 16);
    v1403.bezierCurveTo(p1048 * 8, p1048 * 53, p1048 * 8, p1048 * 53, p1048 * 4, p1048 * 90);
    v1403.bezierCurveTo(p1048 * 18.5, p1048 * 99, p1048 * 18.5, p1048 * 99, p1048 * 33, p1048 * 108);
    v1403.closePath();
    f84(v1403, vVVUndefined117, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 22, p1048 * 71);
    v1403.bezierCurveTo(p1048 * 30, p1048 * 76.5, p1048 * 30, p1048 * 76.5, p1048 * 38, p1048 * 82);
    v1403.bezierCurveTo(p1048 * 53, p1048 * 72, p1048 * 53, p1048 * 72, p1048 * 68, p1048 * 62);
    v1403.bezierCurveTo(p1048 * 68, p1048 * 52, p1048 * 68, p1048 * 52, p1048 * 68, p1048 * 42);
    v1403.bezierCurveTo(p1048 * 59.5, p1048 * 35.5, p1048 * 59.5, p1048 * 35.5, p1048 * 51, p1048 * 29);
    v1403.bezierCurveTo(p1048 * 39.5, p1048 * 32, p1048 * 39.5, p1048 * 32, p1048 * 28, p1048 * 35);
    v1403.bezierCurveTo(p1048 * 25, p1048 * 52, p1048 * 25, p1048 * 52, p1048 * 22, p1048 * 69);
    v1403.closePath();
    f84(v1403, undefined, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 5, p1048 * 89);
    v1403.bezierCurveTo(p1048 * 20, p1048 * 73, p1048 * 12.5, p1048 * 80.5, p1048 * 20, p1048 * 72);
    v1403.closePath();
    f84(v1403, vVVVUndefined21, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 35, p1048 * 102);
    v1403.bezierCurveTo(p1048 * 36, p1048 * 92.5, p1048 * 36, p1048 * 92.5, p1048 * 37, p1048 * 83);
    v1403.closePath();
    f84(v1403, undefined, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 68, p1048 * 62);
    v1403.bezierCurveTo(p1048 * 81, p1048 * 67.5, p1048 * 81, p1048 * 67.5, p1048 * 94, p1048 * 73);
    v1403.closePath();
    f84(v1403, vVVVVUndefined20, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 70, p1048 * 41);
    v1403.bezierCurveTo(p1048 * 80, p1048 * 35.5, p1048 * 80, p1048 * 35.5, p1048 * 90, p1048 * 30);
    v1403.closePath();
    f84(v1403, vVVVUndefined2022, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 28, p1048 * 33);
    v1403.bezierCurveTo(p1048 * 21.5, p1048 * 26.5, p1048 * 21.5, p1048 * 26.5, p1048 * 15, p1048 * 20);
    v1403.closePath();
    f84(v1403, vVVVVUndefined117, p1050[4], p1048 * 6);
    v1403.beginPath();
    v1403.lineCap = "round";
    v1403.lineJoin = "round";
    v1403.moveTo(p1048 * 51, p1048 * 28);
    v1403.bezierCurveTo(p1048 * 53, p1048 * 17, p1048 * 53, p1048 * 17, p1048 * 55, p1048 * 6);
    v1403.closePath();
    f84(v1403, vVVUndefined20, p1050[4], p1048 * 6);
    return v1402;
  }
  const v1404 = String.fromCharCode;
  const vV1404 = v1404(101);
  const vV14042 = v1404(118);
  const vV14043 = v1404(97);
  const vV14044 = v1404(108);
  function f257(p1051, p1052, p1053, p1054) {
    var v1405 = document.createElement("canvas");
    var v1406 = v1405.getContext("2d");
    v1405.width = p1051 * 170;
    v1405.height = p1051 * 200;
    v1406.translate(p1051 * 5, p1051 * 15);
    if (p1054 == 1) {
      v1406.translate(0, p1051 * -5);
      f89(v1406, p1051 * 77.00003051757812, p1051 * 104.49432373046875, p1051 * 71.84010022264724);
      f84(v1406, p1053[1], p1053[5], p1051 * 20);
      f89(v1406, p1051 * 77.00003051757812, p1051 * 104.22160339355469, p1051 * 61.554853586049575);
      f84(v1406, p1053[1], p1053[5], p1051 * 20);
      v1406.save();
      v1406.translate(p1051 * 77.00003051757812, p1051 * 31.267044067382812);
      f83(v1406, p1051 * -6, p1051 * -12.5, p1051 * 12, p1051 * 25, p1051 * 10);
      v1406.restore();
      f84(v1406, p1053[1], p1053[5], p1051 * 20);
      v1406.save();
      v1406.translate(p1051 * 77.00003051757812, p1051 * 13.267044067382812);
      f83(v1406, p1051 * -15, p1051 * -10.5, p1051 * 30, p1051 * 21, p1051 * 10);
      v1406.restore();
      f84(v1406, p1053[1], p1053[5], p1051 * 20);
    }
    f89(v1406, p1051 * 77.00003051757812, p1051 * 104.49432373046875, p1051 * 71.84010022264724);
    f84(v1406, p1053[1], p1053[2], p1051 * 7);
    f89(v1406, p1051 * 77.00003051757812, p1051 * 104.22160339355469, p1051 * 61.554853586049575);
    f84(v1406, p1053[1], p1053[2], p1051 * 7);
    v1406.beginPath();
    v1406.lineCap = "round";
    v1406.lineJoin = "round";
    v1406.moveTo(p1051 * 18.000030517578125, p1051 * 105.85795593261719);
    v1406.bezierCurveTo(p1051 * 134.00003051757812, p1051 * 104.85795593261719, p1051 * 77.00003051757812, p1051 * 104.85795593261719, p1051 * 136.00003051757812, p1051 * 103.85795593261719);
    v1406.closePath();
    f84(v1406, p1053[1], p1053[2], p1051 * 8);
    f89(v1406, p1051 * 77.00003051757812, p1051 * 104.6761474609375, p1051 * 32.55764119219941);
    f84(v1406, p1053[1], p1053[2], p1051 * 8);
    v1406.beginPath();
    v1406.lineCap = "round";
    v1406.lineJoin = "round";
    v1406.moveTo(p1051 * 78.00003051757812, p1051 * 112.03977966308594);
    v1406.bezierCurveTo(p1051 * 78.00003051757812, p1051 * 87.03977966308594, p1051 * 78.00003051757812, p1051 * 87.03977966308594, p1051 * 78.00003051757812, p1051 * 62.03977966308594);
    v1406.closePath();
    f84(v1406, p1053[3], p1053[2], p1051 * 8);
    v1406.beginPath();
    v1406.lineCap = "round";
    v1406.lineJoin = "round";
    v1406.moveTo(p1051 * 78.00003051757812, p1051 * 48.03977966308594);
    v1406.bezierCurveTo(p1051 * 82.00003051757812, p1051 * 55.53977966308594, p1051 * 82.00003051757812, p1051 * 55.53977966308594, p1051 * 86.00003051757812, p1051 * 63.03977966308594);
    v1406.bezierCurveTo(p1051 * 78.00003051757812, p1051 * 63.03977966308594, p1051 * 78.00003051757812, p1051 * 63.03977966308594, p1051 * 70.00003051757812, p1051 * 63.03977966308594);
    v1406.closePath();
    f84(v1406, p1053[3], p1053[2], p1051 * 4);
    v1406.beginPath();
    v1406.lineCap = "round";
    v1406.lineJoin = "round";
    v1406.moveTo(p1051 * 80.00003051757812, p1051 * 111.6761474609375);
    v1406.bezierCurveTo(p1051 * 95.00003051757812, p1051 * 97.1761474609375, p1051 * 95.00003051757812, p1051 * 97.1761474609375, p1051 * 110.00003051757812, p1051 * 82.6761474609375);
    v1406.closePath();
    f84(v1406, p1053[3], p1053[2], p1051 * 8);
    v1406.beginPath();
    v1406.lineCap = "round";
    v1406.lineJoin = "round";
    v1406.moveTo(p1051 * 107.00003051757812, p1051 * 76.6761474609375);
    v1406.bezierCurveTo(p1051 * 111.50003051757812, p1051 * 82.6761474609375, p1051 * 111.50003051757812, p1051 * 82.6761474609375, p1051 * 116.00003051757812, p1051 * 88.6761474609375);
    v1406.bezierCurveTo(p1051 * 118.50003051757812, p1051 * 81.6761474609375, p1051 * 118.50003051757812, p1051 * 81.6761474609375, p1051 * 121.00003051757812, p1051 * 74.6761474609375);
    v1406.closePath();
    f84(v1406, p1053[3], p1053[2], p1051 * 4);
    f89(v1406, p1051 * 77.00003051757812, p1051 * 105.03977966308594, p1051 * 15.556349186104045);
    f84(v1406, p1053[3], p1053[2], p1051 * 4);
    v1406.save();
    v1406.translate(p1051 * 77.00003051757812, p1051 * 31.267044067382812);
    v1406.rotate(0);
    f83(v1406, p1051 * -6, p1051 * -12.5, p1051 * 12, p1051 * 25, p1051 * 10);
    v1406.restore();
    f84(v1406, p1053[1], p1053[2], p1051 * 7);
    v1406.save();
    v1406.translate(p1051 * 77.00003051757812, p1051 * 13.267044067382812);
    v1406.rotate(0);
    f83(v1406, p1051 * -15, p1051 * -10.5, p1051 * 30, p1051 * 21, p1051 * 10);
    v1406.restore();
    f84(v1406, p1053[1], p1053[2], p1051 * 7);
    return v1405;
  }
  function f258(p1055, p1056, p1057) {
    var v1407 = document.createElement("canvas");
    var v1408 = v1407.getContext("2d");
    v1407.width = p1055 * 81;
    v1407.height = p1055 * 77;
    v1408.translate(0, p1055 * 10);
    v1408.scale(0.2, 0.2);
    v1408.translate(0, p1055 * -30);
    if (p1057 == 1) {
      v1408.beginPath();
      v1408.lineCap = "round";
      v1408.lineJoin = "round";
      v1408.moveTo(p1055 * 36.5, p1055 * 278.0625);
      v1408.bezierCurveTo(p1055 * 67.5, p1055 * 316.0625, p1055 * 134.5, p1055 * 334.0625, p1055 * 199.5, p1055 * 319.0625);
      v1408.bezierCurveTo(p1055 * 254.5, p1055 * 304.0625, p1055 * 346.5, p1055 * 270.0625, p1055 * 348.5, p1055 * 237.0625);
      v1408.bezierCurveTo(p1055 * 359.5, p1055 * 206.0625, p1055 * 318.5, p1055 * 129.0625, p1055 * 262.5, p1055 * 122.0625);
      v1408.bezierCurveTo(p1055 * 213.5, p1055 * 115.0625, p1055 * 166.5, p1055 * 133.0625, p1055 * 104.5, p1055 * 166.0625);
      v1408.bezierCurveTo(p1055 * 54.5, p1055 * 194.0625, p1055 * 23.5, p1055 * 241.0625, p1055 * 36.5, p1055 * 277.0625);
      v1408.closePath();
      f84(v1408, p1056[0], p1056[3], p1055 * 50);
    }
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 36.5, p1055 * 278.0625);
    v1408.bezierCurveTo(p1055 * 67.5, p1055 * 316.0625, p1055 * 134.5, p1055 * 334.0625, p1055 * 199.5, p1055 * 319.0625);
    v1408.bezierCurveTo(p1055 * 254.5, p1055 * 304.0625, p1055 * 346.5, p1055 * 270.0625, p1055 * 348.5, p1055 * 237.0625);
    v1408.bezierCurveTo(p1055 * 359.5, p1055 * 206.0625, p1055 * 318.5, p1055 * 129.0625, p1055 * 262.5, p1055 * 122.0625);
    v1408.bezierCurveTo(p1055 * 213.5, p1055 * 115.0625, p1055 * 166.5, p1055 * 133.0625, p1055 * 104.5, p1055 * 166.0625);
    v1408.bezierCurveTo(p1055 * 54.5, p1055 * 194.0625, p1055 * 23.5, p1055 * 241.0625, p1055 * 36.5, p1055 * 277.0625);
    v1408.closePath();
    f84(v1408, p1056[0], p1056[1], p1055 * 19);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 214.5, p1055 * 124.0625);
    v1408.bezierCurveTo(p1055 * 242.5, p1055 * 125.0625, p1055 * 272.5, p1055 * 159.0625, p1055 * 283.5, p1055 * 184.0625);
    v1408.bezierCurveTo(p1055 * 277.5, p1055 * 161.0625, p1055 * 233.5, p1055 * 128.0625, p1055 * 219.5, p1055 * 122.0625);
    v1408.closePath();
    f84(v1408, p1056[0], p1056[1], p1055 * 19);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 157.5, p1055 * 145.0625);
    v1408.bezierCurveTo(p1055 * 176.5, p1055 * 148.0625, p1055 * 205.5, p1055 * 176.0625, p1055 * 212.5, p1055 * 197.0625);
    v1408.bezierCurveTo(p1055 * 205.5, p1055 * 178.0625, p1055 * 177.5, p1055 * 152.0625, p1055 * 156.5, p1055 * 142.0625);
    v1408.closePath();
    f84(v1408, p1056[0], p1056[1], p1055 * 19);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 103.5, p1055 * 169.0625);
    v1408.bezierCurveTo(p1055 * 160.5, p1055 * 166.0625, p1055 * 228.5, p1055 * 312.0625, p1055 * 162.5, p1055 * 323.0625);
    v1408.bezierCurveTo(p1055 * 128.5, p1055 * 330.0625, p1055 * 45.5, p1055 * 312.0625, p1055 * 34.5, p1055 * 268.0625);
    v1408.bezierCurveTo(p1055 * 30.5, p1055 * 238.0625, p1055 * 44.5, p1055 * 222.0625, p1055 * 52.5, p1055 * 211.0625);
    v1408.bezierCurveTo(p1055 * 82.5, p1055 * 174.0625, p1055 * 104.5, p1055 * 166.0625, p1055 * 119.5, p1055 * 172.0625);
    v1408.closePath();
    f84(v1408, p1056[2], p1056[1], p1055 * 19);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 194.5, p1055 * 313.0625);
    v1408.bezierCurveTo(p1055 * 222.5, p1055 * 306.0625, p1055 * 319.5, p1055 * 271.0625, p1055 * 337.5, p1055 * 241.0625);
    v1408.bezierCurveTo(p1055 * 274.5, p1055 * 270.0625, p1055 * 216.5, p1055 * 288.0625, p1055 * 199.5, p1055 * 287.0625);
    v1408.bezierCurveTo(p1055 * 198.5, p1055 * 302.0625, p1055 * 195.5, p1055 * 311.0625, p1055 * 193.5, p1055 * 312.0625);
    v1408.closePath();
    f84(v1408, p1056[1]);
    v1408.scale(3, 3);
    v1408.translate(15, p1055 * 10);
    if (p1057 == 1) {
      v1408.beginPath();
      v1408.lineCap = "round";
      v1408.lineJoin = "round";
      v1408.moveTo(p1055 * 4, p1055 * 32);
      v1408.bezierCurveTo(p1055 * 19, p1055 * 25, p1055 * 19, p1055 * 25, p1055 * 34, p1055 * 18);
      v1408.bezierCurveTo(p1055 * 41.5, p1055 * 23.5, p1055 * 41.5, p1055 * 23.5, p1055 * 49, p1055 * 29);
      v1408.bezierCurveTo(p1055 * 59.5, p1055 * 20, p1055 * 59.5, p1055 * 20, p1055 * 70, p1055 * 11);
      f84(v1408, undefined, p1056[3], p1055 * 28);
      v1408.beginPath();
      v1408.lineCap = "round";
      v1408.lineJoin = "round";
      v1408.moveTo(p1055 * 56, p1055 * 6);
      v1408.bezierCurveTo(p1055 * 63.5, p1055 * 13.5, p1055 * 63.5, p1055 * 13.5, p1055 * 71, p1055 * 21);
      v1408.bezierCurveTo(p1055 * 74.5, p1055 * 11.5, p1055 * 74.5, p1055 * 11.5, p1055 * 78, p1055 * 2);
      v1408.closePath();
      f84(v1408, p1056[3], p1056[3], p1055 * 28);
    }
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 4, p1055 * 32);
    v1408.bezierCurveTo(p1055 * 19, p1055 * 25, p1055 * 19, p1055 * 25, p1055 * 34, p1055 * 18);
    v1408.bezierCurveTo(p1055 * 41.5, p1055 * 23.5, p1055 * 41.5, p1055 * 23.5, p1055 * 49, p1055 * 29);
    v1408.bezierCurveTo(p1055 * 59.5, p1055 * 20, p1055 * 59.5, p1055 * 20, p1055 * 70, p1055 * 11);
    f84(v1408, vVUndefined11, p1056[1], p1055 * 17);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 56, p1055 * 6);
    v1408.bezierCurveTo(p1055 * 63.5, p1055 * 13.5, p1055 * 63.5, p1055 * 13.5, p1055 * 71, p1055 * 21);
    v1408.bezierCurveTo(p1055 * 74.5, p1055 * 11.5, p1055 * 74.5, p1055 * 11.5, p1055 * 78, p1055 * 2);
    v1408.closePath();
    f84(v1408, p1056[1], p1056[1], p1055 * 17);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 4, p1055 * 32);
    v1408.bezierCurveTo(p1055 * 19, p1055 * 25, p1055 * 19, p1055 * 25, p1055 * 34, p1055 * 18);
    v1408.bezierCurveTo(p1055 * 41.5, p1055 * 23.5, p1055 * 41.5, p1055 * 23.5, p1055 * 49, p1055 * 29);
    v1408.bezierCurveTo(p1055 * 59.5, p1055 * 20, p1055 * 59.5, p1055 * 20, p1055 * 70, p1055 * 11);
    f84(v1408, undefined, p1056[2], p1055 * 10);
    v1408.beginPath();
    v1408.lineCap = "round";
    v1408.lineJoin = "round";
    v1408.moveTo(p1055 * 56, p1055 * 6);
    v1408.bezierCurveTo(p1055 * 63.5, p1055 * 13.5, p1055 * 63.5, p1055 * 13.5, p1055 * 71, p1055 * 21);
    v1408.bezierCurveTo(p1055 * 74.5, p1055 * 11.5, p1055 * 74.5, p1055 * 11.5, p1055 * 78, p1055 * 2);
    v1408.closePath();
    f84(v1408, p1056[2], p1056[2], p1055 * 10);
    return v1407;
  }
  function f259(p1058, p1059, p1060) {
    var v1409 = document.createElement("canvas");
    var v1410 = v1409.getContext("2d");
    v1409.width = p1058 * 496;
    v1409.height = p1058 * 520;
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 10);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 19.000030517578125, p1058 * 256.67613983154297);
    v1410.bezierCurveTo(p1058 * 1.000030517578125, p1058 * 332.67613983154297, p1058 * 23.000030517578125, p1058 * 404.67613983154297, p1058 * 95.00003051757812, p1058 * 463.67613983154297);
    v1410.bezierCurveTo(p1058 * 128.00003051757812, p1058 * 491.67613983154297, p1058 * 165.00003051757812, p1058 * 507.67613983154297, p1058 * 194.00003051757812, p1058 * 512.676139831543);
    v1410.bezierCurveTo(p1058 * 280.0000305175781, p1058 * 517.676139831543, p1058 * 291.0000305175781, p1058 * 516.676139831543, p1058 * 342.0000305175781, p1058 * 497.67613983154297);
    v1410.bezierCurveTo(p1058 * 425.0000305175781, p1058 * 454.67613983154297, p1058 * 469.0000305175781, p1058 * 392.67613983154297, p1058 * 468.0000305175781, p1058 * 300.67613983154297);
    v1410.bezierCurveTo(p1058 * 408.5000305175781, p1058 * 365.17613983154297, p1058 * 408.5000305175781, p1058 * 365.17613983154297, p1058 * 349.0000305175781, p1058 * 429.67613983154297);
    v1410.bezierCurveTo(p1058 * 256.0000305175781, p1058 * 473.67613983154297, p1058 * 167.00003051757812, p1058 * 459.67613983154297, p1058 * 78.00003051757812, p1058 * 384.67613983154297);
    v1410.closePath();
    f84(v1410, p1060[0]);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -10);
    f89(v1410, p1058 * 247.01138305664062, p1058 * 249.3125, p1058 * 161.4465855941215);
    f84(v1410, p1060[5], undefined, p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 10);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 65.00003051757812, p1058 * 263.4034118652344);
    v1410.bezierCurveTo(p1058 * 109.00003051757812, p1058 * 160.40341186523438, p1058 * 185.00003051757812, p1058 * 128.40341186523438, p1058 * 222.00003051757812, p1058 * 124.40341186523438);
    v1410.bezierCurveTo(p1058 * 277.0000305175781, p1058 * 116.40341186523438, p1058 * 339.0000305175781, p1058 * 134.40341186523438, p1058 * 379.0000305175781, p1058 * 195.40341186523438);
    v1410.bezierCurveTo(p1058 * 409.0000305175781, p1058 * 242.40341186523438, p1058 * 416.0000305175781, p1058 * 256.4034118652344, p1058 * 428.0000305175781, p1058 * 304.4034118652344);
    v1410.bezierCurveTo(p1058 * 457.0000305175781, p1058 * 203.40341186523438, p1058 * 449.0000305175781, p1058 * 183.40341186523438, p1058 * 438.0000305175781, p1058 * 162.40341186523438);
    v1410.bezierCurveTo(p1058 * 381.0000305175781, p1058 * 73.40341186523438, p1058 * 360.0000305175781, p1058 * 66.40341186523438, p1058 * 257.0000305175781, p1058 * 46.403411865234375);
    v1410.bezierCurveTo(p1058 * 191.00003051757812, p1058 * 45.403411865234375, p1058 * 142.00003051757812, p1058 * 65.40341186523438, p1058 * 101.00003051757812, p1058 * 115.40341186523438);
    v1410.closePath();
    f84(v1410, p1060[0]);
    v1410.globalAlpha = 1;
    var vF47 = function (p1061, p1062) {
      var v1411 = document.createElement("canvas");
      var v1412 = v1411.getContext("2d");
      v1411.width = p1061 * 496;
      v1411.height = p1061 * 520;
      v1412.globalAlpha = 1;
      v1412.translate(0, p1061 * -10);
      f89(v1412, p1061 * 247.01138305664062, p1061 * 250.13068389892578, p1061 * 232.81967270830015);
      f84(v1412, p1062[1], p1062[2], p1061 * 14);
      v1412.globalCompositeOperation = "destination-out";
      f89(v1412, p1061 * 247.01138305664062, p1061 * 249.3125, p1061 * 161.4465855941215);
      f84(v1412, p1062[0], p1062[0], p1061 * 14);
      v1412.globalCompositeOperation = "source-over";
      return v1411;
    }(p1058, p1060);
    v1410.drawImage(vF47, 0, 0);
    v1410.translate(0, p1058 * -10);
    f89(v1410, p1058 * 247.01138305664062, p1058 * 249.3125, p1058 * 161.4465855941215);
    f84(v1410, vVVVUndefined21, p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 325.0113830566406, p1058 * 13.767059326171875);
    v1410.bezierCurveTo(p1058 * 349.5113830566406, p1058 * 25.767059326171875, p1058 * 349.5113830566406, p1058 * 25.767059326171875, p1058 * 374.0113830566406, p1058 * 37.767059326171875);
    v1410.bezierCurveTo(p1058 * 384.0113830566406, p1058 * 44.767059326171875, p1058 * 383.0113830566406, p1058 * 50.767059326171875, p1058 * 368.0113830566406, p1058 * 68.76705932617188);
    v1410.bezierCurveTo(p1058 * 352.5113830566406, p1058 * 91.26705932617188, p1058 * 352.5113830566406, p1058 * 91.26705932617188, p1058 * 337.0113830566406, p1058 * 113.76705932617188);
    v1410.bezierCurveTo(p1058 * 328.0113830566406, p1058 * 119.76705932617188, p1058 * 328.0113830566406, p1058 * 121.76705932617188, p1058 * 312.0113830566406, p1058 * 112.76705932617188);
    v1410.bezierCurveTo(p1058 * 303.0113830566406, p1058 * 108.26705932617188, p1058 * 303.0113830566406, p1058 * 108.26705932617188, p1058 * 294.0113830566406, p1058 * 103.76705932617188);
    v1410.bezierCurveTo(p1058 * 287.0113830566406, p1058 * 99.76705932617188, p1058 * 293.0113830566406, p1058 * 84.76705932617188, p1058 * 297.0113830566406, p1058 * 67.76705932617188);
    v1410.bezierCurveTo(p1058 * 302.0113830566406, p1058 * 47.767059326171875, p1058 * 302.0113830566406, p1058 * 47.767059326171875, p1058 * 307.0113830566406, p1058 * 27.767059326171875);
    v1410.bezierCurveTo(p1058 * 310.0113830566406, p1058 * 15.767059326171875, p1058 * 317.0113830566406, p1058 * 12.767059326171875, p1058 * 323.0113830566406, p1058 * 13.767059326171875);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 325.0113830566406, p1058 * 13.767059326171875);
    v1410.bezierCurveTo(p1058 * 349.5113830566406, p1058 * 25.767059326171875, p1058 * 349.5113830566406, p1058 * 25.767059326171875, p1058 * 374.0113830566406, p1058 * 37.767059326171875);
    v1410.bezierCurveTo(p1058 * 384.0113830566406, p1058 * 44.767059326171875, p1058 * 383.0113830566406, p1058 * 50.767059326171875, p1058 * 368.0113830566406, p1058 * 68.76705932617188);
    v1410.bezierCurveTo(p1058 * 352.5113830566406, p1058 * 91.26705932617188, p1058 * 352.5113830566406, p1058 * 91.26705932617188, p1058 * 337.0113830566406, p1058 * 113.76705932617188);
    v1410.bezierCurveTo(p1058 * 328.0113830566406, p1058 * 119.76705932617188, p1058 * 328.0113830566406, p1058 * 121.76705932617188, p1058 * 312.0113830566406, p1058 * 112.76705932617188);
    v1410.bezierCurveTo(p1058 * 303.0113830566406, p1058 * 108.26705932617188, p1058 * 303.0113830566406, p1058 * 108.26705932617188, p1058 * 294.0113830566406, p1058 * 103.76705932617188);
    v1410.bezierCurveTo(p1058 * 287.0113830566406, p1058 * 99.76705932617188, p1058 * 293.0113830566406, p1058 * 84.76705932617188, p1058 * 297.0113830566406, p1058 * 67.76705932617188);
    v1410.bezierCurveTo(p1058 * 302.0113830566406, p1058 * 47.767059326171875, p1058 * 302.0113830566406, p1058 * 47.767059326171875, p1058 * 307.0113830566406, p1058 * 27.767059326171875);
    v1410.bezierCurveTo(p1058 * 310.0113830566406, p1058 * 15.767059326171875, p1058 * 317.0113830566406, p1058 * 12.767059326171875, p1058 * 323.0113830566406, p1058 * 13.767059326171875);
    v1410.closePath();
    f84(v1410, p1060[3], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 403.0113830566406, p1058 * 89.76705932617188);
    v1410.bezierCurveTo(p1058 * 413.0113830566406, p1058 * 76.76705932617188, p1058 * 418.0113830566406, p1058 * 79.76705932617188, p1058 * 428.0113830566406, p1058 * 92.76705932617188);
    v1410.bezierCurveTo(p1058 * 435.0113830566406, p1058 * 99.76705932617188, p1058 * 435.0113830566406, p1058 * 99.76705932617188, p1058 * 442.0113830566406, p1058 * 106.76705932617188);
    v1410.bezierCurveTo(p1058 * 450.0113830566406, p1058 * 116.76705932617188, p1058 * 445.0113830566406, p1058 * 119.76705932617188, p1058 * 433.0113830566406, p1058 * 128.76705932617188);
    v1410.bezierCurveTo(p1058 * 408.0113830566406, p1058 * 146.26705932617188, p1058 * 408.0113830566406, p1058 * 146.26705932617188, p1058 * 383.0113830566406, p1058 * 163.76705932617188);
    v1410.bezierCurveTo(p1058 * 376.0113830566406, p1058 * 166.76705932617188, p1058 * 377.0113830566406, p1058 * 165.76705932617188, p1058 * 368.0113830566406, p1058 * 156.76705932617188);
    v1410.bezierCurveTo(p1058 * 359.0113830566406, p1058 * 144.76705932617188, p1058 * 359.0113830566406, p1058 * 142.76705932617188, p1058 * 367.0113830566406, p1058 * 133.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 403.0113830566406, p1058 * 89.76705932617188);
    v1410.bezierCurveTo(p1058 * 413.0113830566406, p1058 * 76.76705932617188, p1058 * 418.0113830566406, p1058 * 79.76705932617188, p1058 * 428.0113830566406, p1058 * 92.76705932617188);
    v1410.bezierCurveTo(p1058 * 435.0113830566406, p1058 * 99.76705932617188, p1058 * 435.0113830566406, p1058 * 99.76705932617188, p1058 * 442.0113830566406, p1058 * 106.76705932617188);
    v1410.bezierCurveTo(p1058 * 450.0113830566406, p1058 * 116.76705932617188, p1058 * 445.0113830566406, p1058 * 119.76705932617188, p1058 * 433.0113830566406, p1058 * 128.76705932617188);
    v1410.bezierCurveTo(p1058 * 408.0113830566406, p1058 * 146.26705932617188, p1058 * 408.0113830566406, p1058 * 146.26705932617188, p1058 * 383.0113830566406, p1058 * 163.76705932617188);
    v1410.bezierCurveTo(p1058 * 376.0113830566406, p1058 * 166.76705932617188, p1058 * 377.0113830566406, p1058 * 165.76705932617188, p1058 * 368.0113830566406, p1058 * 156.76705932617188);
    v1410.bezierCurveTo(p1058 * 359.0113830566406, p1058 * 144.76705932617188, p1058 * 359.0113830566406, p1058 * 142.76705932617188, p1058 * 367.0113830566406, p1058 * 133.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 228.01138305664062, p1058 * 1.767059326171875);
    v1410.bezierCurveTo(p1058 * 246.51138305664062, p1058 * 3.267059326171875, p1058 * 246.51138305664062, p1058 * 3.267059326171875, p1058 * 265.0113830566406, p1058 * 4.767059326171875);
    v1410.bezierCurveTo(p1058 * 273.0113830566406, p1058 * 5.767059326171875, p1058 * 275.0113830566406, p1058 * 11.767059326171875, p1058 * 270.0113830566406, p1058 * 27.767059326171875);
    v1410.bezierCurveTo(p1058 * 264.0113830566406, p1058 * 54.267059326171875, p1058 * 264.0113830566406, p1058 * 54.267059326171875, p1058 * 258.0113830566406, p1058 * 80.76705932617188);
    v1410.bezierCurveTo(p1058 * 256.0113830566406, p1058 * 92.76705932617188, p1058 * 256.0113830566406, p1058 * 94.76705932617188, p1058 * 242.01138305664062, p1058 * 93.76705932617188);
    v1410.bezierCurveTo(p1058 * 226.01138305664062, p1058 * 95.76705932617188, p1058 * 225.01138305664062, p1058 * 91.76705932617188, p1058 * 225.01138305664062, p1058 * 80.76705932617188);
    v1410.bezierCurveTo(p1058 * 223.51138305664062, p1058 * 50.267059326171875, p1058 * 223.51138305664062, p1058 * 50.267059326171875, p1058 * 222.01138305664062, p1058 * 19.767059326171875);
    v1410.bezierCurveTo(p1058 * 219.01138305664062, p1058 * 8.767059326171875, p1058 * 224.01138305664062, p1058 * 4.767059326171875, p1058 * 227.01138305664062, p1058 * 2.767059326171875);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 228.01138305664062, p1058 * 1.767059326171875);
    v1410.bezierCurveTo(p1058 * 246.51138305664062, p1058 * 3.267059326171875, p1058 * 246.51138305664062, p1058 * 3.267059326171875, p1058 * 265.0113830566406, p1058 * 4.767059326171875);
    v1410.bezierCurveTo(p1058 * 273.0113830566406, p1058 * 5.767059326171875, p1058 * 275.0113830566406, p1058 * 11.767059326171875, p1058 * 270.0113830566406, p1058 * 27.767059326171875);
    v1410.bezierCurveTo(p1058 * 264.0113830566406, p1058 * 54.267059326171875, p1058 * 264.0113830566406, p1058 * 54.267059326171875, p1058 * 258.0113830566406, p1058 * 80.76705932617188);
    v1410.bezierCurveTo(p1058 * 256.0113830566406, p1058 * 92.76705932617188, p1058 * 256.0113830566406, p1058 * 94.76705932617188, p1058 * 242.01138305664062, p1058 * 93.76705932617188);
    v1410.bezierCurveTo(p1058 * 226.01138305664062, p1058 * 95.76705932617188, p1058 * 225.01138305664062, p1058 * 91.76705932617188, p1058 * 225.01138305664062, p1058 * 80.76705932617188);
    v1410.bezierCurveTo(p1058 * 223.51138305664062, p1058 * 50.267059326171875, p1058 * 223.51138305664062, p1058 * 50.267059326171875, p1058 * 222.01138305664062, p1058 * 19.767059326171875);
    v1410.bezierCurveTo(p1058 * 219.01138305664062, p1058 * 8.767059326171875, p1058 * 224.01138305664062, p1058 * 4.767059326171875, p1058 * 227.01138305664062, p1058 * 2.767059326171875);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 142.01138305664062, p1058 * 25.767059326171875);
    v1410.bezierCurveTo(p1058 * 158.51138305664062, p1058 * 19.767059326171875, p1058 * 158.51138305664062, p1058 * 19.767059326171875, p1058 * 175.01138305664062, p1058 * 13.767059326171875);
    v1410.bezierCurveTo(p1058 * 188.01138305664062, p1058 * 11.767059326171875, p1058 * 188.01138305664062, p1058 * 16.767059326171875, p1058 * 191.01138305664062, p1058 * 29.767059326171875);
    v1410.bezierCurveTo(p1058 * 197.01138305664062, p1058 * 60.267059326171875, p1058 * 197.01138305664062, p1058 * 60.267059326171875, p1058 * 203.01138305664062, p1058 * 90.76705932617188);
    v1410.bezierCurveTo(p1058 * 206.01138305664062, p1058 * 102.76705932617188, p1058 * 196.01138305664062, p1058 * 99.76705932617188, p1058 * 181.01138305664062, p1058 * 105.76705932617188);
    v1410.bezierCurveTo(p1058 * 175.01138305664062, p1058 * 108.76705932617188, p1058 * 172.01138305664062, p1058 * 104.76705932617188, p1058 * 164.01138305664062, p1058 * 84.76705932617188);
    v1410.bezierCurveTo(p1058 * 152.51138305664062, p1058 * 63.267059326171875, p1058 * 152.51138305664062, p1058 * 63.267059326171875, p1058 * 141.01138305664062, p1058 * 41.767059326171875);
    v1410.bezierCurveTo(p1058 * 138.01138305664062, p1058 * 35.767059326171875, p1058 * 138.01138305664062, p1058 * 29.767059326171875, p1058 * 141.01138305664062, p1058 * 27.767059326171875);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 142.01138305664062, p1058 * 25.767059326171875);
    v1410.bezierCurveTo(p1058 * 158.51138305664062, p1058 * 19.767059326171875, p1058 * 158.51138305664062, p1058 * 19.767059326171875, p1058 * 175.01138305664062, p1058 * 13.767059326171875);
    v1410.bezierCurveTo(p1058 * 188.01138305664062, p1058 * 11.767059326171875, p1058 * 188.01138305664062, p1058 * 16.767059326171875, p1058 * 191.01138305664062, p1058 * 29.767059326171875);
    v1410.bezierCurveTo(p1058 * 197.01138305664062, p1058 * 60.267059326171875, p1058 * 197.01138305664062, p1058 * 60.267059326171875, p1058 * 203.01138305664062, p1058 * 90.76705932617188);
    v1410.bezierCurveTo(p1058 * 206.01138305664062, p1058 * 102.76705932617188, p1058 * 196.01138305664062, p1058 * 99.76705932617188, p1058 * 181.01138305664062, p1058 * 105.76705932617188);
    v1410.bezierCurveTo(p1058 * 175.01138305664062, p1058 * 108.76705932617188, p1058 * 172.01138305664062, p1058 * 104.76705932617188, p1058 * 164.01138305664062, p1058 * 84.76705932617188);
    v1410.bezierCurveTo(p1058 * 152.51138305664062, p1058 * 63.267059326171875, p1058 * 152.51138305664062, p1058 * 63.267059326171875, p1058 * 141.01138305664062, p1058 * 41.767059326171875);
    v1410.bezierCurveTo(p1058 * 138.01138305664062, p1058 * 35.767059326171875, p1058 * 138.01138305664062, p1058 * 29.767059326171875, p1058 * 141.01138305664062, p1058 * 27.767059326171875);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 70.01138305664062, p1058 * 76.76705932617188);
    v1410.bezierCurveTo(p1058 * 83.01138305664062, p1058 * 64.26705932617188, p1058 * 83.01138305664062, p1058 * 64.26705932617188, p1058 * 96.01138305664062, p1058 * 51.767059326171875);
    v1410.bezierCurveTo(p1058 * 104.01138305664062, p1058 * 44.767059326171875, p1058 * 110.01138305664062, p1058 * 51.767059326171875, p1058 * 119.01138305664062, p1058 * 66.76705932617188);
    v1410.bezierCurveTo(p1058 * 135.01138305664062, p1058 * 88.26705932617188, p1058 * 135.01138305664062, p1058 * 88.26705932617188, p1058 * 151.01138305664062, p1058 * 109.76705932617188);
    v1410.bezierCurveTo(p1058 * 157.01138305664062, p1058 * 119.76705932617188, p1058 * 153.01138305664062, p1058 * 122.76705932617188, p1058 * 147.01138305664062, p1058 * 129.76705932617188);
    v1410.bezierCurveTo(p1058 * 138.01138305664062, p1058 * 140.76705932617188, p1058 * 136.01138305664062, p1058 * 140.76705932617188, p1058 * 122.01138305664062, p1058 * 127.76705932617188);
    v1410.bezierCurveTo(p1058 * 99.51138305664062, p1058 * 110.26705932617188, p1058 * 99.51138305664062, p1058 * 110.26705932617188, p1058 * 77.01138305664062, p1058 * 92.76705932617188);
    v1410.bezierCurveTo(p1058 * 66.01138305664062, p1058 * 83.76705932617188, p1058 * 66.01138305664062, p1058 * 82.76705932617188, p1058 * 69.01138305664062, p1058 * 78.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 70.01138305664062, p1058 * 76.76705932617188);
    v1410.bezierCurveTo(p1058 * 83.01138305664062, p1058 * 64.26705932617188, p1058 * 83.01138305664062, p1058 * 64.26705932617188, p1058 * 96.01138305664062, p1058 * 51.767059326171875);
    v1410.bezierCurveTo(p1058 * 104.01138305664062, p1058 * 44.767059326171875, p1058 * 110.01138305664062, p1058 * 51.767059326171875, p1058 * 119.01138305664062, p1058 * 66.76705932617188);
    v1410.bezierCurveTo(p1058 * 135.01138305664062, p1058 * 88.26705932617188, p1058 * 135.01138305664062, p1058 * 88.26705932617188, p1058 * 151.01138305664062, p1058 * 109.76705932617188);
    v1410.bezierCurveTo(p1058 * 157.01138305664062, p1058 * 119.76705932617188, p1058 * 153.01138305664062, p1058 * 122.76705932617188, p1058 * 147.01138305664062, p1058 * 129.76705932617188);
    v1410.bezierCurveTo(p1058 * 138.01138305664062, p1058 * 140.76705932617188, p1058 * 136.01138305664062, p1058 * 140.76705932617188, p1058 * 122.01138305664062, p1058 * 127.76705932617188);
    v1410.bezierCurveTo(p1058 * 99.51138305664062, p1058 * 110.26705932617188, p1058 * 99.51138305664062, p1058 * 110.26705932617188, p1058 * 77.01138305664062, p1058 * 92.76705932617188);
    v1410.bezierCurveTo(p1058 * 66.01138305664062, p1058 * 83.76705932617188, p1058 * 66.01138305664062, p1058 * 82.76705932617188, p1058 * 69.01138305664062, p1058 * 78.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 33.011383056640625, p1058 * 126.76705932617188);
    v1410.bezierCurveTo(p1058 * 22.011383056640625, p1058 * 149.76705932617188, p1058 * 22.011383056640625, p1058 * 149.76705932617188, p1058 * 11.011383056640625, p1058 * 172.76705932617188);
    v1410.bezierCurveTo(p1058 * 7.011383056640625, p1058 * 184.76705932617188, p1058 * 11.011383056640625, p1058 * 189.76705932617188, p1058 * 36.011383056640625, p1058 * 195.76705932617188);
    v1410.bezierCurveTo(p1058 * 61.011383056640625, p1058 * 202.26705932617188, p1058 * 61.011383056640625, p1058 * 202.26705932617188, p1058 * 86.01138305664062, p1058 * 208.76705932617188);
    v1410.bezierCurveTo(p1058 * 100.01138305664062, p1058 * 214.76705932617188, p1058 * 102.01138305664062, p1058 * 203.76705932617188, p1058 * 109.01138305664062, p1058 * 189.76705932617188);
    v1410.bezierCurveTo(p1058 * 117.01138305664062, p1058 * 171.76705932617188, p1058 * 116.01138305664062, p1058 * 166.76705932617188, p1058 * 97.01138305664062, p1058 * 156.76705932617188);
    v1410.bezierCurveTo(p1058 * 74.01138305664062, p1058 * 140.76705932617188, p1058 * 74.01138305664062, p1058 * 140.76705932617188, p1058 * 51.011383056640625, p1058 * 124.76705932617188);
    v1410.bezierCurveTo(p1058 * 42.011383056640625, p1058 * 118.76705932617188, p1058 * 37.011383056640625, p1058 * 119.76705932617188, p1058 * 33.011383056640625, p1058 * 126.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 33.011383056640625, p1058 * 126.76705932617188);
    v1410.bezierCurveTo(p1058 * 22.011383056640625, p1058 * 149.76705932617188, p1058 * 22.011383056640625, p1058 * 149.76705932617188, p1058 * 11.011383056640625, p1058 * 172.76705932617188);
    v1410.bezierCurveTo(p1058 * 7.011383056640625, p1058 * 184.76705932617188, p1058 * 11.011383056640625, p1058 * 189.76705932617188, p1058 * 36.011383056640625, p1058 * 195.76705932617188);
    v1410.bezierCurveTo(p1058 * 61.011383056640625, p1058 * 202.26705932617188, p1058 * 61.011383056640625, p1058 * 202.26705932617188, p1058 * 86.01138305664062, p1058 * 208.76705932617188);
    v1410.bezierCurveTo(p1058 * 100.01138305664062, p1058 * 214.76705932617188, p1058 * 102.01138305664062, p1058 * 203.76705932617188, p1058 * 109.01138305664062, p1058 * 189.76705932617188);
    v1410.bezierCurveTo(p1058 * 117.01138305664062, p1058 * 171.76705932617188, p1058 * 116.01138305664062, p1058 * 166.76705932617188, p1058 * 97.01138305664062, p1058 * 156.76705932617188);
    v1410.bezierCurveTo(p1058 * 74.01138305664062, p1058 * 140.76705932617188, p1058 * 74.01138305664062, p1058 * 140.76705932617188, p1058 * 51.011383056640625, p1058 * 124.76705932617188);
    v1410.bezierCurveTo(p1058 * 42.011383056640625, p1058 * 118.76705932617188, p1058 * 37.011383056640625, p1058 * 119.76705932617188, p1058 * 33.011383056640625, p1058 * 126.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[3], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 13.011383056640625, p1058 * 229.76705932617188);
    v1410.bezierCurveTo(p1058 * 45.511383056640625, p1058 * 233.76705932617188, p1058 * 45.511383056640625, p1058 * 233.76705932617188, p1058 * 78.01138305664062, p1058 * 237.76705932617188);
    v1410.bezierCurveTo(p1058 * 92.01138305664062, p1058 * 239.76705932617188, p1058 * 92.01138305664062, p1058 * 246.76705932617188, p1058 * 91.01138305664062, p1058 * 257.7670593261719);
    v1410.bezierCurveTo(p1058 * 92.01138305664062, p1058 * 275.7670593261719, p1058 * 91.01138305664062, p1058 * 274.7670593261719, p1058 * 68.01138305664062, p1058 * 276.7670593261719);
    v1410.bezierCurveTo(p1058 * 42.511383056640625, p1058 * 279.7670593261719, p1058 * 42.511383056640625, p1058 * 279.7670593261719, p1058 * 17.011383056640625, p1058 * 282.7670593261719);
    v1410.bezierCurveTo(p1058 * 2.011383056640625, p1058 * 282.7670593261719, p1058 * 3.011383056640625, p1058 * 276.7670593261719, p1058 * 2.011383056640625, p1058 * 260.7670593261719);
    v1410.bezierCurveTo(p1058 * 2.011383056640625, p1058 * 231.76705932617188, p1058 * 4.011383056640625, p1058 * 232.76705932617188, p1058 * 11.011383056640625, p1058 * 230.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 13.011383056640625, p1058 * 229.76705932617188);
    v1410.bezierCurveTo(p1058 * 45.511383056640625, p1058 * 233.76705932617188, p1058 * 45.511383056640625, p1058 * 233.76705932617188, p1058 * 78.01138305664062, p1058 * 237.76705932617188);
    v1410.bezierCurveTo(p1058 * 92.01138305664062, p1058 * 239.76705932617188, p1058 * 92.01138305664062, p1058 * 246.76705932617188, p1058 * 91.01138305664062, p1058 * 257.7670593261719);
    v1410.bezierCurveTo(p1058 * 92.01138305664062, p1058 * 275.7670593261719, p1058 * 91.01138305664062, p1058 * 274.7670593261719, p1058 * 68.01138305664062, p1058 * 276.7670593261719);
    v1410.bezierCurveTo(p1058 * 42.511383056640625, p1058 * 279.7670593261719, p1058 * 42.511383056640625, p1058 * 279.7670593261719, p1058 * 17.011383056640625, p1058 * 282.7670593261719);
    v1410.bezierCurveTo(p1058 * 2.011383056640625, p1058 * 282.7670593261719, p1058 * 3.011383056640625, p1058 * 276.7670593261719, p1058 * 2.011383056640625, p1058 * 260.7670593261719);
    v1410.bezierCurveTo(p1058 * 2.011383056640625, p1058 * 231.76705932617188, p1058 * 4.011383056640625, p1058 * 232.76705932617188, p1058 * 11.011383056640625, p1058 * 230.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 97.01138305664062, p1058 * 329.7670593261719);
    v1410.bezierCurveTo(p1058 * 68.51138305664062, p1058 * 343.7670593261719, p1058 * 68.51138305664062, p1058 * 343.7670593261719, p1058 * 40.011383056640625, p1058 * 357.7670593261719);
    v1410.bezierCurveTo(p1058 * 29.011383056640625, p1058 * 360.7670593261719, p1058 * 27.011383056640625, p1058 * 361.7670593261719, p1058 * 20.011383056640625, p1058 * 346.7670593261719);
    v1410.bezierCurveTo(p1058 * 16.511383056640625, p1058 * 336.2670593261719, p1058 * 16.511383056640625, p1058 * 336.2670593261719, p1058 * 13.011383056640625, p1058 * 325.7670593261719);
    v1410.bezierCurveTo(p1058 * 10.011383056640625, p1058 * 307.7670593261719, p1058 * 18.011383056640625, p1058 * 312.7670593261719, p1058 * 34.011383056640625, p1058 * 306.7670593261719);
    v1410.bezierCurveTo(p1058 * 59.511383056640625, p1058 * 302.2670593261719, p1058 * 59.511383056640625, p1058 * 302.2670593261719, p1058 * 85.01138305664062, p1058 * 297.7670593261719);
    v1410.bezierCurveTo(p1058 * 97.01138305664062, p1058 * 294.7670593261719, p1058 * 100.01138305664062, p1058 * 297.7670593261719, p1058 * 100.01138305664062, p1058 * 307.7670593261719);
    v1410.bezierCurveTo(p1058 * 105.01138305664062, p1058 * 326.7670593261719, p1058 * 103.01138305664062, p1058 * 325.7670593261719, p1058 * 97.01138305664062, p1058 * 329.7670593261719);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 97.01138305664062, p1058 * 329.7670593261719);
    v1410.bezierCurveTo(p1058 * 68.51138305664062, p1058 * 343.7670593261719, p1058 * 68.51138305664062, p1058 * 343.7670593261719, p1058 * 40.011383056640625, p1058 * 357.7670593261719);
    v1410.bezierCurveTo(p1058 * 29.011383056640625, p1058 * 360.7670593261719, p1058 * 27.011383056640625, p1058 * 361.7670593261719, p1058 * 20.011383056640625, p1058 * 346.7670593261719);
    v1410.bezierCurveTo(p1058 * 16.511383056640625, p1058 * 336.2670593261719, p1058 * 16.511383056640625, p1058 * 336.2670593261719, p1058 * 13.011383056640625, p1058 * 325.7670593261719);
    v1410.bezierCurveTo(p1058 * 10.011383056640625, p1058 * 307.7670593261719, p1058 * 18.011383056640625, p1058 * 312.7670593261719, p1058 * 34.011383056640625, p1058 * 306.7670593261719);
    v1410.bezierCurveTo(p1058 * 59.511383056640625, p1058 * 302.2670593261719, p1058 * 59.511383056640625, p1058 * 302.2670593261719, p1058 * 85.01138305664062, p1058 * 297.7670593261719);
    v1410.bezierCurveTo(p1058 * 97.01138305664062, p1058 * 294.7670593261719, p1058 * 100.01138305664062, p1058 * 297.7670593261719, p1058 * 100.01138305664062, p1058 * 307.7670593261719);
    v1410.bezierCurveTo(p1058 * 105.01138305664062, p1058 * 326.7670593261719, p1058 * 103.01138305664062, p1058 * 325.7670593261719, p1058 * 97.01138305664062, p1058 * 329.7670593261719);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 394.0113830566406, p1058 * 181.76705932617188);
    v1410.bezierCurveTo(p1058 * 426.5113830566406, p1058 * 166.76705932617188, p1058 * 426.5113830566406, p1058 * 166.76705932617188, p1058 * 459.0113830566406, p1058 * 151.76705932617188);
    v1410.bezierCurveTo(p1058 * 469.0113830566406, p1058 * 152.76705932617188, p1058 * 469.0113830566406, p1058 * 155.76705932617188, p1058 * 472.0113830566406, p1058 * 165.76705932617188);
    v1410.bezierCurveTo(p1058 * 476.0113830566406, p1058 * 177.26705932617188, p1058 * 476.0113830566406, p1058 * 177.26705932617188, p1058 * 480.0113830566406, p1058 * 188.76705932617188);
    v1410.bezierCurveTo(p1058 * 483.0113830566406, p1058 * 199.76705932617188, p1058 * 480.0113830566406, p1058 * 200.76705932617188, p1058 * 460.0113830566406, p1058 * 205.76705932617188);
    v1410.bezierCurveTo(p1058 * 433.5113830566406, p1058 * 210.26705932617188, p1058 * 433.5113830566406, p1058 * 210.26705932617188, p1058 * 407.0113830566406, p1058 * 214.76705932617188);
    v1410.bezierCurveTo(p1058 * 395.0113830566406, p1058 * 218.76705932617188, p1058 * 397.0113830566406, p1058 * 211.76705932617188, p1058 * 393.0113830566406, p1058 * 202.76705932617188);
    v1410.bezierCurveTo(p1058 * 387.0113830566406, p1058 * 188.76705932617188, p1058 * 387.0113830566406, p1058 * 187.76705932617188, p1058 * 394.0113830566406, p1058 * 181.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 394.0113830566406, p1058 * 181.76705932617188);
    v1410.bezierCurveTo(p1058 * 426.5113830566406, p1058 * 166.76705932617188, p1058 * 426.5113830566406, p1058 * 166.76705932617188, p1058 * 459.0113830566406, p1058 * 151.76705932617188);
    v1410.bezierCurveTo(p1058 * 469.0113830566406, p1058 * 152.76705932617188, p1058 * 469.0113830566406, p1058 * 155.76705932617188, p1058 * 472.0113830566406, p1058 * 165.76705932617188);
    v1410.bezierCurveTo(p1058 * 476.0113830566406, p1058 * 177.26705932617188, p1058 * 476.0113830566406, p1058 * 177.26705932617188, p1058 * 480.0113830566406, p1058 * 188.76705932617188);
    v1410.bezierCurveTo(p1058 * 483.0113830566406, p1058 * 199.76705932617188, p1058 * 480.0113830566406, p1058 * 200.76705932617188, p1058 * 460.0113830566406, p1058 * 205.76705932617188);
    v1410.bezierCurveTo(p1058 * 433.5113830566406, p1058 * 210.26705932617188, p1058 * 433.5113830566406, p1058 * 210.26705932617188, p1058 * 407.0113830566406, p1058 * 214.76705932617188);
    v1410.bezierCurveTo(p1058 * 395.0113830566406, p1058 * 218.76705932617188, p1058 * 397.0113830566406, p1058 * 211.76705932617188, p1058 * 393.0113830566406, p1058 * 202.76705932617188);
    v1410.bezierCurveTo(p1058 * 387.0113830566406, p1058 * 188.76705932617188, p1058 * 387.0113830566406, p1058 * 187.76705932617188, p1058 * 394.0113830566406, p1058 * 181.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 411.0113830566406, p1058 * 234.76705932617188);
    v1410.bezierCurveTo(p1058 * 446.0113830566406, p1058 * 233.26705932617188, p1058 * 446.0113830566406, p1058 * 233.26705932617188, p1058 * 481.0113830566406, p1058 * 231.76705932617188);
    v1410.bezierCurveTo(p1058 * 491.0113830566406, p1058 * 232.76705932617188, p1058 * 493.0113830566406, p1058 * 239.76705932617188, p1058 * 491.0113830566406, p1058 * 251.76705932617188);
    v1410.bezierCurveTo(p1058 * 490.0113830566406, p1058 * 263.7670593261719, p1058 * 490.0113830566406, p1058 * 263.7670593261719, p1058 * 489.0113830566406, p1058 * 275.7670593261719);
    v1410.bezierCurveTo(p1058 * 487.0113830566406, p1058 * 283.7670593261719, p1058 * 483.0113830566406, p1058 * 284.7670593261719, p1058 * 464.0113830566406, p1058 * 280.7670593261719);
    v1410.bezierCurveTo(p1058 * 437.0113830566406, p1058 * 273.7670593261719, p1058 * 437.0113830566406, p1058 * 273.7670593261719, p1058 * 410.0113830566406, p1058 * 266.7670593261719);
    v1410.bezierCurveTo(p1058 * 400.0113830566406, p1058 * 261.7670593261719, p1058 * 401.0113830566406, p1058 * 259.7670593261719, p1058 * 402.0113830566406, p1058 * 249.76705932617188);
    v1410.bezierCurveTo(p1058 * 401.0113830566406, p1058 * 237.76705932617188, p1058 * 403.0113830566406, p1058 * 235.76705932617188, p1058 * 408.0113830566406, p1058 * 234.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 411.0113830566406, p1058 * 234.76705932617188);
    v1410.bezierCurveTo(p1058 * 446.0113830566406, p1058 * 233.26705932617188, p1058 * 446.0113830566406, p1058 * 233.26705932617188, p1058 * 481.0113830566406, p1058 * 231.76705932617188);
    v1410.bezierCurveTo(p1058 * 491.0113830566406, p1058 * 232.76705932617188, p1058 * 493.0113830566406, p1058 * 239.76705932617188, p1058 * 491.0113830566406, p1058 * 251.76705932617188);
    v1410.bezierCurveTo(p1058 * 490.0113830566406, p1058 * 263.7670593261719, p1058 * 490.0113830566406, p1058 * 263.7670593261719, p1058 * 489.0113830566406, p1058 * 275.7670593261719);
    v1410.bezierCurveTo(p1058 * 487.0113830566406, p1058 * 283.7670593261719, p1058 * 483.0113830566406, p1058 * 284.7670593261719, p1058 * 464.0113830566406, p1058 * 280.7670593261719);
    v1410.bezierCurveTo(p1058 * 437.0113830566406, p1058 * 273.7670593261719, p1058 * 437.0113830566406, p1058 * 273.7670593261719, p1058 * 410.0113830566406, p1058 * 266.7670593261719);
    v1410.bezierCurveTo(p1058 * 400.0113830566406, p1058 * 261.7670593261719, p1058 * 401.0113830566406, p1058 * 259.7670593261719, p1058 * 402.0113830566406, p1058 * 249.76705932617188);
    v1410.bezierCurveTo(p1058 * 401.0113830566406, p1058 * 237.76705932617188, p1058 * 403.0113830566406, p1058 * 235.76705932617188, p1058 * 408.0113830566406, p1058 * 234.76705932617188);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 400.0113830566406, p1058 * 290.7670593261719);
    v1410.bezierCurveTo(p1058 * 437.0113830566406, p1058 * 301.2670593261719, p1058 * 437.0113830566406, p1058 * 301.2670593261719, p1058 * 474.0113830566406, p1058 * 311.7670593261719);
    v1410.bezierCurveTo(p1058 * 484.0113830566406, p1058 * 319.7670593261719, p1058 * 481.0113830566406, p1058 * 322.7670593261719, p1058 * 474.0113830566406, p1058 * 335.7670593261719);
    v1410.bezierCurveTo(p1058 * 465.5113830566406, p1058 * 354.7670593261719, p1058 * 465.5113830566406, p1058 * 354.7670593261719, p1058 * 457.0113830566406, p1058 * 373.7670593261719);
    v1410.bezierCurveTo(p1058 * 449.0113830566406, p1058 * 386.7670593261719, p1058 * 444.0113830566406, p1058 * 384.7670593261719, p1058 * 427.0113830566406, p1058 * 370.7670593261719);
    v1410.bezierCurveTo(p1058 * 403.0113830566406, p1058 * 354.7670593261719, p1058 * 403.0113830566406, p1058 * 354.7670593261719, p1058 * 379.0113830566406, p1058 * 338.7670593261719);
    v1410.bezierCurveTo(p1058 * 371.0113830566406, p1058 * 327.7670593261719, p1058 * 373.0113830566406, p1058 * 323.7670593261719, p1058 * 377.0113830566406, p1058 * 313.7670593261719);
    v1410.bezierCurveTo(p1058 * 386.0113830566406, p1058 * 292.7670593261719, p1058 * 393.0113830566406, p1058 * 288.7670593261719, p1058 * 398.0113830566406, p1058 * 291.7670593261719);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 400.0113830566406, p1058 * 290.7670593261719);
    v1410.bezierCurveTo(p1058 * 437.0113830566406, p1058 * 301.2670593261719, p1058 * 437.0113830566406, p1058 * 301.2670593261719, p1058 * 474.0113830566406, p1058 * 311.7670593261719);
    v1410.bezierCurveTo(p1058 * 484.0113830566406, p1058 * 319.7670593261719, p1058 * 481.0113830566406, p1058 * 322.7670593261719, p1058 * 474.0113830566406, p1058 * 335.7670593261719);
    v1410.bezierCurveTo(p1058 * 465.5113830566406, p1058 * 354.7670593261719, p1058 * 465.5113830566406, p1058 * 354.7670593261719, p1058 * 457.0113830566406, p1058 * 373.7670593261719);
    v1410.bezierCurveTo(p1058 * 449.0113830566406, p1058 * 386.7670593261719, p1058 * 444.0113830566406, p1058 * 384.7670593261719, p1058 * 427.0113830566406, p1058 * 370.7670593261719);
    v1410.bezierCurveTo(p1058 * 403.0113830566406, p1058 * 354.7670593261719, p1058 * 403.0113830566406, p1058 * 354.7670593261719, p1058 * 379.0113830566406, p1058 * 338.7670593261719);
    v1410.bezierCurveTo(p1058 * 371.0113830566406, p1058 * 327.7670593261719, p1058 * 373.0113830566406, p1058 * 323.7670593261719, p1058 * 377.0113830566406, p1058 * 313.7670593261719);
    v1410.bezierCurveTo(p1058 * 386.0113830566406, p1058 * 292.7670593261719, p1058 * 393.0113830566406, p1058 * 288.7670593261719, p1058 * 398.0113830566406, p1058 * 291.7670593261719);
    v1410.closePath();
    f84(v1410, p1060[3], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 366.0113830566406, p1058 * 361.2216033935547);
    v1410.bezierCurveTo(p1058 * 393.0113830566406, p1058 * 383.2216033935547, p1058 * 393.0113830566406, p1058 * 383.2216033935547, p1058 * 420.0113830566406, p1058 * 405.2216033935547);
    v1410.bezierCurveTo(p1058 * 427.0113830566406, p1058 * 414.2216033935547, p1058 * 425.0113830566406, p1058 * 417.2216033935547, p1058 * 413.0113830566406, p1058 * 428.2216033935547);
    v1410.bezierCurveTo(p1058 * 405.5113830566406, p1058 * 435.2216033935547, p1058 * 405.5113830566406, p1058 * 435.2216033935547, p1058 * 398.0113830566406, p1058 * 442.2216033935547);
    v1410.bezierCurveTo(p1058 * 388.0113830566406, p1058 * 451.2216033935547, p1058 * 385.0113830566406, p1058 * 445.2216033935547, p1058 * 373.0113830566406, p1058 * 428.2216033935547);
    v1410.bezierCurveTo(p1058 * 358.5113830566406, p1058 * 408.2216033935547, p1058 * 358.5113830566406, p1058 * 408.2216033935547, p1058 * 344.0113830566406, p1058 * 388.2216033935547);
    v1410.bezierCurveTo(p1058 * 337.0113830566406, p1058 * 378.2216033935547, p1058 * 342.0113830566406, p1058 * 377.2216033935547, p1058 * 347.0113830566406, p1058 * 371.2216033935547);
    v1410.bezierCurveTo(p1058 * 359.0113830566406, p1058 * 359.2216033935547, p1058 * 361.0113830566406, p1058 * 358.2216033935547, p1058 * 364.0113830566406, p1058 * 361.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 366.0113830566406, p1058 * 361.2216033935547);
    v1410.bezierCurveTo(p1058 * 393.0113830566406, p1058 * 383.2216033935547, p1058 * 393.0113830566406, p1058 * 383.2216033935547, p1058 * 420.0113830566406, p1058 * 405.2216033935547);
    v1410.bezierCurveTo(p1058 * 427.0113830566406, p1058 * 414.2216033935547, p1058 * 425.0113830566406, p1058 * 417.2216033935547, p1058 * 413.0113830566406, p1058 * 428.2216033935547);
    v1410.bezierCurveTo(p1058 * 405.5113830566406, p1058 * 435.2216033935547, p1058 * 405.5113830566406, p1058 * 435.2216033935547, p1058 * 398.0113830566406, p1058 * 442.2216033935547);
    v1410.bezierCurveTo(p1058 * 388.0113830566406, p1058 * 451.2216033935547, p1058 * 385.0113830566406, p1058 * 445.2216033935547, p1058 * 373.0113830566406, p1058 * 428.2216033935547);
    v1410.bezierCurveTo(p1058 * 358.5113830566406, p1058 * 408.2216033935547, p1058 * 358.5113830566406, p1058 * 408.2216033935547, p1058 * 344.0113830566406, p1058 * 388.2216033935547);
    v1410.bezierCurveTo(p1058 * 337.0113830566406, p1058 * 378.2216033935547, p1058 * 342.0113830566406, p1058 * 377.2216033935547, p1058 * 347.0113830566406, p1058 * 371.2216033935547);
    v1410.bezierCurveTo(p1058 * 359.0113830566406, p1058 * 359.2216033935547, p1058 * 361.0113830566406, p1058 * 358.2216033935547, p1058 * 364.0113830566406, p1058 * 361.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 323.0113830566406, p1058 * 393.2216033935547);
    v1410.bezierCurveTo(p1058 * 338.0113830566406, p1058 * 424.7216033935547, p1058 * 338.0113830566406, p1058 * 424.7216033935547, p1058 * 353.0113830566406, p1058 * 456.2216033935547);
    v1410.bezierCurveTo(p1058 * 355.0113830566406, p1058 * 467.2216033935547, p1058 * 354.0113830566406, p1058 * 469.2216033935547, p1058 * 336.0113830566406, p1058 * 475.2216033935547);
    v1410.bezierCurveTo(p1058 * 326.0113830566406, p1058 * 478.2216033935547, p1058 * 326.0113830566406, p1058 * 478.2216033935547, p1058 * 316.0113830566406, p1058 * 481.2216033935547);
    v1410.bezierCurveTo(p1058 * 304.0113830566406, p1058 * 484.2216033935547, p1058 * 304.0113830566406, p1058 * 477.2216033935547, p1058 * 301.0113830566406, p1058 * 454.2216033935547);
    v1410.bezierCurveTo(p1058 * 295.5113830566406, p1058 * 429.2216033935547, p1058 * 295.5113830566406, p1058 * 429.2216033935547, p1058 * 290.0113830566406, p1058 * 404.2216033935547);
    v1410.bezierCurveTo(p1058 * 287.0113830566406, p1058 * 396.2216033935547, p1058 * 297.0113830566406, p1058 * 394.2216033935547, p1058 * 303.0113830566406, p1058 * 392.2216033935547);
    v1410.bezierCurveTo(p1058 * 316.0113830566406, p1058 * 387.2216033935547, p1058 * 318.0113830566406, p1058 * 387.2216033935547, p1058 * 323.0113830566406, p1058 * 394.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 323.0113830566406, p1058 * 393.2216033935547);
    v1410.bezierCurveTo(p1058 * 338.0113830566406, p1058 * 424.7216033935547, p1058 * 338.0113830566406, p1058 * 424.7216033935547, p1058 * 353.0113830566406, p1058 * 456.2216033935547);
    v1410.bezierCurveTo(p1058 * 355.0113830566406, p1058 * 467.2216033935547, p1058 * 354.0113830566406, p1058 * 469.2216033935547, p1058 * 336.0113830566406, p1058 * 475.2216033935547);
    v1410.bezierCurveTo(p1058 * 326.0113830566406, p1058 * 478.2216033935547, p1058 * 326.0113830566406, p1058 * 478.2216033935547, p1058 * 316.0113830566406, p1058 * 481.2216033935547);
    v1410.bezierCurveTo(p1058 * 304.0113830566406, p1058 * 484.2216033935547, p1058 * 304.0113830566406, p1058 * 477.2216033935547, p1058 * 301.0113830566406, p1058 * 454.2216033935547);
    v1410.bezierCurveTo(p1058 * 295.5113830566406, p1058 * 429.2216033935547, p1058 * 295.5113830566406, p1058 * 429.2216033935547, p1058 * 290.0113830566406, p1058 * 404.2216033935547);
    v1410.bezierCurveTo(p1058 * 287.0113830566406, p1058 * 396.2216033935547, p1058 * 297.0113830566406, p1058 * 394.2216033935547, p1058 * 303.0113830566406, p1058 * 392.2216033935547);
    v1410.bezierCurveTo(p1058 * 316.0113830566406, p1058 * 387.2216033935547, p1058 * 318.0113830566406, p1058 * 387.2216033935547, p1058 * 323.0113830566406, p1058 * 394.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 270.0113830566406, p1058 * 413.2216033935547);
    v1410.bezierCurveTo(p1058 * 271.0113830566406, p1058 * 445.7216033935547, p1058 * 271.0113830566406, p1058 * 445.7216033935547, p1058 * 272.0113830566406, p1058 * 478.2216033935547);
    v1410.bezierCurveTo(p1058 * 273.0113830566406, p1058 * 490.2216033935547, p1058 * 267.0113830566406, p1058 * 493.2216033935547, p1058 * 249.01138305664062, p1058 * 490.2216033935547);
    v1410.bezierCurveTo(p1058 * 222.01138305664062, p1058 * 492.2216033935547, p1058 * 220.01138305664062, p1058 * 485.2216033935547, p1058 * 225.01138305664062, p1058 * 467.2216033935547);
    v1410.bezierCurveTo(p1058 * 230.51138305664062, p1058 * 440.2216033935547, p1058 * 230.51138305664062, p1058 * 440.2216033935547, p1058 * 236.01138305664062, p1058 * 413.2216033935547);
    v1410.bezierCurveTo(p1058 * 237.01138305664062, p1058 * 405.2216033935547, p1058 * 238.01138305664062, p1058 * 404.2216033935547, p1058 * 253.01138305664062, p1058 * 403.2216033935547);
    v1410.bezierCurveTo(p1058 * 269.0113830566406, p1058 * 405.2216033935547, p1058 * 270.0113830566406, p1058 * 407.2216033935547, p1058 * 269.0113830566406, p1058 * 412.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 270.0113830566406, p1058 * 413.2216033935547);
    v1410.bezierCurveTo(p1058 * 271.0113830566406, p1058 * 445.7216033935547, p1058 * 271.0113830566406, p1058 * 445.7216033935547, p1058 * 272.0113830566406, p1058 * 478.2216033935547);
    v1410.bezierCurveTo(p1058 * 273.0113830566406, p1058 * 490.2216033935547, p1058 * 267.0113830566406, p1058 * 493.2216033935547, p1058 * 249.01138305664062, p1058 * 490.2216033935547);
    v1410.bezierCurveTo(p1058 * 222.01138305664062, p1058 * 492.2216033935547, p1058 * 220.01138305664062, p1058 * 485.2216033935547, p1058 * 225.01138305664062, p1058 * 467.2216033935547);
    v1410.bezierCurveTo(p1058 * 230.51138305664062, p1058 * 440.2216033935547, p1058 * 230.51138305664062, p1058 * 440.2216033935547, p1058 * 236.01138305664062, p1058 * 413.2216033935547);
    v1410.bezierCurveTo(p1058 * 237.01138305664062, p1058 * 405.2216033935547, p1058 * 238.01138305664062, p1058 * 404.2216033935547, p1058 * 253.01138305664062, p1058 * 403.2216033935547);
    v1410.bezierCurveTo(p1058 * 269.0113830566406, p1058 * 405.2216033935547, p1058 * 270.0113830566406, p1058 * 407.2216033935547, p1058 * 269.0113830566406, p1058 * 412.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 207.01138305664062, p1058 * 406.2216033935547);
    v1410.bezierCurveTo(p1058 * 197.51138305664062, p1058 * 440.7216033935547, p1058 * 197.51138305664062, p1058 * 440.7216033935547, p1058 * 188.01138305664062, p1058 * 475.2216033935547);
    v1410.bezierCurveTo(p1058 * 184.01138305664062, p1058 * 485.2216033935547, p1058 * 179.01138305664062, p1058 * 491.2216033935547, p1058 * 152.01138305664062, p1058 * 477.2216033935547);
    v1410.bezierCurveTo(p1058 * 136.51138305664062, p1058 * 469.7216033935547, p1058 * 136.51138305664062, p1058 * 469.7216033935547, p1058 * 121.01138305664062, p1058 * 462.2216033935547);
    v1410.bezierCurveTo(p1058 * 109.01138305664062, p1058 * 453.2216033935547, p1058 * 117.01138305664062, p1058 * 447.2216033935547, p1058 * 133.01138305664062, p1058 * 427.2216033935547);
    v1410.bezierCurveTo(p1058 * 146.51138305664062, p1058 * 406.7216033935547, p1058 * 146.51138305664062, p1058 * 406.7216033935547, p1058 * 160.01138305664062, p1058 * 386.2216033935547);
    v1410.bezierCurveTo(p1058 * 163.01138305664062, p1058 * 377.2216033935547, p1058 * 168.01138305664062, p1058 * 378.2216033935547, p1058 * 187.01138305664062, p1058 * 387.2216033935547);
    v1410.bezierCurveTo(p1058 * 206.01138305664062, p1058 * 395.2216033935547, p1058 * 208.01138305664062, p1058 * 398.2216033935547, p1058 * 207.01138305664062, p1058 * 405.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 207.01138305664062, p1058 * 406.2216033935547);
    v1410.bezierCurveTo(p1058 * 197.51138305664062, p1058 * 440.7216033935547, p1058 * 197.51138305664062, p1058 * 440.7216033935547, p1058 * 188.01138305664062, p1058 * 475.2216033935547);
    v1410.bezierCurveTo(p1058 * 184.01138305664062, p1058 * 485.2216033935547, p1058 * 179.01138305664062, p1058 * 491.2216033935547, p1058 * 152.01138305664062, p1058 * 477.2216033935547);
    v1410.bezierCurveTo(p1058 * 136.51138305664062, p1058 * 469.7216033935547, p1058 * 136.51138305664062, p1058 * 469.7216033935547, p1058 * 121.01138305664062, p1058 * 462.2216033935547);
    v1410.bezierCurveTo(p1058 * 109.01138305664062, p1058 * 453.2216033935547, p1058 * 117.01138305664062, p1058 * 447.2216033935547, p1058 * 133.01138305664062, p1058 * 427.2216033935547);
    v1410.bezierCurveTo(p1058 * 146.51138305664062, p1058 * 406.7216033935547, p1058 * 146.51138305664062, p1058 * 406.7216033935547, p1058 * 160.01138305664062, p1058 * 386.2216033935547);
    v1410.bezierCurveTo(p1058 * 163.01138305664062, p1058 * 377.2216033935547, p1058 * 168.01138305664062, p1058 * 378.2216033935547, p1058 * 187.01138305664062, p1058 * 387.2216033935547);
    v1410.bezierCurveTo(p1058 * 206.01138305664062, p1058 * 395.2216033935547, p1058 * 208.01138305664062, p1058 * 398.2216033935547, p1058 * 207.01138305664062, p1058 * 405.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[3], p1060[2], p1058 * 12);
    v1410.globalAlpha = p1059 ? 0.5 : 1;
    v1410.translate(0, p1058 * 5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 130.01138305664062, p1058 * 375.2216033935547);
    v1410.bezierCurveTo(p1058 * 109.51138305664062, p1058 * 400.7216033935547, p1058 * 109.51138305664062, p1058 * 400.7216033935547, p1058 * 89.01138305664062, p1058 * 426.2216033935547);
    v1410.bezierCurveTo(p1058 * 82.01138305664062, p1058 * 435.2216033935547, p1058 * 77.01138305664062, p1058 * 435.2216033935547, p1058 * 62.011383056640625, p1058 * 417.2216033935547);
    v1410.bezierCurveTo(p1058 * 43.011383056640625, p1058 * 397.2216033935547, p1058 * 47.011383056640625, p1058 * 395.2216033935547, p1058 * 62.011383056640625, p1058 * 382.2216033935547);
    v1410.bezierCurveTo(p1058 * 84.01138305664062, p1058 * 366.7216033935547, p1058 * 84.01138305664062, p1058 * 366.7216033935547, p1058 * 106.01138305664062, p1058 * 351.2216033935547);
    v1410.bezierCurveTo(p1058 * 116.01138305664062, p1058 * 344.2216033935547, p1058 * 120.01138305664062, p1058 * 347.2216033935547, p1058 * 127.01138305664062, p1058 * 356.2216033935547);
    v1410.bezierCurveTo(p1058 * 137.01138305664062, p1058 * 366.2216033935547, p1058 * 137.01138305664062, p1058 * 366.2216033935547, p1058 * 131.01138305664062, p1058 * 376.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[0], p1060[0], p1058 * 12);
    v1410.globalAlpha = 1;
    v1410.translate(0, p1058 * -5);
    v1410.beginPath();
    v1410.lineCap = "round";
    v1410.lineJoin = "round";
    v1410.moveTo(p1058 * 130.01138305664062, p1058 * 375.2216033935547);
    v1410.bezierCurveTo(p1058 * 109.51138305664062, p1058 * 400.7216033935547, p1058 * 109.51138305664062, p1058 * 400.7216033935547, p1058 * 89.01138305664062, p1058 * 426.2216033935547);
    v1410.bezierCurveTo(p1058 * 82.01138305664062, p1058 * 435.2216033935547, p1058 * 77.01138305664062, p1058 * 435.2216033935547, p1058 * 62.011383056640625, p1058 * 417.2216033935547);
    v1410.bezierCurveTo(p1058 * 43.011383056640625, p1058 * 397.2216033935547, p1058 * 47.011383056640625, p1058 * 395.2216033935547, p1058 * 62.011383056640625, p1058 * 382.2216033935547);
    v1410.bezierCurveTo(p1058 * 84.01138305664062, p1058 * 366.7216033935547, p1058 * 84.01138305664062, p1058 * 366.7216033935547, p1058 * 106.01138305664062, p1058 * 351.2216033935547);
    v1410.bezierCurveTo(p1058 * 116.01138305664062, p1058 * 344.2216033935547, p1058 * 120.01138305664062, p1058 * 347.2216033935547, p1058 * 127.01138305664062, p1058 * 356.2216033935547);
    v1410.bezierCurveTo(p1058 * 137.01138305664062, p1058 * 366.2216033935547, p1058 * 137.01138305664062, p1058 * 366.2216033935547, p1058 * 131.01138305664062, p1058 * 376.2216033935547);
    v1410.closePath();
    f84(v1410, p1060[4], p1060[2], p1058 * 12);
    return v1409;
  }
  function f260(p1063, p1064, p1065) {
    var v1413 = document.createElement("canvas");
    var v1414 = v1413.getContext("2d");
    v1413.width = p1063 * 465;
    v1413.height = p1063 * 405;
    v1414.globalAlpha = 1;
    v1414.translate(p1063 * 6, p1063 * 0);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 39.000030517578125, p1063 * 162.03977966308594);
    v1414.bezierCurveTo(p1063 * 125.00003051757812, p1063 * 84.03977966308594, p1063 * 108.50003051757812, p1063 * 115.03977966308594, p1063 * 178.00003051757812, p1063 * 68.03977966308594);
    v1414.bezierCurveTo(p1063 * 299.0000305175781, p1063 * 146.53977966308594, p1063 * 299.0000305175781, p1063 * 146.53977966308594, p1063 * 420.0000305175781, p1063 * 225.03977966308594);
    v1414.bezierCurveTo(p1063 * 400.0000305175781, p1063 * 288.53977966308594, p1063 * 400.0000305175781, p1063 * 288.53977966308594, p1063 * 380.0000305175781, p1063 * 352.03977966308594);
    v1414.bezierCurveTo(p1063 * 216.50003051757812, p1063 * 345.53977966308594, p1063 * 216.50003051757812, p1063 * 345.53977966308594, p1063 * 53.000030517578125, p1063 * 339.03977966308594);
    v1414.closePath();
    f84(v1414, p1065[3]);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 23.000030517578125, p1063 * 306.94886779785156);
    v1414.bezierCurveTo(p1063 * 5.000030517578125, p1063 * 275.94886779785156, p1063 * 6.000030517578125, p1063 * 201.94886779785156, p1063 * 14.000030517578125, p1063 * 150.94886779785156);
    v1414.bezierCurveTo(p1063 * 40.000030517578125, p1063 * 34.94886779785156, p1063 * 157.00003051757812, p1063 * 14.948867797851562, p1063 * 199.00003051757812, p1063 * 11.948867797851562);
    v1414.bezierCurveTo(p1063 * 331.0000305175781, p1063 * 0.9488677978515625, p1063 * 409.0000305175781, p1063 * 61.94886779785156, p1063 * 428.0000305175781, p1063 * 133.94886779785156);
    v1414.bezierCurveTo(p1063 * 445.0000305175781, p1063 * 207.94886779785156, p1063 * 439.0000305175781, p1063 * 274.94886779785156, p1063 * 426.0000305175781, p1063 * 342.94886779785156);
    v1414.bezierCurveTo(p1063 * 355.0000305175781, p1063 * 207.94886779785156, p1063 * 345.0000305175781, p1063 * 208.94886779785156, p1063 * 333.0000305175781, p1063 * 202.94886779785156);
    v1414.bezierCurveTo(p1063 * 262.0000305175781, p1063 * 143.94886779785156, p1063 * 236.00003051757812, p1063 * 148.94886779785156, p1063 * 189.00003051757812, p1063 * 162.94886779785156);
    v1414.bezierCurveTo(p1063 * 82.00003051757812, p1063 * 190.94886779785156, p1063 * 78.00003051757812, p1063 * 235.94886779785156, p1063 * 62.000030517578125, p1063 * 279.94886779785156);
    v1414.closePath();
    f84(v1414, p1065[0], p1065[1], p1063 * 20);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 17.000030517578125, p1063 * 149.94886779785156);
    v1414.bezierCurveTo(p1063 * 76.00003051757812, p1063 * 67.94886779785156, p1063 * 177.00003051757812, p1063 * 40.94886779785156, p1063 * 232.00003051757812, p1063 * 45.94886779785156);
    v1414.bezierCurveTo(p1063 * 316.0000305175781, p1063 * 46.94886779785156, p1063 * 359.0000305175781, p1063 * 74.94886779785156, p1063 * 428.0000305175781, p1063 * 145.94886779785156);
    v1414.bezierCurveTo(p1063 * 414.0000305175781, p1063 * 73.94886779785156, p1063 * 386.0000305175781, p1063 * 68.94886779785156, p1063 * 359.0000305175781, p1063 * 43.94886779785156);
    v1414.bezierCurveTo(p1063 * 295.0000305175781, p1063 * 5.9488677978515625, p1063 * 239.00003051757812, p1063 * 10.948867797851562, p1063 * 207.00003051757812, p1063 * 10.948867797851562);
    v1414.bezierCurveTo(p1063 * 121.00003051757812, p1063 * 20.948867797851562, p1063 * 104.00003051757812, p1063 * 34.94886779785156, p1063 * 45.000030517578125, p1063 * 84.94886779785156);
    v1414.bezierCurveTo(p1063 * 14.000030517578125, p1063 * 128.94886779785156, p1063 * 18.000030517578125, p1063 * 142.94886779785156, p1063 * 16.000030517578125, p1063 * 151.94886779785156);
    v1414.closePath();
    f84(v1414, p1065[2]);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 23.000030517578125, p1063 * 306.94886779785156);
    v1414.bezierCurveTo(p1063 * 5.000030517578125, p1063 * 275.94886779785156, p1063 * 6.000030517578125, p1063 * 201.94886779785156, p1063 * 14.000030517578125, p1063 * 150.94886779785156);
    v1414.bezierCurveTo(p1063 * 40.000030517578125, p1063 * 34.94886779785156, p1063 * 157.00003051757812, p1063 * 14.948867797851562, p1063 * 199.00003051757812, p1063 * 11.948867797851562);
    v1414.bezierCurveTo(p1063 * 331.0000305175781, p1063 * 0.9488677978515625, p1063 * 409.0000305175781, p1063 * 61.94886779785156, p1063 * 428.0000305175781, p1063 * 133.94886779785156);
    v1414.bezierCurveTo(p1063 * 445.0000305175781, p1063 * 207.94886779785156, p1063 * 439.0000305175781, p1063 * 274.94886779785156, p1063 * 426.0000305175781, p1063 * 342.94886779785156);
    v1414.bezierCurveTo(p1063 * 355.0000305175781, p1063 * 207.94886779785156, p1063 * 345.0000305175781, p1063 * 208.94886779785156, p1063 * 333.0000305175781, p1063 * 202.94886779785156);
    v1414.bezierCurveTo(p1063 * 262.0000305175781, p1063 * 143.94886779785156, p1063 * 236.00003051757812, p1063 * 148.94886779785156, p1063 * 189.00003051757812, p1063 * 162.94886779785156);
    v1414.bezierCurveTo(p1063 * 82.00003051757812, p1063 * 190.94886779785156, p1063 * 78.00003051757812, p1063 * 235.94886779785156, p1063 * 62.000030517578125, p1063 * 279.94886779785156);
    v1414.closePath();
    f84(v1414, undefined, p1065[1], p1063 * 16);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 60.000030517578125, p1063 * 288.03977966308594);
    v1414.bezierCurveTo(p1063 * 183.00003051757812, p1063 * 320.03977966308594, p1063 * 342.0000305175781, p1063 * 306.03977966308594, p1063 * 399.0000305175781, p1063 * 286.03977966308594);
    v1414.bezierCurveTo(p1063 * 420.0000305175781, p1063 * 345.03977966308594, p1063 * 410.0000305175781, p1063 * 335.03977966308594, p1063 * 415.0000305175781, p1063 * 362.03977966308594);
    v1414.bezierCurveTo(p1063 * 351.0000305175781, p1063 * 384.03977966308594, p1063 * 299.0000305175781, p1063 * 389.03977966308594, p1063 * 215.00003051757812, p1063 * 391.03977966308594);
    v1414.bezierCurveTo(p1063 * 128.00003051757812, p1063 * 388.03977966308594, p1063 * 69.00003051757812, p1063 * 373.03977966308594, p1063 * 39.000030517578125, p1063 * 359.03977966308594);
    v1414.closePath();
    f84(v1414, p1065[0], p1065[1], p1063 * 13);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 47.000030517578125, p1063 * 327.03977966308594);
    v1414.bezierCurveTo(p1063 * 203.00003051757812, p1063 * 377.03977966308594, p1063 * 331.0000305175781, p1063 * 349.03977966308594, p1063 * 410.0000305175781, p1063 * 330.03977966308594);
    v1414.closePath();
    f84(v1414, p1065[0], p1065[1], p1063 * 20);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 9.000030517578125, p1063 * 339.1306915283203);
    v1414.bezierCurveTo(p1063 * 2.000030517578125, p1063 * 280.1306915283203, p1063 * 30.000030517578125, p1063 * 219.1306915283203, p1063 * 85.00003051757812, p1063 * 167.1306915283203);
    v1414.bezierCurveTo(p1063 * 174.00003051757812, p1063 * 82.13069152832031, p1063 * 241.00003051757812, p1063 * 101.13069152832031, p1063 * 284.0000305175781, p1063 * 115.13069152832031);
    v1414.bezierCurveTo(p1063 * 333.0000305175781, p1063 * 134.1306915283203, p1063 * 376.0000305175781, p1063 * 177.1306915283203, p1063 * 410.0000305175781, p1063 * 247.1306915283203);
    v1414.bezierCurveTo(p1063 * 439.0000305175781, p1063 * 300.1306915283203, p1063 * 442.0000305175781, p1063 * 346.1306915283203, p1063 * 430.0000305175781, p1063 * 363.1306915283203);
    v1414.bezierCurveTo(p1063 * 418.0000305175781, p1063 * 366.1306915283203, p1063 * 395.0000305175781, p1063 * 295.1306915283203, p1063 * 355.0000305175781, p1063 * 223.1306915283203);
    v1414.bezierCurveTo(p1063 * 299.0000305175781, p1063 * 156.1306915283203, p1063 * 262.0000305175781, p1063 * 155.1306915283203, p1063 * 215.00003051757812, p1063 * 159.1306915283203);
    v1414.bezierCurveTo(p1063 * 133.00003051757812, p1063 * 171.1306915283203, p1063 * 120.00003051757812, p1063 * 193.1306915283203, p1063 * 96.00003051757812, p1063 * 221.1306915283203);
    v1414.bezierCurveTo(p1063 * 49.000030517578125, p1063 * 262.1306915283203, p1063 * 47.000030517578125, p1063 * 306.1306915283203, p1063 * 38.000030517578125, p1063 * 336.1306915283203);
    v1414.bezierCurveTo(p1063 * 30.000030517578125, p1063 * 349.1306915283203, p1063 * 30.000030517578125, p1063 * 349.1306915283203, p1063 * 22.000030517578125, p1063 * 362.1306915283203);
    v1414.closePath();
    f84(v1414, p1065[2], p1065[1], p1063 * 20);
    v1414.beginPath();
    v1414.lineCap = "round";
    v1414.lineJoin = "round";
    v1414.moveTo(p1063 * 228.00003051757812, p1063 * 128.03977966308594);
    v1414.bezierCurveTo(p1063 * 315.0000305175781, p1063 * 131.03977966308594, p1063 * 349.0000305175781, p1063 * 178.03977966308594, p1063 * 386.0000305175781, p1063 * 234.03977966308594);
    v1414.bezierCurveTo(p1063 * 444.0000305175781, p1063 * 329.03977966308594, p1063 * 446.0000305175781, p1063 * 354.03977966308594, p1063 * 427.0000305175781, p1063 * 373.03977966308594);
    v1414.bezierCurveTo(p1063 * 389.0000305175781, p1063 * 389.03977966308594, p1063 * 399.0000305175781, p1063 * 329.03977966308594, p1063 * 361.0000305175781, p1063 * 277.03977966308594);
    v1414.bezierCurveTo(p1063 * 306.0000305175781, p1063 * 191.03977966308594, p1063 * 266.0000305175781, p1063 * 183.03977966308594, p1063 * 220.00003051757812, p1063 * 181.03977966308594);
    v1414.bezierCurveTo(p1063 * 138.00003051757812, p1063 * 184.03977966308594, p1063 * 123.00003051757812, p1063 * 212.03977966308594, p1063 * 89.00003051757812, p1063 * 271.03977966308594);
    v1414.bezierCurveTo(p1063 * 52.000030517578125, p1063 * 349.03977966308594, p1063 * 68.00003051757812, p1063 * 364.03977966308594, p1063 * 33.000030517578125, p1063 * 369.03977966308594);
    v1414.bezierCurveTo(p1063 * 6.000030517578125, p1063 * 366.03977966308594, p1063 * 5.000030517578125, p1063 * 341.03977966308594, p1063 * 26.000030517578125, p1063 * 288.03977966308594);
    v1414.bezierCurveTo(p1063 * 60.000030517578125, p1063 * 207.03977966308594, p1063 * 100.00003051757812, p1063 * 180.03977966308594, p1063 * 113.00003051757812, p1063 * 170.03977966308594);
    v1414.bezierCurveTo(p1063 * 159.00003051757812, p1063 * 132.03977966308594, p1063 * 196.00003051757812, p1063 * 133.03977966308594, p1063 * 226.00003051757812, p1063 * 129.03977966308594);
    v1414.closePath();
    f84(v1414, p1065[0], p1065[1], p1063 * 20);
    return v1413;
  }
  function f261(p1066) {
    var v1415 = document.createElement("canvas");
    var v1416 = v1415.getContext("2d");
    var v1417 = p1066 * 600;
    var v1418 = p1066 * 22;
    var v1419 = p1066 * 4;
    var v1420 = p1066 * 4;
    v1415.width = v1417;
    v1415.height = v1418;
    f83(v1416, p1066 * 5, p1066 * 5, v1417 - p1066 * 10, v1418 - p1066 * 10, v1419);
    f84(v1416, null, "#BBE8EF", v1420);
    return v1415;
  }
  function f262(p1067, p1068, p1069) {
    var v1421 = document.createElement("canvas");
    var v1422 = v1421.getContext("2d");
    v1421.width = p1067 * 144;
    v1421.height = p1067 * 280;
    v1422.globalAlpha = p1068 ? 0.5 : 1;
    v1422.translate(p1067 * 5, p1067 * 5);
    v1422.beginPath();
    v1422.lineCap = "round";
    v1422.lineJoin = "round";
    v1422.moveTo(p1067 * 62, p1067 * 103.79999542236328);
    v1422.bezierCurveTo(p1067 * 62.5, p1067 * 148.79999542236328, p1067 * 62.5, p1067 * 148.79999542236328, p1067 * 63, p1067 * 193.79999542236328);
    v1422.bezierCurveTo(p1067 * 63, p1067 * 219.79999542236328, p1067 * 47, p1067 * 217.79999542236328, p1067 * 51, p1067 * 230.79999542236328);
    v1422.bezierCurveTo(p1067 * 62, p1067 * 255.79999542236328, p1067 * 74, p1067 * 260.7999954223633, p1067 * 72, p1067 * 248.79999542236328);
    v1422.bezierCurveTo(p1067 * 65, p1067 * 226.79999542236328, p1067 * 71, p1067 * 229.79999542236328, p1067 * 76, p1067 * 225.79999542236328);
    v1422.bezierCurveTo(p1067 * 90, p1067 * 224.79999542236328, p1067 * 89, p1067 * 232.79999542236328, p1067 * 90, p1067 * 243.79999542236328);
    v1422.bezierCurveTo(p1067 * 95, p1067 * 253.79999542236328, p1067 * 99, p1067 * 249.79999542236328, p1067 * 100, p1067 * 229.79999542236328);
    v1422.bezierCurveTo(p1067 * 102, p1067 * 213.79999542236328, p1067 * 98, p1067 * 214.79999542236328, p1067 * 90, p1067 * 205.79999542236328);
    v1422.bezierCurveTo(p1067 * 82, p1067 * 201.79999542236328, p1067 * 82, p1067 * 185.79999542236328, p1067 * 82, p1067 * 114.79999542236328);
    v1422.bezierCurveTo(p1067 * 80, p1067 * 73, p1067 * 82, p1067 * 68, p1067 * 93, p1067 * 53);
    v1422.bezierCurveTo(p1067 * 98, p1067 * 37, p1067 * 65, p1067 * 14, p1067 * 74, p1067 * 33);
    v1422.bezierCurveTo(p1067 * 82, p1067 * 56, p1067 * 77, p1067 * 52, p1067 * 69, p1067 * 54);
    v1422.bezierCurveTo(p1067 * 55, p1067 * 57, p1067 * 57, p1067 * 53, p1067 * 54, p1067 * 39);
    v1422.bezierCurveTo(p1067 * 46, p1067 * 20, p1067 * 37, p1067 * 61, p1067 * 50, p1067 * 68);
    v1422.bezierCurveTo(p1067 * 65, p1067 * 81, p1067 * 60, p1067 * 89, p1067 * 62, p1067 * 102);
    v1422.closePath();
    f84(v1422, p1069[0]);
    v1422.globalAlpha = 1;
    v1422.translate(p1067 * -5, p1067 * -5);
    v1422.beginPath();
    v1422.lineCap = "round";
    v1422.lineJoin = "round";
    v1422.moveTo(p1067 * 62, p1067 * 103.79999542236328);
    v1422.bezierCurveTo(p1067 * 62.5, p1067 * 148.79999542236328, p1067 * 62.5, p1067 * 148.79999542236328, p1067 * 63, p1067 * 193.79999542236328);
    v1422.bezierCurveTo(p1067 * 63, p1067 * 219.79999542236328, p1067 * 47, p1067 * 217.79999542236328, p1067 * 51, p1067 * 230.79999542236328);
    v1422.bezierCurveTo(p1067 * 62, p1067 * 255.79999542236328, p1067 * 74, p1067 * 260.7999954223633, p1067 * 72, p1067 * 248.79999542236328);
    v1422.bezierCurveTo(p1067 * 65, p1067 * 226.79999542236328, p1067 * 71, p1067 * 229.79999542236328, p1067 * 76, p1067 * 225.79999542236328);
    v1422.bezierCurveTo(p1067 * 90, p1067 * 224.79999542236328, p1067 * 89, p1067 * 232.79999542236328, p1067 * 90, p1067 * 243.79999542236328);
    v1422.bezierCurveTo(p1067 * 95, p1067 * 253.79999542236328, p1067 * 99, p1067 * 249.79999542236328, p1067 * 100, p1067 * 229.79999542236328);
    v1422.bezierCurveTo(p1067 * 102, p1067 * 213.79999542236328, p1067 * 98, p1067 * 214.79999542236328, p1067 * 90, p1067 * 205.79999542236328);
    v1422.bezierCurveTo(p1067 * 82, p1067 * 201.79999542236328, p1067 * 82, p1067 * 185.79999542236328, p1067 * 82, p1067 * 114.79999542236328);
    v1422.bezierCurveTo(p1067 * 80, p1067 * 73, p1067 * 82, p1067 * 68, p1067 * 93, p1067 * 53);
    v1422.bezierCurveTo(p1067 * 98, p1067 * 37, p1067 * 65, p1067 * 14, p1067 * 74, p1067 * 33);
    v1422.bezierCurveTo(p1067 * 82, p1067 * 56, p1067 * 77, p1067 * 52, p1067 * 69, p1067 * 54);
    v1422.bezierCurveTo(p1067 * 55, p1067 * 57, p1067 * 57, p1067 * 53, p1067 * 54, p1067 * 39);
    v1422.bezierCurveTo(p1067 * 46, p1067 * 20, p1067 * 37, p1067 * 61, p1067 * 50, p1067 * 68);
    v1422.bezierCurveTo(p1067 * 65, p1067 * 81, p1067 * 60, p1067 * 89, p1067 * 62, p1067 * 102);
    v1422.closePath();
    f84(v1422, p1069[1], p1069[2], p1067 * 6);
    return v1421;
  }
  function f263(p1070, p1071, p1072) {
    var v1423 = document.createElement("canvas");
    var v1424 = v1423.getContext("2d");
    v1423.width = p1070 * 573;
    v1423.height = p1070 * 350;
    if (p1072 == 1) {
      v1424.beginPath();
      v1424.lineCap = "round";
      v1424.lineJoin = "round";
      v1424.moveTo(p1070 * 336, p1070 * 72);
      v1424.bezierCurveTo(p1070 * 366, p1070 * 15, p1070 * 426, p1070 * 36, p1070 * 497, p1070 * 83);
      v1424.bezierCurveTo(p1070 * 522, p1070 * 85, p1070 * 522, p1070 * 85, p1070 * 547, p1070 * 87);
      v1424.bezierCurveTo(p1070 * 476.5, p1070 * 205, p1070 * 476.5, p1070 * 205, p1070 * 406, p1070 * 323);
      v1424.bezierCurveTo(p1070 * 297.5, p1070 * 319, p1070 * 297.5, p1070 * 319, p1070 * 189, p1070 * 315);
      v1424.bezierCurveTo(p1070 * 105.5, p1070 * 279, p1070 * 105.5, p1070 * 279, p1070 * 22, p1070 * 243);
      v1424.bezierCurveTo(p1070 * 92, p1070 * 140, p1070 * 92, p1070 * 140, p1070 * 162, p1070 * 37);
      v1424.bezierCurveTo(p1070 * 173, p1070 * 39, p1070 * 173, p1070 * 39, p1070 * 184, p1070 * 41);
      v1424.bezierCurveTo(p1070 * 185, p1070 * 38.5, p1070 * 185, p1070 * 38.5, p1070 * 186, p1070 * 36);
      v1424.bezierCurveTo(p1070 * 323, p1070 * 13, p1070 * 322, p1070 * 25, p1070 * 337, p1070 * 74);
      v1424.closePath();
      f84(v1424, p1071[4], p1071[4], p1070 * 35);
    }
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 168, p1070 * 42);
    v1424.bezierCurveTo(p1070 * 255, p1070 * 60, p1070 * 255, p1070 * 60, p1070 * 342, p1070 * 78);
    v1424.bezierCurveTo(p1070 * 443, p1070 * 81.5, p1070 * 443, p1070 * 81.5, p1070 * 544, p1070 * 85);
    v1424.bezierCurveTo(p1070 * 475, p1070 * 204.5, p1070 * 475, p1070 * 204.5, p1070 * 406, p1070 * 324);
    v1424.bezierCurveTo(p1070 * 297.5, p1070 * 320, p1070 * 297.5, p1070 * 320, p1070 * 189, p1070 * 316);
    v1424.bezierCurveTo(p1070 * 105.5, p1070 * 279, p1070 * 105.5, p1070 * 279, p1070 * 22, p1070 * 242);
    v1424.closePath();
    f84(v1424, p1071[0], p1071[1], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 188, p1070 * 41);
    v1424.bezierCurveTo(p1070 * 308, p1070 * 15, p1070 * 325, p1070 * 18, p1070 * 337, p1070 * 66);
    v1424.bezierCurveTo(p1070 * 191, p1070 * 305, p1070 * 196, p1070 * 286, p1070 * 184, p1070 * 307);
    v1424.bezierCurveTo(p1070 * 175, p1070 * 250, p1070 * 90, p1070 * 254, p1070 * 52, p1070 * 241);
    v1424.closePath();
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 336, p1070 * 71);
    v1424.bezierCurveTo(p1070 * 375, p1070 * 8, p1070 * 429, p1070 * 50, p1070 * 518, p1070 * 92);
    v1424.bezierCurveTo(p1070 * 455, p1070 * 199.5, p1070 * 455, p1070 * 199.5, p1070 * 392, p1070 * 307);
    v1424.bezierCurveTo(p1070 * 227, p1070 * 301, p1070 * 261, p1070 * 255, p1070 * 188, p1070 * 308);
    v1424.closePath();
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 357, p1070 * 76);
    v1424.bezierCurveTo(p1070 * 390, p1070 * 67, p1070 * 414, p1070 * 86, p1070 * 435, p1070 * 104);
    v1424.bezierCurveTo(p1070 * 417, p1070 * 135, p1070 * 417, p1070 * 135, p1070 * 399, p1070 * 166);
    v1424.bezierCurveTo(p1070 * 352, p1070 * 140, p1070 * 345, p1070 * 139, p1070 * 319, p1070 * 142);
    v1424.closePath();
    f84(v1424, p1071[3], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 309, p1070 * 168);
    v1424.bezierCurveTo(p1070 * 345, p1070 * 163, p1070 * 372, p1070 * 180, p1070 * 412, p1070 * 203);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 263, p1070 * 54);
    v1424.bezierCurveTo(p1070 * 305, p1070 * 44, p1070 * 307, p1070 * 51, p1070 * 311, p1070 * 64);
    v1424.bezierCurveTo(p1070 * 270.5, p1070 * 129.5, p1070 * 270.5, p1070 * 129.5, p1070 * 230, p1070 * 195);
    v1424.bezierCurveTo(p1070 * 221, p1070 * 175, p1070 * 203, p1070 * 171, p1070 * 186, p1070 * 172);
    v1424.closePath();
    f84(v1424, p1071[3], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 292, p1070 * 198);
    v1424.bezierCurveTo(p1070 * 328, p1070 * 191, p1070 * 364, p1070 * 211, p1070 * 401, p1070 * 237);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 245, p1070 * 68);
    v1424.bezierCurveTo(p1070 * 210, p1070 * 72, p1070 * 210, p1070 * 72, p1070 * 189, p1070 * 69);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 222, p1070 * 96);
    v1424.bezierCurveTo(p1070 * 196, p1070 * 97, p1070 * 193, p1070 * 97, p1070 * 177, p1070 * 92);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 207, p1070 * 124);
    v1424.bezierCurveTo(p1070 * 179, p1070 * 123, p1070 * 177, p1070 * 124, p1070 * 161, p1070 * 119);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 115, p1070 * 183);
    v1424.bezierCurveTo(p1070 * 184, p1070 * 185, p1070 * 203, p1070 * 198, p1070 * 219, p1070 * 221);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 98, p1070 * 213);
    v1424.bezierCurveTo(p1070 * 161, p1070 * 214, p1070 * 193, p1070 * 227, p1070 * 201, p1070 * 249);
    f84(v1424, p1071[2], p1071[3], p1070 * 12);
    v1424.beginPath();
    v1424.lineCap = "round";
    v1424.lineJoin = "round";
    v1424.moveTo(p1070 * 399, p1070 * 257);
    v1424.bezierCurveTo(p1070 * 287, p1070 * 215, p1070 * 280, p1070 * 215, p1070 * 263, p1070 * 222);
    v1424.bezierCurveTo(p1070 * 253, p1070 * 238, p1070 * 247, p1070 * 245, p1070 * 243, p1070 * 254);
    v1424.bezierCurveTo(p1070 * 267, p1070 * 236, p1070 * 292, p1070 * 263, p1070 * 377, p1070 * 284);
    f84(v1424, p1071[3], p1071[3], p1070 * 12);
    return v1423;
  }
  function f264(p1073, p1074, p1075, p1076) {
    var v1425 = document.createElement("canvas");
    var v1426 = v1425.getContext("2d");
    v1425.width = p1073 * 198;
    v1425.height = p1073 * 147;
    v1426.globalAlpha = p1074 ? 0.5 : 1;
    v1426.translate(0, p1073 * 6);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 44, p1073 * 76);
    v1426.bezierCurveTo(p1073 * 50, p1073 * 82, p1073 * 50, p1073 * 82, p1073 * 56, p1073 * 88);
    v1426.bezierCurveTo(p1073 * 59, p1073 * 82, p1073 * 59, p1073 * 82, p1073 * 62, p1073 * 76);
    v1426.bezierCurveTo(p1073 * 59, p1073 * 71, p1073 * 59, p1073 * 71, p1073 * 56, p1073 * 66);
    v1426.bezierCurveTo(p1073 * 59, p1073 * 69, p1073 * 59, p1073 * 69, p1073 * 62, p1073 * 72);
    v1426.bezierCurveTo(p1073 * 80, p1073 * 48, p1073 * 102, p1073 * 50, p1073 * 120, p1073 * 62);
    v1426.bezierCurveTo(p1073 * 127, p1073 * 58, p1073 * 127, p1073 * 58, p1073 * 134, p1073 * 54);
    v1426.bezierCurveTo(p1073 * 129, p1073 * 60, p1073 * 129, p1073 * 60, p1073 * 124, p1073 * 66);
    v1426.bezierCurveTo(p1073 * 129, p1073 * 73, p1073 * 129, p1073 * 73, p1073 * 134, p1073 * 80);
    v1426.bezierCurveTo(p1073 * 140, p1073 * 74, p1073 * 140, p1073 * 74, p1073 * 146, p1073 * 68);
    v1426.bezierCurveTo(p1073 * 142, p1073 * 76, p1073 * 142, p1073 * 76, p1073 * 138, p1073 * 84);
    v1426.bezierCurveTo(p1073 * 144, p1073 * 90, p1073 * 142, p1073 * 90, p1073 * 144, p1073 * 90);
    v1426.bezierCurveTo(p1073 * 136, p1073 * 97, p1073 * 136, p1073 * 97, p1073 * 128, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 154, p1073 * 110, p1073 * 164, p1073 * 90, p1073 * 160, p1073 * 80);
    v1426.bezierCurveTo(p1073 * 138, p1073 * 22, p1073 * 148, p1073 * 51, p1073 * 136, p1073 * 22);
    v1426.bezierCurveTo(p1073 * 97, p1073 * 24, p1073 * 97, p1073 * 24, p1073 * 58, p1073 * 26);
    v1426.bezierCurveTo(p1073 * 47, p1073 * 54, p1073 * 36, p1073 * 80, p1073 * 36, p1073 * 82);
    v1426.bezierCurveTo(p1073 * 40, p1073 * 108, p1073 * 54, p1073 * 104, p1073 * 62, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 46, p1073 * 92, p1073 * 54, p1073 * 97, p1073 * 46, p1073 * 90);
    v1426.closePath();
    f84(v1426, p1075[0]);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 36, p1073 * 80);
    v1426.bezierCurveTo(p1073 * 30, p1073 * 84, p1073 * 28, p1073 * 92, p1073 * 34, p1073 * 100);
    v1426.bezierCurveTo(p1073 * 41.5, p1073 * 102, p1073 * 41.5, p1073 * 102, p1073 * 49, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 43, p1073 * 105.5, p1073 * 43, p1073 * 105.5, p1073 * 37, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 46, p1073 * 111, p1073 * 60, p1073 * 114, p1073 * 76, p1073 * 114);
    v1426.bezierCurveTo(p1073 * 78, p1073 * 110.5, p1073 * 78, p1073 * 110.5, p1073 * 80, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 81, p1073 * 110.5, p1073 * 81, p1073 * 110.5, p1073 * 82, p1073 * 114);
    v1426.bezierCurveTo(p1073 * 94.5, p1073 * 113.5, p1073 * 94.5, p1073 * 113.5, p1073 * 107, p1073 * 113);
    v1426.bezierCurveTo(p1073 * 108.5, p1073 * 110, p1073 * 108.5, p1073 * 110, p1073 * 110, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 111.5, p1073 * 110.5, p1073 * 111.5, p1073 * 110.5, p1073 * 113, p1073 * 114);
    v1426.bezierCurveTo(p1073 * 131, p1073 * 112.5, p1073 * 131, p1073 * 112.5, p1073 * 149, p1073 * 111);
    v1426.bezierCurveTo(p1073 * 148.5, p1073 * 107.5, p1073 * 148.5, p1073 * 107.5, p1073 * 148, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 150.5, p1073 * 107, p1073 * 150.5, p1073 * 107, p1073 * 153, p1073 * 110);
    v1426.bezierCurveTo(p1073 * 155.5, p1073 * 108.5, p1073 * 155.5, p1073 * 108.5, p1073 * 158, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 156.5, p1073 * 104, p1073 * 156.5, p1073 * 104, p1073 * 155, p1073 * 101);
    v1426.bezierCurveTo(p1073 * 158.5, p1073 * 102.5, p1073 * 158.5, p1073 * 102.5, p1073 * 162, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 168, p1073 * 100, p1073 * 170, p1073 * 92, p1073 * 169, p1073 * 85);
    v1426.bezierCurveTo(p1073 * 166, p1073 * 86, p1073 * 166, p1073 * 86, p1073 * 163, p1073 * 87);
    v1426.bezierCurveTo(p1073 * 165.5, p1073 * 83, p1073 * 165.5, p1073 * 83, p1073 * 168, p1073 * 79);
    v1426.bezierCurveTo(p1073 * 165.5, p1073 * 76.5, p1073 * 165.5, p1073 * 76.5, p1073 * 163, p1073 * 74);
    v1426.bezierCurveTo(p1073 * 155, p1073 * 82.5, p1073 * 155, p1073 * 82.5, p1073 * 147, p1073 * 91);
    v1426.bezierCurveTo(p1073 * 139, p1073 * 95.5, p1073 * 139, p1073 * 95.5, p1073 * 131, p1073 * 100);
    v1426.bezierCurveTo(p1073 * 97.5, p1073 * 100.5, p1073 * 97.5, p1073 * 100.5, p1073 * 64, p1073 * 101);
    v1426.bezierCurveTo(p1073 * 49, p1073 * 102, p1073 * 43, p1073 * 90, p1073 * 36, p1073 * 80);
    v1426.closePath();
    f84(v1426, p1075[0]);
    v1426.globalAlpha = 1;
    v1426.translate(0, p1073 * -6);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 36, p1073 * 80);
    v1426.bezierCurveTo(p1073 * 30, p1073 * 84, p1073 * 28, p1073 * 92, p1073 * 34, p1073 * 100);
    v1426.bezierCurveTo(p1073 * 41.5, p1073 * 102, p1073 * 41.5, p1073 * 102, p1073 * 49, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 43, p1073 * 105.5, p1073 * 43, p1073 * 105.5, p1073 * 37, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 46, p1073 * 111, p1073 * 60, p1073 * 114, p1073 * 76, p1073 * 114);
    v1426.bezierCurveTo(p1073 * 78, p1073 * 110.5, p1073 * 78, p1073 * 110.5, p1073 * 80, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 81, p1073 * 110.5, p1073 * 81, p1073 * 110.5, p1073 * 82, p1073 * 114);
    v1426.bezierCurveTo(p1073 * 94.5, p1073 * 113.5, p1073 * 94.5, p1073 * 113.5, p1073 * 107, p1073 * 113);
    v1426.bezierCurveTo(p1073 * 108.5, p1073 * 110, p1073 * 108.5, p1073 * 110, p1073 * 110, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 111.5, p1073 * 110.5, p1073 * 111.5, p1073 * 110.5, p1073 * 113, p1073 * 114);
    v1426.bezierCurveTo(p1073 * 131, p1073 * 112.5, p1073 * 131, p1073 * 112.5, p1073 * 149, p1073 * 111);
    v1426.bezierCurveTo(p1073 * 148.5, p1073 * 107.5, p1073 * 148.5, p1073 * 107.5, p1073 * 148, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 150.5, p1073 * 107, p1073 * 150.5, p1073 * 107, p1073 * 153, p1073 * 110);
    v1426.bezierCurveTo(p1073 * 155.5, p1073 * 108.5, p1073 * 155.5, p1073 * 108.5, p1073 * 158, p1073 * 107);
    v1426.bezierCurveTo(p1073 * 156.5, p1073 * 104, p1073 * 156.5, p1073 * 104, p1073 * 155, p1073 * 101);
    v1426.bezierCurveTo(p1073 * 158.5, p1073 * 102.5, p1073 * 158.5, p1073 * 102.5, p1073 * 162, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 168, p1073 * 100, p1073 * 170, p1073 * 92, p1073 * 169, p1073 * 85);
    v1426.bezierCurveTo(p1073 * 166, p1073 * 86, p1073 * 166, p1073 * 86, p1073 * 163, p1073 * 87);
    v1426.bezierCurveTo(p1073 * 165.5, p1073 * 83, p1073 * 165.5, p1073 * 83, p1073 * 168, p1073 * 79);
    v1426.bezierCurveTo(p1073 * 165.5, p1073 * 76.5, p1073 * 165.5, p1073 * 76.5, p1073 * 163, p1073 * 74);
    v1426.bezierCurveTo(p1073 * 155, p1073 * 82.5, p1073 * 155, p1073 * 82.5, p1073 * 147, p1073 * 91);
    v1426.bezierCurveTo(p1073 * 139, p1073 * 95.5, p1073 * 139, p1073 * 95.5, p1073 * 131, p1073 * 100);
    v1426.bezierCurveTo(p1073 * 97.5, p1073 * 100.5, p1073 * 97.5, p1073 * 100.5, p1073 * 64, p1073 * 101);
    v1426.bezierCurveTo(p1073 * 49, p1073 * 102, p1073 * 43, p1073 * 90, p1073 * 36, p1073 * 80);
    v1426.closePath();
    f84(v1426, p1075[1], p1075[2], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 49, p1073 * 98);
    v1426.bezierCurveTo(p1073 * 96.5, p1073 * 98, p1073 * 96.5, p1073 * 98, p1073 * 144, p1073 * 98);
    v1426.bezierCurveTo(p1073 * 136.5, p1073 * 102, p1073 * 136.5, p1073 * 102, p1073 * 129, p1073 * 106);
    v1426.bezierCurveTo(p1073 * 103, p1073 * 105.5, p1073 * 103, p1073 * 105.5, p1073 * 77, p1073 * 105);
    v1426.bezierCurveTo(p1073 * 65, p1073 * 105, p1073 * 65, p1073 * 105, p1073 * 53, p1073 * 105);
    v1426.closePath();
    f84(v1426, p1075[1]);
    v1426.globalAlpha = 0.5;
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 54, p1073 * 98);
    v1426.bezierCurveTo(p1073 * 97, p1073 * 98, p1073 * 97, p1073 * 98, p1073 * 140, p1073 * 98);
    v1426.bezierCurveTo(p1073 * 134, p1073 * 101, p1073 * 134, p1073 * 101, p1073 * 128, p1073 * 104);
    v1426.bezierCurveTo(p1073 * 92, p1073 * 104, p1073 * 92, p1073 * 104, p1073 * 56, p1073 * 104);
    v1426.closePath();
    f84(v1426, p1075[0]);
    v1426.globalAlpha = 1;
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 118, p1073 * 47);
    v1426.bezierCurveTo(p1073 * 124.5, p1073 * 43.5, p1073 * 124.5, p1073 * 43.5, p1073 * 131, p1073 * 40);
    v1426.bezierCurveTo(p1073 * 128, p1073 * 46, p1073 * 128, p1073 * 46, p1073 * 125, p1073 * 52);
    v1426.bezierCurveTo(p1073 * 131, p1073 * 57, p1073 * 135, p1073 * 64, p1073 * 139, p1073 * 73);
    v1426.bezierCurveTo(p1073 * 142.5, p1073 * 69.5, p1073 * 142.5, p1073 * 69.5, p1073 * 146, p1073 * 66);
    v1426.bezierCurveTo(p1073 * 143.5, p1073 * 72.5, p1073 * 143.5, p1073 * 72.5, p1073 * 141, p1073 * 79);
    v1426.bezierCurveTo(p1073 * 142, p1073 * 91, p1073 * 141, p1073 * 94, p1073 * 132, p1073 * 98);
    v1426.bezierCurveTo(p1073 * 117, p1073 * 102, p1073 * 126, p1073 * 108, p1073 * 142, p1073 * 102);
    v1426.bezierCurveTo(p1073 * 159, p1073 * 98, p1073 * 164, p1073 * 80, p1073 * 162, p1073 * 47);
    v1426.bezierCurveTo(p1073 * 160, p1073 * 19, p1073 * 150, p1073 * 6, p1073 * 117, p1073 * 4);
    v1426.bezierCurveTo(p1073 * 44, p1073 * 0, p1073 * 35, p1073 * 20, p1073 * 33, p1073 * 37);
    v1426.bezierCurveTo(p1073 * 29, p1073 * 69, p1073 * 33, p1073 * 88, p1073 * 44, p1073 * 96);
    v1426.bezierCurveTo(p1073 * 64, p1073 * 107, p1073 * 70, p1073 * 102, p1073 * 54, p1073 * 93);
    v1426.bezierCurveTo(p1073 * 49, p1073 * 88, p1073 * 50, p1073 * 82, p1073 * 53, p1073 * 77);
    v1426.bezierCurveTo(p1073 * 51.5, p1073 * 71, p1073 * 51.5, p1073 * 71, p1073 * 50, p1073 * 65);
    v1426.bezierCurveTo(p1073 * 53, p1073 * 68.5, p1073 * 53, p1073 * 68.5, p1073 * 56, p1073 * 72);
    v1426.bezierCurveTo(p1073 * 59, p1073 * 67.5, p1073 * 59, p1073 * 67.5, p1073 * 62, p1073 * 63);
    v1426.bezierCurveTo(p1073 * 60.5, p1073 * 59.5, p1073 * 60.5, p1073 * 59.5, p1073 * 59, p1073 * 56);
    v1426.bezierCurveTo(p1073 * 62, p1073 * 57, p1073 * 62, p1073 * 57, p1073 * 65, p1073 * 58);
    v1426.bezierCurveTo(p1073 * 78, p1073 * 35, p1073 * 103, p1073 * 36, p1073 * 117, p1073 * 47);
    v1426.closePath();
    f84(v1426, p1075[1], p1075[2], p1073 * 6);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 62, p1073 * 21);
    v1426.bezierCurveTo(p1073 * 63, p1073 * 34, p1073 * 64, p1073 * 37, p1073 * 66, p1073 * 40);
    v1426.bezierCurveTo(p1073 * 54, p1073 * 49, p1073 * 53, p1073 * 51, p1073 * 48, p1073 * 58);
    v1426.bezierCurveTo(p1073 * 44, p1073 * 51, p1073 * 42, p1073 * 43, p1073 * 40, p1073 * 36);
    v1426.bezierCurveTo(p1073 * 47, p1073 * 28, p1073 * 52, p1073 * 25, p1073 * 61, p1073 * 21);
    v1426.closePath();
    f84(v1426, p1075[4]);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 60, p1073 * 29);
    v1426.bezierCurveTo(p1073 * 62, p1073 * 25, p1073 * 65, p1073 * 24, p1073 * 70, p1073 * 23);
    f84(v1426, vVUndefined11, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 61, p1073 * 37);
    v1426.bezierCurveTo(p1073 * 63, p1073 * 32, p1073 * 66, p1073 * 32, p1073 * 71, p1073 * 32);
    f84(v1426, vVUndefined20, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 52, p1073 * 31);
    v1426.bezierCurveTo(p1073 * 50, p1073 * 26, p1073 * 50, p1073 * 25, p1073 * 51, p1073 * 23);
    f84(v1426, undefined, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 46, p1073 * 35);
    v1426.bezierCurveTo(p1073 * 44, p1073 * 31, p1073 * 43, p1073 * 29, p1073 * 45, p1073 * 26);
    f84(v1426, undefined, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 58, p1073 * 44);
    v1426.bezierCurveTo(p1073 * 57, p1073 * 48, p1073 * 57, p1073 * 50, p1073 * 60, p1073 * 52);
    f84(v1426, undefined, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 53, p1073 * 48);
    v1426.bezierCurveTo(p1073 * 52, p1073 * 52, p1073 * 52, p1073 * 54, p1073 * 55, p1073 * 57);
    f84(v1426, undefined, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 46, p1073 * 41);
    v1426.bezierCurveTo(p1073 * 41, p1073 * 42, p1073 * 39, p1073 * 45, p1073 * 38, p1073 * 48);
    f84(v1426, undefined, p1075[3], p1073 * 4);
    v1426.beginPath();
    v1426.lineCap = "round";
    v1426.lineJoin = "round";
    v1426.moveTo(p1073 * 48, p1073 * 48);
    v1426.bezierCurveTo(p1073 * 42, p1073 * 51, p1073 * 42, p1073 * 53, p1073 * 40, p1073 * 55);
    f84(v1426, undefined, p1075[3], p1073 * 4);
    if (p1076 == 0) {
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1073 * 99, p1073 * 101);
      v1426.bezierCurveTo(p1073 * 118.6666259765625, p1073 * 104.33331298828125, p1073 * 124.6666259765625, p1073 * 116.33331298828125, p1073 * 112.6666259765625, p1073 * 114.33331298828125);
      v1426.bezierCurveTo(p1073 * 104.6666259765625, p1073 * 112.33331298828125, p1073 * 100.6666259765625, p1073 * 105.33331298828125, p1073 * 99.6666259765625, p1073 * 101.33331298828125);
      f84(v1426, undefined, p1075[5], p1073 * 6);
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1073 * 97.6666259765625, p1073 * 101.33331298828125);
      v1426.bezierCurveTo(p1073 * 81.6666259765625, p1073 * 106.33331298828125, p1073 * 79.6666259765625, p1073 * 114.33331298828125, p1073 * 89.6666259765625, p1073 * 114.33331298828125);
      v1426.bezierCurveTo(p1073 * 95.6666259765625, p1073 * 111.33331298828125, p1073 * 95.6666259765625, p1073 * 109.33331298828125, p1073 * 98.6666259765625, p1073 * 102.33331298828125);
      f84(v1426, vVUndefined22, p1075[5], p1073 * 6);
    } else {
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1073 * 103, p1073 * 100.39999389648438);
      v1426.bezierCurveTo(p1073 * 120, p1073 * 106.39999389648438, p1073 * 118, p1073 * 107.39999389648438, p1073 * 120, p1073 * 111.39999389648438);
      f84(v1426, vVVVUndefined2022, p1075[5], p1073 * 6);
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1073 * 103, p1073 * 100.39999389648438);
      v1426.bezierCurveTo(p1073 * 90, p1073 * 103.39999389648438, p1073 * 89, p1073 * 106.39999389648438, p1073 * 87, p1073 * 112.39999389648438);
      f84(v1426, undefined, p1075[5], p1073 * 6);
      f89(v1426, p1073 * 86, p1073 * 114.39999389648438, p1073 * 4.5);
      f84(v1426, p1075[1], p1075[5], p1073 * 6);
      f89(v1426, p1073 * 121, p1073 * 114.39999389648438, p1073 * 4.5);
      f84(v1426, p1075[1], p1075[5], p1073 * 6);
    }
    return v1425;
  }
  function f265(p1077, p1078, p1079) {
    var v1427 = document.createElement("canvas");
    var v1428 = v1427.getContext("2d");
    v1427.width = p1077 * 272;
    v1427.height = p1077 * 264;
    v1428.translate(0, p1077 * 20);
    v1428.globalAlpha = p1078 ? 0.5 : 1;
    v1428.beginPath();
    v1428.lineCap = "round";
    v1428.lineJoin = "round";
    v1428.moveTo(p1077 * 56.999969482421875, p1077 * 84.517333984375);
    v1428.bezierCurveTo(p1077 * 61.999969482421875, p1077 * 58.517333984375, p1077 * 79.99996948242188, p1077 * 50.517333984375, p1077 * 102.99996948242188, p1077 * 50.517333984375);
    v1428.bezierCurveTo(p1077 * 119.99996948242188, p1077 * 26.517333984375, p1077 * 137.99996948242188, p1077 * 32.517333984375, p1077 * 156.99996948242188, p1077 * 44.517333984375);
    v1428.bezierCurveTo(p1077 * 187.99996948242188, p1077 * 42.517333984375, p1077 * 195.99996948242188, p1077 * 50.517333984375, p1077 * 202.99996948242188, p1077 * 77.517333984375);
    v1428.bezierCurveTo(p1077 * 229.99996948242188, p1077 * 80.517333984375, p1077 * 231.99996948242188, p1077 * 96.517333984375, p1077 * 229.99996948242188, p1077 * 118.517333984375);
    v1428.bezierCurveTo(p1077 * 241.99996948242188, p1077 * 147.517333984375, p1077 * 236.99996948242188, p1077 * 148.517333984375, p1077 * 220.99996948242188, p1077 * 165.517333984375);
    v1428.bezierCurveTo(p1077 * 222.99996948242188, p1077 * 192.517333984375, p1077 * 209.99996948242188, p1077 * 212.517333984375, p1077 * 177.99996948242188, p1077 * 213.517333984375);
    v1428.bezierCurveTo(p1077 * 159.99996948242188, p1077 * 234.517333984375, p1077 * 141.99996948242188, p1077 * 234.517333984375, p1077 * 116.99996948242188, p1077 * 222.517333984375);
    v1428.bezierCurveTo(p1077 * 72.99996948242188, p1077 * 226.517333984375, p1077 * 66.99996948242188, p1077 * 207.517333984375, p1077 * 65.99996948242188, p1077 * 190.517333984375);
    v1428.bezierCurveTo(p1077 * 35.999969482421875, p1077 * 180.517333984375, p1077 * 30.999969482421875, p1077 * 162.517333984375, p1077 * 39.999969482421875, p1077 * 135.517333984375);
    v1428.bezierCurveTo(p1077 * 23.999969482421875, p1077 * 110.517333984375, p1077 * 43.999969482421875, p1077 * 90.517333984375, p1077 * 55.999969482421875, p1077 * 85.517333984375);
    v1428.closePath();
    f84(v1428, p1079[0]);
    v1428.translate(0, p1077 * -20);
    v1428.globalAlpha = 1;
    v1428.beginPath();
    v1428.lineCap = "round";
    v1428.lineJoin = "round";
    v1428.moveTo(p1077 * 56.999969482421875, p1077 * 84.517333984375);
    v1428.bezierCurveTo(p1077 * 61.999969482421875, p1077 * 58.517333984375, p1077 * 79.99996948242188, p1077 * 50.517333984375, p1077 * 102.99996948242188, p1077 * 50.517333984375);
    v1428.bezierCurveTo(p1077 * 119.99996948242188, p1077 * 26.517333984375, p1077 * 137.99996948242188, p1077 * 32.517333984375, p1077 * 156.99996948242188, p1077 * 44.517333984375);
    v1428.bezierCurveTo(p1077 * 187.99996948242188, p1077 * 42.517333984375, p1077 * 195.99996948242188, p1077 * 50.517333984375, p1077 * 202.99996948242188, p1077 * 77.517333984375);
    v1428.bezierCurveTo(p1077 * 229.99996948242188, p1077 * 80.517333984375, p1077 * 231.99996948242188, p1077 * 96.517333984375, p1077 * 229.99996948242188, p1077 * 118.517333984375);
    v1428.bezierCurveTo(p1077 * 241.99996948242188, p1077 * 147.517333984375, p1077 * 236.99996948242188, p1077 * 148.517333984375, p1077 * 220.99996948242188, p1077 * 165.517333984375);
    v1428.bezierCurveTo(p1077 * 222.99996948242188, p1077 * 192.517333984375, p1077 * 209.99996948242188, p1077 * 212.517333984375, p1077 * 177.99996948242188, p1077 * 213.517333984375);
    v1428.bezierCurveTo(p1077 * 159.99996948242188, p1077 * 234.517333984375, p1077 * 141.99996948242188, p1077 * 234.517333984375, p1077 * 116.99996948242188, p1077 * 222.517333984375);
    v1428.bezierCurveTo(p1077 * 72.99996948242188, p1077 * 226.517333984375, p1077 * 66.99996948242188, p1077 * 207.517333984375, p1077 * 65.99996948242188, p1077 * 190.517333984375);
    v1428.bezierCurveTo(p1077 * 35.999969482421875, p1077 * 180.517333984375, p1077 * 30.999969482421875, p1077 * 162.517333984375, p1077 * 39.999969482421875, p1077 * 135.517333984375);
    v1428.bezierCurveTo(p1077 * 23.999969482421875, p1077 * 110.517333984375, p1077 * 43.999969482421875, p1077 * 90.517333984375, p1077 * 55.999969482421875, p1077 * 85.517333984375);
    v1428.closePath();
    f84(v1428, p1079[1], p1079[2], p1077 * 8);
    v1428.beginPath();
    v1428.lineCap = "round";
    v1428.lineJoin = "round";
    v1428.moveTo(p1077 * 123.99996948242188, p1077 * 116.18402099609375);
    v1428.bezierCurveTo(p1077 * 115.99996948242188, p1077 * 99.18402099609375, p1077 * 109.99996948242188, p1077 * 74.18402099609375, p1077 * 109.99996948242188, p1077 * 63.18402099609375);
    v1428.bezierCurveTo(p1077 * 115.99996948242188, p1077 * 69.18402099609375, p1077 * 125.99996948242188, p1077 * 87.18402099609375, p1077 * 137.99996948242188, p1077 * 112.18402099609375);
    v1428.bezierCurveTo(p1077 * 142.99996948242188, p1077 * 84.18402099609375, p1077 * 143.99996948242188, p1077 * 76.18402099609375, p1077 * 153.99996948242188, p1077 * 62.18402099609375);
    v1428.bezierCurveTo(p1077 * 155.99996948242188, p1077 * 79.18402099609375, p1077 * 149.99996948242188, p1077 * 110.18402099609375, p1077 * 151.99996948242188, p1077 * 117.18402099609375);
    v1428.bezierCurveTo(p1077 * 162.99996948242188, p1077 * 104.18402099609375, p1077 * 180.99996948242188, p1077 * 91.18402099609375, p1077 * 191.99996948242188, p1077 * 91.18402099609375);
    v1428.bezierCurveTo(p1077 * 185.99996948242188, p1077 * 102.18402099609375, p1077 * 180.99996948242188, p1077 * 106.18402099609375, p1077 * 160.99996948242188, p1077 * 124.18402099609375);
    v1428.bezierCurveTo(p1077 * 190.99996948242188, p1077 * 121.18402099609375, p1077 * 199.99996948242188, p1077 * 120.18402099609375, p1077 * 207.99996948242188, p1077 * 123.18402099609375);
    v1428.bezierCurveTo(p1077 * 199.99996948242188, p1077 * 129.18402099609375, p1077 * 181.99996948242188, p1077 * 132.18402099609375, p1077 * 160.99996948242188, p1077 * 135.18402099609375);
    v1428.bezierCurveTo(p1077 * 179.99996948242188, p1077 * 142.18402099609375, p1077 * 193.99996948242188, p1077 * 151.18402099609375, p1077 * 196.99996948242188, p1077 * 156.18402099609375);
    v1428.bezierCurveTo(p1077 * 185.99996948242188, p1077 * 156.18402099609375, p1077 * 163.99996948242188, p1077 * 149.18402099609375, p1077 * 152.99996948242188, p1077 * 147.18402099609375);
    v1428.bezierCurveTo(p1077 * 157.99996948242188, p1077 * 155.18402099609375, p1077 * 165.99996948242188, p1077 * 176.18402099609375, p1077 * 169.99996948242188, p1077 * 195.18402099609375);
    v1428.bezierCurveTo(p1077 * 162.99996948242188, p1077 * 190.18402099609375, p1077 * 147.99996948242188, p1077 * 167.18402099609375, p1077 * 139.99996948242188, p1077 * 153.18402099609375);
    v1428.bezierCurveTo(p1077 * 137.99996948242188, p1077 * 167.18402099609375, p1077 * 126.99996948242188, p1077 * 194.18402099609375, p1077 * 119.99996948242188, p1077 * 204.18402099609375);
    v1428.bezierCurveTo(p1077 * 117.99996948242188, p1077 * 186.18402099609375, p1077 * 123.99996948242188, p1077 * 165.18402099609375, p1077 * 126.99996948242188, p1077 * 149.18402099609375);
    v1428.bezierCurveTo(p1077 * 110.99996948242188, p1077 * 163.18402099609375, p1077 * 103.99996948242188, p1077 * 170.18402099609375, p1077 * 82.99996948242188, p1077 * 177.18402099609375);
    v1428.bezierCurveTo(p1077 * 90.99996948242188, p1077 * 162.18402099609375, p1077 * 99.99996948242188, p1077 * 153.18402099609375, p1077 * 117.99996948242188, p1077 * 140.18402099609375);
    v1428.bezierCurveTo(p1077 * 97.99996948242188, p1077 * 140.18402099609375, p1077 * 83.99996948242188, p1077 * 139.18402099609375, p1077 * 65.99996948242188, p1077 * 132.18402099609375);
    v1428.bezierCurveTo(p1077 * 77.99996948242188, p1077 * 127.18402099609375, p1077 * 95.99996948242188, p1077 * 127.18402099609375, p1077 * 115.99996948242188, p1077 * 127.18402099609375);
    v1428.bezierCurveTo(p1077 * 91.99996948242188, p1077 * 113.18402099609375, p1077 * 84.99996948242188, p1077 * 107.18402099609375, p1077 * 76.99996948242188, p1077 * 96.18402099609375);
    v1428.bezierCurveTo(p1077 * 94.99996948242188, p1077 * 99.18402099609375, p1077 * 109.99996948242188, p1077 * 109.18402099609375, p1077 * 123.99996948242188, p1077 * 116.18402099609375);
    v1428.closePath();
    f84(v1428, p1079[3]);
    v1428.beginPath();
    v1428.lineCap = "round";
    v1428.lineJoin = "round";
    v1428.moveTo(p1077 * 131.99996948242188, p1077 * 119.18402099609375);
    v1428.bezierCurveTo(p1077 * 141.99996948242188, p1077 * 119.18402099609375, p1077 * 145.99996948242188, p1077 * 116.18402099609375, p1077 * 147.99996948242188, p1077 * 109.18402099609375);
    v1428.bezierCurveTo(p1077 * 151.99996948242188, p1077 * 107.18402099609375, p1077 * 159.99996948242188, p1077 * 107.18402099609375, p1077 * 156.99996948242188, p1077 * 123.18402099609375);
    v1428.bezierCurveTo(p1077 * 155.99996948242188, p1077 * 140.18402099609375, p1077 * 142.99996948242188, p1077 * 149.18402099609375, p1077 * 132.99996948242188, p1077 * 147.18402099609375);
    v1428.bezierCurveTo(p1077 * 119.99996948242188, p1077 * 144.18402099609375, p1077 * 113.99996948242188, p1077 * 122.18402099609375, p1077 * 131.99996948242188, p1077 * 119.18402099609375);
    v1428.closePath();
    f84(v1428, p1079[4], p1079[5], p1077 * 6);
    return v1427;
  }
  function f266(p1080, p1081, p1082) {
    var v1429 = document.createElement("canvas");
    var v1430 = v1429.getContext("2d");
    v1429.width = p1080 * 167;
    v1429.height = p1080 * 136;
    v1430.globalAlpha = 0.5;
    v1430.save();
    v1430.translate(p1080 * 76.71426391601562, p1080 * 67.85713195800781);
    f83(v1430, p1080 * -57.5, p1080 * -54.5, p1080 * 115, p1080 * 109, p1080 * 15);
    v1430.restore();
    f84(v1430, p1082[0]);
    v1430.globalAlpha = 0.8;
    v1430.save();
    v1430.translate(p1080 * 76.71426391601562, p1080 * 67.85713195800781);
    f83(v1430, p1080 * -57.5, p1080 * -54.5, p1080 * 115, p1080 * 109, p1080 * 15);
    v1430.restore();
    f84(v1430, undefined, p1082[1], p1080 * 7);
    v1430.globalAlpha = 0.5;
    v1430.save();
    v1430.translate(p1080 * 91.21426391601562, p1080 * 67.35713195800781);
    f83(v1430, p1080 * -56, p1080 * -55, p1080 * 115, p1080 * 109, p1080 * 15);
    v1430.restore();
    f84(v1430, p1082[0]);
    v1430.globalAlpha = 1;
    v1430.save();
    v1430.translate(p1080 * 91.21426391601562, p1080 * 67.35713195800781);
    f83(v1430, p1080 * -56, p1080 * -55, p1080 * 115, p1080 * 109, p1080 * 15);
    v1430.restore();
    f84(v1430, undefined, p1082[1], p1080 * 7);
    v1430.beginPath();
    v1430.lineCap = "round";
    v1430.lineJoin = "round";
    v1430.moveTo(p1080 * 131.21426391601562, p1080 * 70.35713195800781);
    v1430.bezierCurveTo(p1080 * 133.21426391601562, p1080 * 95.35713195800781, p1080 * 128.21426391601562, p1080 * 109.35713195800781, p1080 * 108.21426391601562, p1080 * 108.35713195800781);
    f84(v1430, vVVVUndefined20, p1082[1], p1080 * 10);
    return v1429;
  }
  function f267(p1083, p1084, p1085) {
    var v1431 = document.createElement("canvas");
    var v1432 = v1431.getContext("2d");
    v1431.width = p1083 * 316;
    v1431.height = p1083 * 365;
    v1432.save();
    v1432.translate(p1083 * 156.07142639160156, p1083 * 51.81248474121094);
    v1432.rotate(0);
    f83(v1432, p1083 * -21.5, p1083 * -34, p1083 * 43, p1083 * 68, p1083 * 8);
    v1432.restore();
    f84(v1432, p1085[1], p1085[2], p1083 * 15);
    v1432.beginPath();
    v1432.lineCap = "round";
    v1432.lineJoin = "round";
    v1432.moveTo(p1083 * 110.57142639160156, p1083 * 197.09820556640625);
    v1432.bezierCurveTo(p1083 * 158.07142639160156, p1083 * 179.09820556640625, p1083 * 158.07142639160156, p1083 * 179.09820556640625, p1083 * 205.57142639160156, p1083 * 161.09820556640625);
    v1432.bezierCurveTo(p1083 * 205.57142639160156, p1083 * 235.45535278320312, p1083 * 205.57142639160156, p1083 * 235.45535278320312, p1083 * 205.57142639160156, p1083 * 309.8125);
    v1432.bezierCurveTo(p1083 * 205.57142639160156, p1083 * 323.8125, p1083 * 200.57142639160156, p1083 * 325.8125, p1083 * 187.57142639160156, p1083 * 326.8125);
    v1432.bezierCurveTo(p1083 * 155.57142639160156, p1083 * 326.3125, p1083 * 155.57142639160156, p1083 * 326.3125, p1083 * 123.57142639160156, p1083 * 325.8125);
    v1432.bezierCurveTo(p1083 * 111.57142639160156, p1083 * 326.8125, p1083 * 109.57142639160156, p1083 * 321.8125, p1083 * 110.57142639160156, p1083 * 312.8125);
    v1432.closePath();
    f84(v1432, p1085[3], p1085[4], p1083 * 15);
    v1432.beginPath();
    v1432.lineCap = "round";
    v1432.lineJoin = "round";
    v1432.moveTo(p1083 * 126.57142639160156, p1083 * 67.38392639160156);
    v1432.bezierCurveTo(p1083 * 126.57142639160156, p1083 * 57.38392639160156, p1083 * 132.57142639160156, p1083 * 54.38392639160156, p1083 * 140.57142639160156, p1083 * 54.38392639160156);
    v1432.bezierCurveTo(p1083 * 177.57142639160156, p1083 * 55.38392639160156, p1083 * 158.07142639160156, p1083 * 54.38392639160156, p1083 * 175.57142639160156, p1083 * 54.38392639160156);
    v1432.bezierCurveTo(p1083 * 185.57142639160156, p1083 * 56.38392639160156, p1083 * 185.57142639160156, p1083 * 57.38392639160156, p1083 * 184.57142639160156, p1083 * 66.38392639160156);
    v1432.bezierCurveTo(p1083 * 184.57142639160156, p1083 * 78.38392639160156, p1083 * 184.57142639160156, p1083 * 89.38392639160156, p1083 * 184.57142639160156, p1083 * 90.38392639160156);
    v1432.bezierCurveTo(p1083 * 177.57142639160156, p1083 * 107.38392639160156, p1083 * 180.57142639160156, p1083 * 112.38392639160156, p1083 * 189.57142639160156, p1083 * 116.38392639160156);
    v1432.bezierCurveTo(p1083 * 212.57142639160156, p1083 * 127.38392639160156, p1083 * 212.57142639160156, p1083 * 132.38392639160156, p1083 * 211.57142639160156, p1083 * 150.38392639160156);
    v1432.bezierCurveTo(p1083 * 211.57142639160156, p1083 * 227.59821128845215, p1083 * 211.57142639160156, p1083 * 227.59821128845215, p1083 * 211.57142639160156, p1083 * 304.81249618530273);
    v1432.bezierCurveTo(p1083 * 212.57142639160156, p1083 * 328.81249618530273, p1083 * 209.57142639160156, p1083 * 330.81249618530273, p1083 * 188.57142639160156, p1083 * 333.81249618530273);
    v1432.bezierCurveTo(p1083 * 155.07142639160156, p1083 * 333.31249618530273, p1083 * 155.07142639160156, p1083 * 333.31249618530273, p1083 * 121.57142639160156, p1083 * 332.81249618530273);
    v1432.bezierCurveTo(p1083 * 104.57142639160156, p1083 * 327.81249618530273, p1083 * 105.57142639160156, p1083 * 328.81249618530273, p1083 * 104.57142639160156, p1083 * 312.81249618530273);
    v1432.bezierCurveTo(p1083 * 104.57142639160156, p1083 * 228.16963958740234, p1083 * 104.57142639160156, p1083 * 228.16963958740234, p1083 * 104.57142639160156, p1083 * 143.52678298950195);
    v1432.bezierCurveTo(p1083 * 106.57142639160156, p1083 * 124.52678298950195, p1083 * 110.57142639160156, p1083 * 123.52678298950195, p1083 * 123.57142639160156, p1083 * 116.52678298950195);
    v1432.bezierCurveTo(p1083 * 136.57142639160156, p1083 * 110.52678298950195, p1083 * 130.57142639160156, p1083 * 106.52678298950195, p1083 * 126.57142639160156, p1083 * 98.52678298950195);
    v1432.closePath();
    f84(v1432, vVVVUndefined2022, p1085[5], p1083 * 15);
    v1432.beginPath();
    v1432.lineCap = "round";
    v1432.lineJoin = "round";
    v1432.moveTo(p1083 * 125.57142639160156, p1083 * 156.66963958740234);
    v1432.bezierCurveTo(p1083 * 125.57142639160156, p1083 * 182.66963958740234, p1083 * 125.57142639160156, p1083 * 182.66963958740234, p1083 * 125.57142639160156, p1083 * 208.66963958740234);
    v1432.closePath();
    f84(v1432, undefined, p1085[6], p1083 * 15);
    return v1431;
  }
  function f268(p1086, p1087, p1088) {
    var v1433 = document.createElement("canvas");
    var v1434 = v1433.getContext("2d");
    v1433.width = p1086 * 168;
    v1433.height = p1086 * 100;
    v1434.globalAlpha = p1087 ? 0.5 : 1;
    v1434.translate(p1086 * 10, p1086 * 5);
    v1434.save();
    v1434.translate(p1086 * 24.5, p1086 * 44.30000305175781);
    f83(v1434, p1086 * -19.5, p1086 * -8.5, p1086 * 39, p1086 * 17, p1086 * 10);
    v1434.restore();
    f84(v1434, p1088[0]);
    v1434.beginPath();
    v1434.lineCap = "round";
    v1434.lineJoin = "round";
    v1434.moveTo(p1086 * 115, p1086 * 37.80000305175781);
    v1434.bezierCurveTo(p1086 * 142, p1086 * 37.80000305175781, p1086 * 140, p1086 * 37.80000305175781, p1086 * 141, p1086 * 37.80000305175781);
    v1434.bezierCurveTo(p1086 * 147, p1086 * 28.800003051757812, p1086 * 149, p1086 * 26.800003051757812, p1086 * 153, p1086 * 32.80000305175781);
    v1434.bezierCurveTo(p1086 * 160, p1086 * 42.80000305175781, p1086 * 157, p1086 * 50.80000305175781, p1086 * 153, p1086 * 58.80000305175781);
    v1434.bezierCurveTo(p1086 * 148, p1086 * 62.80000305175781, p1086 * 147, p1086 * 59.80000305175781, p1086 * 143, p1086 * 52.80000305175781);
    v1434.bezierCurveTo(p1086 * 129, p1086 * 52.80000305175781, p1086 * 129, p1086 * 52.80000305175781, p1086 * 115, p1086 * 52.80000305175781);
    v1434.closePath();
    f84(v1434, p1088[0]);
    f89(v1434, p1086 * 78, p1086 * 44.80000305175781, p1086 * 39.44616584663204);
    f84(v1434, p1088[0]);
    v1434.globalAlpha = 1;
    v1434.translate(p1086 * -10, p1086 * -5);
    v1434.save();
    v1434.translate(p1086 * 24.5, p1086 * 44.30000305175781);
    f83(v1434, p1086 * -19.5, p1086 * -8.5, p1086 * 39, p1086 * 17, p1086 * 10);
    v1434.restore();
    f84(v1434, undefined, p1088[3], p1086 * 6);
    v1434.beginPath();
    v1434.lineCap = "round";
    v1434.lineJoin = "round";
    v1434.moveTo(p1086 * 115, p1086 * 37.80000305175781);
    v1434.bezierCurveTo(p1086 * 142, p1086 * 37.80000305175781, p1086 * 140, p1086 * 37.80000305175781, p1086 * 141, p1086 * 37.80000305175781);
    v1434.bezierCurveTo(p1086 * 147, p1086 * 28.800003051757812, p1086 * 149, p1086 * 26.800003051757812, p1086 * 153, p1086 * 32.80000305175781);
    v1434.bezierCurveTo(p1086 * 160, p1086 * 42.80000305175781, p1086 * 157, p1086 * 50.80000305175781, p1086 * 153, p1086 * 58.80000305175781);
    v1434.bezierCurveTo(p1086 * 148, p1086 * 62.80000305175781, p1086 * 147, p1086 * 59.80000305175781, p1086 * 143, p1086 * 52.80000305175781);
    v1434.bezierCurveTo(p1086 * 129, p1086 * 52.80000305175781, p1086 * 129, p1086 * 52.80000305175781, p1086 * 115, p1086 * 52.80000305175781);
    v1434.closePath();
    f84(v1434, vUndefined, p1088[3], p1086 * 6);
    f89(v1434, p1086 * 78, p1086 * 44.80000305175781, p1086 * 42.44616584663204);
    f84(v1434, vVVVVUndefined117, p1088[3], p1086 * 6);
    v1434.save();
    v1434.translate(p1086 * 24.5, p1086 * 44.30000305175781);
    f83(v1434, p1086 * -19.5, p1086 * -8.5, p1086 * 39, p1086 * 17, p1086 * 10);
    v1434.restore();
    f84(v1434, p1088[1]);
    v1434.beginPath();
    v1434.lineCap = "round";
    v1434.lineJoin = "round";
    v1434.moveTo(p1086 * 115, p1086 * 37.80000305175781);
    v1434.bezierCurveTo(p1086 * 142, p1086 * 37.80000305175781, p1086 * 140, p1086 * 37.80000305175781, p1086 * 141, p1086 * 37.80000305175781);
    v1434.bezierCurveTo(p1086 * 147, p1086 * 28.800003051757812, p1086 * 149, p1086 * 26.800003051757812, p1086 * 153, p1086 * 32.80000305175781);
    v1434.bezierCurveTo(p1086 * 160, p1086 * 42.80000305175781, p1086 * 157, p1086 * 50.80000305175781, p1086 * 153, p1086 * 58.80000305175781);
    v1434.bezierCurveTo(p1086 * 148, p1086 * 62.80000305175781, p1086 * 147, p1086 * 59.80000305175781, p1086 * 143, p1086 * 52.80000305175781);
    v1434.bezierCurveTo(p1086 * 129, p1086 * 52.80000305175781, p1086 * 129, p1086 * 52.80000305175781, p1086 * 115, p1086 * 52.80000305175781);
    v1434.closePath();
    f84(v1434, p1088[1]);
    f89(v1434, p1086 * 78, p1086 * 44.80000305175781, p1086 * 39.44616584663204);
    f84(v1434, p1088[2], p1088[1], p1086 * 4);
    f89(v1434, p1086 * 78, p1086 * 44.80000305175781, p1086 * 29.68164415931166);
    f84(v1434, p1088[3], p1088[1], p1086 * 4);
    f89(v1434, p1086 * 78, p1086 * 44, p1086 * 20);
    f84(v1434, p1088[4]);
    return v1433;
  }
  function f269(p1089, p1090, p1091) {
    var v1435 = document.createElement("canvas");
    var v1436 = v1435.getContext("2d");
    v1435.width = p1089 * 218;
    v1435.height = p1089 * 185;
    v1436.beginPath();
    v1436.lineCap = "round";
    v1436.lineJoin = "round";
    v1436.moveTo(p1089 * 64, p1089 * 53.135406494140625);
    v1436.bezierCurveTo(p1089 * 92, p1089 * 17.135406494140625, p1089 * 116, p1089 * 11.135406494140625, p1089 * 158, p1089 * 53.135406494140625);
    v1436.bezierCurveTo(p1089 * 178, p1089 * 74.13540649414062, p1089 * 181, p1089 * 81.13540649414062, p1089 * 196, p1089 * 101.13540649414062);
    v1436.bezierCurveTo(p1089 * 214, p1089 * 127.13540649414062, p1089 * 192, p1089 * 138.13540649414062, p1089 * 173, p1089 * 149.13540649414062);
    v1436.bezierCurveTo(p1089 * 137, p1089 * 166.13540649414062, p1089 * 74, p1089 * 170.13540649414062, p1089 * 36, p1089 * 141.13540649414062);
    v1436.bezierCurveTo(p1089 * 13, p1089 * 127.13540649414062, p1089 * 20, p1089 * 119.13540649414062, p1089 * 30, p1089 * 103.13540649414062);
    v1436.bezierCurveTo(p1089 * 48, p1089 * 71.13540649414062, p1089 * 54, p1089 * 67.13540649414062, p1089 * 63, p1089 * 54.135406494140625);
    v1436.closePath();
    f84(v1436, p1091[0], p1091[1], p1089 * 10);
    v1436.beginPath();
    v1436.lineCap = "round";
    v1436.lineJoin = "round";
    v1436.moveTo(p1089 * 107, p1089 * 25.135406494140625);
    v1436.bezierCurveTo(p1089 * 62, p1089 * 90.13540649414062, p1089 * 54, p1089 * 129.13540649414062, p1089 * 53, p1089 * 151.13540649414062);
    v1436.bezierCurveTo(p1089 * 39.5, p1089 * 142.13540649414062, p1089 * 39.5, p1089 * 142.13540649414062, p1089 * 26, p1089 * 133.13540649414062);
    v1436.bezierCurveTo(p1089 * 23.5, p1089 * 128.63540649414062, p1089 * 23.5, p1089 * 128.63540649414062, p1089 * 21, p1089 * 124.13540649414062);
    v1436.bezierCurveTo(p1089 * 22, p1089 * 113.13540649414062, p1089 * 31, p1089 * 99.13540649414062, p1089 * 40, p1089 * 88.13540649414062);
    v1436.bezierCurveTo(p1089 * 54.5, p1089 * 67.13540649414062, p1089 * 54.5, p1089 * 67.13540649414062, p1089 * 69, p1089 * 46.135406494140625);
    v1436.bezierCurveTo(p1089 * 80.5, p1089 * 36.635406494140625, p1089 * 80.5, p1089 * 36.635406494140625, p1089 * 92, p1089 * 27.135406494140625);
    v1436.closePath();
    f84(v1436, p1091[1]);
    return v1435;
  }
  const v1437 = String.fromCharCode;
  const vV1437 = v1437(101);
  const vV14372 = v1437(118);
  const vV14373 = v1437(97);
  const vV14374 = v1437(108);
  function f270(p1092, p1093, p1094) {
    var v1438 = document.createElement("canvas");
    var v1439 = v1438.getContext("2d");
    v1438.width = p1092 * 158;
    v1438.height = p1092 * 201;
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 96.5, p1092 * 76.421875);
    v1439.bezierCurveTo(p1092 * 100.5, p1092 * 64.421875, p1092 * 103.5, p1092 * 62.421875, p1092 * 110.5, p1092 * 65.421875);
    v1439.bezierCurveTo(p1092 * 116.5, p1092 * 66.421875, p1092 * 117.5, p1092 * 67.421875, p1092 * 112.5, p1092 * 73.421875);
    v1439.bezierCurveTo(p1092 * 107, p1092 * 79.921875, p1092 * 107, p1092 * 79.921875, p1092 * 101.5, p1092 * 86.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 61.5, p1092 * 78.421875);
    v1439.bezierCurveTo(p1092 * 57.5, p1092 * 73.421875, p1092 * 51.5, p1092 * 66.421875, p1092 * 45.5, p1092 * 68.421875);
    v1439.bezierCurveTo(p1092 * 32.5, p1092 * 73.421875, p1092 * 38.5, p1092 * 75.421875, p1092 * 46.5, p1092 * 81.421875);
    v1439.bezierCurveTo(p1092 * 51.5, p1092 * 84.921875, p1092 * 51.5, p1092 * 84.921875, p1092 * 56.5, p1092 * 88.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 116.5, p1092 * 127.421875);
    v1439.bezierCurveTo(p1092 * 124.5, p1092 * 108.421875, p1092 * 129.5, p1092 * 104.421875, p1092 * 141.5, p1092 * 107.421875);
    v1439.bezierCurveTo(p1092 * 156.5, p1092 * 112.421875, p1092 * 153.5, p1092 * 113.421875, p1092 * 132.5, p1092 * 134.421875);
    v1439.bezierCurveTo(p1092 * 123.5, p1092 * 141.921875, p1092 * 123.5, p1092 * 141.921875, p1092 * 114.5, p1092 * 149.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 41.5, p1092 * 134.421875);
    v1439.bezierCurveTo(p1092 * 30.5, p1092 * 119.421875, p1092 * 25.5, p1092 * 111.421875, p1092 * 12.5, p1092 * 115.421875);
    v1439.bezierCurveTo(p1092 * 4.5, p1092 * 120.421875, p1092 * 4.5, p1092 * 121.421875, p1092 * 26.5, p1092 * 142.421875);
    v1439.bezierCurveTo(p1092 * 35, p1092 * 149.921875, p1092 * 35, p1092 * 149.921875, p1092 * 43.5, p1092 * 157.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 78.5, p1092 * 51.921875);
    v1439.bezierCurveTo(p1092 * 99.5, p1092 * 75.921875, p1092 * 110.5, p1092 * 96.921875, p1092 * 118.5, p1092 * 120.921875);
    v1439.bezierCurveTo(p1092 * 121.5, p1092 * 140.921875, p1092 * 107.5, p1092 * 179.921875, p1092 * 75.5, p1092 * 183.921875);
    v1439.bezierCurveTo(p1092 * 30.5, p1092 * 169.921875, p1092 * 37.5, p1092 * 131.921875, p1092 * 34.5, p1092 * 120.921875);
    v1439.bezierCurveTo(p1092 * 41.5, p1092 * 89.921875, p1092 * 61.5, p1092 * 67.921875, p1092 * 78.5, p1092 * 51.921875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 72.5, p1092 * 72.421875);
    v1439.bezierCurveTo(p1092 * 76.5, p1092 * 79.421875, p1092 * 79.5, p1092 * 80.421875, p1092 * 83.5, p1092 * 73.421875);
    v1439.bezierCurveTo(p1092 * 80.5, p1092 * 96.921875, p1092 * 79.5, p1092 * 114.421875, p1092 * 77.5, p1092 * 120.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 42.5, p1092 * 163.421875);
    v1439.bezierCurveTo(p1092 * 62.5, p1092 * 185.421875, p1092 * 86.5, p1092 * 186.421875, p1092 * 111.5, p1092 * 165.421875);
    v1439.bezierCurveTo(p1092 * 107.5, p1092 * 176.421875, p1092 * 95.5, p1092 * 187.421875, p1092 * 75.5, p1092 * 188.421875);
    v1439.bezierCurveTo(p1092 * 53.5, p1092 * 188.421875, p1092 * 43.5, p1092 * 171.421875, p1092 * 42.5, p1092 * 164.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 8);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 79.5, p1092 * 61.421875);
    v1439.bezierCurveTo(p1092 * 88.5, p1092 * 31.421875, p1092 * 81.5, p1092 * 16.421875, p1092 * 75.5, p1092 * 7.421875);
    v1439.bezierCurveTo(p1092 * 77.5, p1092 * 28.421875, p1092 * 77.5, p1092 * 37.421875, p1092 * 68.5, p1092 * 42.421875);
    v1439.bezierCurveTo(p1092 * 79.5, p1092 * 57.421875, p1092 * 79.5, p1092 * 58.421875, p1092 * 80.5, p1092 * 61.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 72.5, p1092 * 72.421875);
    v1439.bezierCurveTo(p1092 * 76.5, p1092 * 79.421875, p1092 * 79.5, p1092 * 80.421875, p1092 * 83.5, p1092 * 73.421875);
    v1439.bezierCurveTo(p1092 * 80.5, p1092 * 96.921875, p1092 * 79.5, p1092 * 114.421875, p1092 * 77.5, p1092 * 120.421875);
    v1439.closePath();
    f84(v1439, p1094[8], p1094[8], p1092 * 10);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 96.5, p1092 * 76.421875);
    v1439.bezierCurveTo(p1092 * 100.5, p1092 * 64.421875, p1092 * 103.5, p1092 * 62.421875, p1092 * 110.5, p1092 * 65.421875);
    v1439.bezierCurveTo(p1092 * 116.5, p1092 * 66.421875, p1092 * 117.5, p1092 * 67.421875, p1092 * 112.5, p1092 * 73.421875);
    v1439.bezierCurveTo(p1092 * 107, p1092 * 79.921875, p1092 * 107, p1092 * 79.921875, p1092 * 101.5, p1092 * 86.421875);
    v1439.closePath();
    f84(v1439, p1094[1], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 61.5, p1092 * 78.421875);
    v1439.bezierCurveTo(p1092 * 57.5, p1092 * 73.421875, p1092 * 51.5, p1092 * 66.421875, p1092 * 45.5, p1092 * 68.421875);
    v1439.bezierCurveTo(p1092 * 32.5, p1092 * 73.421875, p1092 * 38.5, p1092 * 75.421875, p1092 * 46.5, p1092 * 81.421875);
    v1439.bezierCurveTo(p1092 * 51.5, p1092 * 84.921875, p1092 * 51.5, p1092 * 84.921875, p1092 * 56.5, p1092 * 88.421875);
    v1439.closePath();
    f84(v1439, p1094[1], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 116.5, p1092 * 127.421875);
    v1439.bezierCurveTo(p1092 * 124.5, p1092 * 108.421875, p1092 * 129.5, p1092 * 104.421875, p1092 * 141.5, p1092 * 107.421875);
    v1439.bezierCurveTo(p1092 * 156.5, p1092 * 112.421875, p1092 * 153.5, p1092 * 113.421875, p1092 * 132.5, p1092 * 134.421875);
    v1439.bezierCurveTo(p1092 * 123.5, p1092 * 141.921875, p1092 * 123.5, p1092 * 141.921875, p1092 * 114.5, p1092 * 149.421875);
    v1439.closePath();
    f84(v1439, p1094[1], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 41.5, p1092 * 134.421875);
    v1439.bezierCurveTo(p1092 * 30.5, p1092 * 119.421875, p1092 * 25.5, p1092 * 111.421875, p1092 * 12.5, p1092 * 115.421875);
    v1439.bezierCurveTo(p1092 * 4.5, p1092 * 120.421875, p1092 * 4.5, p1092 * 121.421875, p1092 * 26.5, p1092 * 142.421875);
    v1439.bezierCurveTo(p1092 * 35, p1092 * 149.921875, p1092 * 35, p1092 * 149.921875, p1092 * 43.5, p1092 * 157.421875);
    v1439.closePath();
    f84(v1439, p1094[1], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 78.5, p1092 * 51.921875);
    v1439.bezierCurveTo(p1092 * 99.5, p1092 * 75.921875, p1092 * 110.5, p1092 * 96.921875, p1092 * 118.5, p1092 * 120.921875);
    v1439.bezierCurveTo(p1092 * 121.5, p1092 * 140.921875, p1092 * 107.5, p1092 * 179.921875, p1092 * 75.5, p1092 * 183.921875);
    v1439.bezierCurveTo(p1092 * 30.5, p1092 * 169.921875, p1092 * 37.5, p1092 * 131.921875, p1092 * 34.5, p1092 * 120.921875);
    v1439.bezierCurveTo(p1092 * 41.5, p1092 * 89.921875, p1092 * 61.5, p1092 * 67.921875, p1092 * 78.5, p1092 * 51.921875);
    v1439.closePath();
    f84(v1439, p1094[3], p1094[2], p1092 * 4);
    f89(v1439, p1092 * 108.5, p1092 * 148.421875, p1092 * 9);
    f84(v1439, p1094[5]);
    f89(v1439, p1092 * 106.5, p1092 * 144.421875, p1092 * 3);
    f84(v1439, p1094[6]);
    f89(v1439, p1092 * 46.5, p1092 * 148.421875, p1092 * 9);
    f84(v1439, p1094[5]);
    f89(v1439, p1092 * 44.5, p1092 * 144.421875, p1092 * 3);
    f84(v1439, p1094[6]);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 116.5, p1092 * 114.421875);
    v1439.bezierCurveTo(p1092 * 121.5, p1092 * 137.421875, p1092 * 118.5, p1092 * 133.421875, p1092 * 108.5, p1092 * 139.421875);
    v1439.bezierCurveTo(p1092 * 94.5, p1092 * 146.421875, p1092 * 96.5, p1092 * 148.421875, p1092 * 95.5, p1092 * 152.421875);
    f84(v1439, p1094[3], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.translate(0, p1092 * -2);
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 35.5, p1092 * 131.421875);
    v1439.bezierCurveTo(p1092 * 36.5, p1092 * 140.421875, p1092 * 39.5, p1092 * 140.421875, p1092 * 49.5, p1092 * 143.421875);
    v1439.bezierCurveTo(p1092 * 59.5, p1092 * 149.421875, p1092 * 57.5, p1092 * 151.421875, p1092 * 59.5, p1092 * 155.421875);
    f84(v1439, p1094[3], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 84.5, p1092 * 57.421875);
    v1439.bezierCurveTo(p1092 * 101.5, p1092 * 120.421875, p1092 * 92.5, p1092 * 127.421875, p1092 * 78.5, p1092 * 134.421875);
    v1439.bezierCurveTo(p1092 * 51.5, p1092 * 131.421875, p1092 * 63.5, p1092 * 102.421875, p1092 * 70.5, p1092 * 59.421875);
    v1439.bezierCurveTo(p1092 * 75, p1092 * 55.421875, p1092 * 78.5, p1092 * 52.421875, p1092 * 79.5, p1092 * 51.421875);
    v1439.closePath();
    f84(v1439, p1094[4]);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 79.5, p1092 * 61.421875);
    v1439.bezierCurveTo(p1092 * 88.5, p1092 * 31.421875, p1092 * 81.5, p1092 * 16.421875, p1092 * 75.5, p1092 * 7.421875);
    v1439.bezierCurveTo(p1092 * 77.5, p1092 * 28.421875, p1092 * 77.5, p1092 * 37.421875, p1092 * 68.5, p1092 * 42.421875);
    v1439.bezierCurveTo(p1092 * 79.5, p1092 * 57.421875, p1092 * 79.5, p1092 * 58.421875, p1092 * 80.5, p1092 * 61.421875);
    v1439.closePath();
    f84(v1439, p1094[3], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 72.5, p1092 * 72.421875);
    v1439.bezierCurveTo(p1092 * 76.5, p1092 * 79.421875, p1092 * 79.5, p1092 * 80.421875, p1092 * 83.5, p1092 * 73.421875);
    v1439.bezierCurveTo(p1092 * 80.5, p1092 * 96.921875, p1092 * 79.5, p1092 * 114.421875, p1092 * 77.5, p1092 * 120.421875);
    v1439.closePath();
    f84(v1439, p1094[3], p1094[2], p1092 * 4);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 87.5, p1092 * 154.421875);
    v1439.bezierCurveTo(p1092 * 93.5, p1092 * 163.921875, p1092 * 93.5, p1092 * 163.921875, p1092 * 99.5, p1092 * 173.421875);
    v1439.bezierCurveTo(p1092 * 95, p1092 * 177.421875, p1092 * 95, p1092 * 177.421875, p1092 * 90.5, p1092 * 181.421875);
    v1439.bezierCurveTo(p1092 * 89, p1092 * 167.921875, p1092 * 89, p1092 * 167.921875, p1092 * 87.5, p1092 * 154.421875);
    v1439.closePath();
    f84(v1439, p1094[6], p1094[7], p1092 * 2);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 81.5, p1092 * 164.421875);
    v1439.bezierCurveTo(p1092 * 84, p1092 * 172.921875, p1092 * 84, p1092 * 172.921875, p1092 * 86.5, p1092 * 181.421875);
    v1439.bezierCurveTo(p1092 * 82.5, p1092 * 182.421875, p1092 * 82.5, p1092 * 182.421875, p1092 * 78.5, p1092 * 183.421875);
    v1439.closePath();
    f84(v1439, p1094[6], p1094[7], p1092 * 2);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 72.5, p1092 * 164.421875);
    v1439.bezierCurveTo(p1092 * 73.5, p1092 * 173.921875, p1092 * 73.5, p1092 * 173.921875, p1092 * 74.5, p1092 * 183.421875);
    v1439.bezierCurveTo(p1092 * 70.5, p1092 * 182.921875, p1092 * 70.5, p1092 * 182.921875, p1092 * 66.5, p1092 * 182.421875);
    v1439.closePath();
    f84(v1439, p1094[6], p1094[7], p1092 * 2);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 65.5, p1092 * 156.421875);
    v1439.bezierCurveTo(p1092 * 65, p1092 * 168.421875, p1092 * 65, p1092 * 168.421875, p1092 * 64.5, p1092 * 180.421875);
    v1439.bezierCurveTo(p1092 * 58.5, p1092 * 177.421875, p1092 * 58.5, p1092 * 177.421875, p1092 * 52.5, p1092 * 174.421875);
    v1439.closePath();
    f84(v1439, p1094[6], p1094[7], p1092 * 2);
    v1439.beginPath();
    v1439.lineCap = "round";
    v1439.lineJoin = "round";
    v1439.moveTo(p1092 * 42.5, p1092 * 163.421875);
    v1439.bezierCurveTo(p1092 * 62.5, p1092 * 185.421875, p1092 * 86.5, p1092 * 186.421875, p1092 * 111.5, p1092 * 165.421875);
    v1439.bezierCurveTo(p1092 * 107.5, p1092 * 176.421875, p1092 * 95.5, p1092 * 187.421875, p1092 * 75.5, p1092 * 188.421875);
    v1439.bezierCurveTo(p1092 * 53.5, p1092 * 188.421875, p1092 * 43.5, p1092 * 171.421875, p1092 * 42.5, p1092 * 164.421875);
    v1439.closePath();
    f84(v1439, p1094[3], p1094[2], p1092 * 4);
    return v1438;
  }
  function f271(p1095, p1096) {
    var v1440 = document.createElement("canvas");
    var v1441 = v1440.getContext("2d");
    v1440.width = p1095 * 253;
    v1440.height = p1095 * 192;
    v1441.globalAlpha = 0.5;
    v1441.save();
    v1441.translate(p1095 * 42, p1095 * 99);
    v1441.globalAlpha = 0.5;
    f83(v1441, p1095 * -7, p1095 * -20, p1095 * 14, p1095 * 39, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[0]);
    v1441.globalAlpha = 1;
    v1441.save();
    v1441.translate(p1095 * 37, p1095 * 94);
    f83(v1441, p1095 * -7, p1095 * -20, p1095 * 14, p1095 * 37, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[2]);
    v1441.globalAlpha = 0.5;
    v1441.save();
    v1441.translate(p1095 * 136, p1095 * 99);
    v1441.globalAlpha = 0.5;
    f83(v1441, p1095 * -84, p1095 * -67, p1095 * 168, p1095 * 134, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[0], p1096[0], p1095 * 13);
    v1441.globalAlpha = 1;
    v1441.save();
    v1441.translate(p1095 * 131, p1095 * 94);
    f83(v1441, p1095 * -84, p1095 * -67, p1095 * 168, p1095 * 134, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[2], p1096[2], p1095 * 13);
    v1441.save();
    v1441.translate(p1095 * 131, p1095 * 94);
    f83(v1441, p1095 * -76, p1095 * -61, p1095 * 152, p1095 * 122, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[3], p1096[1], p1095 * 8);
    v1441.save();
    v1441.translate(p1095 * 168.5, p1095 * 93.5);
    f83(v1441, p1095 * -30.5, p1095 * -58.5, p1095 * 61, p1095 * 117, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[3], p1096[4], p1095 * 6);
    v1441.save();
    v1441.translate(p1095 * 93.5, p1095 * 95.5);
    f83(v1441, p1095 * -32, p1095 * -59.5, p1095 * 59, p1095 * 119, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[3], p1096[4], p1095 * 6);
    v1441.save();
    v1441.translate(p1095 * 130.5, p1095 * 94);
    f83(v1441, p1095 * -36, p1095 * -67, p1095 * 73, p1095 * 134, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[3], p1096[2], p1095 * 8);
    v1441.globalAlpha = 0.5;
    v1441.save();
    v1441.translate(p1095 * 133, p1095 * 97);
    f83(v1441, p1095 * -83, p1095 * -12, p1095 * 160, p1095 * 24, p1095 * 0);
    v1441.restore();
    f84(v1441, p1096[0]);
    v1441.globalAlpha = 1;
    v1441.save();
    v1441.translate(p1095 * 133, p1095 * 92);
    f83(v1441, p1095 * -83, p1095 * -12, p1095 * 160, p1095 * 24, p1095 * 0);
    v1441.restore();
    f84(v1441, p1096[2]);
    v1441.globalAlpha = 0.5;
    v1441.save();
    v1441.translate(p1095 * 228, p1095 * 99.5);
    v1441.globalAlpha = 0.5;
    f83(v1441, p1095 * -5, p1095 * -18.5, p1095 * 10, p1095 * 37, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[0]);
    v1441.globalAlpha = 1;
    v1441.save();
    v1441.translate(p1095 * 223, p1095 * 94.5);
    f83(v1441, p1095 * -5, p1095 * -18.5, p1095 * 10, p1095 * 37, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[2]);
    v1441.save();
    v1441.translate(p1095 * 133.5, p1095 * 175.5);
    v1441.globalAlpha = 0.5;
    f83(v1441, p1095 * -22.5, p1095 * -6.5, p1095 * 45, p1095 * 13, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[0]);
    v1441.globalAlpha = 1;
    v1441.save();
    v1441.translate(p1095 * 128.5, p1095 * 170.5);
    f83(v1441, p1095 * -22.5, p1095 * -6.5, p1095 * 45, p1095 * 13, p1095 * 20);
    v1441.restore();
    f84(v1441, p1096[2]);
    return v1440;
  }
  function f272(p1097, p1098, p1099) {
    var v1442 = document.createElement("canvas");
    var v1443 = v1442.getContext("2d");
    v1442.width = p1097 * 465;
    v1442.height = p1097 * 310;
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 126, p1097 * 192);
    v1443.bezierCurveTo(p1097 * 198, p1097 * 202, p1097 * 245, p1097 * 203, p1097 * 335, p1097 * 194);
    v1443.bezierCurveTo(p1097 * 336, p1097 * 232, p1097 * 326, p1097 * 235, p1097 * 232, p1097 * 237);
    v1443.bezierCurveTo(p1097 * 161, p1097 * 235, p1097 * 122, p1097 * 235, p1097 * 126, p1097 * 193);
    v1443.closePath();
    f84(v1443, p1099[0], p1099[1], p1097 * 4);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 146, p1097 * 239);
    v1443.bezierCurveTo(p1097 * 174, p1097 * 74, p1097 * 287, p1097 * 88, p1097 * 320, p1097 * 240);
    v1443.bezierCurveTo(p1097 * 329, p1097 * 231, p1097 * 340, p1097 * 219, p1097 * 332, p1097 * 115);
    v1443.bezierCurveTo(p1097 * 330, p1097 * 40, p1097 * 144, p1097 * 30, p1097 * 129, p1097 * 116);
    v1443.bezierCurveTo(p1097 * 124, p1097 * 217, p1097 * 124, p1097 * 228, p1097 * 143, p1097 * 237);
    v1443.closePath();
    f84(v1443, p1099[0], p1099[1], p1097 * 4);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 126, p1097 * 193);
    v1443.bezierCurveTo(p1097 * 173, p1097 * 94, p1097 * 209, p1097 * 100, p1097 * 228, p1097 * 57);
    v1443.bezierCurveTo(p1097 * 190, p1097 * 112, p1097 * 165, p1097 * 115, p1097 * 127, p1097 * 184);
    v1443.closePath();
    f84(v1443, undefined, p1099[1], p1097 * 4);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 230, p1097 * 57);
    v1443.bezierCurveTo(p1097 * 266, p1097 * 117, p1097 * 310, p1097 * 130, p1097 * 332, p1097 * 183);
    v1443.bezierCurveTo(p1097 * 290, p1097 * 112, p1097 * 262, p1097 * 109, p1097 * 230, p1097 * 56);
    v1443.closePath();
    f84(v1443, vVVUndefined202, p1099[1], p1097 * 4);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 154, p1097 * 212);
    v1443.bezierCurveTo(p1097 * 208, p1097 * 224, p1097 * 252, p1097 * 219, p1097 * 305, p1097 * 212);
    v1443.bezierCurveTo(p1097 * 267, p1097 * 219, p1097 * 204, p1097 * 222, p1097 * 155, p1097 * 212);
    v1443.closePath();
    f84(v1443, undefined, p1099[1], p1097 * 4);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 239, p1097 * 59);
    v1443.bezierCurveTo(p1097 * 302, p1097 * 72, p1097 * 325, p1097 * 84, p1097 * 326, p1097 * 115);
    v1443.bezierCurveTo(p1097 * 289, p1097 * 80, p1097 * 270, p1097 * 88, p1097 * 253, p1097 * 78);
    v1443.closePath();
    f84(v1443, p1099[2]);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 216, p1097 * 61);
    v1443.bezierCurveTo(p1097 * 209, p1097 * 70, p1097 * 209, p1097 * 70, p1097 * 202, p1097 * 79);
    v1443.bezierCurveTo(p1097 * 173, p1097 * 87, p1097 * 162, p1097 * 91, p1097 * 137, p1097 * 107);
    v1443.bezierCurveTo(p1097 * 153, p1097 * 78, p1097 * 174, p1097 * 67, p1097 * 212, p1097 * 62);
    v1443.closePath();
    f84(v1443, p1099[2]);
    v1443.beginPath();
    v1443.lineCap = "round";
    v1443.lineJoin = "round";
    v1443.moveTo(p1097 * 175, p1097 * 125);
    v1443.bezierCurveTo(p1097 * 218, p1097 * 94, p1097 * 238, p1097 * 90, p1097 * 281, p1097 * 125);
    v1443.bezierCurveTo(p1097 * 245, p1097 * 89, p1097 * 240, p1097 * 80, p1097 * 228, p1097 * 67);
    v1443.bezierCurveTo(p1097 * 207, p1097 * 100, p1097 * 192, p1097 * 104, p1097 * 177, p1097 * 123);
    v1443.closePath();
    f84(v1443, p1099[2]);
    return v1442;
  }
  function f273(p1100, p1101, p1102) {
    var v1444 = document.createElement("canvas");
    var v1445 = v1444.getContext("2d");
    v1444.width = p1100 * 102;
    v1444.height = p1100 * 102;
    v1445.globalAlpha = p1101 ? 0.5 : 1;
    v1445.translate(3, 3);
    f83(v1445, p1100 * 24, p1100 * 26, p1100 * 70, p1100 * 9, p1100 * 10);
    f84(v1445, p1102[0]);
    f83(v1445, p1100 * 26, p1100 * 70, p1100 * 70, p1100 * 9, p1100 * 10);
    f84(v1445, p1102[0]);
    f83(v1445, p1100 * 5, p1100 * 3, p1100 * 22, p1100 * 94, p1100 * 5);
    f84(v1445, p1102[0]);
    f83(v1445, p1100 * 40, p1100 * 3, p1100 * 22, p1100 * 94, p1100 * 5);
    f84(v1445, p1102[0]);
    f83(v1445, p1100 * 75, p1100 * 3, p1100 * 22, p1100 * 94, p1100 * 5);
    f84(v1445, p1102[0]);
    v1445.globalAlpha = 1;
    v1445.translate(-3, -3);
    f83(v1445, p1100 * 24, p1100 * 26, p1100 * 70, p1100 * 9, p1100 * 10);
    f84(v1445, p1102[1]);
    f83(v1445, p1100 * 26, p1100 * 70, p1100 * 70, p1100 * 9, p1100 * 10);
    f84(v1445, p1102[1]);
    f83(v1445, p1100 * 5, p1100 * 3, p1100 * 22, p1100 * 94, p1100 * 5);
    f84(v1445, p1102[2], p1102[3], p1100 * 4);
    f83(v1445, p1100 * 40, p1100 * 3, p1100 * 22, p1100 * 94, p1100 * 5);
    f84(v1445, p1102[2], p1102[3], p1100 * 4);
    f83(v1445, p1100 * 75, p1100 * 3, p1100 * 22, p1100 * 94, p1100 * 5);
    f84(v1445, p1102[2], p1102[3], p1100 * 4);
    return v1444;
  }
  function f274(p1103, p1104, p1105) {
    var v1446 = document.createElement("canvas");
    var v1447 = v1446.getContext("2d");
    v1446.width = p1103 * 247;
    v1446.height = p1103 * 247;
    v1447.translate(0, p1103 * 10);
    v1447.globalAlpha = p1104 ? 0.5 : 1;
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 150, p1103 * 62);
    v1447.bezierCurveTo(p1103 * 151.5, p1103 * 71.5, p1103 * 149, p1103 * 70, p1103 * 153, p1103 * 81);
    v1447.bezierCurveTo(p1103 * 158, p1103 * 73.5, p1103 * 158, p1103 * 73.5, p1103 * 163, p1103 * 66);
    v1447.closePath();
    f84(v1447, p1105[0]);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 164, p1103 * 171);
    v1447.bezierCurveTo(p1103 * 149, p1103 * 159, p1103 * 156.5, p1103 * 165, p1103 * 149, p1103 * 159);
    v1447.bezierCurveTo(p1103 * 149, p1103 * 167, p1103 * 149, p1103 * 170, p1103 * 152, p1103 * 178);
    v1447.closePath();
    f84(v1447, p1105[0]);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 132, p1103 * 95);
    v1447.bezierCurveTo(p1103 * 154, p1103 * 102, p1103 * 154, p1103 * 126, p1103 * 137, p1103 * 139);
    v1447.bezierCurveTo(p1103 * 113, p1103 * 152, p1103 * 89, p1103 * 136, p1103 * 80, p1103 * 121);
    v1447.bezierCurveTo(p1103 * 57, p1103 * 89, p1103 * 69, p1103 * 63, p1103 * 79, p1103 * 52);
    v1447.bezierCurveTo(p1103 * 110, p1103 * 20, p1103 * 139, p1103 * 21, p1103 * 150, p1103 * 25);
    v1447.bezierCurveTo(p1103 * 197, p1103 * 36, p1103 * 221, p1103 * 67, p1103 * 226, p1103 * 90);
    v1447.bezierCurveTo(p1103 * 234, p1103 * 134, p1103 * 214, p1103 * 177, p1103 * 195, p1103 * 197);
    v1447.bezierCurveTo(p1103 * 144, p1103 * 242, p1103 * 79, p1103 * 216, p1103 * 58, p1103 * 206);
    v1447.bezierCurveTo(p1103 * 13, p1103 * 174, p1103 * 20, p1103 * 134, p1103 * 23, p1103 * 107);
    v1447.bezierCurveTo(p1103 * 26, p1103 * 78, p1103 * 33, p1103 * 60, p1103 * 38, p1103 * 43);
    v1447.bezierCurveTo(p1103 * 42, p1103 * 32, p1103 * 47, p1103 * 32, p1103 * 50, p1103 * 36);
    v1447.bezierCurveTo(p1103 * 54, p1103 * 37, p1103 * 50, p1103 * 52, p1103 * 44, p1103 * 87);
    v1447.bezierCurveTo(p1103 * 40, p1103 * 115, p1103 * 46, p1103 * 142, p1103 * 57, p1103 * 158);
    v1447.bezierCurveTo(p1103 * 76, p1103 * 189, p1103 * 129, p1103 * 182, p1103 * 152, p1103 * 173);
    v1447.bezierCurveTo(p1103 * 186, p1103 * 156, p1103 * 191, p1103 * 106, p1103 * 176, p1103 * 85);
    v1447.bezierCurveTo(p1103 * 159, p1103 * 61, p1103 * 132, p1103 * 62, p1103 * 122, p1103 * 66);
    v1447.bezierCurveTo(p1103 * 108, p1103 * 74, p1103 * 108, p1103 * 89, p1103 * 116, p1103 * 90);
    v1447.bezierCurveTo(p1103 * 123, p1103 * 92, p1103 * 130, p1103 * 93, p1103 * 131, p1103 * 94);
    v1447.closePath();
    f84(v1447, p1105[0]);
    v1447.translate(0, p1103 * -10);
    v1447.globalAlpha = 1;
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 150, p1103 * 62);
    v1447.bezierCurveTo(p1103 * 151.5, p1103 * 71.5, p1103 * 149, p1103 * 70, p1103 * 153, p1103 * 81);
    v1447.bezierCurveTo(p1103 * 158, p1103 * 73.5, p1103 * 158, p1103 * 73.5, p1103 * 163, p1103 * 66);
    v1447.closePath();
    f84(v1447, p1105[5]);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 164, p1103 * 171);
    v1447.bezierCurveTo(p1103 * 149, p1103 * 159, p1103 * 156.5, p1103 * 165, p1103 * 149, p1103 * 159);
    v1447.bezierCurveTo(p1103 * 149, p1103 * 167, p1103 * 149, p1103 * 170, p1103 * 152, p1103 * 178);
    v1447.closePath();
    f84(v1447, p1105[5]);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 132, p1103 * 95);
    v1447.bezierCurveTo(p1103 * 154, p1103 * 102, p1103 * 154, p1103 * 126, p1103 * 137, p1103 * 139);
    v1447.bezierCurveTo(p1103 * 113, p1103 * 152, p1103 * 89, p1103 * 136, p1103 * 80, p1103 * 121);
    v1447.bezierCurveTo(p1103 * 57, p1103 * 89, p1103 * 69, p1103 * 63, p1103 * 79, p1103 * 52);
    v1447.bezierCurveTo(p1103 * 110, p1103 * 20, p1103 * 139, p1103 * 21, p1103 * 150, p1103 * 25);
    v1447.bezierCurveTo(p1103 * 197, p1103 * 36, p1103 * 221, p1103 * 67, p1103 * 226, p1103 * 90);
    v1447.bezierCurveTo(p1103 * 234, p1103 * 134, p1103 * 214, p1103 * 177, p1103 * 195, p1103 * 197);
    v1447.bezierCurveTo(p1103 * 144, p1103 * 242, p1103 * 79, p1103 * 216, p1103 * 58, p1103 * 206);
    v1447.bezierCurveTo(p1103 * 13, p1103 * 174, p1103 * 20, p1103 * 134, p1103 * 23, p1103 * 107);
    v1447.bezierCurveTo(p1103 * 26, p1103 * 78, p1103 * 33, p1103 * 60, p1103 * 38, p1103 * 43);
    v1447.bezierCurveTo(p1103 * 42, p1103 * 32, p1103 * 47, p1103 * 32, p1103 * 50, p1103 * 36);
    v1447.bezierCurveTo(p1103 * 54, p1103 * 37, p1103 * 50, p1103 * 52, p1103 * 44, p1103 * 87);
    v1447.bezierCurveTo(p1103 * 40, p1103 * 115, p1103 * 46, p1103 * 142, p1103 * 57, p1103 * 158);
    v1447.bezierCurveTo(p1103 * 76, p1103 * 189, p1103 * 129, p1103 * 182, p1103 * 152, p1103 * 173);
    v1447.bezierCurveTo(p1103 * 186, p1103 * 156, p1103 * 191, p1103 * 106, p1103 * 176, p1103 * 85);
    v1447.bezierCurveTo(p1103 * 159, p1103 * 61, p1103 * 132, p1103 * 62, p1103 * 122, p1103 * 66);
    v1447.bezierCurveTo(p1103 * 108, p1103 * 74, p1103 * 108, p1103 * 89, p1103 * 116, p1103 * 90);
    v1447.bezierCurveTo(p1103 * 123, p1103 * 92, p1103 * 130, p1103 * 93, p1103 * 131, p1103 * 94);
    v1447.closePath();
    f84(v1447, p1105[1], p1105[2], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 137, p1103 * 137);
    v1447.bezierCurveTo(p1103 * 145, p1103 * 125, p1103 * 138, p1103 * 108, p1103 * 123, p1103 * 104);
    v1447.bezierCurveTo(p1103 * 81, p1103 * 101, p1103 * 88, p1103 * 77, p1103 * 98, p1103 * 65);
    v1447.bezierCurveTo(p1103 * 117, p1103 * 38, p1103 * 138, p1103 * 39, p1103 * 165, p1103 * 52);
    v1447.bezierCurveTo(p1103 * 197, p1103 * 72, p1103 * 207, p1103 * 111, p1103 * 197, p1103 * 140);
    v1447.bezierCurveTo(p1103 * 182, p1103 * 180, p1103 * 161, p1103 * 197, p1103 * 112, p1103 * 194);
    v1447.bezierCurveTo(p1103 * 58, p1103 * 194, p1103 * 37, p1103 * 170, p1103 * 34, p1103 * 142);
    v1447.bezierCurveTo(p1103 * 29, p1103 * 102, p1103 * 40, p1103 * 63, p1103 * 51, p1103 * 45);
    v1447.bezierCurveTo(p1103 * 43, p1103 * 78, p1103 * 41, p1103 * 103, p1103 * 43, p1103 * 122);
    v1447.bezierCurveTo(p1103 * 51, p1103 * 158, p1103 * 63, p1103 * 174, p1103 * 95, p1103 * 179);
    v1447.bezierCurveTo(p1103 * 129, p1103 * 186, p1103 * 169, p1103 * 172, p1103 * 177, p1103 * 144);
    v1447.bezierCurveTo(p1103 * 197, p1103 * 105, p1103 * 172, p1103 * 76, p1103 * 160, p1103 * 71);
    v1447.bezierCurveTo(p1103 * 125, p1103 * 52, p1103 * 111, p1103 * 73, p1103 * 111, p1103 * 81);
    v1447.bezierCurveTo(p1103 * 106, p1103 * 93, p1103 * 140, p1103 * 92, p1103 * 147, p1103 * 107);
    v1447.bezierCurveTo(p1103 * 153, p1103 * 128, p1103 * 140, p1103 * 135, p1103 * 137, p1103 * 139);
    v1447.closePath();
    f84(v1447, p1105[3]);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 132, p1103 * 95);
    v1447.bezierCurveTo(p1103 * 154, p1103 * 102, p1103 * 154, p1103 * 126, p1103 * 137, p1103 * 139);
    v1447.bezierCurveTo(p1103 * 113, p1103 * 152, p1103 * 89, p1103 * 136, p1103 * 80, p1103 * 121);
    v1447.bezierCurveTo(p1103 * 57, p1103 * 89, p1103 * 69, p1103 * 63, p1103 * 79, p1103 * 52);
    v1447.bezierCurveTo(p1103 * 110, p1103 * 20, p1103 * 139, p1103 * 21, p1103 * 150, p1103 * 25);
    v1447.bezierCurveTo(p1103 * 197, p1103 * 36, p1103 * 221, p1103 * 67, p1103 * 226, p1103 * 90);
    v1447.bezierCurveTo(p1103 * 234, p1103 * 134, p1103 * 214, p1103 * 177, p1103 * 195, p1103 * 197);
    v1447.bezierCurveTo(p1103 * 144, p1103 * 242, p1103 * 79, p1103 * 216, p1103 * 58, p1103 * 206);
    v1447.bezierCurveTo(p1103 * 13, p1103 * 174, p1103 * 20, p1103 * 134, p1103 * 23, p1103 * 107);
    v1447.bezierCurveTo(p1103 * 26, p1103 * 78, p1103 * 33, p1103 * 60, p1103 * 38, p1103 * 43);
    v1447.bezierCurveTo(p1103 * 42, p1103 * 32, p1103 * 47, p1103 * 32, p1103 * 50, p1103 * 36);
    v1447.bezierCurveTo(p1103 * 54, p1103 * 37, p1103 * 50, p1103 * 52, p1103 * 44, p1103 * 87);
    v1447.bezierCurveTo(p1103 * 40, p1103 * 115, p1103 * 46, p1103 * 142, p1103 * 57, p1103 * 158);
    v1447.bezierCurveTo(p1103 * 76, p1103 * 189, p1103 * 129, p1103 * 182, p1103 * 152, p1103 * 173);
    v1447.bezierCurveTo(p1103 * 186, p1103 * 156, p1103 * 191, p1103 * 106, p1103 * 176, p1103 * 85);
    v1447.bezierCurveTo(p1103 * 159, p1103 * 61, p1103 * 132, p1103 * 62, p1103 * 122, p1103 * 66);
    v1447.bezierCurveTo(p1103 * 108, p1103 * 74, p1103 * 108, p1103 * 89, p1103 * 116, p1103 * 90);
    v1447.bezierCurveTo(p1103 * 123, p1103 * 92, p1103 * 130, p1103 * 93, p1103 * 131, p1103 * 94);
    v1447.closePath();
    f84(v1447, vVVUndefined21, p1105[2], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 82, p1103 * 63);
    v1447.bezierCurveTo(p1103 * 91, p1103 * 64, p1103 * 96, p1103 * 62, p1103 * 98, p1103 * 53);
    v1447.bezierCurveTo(p1103 * 91, p1103 * 45, p1103 * 85, p1103 * 42, p1103 * 78, p1103 * 41);
    v1447.bezierCurveTo(p1103 * 81, p1103 * 51, p1103 * 82, p1103 * 57, p1103 * 82, p1103 * 63);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 148, p1103 * 40);
    v1447.bezierCurveTo(p1103 * 140, p1103 * 52, p1103 * 131, p1103 * 51, p1103 * 123, p1103 * 43);
    v1447.bezierCurveTo(p1103 * 123, p1103 * 25, p1103 * 129, p1103 * 17, p1103 * 134, p1103 * 12);
    v1447.bezierCurveTo(p1103 * 138, p1103 * 35, p1103 * 142, p1103 * 31, p1103 * 148, p1103 * 40);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 189, p1103 * 43);
    v1447.bezierCurveTo(p1103 * 191, p1103 * 54, p1103 * 196, p1103 * 58, p1103 * 205, p1103 * 59);
    v1447.bezierCurveTo(p1103 * 211, p1103 * 42, p1103 * 214, p1103 * 37, p1103 * 216, p1103 * 31);
    v1447.bezierCurveTo(p1103 * 202, p1103 * 34, p1103 * 195, p1103 * 39, p1103 * 190, p1103 * 43);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 216, p1103 * 98);
    v1447.bezierCurveTo(p1103 * 219, p1103 * 105, p1103 * 225, p1103 * 107, p1103 * 230, p1103 * 109);
    v1447.bezierCurveTo(p1103 * 227, p1103 * 113, p1103 * 221, p1103 * 115, p1103 * 215, p1103 * 115);
    v1447.bezierCurveTo(p1103 * 208, p1103 * 109, p1103 * 211, p1103 * 101, p1103 * 216, p1103 * 98);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 180, p1103 * 85);
    v1447.bezierCurveTo(p1103 * 193, p1103 * 86, p1103 * 196, p1103 * 98, p1103 * 191, p1103 * 108);
    v1447.bezierCurveTo(p1103 * 179, p1103 * 112, p1103 * 167, p1103 * 113, p1103 * 155, p1103 * 111);
    v1447.bezierCurveTo(p1103 * 169, p1103 * 100, p1103 * 176, p1103 * 96, p1103 * 180, p1103 * 85);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 96, p1103 * 114);
    v1447.bezierCurveTo(p1103 * 102, p1103 * 109, p1103 * 112, p1103 * 110, p1103 * 114, p1103 * 118);
    v1447.bezierCurveTo(p1103 * 111, p1103 * 134, p1103 * 102, p1103 * 143, p1103 * 95, p1103 * 147);
    v1447.bezierCurveTo(p1103 * 98, p1103 * 123, p1103 * 97, p1103 * 119, p1103 * 96, p1103 * 115);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 79, p1103 * 92);
    v1447.bezierCurveTo(p1103 * 86, p1103 * 95, p1103 * 89, p1103 * 102, p1103 * 83, p1103 * 111);
    v1447.bezierCurveTo(p1103 * 70, p1103 * 110, p1103 * 61, p1103 * 107, p1103 * 54, p1103 * 100);
    v1447.bezierCurveTo(p1103 * 70, p1103 * 97, p1103 * 70, p1103 * 95, p1103 * 78, p1103 * 92);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 39, p1103 * 130);
    v1447.bezierCurveTo(p1103 * 37, p1103 * 141, p1103 * 41, p1103 * 143, p1103 * 48, p1103 * 144);
    v1447.bezierCurveTo(p1103 * 54, p1103 * 134, p1103 * 55, p1103 * 131, p1103 * 56, p1103 * 123);
    v1447.bezierCurveTo(p1103 * 47, p1103 * 129, p1103 * 43, p1103 * 129, p1103 * 39, p1103 * 129);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 113, p1103 * 189);
    v1447.bezierCurveTo(p1103 * 119, p1103 * 201, p1103 * 127, p1103 * 198, p1103 * 134, p1103 * 192);
    v1447.bezierCurveTo(p1103 * 128, p1103 * 175, p1103 * 128, p1103 * 173, p1103 * 128, p1103 * 165);
    v1447.bezierCurveTo(p1103 * 117, p1103 * 176, p1103 * 116, p1103 * 182, p1103 * 113, p1103 * 187);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 74, p1103 * 154);
    v1447.bezierCurveTo(p1103 * 76, p1103 * 163, p1103 * 76, p1103 * 170, p1103 * 75, p1103 * 177);
    v1447.bezierCurveTo(p1103 * 68, p1103 * 179, p1103 * 66, p1103 * 176, p1103 * 63, p1103 * 171);
    v1447.bezierCurveTo(p1103 * 69, p1103 * 164, p1103 * 72, p1103 * 159, p1103 * 74, p1103 * 154);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 206, p1103 * 152);
    v1447.bezierCurveTo(p1103 * 198, p1103 * 158, p1103 * 198, p1103 * 166, p1103 * 201, p1103 * 171);
    v1447.bezierCurveTo(p1103 * 209, p1103 * 170, p1103 * 221, p1103 * 170, p1103 * 226, p1103 * 172);
    v1447.bezierCurveTo(p1103 * 219, p1103 * 159, p1103 * 210, p1103 * 155, p1103 * 207, p1103 * 153);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 181, p1103 * 184);
    v1447.bezierCurveTo(p1103 * 170, p1103 * 184, p1103 * 167, p1103 * 187, p1103 * 163, p1103 * 195);
    v1447.bezierCurveTo(p1103 * 171, p1103 * 207, p1103 * 183, p1103 * 214, p1103 * 191, p1103 * 217);
    v1447.bezierCurveTo(p1103 * 183, p1103 * 204, p1103 * 184, p1103 * 196, p1103 * 181, p1103 * 184);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 66, p1103 * 199);
    v1447.bezierCurveTo(p1103 * 73, p1103 * 197, p1103 * 78, p1103 * 199, p1103 * 79, p1103 * 206);
    v1447.bezierCurveTo(p1103 * 71, p1103 * 216, p1103 * 67, p1103 * 221, p1103 * 57, p1103 * 223);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 182, p1103 * 143);
    v1447.bezierCurveTo(p1103 * 183, p1103 * 146, p1103 * 183, p1103 * 149, p1103 * 179, p1103 * 152);
    v1447.bezierCurveTo(p1103 * 174, p1103 * 146, p1103 * 174, p1103 * 146, p1103 * 169, p1103 * 140);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 32, p1103 * 159);
    v1447.bezierCurveTo(p1103 * 45, p1103 * 160, p1103 * 48, p1103 * 164, p1103 * 45, p1103 * 175);
    v1447.bezierCurveTo(p1103 * 28, p1103 * 183, p1103 * 25, p1103 * 184, p1103 * 19, p1103 * 184);
    v1447.bezierCurveTo(p1103 * 30, p1103 * 170, p1103 * 29, p1103 * 164, p1103 * 31, p1103 * 160);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 110, p1103 * 214);
    v1447.bezierCurveTo(p1103 * 106, p1103 * 212, p1103 * 104, p1103 * 213, p1103 * 102, p1103 * 218);
    v1447.bezierCurveTo(p1103 * 104, p1103 * 220, p1103 * 107, p1103 * 222, p1103 * 110, p1103 * 224);
    v1447.bezierCurveTo(p1103 * 110.5, p1103 * 219, p1103 * 110.5, p1103 * 219, p1103 * 111, p1103 * 214);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 40, p1103 * 52);
    v1447.bezierCurveTo(p1103 * 41, p1103 * 57, p1103 * 40, p1103 * 61, p1103 * 34, p1103 * 60);
    v1447.bezierCurveTo(p1103 * 31.5, p1103 * 55, p1103 * 31.5, p1103 * 55, p1103 * 29, p1103 * 50);
    v1447.bezierCurveTo(p1103 * 34, p1103 * 50.5, p1103 * 34, p1103 * 50.5, p1103 * 39, p1103 * 51);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    v1447.beginPath();
    v1447.lineCap = "round";
    v1447.lineJoin = "round";
    v1447.moveTo(p1103 * 31, p1103 * 81);
    v1447.bezierCurveTo(p1103 * 37, p1103 * 84, p1103 * 38, p1103 * 90, p1103 * 34, p1103 * 99);
    v1447.bezierCurveTo(p1103 * 23, p1103 * 97, p1103 * 19, p1103 * 96, p1103 * 16, p1103 * 93);
    v1447.bezierCurveTo(p1103 * 24, p1103 * 88, p1103 * 28, p1103 * 85, p1103 * 30, p1103 * 81);
    v1447.closePath();
    f84(v1447, p1105[4], p1105[5], p1103 * 5);
    return v1446;
  }
  function f275(p1106, p1107, p1108) {
    var v1448 = document.createElement("canvas");
    var v1449 = v1448.getContext("2d");
    v1448.width = p1106 * 400;
    v1448.height = p1106 * 400;
    v1449.translate(0, p1106 * 15);
    v1449.globalAlpha = p1107 ? 0.5 : 1;
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 102, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 108, p1106 * 216.5, p1106 * 108, p1106 * 216.5, p1106 * 114, p1106 * 279);
    v1449.bezierCurveTo(p1106 * 124, p1106 * 300, p1106 * 237, p1106 * 299, p1106 * 251, p1106 * 279);
    v1449.bezierCurveTo(p1106 * 257, p1106 * 217, p1106 * 257, p1106 * 217, p1106 * 263, p1106 * 155);
    v1449.bezierCurveTo(p1106 * 248, p1106 * 194, p1106 * 91, p1106 * 180, p1106 * 103, p1106 * 156);
    v1449.closePath();
    f84(v1449, p1108[0]);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 102, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 106, p1106 * 53, p1106 * 255, p1106 * 53, p1106 * 263, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 248, p1106 * 38, p1106 * 99, p1106 * 69, p1106 * 103, p1106 * 154);
    v1449.closePath();
    f84(v1449, vVVUndefined21, p1108[0], p1106 * 11);
    v1449.translate(0, p1106 * -5);
    v1449.globalAlpha = 1;
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 103, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 98, p1106 * 119, p1106 * 264, p1106 * 119, p1106 * 264, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 271, p1106 * 189, p1106 * 94, p1106 * 188, p1106 * 103, p1106 * 154);
    v1449.closePath();
    f84(v1449, p1108[3], p1108[2], p1106 * 12);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 102, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 108, p1106 * 216.5, p1106 * 108, p1106 * 216.5, p1106 * 114, p1106 * 279);
    v1449.bezierCurveTo(p1106 * 124, p1106 * 300, p1106 * 237, p1106 * 299, p1106 * 251, p1106 * 279);
    v1449.bezierCurveTo(p1106 * 257, p1106 * 217, p1106 * 257, p1106 * 217, p1106 * 263, p1106 * 155);
    v1449.bezierCurveTo(p1106 * 248, p1106 * 194, p1106 * 91, p1106 * 180, p1106 * 103, p1106 * 156);
    v1449.closePath();
    f84(v1449, p1108[1], p1108[2], p1106 * 12);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 182, p1106 * 185);
    v1449.bezierCurveTo(p1106 * 182.5, p1106 * 237.5, p1106 * 182.5, p1106 * 237.5, p1106 * 183, p1106 * 290);
    v1449.closePath();
    f84(v1449, undefined, p1108[2], p1106 * 12);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 222, p1106 * 287);
    v1449.bezierCurveTo(p1106 * 226, p1106 * 233.5, p1106 * 226, p1106 * 233.5, p1106 * 230, p1106 * 180);
    v1449.closePath();
    f84(v1449, undefined, p1108[2], p1106 * 12);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 145, p1106 * 290);
    v1449.bezierCurveTo(p1106 * 140.5, p1106 * 237, p1106 * 140.5, p1106 * 237, p1106 * 136, p1106 * 184);
    v1449.closePath();
    f84(v1449, p1108[1], p1108[2], p1106 * 11);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 105, p1106 * 184);
    v1449.bezierCurveTo(p1106 * 148, p1106 * 205, p1106 * 231, p1106 * 202, p1106 * 260, p1106 * 182);
    v1449.bezierCurveTo(p1106 * 259, p1106 * 195.5, p1106 * 259, p1106 * 195.5, p1106 * 258, p1106 * 209);
    v1449.bezierCurveTo(p1106 * 217, p1106 * 218, p1106 * 163, p1106 * 225, p1106 * 108, p1106 * 207);
    v1449.closePath();
    f84(v1449, p1108[4], p1108[2], p1106 * 11);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 251, p1106 * 276);
    v1449.bezierCurveTo(p1106 * 251.5, p1106 * 267.5, p1106 * 251.5, p1106 * 267.5, p1106 * 252, p1106 * 259);
    v1449.bezierCurveTo(p1106 * 212, p1106 * 272, p1106 * 156, p1106 * 275, p1106 * 112, p1106 * 260);
    v1449.bezierCurveTo(p1106 * 112.5, p1106 * 269, p1106 * 112.5, p1106 * 269, p1106 * 113, p1106 * 278);
    v1449.bezierCurveTo(p1106 * 155, p1106 * 306, p1106 * 253, p1106 * 286, p1106 * 250, p1106 * 276);
    v1449.closePath();
    f84(v1449, p1108[4], p1108[2], p1106 * 11);
    v1449.beginPath();
    v1449.lineCap = "round";
    v1449.lineJoin = "round";
    v1449.moveTo(p1106 * 102, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 106, p1106 * 53, p1106 * 255, p1106 * 53, p1106 * 263, p1106 * 154);
    v1449.bezierCurveTo(p1106 * 248, p1106 * 38, p1106 * 99, p1106 * 69, p1106 * 103, p1106 * 154);
    v1449.closePath();
    f84(v1449, undefined, p1108[2], p1106 * 11);
    return v1448;
  }
  function f276(p1109, p1110, p1111) {
    var v1450 = document.createElement("canvas");
    var v1451 = v1450.getContext("2d");
    v1450.width = p1109 * 316;
    v1450.height = p1109 * 365;
    v1451.save();
    v1451.translate(p1109 * 156.07142639160156, p1109 * 51.81248474121094);
    v1451.rotate(0);
    f83(v1451, p1109 * -21.5, p1109 * -34, p1109 * 43, p1109 * 68, p1109 * 8);
    v1451.restore();
    f84(v1451, p1111[1], p1111[2], p1109 * 15);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1109 * 126.57142639160156, p1109 * 67.38392639160156);
    v1451.bezierCurveTo(p1109 * 126.57142639160156, p1109 * 57.38392639160156, p1109 * 132.57142639160156, p1109 * 54.38392639160156, p1109 * 140.57142639160156, p1109 * 54.38392639160156);
    v1451.bezierCurveTo(p1109 * 177.57142639160156, p1109 * 55.38392639160156, p1109 * 158.07142639160156, p1109 * 54.38392639160156, p1109 * 175.57142639160156, p1109 * 54.38392639160156);
    v1451.bezierCurveTo(p1109 * 185.57142639160156, p1109 * 56.38392639160156, p1109 * 185.57142639160156, p1109 * 57.38392639160156, p1109 * 184.57142639160156, p1109 * 66.38392639160156);
    v1451.bezierCurveTo(p1109 * 184.57142639160156, p1109 * 78.38392639160156, p1109 * 184.57142639160156, p1109 * 89.38392639160156, p1109 * 184.57142639160156, p1109 * 90.38392639160156);
    v1451.bezierCurveTo(p1109 * 177.57142639160156, p1109 * 107.38392639160156, p1109 * 180.57142639160156, p1109 * 112.38392639160156, p1109 * 189.57142639160156, p1109 * 116.38392639160156);
    v1451.bezierCurveTo(p1109 * 212.57142639160156, p1109 * 127.38392639160156, p1109 * 212.57142639160156, p1109 * 132.38392639160156, p1109 * 211.57142639160156, p1109 * 150.38392639160156);
    v1451.bezierCurveTo(p1109 * 211.57142639160156, p1109 * 227.59821128845215, p1109 * 211.57142639160156, p1109 * 227.59821128845215, p1109 * 211.57142639160156, p1109 * 304.81249618530273);
    v1451.bezierCurveTo(p1109 * 212.57142639160156, p1109 * 328.81249618530273, p1109 * 209.57142639160156, p1109 * 330.81249618530273, p1109 * 188.57142639160156, p1109 * 333.81249618530273);
    v1451.bezierCurveTo(p1109 * 155.07142639160156, p1109 * 333.31249618530273, p1109 * 155.07142639160156, p1109 * 333.31249618530273, p1109 * 121.57142639160156, p1109 * 332.81249618530273);
    v1451.bezierCurveTo(p1109 * 104.57142639160156, p1109 * 327.81249618530273, p1109 * 105.57142639160156, p1109 * 328.81249618530273, p1109 * 104.57142639160156, p1109 * 312.81249618530273);
    v1451.bezierCurveTo(p1109 * 104.57142639160156, p1109 * 228.16963958740234, p1109 * 104.57142639160156, p1109 * 228.16963958740234, p1109 * 104.57142639160156, p1109 * 143.52678298950195);
    v1451.bezierCurveTo(p1109 * 106.57142639160156, p1109 * 124.52678298950195, p1109 * 110.57142639160156, p1109 * 123.52678298950195, p1109 * 123.57142639160156, p1109 * 116.52678298950195);
    v1451.bezierCurveTo(p1109 * 136.57142639160156, p1109 * 110.52678298950195, p1109 * 130.57142639160156, p1109 * 106.52678298950195, p1109 * 126.57142639160156, p1109 * 98.52678298950195);
    v1451.closePath();
    f84(v1451, vVVUndefined212, p1111[5], p1109 * 15);
    v1451.beginPath();
    v1451.lineCap = "round";
    v1451.lineJoin = "round";
    v1451.moveTo(p1109 * 125.57142639160156, p1109 * 156.66963958740234);
    v1451.bezierCurveTo(p1109 * 125.57142639160156, p1109 * 182.66963958740234, p1109 * 125.57142639160156, p1109 * 182.66963958740234, p1109 * 125.57142639160156, p1109 * 208.66963958740234);
    v1451.closePath();
    f84(v1451, undefined, p1111[6], p1109 * 15);
    return v1450;
  }
  function f277(p1112, p1113) {
    var v1452 = document.createElement("canvas");
    var v1453 = v1452.getContext("2d");
    v1452.width = p1112 * 110;
    v1452.height = p1112 * 110;
    v1453.globalAlpha = 0.2;
    f89(v1453, p1112 * 55, p1112 * 55, p1112 * 55);
    f84(v1453, p1113[0]);
    return v1452;
  }
  function f278(p1114, p1115, p1116) {
    var v1454 = document.createElement("canvas");
    var v1455 = v1454.getContext("2d");
    v1454.width = p1114 * 109;
    v1454.height = p1114 * 110;
    f89(v1455, p1114 * 54.5, p1114 * 55, p1114 * 48.038209575038294);
    f84(v1455, p1115[0], p1115[1], p1114 * 8);
    if (p1116 == 0) {
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 54.928558349609375, p1114 * 43.72320556640625);
      v1455.bezierCurveTo(p1114 * 66.92855834960938, p1114 * 31.72320556640625, p1114 * 69.92855834960938, p1114 * 29.72320556640625, p1114 * 74.92855834960938, p1114 * 29.72320556640625);
      v1455.bezierCurveTo(p1114 * 86.92855834960938, p1114 * 28.72320556640625, p1114 * 91.92855834960938, p1114 * 42.72320556640625, p1114 * 89.92855834960938, p1114 * 52.72320556640625);
      v1455.bezierCurveTo(p1114 * 88.92855834960938, p1114 * 63.72320556640625, p1114 * 73.92855834960938, p1114 * 75.72320556640625, p1114 * 55.928558349609375, p1114 * 87.72320556640625);
      v1455.bezierCurveTo(p1114 * 37.928558349609375, p1114 * 78.72320556640625, p1114 * 26.928558349609375, p1114 * 65.72320556640625, p1114 * 19.928558349609375, p1114 * 54.72320556640625);
      v1455.bezierCurveTo(p1114 * 13.928558349609375, p1114 * 42.72320556640625, p1114 * 21.928558349609375, p1114 * 28.72320556640625, p1114 * 35.928558349609375, p1114 * 29.72320556640625);
      v1455.bezierCurveTo(p1114 * 45.928558349609375, p1114 * 31.72320556640625, p1114 * 51.928558349609375, p1114 * 40.72320556640625, p1114 * 53.928558349609375, p1114 * 44.72320556640625);
      v1455.closePath();
      f84(v1455, p1115[2]);
    } else if (p1116 == 1) {
      v1455.save();
      v1455.translate(p1114 * 55, p1114 * 39.48748779296875);
      f83(v1455, p1114 * -11.5, p1114 * -36, p1114 * 23, p1114 * 72, p1114 * 10);
      v1455.restore();
      f84(v1455, p1115[2], p1115[3], p1114 * 4);
      f89(v1455, p1114 * 54.5, p1114 * 78.48748779296875, p1114 * 22.02271554554524);
      f84(v1455, p1115[4], p1115[3], p1114 * 4);
      v1455.save();
      v1455.translate(p1114 * 55.5, p1114 * 57.287506103515625);
      f83(v1455, p1114 * -9, p1114 * -16, p1114 * 18, p1114 * 32, p1114 * 10);
      v1455.restore();
      f84(v1455, p1115[4]);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 66.5, p1114 * 25.287506103515625);
      v1455.bezierCurveTo(p1114 * 60.5, p1114 * 25.287506103515625, p1114 * 63.5, p1114 * 25.287506103515625, p1114 * 54.5, p1114 * 25.287506103515625);
      v1455.closePath();
      f84(v1455, undefined, p1115[5], p1114 * 4);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 66.5, p1114 * 37.287506103515625);
      v1455.bezierCurveTo(p1114 * 60.5, p1114 * 37.287506103515625, p1114 * 60.5, p1114 * 37.287506103515625, p1114 * 54.5, p1114 * 37.287506103515625);
      v1455.closePath();
      f84(v1455, vVVVUndefined212, p1115[5], p1114 * 4);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 66.5, p1114 * 50.287506103515625);
      v1455.bezierCurveTo(p1114 * 61, p1114 * 50.287506103515625, p1114 * 61, p1114 * 50.287506103515625, p1114 * 55.5, p1114 * 50.287506103515625);
      v1455.closePath();
      f84(v1455, vVVVUndefined202, p1115[5], p1114 * 4);
    } else if (p1116 == 2) {
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 45.928558349609375, p1114 * 55.29463195800781);
      v1455.bezierCurveTo(p1114 * 38.928558349609375, p1114 * 67.29463195800781, p1114 * 38.928558349609375, p1114 * 67.29463195800781, p1114 * 31.928558349609375, p1114 * 79.29463195800781);
      v1455.bezierCurveTo(p1114 * 15.928558349609375, p1114 * 85.29463195800781, p1114 * 17.928558349609375, p1114 * 86.29463195800781, p1114 * 17.928558349609375, p1114 * 90.29463195800781);
      v1455.bezierCurveTo(p1114 * 19.928558349609375, p1114 * 94.29463195800781, p1114 * 21.928558349609375, p1114 * 94.29463195800781, p1114 * 27.928558349609375, p1114 * 92.29463195800781);
      v1455.bezierCurveTo(p1114 * 29.928558349609375, p1114 * 98.29463195800781, p1114 * 30.928558349609375, p1114 * 99.29463195800781, p1114 * 33.928558349609375, p1114 * 99.29463195800781);
      v1455.bezierCurveTo(p1114 * 38.928558349609375, p1114 * 97.29463195800781, p1114 * 38.928558349609375, p1114 * 93.29463195800781, p1114 * 37.928558349609375, p1114 * 86.29463195800781);
      v1455.bezierCurveTo(p1114 * 45.428558349609375, p1114 * 73.29463195800781, p1114 * 51.928558349609375, p1114 * 64.29463195800781, p1114 * 52.928558349609375, p1114 * 60.29463195800781);
      v1455.closePath();
      f84(v1455, p1115[2]);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 55.928558349609375, p1114 * 8.866058349609375);
      v1455.bezierCurveTo(p1114 * 35.928558349609375, p1114 * 35.866058349609375, p1114 * 37.928558349609375, p1114 * 48.866058349609375, p1114 * 46.928558349609375, p1114 * 62.866058349609375);
      v1455.bezierCurveTo(p1114 * 65.92855834960938, p1114 * 72.86605834960938, p1114 * 80.92855834960938, p1114 * 55.866058349609375, p1114 * 93.92855834960938, p1114 * 36.866058349609375);
      v1455.closePath();
      f84(v1455, p1115[3], p1115[4], p1114 * 6);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 93.92855834960938, p1114 * 36.866058349609375);
      v1455.bezierCurveTo(p1114 * 82.92855834960938, p1114 * 37.866058349609375, p1114 * 77.92855834960938, p1114 * 36.866058349609375, p1114 * 67.92855834960938, p1114 * 28.866058349609375);
      v1455.bezierCurveTo(p1114 * 53.928558349609375, p1114 * 16.866058349609375, p1114 * 53.928558349609375, p1114 * 14.866058349609375, p1114 * 55.928558349609375, p1114 * 7.866058349609375);
      v1455.bezierCurveTo(p1114 * 65.92855834960938, p1114 * 4.866058349609375, p1114 * 71.92855834960938, p1114 * 7.866058349609375, p1114 * 83.92855834960938, p1114 * 13.866058349609375);
      v1455.bezierCurveTo(p1114 * 96.92855834960938, p1114 * 21.866058349609375, p1114 * 95.92855834960938, p1114 * 31.866058349609375, p1114 * 92.92855834960938, p1114 * 36.866058349609375);
      v1455.closePath();
      f84(v1455, p1115[3], p1115[4], p1114 * 6);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 68.92855834960938, p1114 * 16.866058349609375);
      v1455.bezierCurveTo(p1114 * 71.92855834960938, p1114 * 13.866058349609375, p1114 * 76.92855834960938, p1114 * 16.866058349609375, p1114 * 79.92855834960938, p1114 * 21.866058349609375);
      v1455.bezierCurveTo(p1114 * 82.92855834960938, p1114 * 24.866058349609375, p1114 * 81.92855834960938, p1114 * 27.866058349609375, p1114 * 73.92855834960938, p1114 * 24.866058349609375);
      v1455.bezierCurveTo(p1114 * 67.92855834960938, p1114 * 20.866058349609375, p1114 * 66.92855834960938, p1114 * 19.866058349609375, p1114 * 67.92855834960938, p1114 * 17.866058349609375);
      v1455.closePath();
      f84(v1455, p1115[2]);
    } else if (p1116 == 3) {
      v1455.scale(0.9, 0.9);
      v1455.translate(p1114 * 6, 0);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 54, p1114 * 0.421875);
      v1455.bezierCurveTo(p1114 * 84, p1114 * 45.421875, p1114 * 89, p1114 * 51.421875, p1114 * 83, p1114 * 74.421875);
      v1455.bezierCurveTo(p1114 * 74, p1114 * 95.421875, p1114 * 46, p1114 * 98.421875, p1114 * 30, p1114 * 78.421875);
      v1455.bezierCurveTo(p1114 * 22, p1114 * 59.421875, p1114 * 27, p1114 * 49.421875, p1114 * 34, p1114 * 36.421875);
      v1455.closePath();
      f84(v1455, p1115[2], p1115[3], p1114 * 6);
      v1455.beginPath();
      v1455.lineCap = "round";
      v1455.lineJoin = "round";
      v1455.moveTo(p1114 * 74, p1114 * 52.421875);
      v1455.bezierCurveTo(p1114 * 77, p1114 * 73.421875, p1114 * 69, p1114 * 81.421875, p1114 * 58, p1114 * 81.421875);
      v1455.bezierCurveTo(p1114 * 66, p1114 * 71.421875, p1114 * 70, p1114 * 66.421875, p1114 * 74, p1114 * 52.421875);
      v1455.closePath();
      f84(v1455, p1115[3]);
    }
    return v1454;
  }
  function f279(p1117, p1118, p1119) {
    var v1456 = document.createElement("canvas");
    var v1457 = v1456.getContext("2d");
    v1456.width = p1117 * 400;
    v1456.height = p1117 * 170;
    v1457.translate(0, p1117 * -170);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1117 * 159.5, p1117 * 322.0625);
    v1457.bezierCurveTo(p1117 * 240.5, p1117 * 293.0625, p1117 * 240.5, p1117 * 293.0625, p1117 * 321.5, p1117 * 264.0625);
    v1457.bezierCurveTo(p1117 * 276.5, p1117 * 230.0625, p1117 * 276.5, p1117 * 230.0625, p1117 * 231.5, p1117 * 196.0625);
    v1457.bezierCurveTo(p1117 * 158.5, p1117 * 221.5625, p1117 * 158.5, p1117 * 221.5625, p1117 * 85.5, p1117 * 247.0625);
    v1457.closePath();
    f84(v1457, p1119[0], p1119[1], p1117 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1117 * 212.5, p1117 * 270.0625);
    v1457.bezierCurveTo(p1117 * 235, p1117 * 261.5625, p1117 * 235, p1117 * 261.5625, p1117 * 257.5, p1117 * 253.0625);
    v1457.closePath();
    f84(v1457, vVVVUndefined117, p1119[0], p1117 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1117 * 193.5, p1117 * 226.0625);
    v1457.bezierCurveTo(p1117 * 204.5, p1117 * 242.0625, p1117 * 242.5, p1117 * 237.0625, p1117 * 251.5, p1117 * 225.0625);
    v1457.bezierCurveTo(p1117 * 246.5, p1117 * 195.0625, p1117 * 205.5, p1117 * 190.0625, p1117 * 193.5, p1117 * 227.0625);
    v1457.closePath();
    f84(v1457, p1119[2], p1119[3], p1117 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1117 * 164.5, p1117 * 245.0625);
    v1457.bezierCurveTo(p1117 * 182.5, p1117 * 264.0625, p1117 * 252.5, p1117 * 258.0625, p1117 * 276.5, p1117 * 244.0625);
    v1457.bezierCurveTo(p1117 * 265.5, p1117 * 226.0625, p1117 * 244.5, p1117 * 231.0625, p1117 * 229.5, p1117 * 230.0625);
    v1457.bezierCurveTo(p1117 * 205.5, p1117 * 227.0625, p1117 * 175.5, p1117 * 202.0625, p1117 * 162.5, p1117 * 244.0625);
    v1457.closePath();
    f84(v1457, p1119[2], p1119[3], p1117 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1117 * 115.5, p1117 * 260.0625);
    v1457.bezierCurveTo(p1117 * 134.5, p1117 * 279.0625, p1117 * 170.5, p1117 * 275.0625, p1117 * 191.5, p1117 * 257.0625);
    v1457.bezierCurveTo(p1117 * 174.5, p1117 * 208.0625, p1117 * 142.5, p1117 * 197.0625, p1117 * 116.5, p1117 * 259.0625);
    v1457.closePath();
    f84(v1457, p1119[2], p1119[3], p1117 * 12);
    v1457.beginPath();
    v1457.lineCap = "round";
    v1457.lineJoin = "round";
    v1457.moveTo(p1117 * 152.5, p1117 * 278.0625);
    v1457.bezierCurveTo(p1117 * 165.5, p1117 * 294.0625, p1117 * 200.5, p1117 * 287.0625, p1117 * 216.5, p1117 * 278.0625);
    v1457.bezierCurveTo(p1117 * 206.5, p1117 * 247.0625, p1117 * 173.5, p1117 * 233.0625, p1117 * 153.5, p1117 * 276.0625);
    v1457.closePath();
    f84(v1457, p1119[2], p1119[3], p1117 * 12);
    return v1456;
  }
  function f280(p1120, p1121, p1122) {
    var v1458 = document.createElement("canvas");
    var v1459 = v1458.getContext("2d");
    v1458.width = p1120 * 163;
    v1458.height = p1120 * 163;
    v1459.save();
    v1459.translate(p1120 * 82.5, p1120 * 81.1015625);
    v1459.rotate(0);
    f83(v1459, p1120 * -65.5, p1120 * -66, p1120 * 131, p1120 * 131, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[1]);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 80, p1120 * 17.1015625);
    f83(v1459, p1120 * -64, p1120 * -4.5, p1120 * 129, p1120 * 9, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 80, p1120 * 17.1015625);
    f83(v1459, p1120 * -64, p1120 * -4.5, p1120 * 129, p1120 * 9, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 145.5, p1120 * 83.6015625);
    f83(v1459, p1120 * -4.5, p1120 * -61, p1120 * 9, p1120 * 129, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 145.5, p1120 * 83.6015625);
    f83(v1459, p1120 * -4.5, p1120 * -61, p1120 * 9, p1120 * 129, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 17.5, p1120 * 82.6015625);
    f83(v1459, p1120 * -4.5, p1120 * -65, p1120 * 9, p1120 * 129, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 17.5, p1120 * 82.6015625);
    f83(v1459, p1120 * -4.5, p1120 * -65, p1120 * 9, p1120 * 129, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 80.5, p1120 * 145.6015625);
    f83(v1459, p1120 * -65.5, p1120 * -4, p1120 * 129, p1120 * 9, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 80.5, p1120 * 145.6015625);
    f83(v1459, p1120 * -65.5, p1120 * -4, p1120 * 129, p1120 * 9, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 17, p1120 * 18.1015625);
    f83(v1459, p1120 * -11, p1120 * -11.5, p1120 * 22, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 17, p1120 * 18.1015625);
    f83(v1459, p1120 * -11, p1120 * -11.5, p1120 * 22, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 145.5, p1120 * 16.6015625);
    f83(v1459, p1120 * -10.5, p1120 * -11.5, p1120 * 21, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 145.5, p1120 * 16.6015625);
    f83(v1459, p1120 * -10.5, p1120 * -11.5, p1120 * 21, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 145.5, p1120 * 144.1015625);
    f83(v1459, p1120 * -10.5, p1120 * -11, p1120 * 22, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 145.5, p1120 * 144.1015625);
    f83(v1459, p1120 * -10.5, p1120 * -11, p1120 * 22, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    v1459.globalAlpha = p1121 ? 0.5 : 1;
    v1459.translate(p1120 * 5, p1120 * 5);
    v1459.save();
    v1459.translate(p1120 * 17.5, p1120 * 145.1015625);
    f83(v1459, p1120 * -11.5, p1120 * -12, p1120 * 22, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[0]);
    v1459.globalAlpha = 1;
    v1459.translate(p1120 * -5, p1120 * -5);
    v1459.save();
    v1459.translate(p1120 * 17.5, p1120 * 145.1015625);
    f83(v1459, p1120 * -11.5, p1120 * -12, p1120 * 22, p1120 * 22, p1120 * 5);
    v1459.restore();
    f84(v1459, p1122[2], p1122[3], p1120 * 3);
    return v1458;
  }
  function f281(p1123, p1124, p1125) {
    var v1460 = document.createElement("canvas");
    var v1461 = v1460.getContext("2d");
    v1460.width = p1123 * 80;
    v1460.height = p1123 * 160;
    v1461.globalAlpha = p1124 ? 0.5 : 1;
    v1461.translate(p1123 * 5, p1123 * 5);
    v1461.save();
    f83(v1461, p1123 * 33, p1123 * 53, p1123 * 10, p1123 * 98, p1123 * 10);
    f84(v1461, p1125[0]);
    v1461.beginPath();
    v1461.lineCap = "round";
    v1461.lineJoin = "round";
    v1461.translate(p1123 * -150, p1123 * -100);
    v1461.moveTo(p1123 * 167.5, p1123 * 171.0625);
    v1461.bezierCurveTo(p1123 * 188, p1123 * 171.0625, p1123 * 188, p1123 * 171.0625, p1123 * 208.5, p1123 * 171.0625);
    v1461.bezierCurveTo(p1123 * 208.5, p1123 * 156.0625, p1123 * 208.5, p1123 * 156.0625, p1123 * 208.5, p1123 * 141.0625);
    v1461.bezierCurveTo(p1123 * 203.5, p1123 * 113.0625, p1123 * 179.5, p1123 * 96.0625, p1123 * 167.5, p1123 * 141.0625);
    v1461.closePath();
    f84(v1461, p1125[0]);
    v1461.restore();
    v1461.globalAlpha = 1;
    v1461.translate(p1123 * -5, p1123 * -5);
    v1461.save();
    f83(v1461, p1123 * 33, p1123 * 53, p1123 * 10, p1123 * 98, p1123 * 10);
    f84(v1461, p1125[1], p1125[2], p1123 * 4);
    v1461.beginPath();
    v1461.lineCap = "round";
    v1461.lineJoin = "round";
    v1461.translate(p1123 * -150, p1123 * -100);
    v1461.moveTo(p1123 * 167.5, p1123 * 171.0625);
    v1461.bezierCurveTo(p1123 * 188, p1123 * 171.0625, p1123 * 188, p1123 * 171.0625, p1123 * 208.5, p1123 * 171.0625);
    v1461.bezierCurveTo(p1123 * 208.5, p1123 * 156.0625, p1123 * 208.5, p1123 * 156.0625, p1123 * 208.5, p1123 * 141.0625);
    v1461.bezierCurveTo(p1123 * 203.5, p1123 * 113.0625, p1123 * 179.5, p1123 * 96.0625, p1123 * 167.5, p1123 * 141.0625);
    v1461.closePath();
    f84(v1461, p1125[3], p1125[4], p1123 * 4);
    v1461.beginPath();
    v1461.lineCap = "round";
    v1461.lineJoin = "round";
    v1461.translate(p1123 * 0, p1123 * 1);
    v1461.moveTo(p1123 * 180.5, p1123 * 169.0625);
    v1461.bezierCurveTo(p1123 * 180.5, p1123 * 157.5625, p1123 * 180.5, p1123 * 157.5625, p1123 * 180.5, p1123 * 146.0625);
    v1461.bezierCurveTo(p1123 * 181.5, p1123 * 134.0625, p1123 * 193.5, p1123 * 129.0625, p1123 * 196.5, p1123 * 146.0625);
    v1461.bezierCurveTo(p1123 * 196.5, p1123 * 157.5625, p1123 * 196.5, p1123 * 157.5625, p1123 * 196.5, p1123 * 169.0625);
    v1461.closePath();
    f84(v1461, p1125[5]);
    v1461.restore();
    return v1460;
  }
  function f282(p1126, p1127, p1128) {
    var v1462 = document.createElement("canvas");
    var v1463 = v1462.getContext("2d");
    v1462.width = p1126 * 400;
    v1462.height = p1126 * 400;
    v1463.translate(0, p1126 * 15);
    v1463.globalAlpha = p1127 ? 0.5 : 1;
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 102, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 108, p1126 * 216.5, p1126 * 108, p1126 * 216.5, p1126 * 114, p1126 * 279);
    v1463.bezierCurveTo(p1126 * 124, p1126 * 300, p1126 * 237, p1126 * 299, p1126 * 251, p1126 * 279);
    v1463.bezierCurveTo(p1126 * 257, p1126 * 217, p1126 * 257, p1126 * 217, p1126 * 263, p1126 * 155);
    v1463.bezierCurveTo(p1126 * 248, p1126 * 194, p1126 * 91, p1126 * 180, p1126 * 103, p1126 * 156);
    v1463.closePath();
    f84(v1463, p1128[0]);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 102, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 106, p1126 * 53, p1126 * 255, p1126 * 53, p1126 * 263, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 248, p1126 * 38, p1126 * 99, p1126 * 69, p1126 * 103, p1126 * 154);
    v1463.closePath();
    f84(v1463, undefined, p1128[0], p1126 * 11);
    v1463.translate(0, p1126 * -5);
    v1463.globalAlpha = 1;
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 103, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 98, p1126 * 119, p1126 * 264, p1126 * 119, p1126 * 264, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 271, p1126 * 189, p1126 * 94, p1126 * 188, p1126 * 103, p1126 * 154);
    v1463.closePath();
    f84(v1463, p1128[3], p1128[2], p1126 * 12);
    v1463.translate(0, p1126 * 25);
    v1463.globalAlpha = 1;
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 103, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 98, p1126 * 119, p1126 * 264, p1126 * 119, p1126 * 264, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 271, p1126 * 189, p1126 * 94, p1126 * 188, p1126 * 103, p1126 * 154);
    v1463.closePath();
    f84(v1463, p1128[5]);
    v1463.translate(0, p1126 * -25);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 102, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 108, p1126 * 216.5, p1126 * 108, p1126 * 216.5, p1126 * 114, p1126 * 279);
    v1463.bezierCurveTo(p1126 * 124, p1126 * 300, p1126 * 237, p1126 * 299, p1126 * 251, p1126 * 279);
    v1463.bezierCurveTo(p1126 * 257, p1126 * 217, p1126 * 257, p1126 * 217, p1126 * 263, p1126 * 155);
    v1463.bezierCurveTo(p1126 * 248, p1126 * 194, p1126 * 91, p1126 * 180, p1126 * 103, p1126 * 156);
    v1463.closePath();
    f84(v1463, p1128[1], p1128[2], p1126 * 12);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 182, p1126 * 185);
    v1463.bezierCurveTo(p1126 * 182.5, p1126 * 237.5, p1126 * 182.5, p1126 * 237.5, p1126 * 183, p1126 * 290);
    v1463.closePath();
    f84(v1463, vVUndefined21, p1128[2], p1126 * 12);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 222, p1126 * 287);
    v1463.bezierCurveTo(p1126 * 226, p1126 * 233.5, p1126 * 226, p1126 * 233.5, p1126 * 230, p1126 * 180);
    v1463.closePath();
    f84(v1463, vVUndefined21, p1128[2], p1126 * 12);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 145, p1126 * 290);
    v1463.bezierCurveTo(p1126 * 140.5, p1126 * 237, p1126 * 140.5, p1126 * 237, p1126 * 136, p1126 * 184);
    v1463.closePath();
    f84(v1463, p1128[1], p1128[2], p1126 * 11);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 105, p1126 * 184);
    v1463.bezierCurveTo(p1126 * 148, p1126 * 205, p1126 * 231, p1126 * 202, p1126 * 260, p1126 * 182);
    v1463.bezierCurveTo(p1126 * 259, p1126 * 195.5, p1126 * 259, p1126 * 195.5, p1126 * 258, p1126 * 209);
    v1463.bezierCurveTo(p1126 * 217, p1126 * 218, p1126 * 163, p1126 * 225, p1126 * 108, p1126 * 207);
    v1463.closePath();
    f84(v1463, p1128[4], p1128[2], p1126 * 11);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 251, p1126 * 276);
    v1463.bezierCurveTo(p1126 * 251.5, p1126 * 267.5, p1126 * 251.5, p1126 * 267.5, p1126 * 252, p1126 * 259);
    v1463.bezierCurveTo(p1126 * 212, p1126 * 272, p1126 * 156, p1126 * 275, p1126 * 112, p1126 * 260);
    v1463.bezierCurveTo(p1126 * 112.5, p1126 * 269, p1126 * 112.5, p1126 * 269, p1126 * 113, p1126 * 278);
    v1463.bezierCurveTo(p1126 * 155, p1126 * 306, p1126 * 253, p1126 * 286, p1126 * 250, p1126 * 276);
    v1463.closePath();
    f84(v1463, p1128[4], p1128[2], p1126 * 11);
    v1463.beginPath();
    v1463.lineCap = "round";
    v1463.lineJoin = "round";
    v1463.moveTo(p1126 * 102, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 106, p1126 * 53, p1126 * 255, p1126 * 53, p1126 * 263, p1126 * 154);
    v1463.bezierCurveTo(p1126 * 248, p1126 * 38, p1126 * 99, p1126 * 69, p1126 * 103, p1126 * 154);
    v1463.closePath();
    f84(v1463, vVVUndefined117, p1128[2], p1126 * 11);
    return v1462;
  }
  const v1464 = 4;
  function f283() {
    ⵠΔ[814] = f120(1, [{
      f: f265,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[815] = ⵠΔ[814];
    ⵠΔ[955] = [];
    ⵠΔ[955][0] = Δⵠ.ᐃᐃΔⵠⲆᐃᐃ;
    ⵠΔ[955][1] = Δⵠ.ΔⵠΔⵠⲆᐃᐃ;
    ⵠΔ[955][2] = Δⵠ.ΔΔⵠⲆΔΔⵠ;
    ⵠΔ[956] = ⵠΔ[955];
    ⵠΔ[972] = [];
    ⵠΔ[972][0] = Δⵠ.ⲆᐃΔΔⲆⵠΔ;
    ⵠΔ[972][1] = Δⵠ.ᐃΔᐃᐃᐃⵠΔ;
    ⵠΔ[972][2] = Δⵠ.ΔΔⲆᐃⵠΔΔ;
    ⵠΔ[973] = ⵠΔ[972];
    ⵠΔ[987] = [];
    ⵠΔ[987][0] = Δⵠ.ᐃⵠΔΔΔΔᐃ;
    ⵠΔ[987][1] = Δⵠ.ΔΔⵠᐃΔⵠⲆ;
    ⵠΔ[987][2] = Δⵠ.ⵠΔⵠⵠⲆΔΔ;
    ⵠΔ[988] = ⵠΔ[987];
    ⵠΔ[1154] = [];
    ⵠΔ[1154][0] = Δⵠ.ⲆΔΔᐃᐃᐃⵠ;
    ⵠΔ[1154][1] = Δⵠ.ᐃᐃⵠᐃᐃⵠᐃ;
    ⵠΔ[1154][2] = Δⵠ.ⲆΔⵠⵠⵠΔᐃ;
    ⵠΔ[1155] = ⵠΔ[1154];
    ⵠΔ[965] = [];
    ⵠΔ[965][0] = Δⵠ.ᐃᐃⵠΔᐃⲆΔ;
    ⵠΔ[965][1] = Δⵠ.ΔᐃΔⵠⵠᐃⲆ;
    ⵠΔ[965][2] = Δⵠ.ᐃⲆⲆⲆᐃⲆΔ;
    ⵠΔ[974] = ⵠΔ[965];
    ⵠΔ[1028] = [];
    ⵠΔ[1028][0] = Δⵠ.ΔΔΔⲆᐃΔΔ;
    ⵠΔ[1028][1] = Δⵠ.ᐃᐃⵠᐃᐃᐃᐃ;
    ⵠΔ[1028][2] = Δⵠ.ⲆⲆΔⵠΔᐃⵠ;
    ⵠΔ[1029] = ⵠΔ[1028];
    ⵠΔ[1027] = ⵠΔ[1028];
    ⵠΔ[712] = [];
    ⵠΔ[712][0] = Δⵠ.ᐃⲆⲆⲆΔⵠⵠΔⲆ;
    ⵠΔ[712][1] = Δⵠ.ΔᐃⵠⲆΔⲆⲆⵠΔ;
    ⵠΔ[712][2] = Δⵠ.ⵠⵠᐃᐃΔᐃⲆᐃΔ;
    ⵠΔ[713] = ⵠΔ[712];
    ⵠΔ[714] = ⵠΔ[712];
    ⵠΔ[1031] = [];
    ⵠΔ[1031][0] = Δⵠ.ⲆΔⵠΔᐃⵠⵠ;
    ⵠΔ[1031][1] = Δⵠ.ⵠᐃᐃⵠᐃⲆⵠ;
    ⵠΔ[1031][2] = Δⵠ.ⲆⲆⵠⲆⲆᐃᐃ;
    ⵠΔ[1032] = ⵠΔ[1031];
    ⵠΔ[1030] = ⵠΔ[1031];
    ⵠΔ[423] = [];
    ⵠΔ[423][0] = Δⵠ.ΔΔⲆΔΔΔΔ;
    ⵠΔ[423][1] = Δⵠ.ᐃᐃᐃΔⵠⲆΔ;
    ⵠΔ[423][2] = Δⵠ.ΔⲆᐃⲆⲆⵠⲆ;
    ⵠΔ[425] = ⵠΔ[423];
    ⵠΔ[424] = ⵠΔ[423];
    ⵠΔ[1233] = [];
    ⵠΔ[1233][0] = Δⵠ.ᐃⲆⵠΔᐃΔΔ;
    ⵠΔ[1233][1] = Δⵠ.ⵠΔⲆᐃⲆΔᐃ;
    ⵠΔ[1233][2] = Δⵠ.ⲆᐃΔⲆⵠⵠⲆ;
    ⵠΔ[1234] = ⵠΔ[1233];
    ⵠΔ[1230] = [];
    ⵠΔ[1230][0] = Δⵠ.ΔᐃᐃᐃⲆⵠΔ;
    ⵠΔ[1230][1] = Δⵠ.ⵠⲆΔⲆⲆΔⲆ;
    ⵠΔ[1230][2] = Δⵠ.ⲆⲆⲆΔᐃᐃⲆ;
    ⵠΔ[1232] = ⵠΔ[1230];
    ⵠΔ[1231] = ⵠΔ[1230];
    ⵠΔ[569] = [];
    ⵠΔ[569][0] = Δⵠ.ΔΔᐃᐃΔⵠᐃ;
    ⵠΔ[569][1] = Δⵠ.ⲆᐃᐃᐃⵠΔΔ;
    ⵠΔ[569][2] = Δⵠ.ΔⵠⵠΔΔⲆⵠ;
    ⵠΔ[571] = ⵠΔ[569];
    ⵠΔ[570] = ⵠΔ[569];
    ⵠΔ[1166] = [];
    ⵠΔ[1166][0] = Δⵠ.ⲆⲆⲆⵠⵠⵠᐃ;
    ⵠΔ[1166][1] = Δⵠ.ⵠΔᐃΔᐃⵠⲆ;
    ⵠΔ[1166][2] = Δⵠ.ΔᐃⵠΔⲆⲆᐃ;
    ⵠΔ[1167] = ⵠΔ[1166];
    ⵠΔ[1168] = ⵠΔ[1166];
    ⵠΔ[572] = [];
    ⵠΔ[572][0] = Δⵠ.Ⲇᐃᐃᐃᐃᐃⵠ;
    ⵠΔ[572][1] = Δⵠ.ΔⲆΔⲆΔᐃᐃ;
    ⵠΔ[572][2] = Δⵠ.ᐃᐃⲆⲆΔᐃᐃ;
    ⵠΔ[574] = ⵠΔ[572];
    ⵠΔ[573] = ⵠΔ[572];
    ⵠΔ[1169] = [];
    ⵠΔ[1169][0] = Δⵠ.ᐃΔΔΔᐃΔᐃ;
    ⵠΔ[1169][1] = Δⵠ.ⵠⲆΔⲆⵠᐃⲆ;
    ⵠΔ[1169][2] = Δⵠ.ᐃⵠⲆⲆⵠᐃΔ;
    ⵠΔ[1170] = ⵠΔ[1169];
    ⵠΔ[1171] = ⵠΔ[1169];
    ⵠΔ[575] = [];
    ⵠΔ[575][0] = Δⵠ.ᐃⵠΔᐃᐃᐃⵠ;
    ⵠΔ[575][1] = Δⵠ.ⲆⵠᐃΔⵠⲆⲆ;
    ⵠΔ[575][2] = Δⵠ.ᐃᐃᐃⵠᐃᐃⲆ;
    ⵠΔ[577] = ⵠΔ[575];
    ⵠΔ[576] = ⵠΔ[575];
    ⵠΔ[1172] = [];
    ⵠΔ[1172][0] = Δⵠ.ᐃⵠΔⲆΔᐃⵠΔᐃ;
    ⵠΔ[1172][1] = Δⵠ.ⵠⵠⲆΔᐃΔⲆⲆΔ;
    ⵠΔ[1172][2] = Δⵠ.ΔᐃⲆΔΔΔⲆΔᐃ;
    ⵠΔ[1173] = ⵠΔ[1172];
    ⵠΔ[1174] = ⵠΔ[1172];
    ⵠΔ[578] = [];
    ⵠΔ[578][0] = Δⵠ.ⲆΔΔⲆΔⲆᐃΔⵠ;
    ⵠΔ[578][1] = Δⵠ.ᐃᐃⲆΔⵠᐃΔⵠⵠ;
    ⵠΔ[578][2] = Δⵠ.ⲆⲆⵠΔⲆᐃᐃⵠΔ;
    ⵠΔ[580] = ⵠΔ[578];
    ⵠΔ[579] = ⵠΔ[578];
    ⵠΔ[1175] = [];
    ⵠΔ[1175][0] = Δⵠ.ᐃⵠⲆΔⲆⲆᐃᐃⲆ;
    ⵠΔ[1175][1] = Δⵠ.ΔΔΔᐃⲆᐃⵠΔⲆ;
    ⵠΔ[1175][2] = Δⵠ.ⵠⵠΔⵠΔΔΔⲆᐃ;
    ⵠΔ[1176] = ⵠΔ[1175];
    ⵠΔ[1177] = ⵠΔ[1175];
    ⵠΔ[581] = [];
    ⵠΔ[581][0] = Δⵠ.ⵠΔᐃΔⵠⲆΔΔᐃ;
    ⵠΔ[581][1] = Δⵠ.ⲆᐃⲆⵠⵠⵠΔⵠᐃ;
    ⵠΔ[581][2] = Δⵠ.ⵠⵠⵠᐃΔΔᐃΔᐃ;
    ⵠΔ[583] = ⵠΔ[581];
    ⵠΔ[582] = ⵠΔ[581];
    ⵠΔ[1178] = [];
    ⵠΔ[1178][0] = Δⵠ.ΔⲆᐃⲆᐃⵠⲆΔⵠ;
    ⵠΔ[1178][1] = Δⵠ.ΔᐃΔⲆΔⵠᐃᐃⵠ;
    ⵠΔ[1178][2] = Δⵠ.ᐃⵠⵠᐃΔᐃᐃᐃⵠ;
    ⵠΔ[1179] = ⵠΔ[1178];
    ⵠΔ[1180] = ⵠΔ[1178];
    ⵠΔ[584] = [];
    ⵠΔ[584][0] = Δⵠ.ⵠⵠⵠⲆⲆⵠⲆⲆΔ;
    ⵠΔ[584][1] = Δⵠ.ΔᐃⵠⲆⵠΔᐃᐃⲆ;
    ⵠΔ[584][2] = Δⵠ.ⵠⲆΔΔᐃΔᐃⲆΔ;
    ⵠΔ[586] = ⵠΔ[584];
    ⵠΔ[585] = ⵠΔ[584];
    ⵠΔ[1181] = [];
    ⵠΔ[1181][0] = Δⵠ.ⵠⵠΔⵠΔⲆⲆᐃΔ;
    ⵠΔ[1181][1] = Δⵠ.ⵠⲆᐃⵠΔⵠⵠΔᐃ;
    ⵠΔ[1181][2] = Δⵠ.ⵠⵠᐃᐃΔΔⵠΔᐃ;
    ⵠΔ[1182] = ⵠΔ[1181];
    ⵠΔ[1183] = ⵠΔ[1181];
    ⵠΔ[587] = [];
    ⵠΔ[587][0] = Δⵠ.ⵠⵠΔΔΔᐃⵠᐃⲆ;
    ⵠΔ[587][1] = Δⵠ.ⵠⲆΔᐃⲆΔⵠⵠᐃ;
    ⵠΔ[587][2] = Δⵠ.ⵠᐃΔᐃΔⵠⵠᐃⲆ;
    ⵠΔ[589] = ⵠΔ[587];
    ⵠΔ[588] = ⵠΔ[587];
    ⵠΔ[1184] = [];
    ⵠΔ[1184][0] = Δⵠ.ᐃΔΔΔⵠⲆⲆⲆⵠ;
    ⵠΔ[1184][1] = Δⵠ.ΔⲆΔⵠⵠᐃᐃⵠᐃ;
    ⵠΔ[1184][2] = Δⵠ.ⲆⵠⲆⵠⲆᐃᐃΔⲆ;
    ⵠΔ[1185] = ⵠΔ[1184];
    ⵠΔ[1186] = ⵠΔ[1184];
    ⵠΔ[1257] = [];
    ⵠΔ[1257][0] = Δⵠ.ⵠΔΔⵠᐃⲆΔⲆⲆ;
    ⵠΔ[1257][1] = Δⵠ.ⵠⲆⵠᐃᐃⲆᐃᐃⲆ;
    ⵠΔ[1257][2] = Δⵠ.ⵠΔⵠΔΔᐃᐃⵠⲆ;
    ⵠΔ[1258] = ⵠΔ[1257];
    ⵠΔ[1256] = ⵠΔ[1257];
    ⵠΔ[1260] = [];
    ⵠΔ[1260][0] = Δⵠ.ᐃᐃΔᐃᐃΔΔⵠᐃ;
    ⵠΔ[1260][1] = Δⵠ.ΔΔⲆᐃΔΔⲆⲆⵠ;
    ⵠΔ[1260][2] = Δⵠ.ΔⲆⲆᐃⵠⵠΔΔΔ;
    ⵠΔ[1261] = ⵠΔ[1260];
    ⵠΔ[1259] = ⵠΔ[1260];
    ⵠΔ[1263] = [];
    ⵠΔ[1263][0] = Δⵠ.ᐃⲆⲆᐃⲆⲆⲆΔⲆ;
    ⵠΔ[1263][1] = Δⵠ.ⲆⲆΔᐃⵠᐃⵠᐃΔ;
    ⵠΔ[1263][2] = Δⵠ.ⵠⵠΔⵠⲆᐃⲆᐃⲆ;
    ⵠΔ[1264] = ⵠΔ[1263];
    ⵠΔ[1262] = ⵠΔ[1263];
    ⵠΔ[1266] = [];
    ⵠΔ[1266][0] = Δⵠ.ⵠⲆΔⵠᐃᐃᐃⵠΔ;
    ⵠΔ[1266][1] = Δⵠ.ΔΔⲆᐃᐃᐃⲆⵠⲆ;
    ⵠΔ[1266][2] = Δⵠ.ΔⲆⲆΔΔΔᐃⲆΔ;
    ⵠΔ[1267] = ⵠΔ[1266];
    ⵠΔ[1265] = ⵠΔ[1266];
    ⵠΔ[1269] = [];
    ⵠΔ[1269][0] = Δⵠ.ⵠⵠᐃⵠⲆᐃᐃⵠΔ;
    ⵠΔ[1269][1] = Δⵠ.ΔΔⲆᐃΔᐃΔⵠⵠ;
    ⵠΔ[1269][2] = Δⵠ.ᐃΔᐃᐃΔᐃᐃᐃΔ;
    ⵠΔ[1270] = ⵠΔ[1269];
    ⵠΔ[1268] = ⵠΔ[1269];
    ⵠΔ[1272] = [];
    ⵠΔ[1272][0] = Δⵠ.ⵠᐃⵠΔⲆᐃᐃΔᐃ;
    ⵠΔ[1272][1] = Δⵠ.ⲆⲆⵠⵠⲆΔᐃᐃⲆ;
    ⵠΔ[1272][2] = Δⵠ.ⲆⲆᐃΔⲆⵠⵠΔΔ;
    ⵠΔ[1273] = ⵠΔ[1272];
    ⵠΔ[1271] = ⵠΔ[1272];
    ⵠΔ[1239] = [];
    ⵠΔ[1239][0] = Δⵠ.ⲆⲆⵠⲆᐃⵠΔⵠⲆ;
    ⵠΔ[1239][1] = Δⵠ.ⵠⵠⵠⲆⵠⲆᐃΔᐃ;
    ⵠΔ[1239][2] = Δⵠ.ᐃᐃᐃᐃΔΔᐃᐃᐃ;
    ⵠΔ[1240] = ⵠΔ[1239];
    ⵠΔ[1238] = ⵠΔ[1239];
    ⵠΔ[1242] = [];
    ⵠΔ[1242][0] = Δⵠ.ⵠⵠΔᐃⵠᐃΔⲆⲆ;
    ⵠΔ[1242][1] = Δⵠ.ΔⲆᐃⵠΔⲆΔΔⲆ;
    ⵠΔ[1242][2] = Δⵠ.ΔᐃΔⵠⲆᐃⵠⲆΔ;
    ⵠΔ[1243] = ⵠΔ[1242];
    ⵠΔ[1241] = ⵠΔ[1242];
    ⵠΔ[1245] = [];
    ⵠΔ[1245][0] = Δⵠ.ⲆⵠⵠΔᐃⵠΔΔΔ;
    ⵠΔ[1245][1] = Δⵠ.ᐃᐃΔⵠⵠΔⵠⲆⲆ;
    ⵠΔ[1245][2] = Δⵠ.ⵠⲆⵠⲆΔΔΔᐃⵠ;
    ⵠΔ[1246] = ⵠΔ[1245];
    ⵠΔ[1244] = ⵠΔ[1245];
    ⵠΔ[1248] = [];
    ⵠΔ[1248][0] = Δⵠ.ᐃᐃᐃΔⲆⵠΔⲆΔ;
    ⵠΔ[1248][1] = Δⵠ.ᐃⲆΔⵠΔⲆᐃⲆⲆ;
    ⵠΔ[1248][2] = Δⵠ.ⵠⲆΔⲆΔΔΔᐃⲆ;
    ⵠΔ[1249] = ⵠΔ[1248];
    ⵠΔ[1247] = ⵠΔ[1248];
    ⵠΔ[1251] = [];
    ⵠΔ[1251][0] = Δⵠ.ΔᐃⵠⲆⵠᐃⵠᐃᐃ;
    ⵠΔ[1251][1] = Δⵠ.ᐃⲆⲆⵠⵠⵠΔᐃΔ;
    ⵠΔ[1251][2] = Δⵠ.ΔⵠⵠᐃΔΔⵠⵠⵠ;
    ⵠΔ[1252] = ⵠΔ[1251];
    ⵠΔ[1250] = ⵠΔ[1251];
    ⵠΔ[1254] = [];
    ⵠΔ[1254][0] = Δⵠ.ᐃⲆⲆⵠⲆΔⲆⵠⲆ;
    ⵠΔ[1254][1] = Δⵠ.ⵠᐃⵠⵠᐃΔᐃΔⲆ;
    ⵠΔ[1254][2] = Δⵠ.ⲆⲆΔⲆᐃⲆᐃⵠⲆ;
    ⵠΔ[1255] = ⵠΔ[1254];
    ⵠΔ[1253] = ⵠΔ[1254];
    ⵠΔ[1227] = [];
    ⵠΔ[1227][0] = Δⵠ.ⵠᐃⵠᐃᐃⲆⵠ;
    ⵠΔ[1227][1] = Δⵠ.ⲆⵠΔΔᐃⲆⵠ;
    ⵠΔ[1227][2] = Δⵠ.ⵠⵠⲆⲆⲆⵠΔ;
    ⵠΔ[1229] = ⵠΔ[1227];
    ⵠΔ[1228] = ⵠΔ[1227];
    ⵠΔ[1187] = [];
    ⵠΔ[1187][0] = Δⵠ.ⲆⵠᐃⲆΔᐃᐃ;
    ⵠΔ[1187][1] = Δⵠ.ᐃⵠΔⲆᐃᐃⵠ;
    ⵠΔ[1187][2] = Δⵠ.ⵠᐃⵠΔⲆΔᐃ;
    ⵠΔ[1188] = ⵠΔ[1187];
    ⵠΔ[v624.ⲆⵠⲆᐃⵠⵠᐃⲆⲆ] = ⵠΔ[1187];
    ⵠΔ[840] = f120(1, [{
      f: f91,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
    }], 0.22, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[841] = ⵠΔ[840];
    ⵠΔ[850] = f120(1, [{
      f: f274,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[851] = ⵠΔ[850];
    ⵠΔ[644] = f120(1, [{
      f: f115,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }, {
      f: f119,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }, {
      f: f114,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[643] = ⵠΔ[644];
    ⵠΔ[639] = f120(1, [{
      f: f118,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[800] = f120(1, [{
      f: f205,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
    }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[799] = ⵠΔ[800];
    ⵠΔ[631] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[632] = ⵠΔ[631];
    ⵠΔ[311] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#493d36", "#332b28"]
    }], 0.7, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[284] = ⵠΔ[311];
    ⵠΔ[808] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c67933", "#b17238"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[809] = ⵠΔ[808];
    ⵠΔ[834] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e8e8e8", "#bbbbbb"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[835] = ⵠΔ[834];
    ⵠΔ[845] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#328a56", "#449573"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[846] = ⵠΔ[845];
    ⵠΔ[949] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c98e2f", "#a36b11"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[950] = ⵠΔ[949];
    ⵠΔ[951] = ⵠΔ[949];
    ⵠΔ[966] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#13a56d", "#098a58"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[967] = ⵠΔ[966];
    ⵠΔ[968] = ⵠΔ[966];
    ⵠΔ[981] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3a8214", "#4a9c1e"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[982] = ⵠΔ[981];
    ⵠΔ[983] = ⵠΔ[981];
    ⵠΔ[959] = f120(1, [{
      f: f152,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#b22419", "#99110e"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[960] = ⵠΔ[959];
    ⵠΔ[961] = ⵠΔ[959];
    ⵠΔ[309] = f120(1, [{
      f: f125,
      x: -2,
      y: -2,
      a: 1,
      r: -Math.PI / 7,
      c: ["#4d2d14", "#432516"]
    }, {
      f: f123,
      x: -2,
      y: -2,
      a: 1,
      r: -Math.PI / 7,
      c: ["#efd435", "#ec8d35", "#e96132"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[302] = ⵠΔ[309];
    ⵠΔ[328] = f120(1, [{
      f: f121,
      x: -2,
      y: -1,
      a: 1,
      r: -Math.PI / 7,
      c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
    }, {
      f: f123,
      x: -2,
      y: -1,
      a: 1,
      r: -Math.PI / 7,
      c: ["#efd435", "#ec8d35", "#e96132"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[327] = ⵠΔ[328];
    ⵠΔ[860] = f120(1, [{
      f: f138,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
    }], 0.1, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[865] = f120(1, [{
      f: f147,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[829] = f120(1, [{
      f: f149,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[261] = f120(1, [{
      f: f137,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[292] = f120(1, [{
      f: f139,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[293] = f120(1, [{
      f: f150,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[455] = f120(1, [{
      f: f133,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[313] = f120(1, [{
      f: f148,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[312] = f120(1, [{
      f: f148,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[258] = f120(1, [{
      f: f148,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[296] = f120(1, [{
      f: f148,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[458] = f120(1, [{
      f: f148,
      x: -2,
      y: 5,
      a: 1,
      r: -Math.PI / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[1017] = [];
    ⵠΔ[1017][0] = Δⵠ.ᐃⲆΔⲆⲆΔⲆ;
    ⵠΔ[1017][1] = Δⵠ.ⲆΔⵠⵠΔⵠᐃ;
    ⵠΔ[1017][2] = Δⵠ.ΔᐃⵠⵠⲆᐃΔ;
    ⵠΔ[1019] = ⵠΔ[1017];
    ⵠΔ[1018] = ⵠΔ[1017];
    ⵠΔ[315] = f120(1, [{
      f: f154,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#252B28", "#58645F", "#75827D"]
    }], 0.23, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[297] = f120(1, [{
      f: f153,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#282823", "#877c2d", "#c4bc51"]
    }], 0.43, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[298] = f120(1, [{
      f: f155,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#232828", "#3fc9c9", "#74ede6"]
    }], 0.33, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[316] = f120(1, [{
      f: f125,
      x: 0,
      y: -5,
      a: 1,
      r: Math.PI / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[830] = ⵠΔ[829];
    ⵠΔ[254] = ⵠΔ[261];
    ⵠΔ[290] = ⵠΔ[292];
    ⵠΔ[291] = ⵠΔ[293];
    ⵠΔ[456] = ⵠΔ[455];
    ⵠΔ[314] = ⵠΔ[313];
    ⵠΔ[256] = ⵠΔ[312];
    ⵠΔ[295] = ⵠΔ[258];
    ⵠΔ[257] = ⵠΔ[296];
    ⵠΔ[460] = ⵠΔ[458];
    ⵠΔ[277] = f120(1, [{
      f: f106,
      x: 0,
      y: 0,
      a: 1,
      r: 0
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[310] = f120(1, [{
      f: f105,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
    }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[262] = ⵠΔ[310];
    ⵠΔ[329] = f120(1, [{
      f: f173,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[263] = ⵠΔ[329];
    ⵠΔ[331] = f120(1, [{
      f: f172,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[332] = ⵠΔ[331];
    ⵠΔ[492] = f120(1, [{
      f: f173,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[493] = ⵠΔ[492];
    ⵠΔ[330] = f120(1, [{
      f: f175,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[265] = ⵠΔ[330];
    ⵠΔ[317] = f120(1, [{
      f: f167,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
    }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[318] = ⵠΔ[317];
    ⵠΔ[319] = f120(1, [{
      f: f200,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[320] = ⵠΔ[319];
    ⵠΔ[362] = f120(1, [{
      f: f197,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[363] = ⵠΔ[362];
    ⵠΔ[364] = f120(1, [{
      f: f197,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[365] = ⵠΔ[364];
    ⵠΔ[361] = f120(1, [{
      f: f202,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[360] = ⵠΔ[361];
    ⵠΔ[495] = f120(1, [{
      f: f202,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[496] = ⵠΔ[495];
    ⵠΔ[335] = f120(1, [{
      f: f176,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[268] = ⵠΔ[335];
    ⵠΔ[372] = f120(1, [{
      f: f177,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[371] = ⵠΔ[372];
    ⵠΔ[499] = f120(1, [{
      f: f177,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[498] = ⵠΔ[499];
    ⵠΔ[375] = f120(1, [{
      f: f178,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[374] = ⵠΔ[375];
    ⵠΔ[378] = f120(1, [{
      f: f181,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[377] = ⵠΔ[378];
    ⵠΔ[337] = f120(1, [{
      f: f196,
      x: 0,
      y: 2,
      a: 1,
      r: 0,
      c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[338] = ⵠΔ[337];
    ⵠΔ[300] = f120(1, [{
      f: f111,
      x: 0,
      y: -3,
      a: 1,
      r: 0,
      c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[323] = f120(1, [{
      f: f111,
      x: 0,
      y: -3,
      a: 1,
      r: 0,
      c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[325] = ⵠΔ[323];
    ⵠΔ[305] = f120(1, [{
      f: f116,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#cec0c4", "#ffffff", "#6d6768"]
    }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[513] = f120(1, [{
      f: f116,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#d4e9ec", "#37b1d7", "#506c71"]
    }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[515] = ⵠΔ[513];
    ⵠΔ[368] = f120(1, [{
      f: f201,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#ef96be", "#ffffff"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[1162] = f120(1, [{
      f: f201,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#55423e", "#ffffff"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[178] = f120(1, [{
      f: f174,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[179] = f120(1, [{
      f: f174,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[624] = f120(1, [{
      f: f201,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#201851", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[393] = f120(1, [{
      f: f201,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#231f20", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[505] = f120(1, [{
      f: f201,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#ffffff", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[369] = f120(1, [{
      f: f198,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[370] = ⵠΔ[369];
    ⵠΔ[381] = f120(1, [{
      f: f182,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[380] = ⵠΔ[381];
    ⵠΔ[502] = f120(1, [{
      f: f203,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[503] = ⵠΔ[502];
    ⵠΔ[880] = f120(1, [{
      f: f128,
      x: 0,
      y: 5,
      a: 1,
      r: 0,
      c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[881] = ⵠΔ[880];
    ⵠΔ[882] = f120(1, [{
      f: f126,
      x: 0,
      y: 5,
      a: 1,
      r: 0,
      c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[883] = ⵠΔ[882];
    ⵠΔ[303] = f120(1, [{
      f: f117,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#ffffff", "#cec0c4"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[304] = ⵠΔ[303];
    ⵠΔ[392] = [];
    ⵠΔ[392][0] = Δⵠ.ΔΔᐃⵠΔΔᐃ;
    ⵠΔ[392][1] = Δⵠ.ⲆⲆⵠⵠᐃⵠᐃ;
    ⵠΔ[392][2] = Δⵠ.ⵠⲆᐃᐃΔⲆⲆ;
    ⵠΔ[367] = ⵠΔ[392];
    ⵠΔ[975] = [];
    ⵠΔ[975][0] = Δⵠ.ⵠⵠⲆⵠⲆⲆⲆ;
    ⵠΔ[975][1] = Δⵠ.ΔⲆΔᐃⵠⲆⵠ;
    ⵠΔ[975][2] = Δⵠ.ⲆᐃᐃⲆᐃⲆⲆ;
    ⵠΔ[977] = ⵠΔ[975];
    ⵠΔ[976] = ⵠΔ[975];
    ⵠΔ[978] = [];
    ⵠΔ[978][0] = Δⵠ.ⲆⲆΔᐃΔⲆΔ;
    ⵠΔ[978][1] = Δⵠ.ΔⲆΔⲆⵠⲆΔ;
    ⵠΔ[978][2] = Δⵠ.Ⲇᐃⵠᐃⵠᐃᐃ;
    ⵠΔ[980] = ⵠΔ[978];
    ⵠΔ[979] = ⵠΔ[978];
    ⵠΔ[1158] = [];
    ⵠΔ[1158][0] = Δⵠ.ⵠⲆⵠΔᐃᐃⵠ;
    ⵠΔ[1158][1] = Δⵠ.ⵠⲆⵠΔᐃᐃⵠ;
    ⵠΔ[1158][2] = Δⵠ.ⵠⲆⵠΔᐃᐃⵠ;
    ⵠΔ[1159] = ⵠΔ[1158];
    ⵠΔ[426] = [];
    ⵠΔ[426][0] = Δⵠ.ⵠⲆΔᐃΔⵠⵠ;
    ⵠΔ[426][1] = Δⵠ.ⲆⲆΔᐃⵠⲆΔ;
    ⵠΔ[426][2] = Δⵠ.ⲆΔⲆⲆᐃⵠⵠ;
    ⵠΔ[427] = ⵠΔ[426];
    ⵠΔ[428] = ⵠΔ[426];
    ⵠΔ[1160] = [];
    ⵠΔ[1160][0] = Δⵠ.ΔⵠⲆⵠΔⵠⲆ;
    ⵠΔ[1160][1] = Δⵠ.ΔⵠⲆⵠΔⵠⲆ;
    ⵠΔ[1160][2] = Δⵠ.ΔⵠⲆⵠΔⵠⲆ;
    ⵠΔ[1161] = ⵠΔ[1160];
    ⵠΔ[1236] = [];
    ⵠΔ[1236][0] = Δⵠ.ᐃᐃⵠⵠΔᐃⵠⵠⵠ;
    ⵠΔ[1236][1] = Δⵠ.ⲆᐃᐃᐃⵠΔᐃᐃᐃ;
    ⵠΔ[1236][2] = Δⵠ.ⲆΔⲆᐃⵠΔΔΔⲆ;
    ⵠΔ[1235] = ⵠΔ[1236];
    ⵠΔ[1237] = ⵠΔ[1236];
    ⵠΔ[991] = [];
    ⵠΔ[991][0] = Δⵠ.ᐃⲆⵠⵠⲆⵠⵠ;
    ⵠΔ[991][1] = Δⵠ.ⵠΔᐃᐃΔⵠᐃ;
    ⵠΔ[991][2] = Δⵠ.ⲆⲆᐃΔΔΔⲆ;
    ⵠΔ[990] = ⵠΔ[991];
    ⵠΔ[992] = ⵠΔ[991];
    ⵠΔ[994] = [];
    ⵠΔ[994][0] = Δⵠ.ⵠⵠⵠΔⵠᐃᐃ;
    ⵠΔ[994][1] = Δⵠ.ᐃΔⵠⲆᐃΔᐃ;
    ⵠΔ[994][2] = Δⵠ.Δⵠⵠᐃᐃⵠᐃ;
    ⵠΔ[993] = ⵠΔ[994];
    ⵠΔ[995] = ⵠΔ[994];
    ⵠΔ[997] = [];
    ⵠΔ[997][0] = Δⵠ.ΔⵠΔⲆⵠᐃᐃ;
    ⵠΔ[997][1] = Δⵠ.ⵠΔᐃᐃΔΔⵠ;
    ⵠΔ[997][2] = Δⵠ.ᐃⲆᐃᐃᐃΔⲆ;
    ⵠΔ[996] = ⵠΔ[997];
    ⵠΔ[998] = ⵠΔ[997];
    ⵠΔ[1000] = [];
    ⵠΔ[1000][0] = Δⵠ.ⲆᐃⵠⲆⲆᐃᐃ;
    ⵠΔ[1000][1] = Δⵠ.ΔᐃⲆⲆᐃᐃᐃ;
    ⵠΔ[1000][2] = Δⵠ.ΔΔⵠⲆᐃⵠᐃ;
    ⵠΔ[999] = ⵠΔ[1000];
    ⵠΔ[1001] = ⵠΔ[1000];
    ⵠΔ[1003] = [];
    ⵠΔ[1003][0] = Δⵠ.ᐃᐃΔⲆⲆⲆⲆ;
    ⵠΔ[1003][1] = Δⵠ.ΔⵠᐃⲆⵠⵠⵠ;
    ⵠΔ[1003][2] = Δⵠ.ΔᐃΔⵠΔⲆΔ;
    ⵠΔ[1002] = ⵠΔ[1003];
    ⵠΔ[1004] = ⵠΔ[1003];
    ⵠΔ[1006] = [];
    ⵠΔ[1006][0] = Δⵠ.ⲆᐃⵠⵠᐃΔⵠ;
    ⵠΔ[1006][1] = Δⵠ.ⲆᐃⵠᐃᐃΔΔ;
    ⵠΔ[1006][2] = Δⵠ.ⵠΔᐃΔΔⵠⵠ;
    ⵠΔ[1005] = ⵠΔ[1006];
    ⵠΔ[1007] = ⵠΔ[1006];
    ⵠΔ[1009] = [];
    ⵠΔ[1009][0] = Δⵠ.ΔΔΔΔᐃΔⲆ;
    ⵠΔ[1009][1] = Δⵠ.ⲆⵠᐃᐃⲆⵠΔ;
    ⵠΔ[1009][2] = Δⵠ.ⲆⲆᐃΔᐃⵠᐃ;
    ⵠΔ[1008] = ⵠΔ[1009];
    ⵠΔ[1010] = ⵠΔ[1009];
    ⵠΔ[1012] = [];
    ⵠΔ[1012][0] = Δⵠ.ᐃΔΔΔⲆⲆⲆ;
    ⵠΔ[1012][1] = Δⵠ.ⲆⵠᐃⲆⲆⵠᐃ;
    ⵠΔ[1012][2] = Δⵠ.ⵠΔⵠΔΔΔⵠ;
    ⵠΔ[1011] = ⵠΔ[1012];
    ⵠΔ[1013] = ⵠΔ[1012];
    ⵠΔ[1015] = [];
    ⵠΔ[1015][0] = Δⵠ.ΔⵠⵠⲆΔᐃⲆ;
    ⵠΔ[1015][1] = Δⵠ.ΔᐃᐃⵠⲆⲆⲆ;
    ⵠΔ[1015][2] = Δⵠ.ᐃΔΔⵠᐃΔⵠ;
    ⵠΔ[1014] = ⵠΔ[1015];
    ⵠΔ[1016] = ⵠΔ[1015];
    ⵠΔ[1035] = [];
    ⵠΔ[1035][0] = Δⵠ.ΔⵠⵠΔᐃ;
    ⵠΔ[1035][1] = Δⵠ.ΔⵠⵠΔᐃ;
    ⵠΔ[1035][2] = Δⵠ.ΔⵠⵠΔᐃ;
    ⵠΔ[v624.ΔⲆΔⲆⵠᐃᐃᐃᐃ] = ⵠΔ[1035];
    ⵠΔ[1036] = ⵠΔ[1035];
    ⵠΔ[1037] = [];
    ⵠΔ[1037][0] = Δⵠ.ΔⲆⵠⵠΔ;
    ⵠΔ[1037][1] = Δⵠ.ΔⲆⵠⵠΔ;
    ⵠΔ[1037][2] = Δⵠ.ΔⲆⵠⵠΔ;
    ⵠΔ[v624.ⵠᐃᐃΔⵠⵠᐃΔⵠ] = ⵠΔ[1037];
    ⵠΔ[1038] = ⵠΔ[1037];
    ⵠΔ[1039] = [];
    ⵠΔ[1039][0] = Δⵠ.ⵠⵠⲆᐃⵠ;
    ⵠΔ[1039][1] = Δⵠ.ⵠⵠⲆᐃⵠ;
    ⵠΔ[1039][2] = Δⵠ.ⵠⵠⲆᐃⵠ;
    ⵠΔ[v624.ⲆⲆⵠᐃΔΔΔᐃᐃ] = ⵠΔ[1039];
    ⵠΔ[1040] = ⵠΔ[1039];
    ⵠΔ[1156] = [];
    ⵠΔ[1156][0] = Δⵠ.ⵠᐃΔᐃⵠ;
    ⵠΔ[1156][1] = Δⵠ.ⵠᐃΔᐃⵠ;
    ⵠΔ[1156][2] = Δⵠ.ⵠᐃΔᐃⵠ;
    ⵠΔ[1157] = ⵠΔ[1156];
    ⵠΔ[1046] = [];
    ⵠΔ[1046][0] = Δⵠ.ΔᐃⲆⲆᐃΔⲆ;
    ⵠΔ[1046][1] = Δⵠ.ⵠΔⵠⲆⵠᐃⲆ;
    ⵠΔ[1046][2] = Δⵠ.ΔⲆⲆΔΔᐃᐃ;
    ⵠΔ[1048] = ⵠΔ[1046];
    ⵠΔ[1047] = ⵠΔ[1046];
    ⵠΔ[744] = [];
    ⵠΔ[744][0] = Δⵠ.ΔⲆᐃᐃΔⲆΔ;
    ⵠΔ[744][1] = Δⵠ.ΔⲆⲆΔᐃⵠΔ;
    ⵠΔ[744][2] = Δⵠ.ⵠᐃᐃᐃΔⲆΔ;
    ⵠΔ[746] = ⵠΔ[744];
    ⵠΔ[745] = ⵠΔ[744];
    ⵠΔ[747] = [];
    ⵠΔ[747][0] = Δⵠ.ΔᐃⲆΔᐃⵠⵠ;
    ⵠΔ[747][1] = Δⵠ.ΔᐃᐃΔⲆΔᐃ;
    ⵠΔ[747][2] = Δⵠ.ⲆⵠⲆΔΔΔΔ;
    ⵠΔ[749] = ⵠΔ[747];
    ⵠΔ[748] = ⵠΔ[747];
    ⵠΔ[1049] = [];
    ⵠΔ[1049][0] = Δⵠ.ⵠΔᐃᐃΔᐃᐃ;
    ⵠΔ[1049][1] = Δⵠ.ⵠᐃⲆⲆⵠᐃⵠ;
    ⵠΔ[1049][2] = Δⵠ.ⲆᐃⲆᐃⵠΔⵠ;
    ⵠΔ[1051] = ⵠΔ[1049];
    ⵠΔ[1050] = ⵠΔ[1049];
    ⵠΔ[1189] = [];
    ⵠΔ[1189][0] = Δⵠ.ⲆⲆᐃᐃᐃᐃΔ;
    ⵠΔ[1189][1] = Δⵠ.ᐃᐃⲆⵠⲆⲆΔ;
    ⵠΔ[1189][2] = Δⵠ.ᐃⲆⲆⲆⲆⲆΔ;
    ⵠΔ[1191] = ⵠΔ[1189];
    ⵠΔ[1190] = ⵠΔ[1189];
    ⵠΔ[1110] = [];
    ⵠΔ[1110][0] = Δⵠ.ΔᐃΔᐃᐃΔⲆ;
    ⵠΔ[1110][1] = Δⵠ.ᐃⲆΔⲆⵠΔΔ;
    ⵠΔ[1110][2] = Δⵠ.ⵠⲆΔᐃΔᐃᐃ;
    ⵠΔ[1112] = ⵠΔ[1110];
    ⵠΔ[1111] = ⵠΔ[1110];
    ⵠΔ[1131] = [];
    ⵠΔ[1131][0] = Δⵠ.ΔΔΔᐃᐃⵠⲆᐃⵠ;
    ⵠΔ[1131][1] = Δⵠ.ᐃᐃⵠⵠᐃⲆⲆⵠᐃ;
    ⵠΔ[1131][2] = Δⵠ.ⲆⲆⲆⵠᐃⲆⲆⲆᐃ;
    ⵠΔ[1133] = ⵠΔ[1131];
    ⵠΔ[1132] = ⵠΔ[1131];
    ⵠΔ[1137] = [];
    ⵠΔ[1137][0] = Δⵠ.ᐃᐃΔᐃⲆΔΔ;
    ⵠΔ[1137][1] = Δⵠ.ⵠᐃᐃⵠⲆᐃΔ;
    ⵠΔ[1137][2] = Δⵠ.ⵠΔⲆᐃΔⲆⲆ;
    ⵠΔ[1138] = ⵠΔ[1137];
    ⵠΔ[1139] = ⵠΔ[1137];
    ⵠΔ[1140] = [];
    ⵠΔ[1140][0] = Δⵠ.ᐃⲆᐃΔΔⵠΔ;
    ⵠΔ[1140][1] = Δⵠ.ⲆⵠⵠⲆΔⵠᐃ;
    ⵠΔ[1140][2] = Δⵠ.ⲆΔᐃⲆΔⲆⵠ;
    ⵠΔ[1141] = ⵠΔ[1140];
    ⵠΔ[1142] = ⵠΔ[1140];
    ⵠΔ[1117] = [];
    ⵠΔ[1117][0] = Δⵠ.ᐃΔⲆⵠΔᐃⲆ;
    ⵠΔ[1117][1] = Δⵠ.ⲆⵠⲆⲆΔⵠᐃ;
    ⵠΔ[1117][2] = Δⵠ.ᐃᐃⲆⲆⵠⵠΔ;
    ⵠΔ[1116] = ⵠΔ[1117];
    ⵠΔ[1118] = ⵠΔ[1117];
    ⵠΔ[1080] = [];
    ⵠΔ[1080][0] = Δⵠ.ᐃΔⵠΔⲆᐃⲆ;
    ⵠΔ[1080][1] = Δⵠ.ⵠⲆⵠⵠᐃΔⵠ;
    ⵠΔ[1080][2] = Δⵠ.ⵠⲆΔⲆⵠⲆⲆ;
    ⵠΔ[1082] = ⵠΔ[1080];
    ⵠΔ[1081] = ⵠΔ[1080];
    ⵠΔ[1224] = [];
    ⵠΔ[1224][0] = Δⵠ.ΔⵠⵠⲆⲆⲆⵠ;
    ⵠΔ[1224][1] = Δⵠ.ⲆΔᐃⵠⵠΔᐃ;
    ⵠΔ[1224][2] = Δⵠ.ⵠΔⲆⵠᐃΔⵠ;
    ⵠΔ[1226] = ⵠΔ[1224];
    ⵠΔ[1225] = ⵠΔ[1224];
    ⵠΔ[1095] = [];
    ⵠΔ[1095][0] = Δⵠ.ⲆᐃⲆⲆΔⵠᐃ;
    ⵠΔ[1095][1] = Δⵠ.ΔⵠΔⵠⲆⵠᐃ;
    ⵠΔ[1095][2] = Δⵠ.ΔᐃⵠΔΔᐃᐃ;
    ⵠΔ[1097] = ⵠΔ[1095];
    ⵠΔ[1096] = ⵠΔ[1095];
    ⵠΔ[717] = f120(1, [{
      f: f245,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
    }, {
      f: f277,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e4c027"]
    }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[718] = ⵠΔ[717];
    ⵠΔ[408] = f120(1, [{
      f: f179,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
    }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[409] = ⵠΔ[408];
    ⵠΔ[907] = f120(1, [{
      f: f185,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
    }], 0.32, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[909] = ⵠΔ[907];
    ⵠΔ[908] = ⵠΔ[907];
    ⵠΔ[197] = f120(1, [{
      f: f184,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
    }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[906] = ⵠΔ[197];
    ⵠΔ[901] = f120(1, [{
      f: f191,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[900] = ⵠΔ[901];
    ⵠΔ[899] = ⵠΔ[901];
    ⵠΔ[401] = f120(1, [{
      f: f187,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[402] = ⵠΔ[401];
    ⵠΔ[395] = f120(1, [{
      f: f193,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[396] = ⵠΔ[395];
    ⵠΔ[398] = f120(1, [{
      f: f189,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[399] = ⵠΔ[398];
    ⵠΔ[404] = f120(1, [{
      f: f192,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[405] = ⵠΔ[404];
    ⵠΔ[472] = f120(1, [{
      f: f188,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[473] = ⵠΔ[472];
    ⵠΔ[874] = f120(1, [{
      f: f186,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
    }], 0.38, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[876] = ⵠΔ[874];
    ⵠΔ[875] = ⵠΔ[874];
    ⵠΔ[477] = f120(1, [{
      f: f204,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[478] = ⵠΔ[477];
    ⵠΔ[709] = f120(1, [{
      f: f262,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#939393", "#5f6061"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[711] = ⵠΔ[709];
    ⵠΔ[550] = f120(1, [{
      f: f241,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[551] = ⵠΔ[550];
    ⵠΔ[480] = f120(1, [{
      f: f204,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[481] = ⵠΔ[480];
    ⵠΔ[483] = f120(1, [{
      f: f204,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[484] = ⵠΔ[483];
    ⵠΔ[486] = f120(1, [{
      f: f204,
      x: 2,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[487] = ⵠΔ[486];
    ⵠΔ[489] = [];
    ⵠΔ[489][0] = Δⵠ.ⵠⵠⵠΔΔⲆᐃ;
    ⵠΔ[489][1] = Δⵠ.ᐃⲆᐃᐃⵠⵠⵠ;
    ⵠΔ[489][2] = Δⵠ.ⵠΔᐃⲆΔᐃΔ;
    ⵠΔ[491] = ⵠΔ[489];
    ⵠΔ[490] = ⵠΔ[489];
    ⵠΔ[1195] = [];
    ⵠΔ[1195][0] = Δⵠ.ΔᐃᐃⵠⲆᐃᐃ;
    ⵠΔ[1195][1] = Δⵠ.ⲆⲆᐃᐃΔⲆᐃ;
    ⵠΔ[1195][2] = Δⵠ.ΔⲆⲆⵠΔᐃⵠ;
    ⵠΔ[1197] = ⵠΔ[1195];
    ⵠΔ[1196] = ⵠΔ[1195];
    ⵠΔ[1199] = [];
    ⵠΔ[1199][0] = Δⵠ.ΔΔΔΔⵠⲆⲆ;
    ⵠΔ[1199][1] = Δⵠ.ⲆⵠᐃΔᐃᐃᐃ;
    ⵠΔ[1199][2] = Δⵠ.ⵠⵠΔⲆΔᐃⲆ;
    ⵠΔ[1201] = ⵠΔ[1199];
    ⵠΔ[1200] = ⵠΔ[1199];
    ⵠΔ[1203] = [];
    ⵠΔ[1203][0] = Δⵠ.ⵠⵠⵠⲆᐃⲆⵠ;
    ⵠΔ[1203][1] = Δⵠ.ⵠΔΔΔΔΔⵠ;
    ⵠΔ[1203][2] = Δⵠ.ⲆⵠⲆΔⲆᐃⲆ;
    ⵠΔ[1205] = ⵠΔ[1203];
    ⵠΔ[1204] = ⵠΔ[1203];
    ⵠΔ[1207] = [];
    ⵠΔ[1207][0] = Δⵠ.ΔⲆΔᐃⵠΔⵠ;
    ⵠΔ[1207][1] = Δⵠ.ⵠⲆⲆⲆᐃⲆᐃ;
    ⵠΔ[1207][2] = Δⵠ.ᐃⵠᐃⲆⵠⵠΔ;
    ⵠΔ[1209] = ⵠΔ[1207];
    ⵠΔ[1208] = ⵠΔ[1207];
    ⵠΔ[1211] = [];
    ⵠΔ[1211][0] = Δⵠ.ⵠⲆΔᐃᐃΔᐃ;
    ⵠΔ[1211][1] = Δⵠ.ᐃⲆⵠᐃᐃᐃⲆ;
    ⵠΔ[1211][2] = Δⵠ.ᐃΔⵠΔΔᐃⵠ;
    ⵠΔ[1213] = ⵠΔ[1211];
    ⵠΔ[1212] = ⵠΔ[1211];
    ⵠΔ[1215] = [];
    ⵠΔ[1215][0] = Δⵠ.ⲆⵠⵠⵠΔⲆⵠ;
    ⵠΔ[1215][1] = Δⵠ.ΔᐃΔΔᐃⵠᐃ;
    ⵠΔ[1215][2] = Δⵠ.ⵠᐃΔⵠᐃⲆⵠ;
    ⵠΔ[1217] = ⵠΔ[1215];
    ⵠΔ[1216] = ⵠΔ[1215];
    ⵠΔ[518] = f120(1, [{
      f: f233,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
    }], 0.8, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[519] = ⵠΔ[518];
    ⵠΔ[532] = f120(1, [{
      f: f254,
      x: -2,
      y: -2,
      a: 1,
      r: -Math.PI / 5,
      c: ["#141414", "#c4a23a", "#816511"]
    }], 0.08, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[533] = ⵠΔ[532];
    ⵠΔ[521] = f120(1, [{
      f: f249,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
    ⵠΔ[523] = f120(1, [{
      f: f249,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#120202", "#991616", "#750a0a", "#120202"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
    ⵠΔ[529] = f120(1, [{
      f: f250,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#347f93", "#54a4ba"]
    }, {
      f: f244,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
    }, {
      f: f243,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#a9e4ed", "#86d4e0"]
    }, {
      f: f240,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[530] = ⵠΔ[529];
    ⵠΔ[553] = f120(1, [{
      f: f235,
      x: 45,
      y: 70,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[555] = ⵠΔ[553];
    ⵠΔ[541] = f120(1, [{
      f: f228,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[542] = ⵠΔ[541];
    ⵠΔ[779] = f120(1, [{
      f: f260,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[780] = ⵠΔ[779];
    ⵠΔ[767] = f120(1, [{
      f: f272,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#2a2938", "#242330", "#313041"]
    }], 0.25, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[768] = ⵠΔ[767];
    ⵠΔ[776] = f120(1, [{
      f: f264,
      x: 0,
      y: 3,
      a: 1,
      r: 0,
      c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
    }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[777] = ⵠΔ[776];
    ⵠΔ[771] = f120(1, [{
      f: f264,
      x: 0,
      y: 3,
      a: 1,
      r: 0,
      c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
    }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[772] = ⵠΔ[771];
    ⵠΔ[756] = f120(1, [{
      f: f284,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[758] = ⵠΔ[756];
    ⵠΔ[760] = f120(1, [{
      f: f284,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[762] = ⵠΔ[760];
    ⵠΔ[764] = f120(1, [{
      f: f284,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[770] = ⵠΔ[764];
    ⵠΔ[910] = f120(1, [{
      f: f183,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[912] = ⵠΔ[910];
    ⵠΔ[911] = ⵠΔ[910];
    ⵠΔ[732] = f120(1, [{
      f: f220,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
    }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[734] = ⵠΔ[732];
    ⵠΔ[563] = f120(1, [{
      f: f248,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
    }], 0.75, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[564] = ⵠΔ[563];
    ⵠΔ[751] = f120(1, [{
      f: f251,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[252] = f120(1, [{
      f: f255,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[753] = f120(1, [{
      f: f251,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[253] = f120(1, [{
      f: f255,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[176] = f120(1, [{
      f: f256,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[177] = f120(1, [{
      f: f256,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[175] = f120(1, [{
      f: f256,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[616] = f120(1, [{
      f: f281,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[618] = ⵠΔ[616];
    ⵠΔ[699] = f120(1, [{
      f: f281,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[700] = ⵠΔ[699];
    ⵠΔ[702] = f120(1, [{
      f: f281,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[704] = ⵠΔ[702];
    ⵠΔ[705] = f120(1, [{
      f: f281,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[706] = ⵠΔ[705];
    ⵠΔ[420] = f120(1, [{
      f: f231,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[421] = ⵠΔ[420];
    ⵠΔ[826] = f120(1, [{
      f: f226,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#252525", "#73583e", "#493425", "#7d6144"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[827] = ⵠΔ[826];
    ⵠΔ[429] = f120(1, [{
      f: f230,
      x: 0,
      y: -2,
      a: 1,
      r: 0,
      c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[430] = ⵠΔ[429];
    ⵠΔ[432] = f120(1, [{
      f: f232,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#dbce71", "#b29c32", "#c4bc51"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[433] = ⵠΔ[432];
    ⵠΔ[435] = f120(1, [{
      f: f225,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[436] = ⵠΔ[435];
    ⵠΔ[438] = f120(1, [{
      f: f234,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[439] = ⵠΔ[438];
    ⵠΔ[441] = f120(1, [{
      f: f236,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#221e1b", "#ffffff", "#f6f0e7"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[442] = ⵠΔ[441];
    ⵠΔ[418] = f120(1, [{
      f: f212,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#c27add", "#cd98e5"]
    }], 0.31, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[609] = f120(1, [{
      f: f269,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#D7C393", "#a48c6c"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[142] = f120(1, [{
      f: f266,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#93CBCE", "#E9F6F6"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[140] = f120(1, [{
      f: f269,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#866432", "#6b4f25"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[180] = f120(1, [{
      f: f282,
      x: 3,
      y: 2,
      a: 1,
      r: 0,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[181] = f120(1, [{
      f: f275,
      x: 3,
      y: 2,
      a: 1,
      r: 0,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[784] = ⵠΔ[180];
    ⵠΔ[785] = ⵠΔ[181];
    ⵠΔ[789] = f120(1, [{
      f: f259,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
    }], 0.1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[791] = ⵠΔ[789];
    ⵠΔ[613] = f120(1, [{
      f: f267,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
    }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[612] = f120(1, [{
      f: f276,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 5,
      c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
    }], 0.18, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[715] = ⵠΔ[613];
    ⵠΔ[611] = ⵠΔ[612];
    ⵠΔ[634] = f120(1, [{
      f: f140,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[635] = ⵠΔ[634];
    ⵠΔ[200] = f120(1, [{
      f: f143,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[866] = f120(1, [{
      f: f151,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[143] = f120(1, [{
      f: f242,
      x: 0,
      y: -2,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[690] = ⵠΔ[143];
    ⵠΔ[662] = f120(1, [{
      f: f166,
      x: -3,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
    }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[664] = f120(1, [{
      f: f170,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1d051e", "#42261A", "#281818"]
    }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[666] = ⵠΔ[664];
    ⵠΔ[649] = f120(1, [{
      f: f163,
      x: -3,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
    }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[650] = ⵠΔ[649];
    ⵠΔ[674] = f120(1, [{
      f: f113,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
    }], 0.15, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[646] = f120(1, [{
      f: f169,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    ⵠΔ[647] = ⵠΔ[646];
    ⵠΔ[685] = f120(1, [{
      f: f280,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[684] = ⵠΔ[685];
    ⵠΔ[870] = f120(1, [{
      f: f92,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#e2d63b", "#ee71a9", "#42b672"]
    }], 1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[871] = ⵠΔ[870];
    ⵠΔ[605] = f120(1, [{
      f: f273,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
    }], 0.5, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[604] = ⵠΔ[605];
    ⵠΔ[842] = f120(1, [{
      f: f94,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[843] = ⵠΔ[842];
    ⵠΔ[652] = f120(1, [{
      f: f268,
      x: -1,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.7);
    ⵠΔ[654] = ⵠΔ[652];
    ⵠΔ[626] = f120(1, [{
      f: f268,
      x: -1,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
    }], 0.4, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[627] = ⵠΔ[626];
    ⵠΔ[629] = f120(1, [{
      f: f279,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[196] = f120(1, [{
      f: f142,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[898] = ⵠΔ[196];
    ⵠΔ[659] = f120(1, [{
      f: f164,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
    }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[660] = ⵠΔ[659];
    ⵠΔ[145] = f120(1, [{
      f: f109,
      x: -2,
      y: -8,
      a: 1,
      r: 0,
      c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
    }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    ⵠΔ[730] = ⵠΔ[145];
    ⵠΔ[566] = [];
    ⵠΔ[566][0] = Δⵠ.ⲆΔⵠⵠᐃⵠⵠ;
    ⵠΔ[566][1] = Δⵠ.ⵠⵠⲆΔⲆΔⵠ;
    ⵠΔ[566][2] = Δⵠ.ⵠΔⵠⵠⵠΔⵠ;
    ⵠΔ[567] = ⵠΔ[566];
    ⵠΔ[568] = ⵠΔ[566];
    ⵠΔ[877] = [];
    ⵠΔ[877][0] = Δⵠ.ⲆΔᐃᐃΔⵠⲆ;
    ⵠΔ[877][1] = Δⵠ.ΔⲆᐃΔⲆΔⲆ;
    ⵠΔ[877][2] = Δⵠ.ᐃΔᐃⲆᐃΔᐃ;
    ⵠΔ[879] = ⵠΔ[877];
    ⵠΔ[878] = ⵠΔ[877];
    ⵠΔ[933] = ⵠΔ[932];
    ⵠΔ[934] = ⵠΔ[932];
    ⵠΔ[932] = [];
    ⵠΔ[932][0] = Δⵠ.ⵠⵠⵠⲆΔⵠΔ;
    ⵠΔ[932][1] = Δⵠ.ΔᐃΔΔⲆΔⲆ;
    ⵠΔ[932][2] = Δⵠ.ⵠⲆᐃᐃⲆΔΔ;
    ⵠΔ[933] = ⵠΔ[932];
    ⵠΔ[934] = ⵠΔ[932];
    ⵠΔ[943] = [];
    ⵠΔ[943][0] = Δⵠ.ᐃᐃⲆⲆᐃΔΔ;
    ⵠΔ[943][1] = Δⵠ.ᐃΔΔⲆⵠᐃΔ;
    ⵠΔ[943][2] = Δⵠ.ΔⲆⵠⵠᐃᐃᐃ;
    ⵠΔ[944] = ⵠΔ[943];
    ⵠΔ[945] = ⵠΔ[943];
    ⵠΔ[921] = [];
    ⵠΔ[921][0] = Δⵠ.ⵠΔⵠⲆⵠΔⲆ;
    ⵠΔ[921][1] = Δⵠ.ⵠᐃⵠᐃⵠⲆΔ;
    ⵠΔ[921][2] = Δⵠ.ⲆⲆⵠᐃΔΔⲆ;
    ⵠΔ[922] = ⵠΔ[921];
    ⵠΔ[923] = ⵠΔ[921];
    ⵠΔ[925] = [];
    ⵠΔ[925][0] = Δⵠ.ᐃⲆᐃᐃᐃᐃⵠ;
    ⵠΔ[925][1] = Δⵠ.ΔᐃᐃⵠⵠΔⵠ;
    ⵠΔ[925][2] = Δⵠ.ΔᐃⵠⲆΔⵠᐃ;
    ⵠΔ[926] = ⵠΔ[925];
    ⵠΔ[927] = ⵠΔ[925];
    ⵠΔ[929] = [];
    ⵠΔ[929][0] = Δⵠ.ⲆᐃΔᐃΔⲆΔ;
    ⵠΔ[929][1] = Δⵠ.ᐃⲆᐃᐃᐃⵠⵠ;
    ⵠΔ[929][2] = Δⵠ.ΔΔᐃⲆⲆᐃᐃ;
    ⵠΔ[930] = ⵠΔ[929];
    ⵠΔ[931] = ⵠΔ[929];
    ⵠΔ[946] = [];
    ⵠΔ[946][0] = Δⵠ.ΔⲆΔⲆᐃΔⵠ;
    ⵠΔ[946][1] = Δⵠ.ⲆΔΔⵠⵠΔⲆ;
    ⵠΔ[946][2] = Δⵠ.ⵠΔΔΔΔⵠⲆ;
    ⵠΔ[947] = ⵠΔ[946];
    ⵠΔ[948] = ⵠΔ[946];
    ⵠΔ[735] = [];
    ⵠΔ[735][0] = Δⵠ.ᐃⵠⵠᐃᐃⲆΔ;
    ⵠΔ[735][1] = Δⵠ.ⵠⵠⵠⲆᐃΔⲆ;
    ⵠΔ[735][2] = Δⵠ.ΔᐃⲆΔᐃΔⲆ;
    ⵠΔ[737] = ⵠΔ[735];
    ⵠΔ[736] = ⵠΔ[735];
    ⵠΔ[1164] = [];
    ⵠΔ[1164][0] = Δⵠ.ⲆΔᐃⵠΔᐃΔ;
    ⵠΔ[1164][1] = Δⵠ.ᐃᐃΔⲆᐃⵠⲆ;
    ⵠΔ[1164][2] = Δⵠ.ⲆᐃΔⵠⲆⲆᐃ;
    ⵠΔ[v624.ᐃΔⵠᐃⲆΔⵠᐃΔ] = ⵠΔ[1164];
    ⵠΔ[1165] = ⵠΔ[1164];
    ⵠΔ[738] = [];
    ⵠΔ[738][0] = Δⵠ.ᐃᐃᐃΔⲆⵠΔ;
    ⵠΔ[738][1] = Δⵠ.ⲆΔⲆΔΔⲆⲆ;
    ⵠΔ[738][2] = Δⵠ.ᐃⲆΔΔⲆᐃᐃ;
    ⵠΔ[740] = ⵠΔ[738];
    ⵠΔ[739] = ⵠΔ[738];
    ⵠΔ[741] = [];
    ⵠΔ[741][0] = Δⵠ.ⵠⲆⲆᐃⵠⲆⵠ;
    ⵠΔ[741][1] = Δⵠ.ΔᐃⵠⵠΔᐃⵠ;
    ⵠΔ[741][2] = Δⵠ.ⵠᐃΔᐃⵠᐃᐃ;
    ⵠΔ[743] = ⵠΔ[741];
    ⵠΔ[742] = ⵠΔ[741];
    ⵠΔ[938] = [];
    ⵠΔ[938][0] = Δⵠ.ΔΔᐃⵠⵠΔΔ;
    ⵠΔ[938][1] = Δⵠ.ΔⲆⵠΔΔⲆΔ;
    ⵠΔ[938][2] = Δⵠ.ⲆⲆᐃΔⵠΔᐃ;
    ⵠΔ[939] = ⵠΔ[938];
    ⵠΔ[936] = [];
    ⵠΔ[936][0] = Δⵠ.ᐃⲆᐃᐃΔⲆΔ;
    ⵠΔ[936][1] = Δⵠ.ⲆⲆⲆⲆΔⲆᐃ;
    ⵠΔ[936][2] = Δⵠ.ΔⲆⵠΔΔⲆᐃ;
    ⵠΔ[937] = ⵠΔ[936];
    ⵠΔ[617] = ⵠΔ[616];
    ⵠΔ[701] = ⵠΔ[699];
    ⵠΔ[703] = ⵠΔ[702];
    ⵠΔ[707] = ⵠΔ[705];
    ⵠΔ[348] = ⵠΔ[311];
    ⵠΔ[633] = ⵠΔ[631];
    ⵠΔ[645] = ⵠΔ[644];
    ⵠΔ[640] = ⵠΔ[639];
    ⵠΔ[273] = ⵠΔ[309];
    ⵠΔ[590] = ⵠΔ[252];
    ⵠΔ[752] = ⵠΔ[751];
    ⵠΔ[591] = ⵠΔ[253];
    ⵠΔ[754] = ⵠΔ[753];
    ⵠΔ[276] = ⵠΔ[328];
    ⵠΔ[863] = ⵠΔ[865];
    ⵠΔ[862] = ⵠΔ[860];
    ⵠΔ[831] = ⵠΔ[829];
    ⵠΔ[340] = ⵠΔ[261];
    ⵠΔ[596] = ⵠΔ[594];
    ⵠΔ[345] = ⵠΔ[292];
    ⵠΔ[346] = ⵠΔ[293];
    ⵠΔ[457] = ⵠΔ[455];
    ⵠΔ[274] = ⵠΔ[313];
    ⵠΔ[341] = ⵠΔ[312];
    ⵠΔ[272] = ⵠΔ[258];
    ⵠΔ[344] = ⵠΔ[296];
    ⵠΔ[459] = ⵠΔ[458];
    ⵠΔ[342] = ⵠΔ[315];
    ⵠΔ[270] = ⵠΔ[297];
    ⵠΔ[271] = ⵠΔ[298];
    ⵠΔ[343] = ⵠΔ[316];
    ⵠΔ[269] = ⵠΔ[277];
    ⵠΔ[358] = ⵠΔ[310];
    ⵠΔ[354] = ⵠΔ[329];
    ⵠΔ[356] = ⵠΔ[331];
    ⵠΔ[355] = ⵠΔ[330];
    ⵠΔ[494] = ⵠΔ[492];
    ⵠΔ[349] = ⵠΔ[317];
    ⵠΔ[350] = ⵠΔ[319];
    ⵠΔ[275] = ⵠΔ[300];
    ⵠΔ[351] = ⵠΔ[323];
    ⵠΔ[353] = ⵠΔ[305];
    ⵠΔ[514] = ⵠΔ[513];
    ⵠΔ[352] = ⵠΔ[303];
    ⵠΔ[520] = ⵠΔ[518];
    ⵠΔ[534] = ⵠΔ[532];
    ⵠΔ[531] = ⵠΔ[529];
    ⵠΔ[522] = ⵠΔ[521];
    ⵠΔ[524] = ⵠΔ[523];
    ⵠΔ[565] = ⵠΔ[563];
    ⵠΔ[554] = ⵠΔ[553];
    ⵠΔ[357] = ⵠΔ[335];
    ⵠΔ[359] = ⵠΔ[337];
    ⵠΔ[339] = f53(function (p1129, p1130, p1131) {
      var v1465 = document.createElement("canvas");
      var v1466 = v1465.getContext("2d");
      v1465.width = p1129 * 118;
      v1465.height = p1129 * 129;
      v1466.save();
      v1466.translate(p1129 * 90, p1129 * 90);
      f83(v1466, p1129 * -86.5, p1129 * -86, p1129 * 110, p1129 * 110, p1129 * 15);
      v1466.restore();
      f84(v1466, p1131[0], p1131[1], 4);
      v1466.save();
      f83(v1466, p1129 * 30, p1129 * 115, p1129 * 60, p1129 * 5, p1129 * 15);
      v1466.restore();
      f84(v1466, p1131[2], p1131[3], 4);
      v1466.save();
      f83(v1466, p1129 * 50, p1129 * 117, p1129 * 20, p1129 * 10, p1129 * 15);
      v1466.restore();
      f84(v1466, p1131[2]);
      return v1465;
    }(0.8, 0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]));
    ⵠΔ[366] = f120(0.5, [{
      f: f194,
      x: 0,
      y: 2,
      a: 1,
      r: 0,
      c: ["#ffffff"]
    }], 0.16, ["#c4a23a", "#d0ad41", "#b89733"], 0.9);
    ⵠΔ[382] = ⵠΔ[361];
    ⵠΔ[383] = ⵠΔ[362];
    ⵠΔ[384] = ⵠΔ[364];
    ⵠΔ[497] = ⵠΔ[495];
    ⵠΔ[385] = ⵠΔ[392];
    ⵠΔ[774] = ⵠΔ[178];
    ⵠΔ[775] = ⵠΔ[179];
    ⵠΔ[386] = ⵠΔ[368];
    ⵠΔ[625] = ⵠΔ[624];
    ⵠΔ[394] = ⵠΔ[393];
    ⵠΔ[1163] = ⵠΔ[1162];
    ⵠΔ[506] = ⵠΔ[505];
    ⵠΔ[387] = ⵠΔ[369];
    ⵠΔ[504] = ⵠΔ[502];
    ⵠΔ[388] = ⵠΔ[372];
    ⵠΔ[389] = ⵠΔ[375];
    ⵠΔ[390] = ⵠΔ[378];
    ⵠΔ[501] = ⵠΔ[499];
    ⵠΔ[391] = ⵠΔ[381];
    ⵠΔ[403] = ⵠΔ[401];
    ⵠΔ[397] = ⵠΔ[395];
    ⵠΔ[400] = ⵠΔ[398];
    ⵠΔ[406] = ⵠΔ[404];
    ⵠΔ[474] = ⵠΔ[472];
    ⵠΔ[875] = ⵠΔ[874];
    ⵠΔ[552] = ⵠΔ[550];
    ⵠΔ[710] = ⵠΔ[709];
    ⵠΔ[479] = ⵠΔ[477];
    ⵠΔ[482] = ⵠΔ[480];
    ⵠΔ[485] = ⵠΔ[483];
    ⵠΔ[488] = ⵠΔ[486];
    ⵠΔ[410] = ⵠΔ[408];
    ⵠΔ[719] = ⵠΔ[717];
    ⵠΔ[422] = ⵠΔ[420];
    ⵠΔ[431] = ⵠΔ[429];
    ⵠΔ[434] = ⵠΔ[432];
    ⵠΔ[437] = ⵠΔ[435];
    ⵠΔ[543] = ⵠΔ[541];
    ⵠΔ[733] = ⵠΔ[732];
    ⵠΔ[440] = ⵠΔ[438];
    ⵠΔ[443] = ⵠΔ[441];
    ⵠΔ[446] = ⵠΔ[418];
    ⵠΔ[606] = ⵠΔ[605];
    ⵠΔ[844] = ⵠΔ[842];
    ⵠΔ[683] = ⵠΔ[685];
    ⵠΔ[610] = ⵠΔ[609];
    ⵠΔ[689] = ⵠΔ[143];
    ⵠΔ[686] = ⵠΔ[142];
    ⵠΔ[682] = ⵠΔ[140];
    ⵠΔ[615] = ⵠΔ[613];
    ⵠΔ[614] = ⵠΔ[612];
    ⵠΔ[628] = ⵠΔ[626];
    ⵠΔ[630] = ⵠΔ[629];
    ⵠΔ[636] = ⵠΔ[634];
    ⵠΔ[868] = ⵠΔ[200];
    ⵠΔ[867] = ⵠΔ[866];
    ⵠΔ[648] = ⵠΔ[646];
    ⵠΔ[651] = ⵠΔ[649];
    ⵠΔ[653] = ⵠΔ[652];
    ⵠΔ[661] = ⵠΔ[659];
    ⵠΔ[898] = ⵠΔ[196];
    ⵠΔ[663] = ⵠΔ[662];
    ⵠΔ[665] = ⵠΔ[664];
    ⵠΔ[675] = ⵠΔ[674];
    ⵠΔ[731] = ⵠΔ[145];
    ⵠΔ[757] = ⵠΔ[756];
    ⵠΔ[759] = ⵠΔ[176];
    ⵠΔ[761] = ⵠΔ[760];
    ⵠΔ[763] = ⵠΔ[177];
    ⵠΔ[765] = ⵠΔ[764];
    ⵠΔ[766] = ⵠΔ[175];
    ⵠΔ[769] = ⵠΔ[767];
    ⵠΔ[773] = ⵠΔ[771];
    ⵠΔ[778] = ⵠΔ[776];
    ⵠΔ[781] = ⵠΔ[779];
    ⵠΔ[787] = ⵠΔ[181];
    ⵠΔ[786] = ⵠΔ[180];
    ⵠΔ[790] = ⵠΔ[789];
    ⵠΔ[801] = ⵠΔ[800];
    ⵠΔ[810] = ⵠΔ[808];
    ⵠΔ[836] = ⵠΔ[834];
    ⵠΔ[847] = ⵠΔ[845];
    ⵠΔ[828] = ⵠΔ[826];
  }
  function f284(p1132, p1133, p1134) {
    var v1467 = document.createElement("canvas");
    var v1468 = v1467.getContext("2d");
    v1467.width = p1132 * 372;
    v1467.height = p1132 * 358;
    v1468.translate(p1132 * 0, p1132 * 10);
    v1468.globalAlpha = p1133 ? 0.2 : 1;
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 247.00003051757812, p1132 * 115.76704406738281);
    v1468.bezierCurveTo(p1132 * 305.0000305175781, p1132 * 124.76704406738281, p1132 * 335.0000305175781, p1132 * 112.76704406738281, p1132 * 359.0000305175781, p1132 * 93.76704406738281);
    v1468.bezierCurveTo(p1132 * 359.5000305175781, p1132 * 113.26704406738281, p1132 * 359.5000305175781, p1132 * 113.26704406738281, p1132 * 360.0000305175781, p1132 * 132.7670440673828);
    v1468.bezierCurveTo(p1132 * 339.0000305175781, p1132 * 177.7670440673828, p1132 * 281.0000305175781, p1132 * 178.7670440673828, p1132 * 243.00003051757812, p1132 * 183.7670440673828);
    v1468.bezierCurveTo(p1132 * 214.50003051757812, p1132 * 214.2670440673828, p1132 * 214.50003051757812, p1132 * 214.2670440673828, p1132 * 186.00003051757812, p1132 * 244.7670440673828);
    v1468.bezierCurveTo(p1132 * 155.00003051757812, p1132 * 214.2670440673828, p1132 * 155.00003051757812, p1132 * 214.2670440673828, p1132 * 124.00003051757812, p1132 * 183.7670440673828);
    v1468.bezierCurveTo(p1132 * 51.000030517578125, p1132 * 180.7670440673828, p1132 * 21.000030517578125, p1132 * 161.7670440673828, p1132 * 9.000030517578125, p1132 * 129.7670440673828);
    v1468.bezierCurveTo(p1132 * 8.500030517578125, p1132 * 110.76704406738281, p1132 * 8.500030517578125, p1132 * 110.76704406738281, p1132 * 8.000030517578125, p1132 * 91.76704406738281);
    v1468.bezierCurveTo(p1132 * 31.000030517578125, p1132 * 112.76704406738281, p1132 * 87.00003051757812, p1132 * 119.76704406738281, p1132 * 116.00003051757812, p1132 * 117.76704406738281);
    v1468.bezierCurveTo(p1132 * 175.00003051757812, p1132 * 18.767044067382812, p1132 * 170.00003051757812, p1132 * 23.767044067382812, p1132 * 181.00003051757812, p1132 * 14.767044067382812);
    v1468.bezierCurveTo(p1132 * 199.00003051757812, p1132 * 34.76704406738281, p1132 * 203.00003051757812, p1132 * 54.76704406738281, p1132 * 247.00003051757812, p1132 * 115.76704406738281);
    v1468.closePath();
    f84(v1468, p1134[0], p1134[0], p1132 * 10);
    v1468.translate(p1132 * 0, p1132 * -10);
    v1468.globalAlpha = 1;
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 107.00003051757812, p1132 * 54.13069152832031);
    v1468.bezierCurveTo(p1132 * 106.50003051757812, p1132 * 38.63069152832031, p1132 * 106.50003051757812, p1132 * 38.63069152832031, p1132 * 106.00003051757812, p1132 * 23.130691528320312);
    v1468.bezierCurveTo(p1132 * 121.50003051757812, p1132 * 38.13069152832031, p1132 * 121.50003051757812, p1132 * 38.13069152832031, p1132 * 137.00003051757812, p1132 * 53.13069152832031);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 233.00003051757812, p1132 * 53.6761474609375);
    v1468.bezierCurveTo(p1132 * 247.00003051757812, p1132 * 37.1761474609375, p1132 * 247.00003051757812, p1132 * 37.1761474609375, p1132 * 261.0000305175781, p1132 * 20.6761474609375);
    v1468.bezierCurveTo(p1132 * 261.0000305175781, p1132 * 36.1761474609375, p1132 * 261.0000305175781, p1132 * 36.1761474609375, p1132 * 261.0000305175781, p1132 * 51.6761474609375);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 293.0000305175781, p1132 * 54.403411865234375);
    v1468.bezierCurveTo(p1132 * 300.0000305175781, p1132 * 49.903411865234375, p1132 * 300.0000305175781, p1132 * 49.903411865234375, p1132 * 307.0000305175781, p1132 * 45.403411865234375);
    v1468.bezierCurveTo(p1132 * 307.0000305175781, p1132 * 49.903411865234375, p1132 * 307.0000305175781, p1132 * 49.903411865234375, p1132 * 307.0000305175781, p1132 * 54.403411865234375);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 77.00003051757812, p1132 * 54.403411865234375);
    v1468.bezierCurveTo(p1132 * 70.00003051757812, p1132 * 50.403411865234375, p1132 * 70.00003051757812, p1132 * 50.403411865234375, p1132 * 63.000030517578125, p1132 * 46.403411865234375);
    v1468.bezierCurveTo(p1132 * 62.500030517578125, p1132 * 50.903411865234375, p1132 * 62.500030517578125, p1132 * 50.903411865234375, p1132 * 62.000030517578125, p1132 * 55.403411865234375);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 58.000030517578125, p1132 * 122.3125);
    v1468.bezierCurveTo(p1132 * 59.500030517578125, p1132 * 97.3125, p1132 * 59.500030517578125, p1132 * 97.3125, p1132 * 61.000030517578125, p1132 * 72.3125);
    v1468.bezierCurveTo(p1132 * 91.00003051757812, p1132 * 89.3125, p1132 * 91.00003051757812, p1132 * 89.3125, p1132 * 121.00003051757812, p1132 * 106.3125);
    v1468.closePath();
    f84(v1468, p1134[1], p1134[1], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 310.0000305175781, p1132 * 127.3125);
    v1468.bezierCurveTo(p1132 * 308.0000305175781, p1132 * 98.3125, p1132 * 308.0000305175781, p1132 * 98.3125, p1132 * 306.0000305175781, p1132 * 69.3125);
    v1468.bezierCurveTo(p1132 * 274.5000305175781, p1132 * 88.8125, p1132 * 274.5000305175781, p1132 * 88.8125, p1132 * 243.00003051757812, p1132 * 108.3125);
    v1468.closePath();
    f84(v1468, p1134[1], p1134[1], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 226.00003051757812, p1132 * 87.85795593261719);
    v1468.bezierCurveTo(p1132 * 243.50003051757812, p1132 * 66.85795593261719, p1132 * 243.50003051757812, p1132 * 66.85795593261719, p1132 * 261.0000305175781, p1132 * 45.85795593261719);
    v1468.bezierCurveTo(p1132 * 265.0000305175781, p1132 * 83.85795593261719, p1132 * 265.0000305175781, p1132 * 83.85795593261719, p1132 * 269.0000305175781, p1132 * 121.85795593261719);
    v1468.bezierCurveTo(p1132 * 235.00003051757812, p1132 * 122.85795593261719, p1132 * 233.00003051757812, p1132 * 107.85795593261719, p1132 * 228.00003051757812, p1132 * 90.85795593261719);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 105.00003051757812, p1132 * 128.8579559326172);
    v1468.bezierCurveTo(p1132 * 104.50003051757812, p1132 * 87.85795593261719, p1132 * 104.50003051757812, p1132 * 87.85795593261719, p1132 * 104.00003051757812, p1132 * 46.85795593261719);
    v1468.bezierCurveTo(p1132 * 126.50003051757812, p1132 * 69.35795593261719, p1132 * 126.50003051757812, p1132 * 69.35795593261719, p1132 * 149.00003051757812, p1132 * 91.85795593261719);
    v1468.bezierCurveTo(p1132 * 130.00003051757812, p1132 * 123.85795593261719, p1132 * 123.00003051757812, p1132 * 132.8579559326172, p1132 * 107.00003051757812, p1132 * 130.8579559326172);
    v1468.closePath();
    f84(v1468, p1134[1], p1134[1], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 59.000030517578125, p1132 * 121.85795593261719);
    v1468.bezierCurveTo(p1132 * 59.500030517578125, p1132 * 99.35795593261719, p1132 * 59.500030517578125, p1132 * 99.35795593261719, p1132 * 60.000030517578125, p1132 * 76.85795593261719);
    v1468.bezierCurveTo(p1132 * 84.00003051757812, p1132 * 92.35795593261719, p1132 * 84.00003051757812, p1132 * 92.35795593261719, p1132 * 108.00003051757812, p1132 * 107.85795593261719);
    v1468.bezierCurveTo(p1132 * 106.00003051757812, p1132 * 148.8579559326172, p1132 * 86.00003051757812, p1132 * 148.8579559326172, p1132 * 62.000030517578125, p1132 * 123.85795593261719);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 105.00003051757812, p1132 * 132.8579559326172);
    v1468.bezierCurveTo(p1132 * 104.50003051757812, p1132 * 93.35795593261719, p1132 * 104.50003051757812, p1132 * 93.35795593261719, p1132 * 104.00003051757812, p1132 * 53.85795593261719);
    v1468.bezierCurveTo(p1132 * 126.50003051757812, p1132 * 75.85795593261719, p1132 * 126.50003051757812, p1132 * 75.85795593261719, p1132 * 149.00003051757812, p1132 * 97.85795593261719);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 311.0000305175781, p1132 * 126.85795593261719);
    v1468.bezierCurveTo(p1132 * 309.0000305175781, p1132 * 101.35795593261719, p1132 * 309.0000305175781, p1132 * 101.35795593261719, p1132 * 307.0000305175781, p1132 * 75.85795593261719);
    v1468.bezierCurveTo(p1132 * 271.0000305175781, p1132 * 96.85795593261719, p1132 * 271.0000305175781, p1132 * 96.85795593261719, p1132 * 235.00003051757812, p1132 * 117.85795593261719);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 228.00003051757812, p1132 * 96.85795593261719);
    v1468.bezierCurveTo(p1132 * 244.50003051757812, p1132 * 74.85795593261719, p1132 * 244.50003051757812, p1132 * 74.85795593261719, p1132 * 261.0000305175781, p1132 * 52.85795593261719);
    v1468.bezierCurveTo(p1132 * 265.5000305175781, p1132 * 89.85795593261719, p1132 * 265.5000305175781, p1132 * 89.85795593261719, p1132 * 270.0000305175781, p1132 * 126.85795593261719);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 12.000030517578125, p1132 * 86.13069152832031);
    v1468.bezierCurveTo(p1132 * 36.000030517578125, p1132 * 113.13069152832031, p1132 * 84.00003051757812, p1132 * 111.13069152832031, p1132 * 116.00003051757812, p1132 * 113.13069152832031);
    v1468.bezierCurveTo(p1132 * 164.00003051757812, p1132 * 23.130691528320312, p1132 * 172.00003051757812, p1132 * 18.130691528320312, p1132 * 181.00003051757812, p1132 * 9.130691528320312);
    v1468.bezierCurveTo(p1132 * 199.00003051757812, p1132 * 29.130691528320312, p1132 * 221.00003051757812, p1132 * 78.13069152832031, p1132 * 247.00003051757812, p1132 * 112.13069152832031);
    v1468.bezierCurveTo(p1132 * 301.0000305175781, p1132 * 122.13069152832031, p1132 * 338.0000305175781, p1132 * 111.13069152832031, p1132 * 359.0000305175781, p1132 * 94.13069152832031);
    v1468.bezierCurveTo(p1132 * 359.0000305175781, p1132 * 113.13069152832031, p1132 * 358.5000305175781, p1132 * 105.13069152832031, p1132 * 358.0000305175781, p1132 * 116.13069152832031);
    v1468.bezierCurveTo(p1132 * 270.5000305175781, p1132 * 130.1306915283203, p1132 * 270.5000305175781, p1132 * 130.1306915283203, p1132 * 183.00003051757812, p1132 * 144.1306915283203);
    v1468.bezierCurveTo(p1132 * 98.00003051757812, p1132 * 128.6306915283203, p1132 * 98.00003051757812, p1132 * 128.6306915283203, p1132 * 13.000030517578125, p1132 * 113.13069152832031);
    v1468.closePath();
    f84(v1468, p1134[1], p1134[1], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 247.00003051757812, p1132 * 115.76704406738281);
    v1468.bezierCurveTo(p1132 * 305.0000305175781, p1132 * 124.76704406738281, p1132 * 335.0000305175781, p1132 * 112.76704406738281, p1132 * 359.0000305175781, p1132 * 93.76704406738281);
    v1468.bezierCurveTo(p1132 * 359.5000305175781, p1132 * 113.26704406738281, p1132 * 359.5000305175781, p1132 * 113.26704406738281, p1132 * 360.0000305175781, p1132 * 132.7670440673828);
    v1468.bezierCurveTo(p1132 * 339.0000305175781, p1132 * 177.7670440673828, p1132 * 281.0000305175781, p1132 * 178.7670440673828, p1132 * 243.00003051757812, p1132 * 183.7670440673828);
    v1468.bezierCurveTo(p1132 * 214.50003051757812, p1132 * 214.2670440673828, p1132 * 214.50003051757812, p1132 * 214.2670440673828, p1132 * 186.00003051757812, p1132 * 244.7670440673828);
    v1468.bezierCurveTo(p1132 * 155.00003051757812, p1132 * 214.2670440673828, p1132 * 155.00003051757812, p1132 * 214.2670440673828, p1132 * 124.00003051757812, p1132 * 183.7670440673828);
    v1468.bezierCurveTo(p1132 * 51.000030517578125, p1132 * 180.7670440673828, p1132 * 21.000030517578125, p1132 * 161.7670440673828, p1132 * 9.000030517578125, p1132 * 129.7670440673828);
    v1468.bezierCurveTo(p1132 * 8.500030517578125, p1132 * 110.76704406738281, p1132 * 8.500030517578125, p1132 * 110.76704406738281, p1132 * 8.000030517578125, p1132 * 91.76704406738281);
    v1468.bezierCurveTo(p1132 * 31.000030517578125, p1132 * 112.76704406738281, p1132 * 87.00003051757812, p1132 * 119.76704406738281, p1132 * 116.00003051757812, p1132 * 117.76704406738281);
    v1468.bezierCurveTo(p1132 * 175.00003051757812, p1132 * 18.767044067382812, p1132 * 170.00003051757812, p1132 * 23.767044067382812, p1132 * 181.00003051757812, p1132 * 14.767044067382812);
    v1468.bezierCurveTo(p1132 * 199.00003051757812, p1132 * 34.76704406738281, p1132 * 203.00003051757812, p1132 * 54.76704406738281, p1132 * 247.00003051757812, p1132 * 115.76704406738281);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 27.000030517578125, p1132 * 94.76704406738281);
    v1468.bezierCurveTo(p1132 * 11.000030517578125, p1132 * 81.76704406738281, p1132 * 31.000030517578125, p1132 * 72.76704406738281, p1132 * 44.000030517578125, p1132 * 59.76704406738281);
    v1468.bezierCurveTo(p1132 * 9.000030517578125, p1132 * 65.76704406738281, p1132 * 4.000030517578125, p1132 * 78.76704406738281, p1132 * 9.000030517578125, p1132 * 89.76704406738281);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 352.0000305175781, p1132 * 100.76705932617188);
    v1468.bezierCurveTo(p1132 * 362.0000305175781, p1132 * 92.76705932617188, p1132 * 352.0000305175781, p1132 * 84.76705932617188, p1132 * 340.0000305175781, p1132 * 68.76705932617188);
    v1468.bezierCurveTo(p1132 * 360.0000305175781, p1132 * 69.76705932617188, p1132 * 364.0000305175781, p1132 * 79.76705932617188, p1132 * 364.0000305175781, p1132 * 94.76705932617188);
    v1468.closePath();
    f84(v1468, p1134[1], p1134[1], p1132 * 1);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 25.000030517578125, p1132 * 97.94886779785156);
    v1468.bezierCurveTo(p1132 * 2.000030517578125, p1132 * 76.94886779785156, p1132 * 29.000030517578125, p1132 * 62.94886779785156, p1132 * 44.000030517578125, p1132 * 59.94886779785156);
    v1468.bezierCurveTo(p1132 * 8.000030517578125, p1132 * 59.94886779785156, p1132 * -0.999969482421875, p1132 * 81.94886779785156, p1132 * 4.000030517578125, p1132 * 92.94886779785156);
    v1468.closePath();
    f84(v1468, p1134[3]);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 349.0000305175781, p1132 * 100.94886779785156);
    v1468.bezierCurveTo(p1132 * 366.0000305175781, p1132 * 82.94886779785156, p1132 * 353.0000305175781, p1132 * 76.94886779785156, p1132 * 337.0000305175781, p1132 * 67.94886779785156);
    v1468.bezierCurveTo(p1132 * 366.0000305175781, p1132 * 69.94886779785156, p1132 * 366.0000305175781, p1132 * 83.94886779785156, p1132 * 363.0000305175781, p1132 * 101.94886779785156);
    v1468.closePath();
    f84(v1468, p1134[2], p1134[3], p1132 * 10);
    f89(v1468, p1132 * 46.000030517578125, p1132 * 137.5852279663086, p1132 * 9.219544457292887);
    f84(v1468, p1134[4], p1134[5], p1132 * 1);
    f89(v1468, p1132 * 308.0000305175781, p1132 * 141.5852279663086, p1132 * 8.54400374531753);
    f84(v1468, p1134[4], p1134[5], p1132 * 1);
    f89(v1468, p1132 * 92.00003051757812, p1132 * 149.58523559570312, p1132 * 14.866068747318506);
    f84(v1468, p1134[4], p1134[5], p1132 * 1);
    f89(v1468, p1132 * 262.0000305175781, p1132 * 148.8579559326172, p1132 * 15.620499351813308);
    f84(v1468, p1134[4], p1134[5], p1132 * 1);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 184.00003051757812, p1132 * 68.85795593261719);
    v1468.bezierCurveTo(p1132 * 203.00003051757812, p1132 * 108.85795593261719, p1132 * 203.00003051757812, p1132 * 108.85795593261719, p1132 * 222.00003051757812, p1132 * 148.8579559326172);
    v1468.bezierCurveTo(p1132 * 202.50003051757812, p1132 * 177.8579559326172, p1132 * 202.50003051757812, p1132 * 177.8579559326172, p1132 * 183.00003051757812, p1132 * 206.8579559326172);
    v1468.bezierCurveTo(p1132 * 162.00003051757812, p1132 * 178.8579559326172, p1132 * 162.00003051757812, p1132 * 178.8579559326172, p1132 * 141.00003051757812, p1132 * 150.8579559326172);
    v1468.closePath();
    f84(v1468, p1134[4], p1134[5], p1132 * 10);
    v1468.beginPath();
    v1468.lineCap = "round";
    v1468.lineJoin = "round";
    v1468.moveTo(p1132 * 183.00003051757812, p1132 * 104.94886779785156);
    v1468.bezierCurveTo(p1132 * 192.50003051757812, p1132 * 125.44886779785156, p1132 * 192.50003051757812, p1132 * 125.44886779785156, p1132 * 202.00003051757812, p1132 * 145.94886779785156);
    v1468.bezierCurveTo(p1132 * 192.00003051757812, p1132 * 163.94886779785156, p1132 * 192.00003051757812, p1132 * 163.94886779785156, p1132 * 182.00003051757812, p1132 * 181.94886779785156);
    v1468.bezierCurveTo(p1132 * 172.50003051757812, p1132 * 164.44886779785156, p1132 * 172.50003051757812, p1132 * 164.44886779785156, p1132 * 163.00003051757812, p1132 * 146.94886779785156);
    v1468.closePath();
    f84(v1468, p1134[6]);
    return v1467;
  }
  function f285() {
    new Date().getTime();
    function e(p1135) {
      var v1469 = 0;
      var v1470 = 0;
      for (var v1471 = 0; v1471 < p1135.length; v1471++) {
        var v1472 = p1135.charAt(v1471);
        if (v1472 !== "_" && v1471 !== 5) {
          if (v1472 === "1") {
            v1469 += Math.pow(2, v1470);
          }
          v1470++;
        }
      }
      return v1469;
    }
    ⲆⲆⲆⵠⵠᐃⵠΔΔ();
    ⵠΔ[1026] = [Δⵠ.ᐃΔⵠⲆᐃⵠⲆ, Δⵠ.ᐃⲆⵠᐃΔᐃⲆ];
    ⵠΔ[1025] = [];
    ⵠΔ[1025][v624.ᐃᐃᐃ] = [];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_010_000")] = [Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆᐃⲆⵠᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_010_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_010_000")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_011_000")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_010_000")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_011_010")] = [Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_011_011")] = [Δⵠ.ΔᐃⲆⲆΔΔΔ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔⵠΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_110_000")] = [Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ⲆᐃⲆⵠᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_110_010")] = [Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⵠⵠⲆⲆᐃⵠ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_110_110")] = [Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⲆᐃΔⲆⵠⲆ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⵠⵠⲆⲆᐃⵠ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_111_000")] = [Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_111_111")] = [Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ΔᐃⲆⲆΔΔΔ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_010_000")] = [Δⵠ.ⲆᐃⲆⵠᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_010_010")] = [Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_011_000")] = [Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆᐃⲆΔⲆ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_000")] = [Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")] = [Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_011_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_011_011")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_111_011")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_111_000")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_111_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_111_011")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_111_110")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_111_111")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_111_110")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("000_111_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("010_110_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_011_000")] = [Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆᐃⲆΔⲆ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_011_010")] = [Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_011_011")] = [Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ΔᐃⲆⲆΔΔΔ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_000")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_011_010")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_010")] = [Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_011")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_010")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_110")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_010")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("011_111_111")] = [Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ΔᐃⲆⲆΔΔΔ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_110_000")] = [Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃⲆⲆᐃᐃⵠⲆ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_110_010")] = [Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_110_110")] = [Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_000")] = [Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃⲆⲆᐃᐃⵠⲆ, Δⵠ.ⲆᐃⵠⲆⲆⵠΔ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_110")] = [Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ, Δⵠ.ⲆᐃⵠⲆⲆⵠΔ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_111")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_011")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("110_111_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_110")] = [Δⵠ.ΔⲆᐃΔᐃ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ, Δⵠ.ⲆᐃⵠⲆⲆⵠΔ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ⲆⲆΔᐃΔᐃΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_011")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_110")];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_000")] = [Δⵠ.ᐃⲆⲆᐃᐃⵠⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ⲆᐃⵠⲆⲆⵠΔ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_111")] = [Δⵠ.ⲆⲆΔᐃΔᐃΔ, Δⵠ.ᐃⵠΔΔⲆ, Δⵠ.ΔᐃᐃⵠΔ, Δⵠ.ΔᐃⲆⲆΔΔΔ, Δⵠ.ⲆⵠΔⲆⲆ, Δⵠ.ⲆⵠΔⲆᐃ, Δⵠ.ᐃⲆⵠΔⵠ, Δⵠ.ᐃⲆᐃᐃΔⲆⵠ, Δⵠ.ᐃⵠᐃᐃΔⲆⲆ, Δⵠ.ⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⲆⲆⲆⵠΔ, Δⵠ.ⵠΔⵠᐃᐃᐃΔ, Δⵠ.ᐃᐃⲆΔⵠΔᐃ, Δⵠ.ⲆΔΔⵠᐃ, Δⵠ.ΔΔᐃΔᐃⵠⵠ, Δⵠ.ΔΔΔΔⵠΔΔ, Δⵠ.ⲆᐃⲆⵠᐃ, Δⵠ.ⵠΔΔⲆΔ, Δⵠ.ⲆⲆⲆΔᐃⵠⲆ, Δⵠ.ⵠᐃᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔⵠΔ, Δⵠ.ⲆᐃⲆΔⲆ, Δⵠ.ΔⲆᐃΔᐃ];
    ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_010")] = ⵠΔ[1025][v624.ᐃᐃᐃ][e("111_111_110")];
    ⵠΔ[1025][v624.Δᐃⵠ] = [];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_010_000")] = [Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ᐃΔΔⵠⲆ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_010_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("000_010_000")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_011_000")] = ⵠΔ[1025][v624.Δᐃⵠ][e("000_010_000")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_011_010")] = [Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_011_011")] = [Δⵠ.ᐃᐃΔΔⵠⵠⵠ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⵠ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_110_000")] = [Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_110_010")] = [Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ᐃⲆΔΔᐃⵠΔ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_110_110")] = [Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⵠΔⲆⵠⲆⲆⵠ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ᐃⲆΔΔᐃⵠΔ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_111_000")] = [Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_111_111")] = [Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃᐃΔΔⵠⵠⵠ, Δⵠ.ᐃΔⲆΔΔⵠᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_010_000")] = [Δⵠ.ᐃΔΔⵠⲆ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_010_010")] = [Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_011_000")] = [Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ⲆᐃⲆⵠΔ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_000")] = [Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")] = [Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ᐃΔⲆΔΔⵠᐃ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_011_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_011_011")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_111_011")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_111_000")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_111_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_111_011")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_111_110")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("010_111_111")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_111_110")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("000_111_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("010_110_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_011_000")] = [Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ⲆᐃⲆⵠΔ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_011_010")] = [Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_011_011")] = [Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃᐃΔΔⵠⵠⵠ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_000")] = ⵠΔ[1025][v624.Δᐃⵠ][e("011_011_010")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_010")] = [Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ᐃΔⲆΔΔⵠᐃ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_011")] = ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_010")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_110")] = ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_010")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("011_111_111")] = [Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ᐃᐃΔΔⵠⵠⵠ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ᐃΔⲆΔΔⵠᐃ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_110_000")] = [Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ⲆᐃⲆᐃⲆᐃⲆ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_110_010")] = [Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_110_110")] = [Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_000")] = [Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ⲆᐃⲆᐃⲆᐃⲆ, Δⵠ.ⵠΔⲆⲆⲆᐃⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_110")] = [Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ᐃΔⲆΔΔⵠᐃ, Δⵠ.ⵠΔⲆⲆⲆᐃⵠ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_111")] = ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_011")] = ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("110_111_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_110")] = [Δⵠ.ΔᐃᐃⲆᐃ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ, Δⵠ.ⵠΔⲆⲆⲆᐃⵠ, Δⵠ.ᐃΔⲆΔΔⵠᐃ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ᐃⲆⲆⵠΔᐃᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_011")] = ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_110")];
    ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_000")] = [Δⵠ.ⲆᐃⲆᐃⲆᐃⲆ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.ⵠΔⲆⲆⲆᐃⵠ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_111")] = [Δⵠ.ᐃⲆⲆⵠΔᐃᐃ, Δⵠ.Ⲇᐃⵠⵠᐃ, Δⵠ.ⲆⲆᐃΔⵠ, Δⵠ.ᐃᐃΔΔⵠⵠⵠ, Δⵠ.ⵠⵠΔⵠΔ, Δⵠ.ᐃⵠⲆⵠᐃ, Δⵠ.ΔⵠΔⵠᐃ, Δⵠ.ⲆΔᐃⵠᐃⵠᐃ, Δⵠ.ⲆΔⲆᐃᐃᐃΔ, Δⵠ.ⵠΔⵠᐃⲆ, Δⵠ.ᐃΔⲆΔΔⵠᐃ, Δⵠ.ΔΔⲆᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⵠⵠⲆⵠ, Δⵠ.ΔᐃⵠᐃⲆ, Δⵠ.ⵠᐃΔⲆΔᐃᐃ, Δⵠ.ⲆΔΔⵠΔⵠΔ, Δⵠ.ᐃΔΔⵠⲆ, Δⵠ.ⵠΔΔⲆⲆ, Δⵠ.ΔΔᐃⵠᐃᐃΔ, Δⵠ.ⲆᐃΔΔⵠⲆΔ, Δⵠ.ⵠⲆᐃΔᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⵠ, Δⵠ.ⲆᐃⲆⵠΔ, Δⵠ.ΔᐃᐃⲆᐃ];
    ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_010")] = ⵠΔ[1025][v624.Δᐃⵠ][e("111_111_110")];
    ⵠΔ[1024] = [];
    ⵠΔ[1024][v624.ᐃᐃᐃ] = [];
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_010_000")] = Δⵠ.ᐃᐃᐃⵠΔⵠΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_010_010")] = Δⵠ.ΔᐃΔᐃⲆⵠⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_011_000")] = Δⵠ.ⲆⲆᐃᐃᐃⵠⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_011_010")] = Δⵠ.ΔⵠᐃΔⵠΔⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_011_011")] = Δⵠ.ⵠⵠΔᐃΔⲆⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_110_000")] = Δⵠ.ⲆⵠΔⲆⵠΔⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_110_010")] = Δⵠ.ΔⵠⵠⲆⵠᐃⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_110_110")] = Δⵠ.ΔⵠⵠᐃⲆⲆᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_111_000")] = Δⵠ.ⵠⲆᐃⵠᐃᐃᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_111_010")] = Δⵠ.ⵠⵠⵠΔⲆᐃⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_111_011")] = Δⵠ.ᐃΔᐃⲆᐃΔⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_111_110")] = Δⵠ.ᐃⲆⵠⵠⵠⵠᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("000_111_111")] = Δⵠ.ⵠⵠᐃᐃᐃᐃⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_010_000")] = Δⵠ.ⲆᐃΔⲆⲆⲆᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_010_010")] = Δⵠ.ⵠᐃⲆᐃᐃᐃⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_011_000")] = Δⵠ.ⵠⲆΔⲆΔΔⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_011_010")] = Δⵠ.ⲆⵠᐃⲆΔⲆⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_011_011")] = Δⵠ.ΔΔⵠⵠΔᐃΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_110_000")] = Δⵠ.ⲆⵠⲆᐃⲆⲆΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_110_010")] = Δⵠ.ΔⲆⲆⲆΔᐃⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_110_110")] = Δⵠ.ΔᐃᐃⵠⲆΔΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_111_000")] = Δⵠ.ᐃᐃᐃᐃⲆᐃᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_111_010")] = Δⵠ.ᐃⲆΔᐃΔᐃᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_111_011")] = Δⵠ.ΔⵠᐃⵠⲆⵠΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_111_110")] = Δⵠ.ⲆᐃΔⵠΔⲆΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("010_111_111")] = Δⵠ.ⵠⵠᐃΔⲆᐃΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_011_000")] = Δⵠ.ⲆⲆΔᐃᐃⵠΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_011_010")] = Δⵠ.ΔᐃΔᐃΔⲆⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_011_011")] = Δⵠ.ΔⲆΔΔⵠᐃᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_111_000")] = Δⵠ.ⲆⲆⵠⲆⲆᐃⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_111_010")] = Δⵠ.ΔΔⲆⵠᐃᐃΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_111_011")] = Δⵠ.ⵠΔᐃᐃⵠⵠⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_111_110")] = Δⵠ.ᐃΔᐃΔⲆⵠᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("011_111_111")] = Δⵠ.ⵠΔΔⲆΔᐃⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_110_000")] = Δⵠ.ᐃⲆⲆᐃⵠΔⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_110_010")] = Δⵠ.ⲆᐃⲆᐃⲆⵠᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_110_110")] = Δⵠ.ᐃΔⵠⵠⵠⲆᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_111_000")] = Δⵠ.ᐃⲆΔⲆᐃᐃᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_111_010")] = Δⵠ.ΔᐃᐃⲆᐃᐃⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_111_011")] = Δⵠ.ⵠᐃⲆⲆᐃⵠⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_111_110")] = Δⵠ.ΔⲆΔⵠⲆΔΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("110_111_111")] = Δⵠ.ᐃΔᐃΔᐃΔᐃ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("111_111_011")] = Δⵠ.ⵠⲆⵠΔⵠΔⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("111_111_110")] = Δⵠ.ⲆⵠⲆⲆⲆⵠⵠ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("111_111_011")] = Δⵠ.ⵠⲆⵠΔⵠΔⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("111_111_000")] = Δⵠ.ⲆⵠᐃⵠⲆⲆⲆ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("111_111_111")] = Δⵠ.ᐃΔⲆᐃⲆᐃΔ;
    ⵠΔ[1024][v624.ᐃᐃᐃ][e("111_111_010")] = Δⵠ.ΔⵠⵠΔΔⲆⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ] = [];
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_010_000")] = Δⵠ.ⲆⵠⵠⲆⵠΔᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_010_010")] = Δⵠ.ΔⲆᐃᐃⵠᐃᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_011_000")] = Δⵠ.ᐃΔⵠⵠΔᐃᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_011_010")] = Δⵠ.ⲆⵠⲆᐃΔⵠᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_011_011")] = Δⵠ.ⵠΔΔⲆⲆⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_110_000")] = Δⵠ.ΔΔΔΔⲆⵠΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_110_010")] = Δⵠ.ⲆⲆᐃⵠΔⵠᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_110_110")] = Δⵠ.ⵠⵠⲆⲆⵠⵠᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_111_000")] = Δⵠ.ᐃⵠⲆᐃⵠᐃΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_111_010")] = Δⵠ.ᐃΔΔΔⲆΔΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_111_011")] = Δⵠ.ᐃΔⵠᐃΔᐃᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_111_110")] = Δⵠ.ⵠΔⵠⲆΔΔⵠ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("000_111_111")] = Δⵠ.ⲆⵠⵠᐃᐃᐃΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_010_000")] = Δⵠ.ⵠᐃᐃⵠΔΔΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_010_010")] = Δⵠ.ⲆᐃⵠΔΔⵠᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_011_000")] = Δⵠ.ᐃΔΔⵠⵠΔᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_011_010")] = Δⵠ.ᐃΔⲆᐃᐃⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_011_011")] = Δⵠ.ΔⲆⵠᐃᐃⲆᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_110_000")] = Δⵠ.ⵠΔⵠⵠΔᐃᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_110_010")] = Δⵠ.ᐃᐃᐃΔⵠΔΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_110_110")] = Δⵠ.ᐃⲆⵠΔᐃⲆᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_111_000")] = Δⵠ.ᐃΔΔΔΔⲆⵠ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_111_010")] = Δⵠ.ⲆΔΔⵠⲆⵠᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_111_011")] = Δⵠ.ⲆᐃΔΔΔᐃⵠ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_111_110")] = Δⵠ.ΔⲆᐃⵠΔⲆⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("010_111_111")] = Δⵠ.ᐃⲆΔΔⲆⲆⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_011_000")] = Δⵠ.ΔⲆΔᐃⵠΔΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_011_010")] = Δⵠ.ⵠⲆⲆΔΔᐃᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_011_011")] = Δⵠ.ΔⲆΔⲆΔⵠⵠ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_111_000")] = Δⵠ.ⵠᐃⵠⲆΔⵠⵠ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_111_010")] = Δⵠ.ᐃᐃⵠΔΔⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_111_011")] = Δⵠ.ΔᐃᐃⲆᐃⵠΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_111_110")] = Δⵠ.ⲆᐃᐃⲆⲆⲆⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("011_111_111")] = Δⵠ.ᐃΔⲆΔᐃⵠⵠ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_110_000")] = Δⵠ.ΔⲆΔⵠᐃⲆᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_110_010")] = Δⵠ.ᐃⲆΔⲆⵠⲆⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_110_110")] = Δⵠ.ⲆⵠᐃⲆΔⲆᐃ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_111_000")] = Δⵠ.ⲆΔⲆΔⵠⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_111_010")] = Δⵠ.ⵠⲆΔᐃΔⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_111_011")] = Δⵠ.ⲆΔⲆⲆᐃⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_111_110")] = Δⵠ.ⵠⲆⲆΔⲆⲆⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("110_111_111")] = Δⵠ.ᐃⲆΔΔⵠⵠⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("111_111_011")] = Δⵠ.ⲆⲆᐃΔΔⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("111_111_110")] = Δⵠ.ⵠⲆⵠΔΔΔⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("111_111_011")] = Δⵠ.ⲆⲆᐃΔΔⲆΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("111_111_000")] = Δⵠ.ⲆΔᐃᐃᐃΔΔ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("111_111_111")] = Δⵠ.ΔⵠⵠΔⲆΔⲆ;
    ⵠΔ[1024][v624.Δᐃⵠ][e("111_111_010")] = Δⵠ.ⵠᐃᐃΔⲆⲆᐃ;
    ⵠΔ[32] = [];
    ⵠΔ[32][v624.ᐃᐃᐃ] = Δⵠ.ⲆᐃⵠΔᐃⲆΔ;
    ⵠΔ[32][v624.Δᐃⵠ] = Δⵠ.ᐃⲆⲆⵠⵠⵠᐃ;
    ⵠΔ[205] = [];
    ⵠΔ[205][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⵠΔΔᐃᐃ;
    ⵠΔ[205][v624.Δᐃⵠ] = Δⵠ.ⵠΔᐃΔᐃⵠⵠ;
    ⵠΔ[957] = [];
    ⵠΔ[957][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔΔⵠⲆᐃᐃ;
    ⵠΔ[957][v624.Δᐃⵠ] = Δⵠ.ⵠΔᐃᐃᐃⲆⲆ;
    ⵠΔ[207] = [];
    ⵠΔ[207][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⵠⲆᐃΔΔ;
    ⵠΔ[207][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⵠᐃⵠⲆⲆ;
    ⵠΔ[954] = [];
    ⵠΔ[954][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔᐃⲆⲆⵠⲆ;
    ⵠΔ[954][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⵠΔΔⵠⵠ;
    ⵠΔ[958] = [];
    ⵠΔ[958][v624.ᐃᐃᐃ] = Δⵠ.ⵠᐃΔᐃΔᐃⲆ;
    ⵠΔ[958][v624.Δᐃⵠ] = Δⵠ.ⵠᐃΔⲆⲆⲆᐃ;
    ⵠΔ[209] = [];
    ⵠΔ[209][v624.ᐃᐃᐃ] = Δⵠ.ⵠᐃⵠΔⲆᐃⵠ;
    ⵠΔ[209][v624.Δᐃⵠ] = Δⵠ.ᐃⵠⲆⵠᐃⵠⲆ;
    ⵠΔ[971] = [];
    ⵠΔ[971][v624.ᐃᐃᐃ] = Δⵠ.ΔΔⵠΔⲆΔⲆ;
    ⵠΔ[971][v624.Δᐃⵠ] = Δⵠ.ΔΔΔΔᐃᐃΔ;
    ⵠΔ[211] = [];
    ⵠΔ[211][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⵠⵠⵠⲆΔ;
    ⵠΔ[211][v624.Δᐃⵠ] = Δⵠ.ⵠΔⵠᐃΔⲆⲆ;
    ⵠΔ[986] = [];
    ⵠΔ[986][v624.ᐃᐃᐃ] = Δⵠ.ᐃΔⲆΔᐃⲆΔ;
    ⵠΔ[986][v624.Δᐃⵠ] = Δⵠ.ᐃⲆⲆⵠᐃⲆΔ;
    ⵠΔ[989] = [];
    ⵠΔ[989][v624.ᐃᐃᐃ] = [Δⵠ.ⲆᐃⲆΔⵠΔⲆ];
    ⵠΔ[989][v624.Δᐃⵠ] = [Δⵠ.ⵠᐃⲆᐃⲆⲆⲆ];
    ⵠΔ[217] = [];
    ⵠΔ[217][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⵠⵠⵠⲆΔ;
    ⵠΔ[217][v624.Δᐃⵠ] = Δⵠ.ⵠⵠⵠΔᐃᐃᐃ;
    ⵠΔ[219] = [];
    ⵠΔ[219][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⲆΔⵠΔΔ;
    ⵠΔ[219][v624.Δᐃⵠ] = Δⵠ.ⵠᐃⵠⲆΔⵠᐃ;
    ⵠΔ[218] = [];
    ⵠΔ[218][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠᐃⵠⲆΔⲆ;
    ⵠΔ[218][v624.Δᐃⵠ] = Δⵠ.ⵠⵠᐃⵠΔΔⵠ;
    ⵠΔ[212] = [];
    ⵠΔ[212][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠⵠⲆᐃⲆᐃ;
    ⵠΔ[212][v624.Δᐃⵠ] = Δⵠ.ᐃᐃᐃⲆⵠΔⵠ;
    ⵠΔ[213] = [];
    ⵠΔ[213][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⵠⵠⵠᐃⲆ;
    ⵠΔ[213][v624.Δᐃⵠ] = Δⵠ.ΔᐃᐃᐃⵠΔᐃ;
    ⵠΔ[214] = [];
    ⵠΔ[214][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠⵠᐃΔᐃⲆ;
    ⵠΔ[214][v624.Δᐃⵠ] = Δⵠ.ᐃᐃΔⲆⲆⵠᐃ;
    ⵠΔ[215] = [];
    ⵠΔ[215][v624.ᐃᐃᐃ] = Δⵠ.ΔΔΔΔᐃⵠⵠ;
    ⵠΔ[215][v624.Δᐃⵠ] = Δⵠ.ᐃᐃᐃᐃᐃⵠᐃ;
    ⵠΔ[216] = [];
    ⵠΔ[216][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔᐃⵠⲆΔᐃ;
    ⵠΔ[216][v624.Δᐃⵠ] = Δⵠ.ⵠᐃⵠᐃᐃᐃᐃ;
    ⵠΔ[220] = [];
    ⵠΔ[220][v624.ᐃᐃᐃ] = Δⵠ.ᐃⲆΔⵠⵠΔΔ;
    ⵠΔ[220][v624.Δᐃⵠ] = Δⵠ.Δⵠⵠᐃⵠⵠⵠ;
    ⵠΔ[1020] = [];
    ⵠΔ[1020][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃⵠⲆΔΔⵠ;
    ⵠΔ[1020][v624.Δᐃⵠ] = Δⵠ.ᐃᐃⵠΔΔΔⲆ;
    ⵠΔ[1021] = [];
    ⵠΔ[1021][v624.ᐃᐃᐃ] = Δⵠ.ΔΔΔⵠΔⲆΔ;
    ⵠΔ[1021][v624.Δᐃⵠ] = Δⵠ.ᐃΔⲆᐃΔᐃⲆ;
    ⵠΔ[39] = [];
    ⵠΔ[39][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⵠⵠΔⲆΔ;
    ⵠΔ[39][v624.Δᐃⵠ] = Δⵠ.ΔⵠΔΔᐃⲆⵠ;
    ⵠΔ[1022] = Δⵠ.ⵠᐃΔⲆⲆᐃΔ;
    ⵠΔ[1023] = Δⵠ.ᐃⵠⲆᐃⵠΔᐃ;
    ⵠΔ[1041] = [];
    ⵠΔ[1041][v624.ᐃᐃᐃ] = [];
    ⵠΔ[1041][v624.Δᐃⵠ] = [];
    ⵠΔ[1041][v624.ᐃᐃᐃ].push(Δⵠ.ⲆⵠⲆⲆᐃᐃⲆ);
    ⵠΔ[1041][v624.ᐃᐃᐃ].push(Δⵠ.ΔⵠⵠⲆⲆᐃⲆ);
    ⵠΔ[1041][v624.ᐃᐃᐃ].push(Δⵠ.ⵠⲆⵠⵠΔΔΔ);
    ⵠΔ[1041][v624.Δᐃⵠ].push(Δⵠ.ΔᐃⲆⵠⲆᐃΔ);
    ⵠΔ[1041][v624.Δᐃⵠ].push(Δⵠ.ⵠΔⵠⵠᐃᐃΔ);
    ⵠΔ[1041][v624.Δᐃⵠ].push(Δⵠ.ⵠⲆⲆⲆᐃΔⵠ);
    ⵠΔ[244] = [];
    ⵠΔ[244][v624.ᐃᐃᐃ] = [];
    ⵠΔ[244][v624.Δᐃⵠ] = [];
    ⵠΔ[244][v624.ᐃᐃᐃ].push(Δⵠ.ⵠᐃⲆᐃⲆᐃⵠ);
    ⵠΔ[244][v624.ᐃᐃᐃ].push(Δⵠ.ⲆΔⵠΔⲆⵠⲆ);
    ⵠΔ[244][v624.ᐃᐃᐃ].push(Δⵠ.ⲆᐃΔⲆⵠΔᐃ);
    ⵠΔ[244][v624.Δᐃⵠ].push(Δⵠ.ⲆⲆΔΔⲆⲆΔ);
    ⵠΔ[244][v624.Δᐃⵠ].push(Δⵠ.ᐃΔᐃΔΔⵠⵠ);
    ⵠΔ[244][v624.Δᐃⵠ].push(Δⵠ.ᐃⲆⲆⲆΔᐃᐃ);
    ⵠΔ[1052] = [];
    ⵠΔ[1052][v624.ᐃᐃᐃ] = [];
    ⵠΔ[1052][v624.Δᐃⵠ] = [];
    ⵠΔ[1052][v624.ᐃᐃᐃ].push(Δⵠ.ᐃⵠⵠⲆΔᐃΔ);
    ⵠΔ[1052][v624.ᐃᐃᐃ].push(Δⵠ.ΔⲆΔΔⵠᐃⲆ);
    ⵠΔ[1052][v624.ᐃᐃᐃ].push(Δⵠ.ⵠⵠΔⲆⵠⵠΔ);
    ⵠΔ[1052][v624.ᐃᐃᐃ].push(Δⵠ.ⵠΔΔⲆⲆΔⵠ);
    ⵠΔ[1052][v624.ᐃᐃᐃ].push(Δⵠ.ᐃⵠΔᐃⲆⵠΔ);
    ⵠΔ[1052][v624.Δᐃⵠ].push(Δⵠ.ⲆᐃᐃΔⵠᐃᐃ);
    ⵠΔ[1052][v624.Δᐃⵠ].push(Δⵠ.ᐃΔⲆᐃⲆⲆⲆ);
    ⵠΔ[1052][v624.Δᐃⵠ].push(Δⵠ.ΔⲆⲆᐃⵠⲆΔ);
    ⵠΔ[1052][v624.Δᐃⵠ].push(Δⵠ.ⵠᐃᐃⵠΔᐃΔ);
    ⵠΔ[1052][v624.Δᐃⵠ].push(Δⵠ.ᐃΔⲆΔᐃⵠΔ);
    ⵠΔ[450] = [];
    ⵠΔ[450][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⵠⵠΔᐃᐃ;
    ⵠΔ[450][v624.Δᐃⵠ] = Δⵠ.ⵠⵠᐃⲆᐃΔᐃ;
    ⵠΔ[453] = [];
    ⵠΔ[453][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃⲆΔΔⲆⲆ;
    ⵠΔ[453][v624.Δᐃⵠ] = Δⵠ.ΔᐃⵠᐃⲆⵠᐃ;
    ⵠΔ[454] = [];
    ⵠΔ[454][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔⲆⵠⵠΔ;
    ⵠΔ[454][v624.Δᐃⵠ] = Δⵠ.ΔᐃⲆᐃⵠⵠⵠ;
    ⵠΔ[464] = Δⵠ.ⲆᐃⵠⵠΔⵠⵠ;
    ⵠΔ[468] = Δⵠ.ⵠⵠⵠⵠᐃΔᐃ;
    ⵠΔ[469] = Δⵠ.ⲆⵠΔⲆΔⵠᐃ;
    ⵠΔ[20] = [];
    ⵠΔ[20][v624.ᐃᐃᐃ] = Δⵠ.Δᐃⵠⵠᐃⵠᐃ;
    ⵠΔ[20][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⵠⲆᐃⲆⵠ;
    ⵠΔ[920] = [];
    ⵠΔ[920][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠⲆⲆⵠⲆΔ;
    ⵠΔ[920][v624.Δᐃⵠ] = Δⵠ.ⲆⵠᐃⲆᐃⲆⵠ;
    ⵠΔ[21] = [];
    ⵠΔ[21][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔⲆⵠⲆᐃΔ;
    ⵠΔ[21][v624.Δᐃⵠ] = Δⵠ.ΔᐃΔⵠᐃⵠΔ;
    ⵠΔ[924] = [];
    ⵠΔ[924][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠⲆⲆⵠⲆΔ;
    ⵠΔ[924][v624.Δᐃⵠ] = Δⵠ.ⲆⵠᐃⲆᐃⲆⵠ;
    ⵠΔ[44] = [];
    ⵠΔ[44][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔⲆⵠⲆΔ;
    ⵠΔ[44][v624.Δᐃⵠ] = Δⵠ.ΔⲆΔⲆⵠᐃⲆ;
    ⵠΔ[19] = [];
    ⵠΔ[19][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃΔΔⲆⲆⵠ;
    ⵠΔ[19][v624.Δᐃⵠ] = Δⵠ.ᐃⲆΔⵠΔΔΔ;
    ⵠΔ[34] = [];
    ⵠΔ[34][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⲆⲆⲆᐃⲆ;
    ⵠΔ[34][v624.Δᐃⵠ] = Δⵠ.ⵠᐃⵠᐃΔⵠᐃ;
    ⵠΔ[17] = [];
    ⵠΔ[17][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆⵠⵠⲆᐃⵠ;
    ⵠΔ[17][v624.Δᐃⵠ] = Δⵠ.ⵠⵠΔΔⲆⵠΔ;
    ⵠΔ[63] = [];
    ⵠΔ[63][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔⲆᐃΔΔⵠ;
    ⵠΔ[63][v624.Δᐃⵠ] = Δⵠ.ⵠⲆΔᐃΔᐃⵠ;
    ⵠΔ[60] = [];
    ⵠΔ[60][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆⵠⵠᐃΔⲆ;
    ⵠΔ[60][v624.Δᐃⵠ] = Δⵠ.ⵠⵠⵠᐃⵠΔᐃ;
    ⵠΔ[94] = [];
    ⵠΔ[94][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔΔᐃᐃⲆⵠᐃᐃ;
    ⵠΔ[94][v624.Δᐃⵠ] = Δⵠ.ⵠΔᐃⲆΔⲆⵠᐃⲆ;
    ⵠΔ[95] = [];
    ⵠΔ[95][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔⵠΔΔΔⵠⵠᐃ;
    ⵠΔ[95][v624.Δᐃⵠ] = Δⵠ.ᐃᐃⲆⲆΔⵠΔⲆⵠ;
    ⵠΔ[96] = [];
    ⵠΔ[96][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⲆΔⲆΔΔᐃΔ;
    ⵠΔ[96][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⵠⲆⲆⵠⲆᐃᐃ;
    ⵠΔ[97] = [];
    ⵠΔ[97][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠⵠⵠΔⲆⲆⵠⵠ;
    ⵠΔ[97][v624.Δᐃⵠ] = Δⵠ.ⵠⵠᐃⲆᐃΔᐃΔⵠ;
    ⵠΔ[98] = [];
    ⵠΔ[98][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠᐃⲆⵠᐃⵠΔⵠ;
    ⵠΔ[98][v624.Δᐃⵠ] = Δⵠ.ΔⵠΔⲆᐃᐃᐃᐃⵠ;
    ⵠΔ[99] = [];
    ⵠΔ[99][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔᐃⵠⲆⵠⲆᐃᐃ;
    ⵠΔ[99][v624.Δᐃⵠ] = Δⵠ.ΔⲆⲆⵠᐃᐃⲆⵠⲆ;
    ⵠΔ[90] = [];
    ⵠΔ[90][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆΔⲆⲆⲆⲆ;
    ⵠΔ[90][v624.Δᐃⵠ] = Δⵠ.ᐃⲆⵠⵠᐃⵠᐃ;
    ⵠΔ[91] = [];
    ⵠΔ[91][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⲆΔΔⵠⲆ;
    ⵠΔ[91][v624.Δᐃⵠ] = Δⵠ.ⲆⵠᐃⵠΔΔΔ;
    ⵠΔ[71] = [];
    ⵠΔ[71][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆⲆⲆΔⲆⲆᐃᐃ;
    ⵠΔ[71][v624.Δᐃⵠ] = Δⵠ.ⵠⲆΔΔⲆⲆⵠⵠΔ;
    ⵠΔ[72] = [];
    ⵠΔ[72][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⲆᐃⲆᐃⲆᐃΔ;
    ⵠΔ[72][v624.Δᐃⵠ] = Δⵠ.ⵠΔⵠⵠΔᐃΔᐃⲆ;
    ⵠΔ[73] = [];
    ⵠΔ[73][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃΔⲆᐃⵠⲆⲆΔ;
    ⵠΔ[73][v624.Δᐃⵠ] = Δⵠ.ΔⲆᐃᐃⵠⲆᐃⵠΔ;
    ⵠΔ[74] = [];
    ⵠΔ[74][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔᐃΔⲆⵠᐃⵠⵠ;
    ⵠΔ[74][v624.Δᐃⵠ] = Δⵠ.ⵠⵠⵠⵠᐃⲆⲆᐃΔ;
    ⵠΔ[75] = [];
    ⵠΔ[75][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⵠⲆⲆⲆⵠΔⵠ;
    ⵠΔ[75][v624.Δᐃⵠ] = Δⵠ.ⲆⲆΔⲆⲆⵠΔᐃᐃ;
    ⵠΔ[76] = [];
    ⵠΔ[76][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠᐃᐃᐃⲆⵠᐃⵠ;
    ⵠΔ[76][v624.Δᐃⵠ] = Δⵠ.ΔΔᐃΔⵠⲆⲆⲆⲆ;
    ⵠΔ[101] = [];
    ⵠΔ[101][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⲆⲆᐃⵠᐃ;
    ⵠΔ[101][v624.Δᐃⵠ] = Δⵠ.ΔⵠᐃⵠᐃΔΔ;
    ⵠΔ[64] = [];
    ⵠΔ[64][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃΔᐃᐃⲆᐃ;
    ⵠΔ[64][v624.Δᐃⵠ] = Δⵠ.ΔᐃᐃⵠΔⵠᐃ;
    ⵠΔ[102] = [];
    ⵠΔ[102][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⲆⵠΔⲆⵠ;
    ⵠΔ[102][v624.Δᐃⵠ] = Δⵠ.ΔⲆΔΔⵠΔⲆ;
    ⵠΔ[65] = [];
    ⵠΔ[65][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔⲆᐃᐃᐃΔ;
    ⵠΔ[65][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⲆⵠⵠⲆⵠ;
    ⵠΔ[103] = [];
    ⵠΔ[103][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠᐃΔⲆᐃⲆ;
    ⵠΔ[103][v624.Δᐃⵠ] = Δⵠ.ⲆᐃᐃⵠⵠⲆΔ;
    ⵠΔ[66] = [];
    ⵠΔ[66][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⲆᐃⲆΔΔⲆⲆ;
    ⵠΔ[66][v624.Δᐃⵠ] = Δⵠ.ⵠΔᐃⵠⵠⲆᐃⲆⲆ;
    ⵠΔ[104] = [];
    ⵠΔ[104][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠΔΔⲆΔᐃ;
    ⵠΔ[104][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⵠᐃⲆⲆΔ;
    ⵠΔ[67] = [];
    ⵠΔ[67][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆⲆᐃΔⲆΔⲆᐃ;
    ⵠΔ[67][v624.Δᐃⵠ] = Δⵠ.ᐃᐃΔᐃΔⲆⲆᐃΔ;
    ⵠΔ[105] = [];
    ⵠΔ[105][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃΔⵠΔΔᐃ;
    ⵠΔ[105][v624.Δᐃⵠ] = Δⵠ.ᐃΔΔᐃⵠⲆΔ;
    ⵠΔ[68] = [];
    ⵠΔ[68][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⲆⲆⵠⵠΔⵠΔ;
    ⵠΔ[68][v624.Δᐃⵠ] = Δⵠ.ᐃⵠᐃᐃⲆⵠᐃⲆⵠ;
    ⵠΔ[106] = [];
    ⵠΔ[106][v624.ᐃᐃᐃ] = Δⵠ.Ⲇⵠⵠᐃᐃⵠⵠ;
    ⵠΔ[106][v624.Δᐃⵠ] = Δⵠ.ᐃⵠΔΔᐃΔΔⲆⲆ;
    ⵠΔ[69] = [];
    ⵠΔ[69][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃᐃᐃΔΔᐃⲆⵠ;
    ⵠΔ[69][v624.Δᐃⵠ] = Δⵠ.ΔⵠⲆΔΔⲆⲆᐃⲆ;
    ⵠΔ[107] = [];
    ⵠΔ[107][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠΔΔΔⲆⲆ;
    ⵠΔ[107][v624.Δᐃⵠ] = Δⵠ.ⲆᐃⵠⲆΔᐃΔ;
    ⵠΔ[70] = [];
    ⵠΔ[70][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⵠⲆⵠⵠⵠⵠⵠ;
    ⵠΔ[70][v624.Δᐃⵠ] = Δⵠ.ᐃᐃⲆⵠⵠⲆᐃΔⵠ;
    ⵠΔ[80] = [];
    ⵠΔ[80][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔᐃⲆΔᐃΔ;
    ⵠΔ[80][v624.Δᐃⵠ] = Δⵠ.ⲆΔΔᐃⲆⲆᐃ;
    ⵠΔ[81] = [];
    ⵠΔ[81][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⵠᐃⲆΔᐃ;
    ⵠΔ[81][v624.Δᐃⵠ] = Δⵠ.ⲆΔᐃⵠΔⵠΔ;
    ⵠΔ[22] = [];
    ⵠΔ[22][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠᐃⲆᐃᐃⲆ;
    ⵠΔ[22][v624.Δᐃⵠ] = Δⵠ.ⵠΔⲆᐃΔⲆᐃ;
    ⵠΔ[928] = [];
    ⵠΔ[928][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠᐃΔᐃᐃⵠ;
    ⵠΔ[928][v624.Δᐃⵠ] = Δⵠ.ΔⵠⲆΔⲆⲆⵠ;
    ⵠΔ[935] = [];
    ⵠΔ[935][v624.ᐃᐃᐃ] = [];
    ⵠΔ[935][v624.Δᐃⵠ] = [];
    ⵠΔ[935][v624.ᐃᐃᐃ].push(Δⵠ.ΔⲆᐃⲆΔⵠΔᐃⵠ);
    ⵠΔ[935][v624.ᐃᐃᐃ].push(Δⵠ.ⵠᐃⲆΔΔᐃⲆΔᐃ);
    ⵠΔ[935][v624.Δᐃⵠ].push(Δⵠ.ⵠᐃⲆΔΔᐃⲆΔᐃ);
    ⵠΔ[935][v624.Δᐃⵠ].push(Δⵠ.ⵠΔᐃⲆⲆΔΔᐃΔ);
    ⵠΔ[941] = [];
    ⵠΔ[941][v624.ᐃᐃᐃ] = [];
    ⵠΔ[941][v624.Δᐃⵠ] = [];
    ⵠΔ[941][v624.ᐃᐃᐃ].push(Δⵠ.ᐃΔⲆΔᐃᐃⲆ);
    ⵠΔ[941][v624.ᐃᐃᐃ].push(Δⵠ.ᐃΔᐃⲆⵠⵠⵠ);
    ⵠΔ[941][v624.ᐃᐃᐃ].push(Δⵠ.ⵠⵠⲆᐃᐃⲆᐃ);
    ⵠΔ[941][v624.Δᐃⵠ].push(Δⵠ.ⵠⲆΔⵠⲆⵠᐃ);
    ⵠΔ[941][v624.Δᐃⵠ].push(Δⵠ.ᐃᐃⲆΔᐃΔΔ);
    ⵠΔ[941][v624.Δᐃⵠ].push(Δⵠ.ⵠⲆΔⲆⵠⵠΔ);
    ⵠΔ[53] = [];
    ⵠΔ[53][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔΔΔⵠᐃⲆ;
    ⵠΔ[53][v624.Δᐃⵠ] = Δⵠ.ᐃⵠⲆᐃⵠᐃⲆ;
    ⵠΔ[54] = [];
    ⵠΔ[54][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆΔⲆΔⲆᐃ;
    ⵠΔ[54][v624.Δᐃⵠ] = Δⵠ.ᐃΔΔᐃⲆᐃⵠ;
    ⵠΔ[241] = [];
    ⵠΔ[241][v624.ᐃᐃᐃ] = [];
    ⵠΔ[241][v624.Δᐃⵠ] = [];
    ⵠΔ[241][v624.ᐃᐃᐃ].push(Δⵠ.ΔⲆⵠᐃⵠⲆΔ);
    ⵠΔ[241][v624.ᐃᐃᐃ].push(Δⵠ.ⲆΔΔΔᐃⵠⵠ);
    ⵠΔ[241][v624.ᐃᐃᐃ].push(Δⵠ.ⵠᐃⵠⲆⵠⲆⲆ);
    ⵠΔ[241][v624.Δᐃⵠ].push(Δⵠ.ⵠⵠΔᐃᐃᐃΔ);
    ⵠΔ[241][v624.Δᐃⵠ].push(Δⵠ.ⵠΔⲆⵠΔᐃᐃ);
    ⵠΔ[241][v624.Δᐃⵠ].push(Δⵠ.ⵠⲆΔⲆΔⵠⲆ);
    ⵠΔ[202] = [];
    ⵠΔ[202][v624.ᐃᐃᐃ] = [];
    ⵠΔ[202][v624.Δᐃⵠ] = [];
    ⵠΔ[202][v624.ᐃᐃᐃ].push(Δⵠ.ᐃⵠᐃΔⵠⵠⵠ);
    ⵠΔ[202][v624.ᐃᐃᐃ].push(Δⵠ.ᐃⲆⲆΔᐃΔᐃ);
    ⵠΔ[202][v624.ᐃᐃᐃ].push(Δⵠ.ᐃΔⵠΔⵠⲆⲆ);
    ⵠΔ[202][v624.Δᐃⵠ].push(Δⵠ.ΔΔⲆΔᐃΔΔ);
    ⵠΔ[202][v624.Δᐃⵠ].push(Δⵠ.ⵠᐃᐃⵠΔⲆᐃ);
    ⵠΔ[202][v624.Δᐃⵠ].push(Δⵠ.ᐃΔΔᐃᐃⵠⲆ);
    ⵠΔ[203] = [];
    ⵠΔ[203][v624.ᐃᐃᐃ] = [];
    ⵠΔ[203][v624.Δᐃⵠ] = [];
    ⵠΔ[203][v624.ᐃᐃᐃ].push(Δⵠ.ⲆᐃΔⲆᐃⵠᐃ);
    ⵠΔ[203][v624.ᐃᐃᐃ].push(Δⵠ.ⲆᐃΔⲆᐃⲆⲆ);
    ⵠΔ[203][v624.ᐃᐃᐃ].push(Δⵠ.ⵠΔΔΔᐃΔΔ);
    ⵠΔ[203][v624.ᐃᐃᐃ].push(Δⵠ.ⲆᐃᐃⵠⲆⵠΔ);
    ⵠΔ[203][v624.ᐃᐃᐃ].push(Δⵠ.ΔΔⲆᐃⵠᐃᐃ);
    ⵠΔ[203][v624.ᐃᐃᐃ].push(Δⵠ.ΔΔⲆᐃΔⲆⵠ);
    ⵠΔ[203][v624.Δᐃⵠ].push(Δⵠ.ᐃⲆⲆᐃⵠⵠⵠ);
    ⵠΔ[203][v624.Δᐃⵠ].push(Δⵠ.ᐃΔⵠΔᐃⵠΔ);
    ⵠΔ[203][v624.Δᐃⵠ].push(Δⵠ.ⲆΔᐃⵠᐃΔΔ);
    ⵠΔ[203][v624.Δᐃⵠ].push(Δⵠ.ΔⲆⲆΔᐃᐃⲆ);
    ⵠΔ[203][v624.Δᐃⵠ].push(Δⵠ.ᐃΔⵠⲆⲆΔΔ);
    ⵠΔ[203][v624.Δᐃⵠ].push(Δⵠ.ᐃⵠⵠⲆⵠᐃΔ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ] = [];
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ] = [];
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ] = [];
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ].push(Δⵠ.ⵠⵠᐃⲆⵠΔᐃ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ].push(Δⵠ.ᐃᐃⵠⲆⵠᐃΔ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ].push(Δⵠ.ᐃⵠΔΔⲆⵠⵠ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ].push(Δⵠ.ΔⲆⲆᐃᐃᐃΔ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ].push(Δⵠ.ΔⵠᐃⵠⵠⵠⲆ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.ᐃᐃᐃ].push(Δⵠ.ᐃᐃⵠΔⲆᐃⲆ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ].push(Δⵠ.ᐃⵠΔᐃΔⲆⲆ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ].push(Δⵠ.ⵠⲆᐃΔⲆᐃⵠ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ].push(Δⵠ.ⵠᐃᐃⵠⵠⲆⲆ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ].push(Δⵠ.ᐃΔⵠⵠⲆᐃΔ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ].push(Δⵠ.ᐃⲆⲆᐃⵠⲆΔ);
    ⵠΔ[v624.ᐃΔⵠⵠⲆ][v624.Δᐃⵠ].push(Δⵠ.ⵠᐃⲆⲆⲆⵠⲆ);
    ⵠΔ[918] = [];
    ⵠΔ[918][v624.ᐃᐃᐃ] = Δⵠ.ΔΔΔⵠⲆᐃⲆ;
    ⵠΔ[918][v624.Δᐃⵠ] = Δⵠ.ΔᐃᐃⲆⵠⵠⲆ;
    ⵠΔ[919] = Δⵠ.ΔᐃⲆⲆⲆⵠᐃ;
    ⵠΔ[56] = [];
    ⵠΔ[56][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠᐃⵠᐃⵠᐃⲆΔ;
    ⵠΔ[56][v624.Δᐃⵠ] = Δⵠ.ⵠΔⵠᐃᐃⵠⲆᐃⵠ;
    ⵠΔ[223] = [];
    ⵠΔ[223][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠⵠΔᐃⵠⲆ;
    ⵠΔ[223][v624.Δᐃⵠ] = Δⵠ.ⲆⲆᐃⵠΔⵠΔ;
    ⵠΔ[224] = [];
    ⵠΔ[224][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠⵠⲆΔᐃⵠ;
    ⵠΔ[224][v624.Δᐃⵠ] = Δⵠ.ⵠⵠⵠⲆΔⲆⵠ;
    ⵠΔ[236] = [];
    ⵠΔ[236][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆΔΔⵠⵠⵠ;
    ⵠΔ[236][v624.Δᐃⵠ] = Δⵠ.ⲆⲆⵠⵠⲆᐃⵠ;
    ⵠΔ[1033] = [];
    ⵠΔ[1033][v624.ᐃᐃᐃ] = Δⵠ.ᐃΔⵠᐃⵠⲆⵠ;
    ⵠΔ[1033][v624.Δᐃⵠ] = Δⵠ.ΔⵠⲆⵠⲆᐃᐃ;
    ⵠΔ[1034] = Δⵠ.Δᐃⵠⵠᐃᐃᐃ;
    ⵠΔ[1150] = [];
    ⵠΔ[1150][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃᐃΔΔΔᐃ;
    ⵠΔ[1150][v624.Δᐃⵠ] = Δⵠ.ᐃΔⵠⵠⵠᐃⲆ;
    ⵠΔ[1152] = [];
    ⵠΔ[1152][v624.ᐃᐃᐃ] = Δⵠ.ᐃⲆⵠᐃⲆⵠᐃ;
    ⵠΔ[1152][v624.Δᐃⵠ] = Δⵠ.ⵠΔΔⲆⵠⲆᐃ;
    ⵠΔ[1149] = Δⵠ.ᐃΔΔΔⵠⲆⵠ;
    ⵠΔ[1151] = Δⵠ.ⲆⵠⵠᐃΔⵠⲆ;
    ⵠΔ[1153] = Δⵠ.ⵠⲆᐃⲆΔᐃⲆ;
    ⵠΔ[1143] = [];
    ⵠΔ[1143][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆᐃᐃⲆⲆⲆ;
    ⵠΔ[1143][v624.Δᐃⵠ] = Δⵠ.ⲆΔΔᐃⲆᐃΔ;
    ⵠΔ[1145] = [];
    ⵠΔ[1145][v624.ᐃᐃᐃ] = Δⵠ.ⵠᐃΔⲆⵠΔⲆ;
    ⵠΔ[1145][v624.Δᐃⵠ] = Δⵠ.ᐃⵠᐃⲆᐃⵠᐃ;
    ⵠΔ[1146] = [];
    ⵠΔ[1146][v624.ᐃᐃᐃ] = Δⵠ.ᐃΔⵠᐃᐃⲆᐃ;
    ⵠΔ[1146][v624.Δᐃⵠ] = Δⵠ.ⲆⲆⲆⵠⲆⵠⲆ;
    ⵠΔ[1144] = Δⵠ.ⲆΔⵠⲆⵠⵠⲆ;
    ⵠΔ[1148] = Δⵠ.Δⵠⵠⵠⵠᐃᐃ;
    ⵠΔ[1147] = Δⵠ.ᐃⵠᐃⵠⵠⲆᐃ;
    ⵠΔ[1053] = [];
    ⵠΔ[1053][v624.ᐃᐃᐃ] = Δⵠ.ᐃⲆᐃΔΔⵠⲆ;
    ⵠΔ[1053][v624.Δᐃⵠ] = Δⵠ.ⲆⲆⵠΔΔⲆΔ;
    ⵠΔ[1055] = [];
    ⵠΔ[1055][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠΔΔΔᐃⵠ;
    ⵠΔ[1055][v624.Δᐃⵠ] = Δⵠ.ⲆⵠΔΔΔΔΔ;
    ⵠΔ[231] = [];
    ⵠΔ[231][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⲆⲆᐃΔⲆ;
    ⵠΔ[231][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⵠᐃᐃⲆᐃ;
    ⵠΔ[1060] = [];
    ⵠΔ[1060][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⵠᐃΔⵠᐃ;
    ⵠΔ[1060][v624.Δᐃⵠ] = Δⵠ.ⲆᐃΔᐃᐃᐃⵠ;
    ⵠΔ[1063] = [];
    ⵠΔ[1063][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠⵠΔΔⵠⲆ;
    ⵠΔ[1063][v624.Δᐃⵠ] = Δⵠ.ΔⵠⵠΔⵠᐃΔ;
    ⵠΔ[1059] = [];
    ⵠΔ[1059][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆⲆΔᐃⵠᐃ;
    ⵠΔ[1059][v624.Δᐃⵠ] = Δⵠ.ⵠΔⵠⵠΔΔⲆ;
    ⵠΔ[1062] = [];
    ⵠΔ[1062][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠᐃᐃᐃⵠΔ;
    ⵠΔ[1062][v624.Δᐃⵠ] = Δⵠ.ⵠᐃⵠᐃⲆΔΔ;
    ⵠΔ[1056] = Δⵠ.ΔⲆΔΔΔᐃΔ;
    ⵠΔ[1057] = Δⵠ.ⵠΔᐃⵠΔᐃΔ;
    ⵠΔ[1058] = Δⵠ.ΔᐃⲆΔΔⵠᐃ;
    ⵠΔ[1065] = Δⵠ.ΔⵠⵠⵠⲆⲆⲆ;
    ⵠΔ[1066] = Δⵠ.ⵠⲆⵠⲆᐃⲆᐃ;
    ⵠΔ[1067] = Δⵠ.ΔⵠⵠᐃᐃᐃΔ;
    ⵠΔ[1222] = [];
    ⵠΔ[1222][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆⲆⵠΔⵠⲆ;
    ⵠΔ[1222][v624.Δᐃⵠ] = Δⵠ.ᐃⵠΔᐃΔⵠᐃ;
    ⵠΔ[248] = [];
    ⵠΔ[248][v624.ᐃᐃᐃ] = Δⵠ.ΔΔΔᐃΔⲆⵠ;
    ⵠΔ[248][v624.Δᐃⵠ] = Δⵠ.ΔⵠΔⵠᐃᐃᐃ;
    ⵠΔ[1218] = [];
    ⵠΔ[1218][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃΔⵠⵠᐃⲆ;
    ⵠΔ[1218][v624.Δᐃⵠ] = Δⵠ.ΔⲆᐃᐃΔᐃΔ;
    ⵠΔ[1221] = [];
    ⵠΔ[1221][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔΔⵠᐃΔ;
    ⵠΔ[1221][v624.Δᐃⵠ] = Δⵠ.ᐃΔⲆΔΔⵠΔ;
    ⵠΔ[1223] = Δⵠ.ⵠⲆⵠΔⵠⵠⲆ;
    ⵠΔ[1219] = Δⵠ.ΔⵠⵠΔΔⵠᐃ;
    ⵠΔ[1068] = [];
    ⵠΔ[1068][v624.ᐃᐃᐃ] = Δⵠ.ⲆᐃⵠⲆΔⵠᐃ;
    ⵠΔ[1068][v624.Δᐃⵠ] = Δⵠ.ΔΔΔΔⲆⵠᐃ;
    ⵠΔ[232] = [];
    ⵠΔ[232][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆᐃⵠᐃⵠⵠ;
    ⵠΔ[232][v624.Δᐃⵠ] = Δⵠ.ᐃⲆΔΔᐃⲆⲆ;
    ⵠΔ[1070] = [];
    ⵠΔ[1070][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆΔⵠᐃΔⲆ;
    ⵠΔ[1070][v624.Δᐃⵠ] = Δⵠ.ΔⵠΔΔⵠⲆⵠ;
    ⵠΔ[1072] = [];
    ⵠΔ[1072][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆΔΔᐃⵠΔ;
    ⵠΔ[1072][v624.Δᐃⵠ] = Δⵠ.ᐃΔⵠⲆΔΔᐃ;
    ⵠΔ[1075] = [];
    ⵠΔ[1075][v624.ᐃᐃᐃ] = Δⵠ.ⵠᐃⵠⲆⲆⵠᐃ;
    ⵠΔ[1075][v624.Δᐃⵠ] = Δⵠ.ⵠᐃΔⲆⲆⲆΔ;
    ⵠΔ[1071] = [];
    ⵠΔ[1071][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⵠⵠⵠⲆΔ;
    ⵠΔ[1071][v624.Δᐃⵠ] = Δⵠ.ΔⵠΔᐃⵠⲆᐃ;
    ⵠΔ[1074] = [];
    ⵠΔ[1074][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃⵠⵠⲆⲆⵠ;
    ⵠΔ[1074][v624.Δᐃⵠ] = Δⵠ.ⵠⲆᐃᐃⵠᐃᐃ;
    ⵠΔ[1073] = [];
    ⵠΔ[1073][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔᐃΔⵠⲆ;
    ⵠΔ[1073][v624.Δᐃⵠ] = Δⵠ.ⵠⵠΔⵠΔᐃⲆ;
    ⵠΔ[1076] = [];
    ⵠΔ[1076][v624.ᐃᐃᐃ] = Δⵠ.ⵠᐃΔᐃⲆᐃᐃ;
    ⵠΔ[1076][v624.Δᐃⵠ] = Δⵠ.ΔᐃⲆⵠⲆᐃᐃ;
    ⵠΔ[1077] = Δⵠ.ᐃⵠⲆⵠⲆⵠᐃ;
    ⵠΔ[1078] = Δⵠ.ΔΔᐃᐃΔΔⲆ;
    ⵠΔ[1079] = Δⵠ.ᐃⵠΔᐃⲆᐃΔ;
    ⵠΔ[1083] = [];
    ⵠΔ[1083][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⵠΔⲆᐃⵠ;
    ⵠΔ[1083][v624.Δᐃⵠ] = Δⵠ.ⵠΔΔⵠΔⵠⵠ;
    ⵠΔ[233] = [];
    ⵠΔ[233][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔⲆΔᐃᐃ;
    ⵠΔ[233][v624.Δᐃⵠ] = Δⵠ.ᐃⵠⵠᐃⲆᐃᐃ;
    ⵠΔ[1085] = [];
    ⵠΔ[1085][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔΔᐃᐃⵠⵠ;
    ⵠΔ[1085][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⲆᐃⲆΔᐃ;
    ⵠΔ[1087] = [];
    ⵠΔ[1087][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠΔᐃⵠⵠᐃ;
    ⵠΔ[1087][v624.Δᐃⵠ] = Δⵠ.ΔⵠΔⲆΔᐃΔ;
    ⵠΔ[1090] = [];
    ⵠΔ[1090][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔΔⵠⲆⵠⲆ;
    ⵠΔ[1090][v624.Δᐃⵠ] = Δⵠ.ⲆᐃⲆⲆⲆⲆⵠ;
    ⵠΔ[1086] = [];
    ⵠΔ[1086][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔⵠⵠΔΔᐃ;
    ⵠΔ[1086][v624.Δᐃⵠ] = Δⵠ.ⲆΔΔⲆⲆⵠΔ;
    ⵠΔ[1089] = [];
    ⵠΔ[1089][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆΔⲆᐃᐃΔ;
    ⵠΔ[1089][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⵠΔΔⵠᐃ;
    ⵠΔ[1088] = [];
    ⵠΔ[1088][v624.ᐃᐃᐃ] = Δⵠ.ΔΔⲆΔⲆⵠⲆ;
    ⵠΔ[1088][v624.Δᐃⵠ] = Δⵠ.ⵠⲆᐃΔᐃⵠΔ;
    ⵠΔ[1091] = [];
    ⵠΔ[1091][v624.ᐃᐃᐃ] = Δⵠ.ΔΔⵠΔᐃⲆⲆ;
    ⵠΔ[1091][v624.Δᐃⵠ] = Δⵠ.ᐃⲆⵠᐃᐃⲆᐃ;
    ⵠΔ[1092] = Δⵠ.ΔⵠⲆⲆΔΔΔ;
    ⵠΔ[1093] = Δⵠ.ⲆⵠⵠᐃⲆⵠⵠ;
    ⵠΔ[1094] = Δⵠ.ⵠⲆⵠΔⲆΔⲆ;
    ⵠΔ[1098] = [];
    ⵠΔ[1098][v624.ᐃᐃᐃ] = Δⵠ.ⲆᐃΔΔⵠⵠⲆ;
    ⵠΔ[1098][v624.Δᐃⵠ] = Δⵠ.ⵠΔᐃᐃⵠᐃᐃ;
    ⵠΔ[235] = [];
    ⵠΔ[235][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠᐃᐃΔᐃⲆ;
    ⵠΔ[235][v624.Δᐃⵠ] = Δⵠ.ⵠⲆᐃⲆᐃΔΔ;
    ⵠΔ[1115] = Δⵠ.ΔⲆΔᐃΔᐃⲆ;
    ⵠΔ[1113] = [];
    ⵠΔ[1113][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆⵠᐃⵠⵠⵠ;
    ⵠΔ[1113][v624.Δᐃⵠ] = Δⵠ.ᐃᐃΔΔΔᐃΔ;
    ⵠΔ[1114] = [];
    ⵠΔ[1114][v624.ᐃᐃᐃ] = Δⵠ.Δᐃᐃᐃⵠⵠᐃ;
    ⵠΔ[1114][v624.Δᐃⵠ] = Δⵠ.ΔⲆᐃᐃΔⵠᐃ;
    ⵠΔ[1100] = [];
    ⵠΔ[1100][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔΔⲆΔⵠⲆ;
    ⵠΔ[1100][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⲆⲆᐃⵠⲆ;
    ⵠΔ[1102] = [];
    ⵠΔ[1102][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃⲆⲆⲆΔᐃ;
    ⵠΔ[1102][v624.Δᐃⵠ] = Δⵠ.ΔⲆⵠΔᐃᐃΔ;
    ⵠΔ[1105] = [];
    ⵠΔ[1105][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃΔᐃⵠΔⲆ;
    ⵠΔ[1105][v624.Δᐃⵠ] = Δⵠ.ⲆⲆΔⲆᐃⲆⵠ;
    ⵠΔ[1101] = [];
    ⵠΔ[1101][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃΔᐃΔᐃⵠ;
    ⵠΔ[1101][v624.Δᐃⵠ] = Δⵠ.ⲆⲆⵠΔΔⵠΔ;
    ⵠΔ[1104] = [];
    ⵠΔ[1104][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔⵠⵠΔᐃΔ;
    ⵠΔ[1104][v624.Δᐃⵠ] = Δⵠ.ⲆᐃⲆⵠᐃΔⲆ;
    ⵠΔ[1103] = [];
    ⵠΔ[1103][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⵠᐃΔᐃᐃ;
    ⵠΔ[1103][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⲆΔᐃⲆⲆ;
    ⵠΔ[1106] = [];
    ⵠΔ[1106][v624.ᐃᐃᐃ] = Δⵠ.ᐃⲆΔΔⵠⲆᐃ;
    ⵠΔ[1106][v624.Δᐃⵠ] = Δⵠ.ⲆᐃⵠΔⵠⵠᐃ;
    ⵠΔ[1107] = Δⵠ.ⵠΔⵠⵠⵠᐃⵠ;
    ⵠΔ[1108] = Δⵠ.ⲆⲆⲆᐃⲆⲆⵠ;
    ⵠΔ[1109] = Δⵠ.ΔⵠⵠⲆᐃⵠᐃ;
    ⵠΔ[1119] = [];
    ⵠΔ[1119][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔᐃⵠᐃΔ;
    ⵠΔ[1119][v624.Δᐃⵠ] = Δⵠ.ᐃⲆⲆⵠᐃⵠⵠ;
    ⵠΔ[238] = [];
    ⵠΔ[238][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⲆΔΔⵠΔ;
    ⵠΔ[238][v624.Δᐃⵠ] = Δⵠ.ΔⵠⵠⵠⲆΔΔ;
    ⵠΔ[1136] = Δⵠ.ⲆⲆΔᐃᐃΔΔ;
    ⵠΔ[1134] = [];
    ⵠΔ[1134][v624.ᐃᐃᐃ] = Δⵠ.ⲆᐃΔⲆⲆⵠⲆ;
    ⵠΔ[1134][v624.Δᐃⵠ] = Δⵠ.ⲆᐃᐃⲆᐃΔⵠ;
    ⵠΔ[1135] = [];
    ⵠΔ[1135][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔⵠᐃΔⵠΔ;
    ⵠΔ[1135][v624.Δᐃⵠ] = Δⵠ.ⵠᐃΔᐃⵠᐃΔ;
    ⵠΔ[1121] = [];
    ⵠΔ[1121][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⵠⲆⲆⵠⲆ;
    ⵠΔ[1121][v624.Δᐃⵠ] = Δⵠ.ΔΔᐃⵠⲆⵠⵠ;
    ⵠΔ[1123] = [];
    ⵠΔ[1123][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆΔᐃⲆᐃⲆ;
    ⵠΔ[1123][v624.Δᐃⵠ] = Δⵠ.ⲆⲆᐃΔⵠᐃᐃ;
    ⵠΔ[1126] = [];
    ⵠΔ[1126][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔᐃΔⵠⵠᐃ;
    ⵠΔ[1126][v624.Δᐃⵠ] = Δⵠ.ᐃⵠⲆΔᐃΔΔ;
    ⵠΔ[1122] = [];
    ⵠΔ[1122][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆᐃᐃⲆΔᐃ;
    ⵠΔ[1122][v624.Δᐃⵠ] = Δⵠ.ΔΔⵠⲆᐃΔⵠ;
    ⵠΔ[1125] = [];
    ⵠΔ[1125][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔⵠⲆΔᐃ;
    ⵠΔ[1125][v624.Δᐃⵠ] = Δⵠ.ⲆΔⵠΔⲆⵠⵠ;
    ⵠΔ[1124] = [];
    ⵠΔ[1124][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆΔΔΔΔᐃ;
    ⵠΔ[1124][v624.Δᐃⵠ] = Δⵠ.ⲆⲆΔⲆⲆⲆΔ;
    ⵠΔ[1127] = [];
    ⵠΔ[1127][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⲆᐃⲆⲆΔ;
    ⵠΔ[1127][v624.Δᐃⵠ] = Δⵠ.ⵠᐃΔⵠⲆᐃⵠ;
    ⵠΔ[1128] = Δⵠ.ⲆᐃΔΔΔⲆⲆ;
    ⵠΔ[1129] = Δⵠ.ᐃⲆⵠΔⵠⲆᐃ;
    ⵠΔ[1130] = Δⵠ.ⵠⵠⲆⵠⲆΔΔ;
    ⵠΔ[1042] = [];
    ⵠΔ[1042][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠᐃΔᐃⲆΔ;
    ⵠΔ[1042][v624.Δᐃⵠ] = Δⵠ.ⲆⲆΔⲆⵠⵠⵠ;
    ⵠΔ[1043] = [];
    ⵠΔ[1043][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆΔⵠⲆΔⲆ;
    ⵠΔ[1043][v624.Δᐃⵠ] = Δⵠ.ⲆΔᐃⲆⲆⲆⵠ;
    ⵠΔ[1044] = [];
    ⵠΔ[1044][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠⵠᐃⵠⲆΔ;
    ⵠΔ[1044][v624.Δᐃⵠ] = Δⵠ.ΔᐃᐃΔⵠⵠⵠ;
    ⵠΔ[228] = [];
    ⵠΔ[228][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔΔⵠᐃΔⵠ;
    ⵠΔ[228][v624.Δᐃⵠ] = Δⵠ.ⵠΔΔⵠᐃΔⵠ;
    ⵠΔ[234] = [];
    ⵠΔ[234][v624.ᐃᐃᐃ] = Δⵠ.ᐃΔⲆΔᐃᐃⵠ;
    ⵠΔ[234][v624.Δᐃⵠ] = Δⵠ.ᐃΔⲆΔᐃᐃⵠ;
    ⵠΔ[249] = [];
    ⵠΔ[249][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆⵠΔΔΔΔ;
    ⵠΔ[249][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⵠΔΔΔΔ;
    ⵠΔ[1045] = Δⵠ.ⵠᐃΔⵠᐃⵠⲆ;
    ⵠΔ[89] = [];
    ⵠΔ[89][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆΔⵠⵠⵠⵠ;
    ⵠΔ[89][v624.Δᐃⵠ] = Δⵠ.ΔᐃΔⵠᐃⵠⵠ;
    ⵠΔ[92] = [];
    ⵠΔ[92][v624.ᐃᐃᐃ] = Δⵠ.ⲆⵠⵠⵠᐃⲆΔ;
    ⵠΔ[92][v624.Δᐃⵠ] = Δⵠ.ΔᐃⲆⲆΔⲆΔ;
    ⵠΔ[247] = [];
    ⵠΔ[247][v624.ᐃᐃᐃ] = [Δⵠ.ⵠᐃΔΔᐃⵠⵠ, Δⵠ.ΔⲆⵠⵠΔᐃΔ, Δⵠ.ᐃⵠⲆⲆᐃⵠᐃ, Δⵠ.ᐃⵠⲆⵠΔⲆⵠ, Δⵠ.ⲆⵠᐃΔⲆᐃⲆ, Δⵠ.ᐃⵠΔΔⲆΔᐃ, Δⵠ.ΔᐃΔⵠΔΔᐃ, Δⵠ.Ⲇⵠⵠᐃᐃⵠⵠ, Δⵠ.ⵠⵠΔΔΔⲆⲆ];
    ⵠΔ[247][v624.Δᐃⵠ] = [Δⵠ.ᐃΔΔΔⵠⵠⲆ, Δⵠ.ⲆᐃΔⲆᐃᐃⵠ, Δⵠ.ΔⵠᐃⵠᐃΔΔ, Δⵠ.ΔⲆΔΔⵠΔⲆ, Δⵠ.ⲆᐃᐃⵠⵠⲆΔ, Δⵠ.ⵠⲆⵠᐃⲆⲆΔ, Δⵠ.ᐃΔΔᐃⵠⲆΔ, Δⵠ.Ⲇⵠⵠᐃᐃⵠⵠ, Δⵠ.ⲆᐃⵠⲆΔᐃΔ];
    ⵠΔ[93] = [];
    ⵠΔ[93][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⲆⵠΔⵠΔ;
    ⵠΔ[93][v624.Δᐃⵠ] = Δⵠ.ⲆⲆᐃΔⵠⵠΔ;
    ⵠΔ[225] = [];
    ⵠΔ[225][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠⵠⲆⲆᐃΔ;
    ⵠΔ[225][v624.Δᐃⵠ] = Δⵠ.ΔⲆᐃⲆⲆⲆᐃ;
    ⵠΔ[226] = [];
    ⵠΔ[226][v624.ᐃᐃᐃ] = Δⵠ.ⵠᐃᐃⵠⲆⵠΔ;
    ⵠΔ[226][v624.Δᐃⵠ] = Δⵠ.ΔᐃⲆΔⵠⲆⵠ;
    ⵠΔ[24] = [];
    ⵠΔ[24][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⵠᐃⲆⵠⵠ;
    ⵠΔ[24][v624.Δᐃⵠ] = Δⵠ.ΔⲆⵠⲆΔⵠᐃ;
    ⵠΔ[88] = [];
    ⵠΔ[88][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⵠⵠⲆΔΔ;
    ⵠΔ[88][v624.Δᐃⵠ] = Δⵠ.ᐃⲆⵠⵠΔⲆᐃ;
    ⵠΔ[87] = [];
    ⵠΔ[87][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠᐃⲆᐃᐃΔ;
    ⵠΔ[87][v624.Δᐃⵠ] = Δⵠ.ΔΔⲆⵠΔᐃⵠ;
    ⵠΔ[82] = [];
    ⵠΔ[82][v624.ᐃᐃᐃ] = Δⵠ.ΔΔⲆᐃⲆⵠΔ;
    ⵠΔ[82][v624.Δᐃⵠ] = Δⵠ.ΔⵠⲆΔᐃᐃⵠ;
    ⵠΔ[621] = [];
    ⵠΔ[621][v624.ᐃᐃᐃ] = [];
    ⵠΔ[621][v624.Δᐃⵠ] = [];
    ⵠΔ[621][v624.ᐃᐃᐃ].push(Δⵠ.ⵠⵠⵠᐃΔΔⲆⲆᐃ);
    ⵠΔ[621][v624.ᐃᐃᐃ].push(Δⵠ.ΔⲆᐃⵠⲆⲆΔᐃⲆ);
    ⵠΔ[621][v624.ᐃᐃᐃ].push(Δⵠ.ⵠⲆⲆΔⲆⵠᐃⲆᐃ);
    ⵠΔ[621][v624.Δᐃⵠ].push(Δⵠ.ⲆⵠᐃᐃΔⵠⵠⲆⵠ);
    ⵠΔ[621][v624.Δᐃⵠ].push(Δⵠ.ᐃⲆᐃΔᐃΔⲆΔⵠ);
    ⵠΔ[621][v624.Δᐃⵠ].push(Δⵠ.ⵠⵠᐃⲆⲆⲆⵠΔⵠ);
    ⵠΔ[619] = [];
    ⵠΔ[619][v624.ᐃᐃᐃ] = [];
    ⵠΔ[619][v624.Δᐃⵠ] = [];
    ⵠΔ[619][v624.ᐃᐃᐃ].push(Δⵠ.ⵠΔⲆᐃᐃⵠⲆⲆΔ);
    ⵠΔ[619][v624.ᐃᐃᐃ].push(Δⵠ.ᐃΔᐃⵠⵠΔΔⲆᐃ);
    ⵠΔ[619][v624.ᐃᐃᐃ].push(Δⵠ.ⲆΔⲆⲆΔⵠᐃᐃᐃ);
    ⵠΔ[619][v624.Δᐃⵠ].push(Δⵠ.ΔⵠΔΔᐃⲆⲆᐃⲆ);
    ⵠΔ[619][v624.Δᐃⵠ].push(Δⵠ.ⲆⵠΔⵠⵠᐃΔⵠᐃ);
    ⵠΔ[619][v624.Δᐃⵠ].push(Δⵠ.ⲆΔⲆΔΔΔⵠΔⲆ);
    ⵠΔ[620] = [];
    ⵠΔ[620][v624.ᐃᐃᐃ] = [];
    ⵠΔ[620][v624.Δᐃⵠ] = [];
    ⵠΔ[620][v624.ᐃᐃᐃ].push(Δⵠ.ⲆΔⲆⲆΔᐃᐃΔⲆ);
    ⵠΔ[620][v624.ᐃᐃᐃ].push(Δⵠ.ⲆⲆⵠΔⵠΔⲆⵠΔ);
    ⵠΔ[620][v624.ᐃᐃᐃ].push(Δⵠ.ⲆⵠⲆⵠΔᐃΔΔᐃ);
    ⵠΔ[620][v624.Δᐃⵠ].push(Δⵠ.ⵠⵠⲆⵠⲆᐃΔᐃᐃ);
    ⵠΔ[620][v624.Δᐃⵠ].push(Δⵠ.ⵠΔⲆⵠⵠⲆᐃᐃᐃ);
    ⵠΔ[620][v624.Δᐃⵠ].push(Δⵠ.ⲆᐃᐃᐃⵠΔⲆⲆⵠ);
    ⵠΔⵠᐃ.g = [];
    ⵠΔⵠᐃ.g[0] = [Δⵠ.ⵠΔᐃΔⵠⵠΔ, Δⵠ.ⲆΔΔᐃⵠⲆᐃ];
    ⵠΔⵠᐃ.g[1] = ⵠΔⵠᐃ.g[0];
    ⵠΔⵠᐃ.g[2] = [Δⵠ.ΔⵠΔⵠΔⲆᐃ, Δⵠ.ⲆᐃΔⵠⲆᐃΔ];
    ⵠΔⵠᐃ.m = [];
    ⵠΔⵠᐃ.m[0] = [Δⵠ.ᐃⵠΔᐃᐃᐃⲆ, Δⵠ.ΔᐃΔΔΔᐃⲆ];
    ⵠΔⵠᐃ.m[1] = ⵠΔⵠᐃ.m[0];
    ⵠΔⵠᐃ.m[2] = [Δⵠ.ᐃⲆΔⲆΔΔΔ, Δⵠ.ⲆΔᐃⵠΔⵠᐃ];
    ⵠΔⵠᐃ.la = [];
    ⵠΔⵠᐃ.la[0] = [Δⵠ.ⵠᐃᐃΔⵠΔΔ, Δⵠ.ⲆⵠΔᐃⲆⲆΔ];
    ⵠΔⵠᐃ.la[1] = ⵠΔⵠᐃ.la[0];
    ⵠΔⵠᐃ.la[2] = ⵠΔⵠᐃ.la[0];
    ⵠΔⵠᐃ.la[3] = ⵠΔⵠᐃ.la[0];
    ⵠΔⵠᐃ.la[4] = ⵠΔⵠᐃ.la[0];
    ⵠΔⵠᐃ.la[5] = ⵠΔⵠᐃ.la[0];
    ⵠΔⵠᐃ.s = [];
    ⵠΔⵠᐃ.s[0] = [Δⵠ.ⵠᐃᐃᐃᐃᐃᐃ, Δⵠ.ⵠⵠⲆΔΔⵠΔ];
    ⵠΔⵠᐃ.s[1] = ⵠΔⵠᐃ.s[0];
    ⵠΔⵠᐃ.s[2] = [Δⵠ.ⲆⵠⵠⵠⲆⲆⵠ, Δⵠ.ᐃⲆⵠⲆΔΔᐃ];
    ⵠΔⵠᐃ.p = [];
    ⵠΔⵠᐃ.p[0] = [Δⵠ.ⲆⵠⲆⵠⲆⲆΔ, Δⵠ.ⲆⵠⲆⵠⲆⲆΔ];
    ⵠΔⵠᐃ.a = [];
    ⵠΔⵠᐃ.a[0] = [Δⵠ.ΔⵠᐃⲆᐃⲆⵠ, Δⵠ.ⲆΔΔᐃΔΔⲆ];
    ⵠΔⵠᐃ.a[1] = ⵠΔⵠᐃ.a[0];
    ⵠΔⵠᐃ.a[2] = ⵠΔⵠᐃ.a[0];
    ⵠΔⵠᐃ.d = [];
    ⵠΔⵠᐃ.d[0] = [Δⵠ.ᐃⲆΔⵠΔⵠⲆ, Δⵠ.ΔᐃΔᐃⲆᐃⵠ];
    ⵠΔⵠᐃ.d[1] = ⵠΔⵠᐃ.d[0];
    ⵠΔⵠᐃ.d[2] = ⵠΔⵠᐃ.d[0];
    ⵠΔⵠᐃ.re = [];
    ⵠΔⵠᐃ.re[0] = [Δⵠ.ⲆⲆⵠᐃⲆᐃΔ, Δⵠ.ⲆΔⵠᐃΔⲆⵠ];
    ⵠΔⵠᐃ.re[1] = ⵠΔⵠᐃ.re[0];
    ⵠΔⵠᐃ.re[2] = ⵠΔⵠᐃ.re[0];
    ⵠΔⵠᐃ.f = [];
    ⵠΔⵠᐃ.f[0] = [Δⵠ.ⵠᐃⲆⲆⲆⲆⲆ, Δⵠ.ΔⵠΔⲆᐃⲆⲆ];
    ⵠΔⵠᐃ.f[1] = ⵠΔⵠᐃ.f[0];
    ⵠΔⵠᐃ.f[2] = ⵠΔⵠᐃ.f[0];
    ⵠΔⵠᐃ.isl = [];
    ⵠΔⵠᐃ.isl[0] = [Δⵠ.ⵠⲆⵠᐃⲆᐃⵠ, Δⵠ.ⵠᐃⵠΔⲆⵠᐃ];
    ⵠΔⵠᐃ.isl[1] = ⵠΔⵠᐃ.isl[0];
    ⵠΔⵠᐃ.isl[2] = ⵠΔⵠᐃ.isl[0];
    ⵠΔⵠᐃ.c = [];
    ⵠΔⵠᐃ.c[0] = [Δⵠ.ⲆⵠᐃⲆⲆᐃⵠ, Δⵠ.ΔᐃᐃᐃⲆΔᐃ];
    ⵠΔⵠᐃ.c[1] = ⵠΔⵠᐃ.c[0];
    ⵠΔⵠᐃ.c[2] = ⵠΔⵠᐃ.c[0];
    ⵠΔⵠᐃ.wtb = [];
    ⵠΔⵠᐃ.wtb[0] = [Δⵠ.ⵠᐃᐃᐃΔⲆᐃ, Δⵠ.ΔⵠⲆᐃⲆⵠⵠ];
    ⵠΔⵠᐃ.PIRANHA = [Δⵠ.ᐃⵠⵠΔⵠΔᐃ, Δⵠ.ᐃⵠΔⲆΔᐃⲆ];
    ⵠΔⵠᐃ.KRAKEN = [Δⵠ.ᐃΔΔᐃⲆΔⵠ, Δⵠ.ΔⲆⵠᐃⲆⵠⵠ];
    ⵠΔⵠᐃ.FOX = [Δⵠ.ΔⵠⲆⲆᐃⵠⲆ, Δⵠ.ⲆⵠΔΔΔᐃⲆ];
    ⵠΔⵠᐃ.WOLF = [Δⵠ.ⲆⲆⵠᐃⲆΔⵠ, Δⵠ.ⲆΔᐃᐃᐃⵠⲆ];
    ⵠΔⵠᐃ.SPIDER = [Δⵠ.ⲆⲆⲆⲆⲆᐃΔ, Δⵠ.ΔⲆΔⲆᐃⲆᐃ];
    ⵠΔⵠᐃ.BEAR = [Δⵠ.ⲆⵠᐃⲆΔⵠΔ, Δⵠ.ᐃᐃⵠⵠⲆᐃΔ];
    ⵠΔⵠᐃ.CAVE = [Δⵠ.ⵠΔΔⲆⵠᐃⵠ, Δⵠ.ΔᐃⵠᐃΔⵠΔ];
    ⵠΔⵠᐃ.MAP = [Δⵠ.ⵠΔⲆⵠⵠⵠᐃ, Δⵠ.ᐃΔⵠΔⲆΔΔ];
    ⵠΔⵠᐃ.FOREST = [Δⵠ.ⵠⵠⲆⲆᐃΔⲆ, Δⵠ.ⲆⵠΔⵠⵠⲆᐃ];
    ⵠΔⵠᐃ.WINTER = [Δⵠ.ΔΔⵠᐃᐃⵠΔ, Δⵠ.ΔΔⵠⵠⲆⲆΔ];
    ⵠΔⵠᐃ.DESERT = [Δⵠ.ⵠⵠⵠᐃⲆΔΔ, Δⵠ.ⵠⵠᐃᐃⵠⲆⲆ];
    ⵠΔⵠᐃ.LAVA = [Δⵠ.ⵠΔΔᐃΔⲆΔ, Δⵠ.ⲆΔⵠⵠⵠΔⲆ];
    for (var v1473 in ⵠΔⵠᐃ) {
      for (var v1474 = ⵠΔⵠᐃ[v1473], v1475 = 0; v1475 < v1474.length; v1475++) {
        var v1476 = v1474[v1475];
        if (v1476.Ⲇⵠⵠⵠⵠᐃᐃ !== undefined) {
          v1476.Ⲇⵠⵠⵠⵠᐃᐃ();
        } else if (v1476.length > 0) {
          for (var v1477 = 0; v1477 < v1476.length; v1477++) {
            if (v1476[v1477].Ⲇⵠⵠⵠⵠᐃᐃ !== undefined) {
              v1476[v1477].Ⲇⵠⵠⵠⵠᐃᐃ();
            }
          }
        }
      }
    }
    console.log(undefined, undefined);
  }
  function f287() {
    var v1478 = 1;
    new Date().getTime();
    f285();
    f283();
    ⵠΔ[540] = [];
    ⵠΔ[540][v624.ᐃᐃᐃ] = [];
    ⵠΔ[540][v624.Δᐃⵠ] = [];
    for (var v1479 = 0; v624.ⵠΔⲆᐃⲆⵠᐃ > v1479; v1479++) {
      ⵠΔ[540][v624.ᐃᐃᐃ].push(f53(f168(v1478, 4 + v1479, "#59B8CE")));
      ⵠΔ[540][v624.Δᐃⵠ].push(f53(f168(v1478, 4 + v1479, "#90DDD9")));
    }
    ⵠΔ[470] = [];
    ⵠΔ[470][v624.ᐃᐃᐃ] = [];
    ⵠΔ[470][v624.Δᐃⵠ] = [];
    for (v1479 = 0; v1479 < v624.ⲆΔⵠⵠᐃᐃⲆ; v1479++) {
      ⵠΔ[470][v624.ᐃᐃᐃ].push(f53(f168(v1478, 4 + v1479, "#fff")));
      ⵠΔ[470][v624.Δᐃⵠ].push(f53(f168(v1478, 4 + v1479, "#fff")));
    }
    ⵠΔ[471] = [];
    ⵠΔ[471][v624.ᐃᐃᐃ] = [];
    ⵠΔ[471][v624.Δᐃⵠ] = [];
    for (v1479 = 0; v624.ⲆΔⵠⵠᐃᐃⲆ > v1479; v1479++) {
      ⵠΔ[471][v624.ᐃᐃᐃ].push(f53(f168(v1478, 6 + v1479, "#DDCD8A")));
      ⵠΔ[471][v624.Δᐃⵠ].push(f53(f168(v1478, 6 + v1479, "#155E57")));
    }
    ⵠΔ[942] = [];
    ⵠΔ[942][v624.ᐃᐃᐃ] = [];
    ⵠΔ[942][v624.Δᐃⵠ] = [];
    for (v1479 = 0; v1479 < v624.ⲆᐃⲆⵠⲆⲆΔ; v1479++) {
      ⵠΔ[942][v624.ᐃᐃᐃ].push(f53(f168(v1478, 4 + v1479, "#353326")));
      ⵠΔ[942][v624.Δᐃⵠ].push(f53(f168(v1478, 4 + v1479, "#1D2526")));
    }
    ⵠΔ[201] = [];
    ⵠΔ[201][v624.ᐃᐃᐃ] = f53(f93(v1478 * 1.5, 0, ["#ee71a9"]));
    ⵠΔ[201][v624.Δᐃⵠ] = f53(f93(v1478 * 1.5, 0, ["#ee71a9"]));
    ⵠΔ[872] = [ⵠΔ[201]];
    ⵠΔ[872][1] = [];
    ⵠΔ[872][2] = [];
    ⵠΔ[872][3] = [];
    ⵠΔ[872][4] = [];
    ⵠΔ[872][1][v624.ᐃᐃᐃ] = f53(f93(v1478 * 1.5, 0, ["#e2d63b"]));
    ⵠΔ[872][1][v624.Δᐃⵠ] = f53(f93(v1478 * 1.5, 0, ["#e2d63b"]));
    ⵠΔ[872][2][v624.ᐃᐃᐃ] = f53(f93(v1478 * 1.5, 0, ["#309cbd"]));
    ⵠΔ[872][2][v624.Δᐃⵠ] = f53(f93(v1478 * 1.5, 0, ["#309cbd"]));
    ⵠΔ[872][3][v624.ᐃᐃᐃ] = f53(f93(v1478 * 1.5, 0, ["#cd232d"]));
    ⵠΔ[872][3][v624.Δᐃⵠ] = f53(f93(v1478 * 1.5, 0, ["#cd232d"]));
    ⵠΔ[872][4][v624.ᐃᐃᐃ] = f53(f93(v1478 * 1.5, 0, ["#42b672"]));
    ⵠΔ[872][4][v624.Δᐃⵠ] = f53(f93(v1478 * 1.5, 0, ["#42b672"]));
    if (ᐃⵠⵠ.ⲆⲆᐃᐃⲆⲆᐃ("cti", vWindow.location.href)) {
      document.getElementById("version").innerHTML += "[CTI]";
    } else {
      f53 = function (p1136) {
        p1136.loaded = 1;
        return p1136;
      };
    }
    ⵠΔ[797] = f53(function () {
      var v1480 = document.createElement("canvas");
      var v1481 = v1480.getContext("2d");
      v1480.width = 460;
      v1480.height = 220;
      v1481.fillStyle = "#3a2a0d";
      v1481.fillRect(0, 0, v1480.width, v1480.height);
      v1481.lineWidth = 4;
      v1481.beginPath();
      v1481.strokeStyle = "#513810";
      for (var v1482 = 20; v1482 < 220; v1482 += 20) {
        v1481.moveTo(0, v1482);
        v1481.lineTo(460, v1482);
        v1481.closePath();
        v1481.stroke();
      }
      return v1480;
    }());
    ⵠΔ[108] = [];
    ⵠΔ[108][v624.ᐃᐃᐃ] = [];
    ⵠΔ[108][v624.Δᐃⵠ] = [];
    ⵠΔ[108][v624.ᐃᐃᐃ].push(f53(f154(v1478 * 1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⵠΔ[108][v624.ᐃᐃᐃ].push(f53(f154(v1478 * 0.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⵠΔ[108][v624.ᐃᐃᐃ].push(f53(f154(v1478 * 0.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⵠΔ[108][v624.Δᐃⵠ].push(f53(f154(v1478 * 1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⵠΔ[108][v624.Δᐃⵠ].push(f53(f154(v1478 * 0.9, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⵠΔ[108][v624.Δᐃⵠ].push(f53(f154(v1478 * 0.6, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⵠΔ[111] = [];
    ⵠΔ[111][v624.ᐃᐃᐃ] = [];
    ⵠΔ[111][v624.Δᐃⵠ] = [];
    ⵠΔ[111][v624.ᐃᐃᐃ].push(f53(f153(v1478 * 1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[111][v624.ᐃᐃᐃ].push(f53(f153(v1478 * 1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[111][v624.ᐃᐃᐃ].push(f53(f153(v1478 * 1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[111][v624.Δᐃⵠ].push(f53(f153(v1478 * 1.5, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⵠΔ[111][v624.Δᐃⵠ].push(f53(f153(v1478 * 1.3, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⵠΔ[111][v624.Δᐃⵠ].push(f53(f153(v1478 * 1.1, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⵠΔ[112] = [];
    ⵠΔ[112][v624.ᐃᐃᐃ] = [];
    ⵠΔ[112][v624.Δᐃⵠ] = [];
    ⵠΔ[112][v624.ᐃᐃᐃ].push(f53(f155(v1478 * 1.1, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⵠΔ[112][v624.ᐃᐃᐃ].push(f53(f155(v1478 * 0.9, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⵠΔ[112][v624.ᐃᐃᐃ].push(f53(f155(v1478 * 0.7, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⵠΔ[112][v624.Δᐃⵠ].push(f53(f155(v1478 * 1.1, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⵠΔ[112][v624.Δᐃⵠ].push(f53(f155(v1478 * 0.9, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⵠΔ[112][v624.Δᐃⵠ].push(f53(f155(v1478 * 0.7, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⵠΔ[239] = [];
    ⵠΔ[239][v624.ᐃᐃᐃ] = Δⵠ.ΔⲆⵠᐃⲆⵠⲆ;
    ⵠΔ[239][v624.Δᐃⵠ] = Δⵠ.ⲆΔΔⵠΔᐃⵠ;
    ⵠΔ[286] = [];
    ⵠΔ[286][v624.ᐃᐃᐃ] = f53(f131(v1478 * 0.6, ["#0d1b1c"]));
    ⵠΔ[286][v624.Δᐃⵠ] = f53(f131(v1478 * 0.6, ["#030d14"]));
    ⵠΔ[793] = [];
    ⵠΔ[793][v624.ᐃᐃᐃ] = f53(f129(v1478 * 0.6, ["#2a2938", "#242330"]));
    ⵠΔ[793][v624.Δᐃⵠ] = f53(f129(v1478 * 0.6, ["#1b1e30", "#161921"]));
    ⵠΔ[820] = [];
    ⵠΔ[820][v624.ᐃᐃᐃ] = f53(f97(v1478 * 0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"]));
    ⵠΔ[820][v624.Δᐃⵠ] = f53(f97(v1478 * 0.6, 0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"]));
    ⵠΔ[821] = [];
    ⵠΔ[821][v624.ᐃᐃᐃ] = f53(f98(v1478 * 0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"]));
    ⵠΔ[821][v624.Δᐃⵠ] = f53(f98(v1478 * 0.6, 0, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"]));
    ⵠΔ[822] = [];
    ⵠΔ[822][v624.ᐃᐃᐃ] = f53(f127(v1478 * 0.4, ["#0d1b1c", "#759e6e", "#55604b"]));
    ⵠΔ[822][v624.Δᐃⵠ] = f53(f127(v1478 * 0.4, ["#030d14", "#11635e", "#02373e"]));
    ⵠΔ[823] = f53(f100(v1478 * 0.6, ["#BB0000"]));
    ⵠΔ[824] = f53(f100(v1478 * 0.6, ["#DBE71C"]));
    ⵠΔ[825] = f53(f100(v1478 * 0.6, ["#00BB00"]));
    ⵠΔ[109] = [];
    ⵠΔ[109][v624.ᐃᐃᐃ] = [];
    ⵠΔ[109][v624.Δᐃⵠ] = [];
    ⵠΔ[109][v624.ᐃᐃᐃ].push(f130(v1478 * 1.1, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], vV14, 0));
    ⵠΔ[109][v624.ᐃᐃᐃ].push(f130(v1478 * 1.1, ["#0e3022", "#0f9862", "#0b8750", "#26ab6e"], vVVV1622, 0));
    ⵠΔ[109][v624.ᐃᐃᐃ].push(f130(v1478 * 0.9, ["#0e3022", "#0e7d4c", "#258a4d", "#248c4d"], false, 0));
    ⵠΔ[109][v624.ᐃᐃᐃ].push(f130(v1478 * 0.9, ["#0e3022", "#096d41", "#1f7b43", "#1f7b43"], true, 0));
    ⵠΔ[109][v624.ᐃᐃᐃ].push(f130(v1478 * 0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], false, 0));
    ⵠΔ[109][v624.ᐃᐃᐃ].push(f130(v1478 * 0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], vVV1622, 0));
    ⵠΔ[109][v624.Δᐃⵠ].push(f130(v1478 * 1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], vVV1432, 0));
    ⵠΔ[109][v624.Δᐃⵠ].push(f130(v1478 * 1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], true, 0));
    ⵠΔ[109][v624.Δᐃⵠ].push(f130(v1478 * 0.9, ["#030d14", "#0b3534", "#144443", "#174240"], false, 0));
    ⵠΔ[109][v624.Δᐃⵠ].push(f130(v1478 * 0.9, ["#030d14", "#0b3534", "#144443", "#174240"], vVVVVV1622, 0));
    ⵠΔ[109][v624.Δᐃⵠ].push(f130(v1478 * 0.7, ["#030d14", "#082b1f", "#073328", "#073327", "#16695f"], false, 0));
    ⵠΔ[109][v624.Δᐃⵠ].push(f130(v1478 * 0.7, ["#030d14", "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], vVVVV1622, 0));
    ⵠΔ[307] = [];
    ⵠΔ[307][v624.ᐃᐃᐃ] = [];
    ⵠΔ[307][v624.Δᐃⵠ] = [];
    ⵠΔ[307][v624.ᐃᐃᐃ].push(f53(f141(f136(v1478 * 1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], false), ⵠΔ[109][v624.ᐃᐃᐃ][0])));
    ⵠΔ[307][v624.ᐃᐃᐃ].push(f53(f141(f136(v1478 * 1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], vVVVVV163), ⵠΔ[109][v624.ᐃᐃᐃ][1])));
    ⵠΔ[307][v624.Δᐃⵠ].push(f53(f141(f136(v1478 * 1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], vVV143), ⵠΔ[109][v624.Δᐃⵠ][0])));
    ⵠΔ[307][v624.Δᐃⵠ].push(f53(f141(f136(v1478 * 1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], vVV16), ⵠΔ[109][v624.Δᐃⵠ][1])));
    ⵠΔ[307][v624.ᐃᐃᐃ].push(f53(f141(f136(v1478 * 0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], vV142), ⵠΔ[109][v624.ᐃᐃᐃ][2])));
    ⵠΔ[307][v624.ᐃᐃᐃ].push(f53(f141(f136(v1478 * 0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], true), ⵠΔ[109][v624.ᐃᐃᐃ][2])));
    ⵠΔ[307][v624.Δᐃⵠ].push(f53(f141(f136(v1478 * 0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], false), ⵠΔ[109][v624.Δᐃⵠ][2])));
    ⵠΔ[307][v624.Δᐃⵠ].push(f53(f141(f136(v1478 * 0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], true), ⵠΔ[109][v624.Δᐃⵠ][3])));
    ⵠΔ[109][v624.ᐃᐃᐃ][5] = f53(ⵠΔ[109][v624.ᐃᐃᐃ][5]);
    ⵠΔ[109][v624.ᐃᐃᐃ][4] = f53(ⵠΔ[109][v624.ᐃᐃᐃ][4]);
    ⵠΔ[109][v624.ᐃᐃᐃ][3] = f53(ⵠΔ[109][v624.ᐃᐃᐃ][3]);
    ⵠΔ[109][v624.ᐃᐃᐃ][2] = f53(ⵠΔ[109][v624.ᐃᐃᐃ][2]);
    ⵠΔ[109][v624.ᐃᐃᐃ][1] = f53(ⵠΔ[109][v624.ᐃᐃᐃ][1]);
    ⵠΔ[109][v624.ᐃᐃᐃ][0] = f53(ⵠΔ[109][v624.ᐃᐃᐃ][0]);
    ⵠΔ[109][v624.Δᐃⵠ][5] = f53(ⵠΔ[109][v624.Δᐃⵠ][5]);
    ⵠΔ[109][v624.Δᐃⵠ][4] = f53(ⵠΔ[109][v624.Δᐃⵠ][4]);
    ⵠΔ[109][v624.Δᐃⵠ][3] = f53(ⵠΔ[109][v624.Δᐃⵠ][3]);
    ⵠΔ[109][v624.Δᐃⵠ][2] = f53(ⵠΔ[109][v624.Δᐃⵠ][2]);
    ⵠΔ[109][v624.Δᐃⵠ][1] = f53(ⵠΔ[109][v624.Δᐃⵠ][1]);
    ⵠΔ[109][v624.Δᐃⵠ][0] = f53(ⵠΔ[109][v624.Δᐃⵠ][0]);
    ⵠΔ[8] = [];
    ⵠΔ[8][v624.ᐃᐃᐃ] = f53(f88(4, f148(v1478 * 0.75, vVVVVV163, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"])));
    ⵠΔ[8][v624.Δᐃⵠ] = f53(f88(4, f148(v1478 * 0.75, vVVVV163, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"])));
    ⵠΔ[1] = [];
    ⵠΔ[1][v624.ᐃᐃᐃ] = f53(f88(4, f148(v1478 * 0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ⵠΔ[1][v624.Δᐃⵠ] = f53(f88(4, f148(v1478 * 0.75, vVVVV1622, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"])));
    ⵠΔ[3] = [];
    ⵠΔ[3][v624.ᐃᐃᐃ] = f53(f88(4, f148(v1478 * 0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ⵠΔ[3][v624.Δᐃⵠ] = f53(f88(4, f148(v1478 * 0.75, true, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"])));
    ⵠΔ[4] = [];
    ⵠΔ[4][v624.ᐃᐃᐃ] = f53(f88(4, f148(v1478 * 0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ⵠΔ[4][v624.Δᐃⵠ] = f53(f88(4, f148(v1478 * 0.75, vVV16, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ⵠΔ[31] = [];
    ⵠΔ[31][v624.ᐃᐃᐃ] = f53(f88(4, f148(v1478 * 0.75, vVVVV1622, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ⵠΔ[31][v624.Δᐃⵠ] = f53(f88(4, f148(v1478 * 0.75, true, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ⵠΔ[9] = [];
    ⵠΔ[9][v624.ᐃᐃᐃ] = f53(f88(3, f138(v1478 * 0.17, true, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"])));
    ⵠΔ[9][v624.Δᐃⵠ] = f53(f88(3, f138(v1478 * 0.17, vVVVV162, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"])));
    ⵠΔ[199] = [];
    ⵠΔ[199][v624.ᐃᐃᐃ] = f53(f88(3, f147(v1478 * 0.32, vVVVVVV16, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"])));
    ⵠΔ[199][v624.Δᐃⵠ] = f53(f88(3, f147(v1478 * 0.42, true, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"])));
    ⵠΔ[57] = [];
    ⵠΔ[57][v624.ᐃᐃᐃ] = f53(f88(3, f149(v1478 * 0.4, true, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"])));
    ⵠΔ[57][v624.Δᐃⵠ] = f53(f88(3, f149(v1478 * 0.4, true, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"])));
    ⵠΔ[0] = [];
    ⵠΔ[0][v624.ᐃᐃᐃ] = f53(f88(3, f137(v1478 * 0.4, true, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"])));
    ⵠΔ[0][v624.Δᐃⵠ] = f53(f88(3, f137(v1478 * 0.4, vVVVV16, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"])));
    ⵠΔ[5] = [];
    ⵠΔ[5][v624.ᐃᐃᐃ] = f53(f88(3, f139(v1478 * 0.4, true, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"])));
    ⵠΔ[5][v624.Δᐃⵠ] = f53(f88(3, f139(v1478 * 0.4, true, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"])));
    ⵠΔ[6] = [];
    ⵠΔ[6][v624.ᐃᐃᐃ] = f53(f88(3, f150(v1478 * 0.4, true, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"])));
    ⵠΔ[6][v624.Δᐃⵠ] = f53(f88(3, f150(v1478 * 0.4, true, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"])));
    ⵠΔ[30] = [];
    ⵠΔ[30][v624.ᐃᐃᐃ] = f53(f88(3, f133(v1478 * 0.4, vV16, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"])));
    ⵠΔ[30][v624.Δᐃⵠ] = f53(f88(3, f133(v1478 * 0.4, v16, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"])));
    ⵠΔ[285] = [];
    ⵠΔ[285][v624.ᐃᐃᐃ] = [];
    ⵠΔ[285][v624.Δᐃⵠ] = [];
    ⵠΔ[285][v624.ᐃᐃᐃ].push(f53(f158(v1478 * 0.9, 0, ["#0d4f35"], 0)));
    ⵠΔ[285][v624.ᐃᐃᐃ].push(f53(f158(v1478 * 0.9, 0, ["#0d4f35"], 1)));
    ⵠΔ[285][v624.ᐃᐃᐃ].push(f53(f158(v1478 * 0.9, 0, ["#0d4f35"], 2)));
    ⵠΔ[285][v624.Δᐃⵠ].push(f53(f158(v1478 * 0.9, 0, ["#053339"], 0)));
    ⵠΔ[285][v624.Δᐃⵠ].push(f53(f158(v1478 * 0.9, 0, ["#053339"], 1)));
    ⵠΔ[285][v624.Δᐃⵠ].push(f53(f158(v1478 * 0.9, 0, ["#053339"], 2)));
    ⵠΔ[285][v624.ᐃᐃᐃ].push(f53(f161(v1478 * 0.8, ["#241301", "#ba6b0e", "#6d3f04"])));
    ⵠΔ[285][v624.ᐃᐃᐃ].push(f53(f161(v1478 * 0.8, ["#292002", "#ba930e", "#6d5704"])));
    ⵠΔ[285][v624.Δᐃⵠ].push(f53(f161(v1478 * 0.9, ["#052919", "#0a4738", "#06321f"])));
    ⵠΔ[285][v624.Δᐃⵠ].push(f53(f161(v1478 * 0.8, ["#052918", "#08491c", "#063417"])));
    ⵠΔ[183] = [];
    ⵠΔ[183][v624.ᐃᐃᐃ] = f53(f88(Math.PI / 2, f205(v1478 * 0.25, true, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])));
    ⵠΔ[183][v624.Δᐃⵠ] = f53(f88(Math.PI / 2, f205(v1478 * 0.25, true, ["#030d14", "#082b22", "#0a2f2b", "#072824"])));
    ⵠΔ[803] = [];
    ⵠΔ[803].push(f53(f206(v1478 * 0.25, ["#44301b", "#57442a", "#523e26"], 0)));
    ⵠΔ[803].push(f53(f206(v1478 * 0.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1)));
    ⵠΔ[803].push(f53(f206(v1478 * 0.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2)));
    ⵠΔ[802] = [];
    ⵠΔ[802][v624.ᐃᐃᐃ] = [];
    ⵠΔ[802][v624.Δᐃⵠ] = [];
    ⵠΔ[802][v624.ᐃᐃᐃ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1))));
    ⵠΔ[802][v624.Δᐃⵠ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1))));
    ⵠΔ[802][v624.ᐃᐃᐃ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2))));
    ⵠΔ[802][v624.Δᐃⵠ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2))));
    ⵠΔ[802][v624.ᐃᐃᐃ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#ffffff"], 3))));
    ⵠΔ[802][v624.Δᐃⵠ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#ffffff"], 3))));
    ⵠΔ[802][v624.ᐃᐃᐃ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#362513"], 4))));
    ⵠΔ[802][v624.Δᐃⵠ].push(f53(f88(Math.PI / 2, f211(v1478 * 0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#664d2e"], 4))));
    ⵠΔ[110] = [];
    ⵠΔ[110][v624.ᐃᐃᐃ] = [f53(f156(v1478 * 1.2, vVVVV164, ["#0e3022", "#0b8052", "#077b49"]))];
    ⵠΔ[110][v624.Δᐃⵠ] = [f53(f156(v1478 * 1.2, vVV162, ["#030d14", "#084442", "#0a4049"]))];
    ⵠΔ[623] = [];
    ⵠΔ[623][v624.ᐃᐃᐃ] = f53(f156(v1478 * 0.8, vVVVV162, ["#0e3022", "#68622D", "#665329"]));
    ⵠΔ[623][v624.Δᐃⵠ] = f53(f156(v1478 * 0.8, vV16, ["#030d14", "#0F3A24", "#083326"]));
    ⵠΔ[189] = [];
    ⵠΔ[189][v624.ᐃᐃᐃ] = f53(f265(v1478 * 0.5, true, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"]));
    ⵠΔ[189][v624.Δᐃⵠ] = f53(f265(v1478 * 0.5, vVVVV164, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"]));
    ⵠΔ[192] = [];
    ⵠΔ[192][v624.ᐃᐃᐃ] = f53(f91(v1478 * 0.5, vVVVVV163, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
    ⵠΔ[192][v624.Δᐃⵠ] = f53(f91(v1478 * 0.5, true, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"]));
    ⵠΔ[194] = [];
    ⵠΔ[194][v624.ᐃᐃᐃ] = f53(f274(v1478 * 0.5, true, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]));
    ⵠΔ[194][v624.Δᐃⵠ] = f53(f274(v1478 * 0.5, true, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"]));
    ⵠΔ[287] = [];
    ⵠΔ[287][v624.ᐃᐃᐃ] = f53(f156(v1478 * 0.8, vVVVV16, ["#1b170c", "#0b8052", "#077b49"]));
    ⵠΔ[287][v624.Δᐃⵠ] = f53(f156(v1478 * 0.8, vV16, ["#030d14", "#084442", "#0a4049"]));
    ⵠΔ[813] = [];
    ⵠΔ[813][v624.ᐃᐃᐃ] = f53(f265(v1478 * 0.5, true, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"]));
    ⵠΔ[813][v624.Δᐃⵠ] = f53(f265(v1478 * 0.5, true, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"]));
    ⵠΔ[839] = [];
    ⵠΔ[839][v624.ᐃᐃᐃ] = f53(f91(v1478 * 0.5, true, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
    ⵠΔ[839][v624.Δᐃⵠ] = f53(f91(v1478 * 0.5, true, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"]));
    ⵠΔ[869] = [];
    ⵠΔ[869][v624.ᐃᐃᐃ] = f53(f274(v1478 * 0.5, true, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"]));
    ⵠΔ[869][v624.Δᐃⵠ] = f53(f274(v1478 * 0.5, true, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"]));
    ⵠΔ[854] = [];
    ⵠΔ[854][v624.ᐃᐃᐃ] = f53(f288(v1478 * 0.45, vVVV1622, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"]));
    ⵠΔ[854][v624.Δᐃⵠ] = f53(f288(v1478 * 0.45, vVVVV1622, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"]));
    ⵠΔ[859] = f53(f288(v1478 * 0.65, true, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"]));
    ⵠΔ[294] = [];
    ⵠΔ[294][v624.ᐃᐃᐃ] = f53(f160(v1478 * 1.4, 0, ["#ac222a", "#e6636a"]));
    ⵠΔ[294][v624.Δᐃⵠ] = f53(f160(v1478 * 1.4, 0, ["#46195e", "#744188"]));
    ⵠΔ[288] = [];
    ⵠΔ[288][v624.ᐃᐃᐃ] = f53(f123(v1478 * 0.9, 0, ["#efd435", "#ec8d35", "#e96132"]));
    ⵠΔ[288][v624.Δᐃⵠ] = f53(f123(v1478 * 0.9, 0, ["#efdb7b", "#efe854", "#e8ef62"]));
    ⵠΔ[118] = [];
    ⵠΔ[118][v624.ᐃᐃᐃ] = f53(f121(v1478 * 0.9, 0, ["#4d2d14", "#432516"]));
    ⵠΔ[118][v624.Δᐃⵠ] = f53(f121(v1478 * 0.9, 0, ["#282404", "#0a0a01"]));
    ⵠΔ[113] = [];
    ⵠΔ[113][v624.ᐃᐃᐃ] = f53(f125(v1478 * 0.9, 0, ["#4d2d14", "#432516"]));
    ⵠΔ[113][v624.Δᐃⵠ] = f53(f125(v1478 * 0.9, 0, ["#282404", "#0a0a01"]));
    ⵠΔ[289] = [];
    ⵠΔ[289][v624.ᐃᐃᐃ] = f53(f122(v1478 * 0.9, 0, ["#efd435"]));
    ⵠΔ[289][v624.Δᐃⵠ] = f53(f122(v1478 * 0.9, 0, ["#fffabb"]));
    ⵠΔ[282] = [];
    ⵠΔ[282][v624.ᐃᐃᐃ] = f53(f124(v1478 * 0.9, 0, ["#efd435"]));
    ⵠΔ[282][v624.Δᐃⵠ] = f53(f124(v1478 * 0.9, 0, ["#fffabb"]));
    ⵠΔ[816] = [];
    ⵠΔ[816][v624.ᐃᐃᐃ] = f53(f122(v1478 * 0.9, 0, ["#efd435"]));
    ⵠΔ[816][v624.Δᐃⵠ] = f53(f122(v1478 * 0.9, 0, ["rgba(255, 84, 0, 1)"]));
    ⵠΔ[817] = [];
    ⵠΔ[817][v624.ᐃᐃᐃ] = f53(f124(v1478 * 0.9, 0, ["#efd435"]));
    ⵠΔ[817][v624.Δᐃⵠ] = f53(f124(v1478 * 0.9, 0, ["#ff5704"]));
    ⵠΔ[324] = f53(f104(v1478, "#ffffff"));
    ⵠΔ[301] = f53(f104(v1478 * 1.5, "#ffffff"));
    ⵠΔ[306] = f53(f162(v1478, "Your score:", v1478 * 15, "#FFF"));
    ⵠΔ[655] = f53(function (p1137, p1138) {
      var v1483 = document.createElement("canvas");
      var v1484 = v1483.getContext("2d");
      v1483.width = p1137 * 243;
      v1483.height = p1137 * 172;
      f89(v1484, p1137 * 119.5, p1137 * 140.125, p1137 * 19);
      f84(v1484, undefined, p1138[1], p1137 * 5);
      v1484.beginPath();
      v1484.lineCap = "round";
      v1484.lineJoin = "round";
      v1484.moveTo(p1137 * 36.5, p1137 * 20.125);
      v1484.bezierCurveTo(p1137 * 119.5, p1137 * 20.625, p1137 * 119.5, p1137 * 20.625, p1137 * 202.5, p1137 * 21.125);
      v1484.bezierCurveTo(p1137 * 214.5, p1137 * 22.125, p1137 * 216.5, p1137 * 26.125, p1137 * 217.5, p1137 * 35.125);
      v1484.bezierCurveTo(p1137 * 221, p1137 * 76.125, p1137 * 221, p1137 * 76.125, p1137 * 224.5, p1137 * 117.125);
      v1484.bezierCurveTo(p1137 * 225.5, p1137 * 127.125, p1137 * 221.5, p1137 * 131.125, p1137 * 210.5, p1137 * 132.125);
      v1484.bezierCurveTo(p1137 * 117.5, p1137 * 132.125, p1137 * 117.5, p1137 * 132.125, p1137 * 24.5, p1137 * 132.125);
      v1484.bezierCurveTo(p1137 * 14.5, p1137 * 131.125, p1137 * 13.5, p1137 * 126.125, p1137 * 16.5, p1137 * 111.125);
      v1484.bezierCurveTo(p1137 * 19.5, p1137 * 73.125, p1137 * 19.5, p1137 * 73.125, p1137 * 22.5, p1137 * 35.125);
      v1484.bezierCurveTo(p1137 * 23.5, p1137 * 23.125, p1137 * 29.5, p1137 * 21.125, p1137 * 36.5, p1137 * 20.125);
      v1484.closePath();
      f84(v1484, p1138[0], p1138[1], p1137 * 4);
      v1484.beginPath();
      v1484.lineCap = "round";
      v1484.lineJoin = "round";
      v1484.moveTo(p1137 * 15.5, p1137 * 138.625);
      v1484.bezierCurveTo(p1137 * 120, p1137 * 138.625, p1137 * 120, p1137 * 138.625, p1137 * 224.5, p1137 * 138.625);
      v1484.closePath();
      f84(v1484, vVVUndefined20, p1138[2], p1137 * 10);
      v1484.beginPath();
      v1484.lineCap = "round";
      v1484.lineJoin = "round";
      v1484.moveTo(p1137 * 13.5, p1137 * 131.625);
      v1484.bezierCurveTo(p1137 * 119.5, p1137 * 131.625, p1137 * 119.5, p1137 * 131.625, p1137 * 225.5, p1137 * 131.625);
      v1484.closePath();
      f84(v1484, vVVUndefined212, p1138[3], p1137 * 10);
      f89(v1484, p1137 * 119.5, p1137 * 140.125, p1137 * 14.866068747318506);
      f84(v1484, p1138[4], p1138[5], p1137 * 4);
      v1484.beginPath();
      v1484.lineCap = "round";
      v1484.lineJoin = "round";
      v1484.moveTo(p1137 * 106.5, p1137 * 146.625);
      v1484.bezierCurveTo(p1137 * 116.5, p1137 * 137.625, p1137 * 118.5, p1137 * 136.625, p1137 * 123.5, p1137 * 138.625);
      v1484.bezierCurveTo(p1137 * 131.5, p1137 * 145.625, p1137 * 133.5, p1137 * 148.625, p1137 * 127.5, p1137 * 152.625);
      v1484.bezierCurveTo(p1137 * 115.5, p1137 * 158.625, p1137 * 111.5, p1137 * 153.625, p1137 * 106.5, p1137 * 147.625);
      v1484.closePath();
      f84(v1484, p1138[6], p1138[7], p1137 * 2);
      v1484.beginPath();
      v1484.lineCap = "round";
      v1484.lineJoin = "round";
      v1484.moveTo(p1137 * 105.5, p1137 * 146.625);
      v1484.bezierCurveTo(p1137 * 116.5, p1137 * 159.625, p1137 * 124.5, p1137 * 156.625, p1137 * 132.5, p1137 * 146.625);
      f84(v1484, undefined, p1138[8], p1137 * 5);
      v1484.save();
      v1484.translate(p1137 * 75.5, p1137 * 80.125);
      f83(v1484, p1137 * -39, p1137 * -40, p1137 * 78, p1137 * 78, p1137 * 10);
      v1484.restore();
      f84(v1484, p1138[9]);
      v1484.save();
      v1484.translate(p1137 * 167, p1137 * 80.125);
      f83(v1484, p1137 * -38.5, p1137 * -39, p1137 * 78, p1137 * 78, p1137 * 10);
      v1484.restore();
      f84(v1484, p1138[9]);
      return v1483;
    }(v1478 * 0.9, ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"]));
    ⵠΔ[656] = Δⵠ.ⵠᐃΔᐃⵠⲆᐃ;
    ⵠΔ[135] = [];
    ⵠΔ[135][v624.ᐃᐃᐃ] = f53(f115(v1478 * 1.5, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⵠΔ[135][v624.Δᐃⵠ] = f53(f115(v1478 * 1.5, vVVV163, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⵠΔ[641] = [];
    ⵠΔ[641][v624.ᐃᐃᐃ] = f53(f119(v1478 * 2, vVVVV162, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⵠΔ[641][v624.Δᐃⵠ] = f53(f119(v1478 * 2, vVVV163, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⵠΔ[642] = [];
    ⵠΔ[642][v624.ᐃᐃᐃ] = f53(f114(v1478 * 1.5, vV16, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⵠΔ[642][v624.Δᐃⵠ] = f53(f114(v1478 * 1.5, vVVV1622, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⵠΔ[134] = [];
    ⵠΔ[134][v624.ᐃᐃᐃ] = f53(f118(v1478 * 2.2, 0, ["#A89F67", "#9E8456"]));
    ⵠΔ[134][v624.Δᐃⵠ] = f53(f118(v1478 * 2.2, 0, ["#0B4049", "#08383D"]));
    ⵠΔ[638] = [];
    ⵠΔ[638][v624.ᐃᐃᐃ] = f53(f118(v1478 * 2.2, 0, ["#68622D", "#665329"]));
    ⵠΔ[638][v624.Δᐃⵠ] = f53(f118(v1478 * 2.2, 0, ["#0F3A24", "#083326"]));
    ⵠΔ[321] = [];
    ⵠΔ[321][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#A89F67", "#9E8456"]));
    ⵠΔ[321][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#15514F", "#0F3F3D"]));
    ⵠΔ[811] = [];
    ⵠΔ[811][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#c67933", "#b17238"]));
    ⵠΔ[811][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[984] = [];
    ⵠΔ[984][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#3a8214", "#4a9c1e"]));
    ⵠΔ[984][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#032d29", "#044640"]));
    ⵠΔ[837] = [];
    ⵠΔ[837][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#e8e8e8", "#bbbbbb"]));
    ⵠΔ[837][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#1c6161", "#07413f"]));
    ⵠΔ[848] = [];
    ⵠΔ[848][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#328a56", "#449573"]));
    ⵠΔ[848][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[952] = [];
    ⵠΔ[952][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#c98e2f", "#a36b11"]));
    ⵠΔ[952][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[962] = [];
    ⵠΔ[962][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#b22419", "#99110e"]));
    ⵠΔ[962][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#04323c", "#03222b"]));
    ⵠΔ[969] = [];
    ⵠΔ[969][v624.ᐃᐃᐃ] = f53(f152(v1478 * 0.8, 0, ["#13a56d", "#098a58"]));
    ⵠΔ[969][v624.Δᐃⵠ] = f53(f152(v1478 * 0.8, 0, ["#043c37", "#032b23"]));
    ⵠΔ[657] = f120(1, [{
      f: f118,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[723] = f120(1, [{
      f: f125,
      x: 0,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[724] = f120(1, [{
      f: f242,
      x: 0,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.15, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[334] = f120(0.9, [], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⵠΔ[115] = [];
    ⵠΔ[115][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#7d613e", "#9e7e5a"]));
    ⵠΔ[115][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#084442", "#125e5a"]));
    ⵠΔ[132] = [];
    ⵠΔ[132][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#9E8456", "#A89F67"]));
    ⵠΔ[132][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#1b6f6a", "#0d4e4c"]));
    ⵠΔ[668] = [];
    ⵠΔ[668][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#665329", "#68622D"]));
    ⵠΔ[668][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#083326", "#0F3A24"]));
    ⵠΔ[188] = [];
    ⵠΔ[188][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#c67933", "#ec952d"]));
    ⵠΔ[188][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[210] = [];
    ⵠΔ[210][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#375809", "#4b770e"]));
    ⵠΔ[210][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#09542d", "#0d5d2f"]));
    ⵠΔ[985] = [];
    ⵠΔ[985][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#585809", "#72770e"]));
    ⵠΔ[985][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#295209", "#305d0d"]));
    ⵠΔ[191] = [];
    ⵠΔ[191][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#b9b094", "#e2d2c0"]));
    ⵠΔ[191][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#126366", "#0d484b"]));
    ⵠΔ[193] = [];
    ⵠΔ[193][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#3f8662", "#30915d"]));
    ⵠΔ[193][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[812] = [];
    ⵠΔ[812][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#c79153", "#dfa868"]));
    ⵠΔ[812][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#073927", "#075040"]));
    ⵠΔ[838] = [];
    ⵠΔ[838][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#768b5b", "#819984"]));
    ⵠΔ[838][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#0c4540", "#0e5153"]));
    ⵠΔ[849] = [];
    ⵠΔ[849][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#567465", "#627c6e"]));
    ⵠΔ[849][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#073927", "#075040"]));
    ⵠΔ[204] = [];
    ⵠΔ[204][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#996b3a", "#bf956b"]));
    ⵠΔ[204][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#0e6553", "#094437"]));
    ⵠΔ[953] = [];
    ⵠΔ[953][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#7a634a", "#a68f77"]));
    ⵠΔ[953][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#1e4d43", "#113c32"]));
    ⵠΔ[206] = [];
    ⵠΔ[206][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#99403c", "#bc796c"]));
    ⵠΔ[206][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#1e434d", "#11303c"]));
    ⵠΔ[963] = [];
    ⵠΔ[963][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#88504e", "#b3857c"]));
    ⵠΔ[963][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#253b41", "#162930"]));
    ⵠΔ[208] = [];
    ⵠΔ[208][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#0f8870", "#23af93"]));
    ⵠΔ[208][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#032829", "#083233"]));
    ⵠΔ[970] = [];
    ⵠΔ[970][v624.ᐃᐃᐃ] = f53(f99(v1478 * 0.9, 0, ["#618a20", "#84a74e"]));
    ⵠΔ[970][v624.Δᐃⵠ] = f53(f99(v1478 * 0.9, 0, ["#1f4632", "#335d47"]));
    ⵠΔ[114] = [];
    ⵠΔ[114][v624.ᐃᐃᐃ] = f53(f105(v1478 * 1.2, v16, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]));
    ⵠΔ[114][v624.Δᐃⵠ] = f53(f105(v1478 * 1.2, true, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"]));
    ⵠΔ[162] = [];
    ⵠΔ[162][v624.ᐃᐃᐃ] = f53(f167(v1478 * 1, true, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ⵠΔ[162][v624.Δᐃⵠ] = f53(f167(v1478 * 1, true, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⵠΔ[165] = [];
    ⵠΔ[165][v624.ᐃᐃᐃ] = f53(f172(v1478 * 1, true, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⵠΔ[165][v624.Δᐃⵠ] = f53(f172(v1478 * 1, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⵠΔ[122] = [];
    ⵠΔ[122][v624.ᐃᐃᐃ] = f53(f173(v1478 * 1, vVVVVVV16, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⵠΔ[122][v624.Δᐃⵠ] = f53(f173(v1478 * 1, vVVVVV163, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⵠΔ[163] = [];
    ⵠΔ[163][v624.ᐃᐃᐃ] = f53(f173(v1478 * 1, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ⵠΔ[163][v624.Δᐃⵠ] = f53(f173(v1478 * 1, vVVVVV1622, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ⵠΔ[164] = [];
    ⵠΔ[164][v624.ᐃᐃᐃ] = f53(f175(v1478 * 1, true, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ⵠΔ[164][v624.Δᐃⵠ] = f53(f175(v1478 * 1, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ⵠΔ[160] = [];
    ⵠΔ[160][v624.ᐃᐃᐃ] = f53(f200(v1478 * 0.8, true, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ⵠΔ[160][v624.Δᐃⵠ] = f53(f200(v1478 * 0.8, true, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⵠΔ[169] = [];
    ⵠΔ[169][v624.ᐃᐃᐃ] = f53(f197(v1478 * 0.8, true, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ⵠΔ[169][v624.Δᐃⵠ] = f53(f197(v1478 * 0.8, true, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ⵠΔ[170] = [];
    ⵠΔ[170][v624.ᐃᐃᐃ] = f53(f199(v1478 * 0.8, vV16, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⵠΔ[170][v624.Δᐃⵠ] = f53(f199(v1478 * 0.8, true, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⵠΔ[168] = [];
    ⵠΔ[168][v624.ᐃᐃᐃ] = f53(f202(v1478 * 0.8, true, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ⵠΔ[168][v624.Δᐃⵠ] = f53(f202(v1478 * 0.8, true, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ⵠΔ[123] = [];
    ⵠΔ[123][v624.ᐃᐃᐃ] = f53(f202(v1478 * 0.8, true, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⵠΔ[123][v624.Δᐃⵠ] = f53(f202(v1478 * 0.8, true, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⵠΔ[166] = [];
    ⵠΔ[166][v624.ᐃᐃᐃ] = f53(f176(v1478 * 1.5, vVV16, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"]));
    ⵠΔ[166][v624.Δᐃⵠ] = f53(f176(v1478 * 1.5, true, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⵠΔ[336] = [];
    ⵠΔ[336][v624.ᐃᐃᐃ] = f53(f176(v1478 * 1, vVVV14, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[336][v624.Δᐃⵠ] = f53(f176(v1478 * 1, false, ["#042b30", "#042b30", "#0b342b", "#0b342b", "#042b30", "#0b342b"]));
    ⵠΔ[171] = [];
    ⵠΔ[171][v624.ᐃᐃᐃ] = f53(f177(v1478 * 1.5, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]));
    ⵠΔ[171][v624.Δᐃⵠ] = f53(f177(v1478 * 1.5, vVVVVV162, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"]));
    ⵠΔ[373] = [];
    ⵠΔ[373][v624.ᐃᐃᐃ] = f53(f177(v1478 * 1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[373][v624.Δᐃⵠ] = f53(f177(v1478 * 1, vVVV144, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[124] = [];
    ⵠΔ[124][v624.ᐃᐃᐃ] = f53(f177(v1478 * 1.5, true, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⵠΔ[124][v624.Δᐃⵠ] = f53(f177(v1478 * 1.5, true, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⵠΔ[500] = [];
    ⵠΔ[500][v624.ᐃᐃᐃ] = f53(f177(v1478 * 1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[500][v624.Δᐃⵠ] = f53(f177(v1478 * 1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[172] = [];
    ⵠΔ[172][v624.ᐃᐃᐃ] = f53(f178(v1478 * 1.5, vVVV162, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]));
    ⵠΔ[172][v624.Δᐃⵠ] = f53(f178(v1478 * 1.5, vVVV162, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"]));
    ⵠΔ[376] = [];
    ⵠΔ[376][v624.ᐃᐃᐃ] = f53(f178(v1478 * 1, vVVV1422, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[376][v624.Δᐃⵠ] = f53(f178(v1478 * 1, vVVV1422, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[173] = [];
    ⵠΔ[173][v624.ᐃᐃᐃ] = f53(f181(v1478 * 1.5, vVVVVV1622, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⵠΔ[173][v624.Δᐃⵠ] = f53(f181(v1478 * 1.5, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⵠΔ[379] = [];
    ⵠΔ[379][v624.ᐃᐃᐃ] = f53(f181(v1478 * 1, vVV143, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⵠΔ[379][v624.Δᐃⵠ] = f53(f181(v1478 * 1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⵠΔ[167] = [];
    ⵠΔ[167][v624.ᐃᐃᐃ] = f53(f196(v1478 * 0.5, 0, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]));
    ⵠΔ[167][v624.Δᐃⵠ] = f53(f196(v1478 * 0.5, 0, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"]));
    ⵠΔ[691] = [];
    ⵠΔ[691][v624.ᐃᐃᐃ] = f53(f271(v1478 * 0.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"]));
    ⵠΔ[691][v624.Δᐃⵠ] = f53(f271(v1478 * 0.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"]));
    ⵠΔ[264] = [];
    ⵠΔ[264][v624.ᐃᐃᐃ] = f53(f107(v1478 * 0.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"]));
    ⵠΔ[264][v624.Δᐃⵠ] = f53(f107(v1478 * 0.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"]));
    ⵠΔ[260] = [];
    ⵠΔ[260][v624.ᐃᐃᐃ] = f53(f88(Math.PI, f110(v1478 * 0.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"])));
    ⵠΔ[260][v624.Δᐃⵠ] = f53(f88(Math.PI, f110(v1478 * 0.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"])));
    ⵠΔ[266] = f53(function (p1139, p1140) {
      var v1485 = document.createElement("canvas");
      var v1486 = v1485.getContext("2d");
      v1485.width = p1139 * 450;
      v1485.height = p1139 * 470;
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 226.5, p1139 * 91.546875);
      v1486.bezierCurveTo(p1139 * 254.5, p1139 * 115.546875, p1139 * 261.5, p1139 * 115.546875, p1139 * 294.5, p1139 * 109.546875);
      v1486.bezierCurveTo(p1139 * 299.5, p1139 * 141.546875, p1139 * 315.5, p1139 * 151.546875, p1139 * 344.5, p1139 * 158.546875);
      v1486.bezierCurveTo(p1139 * 330.5, p1139 * 195.546875, p1139 * 341.5, p1139 * 207.546875, p1139 * 361.5, p1139 * 226.546875);
      v1486.bezierCurveTo(p1139 * 331.5, p1139 * 251.546875, p1139 * 335.5, p1139 * 270.546875, p1139 * 342.5, p1139 * 295.546875);
      v1486.bezierCurveTo(p1139 * 300.5, p1139 * 296.546875, p1139 * 293.5, p1139 * 325.546875, p1139 * 292.5, p1139 * 344.546875);
      v1486.bezierCurveTo(p1139 * 257.5, p1139 * 326.546875, p1139 * 242.5, p1139 * 338.546875, p1139 * 224.5, p1139 * 361.546875);
      v1486.bezierCurveTo(p1139 * 200.5, p1139 * 329.546875, p1139 * 180.5, p1139 * 334.546875, p1139 * 155.5, p1139 * 341.546875);
      v1486.bezierCurveTo(p1139 * 146.5, p1139 * 307.546875, p1139 * 140.5, p1139 * 302.546875, p1139 * 107.5, p1139 * 292.546875);
      v1486.bezierCurveTo(p1139 * 117.5, p1139 * 253.546875, p1139 * 109.5, p1139 * 244.546875, p1139 * 89.5, p1139 * 224.546875);
      v1486.bezierCurveTo(p1139 * 118.5, p1139 * 191.546875, p1139 * 114.5, p1139 * 182.546875, p1139 * 108.5, p1139 * 156.546875);
      v1486.bezierCurveTo(p1139 * 143.5, p1139 * 149.546875, p1139 * 150.5, p1139 * 136.546875, p1139 * 157.5, p1139 * 106.546875);
      v1486.bezierCurveTo(p1139 * 202.5, p1139 * 120.546875, p1139 * 211.5, p1139 * 103.546875, p1139 * 228.5, p1139 * 91.546875);
      v1486.closePath();
      f84(v1486, undefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 224.5, p1139 * 129.546875);
      v1486.bezierCurveTo(p1139 * 247.5, p1139 * 147.546875, p1139 * 252.5, p1139 * 143.546875, p1139 * 274.5, p1139 * 141.546875);
      v1486.bezierCurveTo(p1139 * 279.5, p1139 * 163.546875, p1139 * 289.5, p1139 * 168.546875, p1139 * 311.5, p1139 * 178.546875);
      v1486.bezierCurveTo(p1139 * 301.5, p1139 * 199.546875, p1139 * 307.5, p1139 * 213.546875, p1139 * 323.5, p1139 * 226.546875);
      v1486.bezierCurveTo(p1139 * 303.5, p1139 * 240.546875, p1139 * 303.5, p1139 * 255.546875, p1139 * 312.5, p1139 * 275.546875);
      v1486.bezierCurveTo(p1139 * 281.5, p1139 * 278.546875, p1139 * 276.5, p1139 * 291.546875, p1139 * 272.5, p1139 * 313.546875);
      v1486.bezierCurveTo(p1139 * 248.5, p1139 * 301.546875, p1139 * 239.5, p1139 * 310.546875, p1139 * 224.5, p1139 * 324.546875);
      v1486.bezierCurveTo(p1139 * 211.5, p1139 * 304.546875, p1139 * 199.5, p1139 * 301.546875, p1139 * 176.5, p1139 * 309.546875);
      v1486.bezierCurveTo(p1139 * 165.5, p1139 * 276.546875, p1139 * 159.5, p1139 * 275.546875, p1139 * 138.5, p1139 * 274.546875);
      v1486.bezierCurveTo(p1139 * 148.5, p1139 * 248.546875, p1139 * 140.5, p1139 * 237.546875, p1139 * 125.5, p1139 * 225.546875);
      v1486.bezierCurveTo(p1139 * 145.5, p1139 * 205.546875, p1139 * 146.5, p1139 * 195.546875, p1139 * 142.5, p1139 * 176.546875);
      v1486.bezierCurveTo(p1139 * 173.5, p1139 * 164.546875, p1139 * 173.5, p1139 * 155.546875, p1139 * 178.5, p1139 * 140.546875);
      v1486.bezierCurveTo(p1139 * 214.5, p1139 * 143.546875, p1139 * 214.5, p1139 * 135.546875, p1139 * 226.5, p1139 * 129.546875);
      v1486.closePath();
      f84(v1486, undefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 224.5, p1139 * 160.546875);
      v1486.bezierCurveTo(p1139 * 236.5, p1139 * 168.546875, p1139 * 239.5, p1139 * 168.546875, p1139 * 258.5, p1139 * 168.546875);
      v1486.bezierCurveTo(p1139 * 261.5, p1139 * 185.546875, p1139 * 268.5, p1139 * 187.546875, p1139 * 282.5, p1139 * 192.546875);
      v1486.bezierCurveTo(p1139 * 277.5, p1139 * 208.546875, p1139 * 283.5, p1139 * 216.546875, p1139 * 289.5, p1139 * 228.546875);
      v1486.bezierCurveTo(p1139 * 277.5, p1139 * 243.546875, p1139 * 280.5, p1139 * 253.546875, p1139 * 281.5, p1139 * 260.546875);
      v1486.bezierCurveTo(p1139 * 264.5, p1139 * 260.546875, p1139 * 259.5, p1139 * 269.546875, p1139 * 256.5, p1139 * 283.546875);
      v1486.bezierCurveTo(p1139 * 244.5, p1139 * 276.546875, p1139 * 232.5, p1139 * 283.546875, p1139 * 223.5, p1139 * 291.546875);
      v1486.bezierCurveTo(p1139 * 213.5, p1139 * 276.546875, p1139 * 205.5, p1139 * 278.546875, p1139 * 190.5, p1139 * 281.546875);
      v1486.bezierCurveTo(p1139 * 181.5, p1139 * 262.546875, p1139 * 173.5, p1139 * 259.546875, p1139 * 165.5, p1139 * 258.546875);
      v1486.bezierCurveTo(p1139 * 169.5, p1139 * 239.546875, p1139 * 167.5, p1139 * 233.546875, p1139 * 157.5, p1139 * 225.546875);
      v1486.bezierCurveTo(p1139 * 169.5, p1139 * 208.546875, p1139 * 170.5, p1139 * 203.546875, p1139 * 168.5, p1139 * 192.546875);
      v1486.bezierCurveTo(p1139 * 181.5, p1139 * 187.546875, p1139 * 188.5, p1139 * 179.546875, p1139 * 192.5, p1139 * 168.546875);
      v1486.bezierCurveTo(p1139 * 216.5, p1139 * 170.546875, p1139 * 218.5, p1139 * 163.546875, p1139 * 225.5, p1139 * 160.546875);
      v1486.closePath();
      f84(v1486, undefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 205.5, p1139 * 194.546875);
      v1486.bezierCurveTo(p1139 * 216.5, p1139 * 192.546875, p1139 * 219.5, p1139 * 191.546875, p1139 * 225.5, p1139 * 185.546875);
      v1486.bezierCurveTo(p1139 * 232.5, p1139 * 193.546875, p1139 * 237.5, p1139 * 191.546875, p1139 * 246.5, p1139 * 192.546875);
      v1486.bezierCurveTo(p1139 * 249.5, p1139 * 202.546875, p1139 * 253.5, p1139 * 205.546875, p1139 * 258.5, p1139 * 207.546875);
      v1486.bezierCurveTo(p1139 * 259.5, p1139 * 222.546875, p1139 * 256.5, p1139 * 223.546875, p1139 * 265.5, p1139 * 226.546875);
      v1486.bezierCurveTo(p1139 * 256.5, p1139 * 231.546875, p1139 * 255.5, p1139 * 241.546875, p1139 * 259.5, p1139 * 248.546875);
      v1486.bezierCurveTo(p1139 * 250.5, p1139 * 245.546875, p1139 * 245.5, p1139 * 252.546875, p1139 * 243.5, p1139 * 260.546875);
      v1486.bezierCurveTo(p1139 * 234.5, p1139 * 256.546875, p1139 * 229.5, p1139 * 258.546875, p1139 * 223.5, p1139 * 265.546875);
      v1486.bezierCurveTo(p1139 * 218.5, p1139 * 255.546875, p1139 * 213.5, p1139 * 257.546875, p1139 * 204.5, p1139 * 261.546875);
      v1486.bezierCurveTo(p1139 * 203.5, p1139 * 251.546875, p1139 * 198.5, p1139 * 248.546875, p1139 * 189.5, p1139 * 244.546875);
      v1486.bezierCurveTo(p1139 * 194.5, p1139 * 237.546875, p1139 * 192.5, p1139 * 231.546875, p1139 * 184.5, p1139 * 225.546875);
      v1486.bezierCurveTo(p1139 * 191.5, p1139 * 211.546875, p1139 * 192.5, p1139 * 209.546875, p1139 * 190.5, p1139 * 204.546875);
      v1486.bezierCurveTo(p1139 * 200.5, p1139 * 204.546875, p1139 * 204.5, p1139 * 198.546875, p1139 * 207.5, p1139 * 194.546875);
      v1486.closePath();
      f84(v1486, undefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 149.5, p1139 * 93.546875);
      v1486.bezierCurveTo(p1139 * 287.5, p1139 * 332.546875, p1139 * 226, p1139 * 225.546875, p1139 * 302.5, p1139 * 357.546875);
      v1486.closePath();
      f84(v1486, vVVUndefined202, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 224.5, p1139 * 66.546875);
      v1486.bezierCurveTo(p1139 * 224.5, p1139 * 223.546875, p1139 * 224.5, p1139 * 223.546875, p1139 * 224.5, p1139 * 380.546875);
      v1486.closePath();
      f84(v1486, undefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 302.5, p1139 * 88.546875);
      v1486.bezierCurveTo(p1139 * 222.5, p1139 * 227.546875, p1139 * 222.5, p1139 * 227.546875, p1139 * 142.5, p1139 * 366.546875);
      v1486.closePath();
      f84(v1486, vVVVUndefined21, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 361.5, p1139 * 147.546875);
      v1486.bezierCurveTo(p1139 * 223, p1139 * 226.546875, p1139 * 223, p1139 * 226.546875, p1139 * 84.5, p1139 * 305.546875);
      v1486.closePath();
      f84(v1486, undefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 379.5, p1139 * 225.546875);
      v1486.bezierCurveTo(p1139 * 221, p1139 * 225.546875, p1139 * 221, p1139 * 225.546875, p1139 * 62.5, p1139 * 225.546875);
      v1486.closePath();
      f84(v1486, vUndefined, p1140[0], 4);
      v1486.beginPath();
      v1486.lineCap = "round";
      v1486.lineJoin = "round";
      v1486.moveTo(p1139 * 90.5, p1139 * 147.546875);
      v1486.bezierCurveTo(p1139 * 226.5, p1139 * 226.546875, p1139 * 226.5, p1139 * 226.546875, p1139 * 362.5, p1139 * 305.546875);
      v1486.closePath();
      f84(v1486, vVUndefined11, p1140[0], 4);
      return v1485;
    }(v1478 * 0.6, ["#FFFFFF"]));
    ⵠΔ[299] = [];
    ⵠΔ[299][v624.ᐃᐃᐃ] = f53(f108(v1478 * 1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"]));
    ⵠΔ[299][v624.Δᐃⵠ] = f53(f108(v1478 * 1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"]));
    ⵠΔ[10] = [];
    ⵠΔ[10][v624.ᐃᐃᐃ] = f53(f198(v1478 * 0.6, 0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]));
    ⵠΔ[10][v624.Δᐃⵠ] = f53(f198(v1478 * 0.6, 0, ["#478e8b", "#327e73", "#073030", "#08403f"]));
    ⵠΔ[11] = [];
    ⵠΔ[11][v624.ᐃᐃᐃ] = f53(f182(v1478 * 0.6, 0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]));
    ⵠΔ[11][v624.Δᐃⵠ] = f53(f182(v1478 * 0.6, 0, ["#073030", "#08403f", "#478e8b", "#327e73"]));
    ⵠΔ[40] = [];
    ⵠΔ[40][v624.ᐃᐃᐃ] = f53(f203(v1478 * 0.63, true, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]));
    ⵠΔ[40][v624.Δᐃⵠ] = f53(f203(v1478 * 0.63, vVVVVVV16, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"]));
    ⵠΔ[41] = [];
    ⵠΔ[41][v624.ᐃᐃᐃ] = f53(f128(v1478 * 0.6, 0, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]));
    ⵠΔ[41][v624.Δᐃⵠ] = f53(f128(v1478 * 0.6, 0, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"]));
    ⵠΔ[42] = [];
    ⵠΔ[42][v624.ᐃᐃᐃ] = f53(f126(v1478 * 0.6, 0, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]));
    ⵠΔ[42][v624.Δᐃⵠ] = f53(f126(v1478 * 0.6, 0, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"]));
    ⵠΔ[716] = [];
    ⵠΔ[716][v624.ᐃᐃᐃ] = f53(f245(v1478 * 0.42, vVVV162, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"]));
    ⵠΔ[716][v624.Δᐃⵠ] = f53(f245(v1478 * 0.42, vVVVV162, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"]));
    ⵠΔ[720] = [];
    ⵠΔ[720][v624.ᐃᐃᐃ] = f53(f277(v1478 * 0.9, ["#e4c027"]));
    ⵠΔ[720][v624.Δᐃⵠ] = f53(f277(v1478 * 0.9, ["#D8E57F"]));
    ⵠΔ[144] = [];
    ⵠΔ[144][v624.ᐃᐃᐃ] = f53(f253(v1478 * 0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]));
    ⵠΔ[144][v624.Δᐃⵠ] = f53(f253(v1478 * 0.42, true, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"]));
    ⵠΔ[722] = f53(function (p1141, p1142) {
      var v1487 = document.createElement("canvas");
      var v1488 = v1487.getContext("2d");
      v1487.width = p1141 * 149;
      v1487.height = p1141 * 356;
      v1488.save();
      v1488.translate(p1141 * 74.5, p1141 * 177.5);
      f83(v1488, p1141 * -57.5, p1141 * -161.5, p1141 * 100, p1141 * 323, p1141 * 10);
      v1488.restore();
      f84(v1488, p1142[0], p1142[1], p1141 * 4);
      v1488.save();
      v1488.translate(p1141 * 74.5, p1141 * 177.5);
      f83(v1488, p1141 * -57.5, p1141 * 50.5, p1141 * 100, p1141 * 105, p1141 * 10);
      v1488.restore();
      f84(v1488, p1142[6], p1142[1], p1141 * 4);
      v1488.beginPath();
      v1488.lineCap = "round";
      v1488.lineJoin = "round";
      v1488.moveTo(p1141 * 16, p1141 * 125);
      v1488.bezierCurveTo(p1141 * 74.5, p1141 * 125, p1141 * 118, p1141 * 125, p1141 * 118, p1141 * 125);
      v1488.closePath();
      f84(v1488, p1142[2], p1142[2], p1141 * 10);
      v1488.beginPath();
      v1488.lineCap = "round";
      v1488.lineJoin = "round";
      v1488.moveTo(p1141 * 16, p1141 * 120);
      v1488.bezierCurveTo(p1141 * 74.5, p1141 * 120, p1141 * 74.5, p1141 * 120, p1141 * 118, p1141 * 120);
      v1488.closePath();
      f84(v1488, p1142[3], p1142[3], p1141 * 10);
      v1488.beginPath();
      v1488.lineCap = "round";
      v1488.lineJoin = "round";
      v1488.moveTo(p1141 * 16, p1141 * 228);
      v1488.bezierCurveTo(p1141 * 75, p1141 * 228.5, p1141 * 118, p1141 * 228.5, p1141 * 118, p1141 * 229);
      v1488.closePath();
      f84(v1488, p1142[2], p1142[2], p1141 * 10);
      v1488.beginPath();
      v1488.lineCap = "round";
      v1488.lineJoin = "round";
      v1488.moveTo(p1141 * 16, p1141 * 224);
      v1488.bezierCurveTo(p1141 * 75, p1141 * 224, p1141 * 118, p1141 * 224, p1141 * 118, p1141 * 224);
      v1488.closePath();
      f84(v1488, p1142[3], p1142[3], p1141 * 10);
      v1488.save();
      v1488.translate(p1141 * 72, p1141 * 68.5);
      f83(v1488, p1141 * -41.5, p1141 * -36.5, p1141 * 73, p1141 * 73, p1141 * 13);
      v1488.restore();
      f84(v1488, p1142[4]);
      v1488.save();
      v1488.translate(p1141 * 72, p1141 * 175.5);
      f83(v1488, p1141 * -41.5, p1141 * -38.5, p1141 * 73, p1141 * 73, p1141 * 13);
      v1488.restore();
      f84(v1488, p1142[4]);
      v1488.save();
      v1488.translate(p1141 * 72, p1141 * 279.5);
      f83(v1488, p1141 * -41.5, p1141 * -40.5, p1141 * 73, p1141 * 73, p1141 * 13);
      v1488.restore();
      f84(v1488, p1142[4]);
      v1488.beginPath();
      v1488.lineCap = "round";
      v1488.lineJoin = "round";
      v1488.moveTo(p1141 * 16, p1141 * 338);
      v1488.bezierCurveTo(p1141 * 75, p1141 * 338, p1141 * 118, p1141 * 338, p1141 * 118, p1141 * 338);
      v1488.closePath();
      f84(v1488, p1142[2], p1142[2], p1141 * 10);
      v1488.beginPath();
      v1488.lineCap = "round";
      v1488.lineJoin = "round";
      v1488.moveTo(p1141 * 16, p1141 * 333);
      v1488.bezierCurveTo(p1141 * 75, p1141 * 333, p1141 * 118, p1141 * 333, p1141 * 118, p1141 * 333);
      v1488.closePath();
      f84(v1488, p1142[3], p1142[3], p1141 * 10);
      return v1487;
    }(v1478 * 1, ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"]));
    ⵠΔ[407] = [];
    ⵠΔ[407][v624.ᐃᐃᐃ] = f53(f179(v1478 * 0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]));
    ⵠΔ[407][v624.Δᐃⵠ] = f53(f179(v1478 * 0.5, vVVV1622, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"]));
    ⵠΔ[119] = [];
    ⵠΔ[119][v624.ᐃᐃᐃ] = f53(f180(v1478 * 0.5, vVVVVV163, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"]));
    ⵠΔ[119][v624.Δᐃⵠ] = f53(f180(v1478 * 0.5, true, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"]));
    ⵠΔ[411] = f53(function (p1143, p1144, p1145) {
      var v1489 = document.createElement("canvas");
      var v1490 = v1489.getContext("2d");
      v1489.width = p1143 * 118;
      v1489.height = p1143 * 129;
      v1490.save();
      v1490.translate(p1143 * 90, p1143 * 90);
      f83(v1490, p1143 * -86.5, p1143 * -86, p1143 * 110, p1143 * 110, p1143 * 15);
      v1490.restore();
      f84(v1490, p1145[0], p1145[1], 4);
      return v1489;
    }(v1478 * 0.8, 0, ["#5f6061", "#939393"]));
    ⵠΔ[412] = f120(1, [{
      f: f125,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#494949", "#5b5858", "#3d3b3b"], 1);
    ⵠΔ[198] = [];
    ⵠΔ[198][v624.ᐃᐃᐃ] = f53(f185(v1478 * 1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ⵠΔ[198][v624.Δᐃⵠ] = f53(f185(v1478 * 1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ⵠΔ[913] = [];
    ⵠΔ[913][v624.ᐃᐃᐃ] = f53(f195(v1478 * 1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ⵠΔ[913][v624.Δᐃⵠ] = f53(f195(v1478 * 1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ⵠΔ[18] = [];
    ⵠΔ[18][v624.ᐃᐃᐃ] = f53(f88(3, f191(v1478 * 0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"])));
    ⵠΔ[18][v624.Δᐃⵠ] = f53(f88(3, f191(v1478 * 0.7, vVVVV162, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"])));
    ⵠΔ[12] = [];
    ⵠΔ[12][v624.ᐃᐃᐃ] = f53(f88(3, f187(v1478 * 0.7, vVVV163, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"])));
    ⵠΔ[12][v624.Δᐃⵠ] = f53(f88(3, f187(v1478 * 0.7, vVVVVV16, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"])));
    ⵠΔ[13] = [];
    ⵠΔ[13][v624.ᐃᐃᐃ] = f53(f88(3, f193(v1478 * 0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"])));
    ⵠΔ[13][v624.Δᐃⵠ] = f53(f88(3, f193(v1478 * 0.65, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"])));
    ⵠΔ[14] = [];
    ⵠΔ[14][v624.ᐃᐃᐃ] = f53(f88(3, f189(v1478 * 0.67, true, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"])));
    ⵠΔ[14][v624.Δᐃⵠ] = f53(f88(3, f189(v1478 * 0.67, vV16, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"])));
    ⵠΔ[15] = [];
    ⵠΔ[15][v624.ᐃᐃᐃ] = f53(f88(3, f192(v1478 * 0.67, vVVVV1622, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"])));
    ⵠΔ[15][v624.Δᐃⵠ] = f53(f88(3, f192(v1478 * 0.67, v16, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"])));
    ⵠΔ[33] = [];
    ⵠΔ[33][v624.ᐃᐃᐃ] = f53(f88(3, f188(v1478 * 0.67, vVVV163, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"])));
    ⵠΔ[33][v624.Δᐃⵠ] = f53(f88(3, f188(v1478 * 0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"])));
    ⵠΔ[16] = [];
    ⵠΔ[16][v624.ᐃᐃᐃ] = f53(f88(3, f186(v1478 * 1, true, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"])));
    ⵠΔ[16][v624.Δᐃⵠ] = f53(f88(3, f186(v1478 * 1, vVVVV162, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"])));
    ⵠΔ[35] = [];
    ⵠΔ[35][v624.ᐃᐃᐃ] = f53(f88(3, f204(v1478 * 1, vVVVVV163, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ⵠΔ[35][v624.Δᐃⵠ] = f53(f88(3, f204(v1478 * 1, true, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"])));
    ⵠΔ[55] = [];
    ⵠΔ[55][v624.ᐃᐃᐃ] = f53(f88(3, f262(v1478 * 0.5, vVVV162, ["#0d1b1c", "#939393", "#5f6061"])));
    ⵠΔ[55][v624.Δᐃⵠ] = f53(f88(3, f262(v1478 * 0.5, vVV16, ["#030d14", "#485e66", "#1f343f"])));
    ⵠΔ[45] = [];
    ⵠΔ[45][v624.ᐃᐃᐃ] = f53(f88(3, f241(v1478 * 1, true, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"])));
    ⵠΔ[45][v624.Δᐃⵠ] = f53(f88(3, f241(v1478 * 1, true, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"])));
    ⵠΔ[36] = [];
    ⵠΔ[36][v624.ᐃᐃᐃ] = f53(f88(3, f204(v1478 * 1, true, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ⵠΔ[36][v624.Δᐃⵠ] = f53(f88(3, f204(v1478 * 1, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"])));
    ⵠΔ[37] = [];
    ⵠΔ[37][v624.ᐃᐃᐃ] = f53(f88(3, f204(v1478 * 1, vV162, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ⵠΔ[37][v624.Δᐃⵠ] = f53(f88(3, f204(v1478 * 1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ⵠΔ[38] = [];
    ⵠΔ[38][v624.ᐃᐃᐃ] = f53(f88(3, f204(v1478 * 1, vVVVVVV16, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ⵠΔ[38][v624.Δᐃⵠ] = f53(f88(3, f204(v1478 * 1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ⵠΔ[148] = [];
    ⵠΔ[148][v624.ᐃᐃᐃ] = f53(f233(v1478 * 0.55, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]));
    ⵠΔ[148][v624.Δᐃⵠ] = f53(f233(v1478 * 0.55, 0, ["#080707", "#133d3c", "#2b6664", "#1b2529"]));
    ⵠΔ[536] = [];
    ⵠΔ[536].push(f53(f233(v1478 * 0.8, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])));
    ⵠΔ[536].push(f53(f233(v1478 * 0.8, 0, ["#141414", "#9f7d17", "#dab33c", "#474545"])));
    ⵠΔ[536].push(f53(f233(v1478 * 0.8, 0, ["#141414", "#73590d", "#a88a2c", "#2a2828"])));
    ⵠΔ[538] = [];
    ⵠΔ[538].push(ⵠΔ[536][0]);
    ⵠΔ[538].push(ⵠΔ[536][0]);
    ⵠΔ[538].push(ⵠΔ[536][0]);
    ⵠΔ[158] = [];
    ⵠΔ[158][v624.ᐃᐃᐃ] = f53(f254(v1478 * 0.06, vVVVVV142, ["#141414", "#c4a23a", "#816511"]));
    ⵠΔ[158][v624.Δᐃⵠ] = f53(f254(v1478 * 0.06, vVV143, ["#030d14", "#2b6664", "#133d3c"]));
    ⵠΔ[535] = [];
    ⵠΔ[535].push(f53(f254(v1478 * 0.08, false, ["#141414", "#c4a23a", "#816511"])));
    ⵠΔ[535].push(f53(f254(v1478 * 0.08, false, ["#141414", "#e2bd4e", "#a38018"])));
    ⵠΔ[535].push(f53(f254(v1478 * 0.08, false, ["#141414", "#b0902e", "#634d09"])));
    ⵠΔ[149] = f120(1.5, [{
      f: f249,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ⵠΔ[526] = [];
    ⵠΔ[526][v624.ᐃᐃᐃ] = f53(f250(v1478 * 0.8, 0, ["#347f93", "#54a4ba"]));
    ⵠΔ[526][v624.Δᐃⵠ] = f53(f250(v1478 * 0.8, 0, ["#98ede3", "#94f2e7"]));
    ⵠΔ[527] = [];
    ⵠΔ[527][v624.ᐃᐃᐃ] = f53(f240(v1478 * 0.8, 0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]));
    ⵠΔ[527][v624.Δᐃⵠ] = f53(f240(v1478 * 0.8, 0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"]));
    ⵠΔ[528] = [];
    ⵠΔ[528][v624.ᐃᐃᐃ] = f53(f243(v1478 * 0.8, 0, ["#a9e4ed", "#86d4e0"]));
    ⵠΔ[528][v624.Δᐃⵠ] = f53(f243(v1478 * 0.8, 0, ["#83ddd4", "#485e66"]));
    ⵠΔ[151] = [];
    ⵠΔ[151][v624.ᐃᐃᐃ] = f53(f244(v1478 * 0.8, true, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"]));
    ⵠΔ[151][v624.Δᐃⵠ] = f53(f244(v1478 * 0.8, vVVV163, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"]));
    ⵠΔ[1192] = [];
    ⵠΔ[1192][v624.ᐃᐃᐃ] = Δⵠ.ᐃΔⲆⲆⵠᐃⲆ;
    ⵠΔ[1192][v624.Δᐃⵠ] = Δⵠ.ᐃᐃᐃⵠⲆⵠⵠ;
    ⵠΔ[1193] = [];
    ⵠΔ[1193][v624.ᐃᐃᐃ] = Δⵠ.ⵠⲆΔᐃⵠᐃⵠ;
    ⵠΔ[1193][v624.Δᐃⵠ] = Δⵠ.ⲆⵠⵠᐃΔΔⵠ;
    ⵠΔ[1194] = [];
    ⵠΔ[1194][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔⵠᐃΔⲆ;
    ⵠΔ[1194][v624.Δᐃⵠ] = Δⵠ.ⵠⲆⲆᐃΔⵠⲆ;
    ⵠΔ[152] = [];
    ⵠΔ[152][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠΔΔⵠⵠⵠ;
    ⵠΔ[152][v624.Δᐃⵠ] = Δⵠ.ⵠⵠⵠⲆⵠⵠⵠ;
    ⵠΔ[1198] = [];
    ⵠΔ[1198][v624.ᐃᐃᐃ] = Δⵠ.ΔⵠΔⲆⲆⲆⲆ;
    ⵠΔ[1198][v624.Δᐃⵠ] = Δⵠ.ⲆⲆΔΔΔⵠⲆ;
    ⵠΔ[153] = [];
    ⵠΔ[153][v624.ᐃᐃᐃ] = Δⵠ.ΔᐃⵠΔⵠΔΔ;
    ⵠΔ[153][v624.Δᐃⵠ] = Δⵠ.ΔᐃᐃᐃⲆⲆⵠ;
    ⵠΔ[1202] = [];
    ⵠΔ[1202][v624.ᐃᐃᐃ] = Δⵠ.ⵠΔⲆⲆⲆⲆᐃ;
    ⵠΔ[1202][v624.Δᐃⵠ] = Δⵠ.ΔᐃⲆⲆⵠⵠⵠ;
    ⵠΔ[154] = [];
    ⵠΔ[154][v624.ᐃᐃᐃ] = Δⵠ.ⲆΔᐃᐃᐃᐃⵠ;
    ⵠΔ[154][v624.Δᐃⵠ] = Δⵠ.ΔΔΔΔΔⵠⲆ;
    ⵠΔ[1206] = [];
    ⵠΔ[1206][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⲆΔⵠⲆᐃ;
    ⵠΔ[1206][v624.Δᐃⵠ] = Δⵠ.ⲆᐃⵠⵠⵠⲆᐃ;
    ⵠΔ[155] = [];
    ⵠΔ[155][v624.ᐃᐃᐃ] = Δⵠ.ΔΔᐃᐃⵠⵠΔ;
    ⵠΔ[155][v624.Δᐃⵠ] = Δⵠ.ⵠᐃΔΔⵠⵠᐃ;
    ⵠΔ[1210] = [];
    ⵠΔ[1210][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠΔⲆᐃΔⲆ;
    ⵠΔ[1210][v624.Δᐃⵠ] = Δⵠ.ᐃΔᐃΔⵠⵠΔ;
    ⵠΔ[156] = [];
    ⵠΔ[156][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠⲆᐃᐃⲆⵠ;
    ⵠΔ[156][v624.Δᐃⵠ] = Δⵠ.ᐃⲆΔΔⵠΔⲆ;
    ⵠΔ[1214] = [];
    ⵠΔ[1214][v624.ᐃᐃᐃ] = Δⵠ.ⲆⲆⵠⲆΔᐃᐃ;
    ⵠΔ[1214][v624.Δᐃⵠ] = Δⵠ.ΔⲆⲆᐃⵠΔᐃ;
    ⵠΔ[157] = [];
    ⵠΔ[157][v624.ᐃᐃᐃ] = Δⵠ.ⵠⵠⲆⵠⵠⵠⵠ;
    ⵠΔ[157][v624.Δᐃⵠ] = Δⵠ.Ⲇⵠᐃᐃⵠⵠᐃ;
    ⵠΔ[245] = [];
    ⵠΔ[245][v624.ᐃᐃᐃ] = Δⵠ.ᐃⵠᐃΔᐃᐃⲆ;
    ⵠΔ[245][v624.Δᐃⵠ] = Δⵠ.ᐃᐃΔᐃⲆⵠⲆ;
    ⵠΔ[246] = Δⵠ.ⵠⵠⲆΔⲆᐃΔ;
    ⵠΔ[159] = [];
    ⵠΔ[159][v624.ᐃᐃᐃ] = f53(f252(v1478 * 0.75, vVVV16, ["#0d1b1c", "#4c3a15", "#634828", "#564021"]));
    ⵠΔ[159][v624.Δᐃⵠ] = f53(f252(v1478 * 0.75, vVV162, ["#030d14", "#0d2e33", "#184747", "#123b3f"]));
    ⵠΔ[558] = f53(f238(v1478 * 0.3, ["#092813", "#1f773d"], 0));
    ⵠΔ[559] = f53(f238(v1478 * 0.3, ["#092813", "#1f773d"], 1));
    ⵠΔ[885] = f53(function (p1146, p1147) {
      var v1491 = document.createElement("canvas");
      var v1492 = v1491.getContext("2d");
      v1491.width = p1146 * 60;
      v1491.height = p1146 * 60;
      v1492.translate(p1146 * -25, p1146 * -25);
      v1492.translate(0, p1146 * 5);
      v1492.beginPath();
      v1492.lineCap = "round";
      v1492.lineJoin = "round";
      v1492.moveTo(p1146 * 24, p1146 * 50);
      v1492.bezierCurveTo(p1146 * 32.5, p1146 * 54.5, p1146 * 32.5, p1146 * 54.5, p1146 * 41, p1146 * 59);
      v1492.bezierCurveTo(p1146 * 57, p1146 * 47, p1146 * 57, p1146 * 47, p1146 * 73, p1146 * 35);
      v1492.bezierCurveTo(p1146 * 57, p1146 * 53, p1146 * 57, p1146 * 53, p1146 * 41, p1146 * 71);
      v1492.closePath();
      f84(v1492, p1147[0]);
      v1492.translate(0, p1146 * -5);
      v1492.beginPath();
      v1492.lineCap = "round";
      v1492.lineJoin = "round";
      v1492.moveTo(p1146 * 24, p1146 * 50);
      v1492.bezierCurveTo(p1146 * 32.5, p1146 * 54.5, p1146 * 32.5, p1146 * 54.5, p1146 * 41, p1146 * 59);
      v1492.bezierCurveTo(p1146 * 57, p1146 * 47, p1146 * 57, p1146 * 47, p1146 * 73, p1146 * 35);
      v1492.bezierCurveTo(p1146 * 57, p1146 * 53, p1146 * 57, p1146 * 53, p1146 * 41, p1146 * 71);
      v1492.closePath();
      f84(v1492, p1147[1]);
      return v1491;
    }(v1478 * 0.6, ["#092813", "#1f773d"]));
    ⵠΔ[556] = [];
    ⵠΔ[556].push(f53(f239(v1478 * 0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0)));
    ⵠΔ[556].push(f53(f239(v1478 * 0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0)));
    ⵠΔ[556].push(f53(f239(v1478 * 0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0)));
    ⵠΔ[560] = [];
    var vF53 = f53(f239(v1478 * 0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
    ⵠΔ[560].push(vF53);
    ⵠΔ[560].push(vF53);
    ⵠΔ[560].push(vF53);
    ⵠΔ[557] = [];
    ⵠΔ[557].push(f53(f239(v1478 * 0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1)));
    ⵠΔ[557].push(f53(f239(v1478 * 0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
    ⵠΔ[557].push(f53(f239(v1478 * 0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1)));
    ⵠΔ[681] = f53(function (p1148, p1149) {
      var v1493 = document.createElement("canvas");
      var v1494 = v1493.getContext("2d");
      var v1495 = p1148 * 170;
      var v1496 = p1148 * 172;
      var v1497 = v1495 / 2;
      var v1498 = v1496 / 2;
      v1493.width = v1495;
      v1493.height = v1496;
      v1494.translate(v1497, v1498);
      v1494.save();
      for (var v1499 = 0; v1499 < 10; v1499++) {
        v1494.rotate(Math.PI / 5);
        v1494.save();
        v1494.translate(p1148 * 65, 0);
        f87(v1494, 3, p1148 * 18, p1148 * 4);
        f84(v1494, p1149[0]);
        v1494.restore();
      }
      v1494.restore();
      f89(v1494, 0, 0, p1148 * 40);
      f84(v1494, undefined, p1149[0], p1148 * 6);
      f89(v1494, 0, 0, p1148 * 20);
      f84(v1494, p1149[0]);
      return v1493;
    }(v1478 * 0.3, ["#FFFFFF"]));
    ⵠΔ[794] = f53(function (p1150, p1151) {
      var v1500 = document.createElement("canvas");
      var v1501 = v1500.getContext("2d");
      var v1502 = p1150 * 130;
      var v1503 = p1150 * 142;
      var v1504 = v1502 / 2;
      var v1505 = v1503 / 2;
      v1500.width = v1502;
      v1500.height = v1503;
      f89(v1501, v1504, v1505, p1150 * 40);
      f84(v1501, undefined, p1151[0], p1150 * 7);
      f89(v1501, v1504, v1505, p1150 * 30);
      f84(v1501, vVVVVUndefined20, p1151[0], p1150 * 7);
      f89(v1501, v1504, v1505, p1150 * 20);
      f84(v1501, p1151[0]);
      return v1500;
    }(v1478 * 0.3, ["#FFFFFF"]));
    ⵠΔ[562] = f53(f238(v1478 * 0.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0));
    ⵠΔ[667] = f53(f88(Math.PI / 5, function (p1152, p1153) {
      var v1506 = document.createElement("canvas");
      var v1507 = v1506.getContext("2d");
      v1506.width = p1152 * 316;
      v1506.height = p1152 * 365;
      v1507.save();
      v1507.translate(p1152 * 156.07142639160156, p1152 * 51.81248474121094);
      v1507.rotate(0);
      f83(v1507, p1152 * -21.5, p1152 * -34, p1152 * 43, p1152 * 68, p1152 * 8);
      v1507.restore();
      f84(v1507, p1153[0], p1153[0], p1152 * 15);
      v1507.beginPath();
      v1507.lineCap = "round";
      v1507.lineJoin = "round";
      v1507.moveTo(p1152 * 126.57142639160156, p1152 * 67.38392639160156);
      v1507.bezierCurveTo(p1152 * 126.57142639160156, p1152 * 57.38392639160156, p1152 * 132.57142639160156, p1152 * 54.38392639160156, p1152 * 140.57142639160156, p1152 * 54.38392639160156);
      v1507.bezierCurveTo(p1152 * 177.57142639160156, p1152 * 55.38392639160156, p1152 * 158.07142639160156, p1152 * 54.38392639160156, p1152 * 175.57142639160156, p1152 * 54.38392639160156);
      v1507.bezierCurveTo(p1152 * 185.57142639160156, p1152 * 56.38392639160156, p1152 * 185.57142639160156, p1152 * 57.38392639160156, p1152 * 184.57142639160156, p1152 * 66.38392639160156);
      v1507.bezierCurveTo(p1152 * 184.57142639160156, p1152 * 78.38392639160156, p1152 * 184.57142639160156, p1152 * 89.38392639160156, p1152 * 184.57142639160156, p1152 * 90.38392639160156);
      v1507.bezierCurveTo(p1152 * 177.57142639160156, p1152 * 107.38392639160156, p1152 * 180.57142639160156, p1152 * 112.38392639160156, p1152 * 189.57142639160156, p1152 * 116.38392639160156);
      v1507.bezierCurveTo(p1152 * 212.57142639160156, p1152 * 127.38392639160156, p1152 * 212.57142639160156, p1152 * 132.38392639160156, p1152 * 211.57142639160156, p1152 * 150.38392639160156);
      v1507.bezierCurveTo(p1152 * 211.57142639160156, p1152 * 227.59821128845215, p1152 * 211.57142639160156, p1152 * 227.59821128845215, p1152 * 211.57142639160156, p1152 * 304.81249618530273);
      v1507.bezierCurveTo(p1152 * 212.57142639160156, p1152 * 328.81249618530273, p1152 * 209.57142639160156, p1152 * 330.81249618530273, p1152 * 188.57142639160156, p1152 * 333.81249618530273);
      v1507.bezierCurveTo(p1152 * 155.07142639160156, p1152 * 333.31249618530273, p1152 * 155.07142639160156, p1152 * 333.31249618530273, p1152 * 121.57142639160156, p1152 * 332.81249618530273);
      v1507.bezierCurveTo(p1152 * 104.57142639160156, p1152 * 327.81249618530273, p1152 * 105.57142639160156, p1152 * 328.81249618530273, p1152 * 104.57142639160156, p1152 * 312.81249618530273);
      v1507.bezierCurveTo(p1152 * 104.57142639160156, p1152 * 228.16963958740234, p1152 * 104.57142639160156, p1152 * 228.16963958740234, p1152 * 104.57142639160156, p1152 * 143.52678298950195);
      v1507.bezierCurveTo(p1152 * 106.57142639160156, p1152 * 124.52678298950195, p1152 * 110.57142639160156, p1152 * 123.52678298950195, p1152 * 123.57142639160156, p1152 * 116.52678298950195);
      v1507.bezierCurveTo(p1152 * 136.57142639160156, p1152 * 110.52678298950195, p1152 * 130.57142639160156, p1152 * 106.52678298950195, p1152 * 126.57142639160156, p1152 * 98.52678298950195);
      v1507.closePath();
      f84(v1507, p1153[0], p1153[0], p1152 * 15);
      v1507.beginPath();
      v1507.lineCap = "round";
      v1507.lineJoin = "round";
      v1507.moveTo(p1152 * 125.57142639160156, p1152 * 156.66963958740234);
      v1507.bezierCurveTo(p1152 * 125.57142639160156, p1152 * 182.66963958740234, p1152 * 125.57142639160156, p1152 * 182.66963958740234, p1152 * 125.57142639160156, p1152 * 208.66963958740234);
      v1507.closePath();
      f84(v1507, p1153[0], p1153[0], p1152 * 15);
      return v1506;
    }(v1478 * 0.2, ["#FFFFFF"])));
    ⵠΔ[43] = [];
    ⵠΔ[43][v624.ᐃᐃᐃ] = f53(f228(v1478 * 0.85, 0, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]));
    ⵠΔ[43][v624.Δᐃⵠ] = f53(f228(v1478 * 0.85, 0, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"]));
    ⵠΔ[561] = [];
    ⵠΔ[561].push(f53(f239(v1478 * 0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1)));
    ⵠΔ[561].push(f53(f239(v1478 * 0.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
    ⵠΔ[561].push(f53(f239(v1478 * 0.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
    ⵠΔ[83] = [];
    ⵠΔ[83][v624.ᐃᐃᐃ] = f53(f272(v1478 * 0.37, 0, ["#2a2938", "#242330", "#313041"]));
    ⵠΔ[83][v624.Δᐃⵠ] = f53(f272(v1478 * 0.37, 0, ["#1b1e30", "#161921", "#252f3e"]));
    ⵠΔ[85] = [];
    ⵠΔ[85][v624.ᐃᐃᐃ] = f53(f260(v1478 * 0.17, 0, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"]));
    ⵠΔ[85][v624.Δᐃⵠ] = f53(f260(v1478 * 0.17, 0, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
    ⵠΔ[86] = [];
    ⵠΔ[86][v624.ᐃᐃᐃ] = f53(f264(v1478 * 0.55, true, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1));
    ⵠΔ[86][v624.Δᐃⵠ] = f53(f264(v1478 * 0.55, vVVVVVV16, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1));
    ⵠΔ[84] = [];
    ⵠΔ[84][v624.ᐃᐃᐃ] = f53(f264(v1478 * 0.55, true, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0));
    ⵠΔ[84][v624.Δᐃⵠ] = f53(f264(v1478 * 0.55, true, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0));
    ⵠΔ[77] = [];
    ⵠΔ[77][v624.ᐃᐃᐃ] = f53(f284(v1478 * 0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]));
    ⵠΔ[77][v624.Δᐃⵠ] = f53(f284(v1478 * 0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"]));
    ⵠΔ[78] = [];
    ⵠΔ[78][v624.ᐃᐃᐃ] = f53(f284(v1478 * 0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]));
    ⵠΔ[78][v624.Δᐃⵠ] = f53(f284(v1478 * 0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"]));
    ⵠΔ[79] = [];
    ⵠΔ[79][v624.ᐃᐃᐃ] = f53(f284(v1478 * 0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]));
    ⵠΔ[79][v624.Δᐃⵠ] = f53(f284(v1478 * 0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"]));
    ⵠΔ[61] = [];
    ⵠΔ[61][v624.ᐃᐃᐃ] = f53(f183(v1478 * 0.24, true, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"]));
    ⵠΔ[61][v624.Δᐃⵠ] = f53(f183(v1478 * 0.24, vV16, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"]));
    ⵠΔ[59] = [];
    ⵠΔ[59][v624.ᐃᐃᐃ] = f53(f220(v1478 * 0.32, 0, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]));
    ⵠΔ[59][v624.Δᐃⵠ] = f53(f220(v1478 * 0.32, 0, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"]));
    ⵠΔ[62] = [];
    ⵠΔ[62][v624.ᐃᐃᐃ] = f53(f88(3, f248(v1478 * 0.9, vVVVV16, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
    ⵠΔ[62][v624.Δᐃⵠ] = f53(f88(3, f248(v1478 * 0.9, vVV16, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"])));
    ⵠΔ[750] = [];
    ⵠΔ[750][v624.ᐃᐃᐃ] = f53(f88(3, f248(v1478 * 1, vVVV163, [vVVVVUndefined21, undefined, vVVVUndefined2022, "#c8efef", "#c8efef"])));
    ⵠΔ[750][v624.Δᐃⵠ] = f53(f88(3, f248(v1478 * 1, true, [undefined, vVVVUndefined212, vVVVUndefined20, "#87d2e6", "#87d2e6"])));
    ⵠΔ[755] = [];
    ⵠΔ[755].push(f53(f257(v1478 * 0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0)));
    ⵠΔ[755].push(f53(f257(v1478 * 0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1)));
    ⵠΔ[755].push(f53(f257(v1478 * 0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1)));
    ⵠΔ[795] = [];
    ⵠΔ[795].push(f53(f258(v1478 * 0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0)));
    ⵠΔ[795].push(f53(f258(v1478 * 0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ⵠΔ[795].push(f53(f258(v1478 * 0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ⵠΔ[782] = [];
    ⵠΔ[782].push(f53(f132(v1478 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1)));
    ⵠΔ[782].push(f53(f132(v1478 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1)));
    ⵠΔ[782].push(f53(f132(v1478 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1)));
    ⵠΔ[783] = [];
    ⵠΔ[783].push(f53(f132(v1478 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0)));
    ⵠΔ[783].push(f53(f132(v1478 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0)));
    ⵠΔ[783].push(f53(f132(v1478 * 0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0)));
    ⵠΔ[46] = [];
    ⵠΔ[46][v624.ᐃᐃᐃ] = f53(f88(3, f281(v1478 * 0.7, true, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"])));
    ⵠΔ[46][v624.Δᐃⵠ] = f53(f88(3, f281(v1478 * 0.7, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"])));
    ⵠΔ[50] = [];
    ⵠΔ[50][v624.ᐃᐃᐃ] = f53(f88(3, f281(v1478 * 0.7, vVVVVV16, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"])));
    ⵠΔ[50][v624.Δᐃⵠ] = f53(f88(3, f281(v1478 * 0.7, true, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"])));
    ⵠΔ[51] = [];
    ⵠΔ[51][v624.ᐃᐃᐃ] = f53(f88(3, f281(v1478 * 0.7, vVV16, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"])));
    ⵠΔ[51][v624.Δᐃⵠ] = f53(f88(3, f281(v1478 * 0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"])));
    ⵠΔ[52] = [];
    ⵠΔ[52][v624.ᐃᐃᐃ] = f53(f88(3, f281(v1478 * 0.7, true, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"])));
    ⵠΔ[52][v624.Δᐃⵠ] = f53(f88(3, f281(v1478 * 0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"])));
    ⵠΔ[592] = [];
    ⵠΔ[592].push(f53(f247(v1478 * 0.7, ["#3b330d", "#b5a118", "#c8ac16"])));
    ⵠΔ[592].push(f53(f247(v1478 * 0.7, ["#524712", "#c7b11c", "#d9ba18"])));
    ⵠΔ[592].push(f53(f247(v1478 * 0.7, ["#2a2409", "#9f8e14", "#ad9511"])));
    ⵠΔ[326] = f53(function (p1154, p1155) {
      var v1508 = document.createElement("canvas");
      var v1509 = v1508.getContext("2d");
      v1508.width = p1154 * 188;
      v1508.height = p1154 * 190;
      v1509.beginPath();
      v1509.lineCap = "round";
      v1509.lineJoin = "round";
      v1509.moveTo(p1154 * 33.00567626953125, p1154 * 95.44320678710938);
      v1509.bezierCurveTo(p1154 * 42.00567626953125, p1154 * 87.44320678710938, p1154 * 48.00567626953125, p1154 * 51.443206787109375, p1154 * 74.00567626953125, p1154 * 47.443206787109375);
      v1509.bezierCurveTo(p1154 * 100.00567626953125, p1154 * 42.443206787109375, p1154 * 118.00567626953125, p1154 * 49.443206787109375, p1154 * 131.00567626953125, p1154 * 55.443206787109375);
      v1509.bezierCurveTo(p1154 * 140.00567626953125, p1154 * 70.44320678710938, p1154 * 145.00567626953125, p1154 * 87.44320678710938, p1154 * 152.00567626953125, p1154 * 94.44320678710938);
      v1509.bezierCurveTo(p1154 * 149.00567626953125, p1154 * 99.44320678710938, p1154 * 147.00567626953125, p1154 * 98.44320678710938, p1154 * 141.00567626953125, p1154 * 101.44320678710938);
      v1509.bezierCurveTo(p1154 * 147.00567626953125, p1154 * 108.44320678710938, p1154 * 147.00567626953125, p1154 * 111.44320678710938, p1154 * 147.00567626953125, p1154 * 112.44320678710938);
      v1509.bezierCurveTo(p1154 * 143.00567626953125, p1154 * 112.44320678710938, p1154 * 141.00567626953125, p1154 * 112.44320678710938, p1154 * 137.00567626953125, p1154 * 111.44320678710938);
      v1509.bezierCurveTo(p1154 * 138.00567626953125, p1154 * 117.44320678710938, p1154 * 138.00567626953125, p1154 * 120.44320678710938, p1154 * 138.00567626953125, p1154 * 124.44320678710938);
      v1509.bezierCurveTo(p1154 * 125.00567626953125, p1154 * 107.44320678710938, p1154 * 121.00567626953125, p1154 * 124.44320678710938, p1154 * 110.00567626953125, p1154 * 141.44320678710938);
      v1509.bezierCurveTo(p1154 * 102.00567626953125, p1154 * 158.44320678710938, p1154 * 89.00567626953125, p1154 * 158.44320678710938, p1154 * 80.00567626953125, p1154 * 144.44320678710938);
      v1509.bezierCurveTo(p1154 * 61.00567626953125, p1154 * 111.44320678710938, p1154 * 56.00567626953125, p1154 * 117.44320678710938, p1154 * 48.00567626953125, p1154 * 120.44320678710938);
      v1509.bezierCurveTo(p1154 * 46.00567626953125, p1154 * 118.44320678710938, p1154 * 47.00567626953125, p1154 * 112.44320678710938, p1154 * 48.00567626953125, p1154 * 107.44320678710938);
      v1509.bezierCurveTo(p1154 * 43.00567626953125, p1154 * 111.44320678710938, p1154 * 40.00567626953125, p1154 * 111.44320678710938, p1154 * 37.00567626953125, p1154 * 110.44320678710938);
      v1509.bezierCurveTo(p1154 * 39.50567626953125, p1154 * 104.94320678710938, p1154 * 39.50567626953125, p1154 * 104.94320678710938, p1154 * 42.00567626953125, p1154 * 99.44320678710938);
      v1509.bezierCurveTo(p1154 * 33.00567626953125, p1154 * 99.44320678710938, p1154 * 33.00567626953125, p1154 * 98.44320678710938, p1154 * 33.00567626953125, p1154 * 96.44320678710938);
      v1509.closePath();
      f84(v1509, p1155[0], p1155[0], p1154 * 4);
      v1509.beginPath();
      v1509.lineCap = "round";
      v1509.lineJoin = "round";
      v1509.moveTo(p1154 * 51.00567626953125, p1154 * 72.53409576416016);
      v1509.bezierCurveTo(p1154 * 48.00567626953125, p1154 * 56.534095764160156, p1154 * 48.00567626953125, p1154 * 49.534095764160156, p1154 * 54.00567626953125, p1154 * 35.534095764160156);
      v1509.bezierCurveTo(p1154 * 58.00567626953125, p1154 * 26.534095764160156, p1154 * 65.00567626953125, p1154 * 27.534095764160156, p1154 * 73.00567626953125, p1154 * 40.534095764160156);
      v1509.bezierCurveTo(p1154 * 81.00567626953125, p1154 * 49.534095764160156, p1154 * 82.00567626953125, p1154 * 50.534095764160156, p1154 * 83.00567626953125, p1154 * 51.534095764160156);
      v1509.bezierCurveTo(p1154 * 77.00567626953125, p1154 * 71.53409576416016, p1154 * 64.00567626953125, p1154 * 75.53409576416016, p1154 * 51.00567626953125, p1154 * 72.53409576416016);
      v1509.closePath();
      f84(v1509, p1155[0], p1155[0], p1154 * 2);
      v1509.beginPath();
      v1509.lineCap = "round";
      v1509.lineJoin = "round";
      v1509.moveTo(p1154 * 105.00567626953125, p1154 * 50.53410339355469);
      v1509.bezierCurveTo(p1154 * 112.00567626953125, p1154 * 48.53410339355469, p1154 * 125.00567626953125, p1154 * 21.534103393554688, p1154 * 132.00567626953125, p1154 * 33.53410339355469);
      v1509.bezierCurveTo(p1154 * 138.00567626953125, p1154 * 42.53410339355469, p1154 * 140.00567626953125, p1154 * 64.53410339355469, p1154 * 136.00567626953125, p1154 * 75.53410339355469);
      v1509.closePath();
      f84(v1509, p1155[0], p1155[0], p1154 * 2);
      return v1508;
    }(v1478 * 1.1, ["#BB0000"]));
    ⵠΔ[333] = f53(f88(Math.PI, function (p1156, p1157) {
      var v1510 = document.createElement("canvas");
      var v1511 = v1510.getContext("2d");
      v1510.width = p1156 * 238;
      v1510.height = p1156 * 230;
      v1511.translate(p1156 * -93, p1156 * -110);
      f89(v1511, p1156 * 213.5, p1156 * 256.75, p1156 * 75);
      f84(v1511, p1157);
      f89(v1511, p1156 * 213.5, p1156 * 175.75, p1156 * 25);
      f84(v1511, p1157);
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 156.5, p1156 * 137.75);
      v1511.bezierCurveTo(p1156 * 170.5, p1156 * 173.75, p1156 * 195.5, p1156 * 177.75, p1156 * 209.5, p1156 * 177.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 217.5, p1156 * 178.75);
      v1511.bezierCurveTo(p1156 * 251.5, p1156 * 177.75, p1156 * 263.5, p1156 * 153.75, p1156 * 270.5, p1156 * 140.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 130.5, p1156 * 124.75);
      v1511.bezierCurveTo(p1156 * 153.5, p1156 * 185.75, p1156 * 198.5, p1156 * 185.75, p1156 * 213.5, p1156 * 185.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 214.5, p1156 * 183.75);
      v1511.bezierCurveTo(p1156 * 265.5, p1156 * 192.75, p1156 * 293.5, p1156 * 141.75, p1156 * 297.5, p1156 * 124.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 107.5, p1156 * 213.75);
      v1511.bezierCurveTo(p1156 * 151.5, p1156 * 190.75, p1156 * 198.5, p1156 * 184.75, p1156 * 210.5, p1156 * 184.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 212.5, p1156 * 187.75);
      v1511.bezierCurveTo(p1156 * 258.5, p1156 * 182.75, p1156 * 286.5, p1156 * 194.75, p1156 * 314.5, p1156 * 206.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 102.5, p1156 * 258.75);
      v1511.bezierCurveTo(p1156 * 142.5, p1156 * 200.75, p1156 * 193.5, p1156 * 194.75, p1156 * 211.5, p1156 * 185.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 214.5, p1156 * 192.75);
      v1511.bezierCurveTo(p1156 * 276.5, p1156 * 194.75, p1156 * 306.5, p1156 * 233.75, p1156 * 316.5, p1156 * 246.75);
      v1511.lineWidth = p1156 * 17;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 219.5, p1156 * 158.75);
      v1511.bezierCurveTo(p1156 * 226.5, p1156 * 159.75, p1156 * 227.5, p1156 * 147.75, p1156 * 219.5, p1156 * 145.75);
      v1511.closePath();
      v1511.lineWidth = p1156 * 10;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      v1511.beginPath();
      v1511.lineCap = "round";
      v1511.lineJoin = "round";
      v1511.moveTo(p1156 * 210.5, p1156 * 160.75);
      v1511.bezierCurveTo(p1156 * 203.5, p1156 * 159.75, p1156 * 199.5, p1156 * 146.75, p1156 * 210.5, p1156 * 145.75);
      v1511.closePath();
      v1511.lineWidth = p1156 * 10;
      v1511.strokeStyle = p1157;
      v1511.stroke();
      return v1510;
    }(v1478 * 0.9, "#BB0000")));
    ⵠΔ[23] = [];
    ⵠΔ[23][v624.ᐃᐃᐃ] = f53(f231(v1478 * 0.55, true, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]));
    ⵠΔ[23][v624.Δᐃⵠ] = f53(f231(v1478 * 0.55, vVVVV163, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"]));
    ⵠΔ[58] = [];
    ⵠΔ[58][v624.ᐃᐃᐃ] = f53(f226(v1478 * 0.55, true, ["#252525", "#73583e", "#573f29", "#7d6144"]));
    ⵠΔ[58][v624.Δᐃⵠ] = f53(f226(v1478 * 0.55, vVV1622, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
    ⵠΔ[25] = [];
    ⵠΔ[25][v624.ᐃᐃᐃ] = f53(f230(v1478 * 0.6, vVV162, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]));
    ⵠΔ[25][v624.Δᐃⵠ] = f53(f230(v1478 * 0.6, vVVVVV1622, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"]));
    ⵠΔ[26] = [];
    ⵠΔ[26][v624.ᐃᐃᐃ] = f53(f232(v1478 * 0.58, 0, ["#dbce71", "#b29c32", "#c4bc51"]));
    ⵠΔ[26][v624.Δᐃⵠ] = f53(f232(v1478 * 0.58, 0, ["#2b7c57", "#15543c", "#1a7961"]));
    ⵠΔ[27] = [];
    ⵠΔ[27][v624.ᐃᐃᐃ] = f53(f225(v1478 * 0.69, 0, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]));
    ⵠΔ[27][v624.Δᐃⵠ] = f53(f225(v1478 * 0.69, 0, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"]));
    ⵠΔ[413] = [];
    ⵠΔ[413][v624.ᐃᐃᐃ] = [];
    ⵠΔ[413][v624.Δᐃⵠ] = [];
    ⵠΔ[413][v624.ᐃᐃᐃ].push(f53(f216(v1478 * 1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"])));
    ⵠΔ[413][v624.ᐃᐃᐃ].push(f53(f218(v1478 * 1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"])));
    ⵠΔ[413][v624.ᐃᐃᐃ].push(f53(f213(v1478 * 1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"])));
    ⵠΔ[413][v624.Δᐃⵠ].push(f53(f216(v1478 * 1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"])));
    ⵠΔ[413][v624.Δᐃⵠ].push(f53(f218(v1478 * 1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"])));
    ⵠΔ[413][v624.Δᐃⵠ].push(f53(f213(v1478 * 1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"])));
    ⵠΔ[449] = [];
    ⵠΔ[449][v624.ᐃᐃᐃ] = f53(f237(v1478 * 1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"]));
    ⵠΔ[449][v624.Δᐃⵠ] = f53(f237(v1478 * 1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"]));
    ⵠΔ[451] = [];
    ⵠΔ[451][v624.ᐃᐃᐃ] = f53(f229(v1478 * 1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ⵠΔ[451][v624.Δᐃⵠ] = f53(f229(v1478 * 1, ["#050505", "#327570", "#021724", "#200333"]));
    ⵠΔ[452] = [];
    ⵠΔ[452][v624.ᐃᐃᐃ] = f53(f227(v1478 * 1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ⵠΔ[452][v624.Δᐃⵠ] = f53(f227(v1478 * 1, ["#050505", "#327570", "#021724", "#200333"]));
    ⵠΔ[243] = [];
    ⵠΔ[243][v624.ᐃᐃᐃ] = [];
    ⵠΔ[243][v624.Δᐃⵠ] = [];
    ⵠΔ[243][v624.ᐃᐃᐃ] = [Δⵠ.ⵠⲆΔᐃΔΔᐃ, Δⵠ.ⲆⲆⲆⲆΔᐃⲆ, Δⵠ.ΔⵠⲆᐃΔΔⵠ, Δⵠ.ⲆⲆΔⵠⵠⵠⲆ, Δⵠ.ⲆⲆᐃΔⲆⲆᐃ, Δⵠ.ⵠᐃᐃΔⵠⵠᐃ, Δⵠ.ⲆΔᐃΔΔⵠΔ, Δⵠ.ⲆⲆΔᐃⲆⵠΔ, Δⵠ.ⵠⲆᐃᐃΔⲆⵠ, Δⵠ.ⲆⲆᐃΔΔⲆⵠ, Δⵠ.ᐃⲆⵠᐃⵠⵠᐃ, Δⵠ.ΔⵠⵠⲆⲆΔⲆ, Δⵠ.ⵠΔΔⵠⵠⲆΔ, Δⵠ.ᐃᐃⵠᐃⵠⲆΔ, Δⵠ.ΔⵠⲆᐃᐃⲆⵠ, Δⵠ.ⵠᐃΔⵠΔᐃⲆ, Δⵠ.ⲆⵠⵠⲆΔᐃⲆ, Δⵠ.ⵠᐃᐃⵠᐃᐃⲆ, Δⵠ.ⲆⵠᐃᐃΔⲆᐃ, Δⵠ.ᐃⲆⲆΔᐃⵠᐃ, Δⵠ.ⲆⵠΔⲆᐃⵠΔ, Δⵠ.ᐃΔΔᐃⲆⵠᐃ, Δⵠ.ΔᐃⲆⲆⵠⵠΔ, Δⵠ.ⲆⲆᐃᐃᐃⲆⲆ, Δⵠ.ᐃⵠⲆⲆᐃⲆΔ, Δⵠ.ΔΔᐃΔΔⵠⲆ, Δⵠ.ᐃⵠᐃⲆΔᐃᐃ, Δⵠ.ⵠᐃΔⲆΔⵠΔ, Δⵠ.ⲆⲆⲆΔⲆΔᐃ, Δⵠ.ΔᐃᐃΔⵠⲆᐃ, Δⵠ.ᐃⲆⲆΔⵠᐃⲆ, Δⵠ.ⲆᐃᐃΔΔⲆᐃ, Δⵠ.ⵠΔⲆⲆⲆΔΔ, Δⵠ.ᐃΔⲆᐃⲆⲆΔ, Δⵠ.ⵠΔⲆΔᐃⵠᐃ, Δⵠ.ⲆΔΔΔⵠᐃΔ, Δⵠ.ᐃⲆⵠⲆⲆⵠᐃ, Δⵠ.ᐃⵠΔⵠΔᐃⲆ, Δⵠ.ΔΔⵠⵠᐃⲆΔ, Δⵠ.ⵠΔΔΔⵠᐃΔ, Δⵠ.ⲆⵠⲆⲆΔᐃⵠ, Δⵠ.ᐃᐃⵠᐃⵠᐃⵠ, Δⵠ.ⵠΔⲆΔⵠⵠⲆ, Δⵠ.ᐃⵠⵠΔⲆᐃⲆ, Δⵠ.ⵠⵠᐃⲆΔⵠᐃ, Δⵠ.ᐃⲆᐃⵠᐃΔⲆ, Δⵠ.ⵠⲆⲆⵠᐃᐃΔ, Δⵠ.ⵠⵠⲆΔᐃᐃⲆ, Δⵠ.ΔΔᐃⵠⵠᐃᐃ, Δⵠ.ΔⵠⲆⲆⲆΔᐃ, Δⵠ.ΔΔΔⵠⵠᐃⵠ, Δⵠ.ⲆⵠᐃⲆᐃⵠΔ, Δⵠ.ᐃΔⵠΔᐃΔⵠ, Δⵠ.ⲆΔⲆⲆⲆⵠΔ, Δⵠ.ⵠⵠⵠᐃᐃᐃΔ, Δⵠ.ⵠᐃⵠⵠⵠⲆⲆ];
    ⵠΔ[243][v624.Δᐃⵠ] = [Δⵠ.ᐃᐃⲆⲆᐃⲆⵠ, Δⵠ.ⲆᐃⵠΔⲆⵠΔ, Δⵠ.ⲆΔᐃⲆⲆΔⵠ, Δⵠ.ΔΔⲆⵠⵠⵠⵠ, Δⵠ.ᐃᐃⲆⲆΔⲆⲆ, Δⵠ.ΔⲆⵠᐃᐃΔⵠ, Δⵠ.ΔΔΔⵠΔⵠⲆ, Δⵠ.ΔⵠΔΔⲆⲆᐃ, Δⵠ.ᐃⵠⵠⲆⲆΔⲆ, Δⵠ.ⵠⵠⵠΔᐃⲆⲆ, Δⵠ.ⲆᐃΔΔᐃⵠᐃ, Δⵠ.ⲆⲆⵠⵠⲆᐃᐃ, Δⵠ.ⲆΔᐃΔⵠΔⵠ, Δⵠ.ΔⵠⲆⲆΔⵠᐃ, Δⵠ.ᐃⲆⵠᐃΔᐃᐃ, Δⵠ.ᐃΔΔᐃⵠⲆⲆ, Δⵠ.ⵠΔΔⵠᐃⵠⵠ, Δⵠ.ⵠΔⵠΔⲆᐃᐃ, Δⵠ.ⲆⵠⲆⲆᐃⲆⵠ, Δⵠ.ⲆⲆᐃⵠᐃⵠᐃ, Δⵠ.ⵠᐃΔⵠⵠᐃᐃ, Δⵠ.ⵠᐃⵠⵠΔⲆΔ, Δⵠ.ᐃⲆΔⲆΔⲆᐃ, Δⵠ.ΔⵠΔⵠⵠⲆΔ, Δⵠ.ⲆᐃΔΔⲆⵠⲆ, Δⵠ.ⲆⵠⵠΔⲆΔⵠ, Δⵠ.ⵠⵠⵠⲆⲆΔⲆ, Δⵠ.ᐃⲆΔⲆⲆΔᐃ, Δⵠ.ⵠᐃᐃⵠΔⲆⵠ, Δⵠ.ᐃⵠΔⲆⲆΔⲆ, Δⵠ.ⲆΔΔⲆⲆΔⲆ, Δⵠ.ⲆⲆΔΔΔΔᐃ, Δⵠ.ⵠⲆⲆᐃΔᐃΔ, Δⵠ.ⵠᐃⵠⵠᐃⵠΔ, Δⵠ.ⲆⵠⵠᐃᐃⲆⵠ, Δⵠ.ⲆᐃⵠᐃΔΔᐃ, Δⵠ.ⲆⵠⵠΔⲆᐃⵠ, Δⵠ.ᐃⲆΔⲆⲆᐃᐃ, Δⵠ.ᐃΔⵠᐃⲆᐃΔ, Δⵠ.ᐃⲆΔΔΔᐃⵠ, Δⵠ.ᐃⲆᐃΔᐃⵠΔ, Δⵠ.ⲆⲆᐃΔΔΔΔ, Δⵠ.ᐃΔⲆⲆⵠⵠΔ, Δⵠ.ΔⲆᐃᐃΔⲆⲆ, Δⵠ.ⵠᐃΔⵠⵠⵠⵠ, Δⵠ.ⲆⲆⲆⵠΔΔⲆ, Δⵠ.ᐃΔⵠⲆᐃⵠᐃ, Δⵠ.ᐃⲆᐃᐃⵠⵠΔ, Δⵠ.ᐃⵠⲆⵠⵠΔⵠ, Δⵠ.ΔΔⵠΔⵠᐃⵠ, Δⵠ.ᐃᐃΔᐃⲆΔⵠ, Δⵠ.ᐃΔⵠⵠⲆΔᐃ, Δⵠ.ⲆⵠΔⵠⲆΔᐃ, Δⵠ.ⲆⲆᐃⵠⵠⵠⵠ, Δⵠ.ΔΔᐃΔΔΔᐃ, Δⵠ.ⵠⵠⵠᐃⲆᐃΔ];
    ⵠΔ[676] = [];
    ⵠΔ[676][v624.ᐃᐃᐃ] = [];
    ⵠΔ[676][v624.Δᐃⵠ] = [];
    ⵠΔ[676][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 1.1, false, ["#252B28", "#747471", "#83827e"], 0)));
    ⵠΔ[676][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 0.9, false, ["#252B28", "#747471", "#83827e"], 1)));
    ⵠΔ[676][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 1, false, ["#252B28", "#747471", "#83827e"], 2)));
    ⵠΔ[676][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 0.9, false, ["#252B28", "#747471", "#83827e"], 2)));
    ⵠΔ[676][v624.Δᐃⵠ].push(f53(f159(v1478 * 1.1, false, ["#030d14", "#123335", "#183f3f"], 0)));
    ⵠΔ[676][v624.Δᐃⵠ].push(f53(f159(v1478 * 0.9, vVVV1423, ["#030d14", "#123335", "#183f3f"], 1)));
    ⵠΔ[676][v624.Δᐃⵠ].push(f53(f159(v1478 * 1, false, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[676][v624.Δᐃⵠ].push(f53(f159(v1478 * 0.9, vVVV1422, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[679] = [];
    ⵠΔ[679][v624.ᐃᐃᐃ] = [];
    ⵠΔ[679][v624.Δᐃⵠ] = [];
    ⵠΔ[679][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 1.1, vVVVVV16, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[679][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 0.9, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[679][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 1, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[679][v624.ᐃᐃᐃ].push(f53(f159(v1478 * 0.9, vVVVV1622, ["#252B28", "#58645F", "#75827D"], 2)));
    ⵠΔ[679][v624.Δᐃⵠ].push(f53(f159(v1478 * 1.1, vVVV162, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[679][v624.Δᐃⵠ].push(f53(f159(v1478 * 0.9, vVVVVV16, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[679][v624.Δᐃⵠ].push(f53(f159(v1478 * 1, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[679][v624.Δᐃⵠ].push(f53(f159(v1478 * 0.9, vVVVV16, ["#030d14", "#123335", "#183f3f"], 2)));
    ⵠΔ[415] = [];
    ⵠΔ[415][v624.ᐃᐃᐃ] = [];
    ⵠΔ[415][v624.Δᐃⵠ] = [];
    ⵠΔ[415][v624.ᐃᐃᐃ].push(f53(f153(v1478 * 1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[415][v624.ᐃᐃᐃ].push(f53(f153(v1478 * 1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[415][v624.ᐃᐃᐃ].push(f53(f153(v1478 * 1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⵠΔ[415][v624.Δᐃⵠ].push(f53(f153(v1478 * 1.5, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⵠΔ[415][v624.Δᐃⵠ].push(f53(f153(v1478 * 1.3, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⵠΔ[415][v624.Δᐃⵠ].push(f53(f153(v1478 * 1.1, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⵠΔ[416] = [];
    ⵠΔ[416][v624.ᐃᐃᐃ] = [];
    ⵠΔ[416][v624.Δᐃⵠ] = [];
    ⵠΔ[416][v624.ᐃᐃᐃ].push(f53(f155(v1478 * 1.1, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⵠΔ[416][v624.ᐃᐃᐃ].push(f53(f155(v1478 * 0.9, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⵠΔ[416][v624.ᐃᐃᐃ].push(f53(f155(v1478 * 0.7, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⵠΔ[416][v624.Δᐃⵠ].push(f53(f155(v1478 * 1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⵠΔ[416][v624.Δᐃⵠ].push(f53(f155(v1478 * 0.9, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⵠΔ[416][v624.Δᐃⵠ].push(f53(f155(v1478 * 0.7, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⵠΔ[121] = [];
    ⵠΔ[121][v624.ᐃᐃᐃ] = [];
    ⵠΔ[121][v624.Δᐃⵠ] = [];
    ⵠΔ[121][v624.ᐃᐃᐃ].push(f53(f212(v1478 * 1.7, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ⵠΔ[121][v624.ᐃᐃᐃ].push(f53(f212(v1478 * 1.5, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ⵠΔ[121][v624.ᐃᐃᐃ].push(f53(f212(v1478 * 1.3, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ⵠΔ[121][v624.Δᐃⵠ].push(f53(f212(v1478 * 1.7, vV162, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⵠΔ[121][v624.Δᐃⵠ].push(f53(f212(v1478 * 1.5, vVV16, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⵠΔ[121][v624.Δᐃⵠ].push(f53(f212(v1478 * 1.3, vVVVV1622, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⵠΔ[678] = [];
    ⵠΔ[678][v624.ᐃᐃᐃ] = [];
    ⵠΔ[678][v624.Δᐃⵠ] = [];
    ⵠΔ[678][v624.ᐃᐃᐃ].push(f53(f221(v1478, ["#2d53c4"])));
    ⵠΔ[678][v624.Δᐃⵠ].push(f53(f221(v1478, ["#2d53c4"])));
    ⵠΔ[696] = [];
    ⵠΔ[696][v624.ᐃᐃᐃ] = [];
    ⵠΔ[696][v624.Δᐃⵠ] = [];
    ⵠΔ[696][v624.ᐃᐃᐃ].push(f53(f221(v1478, ["#c4912d"])));
    ⵠΔ[696][v624.Δᐃⵠ].push(f53(f221(v1478, ["#c4912d"])));
    ⵠΔ[680] = [];
    ⵠΔ[680][v624.ᐃᐃᐃ] = f53(f223(v1478, ["#414040"]));
    ⵠΔ[680][v624.Δᐃⵠ] = f53(f223(v1478, ["#153635"]));
    ⵠΔ[508] = [];
    ⵠΔ[508][v624.ᐃᐃᐃ] = f53(f176(v1478 * 1, vVVV144, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[508][v624.Δᐃⵠ] = f53(f176(v1478 * 1, vVV14, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[509] = [];
    ⵠΔ[509][v624.ᐃᐃᐃ] = f53(f177(v1478 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[509][v624.Δᐃⵠ] = f53(f177(v1478 * 1, vV144, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[512] = [];
    ⵠΔ[512][v624.ᐃᐃᐃ] = f53(f177(v1478 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[512][v624.Δᐃⵠ] = f53(f177(v1478 * 1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[511] = [];
    ⵠΔ[511][v624.ᐃᐃᐃ] = f53(f181(v1478 * 1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[511][v624.Δᐃⵠ] = f53(f181(v1478 * 1, vVVV144, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[510] = [];
    ⵠΔ[510][v624.ᐃᐃᐃ] = f53(f178(v1478 * 1, vVVVV14, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⵠΔ[510][v624.Δᐃⵠ] = f53(f178(v1478 * 1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⵠΔ[419] = [];
    ⵠΔ[419][v624.ᐃᐃᐃ] = f53(f224(v1478 * 0.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"]));
    ⵠΔ[419][v624.Δᐃⵠ] = f53(f224(v1478 * 0.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"]));
    ⵠΔ[445] = [];
    ⵠΔ[445][v624.ᐃᐃᐃ] = f53(f210(v1478 * 0.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"]));
    ⵠΔ[445][v624.Δᐃⵠ] = f53(f210(v1478 * 0.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"]));
    ⵠΔ[259] = [];
    ⵠΔ[818] = [];
    ⵠΔ[516] = [];
    ⵠΔ[819] = [];
    for (v1479 = 0; v1479 < 2; v1479++) {
      ⵠΔ[259][v1479] = document.createElement("canvas");
      ⵠΔ[259][v1479].width = 193;
      ⵠΔ[259][v1479].height = 193;
      ⵠΔ[818][v1479] = ⵠΔ[259][v1479].getContext("2d");
      ⵠΔ[516][v1479] = document.createElement("canvas");
      ⵠΔ[516][v1479].width = 600;
      ⵠΔ[516][v1479].height = 600;
      ⵠΔ[819][v1479] = ⵠΔ[516][v1479].getContext("2d");
    }
    ⵠΔ[475] = [];
    ⵠΔ[475][v624.ᐃᐃᐃ] = f53(f223(v1478, ["#c8e0de"]));
    ⵠΔ[475][v624.Δᐃⵠ] = f53(f223(v1478, ["#147071"]));
    ⵠΔ[476] = [];
    ⵠΔ[476][v624.ᐃᐃᐃ] = f53(f223(v1478, ["#231912"]));
    ⵠΔ[476][v624.Δᐃⵠ] = f53(f223(v1478, ["#021719"]));
    ⵠΔ[697] = f53(function (p1158, p1159) {
      var v1512 = document.createElement("canvas");
      var v1513 = v1512.getContext("2d");
      v1512.width = p1158 * 253;
      v1512.height = p1158 * 192;
      v1513.save();
      v1513.translate(p1158 * 37, p1158 * 94);
      f83(v1513, p1158 * -7, p1158 * -20, p1158 * 14, p1158 * 37, p1158 * 20);
      v1513.restore();
      f84(v1513, p1159[0]);
      v1513.save();
      v1513.translate(p1158 * 131, p1158 * 94);
      f83(v1513, p1158 * -84, p1158 * -67, p1158 * 168, p1158 * 134, p1158 * 20);
      v1513.restore();
      f84(v1513, p1159[0], p1159[0], p1158 * 13);
      v1513.save();
      v1513.translate(p1158 * 223, p1158 * 94.5);
      f83(v1513, p1158 * -5, p1158 * -18.5, p1158 * 10, p1158 * 37, p1158 * 20);
      v1513.restore();
      f84(v1513, p1159[0]);
      v1513.save();
      v1513.translate(p1158 * 128.5, p1158 * 170.5);
      f83(v1513, p1158 * -22.5, p1158 * -6.5, p1158 * 45, p1158 * 13, p1158 * 20);
      v1513.restore();
      f84(v1513, p1159[0]);
      return v1512;
    }(v1478 * 0.5, ["#BB0000"]));
    ⵠΔ[461] = f53(function (p1160, p1161) {
      var v1514 = document.createElement("canvas");
      var v1515 = v1514.getContext("2d");
      v1514.width = p1160 * 161;
      v1514.height = p1160 * 190;
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1160 * 9, p1160 * 93);
      v1515.bezierCurveTo(p1160 * 17, p1160 * 95, p1160 * 19, p1160 * 95, p1160 * 21, p1160 * 95);
      v1515.bezierCurveTo(p1160 * 9, p1160 * 83, p1160 * 17, p1160 * 93, p1160 * 4, p1160 * 76);
      v1515.bezierCurveTo(p1160 * 11, p1160 * 75, p1160 * 11, p1160 * 75, p1160 * 18, p1160 * 75);
      v1515.bezierCurveTo(p1160 * 13, p1160 * 67, p1160 * 13, p1160 * 67, p1160 * 7, p1160 * 59);
      v1515.bezierCurveTo(p1160 * 14, p1160 * 59, p1160 * 14, p1160 * 59, p1160 * 21, p1160 * 59);
      v1515.bezierCurveTo(p1160 * 46, p1160 * 35, p1160 * 35, p1160 * 45, p1160 * 49, p1160 * 31);
      v1515.bezierCurveTo(p1160 * 53, p1160 * 24, p1160 * 51, p1160 * 21, p1160 * 51, p1160 * 16);
      v1515.bezierCurveTo(p1160 * 63, p1160 * 23, p1160 * 63, p1160 * 24, p1160 * 69, p1160 * 29);
      v1515.bezierCurveTo(p1160 * 76, p1160 * 7, p1160 * 75, p1160 * 11, p1160 * 76, p1160 * 6);
      v1515.bezierCurveTo(p1160 * 81, p1160 * 12, p1160 * 84, p1160 * 18, p1160 * 89, p1160 * 27);
      v1515.bezierCurveTo(p1160 * 95, p1160 * 25, p1160 * 100, p1160 * 16, p1160 * 105, p1160 * 14);
      v1515.bezierCurveTo(p1160 * 103, p1160 * 25, p1160 * 111, p1160 * 33, p1160 * 110, p1160 * 34);
      v1515.bezierCurveTo(p1160 * 123, p1160 * 48, p1160 * 123, p1160 * 48, p1160 * 136, p1160 * 62);
      v1515.bezierCurveTo(p1160 * 142, p1160 * 60, p1160 * 147, p1160 * 59, p1160 * 155, p1160 * 58);
      v1515.bezierCurveTo(p1160 * 147, p1160 * 65, p1160 * 147, p1160 * 65, p1160 * 139, p1160 * 73);
      v1515.bezierCurveTo(p1160 * 145, p1160 * 73, p1160 * 145, p1160 * 73, p1160 * 151, p1160 * 73);
      v1515.bezierCurveTo(p1160 * 145, p1160 * 80, p1160 * 145, p1160 * 80, p1160 * 138, p1160 * 87);
      v1515.bezierCurveTo(p1160 * 144, p1160 * 88, p1160 * 144, p1160 * 88, p1160 * 150, p1160 * 89);
      v1515.bezierCurveTo(p1160 * 125, p1160 * 103, p1160 * 125, p1160 * 125, p1160 * 113, p1160 * 141);
      v1515.bezierCurveTo(p1160 * 92, p1160 * 178, p1160 * 85, p1160 * 177, p1160 * 76, p1160 * 178);
      v1515.bezierCurveTo(p1160 * 64, p1160 * 179, p1160 * 51, p1160 * 164, p1160 * 35, p1160 * 131);
      v1515.bezierCurveTo(p1160 * 18, p1160 * 95, p1160 * 13, p1160 * 99, p1160 * 8, p1160 * 93);
      v1515.closePath();
      f84(v1515, p1161, p1161, p1160 * 4);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1160 * 25, p1160 * 63);
      v1515.bezierCurveTo(p1160 * 16, p1160 * 58, p1160 * 17, p1160 * 51, p1160 * 17, p1160 * 33);
      v1515.bezierCurveTo(p1160 * 19, p1160 * 12, p1160 * 21, p1160 * 12, p1160 * 32, p1160 * 17);
      v1515.bezierCurveTo(p1160 * 63, p1160 * 31, p1160 * 66, p1160 * 45, p1160 * 66, p1160 * 54);
      f84(v1515, p1161, p1161, p1160 * 4);
      v1515.beginPath();
      v1515.lineCap = "round";
      v1515.lineJoin = "round";
      v1515.moveTo(p1160 * 91, p1160 * 53);
      v1515.bezierCurveTo(p1160 * 91, p1160 * 40, p1160 * 98, p1160 * 33, p1160 * 121, p1160 * 20);
      v1515.bezierCurveTo(p1160 * 137, p1160 * 12, p1160 * 137, p1160 * 16, p1160 * 139, p1160 * 27);
      v1515.bezierCurveTo(p1160 * 141, p1160 * 49, p1160 * 140, p1160 * 57, p1160 * 134, p1160 * 64);
      f84(v1515, p1161, p1161, p1160 * 4);
      return v1514;
    }(v1478 * 0.9, "#BB0000"));
    ⵠΔ[462] = f53(function (p1162, p1163) {
      var v1516 = document.createElement("canvas");
      var v1517 = v1516.getContext("2d");
      v1516.width = p1162 * 147;
      v1516.height = p1162 * 172;
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1162 * 8, p1162 * 50);
      v1517.bezierCurveTo(p1162 * 15, p1162 * 16, p1162 * 49, p1162 * 6, p1162 * 67, p1162 * 6);
      v1517.bezierCurveTo(p1162 * 121, p1162 * 3, p1162 * 128, p1162 * 32, p1162 * 135, p1162 * 48);
      v1517.bezierCurveTo(p1162 * 146, p1162 * 96, p1162 * 124, p1162 * 131, p1162 * 96, p1162 * 135);
      v1517.bezierCurveTo(p1162 * 96, p1162 * 158, p1162 * 79, p1162 * 156, p1162 * 75, p1162 * 156);
      v1517.bezierCurveTo(p1162 * 50, p1162 * 154, p1162 * 53, p1162 * 150, p1162 * 52, p1162 * 135);
      v1517.bezierCurveTo(p1162 * 2, p1162 * 127, p1162 * 3, p1162 * 87, p1162 * 8, p1162 * 50);
      v1517.closePath();
      f84(v1517, p1163, p1163, p1162 * 4);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1162 * 14, p1162 * 57);
      v1517.bezierCurveTo(p1162 * 2, p1162 * 50, p1162 * 5, p1162 * 22, p1162 * 24, p1162 * 22);
      v1517.bezierCurveTo(p1162 * 41, p1162 * 21, p1162 * 54, p1162 * 32, p1162 * 55, p1162 * 48);
      f84(v1517, p1163, p1163, p1162 * 4);
      v1517.beginPath();
      v1517.lineCap = "round";
      v1517.lineJoin = "round";
      v1517.moveTo(p1162 * 93, p1162 * 47);
      v1517.bezierCurveTo(p1162 * 94, p1162 * 24, p1162 * 116, p1162 * 21, p1162 * 120, p1162 * 20);
      v1517.bezierCurveTo(p1162 * 144, p1162 * 17, p1162 * 146, p1162 * 52, p1162 * 133, p1162 * 58);
      f84(v1517, p1163, p1163, p1162 * 4);
      return v1516;
    }(v1478 * 0.9, "#BB0000"));
    ⵠΔ[463] = f53(function (p1164, p1165) {
      var v1518 = document.createElement("canvas");
      var v1519 = v1518.getContext("2d");
      v1518.width = p1164 * 271;
      v1518.height = p1164 * 366;
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 133, p1164 * 99);
      v1519.bezierCurveTo(p1164 * 186, p1164 * 123, p1164 * 199, p1164 * 152, p1164 * 209, p1164 * 169);
      v1519.bezierCurveTo(p1164 * 228, p1164 * 205, p1164 * 224, p1164 * 245, p1164 * 190, p1164 * 276);
      v1519.bezierCurveTo(p1164 * 161, p1164 * 296, p1164 * 99, p1164 * 292, p1164 * 79, p1164 * 274);
      v1519.bezierCurveTo(p1164 * 49, p1164 * 253, p1164 * 47, p1164 * 214, p1164 * 50, p1164 * 197);
      v1519.bezierCurveTo(p1164 * 61, p1164 * 143, p1164 * 102, p1164 * 113, p1164 * 131, p1164 * 99);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 73, p1164 * 270);
      v1519.bezierCurveTo(p1164 * 79, p1164 * 280, p1164 * 77, p1164 * 280, p1164 * 78, p1164 * 287);
      v1519.bezierCurveTo(p1164 * 78, p1164 * 290, p1164 * 83, p1164 * 291, p1164 * 82, p1164 * 299);
      v1519.bezierCurveTo(p1164 * 81, p1164 * 301, p1164 * 87, p1164 * 301, p1164 * 92, p1164 * 314);
      v1519.bezierCurveTo(p1164 * 94, p1164 * 319, p1164 * 100, p1164 * 321, p1164 * 107, p1164 * 320);
      v1519.bezierCurveTo(p1164 * 111, p1164 * 323, p1164 * 114, p1164 * 324, p1164 * 119, p1164 * 320);
      v1519.bezierCurveTo(p1164 * 137, p1164 * 321, p1164 * 146, p1164 * 323, p1164 * 139, p1164 * 320);
      v1519.bezierCurveTo(p1164 * 141, p1164 * 324, p1164 * 150, p1164 * 324, p1164 * 153, p1164 * 320);
      v1519.bezierCurveTo(p1164 * 168, p1164 * 319, p1164 * 171, p1164 * 316, p1164 * 173, p1164 * 307);
      v1519.bezierCurveTo(p1164 * 180, p1164 * 305, p1164 * 180, p1164 * 301, p1164 * 178, p1164 * 296);
      v1519.bezierCurveTo(p1164 * 183, p1164 * 296, p1164 * 185, p1164 * 289, p1164 * 188, p1164 * 279);
      v1519.bezierCurveTo(p1164 * 171, p1164 * 286, p1164 * 149, p1164 * 290, p1164 * 132, p1164 * 289);
      v1519.bezierCurveTo(p1164 * 101, p1164 * 290, p1164 * 86, p1164 * 280, p1164 * 74, p1164 * 271);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 76, p1164 * 252);
      v1519.bezierCurveTo(p1164 * 85, p1164 * 294, p1164 * 96, p1164 * 314, p1164 * 103, p1164 * 314);
      v1519.bezierCurveTo(p1164 * 106, p1164 * 316, p1164 * 151, p1164 * 314, p1164 * 156, p1164 * 314);
      v1519.bezierCurveTo(p1164 * 169, p1164 * 317, p1164 * 182, p1164 * 285, p1164 * 191, p1164 * 256);
      v1519.bezierCurveTo(p1164 * 134.5, p1164 * 254, p1164 * 134.5, p1164 * 254, p1164 * 78, p1164 * 252);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 84, p1164 * 257);
      v1519.bezierCurveTo(p1164 * 122, p1164 * 273, p1164 * 146, p1164 * 268, p1164 * 179, p1164 * 261);
      v1519.bezierCurveTo(p1164 * 190, p1164 * 258, p1164 * 187, p1164 * 266, p1164 * 178, p1164 * 272);
      v1519.bezierCurveTo(p1164 * 160, p1164 * 284, p1164 * 123, p1164 * 282, p1164 * 100, p1164 * 277);
      v1519.bezierCurveTo(p1164 * 73, p1164 * 260, p1164 * 79, p1164 * 257, p1164 * 84, p1164 * 257);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 125, p1164 * 65);
      v1519.bezierCurveTo(p1164 * 133, p1164 * 45, p1164 * 136, p1164 * 42, p1164 * 141, p1164 * 55);
      v1519.bezierCurveTo(p1164 * 151, p1164 * 96, p1164 * 164, p1164 * 117, p1164 * 175, p1164 * 134);
      v1519.bezierCurveTo(p1164 * 203, p1164 * 181, p1164 * 207, p1164 * 182, p1164 * 208, p1164 * 215);
      v1519.bezierCurveTo(p1164 * 206, p1164 * 240, p1164 * 205, p1164 * 246, p1164 * 184, p1164 * 258);
      v1519.bezierCurveTo(p1164 * 161, p1164 * 267, p1164 * 131, p1164 * 272, p1164 * 86, p1164 * 258);
      v1519.bezierCurveTo(p1164 * 67, p1164 * 252, p1164 * 68, p1164 * 239, p1164 * 64, p1164 * 216);
      v1519.bezierCurveTo(p1164 * 62, p1164 * 194, p1164 * 72, p1164 * 169, p1164 * 92, p1164 * 142);
      v1519.bezierCurveTo(p1164 * 106, p1164 * 121, p1164 * 114, p1164 * 101, p1164 * 125, p1164 * 65);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 115, p1164 * 37);
      v1519.bezierCurveTo(p1164 * 116, p1164 * 28, p1164 * 119, p1164 * 27, p1164 * 126, p1164 * 37);
      v1519.bezierCurveTo(p1164 * 134, p1164 * 48, p1164 * 134, p1164 * 49, p1164 * 132, p1164 * 59);
      v1519.bezierCurveTo(p1164 * 131, p1164 * 67, p1164 * 127, p1164 * 65, p1164 * 120, p1164 * 56);
      v1519.bezierCurveTo(p1164 * 114, p1164 * 49, p1164 * 113, p1164 * 43, p1164 * 115, p1164 * 38);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 146, p1164 * 34);
      v1519.bezierCurveTo(p1164 * 152, p1164 * 28, p1164 * 155, p1164 * 27, p1164 * 157, p1164 * 39);
      v1519.bezierCurveTo(p1164 * 157, p1164 * 45, p1164 * 157, p1164 * 49, p1164 * 150, p1164 * 56);
      v1519.bezierCurveTo(p1164 * 141, p1164 * 66, p1164 * 138, p1164 * 66, p1164 * 138, p1164 * 57);
      v1519.bezierCurveTo(p1164 * 137, p1164 * 50, p1164 * 137, p1164 * 47, p1164 * 141, p1164 * 42);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 143, p1164 * 69);
      v1519.bezierCurveTo(p1164 * 148, p1164 * 56, p1164 * 156, p1164 * 50, p1164 * 158, p1164 * 58);
      v1519.bezierCurveTo(p1164 * 159, p1164 * 64, p1164 * 160, p1164 * 67, p1164 * 153, p1164 * 77);
      v1519.bezierCurveTo(p1164 * 148, p1164 * 83, p1164 * 145, p1164 * 84, p1164 * 143, p1164 * 77);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 149, p1164 * 92);
      v1519.bezierCurveTo(p1164 * 149, p1164 * 89, p1164 * 151, p1164 * 84, p1164 * 156, p1164 * 79);
      v1519.bezierCurveTo(p1164 * 161, p1164 * 73, p1164 * 163, p1164 * 78, p1164 * 162, p1164 * 86);
      v1519.bezierCurveTo(p1164 * 161, p1164 * 91, p1164 * 155, p1164 * 99, p1164 * 152, p1164 * 98);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 111, p1164 * 61);
      v1519.bezierCurveTo(p1164 * 114, p1164 * 51, p1164 * 117, p1164 * 51, p1164 * 124, p1164 * 64);
      v1519.bezierCurveTo(p1164 * 128, p1164 * 68, p1164 * 128, p1164 * 76, p1164 * 126, p1164 * 79);
      v1519.bezierCurveTo(p1164 * 123, p1164 * 84, p1164 * 122, p1164 * 82, p1164 * 115, p1164 * 74);
      v1519.bezierCurveTo(p1164 * 112, p1164 * 67, p1164 * 115, p1164 * 74, p1164 * 115, p1164 * 74);
      v1519.bezierCurveTo(p1164 * 111, p1164 * 68, p1164 * 111, p1164 * 66, p1164 * 111, p1164 * 62);
      v1519.closePath();
      f84(v1519, p1165[0]);
      v1519.beginPath();
      v1519.lineCap = "round";
      v1519.lineJoin = "round";
      v1519.moveTo(p1164 * 107, p1164 * 81);
      v1519.bezierCurveTo(p1164 * 108, p1164 * 74, p1164 * 112, p1164 * 73, p1164 * 118, p1164 * 84);
      v1519.bezierCurveTo(p1164 * 122, p1164 * 88, p1164 * 122, p1164 * 93, p1164 * 121, p1164 * 98);
      v1519.bezierCurveTo(p1164 * 114, p1164 * 98, p1164 * 113, p1164 * 98, p1164 * 109, p1164 * 90);
      v1519.bezierCurveTo(p1164 * 107, p1164 * 87, p1164 * 106, p1164 * 85, p1164 * 107, p1164 * 82);
      v1519.closePath();
      f84(v1519, p1165[0]);
      return v1518;
    }(v1478 * 1, ["#BB0000"]));
    ⵠΔ[466] = f53(function (p1166, p1167) {
      var v1520 = document.createElement("canvas");
      var v1521 = v1520.getContext("2d");
      v1520.width = p1166 * 85;
      v1520.height = p1166 * 145;
      v1521.translate(p1166 * -20, p1166 * -95);
      v1521.beginPath();
      v1521.lineCap = "round";
      v1521.lineJoin = "round";
      v1521.moveTo(p1166 * 50, p1166 * 105);
      v1521.bezierCurveTo(p1166 * 52, p1166 * 119, p1166 * 64, p1166 * 137, p1166 * 71, p1166 * 146);
      v1521.bezierCurveTo(p1166 * 71, p1166 * 161, p1166 * 74, p1166 * 169, p1166 * 79, p1166 * 179);
      v1521.bezierCurveTo(p1166 * 68, p1166 * 192, p1166 * 70, p1166 * 204, p1166 * 69, p1166 * 216);
      v1521.bezierCurveTo(p1166 * 50, p1166 * 189.5, p1166 * 50, p1166 * 189.5, p1166 * 31, p1166 * 163);
      v1521.closePath();
      f84(v1521, p1167);
      v1521.beginPath();
      v1521.lineCap = "round";
      v1521.lineJoin = "round";
      v1521.moveTo(p1166 * 44, p1166 * 106);
      v1521.bezierCurveTo(p1166 * 49, p1166 * 90, p1166 * 58, p1166 * 104, p1166 * 51, p1166 * 121);
      v1521.bezierCurveTo(p1166 * 45, p1166 * 143, p1166 * 41, p1166 * 151, p1166 * 37, p1166 * 162);
      v1521.bezierCurveTo(p1166 * 48, p1166 * 180, p1166 * 58, p1166 * 188, p1166 * 76, p1166 * 205);
      v1521.bezierCurveTo(p1166 * 104, p1166 * 209, p1166 * 105, p1166 * 229, p1166 * 92, p1166 * 235);
      v1521.bezierCurveTo(p1166 * 76, p1166 * 239, p1166 * 75, p1166 * 232, p1166 * 56, p1166 * 213);
      v1521.bezierCurveTo(p1166 * 31, p1166 * 187, p1166 * 28, p1166 * 176, p1166 * 23, p1166 * 162);
      v1521.bezierCurveTo(p1166 * 38, p1166 * 131, p1166 * 40, p1166 * 120, p1166 * 44, p1166 * 106);
      v1521.closePath();
      f84(v1521, p1167, p1167, p1166 * 4);
      v1521.beginPath();
      v1521.lineCap = "round";
      v1521.lineJoin = "round";
      v1521.moveTo(p1166 * 30, p1166 * 159);
      v1521.bezierCurveTo(p1166 * 46, p1166 * 157, p1166 * 59, p1166 * 152, p1166 * 68, p1166 * 148);
      v1521.bezierCurveTo(p1166 * 63, p1166 * 155, p1166 * 52, p1166 * 160, p1166 * 44, p1166 * 164);
      v1521.bezierCurveTo(p1166 * 59, p1166 * 169, p1166 * 66, p1166 * 174, p1166 * 75, p1166 * 178);
      v1521.bezierCurveTo(p1166 * 58, p1166 * 178, p1166 * 49, p1166 * 175, p1166 * 37, p1166 * 174);
      v1521.closePath();
      f84(v1521, p1167);
      return v1520;
    }(v1478 * 0.8, "#BB0000"));
    ⵠΔ[467] = f53(function (p1168, p1169) {
      var v1522 = document.createElement("canvas");
      var v1523 = v1522.getContext("2d");
      v1522.width = p1168 * 85;
      v1522.height = p1168 * 145;
      v1523.translate(p1168 * -165, p1168 * -95);
      v1523.beginPath();
      v1523.lineCap = "round";
      v1523.lineJoin = "round";
      v1523.moveTo(p1168 * 217, p1168 * 103);
      v1523.bezierCurveTo(p1168 * 209, p1168 * 129, p1168 * 203, p1168 * 137, p1168 * 195, p1168 * 146);
      v1523.bezierCurveTo(p1168 * 195, p1168 * 159, p1168 * 194, p1168 * 167, p1168 * 189, p1168 * 178);
      v1523.bezierCurveTo(p1168 * 193, p1168 * 186, p1168 * 196, p1168 * 195, p1168 * 198, p1168 * 216);
      v1523.bezierCurveTo(p1168 * 217.5, p1168 * 189.5, p1168 * 217.5, p1168 * 189.5, p1168 * 237, p1168 * 163);
      v1523.closePath();
      f84(v1523, p1169);
      v1523.beginPath();
      v1523.lineCap = "round";
      v1523.lineJoin = "round";
      v1523.moveTo(p1168 * 231, p1168 * 163);
      v1523.bezierCurveTo(p1168 * 221, p1168 * 139, p1168 * 218, p1168 * 128, p1168 * 215, p1168 * 114);
      v1523.bezierCurveTo(p1168 * 213, p1168 * 102, p1168 * 220, p1168 * 92, p1168 * 222, p1168 * 107);
      v1523.bezierCurveTo(p1168 * 224, p1168 * 118, p1168 * 233, p1168 * 138, p1168 * 244, p1168 * 161);
      v1523.bezierCurveTo(p1168 * 235, p1168 * 188, p1168 * 224, p1168 * 198, p1168 * 204, p1168 * 221);
      v1523.bezierCurveTo(p1168 * 190, p1168 * 233, p1168 * 190, p1168 * 235, p1168 * 180, p1168 * 235);
      v1523.bezierCurveTo(p1168 * 167, p1168 * 235, p1168 * 164, p1168 * 216, p1168 * 175, p1168 * 211);
      v1523.bezierCurveTo(p1168 * 176, p1168 * 208, p1168 * 181, p1168 * 207, p1168 * 191, p1168 * 205);
      v1523.bezierCurveTo(p1168 * 213, p1168 * 186, p1168 * 218, p1168 * 180, p1168 * 230, p1168 * 163);
      v1523.closePath();
      f84(v1523, p1169, p1169, p1168 * 4);
      v1523.beginPath();
      v1523.lineCap = "round";
      v1523.lineJoin = "round";
      v1523.moveTo(p1168 * 234, p1168 * 154);
      v1523.bezierCurveTo(p1168 * 227, p1168 * 156, p1168 * 222, p1168 * 156, p1168 * 199, p1168 * 148);
      v1523.bezierCurveTo(p1168 * 201, p1168 * 151, p1168 * 216, p1168 * 159, p1168 * 224, p1168 * 162);
      v1523.bezierCurveTo(p1168 * 209, p1168 * 169.5, p1168 * 209, p1168 * 169.5, p1168 * 194, p1168 * 177);
      v1523.bezierCurveTo(p1168 * 213.5, p1168 * 175, p1168 * 213.5, p1168 * 175, p1168 * 233, p1168 * 173);
      v1523.closePath();
      f84(v1523, p1169);
      return v1522;
    }(v1478 * 0.8, "#BB0000"));
    ⵠΔ[322] = f53(function (p1170, p1171) {
      var v1524 = document.createElement("canvas");
      var v1525 = v1524.getContext("2d");
      var v1526 = p1170 * 85;
      var v1527 = p1170 * 115;
      var v1528 = p1170 * 4;
      v1524.width = v1526;
      v1524.height = v1527;
      v1525.translate(p1170 * -130, p1170 * -60);
      v1525.globalAlpha = 1;
      v1525.beginPath();
      v1525.bezierCurveTo(p1170 * 190, p1170 * 87, p1170 * 201, p1170 * 59, p1170 * 208, p1170 * 64);
      v1525.bezierCurveTo(p1170 * 213, p1170 * 68, p1170 * 204, p1170 * 93, p1170 * 195, p1170 * 109);
      v1525.bezierCurveTo(p1170 * 195, p1170 * 109, p1170 * 202, p1170 * 124, p1170 * 191, p1170 * 141);
      v1525.bezierCurveTo(p1170 * 182, p1170 * 151, p1170 * 164, p1170 * 155, p1170 * 148, p1170 * 144);
      v1525.bezierCurveTo(p1170 * 136, p1170 * 135, p1170 * 138, p1170 * 111, p1170 * 145, p1170 * 104);
      v1525.bezierCurveTo(p1170 * 140, p1170 * 92, p1170 * 131, p1170 * 67, p1170 * 138, p1170 * 63);
      v1525.bezierCurveTo(p1170 * 145, p1170 * 61, p1170 * 153, p1170 * 82, p1170 * 155, p1170 * 96);
      v1525.bezierCurveTo(p1170 * 167, p1170 * 91, p1170 * 178, p1170 * 92, p1170 * 187, p1170 * 98);
      v1525.closePath();
      f84(v1525, p1171, p1171, v1528);
      return v1524;
    }(v1478 * 0.9, "#BB0000"));
    ⵠΔ[279] = f53(f90(v1478 * 0.6, "#BB0000"));
    ⵠΔ[280] = f53(f90(v1478 * 0.6, "#1CE7E0"));
    ⵠΔ[281] = f53(f90(v1478 * 0.6, "#DBE71C"));
    ⵠΔ[308] = f53(f90(v1478 * 0.6, "#00BB00"));
    ⵠΔ[602] = [];
    ⵠΔ[602][v624.ᐃᐃᐃ] = f53(f223(v1478, ["#dac291"]));
    ⵠΔ[602][v624.Δᐃⵠ] = f53(f223(v1478, ["#0D423D"]));
    ⵠΔ[698] = [];
    ⵠΔ[698][v624.ᐃᐃᐃ] = f53(f223(v1478, ["#dac291"]));
    ⵠΔ[698][v624.Δᐃⵠ] = f53(f223(v1478, ["#0D423D"]));
    ⵠΔ[788] = [];
    ⵠΔ[788][v624.ᐃᐃᐃ] = f53(f259(v1478 * 0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"]));
    ⵠΔ[788][v624.Δᐃⵠ] = f53(f259(v1478 * 0.3, true, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"]));
    ⵠΔ[182] = [];
    ⵠΔ[182][v624.ᐃᐃᐃ] = f53(f259(v1478 * 0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]));
    ⵠΔ[182][v624.Δᐃⵠ] = f53(f259(v1478 * 0.3, vVVV162, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"]));
    ⵠΔ[127] = [f53(f267(v1478, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ⵠΔ[128] = [f53(f267(v1478, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ⵠΔ[603] = [];
    ⵠΔ[603][v624.ᐃᐃᐃ] = [];
    ⵠΔ[603][v624.Δᐃⵠ] = [];
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f219(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f209(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f207(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f215(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f217(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f214(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.ᐃᐃᐃ].push(f53(f222(v1478 * 1, ["#0B6A84"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f219(v1478 * 1, ["#09373F"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f209(v1478 * 1, ["#09373F"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f207(v1478 * 1, ["#09373F"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f215(v1478 * 1, ["#09373F"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f217(v1478 * 1, ["#09373F"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f214(v1478 * 1, ["#09373F"])));
    ⵠΔ[603][v624.Δᐃⵠ].push(f53(f222(v1478 * 1, ["#09373F"])));
    ⵠΔ[692] = [];
    ⵠΔ[692][v624.ᐃᐃᐃ] = [];
    ⵠΔ[692][v624.Δᐃⵠ] = [];
    ⵠΔ[692][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.7, ["#FBEFBC"], 0)));
    ⵠΔ[692][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.9, ["#FBEFBC"], 1)));
    ⵠΔ[692][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.7, ["#FBEFBC"], 2)));
    ⵠΔ[692][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.7, ["#0F4C48"], 0)));
    ⵠΔ[692][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.9, ["#0F4C48"], 1)));
    ⵠΔ[692][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.7, ["#0F4C48"], 2)));
    ⵠΔ[694] = [];
    ⵠΔ[694][v624.ᐃᐃᐃ] = [];
    ⵠΔ[694][v624.Δᐃⵠ] = [];
    ⵠΔ[694][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.8, ["#A9D6D3"], 0)));
    ⵠΔ[694][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 2, ["#A9D6D3"], 1)));
    ⵠΔ[694][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.8, ["#A9D6D3"], 2)));
    ⵠΔ[694][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.8, ["#115E60"], 0)));
    ⵠΔ[694][v624.Δᐃⵠ].push(f53(f208(v1478 * 2, ["#115E60"], 1)));
    ⵠΔ[694][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.8, ["#115E60"], 2)));
    ⵠΔ[695] = [];
    ⵠΔ[695][v624.ᐃᐃᐃ] = [];
    ⵠΔ[695][v624.Δᐃⵠ] = [];
    ⵠΔ[695][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.9, ["#2A8B9B"], 0)));
    ⵠΔ[695][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 2.1, ["#2A8B9B"], 1)));
    ⵠΔ[695][v624.ᐃᐃᐃ].push(f53(f208(v1478 * 1.9, ["#2A8B9B"], 2)));
    ⵠΔ[695][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.9, ["#0F464C"], 0)));
    ⵠΔ[695][v624.Δᐃⵠ].push(f53(f208(v1478 * 2.1, ["#0F464C"], 1)));
    ⵠΔ[695][v624.Δᐃⵠ].push(f53(f208(v1478 * 1.9, ["#0F464C"], 2)));
    ⵠΔ[693] = [];
    ⵠΔ[693][v624.ᐃᐃᐃ] = [];
    ⵠΔ[693][v624.Δᐃⵠ] = [];
    ⵠΔ[693][v624.ᐃᐃᐃ].push(f53(f171(v1478 * 0.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⵠΔ[693][v624.ᐃᐃᐃ].push(f53(f171(v1478 * 1, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⵠΔ[693][v624.ᐃᐃᐃ].push(f53(f171(v1478 * 1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⵠΔ[693][v624.Δᐃⵠ].push(f53(f171(v1478 * 0.8, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⵠΔ[693][v624.Δᐃⵠ].push(f53(f171(v1478 * 1, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⵠΔ[693][v624.Δᐃⵠ].push(f53(f171(v1478 * 1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⵠΔ[637] = [];
    ⵠΔ[637][v624.ᐃᐃᐃ] = f53(f246(v1478 * 0.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"]));
    ⵠΔ[637][v624.Δᐃⵠ] = f53(f246(v1478 * 0.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"]));
    ⵠΔ[687] = f53(function (p1172, p1173) {
      var v1529 = document.createElement("canvas");
      var v1530 = v1529.getContext("2d");
      v1529.width = p1172 * 376;
      v1529.height = p1172 * 371;
      v1530.globalAlpha = 1;
      v1530.beginPath();
      v1530.lineCap = "round";
      v1530.lineJoin = "round";
      v1530.moveTo(p1172 * 191.633544921875, p1172 * 123.98580932617188);
      v1530.bezierCurveTo(p1172 * 215.633544921875, p1172 * 85.98580932617188, p1172 * 187.633544921875, p1172 * 71.98580932617188, p1172 * 202.633544921875, p1172 * 19.985809326171875);
      v1530.bezierCurveTo(p1172 * 231.633544921875, p1172 * 68.98580932617188, p1172 * 253.633544921875, p1172 * 71.98580932617188, p1172 * 256.633544921875, p1172 * 93.98580932617188);
      v1530.bezierCurveTo(p1172 * 306.633544921875, p1172 * 64.98580932617188, p1172 * 319.633544921875, p1172 * 61.985809326171875, p1172 * 350.633544921875, p1172 * 58.985809326171875);
      v1530.bezierCurveTo(p1172 * 280.633544921875, p1172 * 86.98580932617188, p1172 * 281.633544921875, p1172 * 106.98580932617188, p1172 * 268.633544921875, p1172 * 130.98580932617188);
      v1530.bezierCurveTo(p1172 * 295.633544921875, p1172 * 158.98580932617188, p1172 * 328.633544921875, p1172 * 155.98580932617188, p1172 * 353.633544921875, p1172 * 90.98580932617188);
      v1530.bezierCurveTo(p1172 * 371.633544921875, p1172 * 158.98580932617188, p1172 * 337.633544921875, p1172 * 210.98580932617188, p1172 * 286.633544921875, p1172 * 209.98580932617188);
      v1530.bezierCurveTo(p1172 * 323.633544921875, p1172 * 230.98580932617188, p1172 * 317.633544921875, p1172 * 274.9858093261719, p1172 * 356.633544921875, p1172 * 305.9858093261719);
      v1530.bezierCurveTo(p1172 * 288.633544921875, p1172 * 297.9858093261719, p1172 * 288.633544921875, p1172 * 265.9858093261719, p1172 * 275.633544921875, p1172 * 266.9858093261719);
      v1530.bezierCurveTo(p1172 * 280.633544921875, p1172 * 294.9858093261719, p1172 * 315.633544921875, p1172 * 306.9858093261719, p1172 * 336.633544921875, p1172 * 316.9858093261719);
      v1530.bezierCurveTo(p1172 * 295.633544921875, p1172 * 318.9858093261719, p1172 * 264.633544921875, p1172 * 302.9858093261719, p1172 * 254.633544921875, p1172 * 289.9858093261719);
      v1530.bezierCurveTo(p1172 * 252.633544921875, p1172 * 301.9858093261719, p1172 * 224.633544921875, p1172 * 315.9858093261719, p1172 * 201.633544921875, p1172 * 356.9858093261719);
      v1530.bezierCurveTo(p1172 * 195.633544921875, p1172 * 313.9858093261719, p1172 * 195.633544921875, p1172 * 308.9858093261719, p1172 * 196.633544921875, p1172 * 307.9858093261719);
      v1530.bezierCurveTo(p1172 * 197.633544921875, p1172 * 289.9858093261719, p1172 * 207.633544921875, p1172 * 283.9858093261719, p1172 * 195.633544921875, p1172 * 258.9858093261719);
      v1530.bezierCurveTo(p1172 * 182.633544921875, p1172 * 282.9858093261719, p1172 * 190.633544921875, p1172 * 287.9858093261719, p1172 * 193.633544921875, p1172 * 297.9858093261719);
      v1530.bezierCurveTo(p1172 * 195.633544921875, p1172 * 306.9858093261719, p1172 * 191.633544921875, p1172 * 334.9858093261719, p1172 * 187.633544921875, p1172 * 354.9858093261719);
      v1530.bezierCurveTo(p1172 * 165.633544921875, p1172 * 320.9858093261719, p1172 * 138.633544921875, p1172 * 307.9858093261719, p1172 * 135.633544921875, p1172 * 288.9858093261719);
      v1530.bezierCurveTo(p1172 * 110.633544921875, p1172 * 318.9858093261719, p1172 * 68.633544921875, p1172 * 323.9858093261719, p1172 * 49.633544921875, p1172 * 320.9858093261719);
      v1530.bezierCurveTo(p1172 * 88.633544921875, p1172 * 308.9858093261719, p1172 * 108.633544921875, p1172 * 284.9858093261719, p1172 * 118.633544921875, p1172 * 258.9858093261719);
      v1530.bezierCurveTo(p1172 * 86.633544921875, p1172 * 264.9858093261719, p1172 * 75.633544921875, p1172 * 310.9858093261719, p1172 * 19.633544921875, p1172 * 304.9858093261719);
      v1530.bezierCurveTo(p1172 * 54.633544921875, p1172 * 276.9858093261719, p1172 * 59.633544921875, p1172 * 214.98580932617188, p1172 * 105.633544921875, p1172 * 205.98580932617188);
      v1530.bezierCurveTo(p1172 * 14.633544921875, p1172 * 201.98580932617188, p1172 * 24.633544921875, p1172 * 141.98580932617188, p1172 * 25.633544921875, p1172 * 82.98580932617188);
      v1530.bezierCurveTo(p1172 * 49.633544921875, p1172 * 168.98580932617188, p1172 * 87.633544921875, p1172 * 141.98580932617188, p1172 * 112.633544921875, p1172 * 123.98580932617188);
      v1530.bezierCurveTo(p1172 * 95.633544921875, p1172 * 75.98580932617188, p1172 * 70.633544921875, p1172 * 68.98580932617188, p1172 * 35.633544921875, p1172 * 50.985809326171875);
      v1530.bezierCurveTo(p1172 * 70.633544921875, p1172 * 53.985809326171875, p1172 * 102.633544921875, p1172 * 65.98580932617188, p1172 * 125.633544921875, p1172 * 84.98580932617188);
      v1530.bezierCurveTo(p1172 * 133.633544921875, p1172 * 69.98580932617188, p1172 * 166.633544921875, p1172 * 42.985809326171875, p1172 * 176.633544921875, p1172 * 21.985809326171875);
      v1530.bezierCurveTo(p1172 * 185.633544921875, p1172 * 49.985809326171875, p1172 * 168.633544921875, p1172 * 95.98580932617188, p1172 * 191.633544921875, p1172 * 121.98580932617188);
      v1530.closePath();
      f84(v1530, p1173[0], p1173[0], p1172 * 12);
      return v1529;
    }(v1478 * 0.8, ["#B6222A"]));
    ⵠΔ[673] = [];
    ⵠΔ[673][v624.ᐃᐃᐃ] = f53(f270(v1478 * 0.8, 0, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"]));
    ⵠΔ[673][v624.Δᐃⵠ] = f53(f270(v1478 * 0.8, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"]));
    ⵠΔ[688] = f53(function (p1174, p1175) {
      var v1531 = document.createElement("canvas");
      var v1532 = v1531.getContext("2d");
      v1531.width = p1174 * 158;
      v1531.height = p1174 * 201;
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 96.5, p1174 * 76.421875);
      v1532.bezierCurveTo(p1174 * 100.5, p1174 * 64.421875, p1174 * 103.5, p1174 * 62.421875, p1174 * 110.5, p1174 * 65.421875);
      v1532.bezierCurveTo(p1174 * 116.5, p1174 * 66.421875, p1174 * 117.5, p1174 * 67.421875, p1174 * 112.5, p1174 * 73.421875);
      v1532.bezierCurveTo(p1174 * 107, p1174 * 79.921875, p1174 * 107, p1174 * 79.921875, p1174 * 101.5, p1174 * 86.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 61.5, p1174 * 78.421875);
      v1532.bezierCurveTo(p1174 * 57.5, p1174 * 73.421875, p1174 * 51.5, p1174 * 66.421875, p1174 * 45.5, p1174 * 68.421875);
      v1532.bezierCurveTo(p1174 * 32.5, p1174 * 73.421875, p1174 * 38.5, p1174 * 75.421875, p1174 * 46.5, p1174 * 81.421875);
      v1532.bezierCurveTo(p1174 * 51.5, p1174 * 84.921875, p1174 * 51.5, p1174 * 84.921875, p1174 * 56.5, p1174 * 88.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 116.5, p1174 * 127.421875);
      v1532.bezierCurveTo(p1174 * 124.5, p1174 * 108.421875, p1174 * 129.5, p1174 * 104.421875, p1174 * 141.5, p1174 * 107.421875);
      v1532.bezierCurveTo(p1174 * 156.5, p1174 * 112.421875, p1174 * 153.5, p1174 * 113.421875, p1174 * 132.5, p1174 * 134.421875);
      v1532.bezierCurveTo(p1174 * 123.5, p1174 * 141.921875, p1174 * 123.5, p1174 * 141.921875, p1174 * 114.5, p1174 * 149.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 41.5, p1174 * 134.421875);
      v1532.bezierCurveTo(p1174 * 30.5, p1174 * 119.421875, p1174 * 25.5, p1174 * 111.421875, p1174 * 12.5, p1174 * 115.421875);
      v1532.bezierCurveTo(p1174 * 4.5, p1174 * 120.421875, p1174 * 4.5, p1174 * 121.421875, p1174 * 26.5, p1174 * 142.421875);
      v1532.bezierCurveTo(p1174 * 35, p1174 * 149.921875, p1174 * 35, p1174 * 149.921875, p1174 * 43.5, p1174 * 157.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 78.5, p1174 * 51.921875);
      v1532.bezierCurveTo(p1174 * 99.5, p1174 * 75.921875, p1174 * 110.5, p1174 * 96.921875, p1174 * 118.5, p1174 * 120.921875);
      v1532.bezierCurveTo(p1174 * 121.5, p1174 * 140.921875, p1174 * 107.5, p1174 * 179.921875, p1174 * 75.5, p1174 * 183.921875);
      v1532.bezierCurveTo(p1174 * 30.5, p1174 * 169.921875, p1174 * 37.5, p1174 * 131.921875, p1174 * 34.5, p1174 * 120.921875);
      v1532.bezierCurveTo(p1174 * 41.5, p1174 * 89.921875, p1174 * 61.5, p1174 * 67.921875, p1174 * 78.5, p1174 * 51.921875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 72.5, p1174 * 72.421875);
      v1532.bezierCurveTo(p1174 * 76.5, p1174 * 79.421875, p1174 * 79.5, p1174 * 80.421875, p1174 * 83.5, p1174 * 73.421875);
      v1532.bezierCurveTo(p1174 * 80.5, p1174 * 96.921875, p1174 * 79.5, p1174 * 114.421875, p1174 * 77.5, p1174 * 120.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 42.5, p1174 * 163.421875);
      v1532.bezierCurveTo(p1174 * 62.5, p1174 * 185.421875, p1174 * 86.5, p1174 * 186.421875, p1174 * 111.5, p1174 * 165.421875);
      v1532.bezierCurveTo(p1174 * 107.5, p1174 * 176.421875, p1174 * 95.5, p1174 * 187.421875, p1174 * 75.5, p1174 * 188.421875);
      v1532.bezierCurveTo(p1174 * 53.5, p1174 * 188.421875, p1174 * 43.5, p1174 * 171.421875, p1174 * 42.5, p1174 * 164.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 79.5, p1174 * 61.421875);
      v1532.bezierCurveTo(p1174 * 88.5, p1174 * 31.421875, p1174 * 81.5, p1174 * 16.421875, p1174 * 75.5, p1174 * 7.421875);
      v1532.bezierCurveTo(p1174 * 77.5, p1174 * 28.421875, p1174 * 77.5, p1174 * 37.421875, p1174 * 68.5, p1174 * 42.421875);
      v1532.bezierCurveTo(p1174 * 79.5, p1174 * 57.421875, p1174 * 79.5, p1174 * 58.421875, p1174 * 80.5, p1174 * 61.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      v1532.beginPath();
      v1532.lineCap = "round";
      v1532.lineJoin = "round";
      v1532.moveTo(p1174 * 72.5, p1174 * 72.421875);
      v1532.bezierCurveTo(p1174 * 76.5, p1174 * 79.421875, p1174 * 79.5, p1174 * 80.421875, p1174 * 83.5, p1174 * 73.421875);
      v1532.bezierCurveTo(p1174 * 80.5, p1174 * 96.921875, p1174 * 79.5, p1174 * 114.421875, p1174 * 77.5, p1174 * 120.421875);
      v1532.closePath();
      f84(v1532, p1175[0], p1175[0], p1174 * 10);
      return v1531;
    }(v1478 * 0.8, ["#B6222A"]));
    ⵠΔ[902] = [];
    ⵠΔ[902][v624.ᐃᐃᐃ] = f53(f101(v1478 * 0.4, 0, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0));
    ⵠΔ[902][v624.Δᐃⵠ] = f53(f101(v1478 * 0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ⵠΔ[903] = [];
    ⵠΔ[903][v624.ᐃᐃᐃ] = f53(f101(v1478 * 0.4, 0, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1));
    ⵠΔ[903][v624.Δᐃⵠ] = f53(f101(v1478 * 0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1));
    ⵠΔ[v624.ⲆⵠⵠⲆⲆⲆⲆ] = [];
    ⵠΔ[v624.ⲆⵠⵠⲆⲆⲆⲆ][v624.ᐃᐃᐃ] = f53(f101(v1478 * 0.4, 0, ["#1e2021", "#2973a5", "#ffffff", "#ffff00", "#000000", "#03243f", "#f2ec30", "#162f6d"], 0));
    ⵠΔ[v624.ⲆⵠⵠⲆⲆⲆⲆ][v624.Δᐃⵠ] = f53(f101(v1478 * 0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ⵠΔ[904] = f53(f102(v1478 * 0.4, ["#B6222A"]));
    ⵠΔ[905] = f53(f102(v1478 * 0.4, ["#B6222A"]));
    ⵠΔ[v624.ᐃⵠⲆᐃΔΔᐃᐃᐃ] = f53(f102(v1478 * 0.4, ["#B6222A"]));
    ⵠΔ[230] = f53(f184(v1478 * 0.35, v16, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]));
    ⵠΔ[229] = f53(f142(v1478 * 0.35, true, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]));
    ⵠΔ[886] = [];
    ⵠΔ[886][v624.ᐃᐃᐃ] = f53(f145(v1478 * 0.35, 0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1));
    ⵠΔ[886][v624.Δᐃⵠ] = f53(f145(v1478 * 0.35, 0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1));
    ⵠΔ[887] = [];
    ⵠΔ[887][v624.ᐃᐃᐃ] = f53(f145(v1478 * 0.35, 0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0));
    ⵠΔ[887][v624.Δᐃⵠ] = f53(f145(v1478 * 0.35, 0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0));
    ⵠΔ[894] = [];
    ⵠΔ[894][v624.ᐃᐃᐃ] = f53(f146(v1478 * 0.35, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ⵠΔ[894][v624.Δᐃⵠ] = f53(f146(v1478 * 0.35, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ⵠΔ[895] = [];
    ⵠΔ[895][v624.ᐃᐃᐃ] = f53(f135(v1478 * 0.42, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ⵠΔ[895][v624.Δᐃⵠ] = f53(f135(v1478 * 0.42, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ⵠΔ[896] = [];
    ⵠΔ[896][v624.ᐃᐃᐃ] = f53(f146(v1478 * 0.35, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ⵠΔ[896][v624.Δᐃⵠ] = f53(f146(v1478 * 0.35, 0, ["#0c0c0d", "#613577", "#462966"]));
    ⵠΔ[897] = [];
    ⵠΔ[897][v624.ᐃᐃᐃ] = f53(f135(v1478 * 0.42, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ⵠΔ[897][v624.Δᐃⵠ] = f53(f135(v1478 * 0.42, 0, ["#0c0c0d", "#613577", "#462966"]));
    ⵠΔ[888] = f53(f144(v1478 * 0.35, ["#B6222A"]));
    ⵠΔ[889] = f53(f146(v1478 * 0.35, 0, [undefined, "#B6222A"]));
    ⵠΔ[890] = f53(f135(v1478 * 0.35, 0, [undefined, "#B6222A"]));
    ⵠΔ[891] = f53(f144(v1478 * 0.35, ["#22E066"]));
    ⵠΔ[892] = f53(f146(v1478 * 0.35, 0, [vVVVUndefined202, "#22E066"]));
    ⵠΔ[893] = f53(f135(v1478 * 0.35, 0, [undefined, "#22E066"]));
    ⵠΔ[48] = [];
    ⵠΔ[48][v624.ᐃᐃᐃ] = f53(f163(v1478 * 0.3, vVVV1622, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]));
    ⵠΔ[48][v624.Δᐃⵠ] = f53(f163(v1478 * 0.3, true, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"]));
    ⵠΔ[47] = [];
    ⵠΔ[47][v624.ᐃᐃᐃ] = f53(f169(v1478 * 0.45, true, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"]));
    ⵠΔ[47][v624.Δᐃⵠ] = f53(f169(v1478 * 0.45, v16, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"]));
    ⵠΔ[141] = [];
    ⵠΔ[141][v624.ᐃᐃᐃ] = f53(f280(v1478 * 0.63, vVV16, ["#1e2021", "#352E1E", "#4C3B19", "#574122"]));
    ⵠΔ[141][v624.Δᐃⵠ] = f53(f280(v1478 * 0.63, vVVVV163, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ⵠΔ[125] = [];
    ⵠΔ[125][v624.ᐃᐃᐃ] = f53(f273(v1478, true, ["#1e2021", "#332715", "#4C3B19", "#574122"]));
    ⵠΔ[125][v624.Δᐃⵠ] = f53(f273(v1478, true, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ⵠΔ[221] = [];
    ⵠΔ[221][v624.ᐃᐃᐃ] = Δⵠ.ᐃᐃⲆᐃⵠΔⲆⲆⲆ;
    ⵠΔ[221][v624.Δᐃⵠ] = Δⵠ.ΔᐃΔⲆⲆΔᐃⵠⵠ;
    ⵠΔ[190] = [];
    ⵠΔ[190][v624.ᐃᐃᐃ] = f53(f94(v1478 * 0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⵠΔ[190][v624.Δᐃⵠ] = f53(f94(v1478 * 0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⵠΔ[853] = [ⵠΔ[190]];
    ⵠΔ[853][1] = [];
    ⵠΔ[853][2] = [];
    ⵠΔ[853][1][v624.ᐃᐃᐃ] = f53(f95(v1478 * 0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⵠΔ[853][1][v624.Δᐃⵠ] = f53(f95(v1478 * 0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⵠΔ[853][2][v624.ᐃᐃᐃ] = f53(f96(v1478 * 0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⵠΔ[853][2][v624.Δᐃⵠ] = f53(f96(v1478 * 0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⵠΔ[49] = [];
    ⵠΔ[49][v624.ᐃᐃᐃ] = f53(f88(3 - Math.PI / 2, f268(v1478 * 0.6, true, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"])));
    ⵠΔ[49][v624.Δᐃⵠ] = f53(f88(3 - Math.PI / 2, f268(v1478 * 0.6, true, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"])));
    ⵠΔ[728] = [];
    ⵠΔ[728][v624.ᐃᐃᐃ] = f53(f112(v1478 * 0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
    ⵠΔ[728][v624.Δᐃⵠ] = f53(f112(v1478 * 0.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0));
    ⵠΔ[798] = f53(function (p1176, p1177) {
      var v1533 = document.createElement("canvas");
      var v1534 = v1533.getContext("2d");
      v1533.width = p1176 * 650;
      v1533.height = p1176 * 650;
      v1534.scale(1.9, 1.9);
      v1534.save();
      v1534.translate(p1176 * 202.5, p1176 * 147.5);
      f83(v1534, p1176 * -96.5, p1176 * -21.5, p1176 * 193, p1176 * 193, p1176 * 0);
      v1534.restore();
      f84(v1534, p1177[4], p1177[1], p1176 * 12);
      v1534.save();
      v1534.translate(p1176 * 203.5, p1176 * 121.5);
      f83(v1534, p1176 * -115.5, p1176 * -20.5, p1176 * 231, p1176 * 41, p1176 * 10);
      v1534.restore();
      f84(v1534, p1177[3], p1177[1], p1176 * 12);
      v1534.save();
      v1534.translate(p1176 * 203.5, p1176 * 299);
      f83(v1534, p1176 * -115.5, p1176 * -20, p1176 * 231, p1176 * 40, p1176 * 10);
      v1534.restore();
      f84(v1534, p1177[3], p1177[1], p1176 * 12);
      v1534.save();
      v1534.translate(p1176 * 298.5, p1176 * 210);
      f83(v1534, p1176 * -20.5, p1176 * -109, p1176 * 41, p1176 * 218, p1176 * 10);
      v1534.restore();
      f84(v1534, p1177[3], p1177[1], p1176 * 12);
      v1534.save();
      v1534.translate(p1176 * 108.5, p1176 * 210);
      f83(v1534, p1176 * -20.5, p1176 * -109, p1176 * 41, p1176 * 218, p1176 * 10);
      v1534.restore();
      f84(v1534, p1177[3], p1177[1], p1176 * 12);
      v1534.save();
      v1534.translate(p1176 * 204, p1176 * 121.5);
      f83(v1534, p1176 * -92, p1176 * -9.5, p1176 * 184, p1176 * 19, p1176 * 10);
      v1534.restore();
      f84(v1534, p1177[3], p1177[3], p1176 * 10);
      v1534.save();
      v1534.translate(p1176 * 197, p1176 * 299);
      f83(v1534, p1176 * 85, p1176 * -9, p1176 * -170, p1176 * 18, p1176 * 10);
      v1534.restore();
      f84(v1534, p1177[3], p1177[3], p1176 * 10);
      v1534.beginPath();
      v1534.lineCap = "round";
      v1534.lineJoin = "round";
      v1534.moveTo(p1176 * 94, p1176 * 317);
      v1534.bezierCurveTo(p1176 * 110.5, p1176 * 299.5, p1176 * 110.5, p1176 * 299.5, p1176 * 127, p1176 * 282);
      v1534.closePath();
      f84(v1534, vVUndefined20, p1177[1], p1176 * 12);
      v1534.beginPath();
      v1534.lineCap = "round";
      v1534.lineJoin = "round";
      v1534.moveTo(p1176 * 279, p1176 * 142);
      v1534.bezierCurveTo(p1176 * 296.5, p1176 * 125.5, p1176 * 296.5, p1176 * 125.5, p1176 * 314, p1176 * 109);
      v1534.closePath();
      f84(v1534, undefined, p1177[1], p1176 * 12);
      v1534.beginPath();
      v1534.lineCap = "round";
      v1534.lineJoin = "round";
      v1534.moveTo(p1176 * 93, p1176 * 106);
      v1534.bezierCurveTo(p1176 * 110.5, p1176 * 124, p1176 * 110.5, p1176 * 124, p1176 * 128, p1176 * 142);
      v1534.closePath();
      f84(v1534, undefined, p1177[1], p1176 * 12);
      v1534.beginPath();
      v1534.lineCap = "round";
      v1534.lineJoin = "round";
      v1534.moveTo(p1176 * 281, p1176 * 282);
      v1534.bezierCurveTo(p1176 * 296, p1176 * 297.5, p1176 * 296, p1176 * 297.5, p1176 * 311, p1176 * 313);
      v1534.closePath();
      f84(v1534, undefined, p1177[1], p1176 * 12);
      return v1533;
    }(v1478 * 0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
    ⵠΔ[729] = f53(function (p1178, p1179) {
      var v1535 = document.createElement("canvas");
      var v1536 = v1535.getContext("2d");
      v1535.width = p1178 * 400;
      v1535.height = p1178 * 400;
      v1536.save();
      v1536.translate(p1178 * 202.5, p1178 * 147.5);
      f83(v1536, p1178 * -96.5, p1178 * -21.5, p1178 * 193, p1178 * 43, p1178 * 0);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 202.5, p1178 * 190.5);
      f83(v1536, p1178 * 96.5, p1178 * -21.5, p1178 * -193, p1178 * 43, p1178 * 0);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 202.5, p1178 * 233.5);
      f83(v1536, p1178 * -96.5, p1178 * -20.5, p1178 * 193, p1178 * 41, p1178 * 0);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 202.5, p1178 * 275);
      f83(v1536, p1178 * 96.5, p1178 * -21, p1178 * -193, p1178 * 42, p1178 * 0);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 203.5, p1178 * 121.5);
      f83(v1536, p1178 * -115.5, p1178 * -20.5, p1178 * 231, p1178 * 41, p1178 * 10);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 203.5, p1178 * 299);
      f83(v1536, p1178 * -115.5, p1178 * -20, p1178 * 231, p1178 * 40, p1178 * 10);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 298.5, p1178 * 210);
      f83(v1536, p1178 * -20.5, p1178 * -109, p1178 * 41, p1178 * 218, p1178 * 10);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      v1536.save();
      v1536.translate(p1178 * 108.5, p1178 * 210);
      f83(v1536, p1178 * -20.5, p1178 * -109, p1178 * 41, p1178 * 218, p1178 * 10);
      v1536.restore();
      f84(v1536, p1179[0], p1179[0], p1178 * 12);
      return v1535;
    }(v1478 * 0.3, ["#BB0000"]));
    ⵠΔ[658] = f120(1, [{
      f: f279,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⵠΔ[150] = f120(1.5, [{
      f: f249,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#120202", "#750a0a", "#991616", "#120202"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ⵠΔ[669] = f278(v1478 * 0.35, ["#072428", "#67A242", "#67A242"], 0);
    ⵠΔ[670] = f278(v1478 * 0.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1);
    ⵠΔ[671] = f278(v1478 * 0.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2);
    ⵠΔ[672] = f278(v1478 * 0.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3);
    if (ᐃΔⵠⲆΔᐃΔ) {
      ⵠΔ[278] = f53(function (p1180) {
        var v1537 = document.createElement("canvas");
        var v1538 = v1537.getContext("2d");
        var v1539 = p1180 * 200;
        var v1540 = p1180 * 180;
        var v1541 = p1180 * 8;
        v1537.width = v1539;
        v1537.height = v1540;
        v1538.beginPath();
        f83(v1538, 0, 0, v1539, v1540 - v1541, v1541);
        v1538.globalAlpha = 0.8;
        f84(v1538, "#1D6055");
        v1538.globalAlpha = 1;
        var vF162 = f162(p1180, "Leaderboard", 25, "#FFF");
        v1538.drawImage(vF162, (v1539 - vF162.width) / 2, p1180 * 5);
        return v1537;
      }(v1478));
    } else {
      ⵠΔ[278] = f53(function (p1181) {
        var v1542 = document.createElement("canvas");
        var v1543 = v1542.getContext("2d");
        var v1544 = p1181 * 200;
        var v1545 = p1181 * 270;
        var v1546 = p1181 * 8;
        v1542.width = v1544;
        v1542.height = v1545 + 20;
        v1543.beginPath();
        f83(v1543, 0, 0, v1544, v1545 - v1546, v1546);
        v1543.globalAlpha = 0.5;
        f84(v1543, "#1D6055");
        v1543.globalAlpha = 1;
        var vF1622 = f162(p1181, "Leaderboard", 25, "#FFF");
        v1543.drawImage(vF1622, (v1544 - vF1622.width) / 2, p1181 * 5);
        return v1542;
      }(v1478));
    }
    if (ᐃΔⵠⲆΔᐃΔ) {
      ⵠΔ[267] = f53(function (p1182) {
        var v1547 = document.createElement("canvas");
        var v1548 = v1547.getContext("2d");
        var v1549 = p1182 * 335;
        var v1550 = p1182 * 250;
        var v1551 = p1182 * 120;
        var v1552 = p1182 * 20;
        var v1553 = p1182 * 35;
        var v1554 = p1182 * 65;
        var v1555 = p1182 * 2;
        var v1556 = p1182 * 4;
        v1547.width = v1549;
        v1547.height = v1551;
        v1548.beginPath();
        v1548.translate(0, p1182 * 15);
        f83(v1548, v1554, 0, v1550, v1552, v1555);
        f84(v1548, null, "#69A148", v1556);
        v1548.translate(0, v1553);
        f83(v1548, v1554, 0, v1550, v1552, v1555);
        f84(v1548, null, "#AF352A", v1556);
        v1548.translate(0, v1553);
        f83(v1548, v1554, 0, v1550, v1552, v1555);
        f84(v1548, null, "#669BB1", v1556);
        return v1547;
      }(0.75));
    } else {
      ⵠΔ[267] = f53(function (p1183) {
        var v1557 = document.createElement("canvas");
        var v1558 = v1557.getContext("2d");
        var v1559 = p1183 * 950;
        var v1560 = p1183 * 180;
        var v1561 = p1183 * 50;
        var v1562 = p1183 * 20;
        var v1563 = p1183 * 240;
        var v1564 = p1183 * 35;
        var v1565 = p1183 * 1;
        var v1566 = p1183 * 4;
        var v1567 = p1183 * 4;
        v1557.width = v1559;
        v1557.height = v1561;
        v1558.translate(0, p1183 * 15);
        f83(v1558, v1564, v1565, v1560, v1562, v1566);
        f84(v1558, null, "#69A148", v1567);
        var v1568 = ⵠΔ[669];
        v1558.drawImage(v1568, 17, -8);
        v1558.translate(v1563, 0);
        f83(v1558, v1564, v1565, v1560, v1562, v1566);
        f84(v1558, null, "#AF352A", v1567);
        v1568 = ⵠΔ[671];
        v1558.drawImage(v1568, 17, -9);
        v1558.translate(v1563, 0);
        f83(v1558, v1564, v1565, v1560, v1562, v1566);
        f84(v1558, null, "#669BB1", v1567);
        v1568 = ⵠΔ[670];
        v1558.drawImage(v1568, 17, -8);
        v1558.translate(v1563, 0);
        f83(v1558, v1564, v1565, v1560, v1562, v1566);
        f84(v1558, null, "#074A87", v1567);
        v1568 = ⵠΔ[672];
        v1558.drawImage(v1568, 17, -8);
        return v1557;
      }(v1478));
    }
    if (ᐃΔⵠⲆΔᐃΔ) {
      ⵠΔ[608] = f53(f261(0.75));
    } else {
      ⵠΔ[608] = f53(f261(v1478));
    }
    ⵠΔ[792] = f53(f230(v1478 * 0.16, true, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]));
    ⵠΔ[537] = f53(f88(5.8, f134(v1478 * 0.15, vV162, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])));
    ⵠΔ[283] = [];
    ⵠΔ[465] = [];
    for (v1479 = 0; v1479 < 18; v1479++) {
      ⵠΔ[465][v1479] = f162(v1478, "" + (v1479 + 1), 12, "#FFF");
    }
    ⵠΔ[708] = [];
    ⵠΔ[708].push(f53(f263(v1478 * 0.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"])));
    ⵠΔ[708].push(f53(f263(v1478 * 0.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1)));
    ⵠΔ[708].push(f53(f263(v1478 * 0.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1)));
    ⵠΔ[725] = [];
    ⵠΔ[725].push(f53(function (p1184) {
      var v1569 = document.createElement("canvas");
      var v1570 = v1569.getContext("2d");
      v1569.width = p1184 * 321;
      v1569.height = p1184 * 345;
      v1570.translate(0, p1184 * 5);
      v1570.translate(0, p1184 * 20);
      f89(v1570, p1184 * 160.5, p1184 * 159.5, p1184 * 156.39595138242822);
      f84(v1570, "#322413", "#322413", p1184 * 4);
      v1570.translate(0, p1184 * -20);
      f89(v1570, p1184 * 160.5, p1184 * 159.5, p1184 * 156.39595138242822);
      f84(v1570, "#392C16", "#5E3E1A", p1184 * 10);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 31.999969482421875, p1184 * 163.07290649414062);
      v1570.bezierCurveTo(p1184 * 22.999969482421875, p1184 * 67.07290649414062, p1184 * 106, p1184 * 20.072906494140625, p1184 * 162, p1184 * 23.072906494140625);
      v1570.bezierCurveTo(p1184 * 269.9999694824219, p1184 * 31.072906494140625, p1184 * 292.9999694824219, p1184 * 120.07290649414062, p1184 * 294.9999694824219, p1184 * 161.07290649414062);
      v1570.bezierCurveTo(p1184 * 165.49996948242188, p1184 * 162.07290649414062, p1184 * 165.49996948242188, p1184 * 162.07290649414062, p1184 * 35.999969482421875, p1184 * 163.07290649414062);
      v1570.closePath();
      f84(v1570, "#12432D");
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 32.999969482421875, p1184 * 165.07290649414062);
      v1570.bezierCurveTo(p1184 * 16.999969482421875, p1184 * 221.07290649414062, p1184 * 85, p1184 * 289.0729064941406, p1184 * 156, p1184 * 294.0729064941406);
      v1570.bezierCurveTo(p1184 * 263.9999694824219, p1184 * 293.0729064941406, p1184 * 295.9999694824219, p1184 * 199.07290649414062, p1184 * 294.9999694824219, p1184 * 159.07290649414062);
      v1570.closePath();
      f84(v1570, "#3A2A0D");
      f89(v1570, p1184 * 161, p1184 * 158.07290649414062, p1184 * 133.4053971921676);
      f84(v1570, vVVVVUndefined117, "#5E3E1A", p1184 * 10);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 31.999969482421875, p1184 * 161.62844848632812);
      v1570.bezierCurveTo(p1184 * 162.49996948242188, p1184 * 161.62844848632812, p1184 * 162.49996948242188, p1184 * 161.62844848632812, p1184 * 292.9999694824219, p1184 * 161.62844848632812);
      v1570.closePath();
      f84(v1570, vVVVUndefined20, "#5E3E1A", p1184 * 12);
      v1570.translate(0, p1184 * 8);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 66, p1184 * 158.29513549804688);
      v1570.bezierCurveTo(p1184 * 86, p1184 * 158.29513549804688, p1184 * 86, p1184 * 158.29513549804688, p1184 * 106, p1184 * 158.29513549804688);
      v1570.closePath();
      f84(v1570, vVUndefined21, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 57.999969482421875, p1184 * 117.29513549804688);
      v1570.bezierCurveTo(p1184 * 85, p1184 * 128.29513549804688, p1184 * 85, p1184 * 128.29513549804688, p1184 * 113, p1184 * 139.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 95, p1184 * 90.29513549804688);
      v1570.bezierCurveTo(p1184 * 112, p1184 * 105.79513549804688, p1184 * 112, p1184 * 105.79513549804688, p1184 * 129, p1184 * 121.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 116, p1184 * 52.850677490234375);
      v1570.bezierCurveTo(p1184 * 130, p1184 * 83.85067749023438, p1184 * 130, p1184 * 83.85067749023438, p1184 * 144, p1184 * 114.85067749023438);
      v1570.closePath();
      f84(v1570, vVVUndefined212, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 159, p1184 * 61.295135498046875);
      v1570.bezierCurveTo(p1184 * 160.49996948242188, p1184 * 92.29513549804688, p1184 * 160.49996948242188, p1184 * 92.29513549804688, p1184 * 160, p1184 * 123.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 203, p1184 * 51.295135498046875);
      v1570.bezierCurveTo(p1184 * 190.49996948242188, p1184 * 83.29513549804688, p1184 * 190.49996948242188, p1184 * 83.29513549804688, p1184 * 176, p1184 * 115.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 225, p1184 * 89.29513549804688);
      v1570.bezierCurveTo(p1184 * 210.49996948242188, p1184 * 104.79513549804688, p1184 * 210.49996948242188, p1184 * 104.79513549804688, p1184 * 194, p1184 * 120.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 266.9999694824219, p1184 * 112.29513549804688);
      v1570.bezierCurveTo(p1184 * 233.49996948242188, p1184 * 127.29513549804688, p1184 * 233.49996948242188, p1184 * 127.29513549804688, p1184 * 199, p1184 * 142.29513549804688);
      v1570.closePath();
      f84(v1570, vVVVVUndefined21, "#c7a726", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 256.9999694824219, p1184 * 155.29513549804688);
      v1570.bezierCurveTo(p1184 * 238.49996948242188, p1184 * 156.29513549804688, p1184 * 238.49996948242188, p1184 * 156.29513549804688, p1184 * 219, p1184 * 157.29513549804688);
      v1570.closePath();
      f84(v1570, vVVUndefined212, "#c7a726", p1184 * 12);
      v1570.translate(0, p1184 * -8);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 66, p1184 * 158.29513549804688);
      v1570.bezierCurveTo(p1184 * 86, p1184 * 158.29513549804688, p1184 * 86, p1184 * 158.29513549804688, p1184 * 106, p1184 * 158.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 57.999969482421875, p1184 * 117.29513549804688);
      v1570.bezierCurveTo(p1184 * 85, p1184 * 128.29513549804688, p1184 * 85, p1184 * 128.29513549804688, p1184 * 113, p1184 * 139.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 95, p1184 * 90.29513549804688);
      v1570.bezierCurveTo(p1184 * 112, p1184 * 105.79513549804688, p1184 * 112, p1184 * 105.79513549804688, p1184 * 129, p1184 * 121.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 116, p1184 * 52.850677490234375);
      v1570.bezierCurveTo(p1184 * 130, p1184 * 83.85067749023438, p1184 * 130, p1184 * 83.85067749023438, p1184 * 144, p1184 * 114.85067749023438);
      v1570.closePath();
      f84(v1570, undefined, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 159, p1184 * 61.295135498046875);
      v1570.bezierCurveTo(p1184 * 160.49996948242188, p1184 * 92.29513549804688, p1184 * 160.49996948242188, p1184 * 92.29513549804688, p1184 * 160, p1184 * 123.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 203, p1184 * 51.295135498046875);
      v1570.bezierCurveTo(p1184 * 190.49996948242188, p1184 * 83.29513549804688, p1184 * 190.49996948242188, p1184 * 83.29513549804688, p1184 * 176, p1184 * 115.29513549804688);
      v1570.closePath();
      f84(v1570, vVUndefined22, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 225, p1184 * 89.29513549804688);
      v1570.bezierCurveTo(p1184 * 210.49996948242188, p1184 * 104.79513549804688, p1184 * 210.49996948242188, p1184 * 104.79513549804688, p1184 * 194, p1184 * 120.29513549804688);
      v1570.closePath();
      f84(v1570, undefined, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 266.9999694824219, p1184 * 112.29513549804688);
      v1570.bezierCurveTo(p1184 * 233.49996948242188, p1184 * 127.29513549804688, p1184 * 233.49996948242188, p1184 * 127.29513549804688, p1184 * 199, p1184 * 142.29513549804688);
      v1570.closePath();
      f84(v1570, vVUndefined19, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 256.9999694824219, p1184 * 155.29513549804688);
      v1570.bezierCurveTo(p1184 * 238.49996948242188, p1184 * 156.29513549804688, p1184 * 238.49996948242188, p1184 * 156.29513549804688, p1184 * 219, p1184 * 157.29513549804688);
      v1570.closePath();
      f84(v1570, vVVVUndefined202, "#EDCE4F", p1184 * 12);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 94.00003051757812, p1184 * 164.40341186523438);
      v1570.bezierCurveTo(p1184 * 162.50003051757812, p1184 * 164.40341186523438, p1184 * 230.00003051757812, p1184 * 165.40341186523438, p1184 * 231.00003051757812, p1184 * 164.40341186523438);
      v1570.bezierCurveTo(p1184 * 214.00003051757812, p1184 * 267.4034118652344, p1184 * 92.00003051757812, p1184 * 243.40341186523438, p1184 * 93.00003051757812, p1184 * 165.40341186523438);
      v1570.closePath();
      f84(v1570, "#704618", "#5D3D1A", p1184 * 8);
      v1570.beginPath();
      v1570.lineCap = "round";
      v1570.lineJoin = "round";
      v1570.moveTo(p1184 * 96, p1184 * 166);
      v1570.bezierCurveTo(p1184 * 88, p1184 * 117, p1184 * 129, p1184 * 92, p1184 * 161, p1184 * 91);
      v1570.bezierCurveTo(p1184 * 201, p1184 * 90, p1184 * 223, p1184 * 121, p1184 * 230, p1184 * 161);
      v1570.closePath();
      f84(v1570, "#ECBE35", "#EDCE4F", p1184 * 8);
      f89(v1570, p1184 * 160.00003051757812, p1184 * 166.49432373046875, p1184 * 28.30194339616981);
      f84(v1570, "#392C16", "#5E3E1A", p1184 * 10);
      return v1569;
    }(v1478 * 0.22)));
    ⵠΔ[725].push(f53(function (p1185) {
      var v1571 = document.createElement("canvas");
      var v1572 = v1571.getContext("2d");
      v1571.width = p1185 * 321;
      v1571.height = p1185 * 345;
      v1572.translate(0, p1185 * 5);
      v1572.translate(0, p1185 * 20);
      f89(v1572, p1185 * 160.5, p1185 * 159.5, p1185 * 156.39595138242822);
      f84(v1572, "#322413", "#322413", p1185 * 4);
      v1572.translate(0, p1185 * -20);
      f89(v1572, p1185 * 160.5, p1185 * 159.5, p1185 * 156.39595138242822);
      f84(v1572, "#392C16", "#5E3E1A", p1185 * 10);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 31.999969482421875, p1185 * 163.07290649414062);
      v1572.bezierCurveTo(p1185 * 22.999969482421875, p1185 * 67.07290649414062, p1185 * 106, p1185 * 20.072906494140625, p1185 * 162, p1185 * 23.072906494140625);
      v1572.bezierCurveTo(p1185 * 269.9999694824219, p1185 * 31.072906494140625, p1185 * 292.9999694824219, p1185 * 120.07290649414062, p1185 * 294.9999694824219, p1185 * 161.07290649414062);
      v1572.bezierCurveTo(p1185 * 165.49996948242188, p1185 * 162.07290649414062, p1185 * 165.49996948242188, p1185 * 162.07290649414062, p1185 * 35.999969482421875, p1185 * 163.07290649414062);
      v1572.closePath();
      f84(v1572, "#3A2A0D");
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 32.999969482421875, p1185 * 165.07290649414062);
      v1572.bezierCurveTo(p1185 * 16.999969482421875, p1185 * 221.07290649414062, p1185 * 85, p1185 * 289.0729064941406, p1185 * 156, p1185 * 294.0729064941406);
      v1572.bezierCurveTo(p1185 * 263.9999694824219, p1185 * 293.0729064941406, p1185 * 295.9999694824219, p1185 * 199.07290649414062, p1185 * 294.9999694824219, p1185 * 159.07290649414062);
      v1572.closePath();
      f84(v1572, "#071A1B");
      f89(v1572, p1185 * 161, p1185 * 158.07290649414062, p1185 * 133.4053971921676);
      f84(v1572, vVUndefined19, "#5E3E1A", p1185 * 10);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 31.999969482421875, p1185 * 161.62844848632812);
      v1572.bezierCurveTo(p1185 * 162.49996948242188, p1185 * 161.62844848632812, p1185 * 162.49996948242188, p1185 * 161.62844848632812, p1185 * 292.9999694824219, p1185 * 161.62844848632812);
      v1572.closePath();
      f84(v1572, undefined, "#5E3E1A", p1185 * 12);
      v1572.translate(0, p1185 * 8);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 66, p1185 * 158.29513549804688);
      v1572.bezierCurveTo(p1185 * 86, p1185 * 158.29513549804688, p1185 * 86, p1185 * 158.29513549804688, p1185 * 106, p1185 * 158.29513549804688);
      v1572.closePath();
      f84(v1572, vVVUndefined202, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 57.999969482421875, p1185 * 117.29513549804688);
      v1572.bezierCurveTo(p1185 * 85, p1185 * 128.29513549804688, p1185 * 85, p1185 * 128.29513549804688, p1185 * 113, p1185 * 139.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 95, p1185 * 90.29513549804688);
      v1572.bezierCurveTo(p1185 * 112, p1185 * 105.79513549804688, p1185 * 112, p1185 * 105.79513549804688, p1185 * 129, p1185 * 121.29513549804688);
      v1572.closePath();
      f84(v1572, vUndefined, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 116, p1185 * 52.850677490234375);
      v1572.bezierCurveTo(p1185 * 130, p1185 * 83.85067749023438, p1185 * 130, p1185 * 83.85067749023438, p1185 * 144, p1185 * 114.85067749023438);
      v1572.closePath();
      f84(v1572, vVVVVUndefined20, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 159, p1185 * 61.295135498046875);
      v1572.bezierCurveTo(p1185 * 160.49996948242188, p1185 * 92.29513549804688, p1185 * 160.49996948242188, p1185 * 92.29513549804688, p1185 * 160, p1185 * 123.29513549804688);
      v1572.closePath();
      f84(v1572, vVVVVUndefined21, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 203, p1185 * 51.295135498046875);
      v1572.bezierCurveTo(p1185 * 190.49996948242188, p1185 * 83.29513549804688, p1185 * 190.49996948242188, p1185 * 83.29513549804688, p1185 * 176, p1185 * 115.29513549804688);
      v1572.closePath();
      f84(v1572, vUndefined, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 225, p1185 * 89.29513549804688);
      v1572.bezierCurveTo(p1185 * 210.49996948242188, p1185 * 104.79513549804688, p1185 * 210.49996948242188, p1185 * 104.79513549804688, p1185 * 194, p1185 * 120.29513549804688);
      v1572.closePath();
      f84(v1572, vVUndefined19, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 266.9999694824219, p1185 * 112.29513549804688);
      v1572.bezierCurveTo(p1185 * 233.49996948242188, p1185 * 127.29513549804688, p1185 * 233.49996948242188, p1185 * 127.29513549804688, p1185 * 199, p1185 * 142.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#281C08", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 256.9999694824219, p1185 * 155.29513549804688);
      v1572.bezierCurveTo(p1185 * 238.49996948242188, p1185 * 156.29513549804688, p1185 * 238.49996948242188, p1185 * 156.29513549804688, p1185 * 219, p1185 * 157.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#281C08", p1185 * 12);
      v1572.translate(0, p1185 * -8);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 66, p1185 * 158.29513549804688);
      v1572.bezierCurveTo(p1185 * 86, p1185 * 158.29513549804688, p1185 * 86, p1185 * 158.29513549804688, p1185 * 106, p1185 * 158.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 57.999969482421875, p1185 * 117.29513549804688);
      v1572.bezierCurveTo(p1185 * 85, p1185 * 128.29513549804688, p1185 * 85, p1185 * 128.29513549804688, p1185 * 113, p1185 * 139.29513549804688);
      v1572.closePath();
      f84(v1572, vVVVVUndefined20, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 95, p1185 * 90.29513549804688);
      v1572.bezierCurveTo(p1185 * 112, p1185 * 105.79513549804688, p1185 * 112, p1185 * 105.79513549804688, p1185 * 129, p1185 * 121.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 116, p1185 * 52.850677490234375);
      v1572.bezierCurveTo(p1185 * 130, p1185 * 83.85067749023438, p1185 * 130, p1185 * 83.85067749023438, p1185 * 144, p1185 * 114.85067749023438);
      v1572.closePath();
      f84(v1572, vVVVUndefined2022, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 159, p1185 * 61.295135498046875);
      v1572.bezierCurveTo(p1185 * 160.49996948242188, p1185 * 92.29513549804688, p1185 * 160.49996948242188, p1185 * 92.29513549804688, p1185 * 160, p1185 * 123.29513549804688);
      v1572.closePath();
      f84(v1572, vVUndefined20, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 203, p1185 * 51.295135498046875);
      v1572.bezierCurveTo(p1185 * 190.49996948242188, p1185 * 83.29513549804688, p1185 * 190.49996948242188, p1185 * 83.29513549804688, p1185 * 176, p1185 * 115.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 225, p1185 * 89.29513549804688);
      v1572.bezierCurveTo(p1185 * 210.49996948242188, p1185 * 104.79513549804688, p1185 * 210.49996948242188, p1185 * 104.79513549804688, p1185 * 194, p1185 * 120.29513549804688);
      v1572.closePath();
      f84(v1572, vVVVUndefined212, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 266.9999694824219, p1185 * 112.29513549804688);
      v1572.bezierCurveTo(p1185 * 233.49996948242188, p1185 * 127.29513549804688, p1185 * 233.49996948242188, p1185 * 127.29513549804688, p1185 * 199, p1185 * 142.29513549804688);
      v1572.closePath();
      f84(v1572, undefined, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 256.9999694824219, p1185 * 155.29513549804688);
      v1572.bezierCurveTo(p1185 * 238.49996948242188, p1185 * 156.29513549804688, p1185 * 238.49996948242188, p1185 * 156.29513549804688, p1185 * 219, p1185 * 157.29513549804688);
      v1572.closePath();
      f84(v1572, vVUndefined22, "#5E3C10", p1185 * 12);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 96, p1185 * 166);
      v1572.bezierCurveTo(p1185 * 88, p1185 * 117, p1185 * 129, p1185 * 92, p1185 * 161, p1185 * 91);
      v1572.bezierCurveTo(p1185 * 201, p1185 * 90, p1185 * 223, p1185 * 121, p1185 * 230, p1185 * 161);
      v1572.closePath();
      f84(v1572, "#704618", "#5D3D1A", p1185 * 8);
      v1572.beginPath();
      v1572.lineCap = "round";
      v1572.lineJoin = "round";
      v1572.moveTo(p1185 * 94.00003051757812, p1185 * 164.40341186523438);
      v1572.bezierCurveTo(p1185 * 162.50003051757812, p1185 * 164.40341186523438, p1185 * 230.00003051757812, p1185 * 165.40341186523438, p1185 * 231.00003051757812, p1185 * 164.40341186523438);
      v1572.bezierCurveTo(p1185 * 214.00003051757812, p1185 * 267.4034118652344, p1185 * 92.00003051757812, p1185 * 243.40341186523438, p1185 * 93.00003051757812, p1185 * 165.40341186523438);
      v1572.closePath();
      f84(v1572, "#E1DDD5", "#EAE7E4", p1185 * 8);
      f89(v1572, p1185 * 160.00003051757812, p1185 * 166.49432373046875, p1185 * 28.30194339616981);
      f84(v1572, "#392C16", "#5E3E1A", p1185 * 10);
      return v1571;
    }(v1478 * 0.22)));
    ⵠΔ[726] = f53(function (p1186) {
      var v1573 = document.createElement("canvas");
      var v1574 = v1573.getContext("2d");
      v1573.width = p1186 * 321;
      v1573.height = p1186 * 345;
      v1574.translate(0, p1186 * 5);
      f89(v1574, p1186 * 161.00003051757812, p1186 * 165.40341186523438, p1186 * 20.808652046684813);
      f84(v1574, "#C09D6F", "#A37943", p1186 * 10);
      v1574.beginPath();
      v1574.lineCap = "round";
      v1574.lineJoin = "round";
      v1574.moveTo(p1186 * 162.00003051757812, p1186 * 48.403411865234375);
      v1574.bezierCurveTo(p1186 * 172.50003051757812, p1186 * 67.40341186523438, p1186 * 172.50003051757812, p1186 * 67.40341186523438, p1186 * 183.00003051757812, p1186 * 86.40341186523438);
      v1574.bezierCurveTo(p1186 * 160.50003051757812, p1186 * 86.40341186523438, p1186 * 160.50003051757812, p1186 * 86.40341186523438, p1186 * 138.00003051757812, p1186 * 86.40341186523438);
      v1574.closePath();
      f84(v1574, "#C09D6F", "#A37943", p1186 * 10);
      v1574.save();
      v1574.translate(p1186 * 161.50003051757812, p1186 * 117.90341186523438);
      f83(v1574, p1186 * -5.5, p1186 * -37.5, p1186 * 11, p1186 * 75, p1186 * 10);
      v1574.restore();
      f84(v1574, "#C09D6F", "#A37943", p1186 * 10);
      v1574.save();
      v1574.translate(p1186 * 162.00003051757812, p1186 * 78.90341186523438);
      f83(v1574, p1186 * -10, p1186 * -5.5, p1186 * 20, p1186 * 11, p1186 * 1);
      v1574.restore();
      f84(v1574, "#C09D6F");
      f89(v1574, p1186 * 161.00003051757812, p1186 * 163.6761474609375, p1186 * 17.08800749063506);
      f84(v1574, "#C09D6F");
      return v1573;
    }(v1478 * 0.22));
    ⵠΔ[727] = [];
    ⵠΔ[727].push(f53(f103(v1478 * 1.5, ["#795026", "#654320", "#eda80d"], 0)));
    ⵠΔ[727].push(f53(f103(v1478 * 1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1)));
    ⵠΔ[727].push(f53(f103(v1478 * 1.5, ["#67441f", "#573819", "#9c6e08"], 1)));
    ⵠΔ[546] = Δⵠ.ΔⵠⵠΔΔⵠⲆ;
    ⵠΔ[547] = Δⵠ.ⵠⲆⵠᐃΔᐃᐃ;
    ⵠΔ[548] = Δⵠ.ⲆⵠᐃⲆⲆⵠΔ;
    ⵠΔ[549] = Δⵠ.ⲆⵠⲆⵠⵠⵠⵠ;
    ⵠΔ[517] = f162(v1478, "Show spectators", 25, "#FFF", undefined, vVVVVUndefined117, "#000", 5, 220);
    ⵠΔ[525] = f162(v1478, "Reconnecting...", 30, "#FFF");
    console.log(undefined, undefined);
  }
  function f288(p1187, p1188, p1189) {
    var v1575 = document.createElement("canvas");
    var v1576 = v1575.getContext("2d");
    v1575.width = p1187 * 160;
    v1575.height = p1187 * 161;
    v1576.globalAlpha = p1188 ? 0.5 : 1;
    v1576.translate(0, p1187 * 10);
    v1576.save();
    v1576.translate(p1187 * 80.5, p1187 * 78);
    f83(v1576, p1187 * -71.5, p1187 * -71, p1187 * 143, p1187 * 143, p1187 * 10);
    v1576.restore();
    f84(v1576, p1189[0]);
    v1576.globalAlpha = 1;
    v1576.translate(0, p1187 * -10);
    v1576.save();
    v1576.translate(p1187 * 80.5, p1187 * 78);
    f83(v1576, p1187 * -71.5, p1187 * -71, p1187 * 143, p1187 * 143, p1187 * 10);
    v1576.restore();
    f84(v1576, p1189[1], p1189[2], p1187 * 6);
    v1576.save();
    v1576.translate(p1187 * 80, p1187 * 78.5);
    f83(v1576, p1187 * -17, p1187 * -72.5, p1187 * 34, p1187 * 145, p1187 * 10);
    v1576.restore();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    v1576.globalAlpha = p1188 ? 0.5 : 1;
    v1576.translate(0, p1187 * 10);
    v1576.save();
    v1576.translate(p1187 * 80, p1187 * 79.5);
    f83(v1576, p1187 * -73, p1187 * -16.5, p1187 * 145, p1187 * 34, p1187 * 10);
    v1576.restore();
    f84(v1576, p1189[0]);
    v1576.globalAlpha = 1;
    v1576.translate(0, p1187 * -10);
    v1576.save();
    v1576.translate(p1187 * 80, p1187 * 79.5);
    f83(v1576, p1187 * -73, p1187 * -16.5, p1187 * 145, p1187 * 34, p1187 * 10);
    v1576.restore();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    v1576.globalAlpha = p1188 ? 0.5 : 1;
    v1576.translate(0, p1187 * 10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 79, p1187 * 71);
    v1576.bezierCurveTo(p1187 * 90, p1187 * 42, p1187 * 98, p1187 * 36, p1187 * 109, p1187 * 43);
    v1576.bezierCurveTo(p1187 * 119, p1187 * 47, p1187 * 128, p1187 * 62, p1187 * 107, p1187 * 72);
    v1576.bezierCurveTo(p1187 * 96, p1187 * 78.5, p1187 * 96, p1187 * 78.5, p1187 * 85, p1187 * 85);
    v1576.closePath();
    f84(v1576, p1189[0]);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 84, p1187 * 78);
    v1576.bezierCurveTo(p1187 * 113, p1187 * 82, p1187 * 123, p1187 * 97, p1187 * 115, p1187 * 108);
    v1576.bezierCurveTo(p1187 * 110, p1187 * 119, p1187 * 98, p1187 * 124, p1187 * 87, p1187 * 107);
    v1576.bezierCurveTo(p1187 * 81.5, p1187 * 94.5, p1187 * 81.5, p1187 * 94.5, p1187 * 76, p1187 * 82);
    v1576.closePath();
    f84(v1576, p1189[0]);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 80, p1187 * 73);
    v1576.bezierCurveTo(p1187 * 64, p1187 * 37, p1187 * 55, p1187 * 34, p1187 * 45, p1187 * 42);
    v1576.bezierCurveTo(p1187 * 30, p1187 * 54, p1187 * 36, p1187 * 65, p1187 * 51, p1187 * 72);
    v1576.bezierCurveTo(p1187 * 62.5, p1187 * 77, p1187 * 62.5, p1187 * 77, p1187 * 74, p1187 * 82);
    v1576.closePath();
    f84(v1576, p1189[0]);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 82, p1187 * 83);
    v1576.bezierCurveTo(p1187 * 73, p1187 * 107, p1187 * 60, p1187 * 123, p1187 * 47, p1187 * 113);
    v1576.bezierCurveTo(p1187 * 33, p1187 * 105, p1187 * 33, p1187 * 92, p1187 * 52, p1187 * 85);
    v1576.bezierCurveTo(p1187 * 74, p1187 * 73, p1187 * 77, p1187 * 76, p1187 * 76, p1187 * 75);
    v1576.closePath();
    f84(v1576, p1189[0]);
    v1576.globalAlpha = 1;
    v1576.translate(0, p1187 * -10);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 79, p1187 * 71);
    v1576.bezierCurveTo(p1187 * 90, p1187 * 42, p1187 * 98, p1187 * 36, p1187 * 109, p1187 * 43);
    v1576.bezierCurveTo(p1187 * 119, p1187 * 47, p1187 * 128, p1187 * 62, p1187 * 107, p1187 * 72);
    v1576.bezierCurveTo(p1187 * 96, p1187 * 78.5, p1187 * 96, p1187 * 78.5, p1187 * 85, p1187 * 85);
    v1576.closePath();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 84, p1187 * 78);
    v1576.bezierCurveTo(p1187 * 113, p1187 * 82, p1187 * 123, p1187 * 97, p1187 * 115, p1187 * 108);
    v1576.bezierCurveTo(p1187 * 110, p1187 * 119, p1187 * 98, p1187 * 124, p1187 * 87, p1187 * 107);
    v1576.bezierCurveTo(p1187 * 81.5, p1187 * 94.5, p1187 * 81.5, p1187 * 94.5, p1187 * 76, p1187 * 82);
    v1576.closePath();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 80, p1187 * 73);
    v1576.bezierCurveTo(p1187 * 64, p1187 * 37, p1187 * 55, p1187 * 34, p1187 * 45, p1187 * 42);
    v1576.bezierCurveTo(p1187 * 30, p1187 * 54, p1187 * 36, p1187 * 65, p1187 * 51, p1187 * 72);
    v1576.bezierCurveTo(p1187 * 62.5, p1187 * 77, p1187 * 62.5, p1187 * 77, p1187 * 74, p1187 * 82);
    v1576.closePath();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    v1576.beginPath();
    v1576.lineCap = "round";
    v1576.lineJoin = "round";
    v1576.moveTo(p1187 * 82, p1187 * 83);
    v1576.bezierCurveTo(p1187 * 73, p1187 * 107, p1187 * 60, p1187 * 123, p1187 * 47, p1187 * 113);
    v1576.bezierCurveTo(p1187 * 33, p1187 * 105, p1187 * 33, p1187 * 92, p1187 * 52, p1187 * 85);
    v1576.bezierCurveTo(p1187 * 74, p1187 * 73, p1187 * 77, p1187 * 76, p1187 * 76, p1187 * 75);
    v1576.closePath();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    v1576.globalAlpha = p1188 ? 0.5 : 1;
    v1576.translate(0, p1187 * 10);
    v1576.save();
    v1576.translate(p1187 * 78.5, p1187 * 78);
    f83(v1576, p1187 * -13.5, p1187 * -14, p1187 * 27, p1187 * 27, p1187 * 6);
    v1576.restore();
    f84(v1576, p1189[0]);
    v1576.globalAlpha = 1;
    v1576.translate(0, p1187 * -10);
    v1576.save();
    v1576.translate(p1187 * 78.5, p1187 * 78);
    f83(v1576, p1187 * -13.5, p1187 * -14, p1187 * 27, p1187 * 27, p1187 * 6);
    v1576.restore();
    f84(v1576, p1189[3], p1189[4], p1187 * 6);
    return v1575;
  }
  function f289(p1190, p1191, p1192, p1193) {
    const v1577 = ((p1190 + 14932) * 2147483629 + 2147483587) % 2147483647;
    const v1578 = ~(p1192 & 54323) & p1192 | ~(p1192 & 54323) & 54323;
    const v1579 = ~(p1193 & 35650) & (p1193 | 35650);
    return (1013904223 + (13752 + (f78(v1577, ((p1191 + 5134) * 22695477 + 1) % 4294967296) ^ function (p1194, p1195, p1196) {
      const v1580 = (1 + (57796 + p1194) * 22695477) % 4294967296;
      const v1581 = ~(p1195 & 19311) & (p1195 | 19311);
      const v1582 = ~(p1196 & 20285) & (p1196 | 20285);
      const vVC3 = f513(v1580, v1581);
      f80(v1582, v1580, v1581, v1582);
      return ~(vVC3 & 53164) & (vVC3 | 53164);
    }(v1578, v1579, v1577))) * 1664525) % 4294967296;
  }
  function f290() {
    var v1583 = v2810.time;
    if (ⵠΔ[285]) {
      v439.drawImage(ⵠΔ[285][v1583][1], v445 + 480, v449 + 190);
      v439.drawImage(ⵠΔ[285][v1583][2], v445 + 180, v449 - 430);
      v439.drawImage(ⵠΔ[285][v1583][1], v445 - 855, v449 + 100);
      v439.drawImage(ⵠΔ[285][v1583][0], v445 - 550, v449 - 300);
      v439.drawImage(ⵠΔ[285][v1583][0], v445 - 1020, v449 - 520);
    }
    if (ⵠΔ[108]) {
      v439.drawImage(ⵠΔ[108][v1583][1], v445 - 80, v449 - 640);
      v439.drawImage(ⵠΔ[108][v1583][1], v445 + 80, v449 + 490);
      v439.drawImage(ⵠΔ[108][v1583][2], v445 - 180, v449 - 700);
      v439.drawImage(ⵠΔ[108][v1583][0], v445 + 550, v449 + 100);
      v439.drawImage(ⵠΔ[108][v1583][1], v445 + 450, v449 + 300);
      v439.drawImage(ⵠΔ[108][v1583][1], v445 + 780, v449 + 300);
      v439.drawImage(ⵠΔ[108][v1583][2], v445 + 980, v449 + 200);
      v439.drawImage(ⵠΔ[108][v1583][2], v445 + 680, v449 + 600);
      v439.drawImage(ⵠΔ[108][v1583][2], v445 - 380, v449 + 100);
      v439.drawImage(ⵠΔ[108][v1583][2], v445 + 280, v449 + 250);
    }
    if (ⵠΔ[110]) {
      v439.drawImage(ⵠΔ[110][v1583][0], v445 - 590, v449);
      v439.drawImage(ⵠΔ[110][v1583][0], v445 + 120, v449 - 390);
      v439.drawImage(ⵠΔ[110][v1583][0], v445 - 270, v449 + 340);
    }
    if (ⵠΔ[109]) {
      v439.drawImage(ⵠΔ[109][v1583][4], v445 - 700, v449 - 600);
      v439.drawImage(ⵠΔ[109][v1583][2], v445 - 970, v449 - 250);
      v439.drawImage(ⵠΔ[109][v1583][5], v445 - 720, v449 - 200);
      v439.drawImage(ⵠΔ[109][v1583][2], v445 - 1020, v449 + 340);
      v439.drawImage(ⵠΔ[109][v1583][0], v445 - 1120, v449 - 0);
      v439.drawImage(ⵠΔ[109][v1583][1], v445 - 650, v449 - 330);
      v439.drawImage(ⵠΔ[109][v1583][4], v445 - 495, v449 - 90);
      v439.drawImage(ⵠΔ[109][v1583][3], v445 - 520, v449 + 340);
      v439.drawImage(ⵠΔ[109][v1583][2], v445 + 830, v449 - 520);
    }
    ⵠΔ[413];
    if (v2813 && v2812) {
      var v1584 = v2813.ΔⲆΔ.x;
      var v1585 = v2813.ΔⲆΔ.y;
      v2813.ΔⲆΔ.x = v445;
      v2813.ΔⲆΔ.y = v449;
      var v1586 = v2812.time;
      v2812.time = v2810.time;
      var v1587;
      var v1588 = v2810.items;
      v1588[2].x = 400;
      v1588[2].y = 100;
      v1588[2].ᐃᐃΔⵠ(114);
      (v1587 = v1588[1]).x = -500;
      v1587.y = 100;
      v1587.ⵠⵠⲆⵠ[0].x = v1587.x - 20.5;
      v1587.ⵠⵠⲆⵠ[0].y = v1587.y - 22.5;
      v1587.ⵠⵠⲆⵠ[1].x = v1587.x - 35.5;
      v1587.ⵠⵠⲆⵠ[1].y = v1587.y + 7.5;
      v1587.ⵠⵠⲆⵠ[2].x = v1587.x + 7.5;
      v1587.ⵠⵠⲆⵠ[2].y = v1587.y - 30;
      v1587.ⵠⵠⲆⵠ[3].x = v1587.x + 22.5;
      v1587.ⵠⵠⲆⵠ[3].y = v1587.y;
      v1587.ⵠⵠⲆⵠ[4].x = v1587.x - 7.5;
      v1587.ⵠⵠⲆⵠ[4].y = v1587.y + 14.5;
      for (var v1589 = 0; v1587.info > v1589; v1589++) {
        v1587.ⵠⵠⲆⵠ[v1589].ᐃᐃΔⵠ(294);
      }
      (v1587 = v1588[3]).x = 210;
      v1587.y = -290;
      v1587.ⵠⵠⲆⵠ[0].x = v1587.x - 20.5;
      v1587.ⵠⵠⲆⵠ[0].y = v1587.y - 22.5;
      v1587.ⵠⵠⲆⵠ[1].x = v1587.x - 35.5;
      v1587.ⵠⵠⲆⵠ[1].y = v1587.y + 7.5;
      v1587.ⵠⵠⲆⵠ[2].x = v1587.x + 7.5;
      v1587.ⵠⵠⲆⵠ[2].y = v1587.y - 30;
      v1587.ⵠⵠⲆⵠ[3].x = v1587.x + 22.5;
      v1587.ⵠⵠⲆⵠ[3].y = v1587.y;
      v1587.ⵠⵠⲆⵠ[4].x = v1587.x - 7.5;
      v1587.ⵠⵠⲆⵠ[4].y = v1587.y + 14.5;
      for (v1589 = 0; v1589 < v1587.info; v1589++) {
        v1587.ⵠⵠⲆⵠ[v1589].ᐃᐃΔⵠ(294);
      }
      v1588[0].x = 450;
      v1588[0].y = -100;
      v1588[0].ΔΔⲆᐃⵠ(113);
      v1588[0].ⲆᐃⲆᐃⵠ();
      v2813.ΔⲆΔ.x = v1584;
      v2813.ΔⲆΔ.y = v1585;
      v2812.time = v1586;
    }
  }
  function f291(p1197, p1198) {
    ⵠΔ[283][p1197] ||= f162(v454, "x" + p1197, 17, "#FFF");
    var v1590 = ⵠΔ[283][p1197];
    var v1591 = p1198.info.translate.x + p1198.info.ⵠᐃ[0].width - v1590.width - v454 * 14;
    var v1592 = p1198.info.translate.y + p1198.info.ⵠᐃ[0].height - v1590.height - v454 * 19;
    if (p1198.info.state == v2240) {
      v1592 += v454 * 5;
    }
    f293(v439, v1590, v1591, v1592);
  }
  function f292() {
    if (!v2813.ᐃⵠΔⲆ.open && !v2813.ΔⲆΔᐃᐃ.open && !v2813.ⲆᐃⲆⵠ.open && !v2813.ⲆⲆΔΔ.open && !v2813.ⲆΔⲆᐃ.open) {
      v2813.sign.open = vVVVVV1422;
      var v1593 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v1594 = 100;
      if (v1593) {
        for (var v1595 = 0; v2812.ⲆⵠΔ[36].length > v1595; v1595++) {
          var v1596 = v2812.ⲆⵠΔ[36][v1595];
          var v1597 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1596, v1593);
          if (v1597 < v1594 && v1596.info === 0 && v2813.id === v1596.ⵠⵠⵠᐃ) {
            v2813.sign.open = vVV16;
            v1594 = v1597;
            v2813.sign.ⲆⲆⵠᐃⵠ = v1596.id;
          }
        }
        if (v1594 < 100) {
          v2991.sign.button.ᐃᐃΔⵠ(v439);
        }
      }
    }
  }
  function f293(p1199, p1200, p1201, p1202, p1203, p1204, p1205, p1206, p1207, p1208) {
    if (vVVVUndefined2022 === p1200.Ⲇⵠⵠⵠⵠᐃᐃ || p1200.Ⲇⵠⵠⵠⵠᐃᐃ() === 1) {
      if (p1208 !== vVVVVUndefined21) {
        p1199.drawImage(p1200, p1201, p1202, Math.max(1, p1203), Math.max(1, p1204), p1205, p1206, p1207, p1208);
      } else if (p1204 !== undefined) {
        p1199.drawImage(p1200, p1201, p1202, p1203, p1204);
      } else {
        p1199.drawImage(p1200, p1201, p1202);
      }
    }
  }
  function f294(p1209, p1210, p1211) {
    var v1598 = ⵠΔ[465][p1209];
    var v1599 = p1210.info.translate.x + v454 * 5;
    var v1600 = p1210.info.translate.y + v454 * 5;
    if (p1210.info.state == v2240 || p1211) {
      v1600 += v454 * 5;
    }
    f293(v439, v1598, v1599, v1600);
  }
  function f295() {
    var v1601 = v2991.ⲆⵠⲆⲆᐃ;
    var v1602 = v1601.id;
    if (v1601.ⲆᐃΔΔⲆ === 1 && v1601.display === 1) {
      if (ⲆⲆⲆΔⵠ[v1602] === undefined) {
        ⲆⲆⲆΔⵠ[v1602] = function (p1212) {
          var v1603 = document.createElement("canvas");
          var v1604 = v1603.getContext("2d");
          var v1605 = v772[p1212];
          v1604.font = "20px Baloo Paaji";
          var v1606 = 0;
          if (v1605.length >= 1) {
            v1606 = Math.max(0, v1604.measureText(v1605[0]).width);
          }
          v1604.font = "17px Baloo Paaji";
          if (v1605.length >= 2) {
            v1606 = Math.max(v1606, v1604.measureText(v1605[1]).width);
          }
          v1604.font = "14px Baloo Paaji";
          v782 = 2;
          for (; v1605.length > v782; v782++) {
            v1606 = Math.max(v1606, v1604.measureText(v1605[v782]).width);
          }
          var v1607 = v1606 + 35;
          var v1608 = 0;
          v1608 = v1605.length === 1 ? 55 : v1605.length === 2 ? 85 : (v1605.length - 2) * 26 + 85;
          v1603.width = v1607;
          v1603.height = v1608;
          f83(v1604, 0, 0, v1607, v1608, 10);
          v1604.fillStyle = "#000000";
          v1604.globalAlpha = 0.5;
          v1604.fill();
          if (v1605.length >= 1) {
            v1604.textBaseline = "middle";
            v1604.font = "20px Baloo Paaji";
            v1604.globalAlpha = 1;
            v1604.fillStyle = "#e2c340";
            v1604.fillText(v1605[0], 15, 28);
          }
          if (v1605.length >= 2) {
            v1604.font = "17px Baloo Paaji";
            v1604.fillStyle = "#ffffff";
            v1604.fillText(v1605[1], 15, 55);
            v1608 = 55;
          }
          if (v1605.length >= 3) {
            v1604.font = "14px Baloo Paaji";
            v1604.globalAlpha = 0.7;
            v782 = 2;
            for (; v1605.length > v782; v782++) {
              v1604.fillText(v1605[v782], 15, v1608 + 28);
              v1608 += 26;
            }
          }
          return v1603;
        }(v1602);
      }
      if (v1601.ⵠⲆᐃⲆ === 1) {
        f293(v439, ⲆⲆⲆΔⵠ[v1602], v1601.x, v1601.y);
      } else if (v441 < v1601.x - 80 + ⲆⲆⲆΔⵠ[v1602].width) {
        f293(v439, ⲆⲆⲆΔⵠ[v1602], v441 - ⲆⲆⲆΔⵠ[v1602].width - 10, v1601.y - ⲆⲆⲆΔⵠ[v1602].height - 10);
      } else {
        f293(v439, ⲆⲆⲆΔⵠ[v1602], v1601.x - 80, v1601.y - ⲆⲆⲆΔⵠ[v1602].height - 10);
      }
    }
  }
  ⲆⲆⲆΔⵠ = [];
  ᐃΔⵠΔΔΔᐃ = [];
  function f296() {
    if (!v2813.ᐃⵠΔⲆ.open) {
      v2813.ΔⲆΔᐃᐃ.Δᐃᐃᐃ = 0;
      v2813.ΔⲆΔᐃᐃ.open = vVVV1423;
      var v1609 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v1610 = 100;
      if (v1609) {
        for (var v1611 = 0; v1611 < v2812.ⲆⵠΔ[18].length; v1611++) {
          var v1612 = v2812.ⲆⵠΔ[18][v1611];
          var v1613 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1612, v1609);
          if (v1610 > v1613) {
            v1610 = v1613;
            v2813.ΔⲆΔᐃᐃ.open = true;
            v2813.ΔⲆΔᐃᐃ.Δᐃᐃᐃ = v1612.info;
            v2813.ΔⲆΔᐃᐃ.ⵠⵠⵠᐃ = v1612.ⵠⵠⵠᐃ;
            v2813.ΔⲆΔᐃᐃ.ⲆⲆⵠᐃⵠ = v1612.id;
          }
        }
        if (v1610 < 100) {
          var v1614 = ⵠΔ[411];
          var v1615 = v2991.ᐃⲆΔᐃⲆΔᐃ;
          var v1616 = Math.floor(v1615.info.translate.x + (v1615.info.ⵠᐃ[0].width - v1614.width) / 2);
          var v1617 = Math.floor(v1615.info.translate.y + (v1615.info.ⵠᐃ[0].height - v1614.height) / 2) + 3;
          f293(v439, v1614, v1616, v1617);
          if (v2813.ΔⲆΔᐃᐃ.Δᐃᐃᐃ > 0) {
            v1615.ᐃᐃΔⵠ(v439);
            var v1618 = v2813.ΔⲆΔᐃᐃ.Δᐃᐃᐃ;
            if (v1618 > 1) {
              f291(v1618, v1615);
            }
          }
        }
      }
    }
  }
  function f297() {
    if (!v2813.ᐃⵠΔⲆ.open && !v2813.ΔⲆΔᐃᐃ.open) {
      v2813.ⲆᐃⲆⵠ.open = vVVVVV142;
      var v1619 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v1620 = 100;
      if (v1619) {
        for (var v1621 = 0; v1621 < v2812.ⲆⵠΔ[32].length; v1621++) {
          var v1622 = v2812.ⲆⵠΔ[32][v1621];
          var v1623 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1622, v1619);
          if (v1623 < v1620) {
            v1620 = v1623;
            v2813.ⲆᐃⲆⵠ.open = vVVVVVV16;
            v2813.ⲆᐃⲆⵠ.ᐃⲆⵠⵠⲆⲆⵠ = v1622.info & 255;
            v2813.ⲆᐃⲆⵠ.ΔΔⲆΔⵠ = (v1622.info & 65280) >> 8;
            v2813.ⲆᐃⲆⵠ.ⵠⵠⵠᐃ = v1622.ⵠⵠⵠᐃ;
            v2813.ⲆᐃⲆⵠ.ⲆⲆⵠᐃⵠ = v1622.id;
          }
        }
        if (v1620 < 100) {
          var v1624 = ⵠΔ[655];
          var v1625 = (v1626 = v2991.ⲆᐃᐃΔⵠΔⲆ).info.translate.x - 33;
          f293(v439, v1624, v1625, 0);
          if (v2813.ⲆᐃⲆⵠ.ᐃⲆⵠⵠⲆⲆⵠ > 0) {
            v1626.ᐃᐃΔⵠ(v439);
            if ((v1627 = v2813.ⲆᐃⲆⵠ.ᐃⲆⵠⵠⲆⲆⵠ) > 1) {
              f291(v1627, v1626);
            }
          }
          var v1626 = v2991.ⲆⵠᐃⲆᐃⲆᐃ;
          if (v2813.ⲆᐃⲆⵠ.ΔΔⲆΔⵠ > 0) {
            v1626.ᐃᐃΔⵠ(v439);
            var v1627 = v2813.ⲆᐃⲆⵠ.ΔΔⲆΔⵠ;
            if (v1627 > 1) {
              f291(v1627, v1626);
            }
          }
        }
      }
    }
  }
  function f298() {
    v2813.ᐃⵠΔⲆ.id = -1;
    v2813.ᐃⵠΔⲆ.lock = false;
    v2813.ᐃⵠΔⲆ.locked = false;
    v2813.ᐃⵠΔⲆ.ᐃⲆⵠⵠⲆΔⲆ = vVVV1422;
    v2813.ᐃⵠΔⲆ.ⲆᐃⵠⲆΔⲆⲆ = false;
    v2813.ᐃⵠΔⲆ.open = false;
    var v1628 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
    var v1629 = 100;
    if (v1628) {
      for (var v1630 = 0; v2812.ⲆⵠΔ[11].length > v1630; v1630++) {
        var v1631 = v2812.ⲆⵠΔ[11][v1630];
        var v1632 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1631, v1628);
        if (v1632 < v1629) {
          v1629 = v1632;
          v2813.ᐃⵠΔⲆ.open = true;
          v2813.ᐃⵠΔⲆ.id = v1631.action < 2 ? -1 : Math.floor((v1631.action - 1) / 2);
          v2813.ᐃⵠΔⲆ.Δᐃᐃᐃ = v1631.info;
          v2813.ᐃⵠΔⲆ.ⵠⵠⵠᐃ = v1631.ⵠⵠⵠᐃ;
          v2813.ᐃⵠΔⲆ.ⲆⲆⵠᐃⵠ = v1631.id;
          v2813.ᐃⵠΔⲆ.locked = v1631.lock;
          v2813.ᐃⵠΔⲆ.lock = v1631.lock && v1631.ⵠⵠⵠᐃ != v2813.id && !v2813.ᐃⵠᐃⵠᐃⲆⲆ(v1631.ⵠⵠⵠᐃ) ? vVVV162 : vV142;
          v2813.ᐃⵠΔⲆ.ⲆᐃⵠⲆΔⲆⲆ = v2813.id === v1631.ⵠⵠⵠᐃ && !v2813.ᐃⵠΔⲆ.locked && v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(148) != -1 || vVVVV1422;
          if (v2813.ᐃⵠΔⲆ.locked && v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(158) != -1) {
            v2813.ᐃⵠΔⲆ.ᐃⲆⵠⵠⲆΔⲆ = vVVVV1622;
          }
        }
      }
      if (v1629 < 100) {
        var v1633 = ⵠΔ[339];
        var v1634 = v2991.ⵠⲆⵠ[0];
        var v1635 = Math.floor(v1634.info.translate.x + (v1634.info.ⵠᐃ[0].width - v1633.width) / 2);
        var v1636 = Math.floor(v1634.info.translate.y + (v1634.info.ⵠᐃ[0].height - v1633.height) / 2) + 3;
        f293(v439, v1633, v1635, v1636);
        if ((!v2813.ᐃⵠΔⲆ.lock || v2813.ᐃⵠΔⲆ.ⵠⵠⵠᐃ === v2813.id) && v2813.ᐃⵠΔⲆ.id >= 0) {
          (v1634 = v2991.ⵠⲆⵠ[v2813.ᐃⵠΔⲆ.id]).ᐃᐃΔⵠ(v439);
          var v1637 = v2813.ᐃⵠΔⲆ.Δᐃᐃᐃ;
          if (v1637 > 1) {
            f291(v1637, v1634);
          }
        }
        if (v2813.ᐃⵠΔⲆ.lock) {
          v2991.ⲆⵠⲆⵠⲆΔⲆ.ᐃᐃΔⵠ(v439);
        } else if (v2813.ᐃⵠΔⲆ.ⲆᐃⵠⲆΔⲆⲆ) {
          v2991.ᐃΔⵠΔΔⲆⵠ.ᐃᐃΔⵠ(v439);
        }
        if (v2813.ᐃⵠΔⲆ.ᐃⲆⵠⵠⲆΔⲆ) {
          v2991.ᐃⵠⵠΔᐃⲆⵠ.ᐃᐃΔⵠ(v439);
        }
      }
    }
  }
  function f299() {
    if (v2813.ⵠⲆᐃᐃⲆᐃᐃ) {
      v439.globalAlpha = 0.5;
      v439.fillStyle = "#000";
      v439.fillRect(0, 0, v441, v442);
      v439.globalAlpha = 0.8;
      var v1638 = ⵠΔ[516][v2812.time];
      var v1639 = v445 - v1638.width / 2;
      var v1640 = v449 - v1638.height / 2;
      f293(v439, v1638, v1639, v1640);
      v439.globalAlpha = 1;
      if (v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.x > -1) {
        v439.fillStyle = "#660000";
        f89(v439, v1639 + v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.x * 3 * v454, v1640 + v454 * (v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.y * 3), v454 * 14);
        v439.fill();
      }
      for (var v1641 = v2991.ΔⲆⲆⲆⲆ.ΔⵠΔⵠ, v1642 = 0; v1642 < v1641.length; v1642++) {
        var v1643 = v1641[v1642];
        v2812.time;
        v439.fillStyle = "#ff0000";
        f89(v439, v1639 + v454 * (v1643.x / (v2812.ⲆΔᐃⵠⲆ * 100) * 600), v1640 + v454 * (v1643.y / (v2812.ⵠΔᐃΔⵠ * 100) * 600), v454 * 6);
        v439.fill();
      }
      var v1644 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      if (v1644) {
        v439.fillStyle = v2812.time ? "#fff" : "#e39716";
        f89(v439, v1639 + v1644.x / (v2812.ⲆΔᐃⵠⲆ * 100) * 600 * v454, v1640 + v454 * (v1644.y / (v2812.ⵠΔᐃΔⵠ * 100) * 600), v454 * 12);
        v439.fill();
      }
    }
  }
  function f300() {
    if (!v2813.ᐃⵠΔⲆ.open && !v2813.ΔⲆΔᐃᐃ.open && !v2813.ⲆᐃⲆⵠ.open && !v2813.ⲆΔⲆᐃ.open) {
      v2813.ⲆⲆΔΔ.open = false;
      var v1645 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v1646 = 100;
      if (v1645) {
        for (var v1647 = 0; v2812.ⲆⵠΔ[34].length > v1647; v1647++) {
          var v1648 = v2812.ⲆⵠΔ[34][v1647];
          var v1649 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1648, v1645);
          if (v1646 > v1649) {
            v1646 = v1649;
            v2813.ⲆⲆΔΔ.open = vVVVV162;
            v2813.ⲆⲆΔΔ.ⲆⵠⲆᐃⵠᐃᐃ = v1648.info & 31;
            v2813.ⲆⲆΔΔ.ΔΔⲆΔⵠ = (v1648.info & 992) >> 5;
            v2813.ⲆⲆΔΔ.ⵠⵠΔⵠⵠⲆΔ = (v1648.info & 31744) >> 10;
            v2813.ⲆⲆΔΔ.ⵠⵠⵠᐃ = v1648.ⵠⵠⵠᐃ;
            v2813.ⲆⲆΔΔ.ⲆⲆⵠᐃⵠ = v1648.id;
          }
        }
        if (v1646 < 100) {
          var v1650 = ⵠΔ[722];
          var v1651 = (v1652 = v2991.ΔΔⵠᐃΔΔⲆ).info.translate.x - 32;
          f293(v439, v1650, v1651, 0);
          if (v2813.ⲆⲆΔΔ.ⲆⵠⲆᐃⵠᐃᐃ > 0) {
            v1652.ᐃᐃΔⵠ(v439);
            if ((v1653 = v2813.ⲆⲆΔΔ.ⲆⵠⲆᐃⵠᐃᐃ) > 1) {
              f291(v1653, v1652);
            }
          }
          var v1652 = v2991.ᐃⵠⵠⲆᐃΔΔ;
          if (v2813.ⲆⲆΔΔ.ⵠⵠΔⵠⵠⲆΔ > 0) {
            v1652.ᐃᐃΔⵠ(v439);
            if ((v1653 = v2813.ⲆⲆΔΔ.ⵠⵠΔⵠⵠⲆΔ) > 1) {
              f291(v1653, v1652);
            }
          }
          var v1653;
          v1652 = v2991.ⵠⲆⲆⵠⲆΔⲆ;
          if (v2813.ⲆⲆΔΔ.ΔΔⲆΔⵠ > 0) {
            v1652.ᐃᐃΔⵠ(v439);
            if ((v1653 = v2813.ⲆⲆΔΔ.ΔΔⲆΔⵠ) > 1) {
              f291(v1653, v1652);
            }
          }
        }
      }
    }
  }
  function f301() {
    v2813.ⵠⵠΔΔᐃ.id = -1;
    v2813.ⵠⵠΔΔᐃ.ⵠⵠⵠᐃ = -1;
    if (!v2813.ᐃᐃⲆⵠⲆΔᐃ && !v2813.ⵠⵠΔΔᐃ.wait && !v2813.ⵠΔᐃᐃⲆ) {
      var v1654 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v1655 = 100;
      if (v1654) {
        for (var v1656 = 0; v2812.ⲆⵠΔ[29].length > v1656; v1656++) {
          var v1657 = v2812.ⲆⵠΔ[29][v1656];
          var v1658 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1657, v1654);
          if (v1655 > v1658) {
            v1655 = v1658;
            v2813.ⵠⵠΔΔᐃ.id = v1657.id;
            v2813.ⵠⵠΔΔᐃ.ⵠⵠⵠᐃ = v1657.ⵠⵠⵠᐃ;
            v2813.ⵠⵠΔΔᐃ.info = v1657.info;
            v2813.ⵠⵠΔΔᐃ.lock = (v1657.info & 16) >> 4;
          }
        }
      }
      var v1659 = v2991.ΔΔᐃⵠⵠ;
      v2991.ΔΔᐃⵠⵠ = -1;
      if (v2813.ⵠⵠΔΔᐃ.ⵠⵠⵠᐃ == -1 || v2813.ⲆᐃⲆΔᐃ.length != 0 && v2813.ⵠⵠΔΔᐃ.ⵠⵠⵠᐃ != v2813.id) {
        if (v2813.ⲆᐃⲆΔᐃ.length != 0 && v2813.ⲆᐃⲆΔᐃ[0] != v2813.id) {
          v2991.ΔΔᐃⵠⵠ = 2;
        } else if (v2813.ⲆᐃⲆΔᐃ.length != 0 && v2813.id == v2813.ⲆᐃⲆΔᐃ[0]) {
          v2991.ΔΔᐃⵠⵠ = 1;
        } else if (v2813.ⲆᐃⲆΔᐃ.length != 0) {
          v2991.ΔΔᐃⵠⵠ = 3;
        }
      } else if (v2813.ⲆᐃⲆΔᐃ.length == 0 && v2813.ⵠⵠΔΔᐃ.info >= 8) {
        v2991.ΔΔᐃⵠⵠ = 4;
      } else if (v2813.ⲆᐃⲆΔᐃ.length == 0) {
        v2991.ΔΔᐃⵠⵠ = 3;
      } else {
        v2991.ΔΔᐃⵠⵠ = 0;
      }
      if (v2991.ΔΔᐃⵠⵠ != -1) {
        v2991.ⲆⲆΔΔᐃ[v2991.ΔΔᐃⵠⵠ].button.ᐃᐃΔⵠ(v439);
      }
      var v1660 = document.getElementById("team_box").style;
      if (v2991.ΔΔᐃⵠⵠ != -1 && v1659 != v2991.ΔΔᐃⵠⵠ && v1660.display == "inline-block") {
        v2991.ⲆⲆΔΔᐃ[v2991.ΔΔᐃⵠⵠ].action();
      }
    }
  }
  function f302() {
    if (v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length > 0) {
      var v1661 = {
        x: v2991.ΔⲆⲆⲆⲆ.translate.x,
        y: v2991.ΔⲆⲆⲆⲆ.translate.y - v454 * 120
      };
    } else {
      v1661 = {
        x: v2991.ΔⲆⲆⲆⲆ.translate.x,
        y: v2991.ΔⲆⲆⲆⲆ.translate.y - v454 * 50
      };
    }
    v439.globalAlpha = 0.8;
    var v1662 = ⵠΔ[259][v2812.time];
    f293(v439, v1662, v1661.x, v1661.y);
    v439.globalAlpha = 1;
    if (v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.x > -1) {
      v439.fillStyle = "#660000";
      f89(v439, v1661.x + v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.x * v454, v1661.y + v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.y * v454, v454 * 5);
      v439.fill();
    }
    var vV454 = v454;
    for (var v1663 = v2991.ΔⲆⲆⲆⲆ.ΔⵠΔⵠ, v1664 = 0; v1663.length > v1664; v1664++) {
      var v1665 = v1663[v1664];
      v2812.time;
      v439.fillStyle = "#ff0000";
      f89(v439, v1661.x + v1665.x / (v2812.ⲆΔᐃⵠⲆ * 100) * 193 * v454, v1661.y + v454 * (v1665.y / (v2812.ⵠΔᐃΔⵠ * 100) * 193), v454 * 2);
      v439.fill();
    }
    var v1666 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
    if (v1666) {
      v439.fillStyle = v2812.time ? "#fff" : "#e39716";
      f89(v439, v1661.x + v1666.x / (v2812.ⲆΔᐃⵠⲆ * 100) * 193 * v454, v1661.y + v1666.y / (v2812.ⵠΔᐃΔⵠ * 100) * 193 * v454, v454 * 4);
      v439.fill();
    }
    v454 = vV454;
  }
  function f303() {
    if (v2813.reconnect.enabled) {
      v439.globalAlpha = 0.9;
      v439.fillStyle = "#000";
      f83(v439, v445 - 150, v449 - 90, 300, 180, 15);
      v439.fill();
      v439.globalAlpha = 1;
      var v1667 = ⵠΔ[301];
      v439.save();
      v2813.reconnect.rotate = (v2813.reconnect.rotate + v3026 * 2) % (Math.PI * 2);
      v439.translate(v441 / 2, v442 / 2 - 25);
      v439.rotate(v2813.reconnect.rotate);
      f293(v439, v1667, -v1667.width / 2, -v1667.height / 2);
      v439.restore();
      v1667 = ⵠΔ[525];
      f293(v439, v1667, (v441 - v1667.width) / 2, (v442 - v1667.height) / 2 + 25);
    }
  }
  function f304() {
    v2813.ⲆᐃᐃΔΔ.open = vVVVV14;
    var v1668 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
    var v1669 = 100;
    if (v1668) {
      for (var v1670 = 0; v2812.ⲆⵠΔ[22].length > v1670; v1670++) {
        var v1671 = v2812.ⲆⵠΔ[22][v1670];
        var v1672 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1671, v1668);
        if (v1672 < v1669) {
          v1669 = v1672;
          v2813.ⲆᐃᐃΔΔ.open = true;
          v2813.ⲆᐃᐃΔΔ.ⵠⵠⵠᐃ = v1671.ⵠⵠⵠᐃ;
          v2813.ⲆᐃᐃΔΔ.ⲆⲆⵠᐃⵠ = v1671.id;
        }
      }
      if (v1669 < 100) {
        v2991.ⲆᐃᐃΔΔ.ᐃᐃΔⵠ(v439);
      }
    }
  }
  function f305() {
    if (!v2813.ᐃⵠΔⲆ.open && !v2813.ΔⲆΔᐃᐃ.open) {
      v2813.ⲆΔⲆᐃ.open = false;
      var v1673 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v1674 = 100;
      if (v1673) {
        for (var v1675 = 0; v2276.length > v1675; v1675++) {
          for (var v1676 = v2276[v1675][0], v1677 = v2276[v1675][1], v1678 = 0; v2812.ⲆⵠΔ[v1676].length > v1678; v1678++) {
            var v1679 = v2812.ⲆⵠΔ[v1676][v1678];
            var v1680 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1679, v1673);
            if (v1674 > v1680) {
              v1674 = v1680;
              v2813.ⲆΔⲆᐃ.ᐃⲆᐃᐃⲆⵠΔ = v1677;
              v2813.ⲆΔⲆᐃ.type = v1676;
              v2813.ⲆΔⲆᐃ.open = true;
              v2813.ⲆΔⲆᐃ.ⲆⵠⲆᐃⵠᐃᐃ = v1679.info & 255;
              v2813.ⲆΔⲆᐃ.ᐃΔΔΔⲆᐃΔ = (v1679.info & 65280) >> 8;
              v2813.ⲆΔⲆᐃ.ⵠⵠⵠᐃ = v1679.ⵠⵠⵠᐃ;
              v2813.ⲆΔⲆᐃ.ⲆⲆⵠᐃⵠ = v1679.id;
            }
          }
        }
        if (v1674 < 100) {
          var v1681 = ⵠΔ[656];
          var v1682 = (v1684 = v2991.ⵠΔᐃⵠΔᐃⲆ).info.translate.x - 33;
          f293(v439, v1681, v1682, 0);
          if (v2813.ⲆΔⲆᐃ.ⲆⵠⲆᐃⵠᐃᐃ > 0) {
            v1684.ᐃᐃΔⵠ(v439);
            var v1683 = v2813.ⲆΔⲆᐃ.ⲆⵠⲆᐃⵠᐃᐃ;
            if (v1683 > 1) {
              f291(v1683, v1684);
            }
          }
          switch (v2813.ⲆΔⲆᐃ.ᐃⲆᐃᐃⲆⵠΔ) {
            case 108:
              var v1684 = v2991.ⵠⲆⲆΔᐃⵠΔ;
              break;
            case 111:
              v1684 = v2991.ΔΔᐃΔⲆⵠᐃ;
              break;
            case 112:
              v1684 = v2991.ⵠΔᐃΔᐃⵠΔ;
              break;
            case 121:
              v1684 = v2991.ᐃΔⵠΔⵠᐃᐃ;
              break;
            case 202:
              v1684 = v2991.ⵠΔᐃⵠᐃΔΔ;
          }
          if (v2813.ⲆΔⲆᐃ.ᐃΔΔΔⲆᐃΔ > 0) {
            v1684.ᐃᐃΔⵠ(v439);
            if ((v1683 = v2813.ⲆΔⲆᐃ.ᐃΔΔΔⲆᐃΔ) > 1) {
              f291(v1683, v1684);
            }
          }
        }
      }
    }
  }
  var v1685 = [];
  function f306() {
    v439.save();
    var vV4542 = v454;
    if (v2813.ⲆᐃᐃΔ.ⵠΔΔⵠⲆ.x < 0.25) {
      v439.globalAlpha = v2813.ⲆᐃᐃΔ.ⲆⲆⵠⵠⲆⲆⲆ.ⲆⵠⲆ;
    }
    var v1686 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length > 0 ? -70 : 0;
    if (v2813.ᐃⵠΔⲆ.open || v2813.ΔⲆΔᐃᐃ.open && v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(109) != -1 || v2813.ⲆᐃⲆⵠ.open && v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(134) != -1 || v2813.ⲆΔⲆᐃ.open && v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(109) != -1 || v2813.ⵠⲆⵠΔΔ.open && v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(180) != -1 || v2813.ⲆⲆΔΔ.open && (v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(109) != -1 || v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(131) != -1)) {
      v1686 -= v454 * 50;
    }
    v439.translate((v441 - v454 * 950) / 2, v1686);
    v439.fillStyle = "#69A148";
    v439.fillRect(this.translate.x + v454 * 37, this.translate.y + v454 * 17, v454 * (v2813.ⲆᐃᐃΔ.ⵠΔΔⵠⲆ.x * 178), v454 * 18);
    v439.globalAlpha = 1;
    if (v2813.ⲆᐃᐃΔ.ΔΔᐃⲆᐃⵠⲆ.x < 0.35) {
      v439.fillStyle = "#8F050A";
      v439.globalAlpha = v2813.ⲆᐃᐃΔ.ⵠⵠⲆᐃⵠⵠᐃ.ⲆⵠⲆ;
      v439.fillRect(this.translate.x + v454 * 277, this.translate.y + v454 * 17, v454 * 178, v454 * 18);
      v439.globalAlpha = 1;
    }
    v439.fillStyle = "#AF352A";
    v439.fillRect(this.translate.x + v454 * 277, this.translate.y + v454 * 17, v454 * (v2813.ⲆᐃᐃΔ.ΔΔᐃⲆᐃⵠⲆ.x * 178), v454 * 18);
    if (v2813.ⲆᐃᐃΔ.ⵠⲆⲆⵠΔ.x < 0.35) {
      v439.fillStyle = "#366B91";
      v439.globalAlpha = v2813.ⲆᐃᐃΔ.ΔᐃⵠⲆΔᐃⲆ.ⲆⵠⲆ;
      v439.fillRect(this.translate.x + v454 * 517, this.translate.y + v454 * 17, v454 * 178, v454 * 18);
      v439.globalAlpha = 1;
    }
    v439.fillStyle = "#669BB1";
    v439.fillRect(this.translate.x + v454 * 517, this.translate.y + v454 * 17, v454 * (v2813.ⲆᐃᐃΔ.ⵠⲆⲆⵠΔ.x * 178), v454 * 18);
    if (v2813.ⲆᐃᐃΔ.ⵠⲆⲆⵠΔ.x > 0.99) {
      if (v2813.ⲆᐃᐃΔ.ⵠᐃⲆⵠᐃ.x < 0.35) {
        v439.fillStyle = "#6C4036";
        v439.globalAlpha = v2813.ⲆᐃᐃΔ.ᐃᐃΔⵠΔⲆΔ.ⲆⵠⲆ;
        v439.fillRect(this.translate.x + v454 * 517, this.translate.y + v454 * 17, v454 * 178, v454 * 18);
        v439.globalAlpha = 1;
      }
      v439.fillStyle = "#9C4036";
      v439.fillRect(this.translate.x + v454 * 517, this.translate.y + v454 * 17, v454 * ((1 - v2813.ⲆᐃᐃΔ.ⵠᐃⲆⵠᐃ.x) * 178), v454 * 18);
    }
    if (v2813.ⲆᐃᐃΔ.ⵠᐃⵠᐃⲆⲆⲆ.x < 0.35) {
      v439.fillStyle = "#001A57";
      v439.globalAlpha = v2813.ⲆᐃᐃΔ.ᐃΔΔΔⵠΔⲆ.ⲆⵠⲆ;
      v439.fillRect(this.translate.x + v454 * 757, this.translate.y + v454 * 17, v454 * 178, v454 * 18);
      v439.globalAlpha = 1;
    }
    v439.fillStyle = "#074A87";
    v439.fillRect(this.translate.x + v454 * 757, this.translate.y + v454 * 17, v454 * (v2813.ⲆᐃᐃΔ.ⵠᐃⵠᐃⲆⲆⲆ.x * 178), v454 * 18);
    v454 = vV4542;
    f293(v439, this.ⵠᐃ, this.translate.x, this.translate.y);
    this.y = this.translate.y + v1686;
    v439.restore();
    if (v2813.ⲆᐃᐃΔ.ΔᐃᐃΔΔᐃⲆ.x < 0.99) {
      var v1687 = Math.floor(v445 - ⵠΔ[608].width / 2);
      v1686 += this.translate.y - ⵠΔ[608].height - v454 * 5;
      v439.fillStyle = "#BBE8EF";
      v439.fillRect(v1687 + 5, v1686 + v454 * 5, v454 * 588 * v2813.ⲆᐃᐃΔ.ΔᐃᐃΔΔᐃⲆ.x, v454 * 10);
      if (v2813.ⲆᐃᐃΔ.ΔᐃᐃΔΔᐃⲆ.x < 0.35) {
        v439.fillStyle = "#9BA8AF";
        v439.globalAlpha = v2813.ⲆᐃᐃΔ.ⵠΔⵠⲆⲆᐃⵠ.ⲆⵠⲆ;
        v439.fillRect(v1687 + 5, v1686 + 5, v454 * 588, v454 * 10);
        v439.globalAlpha = 1;
      }
      f293(v439, ⵠΔ[608], v1687, v1686);
      this.y = v1686;
    }
  }
  function f307() {
    var v1688 = v2813.ⵠⵠΔΔᐃ;
    if (v1688.wait) {
      var v1689 = v1688.timeout.ⲆᐃⲆ();
      v439.save();
      var v1690 = ⵠΔ[562];
      var v1691 = ⵠΔ[537].height + v454 * 25;
      v439.translate(v1690.width, v2991.ⲆᐃᐃΔ.translate.y - v454 * 188 - v1691);
      var v1692 = -v1690.width / 2 - 2;
      var v1693 = -v1690.height / 2 - 4;
      f293(v439, v1690, v1692 + 2, v1693);
      v439.beginPath();
      v439.lineWidth = v454 * 5;
      v439.strokeStyle = v624.ⵠⵠΔⲆΔΔⵠ[v2812.time];
      v439.lineCap = "round";
      v439.arc(0, v1693 + v1690.height / 2, v454 * 25, 0, Math.PI * 2 * v1688.timeout.ⲆⵠⲆ);
      v439.stroke();
      v439.restore();
      if (v1689) {
        v1688.wait = vVVVV14;
        v1688.timeout.ⲆⵠⲆ = 0;
        v1688.timeout.ᐃΔⲆ = vVV143;
      }
    }
  }
  function f308() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1694 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
      var v1695 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1694;
      var v1696 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1694;
    } else {
      v1695 = 0;
      v1696 = 0;
    }
    ⵠᐃ = ⵠΔ[167][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2 + v1695, -ⵠᐃⵠ / 2 + v1696, ⵠΔΔ, ⵠᐃⵠ);
    if (this.lock) {
      ⵠᐃ = ⵠΔ[148][v2812.time];
      ⵠΔΔ = -ⵠᐃ.width;
      ⵠᐃⵠ = -ⵠᐃ.height;
      f293(v439, ⵠᐃ, -ⵠΔΔ / 2 + v1695 - v454 * 1, -ⵠᐃⵠ / 2 + v1696, ⵠΔΔ, ⵠᐃⵠ);
    }
    v439.restore();
  }
  function f309(p1213) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && vVV1432 == this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1697 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1698 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1697;
      var v1699 = v1697 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1698 = 0;
      v1699 = 0;
    }
    var v1700 = ⵠΔ[p1213][v2812.time];
    ⵠΔΔ = -v1700.width;
    ⵠᐃⵠ = -v1700.height;
    f293(v439, v1700, -ⵠΔΔ / 2 + v1698, -ⵠᐃⵠ / 2 + v1699, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f310() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[239][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f311() {
    var v1701 = v2813.ⲆΔⲆᐃⲆ;
    var v1702 = v2991.ⵠⵠΔⲆ;
    if (v1701.ⲆᐃⲆ) {
      v1701.ⲆᐃⲆ = vVVV1423;
      var v1703 = v1701.ⲆⲆΔⲆⲆ;
      var v1704 = v1702.ΔⲆ.width;
      var v1705 = v1702.ΔⲆ.height;
      var v1706 = v1702.Δ;
      var v1707 = v2812.ΔⵠΔⵠ;
      var vVV1433 = vV143;
      v1706.clearRect(0, 0, v1704, v1705);
      v1706.drawImage(v1702.ⵠᐃ, 0, 0);
      for (var v1708 = 0; v1708 < v1703.length; v1708++) {
        var v1709 = v1707[v1703[v1708]];
        if ((v2812.mode !== 1 || v1709.ⵠᐃΔⵠΔ !== "spectator") && (v2812.mode !== 2 || v1709.ⲆᐃⵠⲆ !== 0)) {
          if (v1703[v1708] == v2813.id) {
            vVV1433 = true;
            if (v2812.mode === 3 && v1709.ⲆᐃⵠⲆ === 0) {
              ᐃⵠ = "#FF0000";
            } else {
              ᐃⵠ = "#FFF";
            }
          } else if (v2812.mode === 3 && v1709.ⲆᐃⵠⲆ === 0) {
            ᐃⵠ = "#990000";
          } else {
            ᐃⵠ = "#A1BDCD";
          }
          v1706.drawImage(f162(v454, "" + (v1708 + 1), v454 * 15, ᐃⵠ), v454 * 20, v454 * (40 + v1708 * 22));
          v1709.ⵠⵠΔᐃᐃⵠᐃ ||= f162(v454, v1709.ⵠᐃΔⵠΔ, v454 * 15, ᐃⵠ, undefined, undefined, undefined, undefined, v454 * 110);
          v1706.drawImage(v1709.ⵠⵠΔᐃᐃⵠᐃ, v454 * 39, (40 + v1708 * 22) * v454);
          v1706.drawImage(f162(v454, ᐃⵠⵠ.ΔᐃΔⵠⵠΔΔ(v1709.ᐃⵠⲆⲆᐃ), v454 * 15, ᐃⵠ), v454 * 156, (40 + v1708 * 22) * v454);
        }
      }
      if (!vVV1433) {
        if (v2812.mode === 0 || v2812.mode === 3 || v2812.mode === 4 || v2812.mode === 5 || v2812.mode === 7 || v2812.mode === 1 && !v2813.ᐃᐃⲆⵠⲆΔᐃ || v2812.mode === 2 && !v2813.ⵠΔᐃᐃⲆ) {
          v1706.drawImage(ⵠΔ[306], v454 * 15, v454 * (46 + v1708 * 22));
          v1706.drawImage(f162(v454, ᐃⵠⵠ.ΔᐃΔⵠⵠΔΔ(v2812.ΔⵠΔⵠ[v2813.id].ᐃⵠⲆⲆᐃ), v454 * 15, "#FFF"), v454 * 100, v454 * (46 + v1708 * 22));
        }
      }
    }
    f293(v439, v1702.ΔⲆ, v1702.translate.x, v1702.translate.y);
  }
  function f312() {
    var v1710 = v2812.ΔΔΔⲆΔ;
    var v1711 = ⵠΔ[725][v2812.time];
    f293(v439, v1711, v1710.translate.x, v1710.translate.y);
    v439.save();
    v439.translate(v1710.translate.x + v1711.width / 2, v1710.translate.y + v1711.height / 2);
    v2812.ΔΔΔⲆΔ.now = (new Date().getTime() - v1710.ᐃⵠᐃⲆⵠ + v1710.ᐃᐃⲆⲆΔ) % 480000;
    var v1712 = v2812.ΔΔΔⲆΔ.now * (Math.PI * 2) / 480000 - Math.PI / 2;
    v439.rotate(v1712);
    f293(v439, ⵠΔ[726], -v1711.width / 2, -v1711.height / 2);
    v439.restore();
  }
  function f313() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[811][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f314() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[837][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f315() {
    var v1713 = v2813.ᐃⵠⵠⵠⵠ;
    if (v1713.wait) {
      var v1714 = v1713.timeout.ⲆᐃⲆ();
      v439.save();
      var v1715 = ⵠΔ[794];
      v439.translate(v1715.width - v454 * 12, v2991.ⲆᐃᐃΔ.translate.y - v454 * 190);
      var v1716 = -v1715.width / 2 + 9;
      var v1717 = -v1715.height / 2 - 4;
      f293(v439, v1715, v1716, v1717);
      v439.beginPath();
      v439.lineWidth = v454 * 5;
      v439.strokeStyle = v624.ΔⲆᐃⲆΔΔΔ[v2812.time];
      v439.lineCap = "round";
      v439.arc(9, v1717 + v1715.height / 2, v454 * 25, 0, Math.PI * 2 * v1713.timeout.ⲆⵠⲆ);
      v439.stroke();
      v439.restore();
      if (v1714) {
        v1713.wait = vVV143;
        v1713.timeout.ⲆⵠⲆ = 0;
        v1713.timeout.ᐃΔⲆ = vVVV1422;
      }
    }
  }
  function f316() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[321][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f317() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[848][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f318(p1214) {
    if (!((p1214 = p1214 / 100) > 0.8)) {
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.angle);
      if (this.ᐃⵠΔ.ⲆᐃⲆ) {
        if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
          this.ᐃⵠΔ.ⲆᐃⲆ = false;
        }
        var v1718 = (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
        var v1719 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1718;
        var v1720 = v1718 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
      } else {
        v1719 = 0;
        v1720 = 0;
      }
      v439.globalAlpha = 0.5;
      f85(v439, v1719, v1720, v454 * 18, p1214);
      f84(v439, null, "#000000", v454 * 18);
      v439.globalAlpha = 1;
      f85(v439, v1719, v1720, v454 * 18, p1214);
      f84(v439, null, v624.ⵠᐃΔΔΔⲆᐃ[v2812.time], v454 * 6);
      v439.restore();
    }
  }
  function f319() {
    for (var v1721 = v2813.ⵠⲆΔⵠ, v1722 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ], v1723 = 0; v1723 < v1721.ᐃᐃΔΔΔ.length; v1723++) {
      var v1724 = v1721.ᐃᐃΔΔΔ[v1723];
      var vVV1422 = vV142;
      if ((v1722 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ]) && (v1722.right == v1724.id || v1722.Ⲇⵠⵠᐃⵠ == v1724.id && v1722.Ⲇⵠⵠᐃⵠ > 0)) {
        vVV1422 = vVVVV164;
        f293(v439, v1724.info.ⵠᐃ[2], v1724.info.translate.x, v1724.info.translate.y, v1724.info.width, v1724.info.height);
      } else {
        v1724.ᐃᐃΔⵠ(v439);
      }
      var v1725 = v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[v1724.id];
      if (v1725 > 1) {
        f291(v1725, v1724);
      }
      if (v1725 > 0) {
        f294(v1723, v1724, vVV1422);
      }
      var v1726 = v2813.ᐃⵠΔⲆ;
      if (!!v1726.open && (!!(v1726.id < 0) || v1724.id == v1726.id) && (!v1726.lock || v2813.id == v1726.ⵠⵠⵠᐃ)) {
        v2991.ⵠⵠΔⲆΔ[v1724.id].ᐃᐃΔⵠ(v439);
      }
      if (v2813.ΔⲆΔᐃᐃ.open && v1724.id == 109) {
        v2991.ⵠⵠΔⲆΔ[v1724.id].ᐃᐃΔⵠ(v439);
      }
      if (v2813.ⵠⲆⵠΔΔ.open && v1724.id == 180) {
        v2991.ⵠⵠΔⲆΔ[v1724.id].ᐃᐃΔⵠ(v439);
      }
      if (v2813.ⲆᐃⲆⵠ.open && v1724.id == 134) {
        v2991.ⵠⵠΔⲆΔ[v1724.id].ᐃᐃΔⵠ(v439);
      }
      if (v2813.ⲆΔⲆᐃ.open && v1724.id == 109) {
        v2991.ⵠⵠΔⲆΔ[v1724.id].ᐃᐃΔⵠ(v439);
      }
      if (v2813.ⲆⲆΔΔ.open && (v1724.id == 109 || v1724.id == 131)) {
        v2991.ⵠⵠΔⲆΔ[v1724.id].ᐃᐃΔⵠ(v439);
      }
    }
    if (v1724 && v1721.max > v1723) {
      var v1727 = ⵠΔ[334][2];
      ⲆⲆ = v1724.info.translate.x;
      ᐃΔⵠ = v1724.info.translate.y;
      ⲆΔⲆ = 1;
      for (; v1721.max > v1723; v1723++, ⲆΔⲆ++) {
        f293(v439, v1727, ⲆⲆ + (v1727.width + 5) * ⲆΔⲆ, ᐃΔⵠ);
      }
    }
  }
  function f320() {
    var v1728 = v2813.ⵠⲆⵠᐃⲆ;
    if (v1728.wait) {
      var v1729 = v1728.timeout.ⲆᐃⲆ();
      v439.save();
      var v1730 = ⵠΔ[792];
      v439.translate(v1730.width - v454 * 2, v2991.ⲆᐃᐃΔ.translate.y - v454 * 125);
      var v1731 = -v1730.width / 2 + 10;
      var v1732 = -v1730.height / 2 - 4;
      f293(v439, v1730, v1731, v1732);
      v439.beginPath();
      v439.lineWidth = v454 * 5;
      v439.strokeStyle = v624.ΔⲆᐃⲆΔΔΔ[v2812.time];
      v439.lineCap = "round";
      v439.arc(9, v1732 + v1730.height / 2, v454 * 25, 0, Math.PI * 2 * v1728.timeout.ⲆⵠⲆ);
      v439.stroke();
      v439.restore();
      if (v1729) {
        v1728.wait = vVVVV1422;
        v1728.timeout.ⲆⵠⲆ = 0;
        v1728.timeout.ᐃΔⲆ = false;
      }
    }
  }
  function f321() {
    var v1733 = v2813.ⵠᐃⲆΔᐃ;
    if (v1733.wait) {
      var v1734 = v1733.timeout.ⲆᐃⲆ();
      v439.save();
      var v1735 = ⵠΔ[537];
      v439.translate(v1735.width - v454 * 2, v2991.ⲆᐃᐃΔ.translate.y - v454 * 60);
      var v1736 = -v1735.width / 2 - 2;
      var v1737 = -v1735.height / 2 - 4;
      f293(v439, v1735, v1736, v1737);
      v439.beginPath();
      v439.lineWidth = v454 * 5;
      v439.strokeStyle = v624.ⵠⵠΔⲆΔΔⵠ[v2812.time];
      v439.lineCap = "round";
      v439.arc(0, v1737 + v1735.height / 2, v454 * 25, 0, Math.PI * 2 * v1733.timeout.ⲆⵠⲆ);
      v439.stroke();
      v439.restore();
      if (v1734) {
        v1733.wait = false;
        v1733.timeout.ⲆⵠⲆ = 0;
        v1733.timeout.ᐃΔⲆ = vV144;
      }
    }
  }
  function f322() {
    var v1738 = v2813.ⵠⲆᐃⲆ;
    if (!v1738.ᐃΔⲆⲆⲆ && v1738.Ⲇᐃⵠᐃ > 0) {
      var v1739 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      if (!v1739) {
        return;
      }
      v439.save();
      if (v628[v1738.Ⲇᐃⵠᐃ].ⲆᐃⵠΔ === 0 && v1738.mode === 0) {
        v439.translate(v2813.ΔⲆΔ.x + v1739.x, v2813.ΔⲆΔ.y + v1739.y);
        v439.rotate(v1739.angle);
        v439.translate(120, 0);
      } else {
        var v1740 = Math.floor(v1739.x + Math.sin(v1739.angle) * 120);
        var v1741 = Math.floor(v1739.y + Math.cos(v1739.angle) * 120);
        v1740 = v2813.ΔⲆΔ.x + (v1740 - v1740 % 100 + 50);
        v1741 = v2813.ΔⲆΔ.y + (v1741 - v1741 % 100 + 50);
        v439.translate(v1740, v1741);
      }
      var v1742 = ⵠΔ[v1738.Ⲇᐃⵠᐃ][v2812.time];
      v439.globalAlpha = 0.5;
      f293(v439, v1742, -v1742.width / 2, -v1742.height / 2);
      v439.globalAlpha = 1;
      v439.restore();
      if (v628[v1738.Ⲇᐃⵠᐃ].ⲆᐃⵠΔ === 0) {
        if (!v1738.label[v1738.mode]) {
          if (v1738.mode === 0) {
            v1738.label[0] = f162(v454, v772[336], 20, "#e2c340");
          } else {
            v1738.label[1] = f162(v454, v772[337], 20, "#e2c340");
          }
        }
        v1742 = v1738.label[v1738.mode];
        f293(v439, v1742, v445 + -v1742.width / 2, v2991.ⲆᐃᐃΔ.y - 26);
      }
    }
    if (v1738.ᐃΔⲆⲆⲆ) {
      var v1743 = v1738.timeout.ⲆᐃⲆ();
      for (var v1744 = 0; v1744 < v1738.ΔⵠΔΔᐃ.length; v1744++) {
        var v1745 = v1738.ΔⵠΔΔᐃ[v1744];
        if (v1745.id == v1738.id) {
          var v1746 = v454 * 42;
          var v1747 = v454 * 17;
          f83(v439, v1745.info.translate.x, v1745.info.translate.y + (1 - v1738.timeout.ⲆⵠⲆ) * v1746, v1745.info.width, v1738.timeout.ⲆⵠⲆ * v1746 + v1747, v454 * 10);
          v439.fillStyle = "#55B973";
          v439.fill();
          v439.globalAlpha = 0.8;
          v1745.ᐃᐃΔⵠ(v439);
        } else {
          v439.globalAlpha = 0.5;
          v1745.ᐃᐃΔⵠ(v439);
        }
        v439.globalAlpha = 1;
      }
      if (v1743) {
        v1738.ᐃΔⲆⲆⲆ = vVV14;
        v1738.timeout.ⲆⵠⲆ = 0;
        v1738.timeout.ᐃΔⲆ = false;
      }
      return true;
    }
    for (v1744 = 0; v1744 < v1738.ΔⵠΔΔᐃ.length; v1744++) {
      v1738.ΔⵠΔΔᐃ[v1744].ᐃᐃΔⵠ(v439);
    }
    return vVV14;
  }
  function f323() {
    var v1748 = -8;
    if (v2813.ⵠⵠⵠⲆΔ.enabled) {
      var v1749 = ⵠΔ[546];
      f293(v439, v1749, v2813.ⵠⵠⵠⲆΔ.translate.x, v2813.ⵠⵠⵠⲆΔ.translate.y + v1748);
      v1748 += 70;
    }
    if (v2813.ΔΔⲆⲆⲆΔⵠ === 1) {
      v1749 = ⵠΔ[549];
      f293(v439, v1749, v2813.ⵠⵠⵠⲆΔ.translate.x, v2813.ⵠⵠⵠⲆΔ.translate.y + v1748);
      v1748 += 70;
    } else if (v2813.ⲆᐃᐃΔ.ⵠⲆⲆⵠΔ.x < 0.25 || v2813.ⲆᐃᐃΔ.ΔΔᐃⲆᐃⵠⲆ.x < 0.25 || v2813.ⲆᐃᐃΔ.ⵠᐃⵠᐃⲆⲆⲆ.x < 0.25 || v2813.ⲆᐃᐃΔ.ΔᐃᐃΔΔᐃⲆ.x < 0.25 || v2813.ⲆᐃᐃΔ.ⵠᐃⲆⵠᐃ.x < 0.25) {
      v1749 = ⵠΔ[548];
      f293(v439, v1749, v2813.ⵠⵠⵠⲆΔ.translate.x, v2813.ⵠⵠⵠⲆΔ.translate.y + v1748);
      v1748 += 70;
    }
    if (v2813.ⲆᐃΔᐃⲆ > 0) {
      v1749 = ⵠΔ[547];
      f293(v439, v1749, v2813.ⵠⵠⵠⲆΔ.translate.x, v2813.ⵠⵠⵠⲆΔ.translate.y + v1748);
      var v1750 = v1685[v2813.ⲆᐃΔᐃⲆ];
      if (v1750 === vVVVVUndefined117) {
        v1750 = f162(v454, v2813.ⲆᐃΔᐃⲆ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6);
        v1685[v2813.ⲆᐃΔᐃⲆ] = v1750;
      }
      if (v2813.ⲆᐃΔᐃⲆ < 9) {
        f293(v439, v1750, v2813.ⵠⵠⵠⲆΔ.translate.x - 39, v2813.ⵠⵠⵠⲆΔ.translate.y + v1748 + 20);
      } else {
        f293(v439, v1750, v2813.ⵠⵠⵠⲆΔ.translate.x - 46, v2813.ⵠⵠⵠⲆΔ.translate.y + v1748 + 20);
      }
    }
  }
  function f324() {
    var v1751 = v2813.ⵠⲆᐃⲆ;
    if (v1751.ᐃΔⲆⲆⲆ) {
      var v1752 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + v1752.x, v2813.ΔⲆΔ.y + v1752.y);
      var v1753 = ⵠΔ[324];
      var v1754 = -v1753.width / 2;
      var v1755 = -v1753.height / 2 - v454 * 125;
      f293(v439, v1753, v1754, v1755);
      v439.beginPath();
      v439.lineWidth = v454 * 5;
      v439.strokeStyle = v624.ᐃⵠⵠΔᐃΔⲆ[v2812.time];
      v439.lineCap = "round";
      v439.arc(0, v1755 + v1753.height / 2, v454 * 25, 0, v1751.timeout.ⲆⵠⲆ * (Math.PI * 2));
      v439.stroke();
      v439.restore();
    }
  }
  function f325(p1215) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVVVVV14) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1756 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1757 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1756;
      var v1758 = v1756 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1757 = 0;
      v1758 = 0;
    }
    var v1759 = ⵠΔ[853].length;
    ⵠᐃ = ⵠΔ[853][(this.ⲆΔⲆ + this.ᐃⲆ % 2) % v1759][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    var v1760 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
    if (v1760 && (v2813.id === this.ⵠⵠⵠᐃ || v2813.ᐃⵠᐃⵠᐃⲆⲆ(this.ⵠⵠⵠᐃ))) {
      if (ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, v1760) < 550) {
        this.opacity = Math.max(this.opacity - v3026, 0.3);
      } else {
        this.opacity = Math.min(this.opacity + v3026, 1);
      }
    } else if (v1760 && ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ]) < 150) {
      this.opacity = Math.max(this.opacity - v3026, 0.3);
    } else {
      this.opacity = Math.min(this.opacity + v3026, 1);
    }
    var v1761 = v439.globalAlpha;
    v439.globalAlpha *= this.opacity;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2 + v1757, -ⵠᐃⵠ / 2 + v1758, ⵠΔΔ, ⵠᐃⵠ);
    v439.globalAlpha = v1761;
    v439.restore();
  }
  function f326(p1216) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && vV144 == this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVV142;
      }
      var v1762 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1763 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1762;
      var v1764 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1762;
    } else {
      v1763 = 0;
      v1764 = 0;
    }
    ⵠᐃ = ⵠΔ[p1216][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2 + v1763, -ⵠᐃⵠ / 2 + v1764, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f327(p1217) {
    if (!((p1217 = p1217 / 100) > 0.95)) {
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.angle);
      if (this.ᐃⵠΔ.ⲆᐃⲆ) {
        if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVV142) {
          this.ᐃⵠΔ.ⲆᐃⲆ = v14;
        }
        var v1765 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
        var v1766 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1765;
        var v1767 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1765;
      } else {
        v1766 = 0;
        v1767 = 0;
      }
      v439.globalAlpha = 0.5;
      f85(v439, v1766, v1767, v454 * 28, p1217);
      f84(v439, null, "#000000", v454 * 18);
      v439.globalAlpha = 1;
      f85(v439, v1766, v1767, v454 * 28, p1217);
      f84(v439, null, v624.ᐃⵠⵠΔᐃΔⲆ[v2812.time], v454 * 6);
      v439.restore();
    }
  }
  function f328(p1218) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1768 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1769 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1768;
      var v1770 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1768;
    } else {
      v1769 = 0;
      v1770 = 0;
    }
    if (p1218 === 913 && !v2812.transition) {
      var v1771 = 0;
      for (var v1772 = v2812.ⲆⵠΔ[0], v1773 = 0; v1773 < v1772.length; v1773++) {
        var v1774 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v1772[v1773], this);
        if (v1774 < 140 && v1774 > 35) {
          v1771 = 0;
          break;
        }
        if (v1774 <= 35) {
          v1771 = 1;
        }
      }
      this.opacity = v1771 === 0 ? Math.max(0.5, this.opacity - v3026 / 1.5) : Math.min(1, this.opacity + v3026 / 1.5);
      v439.globalAlpha = this.opacity;
    }
    ⵠᐃ = ⵠΔ[p1218][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2 + v1769, -ⵠᐃⵠ / 2 + v1770, ⵠΔΔ, ⵠᐃⵠ);
    v439.globalAlpha = 1;
    v439.restore();
  }
  function f329(p1219) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1775 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1776 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1775;
      var v1777 = v1775 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1776 = 0;
      v1777 = 0;
    }
    if (this.ΔⲆᐃⲆⲆ.ⲆᐃⲆ()) {
      this.color += 0.2 + Math.random() * 0.3;
    }
    ⵠᐃ = ⵠΔ[872][Math.floor(this.id + this.color) % 5][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = -ⵠᐃ.height * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2 + v1776, -ⵠᐃⵠ / 2 + v1777, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  var v1778 = 0;
  function f330() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      var v1779 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1780 = v1779 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1781 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1779;
    } else {
      v1780 = 0;
      v1781 = 0;
    }
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3026 * 0.5) % (Math.PI * 2);
    }
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1780, v2813.ΔⲆΔ.y + this.y + v1781);
    v439.save();
    v439.rotate(this.rotate);
    ⵠᐃ = ⵠΔ[641][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.save();
    v439.rotate(this.ΔⲆⲆΔᐃⵠᐃᐃⲆ);
    ⵠᐃ = ⵠΔ[642][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.restore();
  }
  function f331() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.info & 31 && this.info & 992 && ~this.info & 31744 && (this.ᐃⵠⵠⲆⲆ.length == 0 || v624.ⵠⵠᐃᐃΔᐃⲆ >= this.ᐃⵠⵠⲆⲆ[this.ᐃⵠⵠⲆⲆ.length - 1])) {
      this.ᐃⵠⵠⲆⲆ.push(v624.ΔΔⲆΔΔⵠΔ);
    }
    for (var v1782 = 0; v1782 < this.ᐃⵠⵠⲆⲆ.length; v1782++) {
      this.ᐃⵠⵠⲆⲆ[v1782] = Math.max(0, this.ᐃⵠⵠⲆⲆ[v1782] - v624.ⲆⲆᐃᐃΔⲆⵠ * v3026);
      v439.globalAlpha = this.ᐃⵠⵠⲆⲆ[v1782] / 1.3;
      var v1783 = (1 - this.ᐃⵠⵠⲆⲆ[v1782]) * 40;
      var v1784 = (1 - this.ᐃⵠⵠⲆⲆ[v1782]) * 35 + 10;
      f89(v439, v454 * -68 + Math.sin(-this.angle - Math.PI / 2) * v1783, v454 * -20 + v1783 * Math.cos(-this.angle - Math.PI / 2), v1784);
      f84(v439, "#333333");
    }
    v439.globalAlpha = 1;
    if (this.ᐃⵠⵠⲆⲆ.length > 0 && this.ᐃⵠⵠⲆⲆ[0] === 0) {
      this.ᐃⵠⵠⲆⲆ.shift();
    }
    v439.restore();
  }
  function f332(p1220, p1221, p1222) {
    if (p1220 >= 0) {
      ⵠᐃ = ⵠΔ[p1220][v2812.time];
      switch (p1220) {
        case 71:
        case 72:
        case 73:
          f401(p1220, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (0 + p1221), -ⵠᐃ.height / 4 + (p1222 + 35) * v454);
          break;
        case 74:
          f401(p1220, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (1 + p1221), -ⵠᐃ.height / 4 + v454 * (p1222 + 45));
          break;
        case 75:
        case 76:
          f401(p1220, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (1 + p1221), -ⵠᐃ.height / 4 + (p1222 + 40) * v454);
      }
    }
  }
  function f333() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3026 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3026, 1);
    }
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    v1785 = ⵠΔ[450][v2812.time];
    ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1785.width);
    ⵠᐃⵠ = -v1785.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    f293(v439, v1785, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1785 = ⵠΔ[464];
      f293(v439, v1785, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v1785 = ⵠΔ[453][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1785.width * this.scale;
    ⵠᐃⵠ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1785.height);
    v439.save();
    v439.translate(v454 * -60, v454 * 20);
    v439.rotate(this.rotate.ⲆⵠⲆ);
    f293(v439, v1785, v454 * -ⵠΔΔ / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1785 = ⵠΔ[468];
      f293(v439, v1785, v454 * -ⵠΔΔ / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v1785 = ⵠΔ[454][v2812.time];
    v439.save();
    v439.translate(v454 * 60, v454 * 20);
    v439.rotate(-this.rotate.ⲆⵠⲆ);
    f293(v439, v1785, -ⵠΔΔ * v454 / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1785 = ⵠΔ[469];
      f293(v439, v1785, -ⵠΔΔ * v454 / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.restore();
  }
  function f334() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔⲆᐃⲆⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[526][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ * -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f335(p1223, p1224, p1225) {
    if (p1223 >= 0) {
      ⵠᐃ = ⵠΔ[p1223][v2812.time];
      switch (p1223) {
        case 1:
        case 3:
        case 4:
        case 8:
        case 31:
        case 32:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - v454 * (45 + p1224), -ⵠᐃ.height / 2 + (p1225 + 22) * v454);
          break;
        case 94:
        case 95:
        case 96:
        case 97:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (52 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 20));
          break;
        case 98:
        case 99:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (57 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 20));
          break;
        case 57:
        case 0:
        case 5:
        case 6:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (47 + p1224), -ⵠᐃ.height / 4 + (p1225 + 45) * v454);
          break;
        case 30:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (52 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 45));
          break;
        case 19:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - (47 + p1224) * v454, -ⵠᐃ.height / 4 + v454 * (p1225 + 44));
          break;
        case 9:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - (47 + p1224) * v454, -ⵠᐃ.height / 2 + v454 * (p1225 + 44));
          break;
        case 62:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - v454 * (40 + p1224), -ⵠᐃ.height / 2 + (p1225 + 65) * v454);
          break;
        case 12:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - (37 + p1224) * v454, -ⵠᐃ.height / 4 + v454 * (p1225 + 85));
          break;
        case 34:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (37 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 85));
          break;
        case 54:
        case 53:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (26 + p1224), -ⵠᐃ.height / 4 + (p1225 + 77) * v454);
          break;
        case 17:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (37 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 85));
          break;
        case 63:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - (47 + p1224) * v454, -ⵠᐃ.height / 4 + v454 * (p1225 + 44));
          break;
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (37 + p1224), -ⵠᐃ.height / 4 + (p1225 + 30) * v454);
          break;
        case 56:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (47 + p1224), -ⵠᐃ.height / 4 + (p1225 + 35) * v454);
          break;
        case 92:
        case 93:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - (47 + p1224) * v454, -ⵠᐃ.height / 4 + (p1225 + 40) * v454);
          break;
        case 89:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (47 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 34));
          break;
        case 13:
        case 14:
        case 15:
        case 33:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (37 + p1224), -ⵠᐃ.height / 4 + v454 * (p1225 + 90));
          break;
        case 18:
          f401(p1223, ⵠᐃ, -ⵠᐃ.width / 4 - v454 * (40 + p1224), -ⵠᐃ.height / 4 + (p1225 + 85) * v454);
          break;
        case 16:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - v454 * (39 + p1224), -ⵠᐃ.height / 2 + (p1225 + 90) * v454);
          break;
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 45:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - v454 * (46 + p1224), -ⵠᐃ.height / 2 + (p1225 + 35) * v454);
          break;
        case 49:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - (47 + p1224) * v454, -ⵠᐃ.height / 2 + v454 * (p1225 + 54));
          break;
        case 46:
        case 50:
        case 51:
        case 52:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - (46 + p1224) * v454, -ⵠᐃ.height / 2 + (p1225 + 35) * v454);
          break;
        case 55:
          f409(p1223, ⵠᐃ, -ⵠᐃ.width / 2 - v454 * (47 + p1224), -ⵠᐃ.height / 2 + (p1225 + 20) * v454);
      }
    }
  }
  function f336() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vV14) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVV144;
      }
      var v1786 = (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
      var v1787 = v1786 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1788 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1786;
    } else {
      v1787 = 0;
      v1788 = 0;
    }
    if (this.action == 2) {
      ⵠᐃ = ⵠΔ[407][v2812.time];
    } else {
      ⵠᐃ = ⵠΔ[119][v2812.time];
    }
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2 + v1787, -ⵠᐃ.height / 2 + v1788);
    v439.restore();
  }
  function f337() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3026 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3026, 1);
    }
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    v1789 = this.info === 0 ? ⵠΔ[232][v2812.time] : ⵠΔ[1068][v2812.time];
    ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1789.width);
    ⵠᐃⵠ = -v1789.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    f293(v439, v1789, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && vVVV143 == this.ᐃⵠΔ.ᐃΔⲆ) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1789 = ⵠΔ[1077];
      f293(v439, v1789, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v1789 = this.info === 0 ? ⵠΔ[1072][v2812.time] : ⵠΔ[1071][v2812.time];
    ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1789.width);
    ⵠᐃⵠ = -v1789.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    v439.save();
    v439.translate(v454 * -40, v454 * 10);
    v439.rotate(this.rotate.ⲆⵠⲆ);
    f293(v439, v1789, -ⵠΔΔ * v454 / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1789 = ⵠΔ[1078];
      f293(v439, v1789, v454 * -ⵠΔΔ / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v1789 = this.info === 0 ? ⵠΔ[1075][v2812.time] : ⵠΔ[1074][v2812.time];
    v439.save();
    v439.translate(v454 * 40, v454 * 10);
    v439.rotate(-this.rotate.ⲆⵠⲆ);
    f293(v439, v1789, -ⵠΔΔ * v454 / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1789 = ⵠΔ[1079];
      f293(v439, v1789, -ⵠΔΔ * v454 / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.restore();
  }
  function f338(p1226, p1227, p1228, p1229, p1230, p1231, p1232, p1233, p1234) {
    if (p1233 === vVVVUndefined202) {
      p1233 = 0;
    }
    for (var vP1226 = p1226; vP1226 <= p1227; vP1226++) {
      for (var vP1228 = p1228; vP1228 <= p1229; vP1228++) {
        var v1790 = v2809.ΔⵠΔⲆ[vP1226][vP1228];
        if (v1790 !== undefined && vVUndefined21 !== v1790[p1231]) {
          var v1791 = v1790[p1231];
          var v1792 = ⵠΔ[p1230][v2812.time][v1791.ΔᐃⵠⵠΔⵠΔ];
          f293(v439, v1792, v2813.ΔⲆΔ.x + v1791.x - v1792.width / (ᐃⵠᐃⵠᐃ * 4), v2813.ΔⲆΔ.y + v1791.y - v1792.height / (ᐃⵠᐃⵠᐃ * 4), v1792.width / (ᐃⵠᐃⵠᐃ * 2), v1792.height / (ᐃⵠᐃⵠᐃ * 2));
          if (v2811.ⵠᐃΔⵠⵠ) {
            var v1793 = 2147483648;
            var v1794 = ((vP1226 * 1000 + vP1228) * 1103515245 + 12345) % v1793 / v1793;
            if (v1794 < 0.2) {
              v1794 = Math.floor(v1794 * 5 * ⵠΔ[1025][v2812.time][v1791.ΔᐃⵠⵠΔⵠΔ].length);
              v1792 = ⵠΔ[1025][v2812.time][v1791.ΔᐃⵠⵠΔⵠΔ][v1794];
              f293(v439, v1792, v2813.ΔⲆΔ.x + v1791.x - v1792.width / (ᐃⵠᐃⵠᐃ * 4), v2813.ΔⲆΔ.y + v1791.y - v1792.height / (ᐃⵠᐃⵠᐃ * 4), v1792.width / (ᐃⵠᐃⵠᐃ * 2), v1792.height / (ᐃⵠᐃⵠᐃ * 2));
            } else if (v1791.ΔᐃⵠⲆⵠⵠᐃ !== 0) {
              v1792 = ⵠΔ[1026][v2812.time];
              var v1795 = (v1778 + vP1226 % 2 * 30) % 60;
              v439.globalAlpha = v1795 < 30 ? v1795 / 30 : 1 - (v1795 - 30) / 30;
              f293(v439, v1792, v2813.ΔⲆΔ.x + v1791.x - v1792.width / (ᐃⵠᐃⵠᐃ * 4), v2813.ΔⲆΔ.y + v1791.y - v1792.height / (ᐃⵠᐃⵠᐃ * 4) - 30 + v1795, v1792.width / (ᐃⵠᐃⵠᐃ * 2), v1792.height / (ᐃⵠᐃⵠᐃ * 2));
              v439.globalAlpha = 1;
            }
          }
        }
      }
    }
  }
  function f339() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1796 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
      var v1797 = v1796 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1798 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1796;
    } else {
      v1797 = 0;
      v1798 = 0;
    }
    var v1799 = this.info & 15;
    if (this.info === 10 || v1799 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1800 = ⵠΔ[953][v2812.time];
      } else {
        v1800 = ⵠΔ[204][v2812.time];
      }
      var v1801 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1800.width;
      var v1802 = -v1800.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      f293(v439, v1800, -v1801 / 2 + v1797, -v1802 / 2 + v1798, v1801, v1802);
    } else {
      if (this.info & 16) {
        v1800 = ⵠΔ[954][v2812.time];
      } else {
        v1800 = ⵠΔ[205][v2812.time];
      }
      v439.translate(0, v1800.height / 2);
      f293(v439, v1800, v1797 - v1800.width / 2, -v1800.height + v1798);
    }
    v439.restore();
  }
  function f340() {
    if (~this.info & 1) {
      this.ⵠᐃⲆⵠⵠ = Math.max(this.ⵠᐃⲆⵠⵠ - v3026, 0);
      this.ΔⲆΔΔⵠΔΔ += v3026;
      if (this.ΔⲆΔΔⵠΔΔ > 0.1) {
        this.ΔⲆΔΔⵠΔΔ = 0;
        var v1803 = {
          x: this.x + Math.random() * 60 - 30,
          y: this.y + Math.random() * 60 - 30,
          a: 0,
          r: Math.random() * 30 + 30
        };
        this.ⲆΔᐃΔ.push(v1803);
      }
    } else {
      this.ⵠᐃⲆⵠⵠ = Math.min(this.ⵠᐃⲆⵠⵠ + v3026, 2.2);
    }
    for (var v1804 = 0; this.ⲆΔᐃΔ.length > v1804; v1804++) {
      v1803 = this.ⲆΔᐃΔ[v1804];
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + v1803.x, v2813.ΔⲆΔ.y + v1803.y);
      v1803.a = Math.min(1, 0 + v3026 / 2);
      var v1805 = 0;
      if (v1805 < 0.2) {
        v1805 *= 5;
      } else {
        v1805 = v1805 > 0.8 ? (1 - v1805) * 5 : 1;
      }
      v439.globalAlpha = v1805 * 0.8;
      f89(v439, 0, 0, v1803.r);
      f84(v439, v624.ΔΔΔⲆΔᐃΔ[v2812.time]);
      v439.restore();
      if (1 === 0) {
        this.ⲆΔᐃΔ.splice(v1804, 1);
        v1804--;
      }
    }
  }
  function f341() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔⲆᐃⲆⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[289][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = -ⵠᐃ.height * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f342() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1806 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1807 = v1806 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1808 = v1806 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1807 = 0;
      v1808 = 0;
    }
    var v1809 = this.info & 15;
    if (this.info === 10 || v1809 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1810 = ⵠΔ[985][v2812.time];
      } else {
        v1810 = ⵠΔ[210][v2812.time];
      }
      var v1811 = -v1810.width * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      var v1812 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1810.height;
      f293(v439, v1810, -v1811 / 2 + v1807, -v1812 / 2 + v1808, v1811, v1812);
    } else {
      if (this.info & 16) {
        v1810 = ⵠΔ[986][v2812.time];
      } else {
        v1810 = ⵠΔ[211][v2812.time];
      }
      v439.translate(0, v1810.height / 2);
      f293(v439, v1810, v1807 - v1810.width / 2, -v1810.height + v1808);
    }
    v439.restore();
  }
  function f343() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVVV144) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVVVV14;
      }
      var v1813 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1814 = v1813 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1815 = v1813 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1814 = 0;
      v1815 = 0;
    }
    v439.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1814 += Math.random() * 2 - 1;
      v1815 += Math.random() * 2 - 1;
    }
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1814, v2813.ΔⲆΔ.y + this.y + v1815);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[156][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3026 * 3) % (Math.PI * 2);
    }
    v439.rotate(this.rotate);
    ⵠᐃ = ⵠΔ[1210][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
  }
  function f344() {
    var v1816 = Math.PI / 2;
    var v1817 = Math.PI / 4;
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.ΔᐃⵠΔΔⵠᐃ.ⲆᐃⲆ();
    this.ᐃⵠⵠΔⲆⵠⵠ.ⲆᐃⲆ();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    v1818 = this.info === 0 ? ⵠΔ[231][v2812.time] : ⵠΔ[1053][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1818.width;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1818.height;
    f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1818 = ⵠΔ[1056];
      f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.Δⵠⵠᐃⵠ.ⲆᐃⲆ() && vVVV144 == this.Δⵠⵠᐃⵠ.ᐃΔⲆ) {
        this.action -= 4;
      }
      v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
      v1818 = ⵠΔ[1065];
      f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle + v1817);
    v439.translate(100, 0);
    v439.rotate(v1816);
    v1818 = this.info === 0 ? ⵠΔ[1060][v2812.time] : ⵠΔ[1059][v2812.time];
    ⵠΔΔ = this.ΔᐃⵠΔΔⵠᐃ.ⲆⵠⲆ * -v1818.width;
    ⵠᐃⵠ = -v1818.height * this.ΔᐃⵠΔΔⵠᐃ.ⲆⵠⲆ;
    f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1818 = ⵠΔ[1057];
      f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    if (this.action & 4) {
      v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
      v1818 = ⵠΔ[1066];
      f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle + v1816 + v1817);
    v439.translate(100, 0);
    v439.rotate(v1816);
    v1818 = this.info === 0 ? ⵠΔ[1063][v2812.time] : ⵠΔ[1062][v2812.time];
    ⵠΔΔ = this.ᐃⵠⵠΔⲆⵠⵠ.ⲆⵠⲆ * -v1818.width;
    ⵠᐃⵠ = this.ᐃⵠⵠΔⲆⵠⵠ.ⲆⵠⲆ * -v1818.height;
    f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1818 = ⵠΔ[1058];
      f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    if (this.action & 4) {
      v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
      v1818 = ⵠΔ[1067];
      f293(v439, v1818, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f345() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && vV144 == this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVVV142;
      }
      var v1819 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1820 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1819;
      var v1821 = v1819 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1820 = 0;
      v1821 = 0;
    }
    this.ΔⵠⲆⵠΔᐃⵠ = (this.ΔⵠⲆⵠΔᐃⵠ + v3026 * 3) % (Math.PI * 2);
    this.ⵠΔᐃΔⵠΔᐃ = (this.ⵠΔᐃΔⵠΔᐃ - v3026 * 3) % (Math.PI * 2);
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1820, v2813.ΔⲆΔ.y + this.y + v1821);
    v439.save();
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[152][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.save();
    v439.rotate(this.ΔⵠⲆⵠΔᐃⵠ);
    ⵠᐃ = ⵠΔ[1194][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.save();
    v439.rotate(this.ⵠΔᐃΔⵠΔᐃ);
    ⵠᐃ = ⵠΔ[1193][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.restore();
  }
  function f346() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vV144) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVVV14;
      }
      var v1822 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1823 = v1822 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1824 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1822;
    } else {
      v1823 = 0;
      v1824 = 0;
    }
    var v1825 = this.info & 15;
    if (this.info === 10 || v1825 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1826 = ⵠΔ[668][v2812.time];
      } else {
        v1826 = ⵠΔ[132][v2812.time];
      }
      var v1827 = -v1826.width * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      var v1828 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1826.height;
      f293(v439, v1826, -v1827 / 2 + v1823, -v1828 / 2 + v1824, v1827, v1828);
    } else {
      this.ⲆᐃⲆᐃᐃᐃᐃ.ⲆᐃⲆ();
      if (this.info & 16) {
        v1826 = ⵠΔ[638][v2812.time];
      } else {
        v1826 = ⵠΔ[134][v2812.time];
      }
      v439.translate(0, v1826.height / 2);
      v439.rotate(this.ⲆᐃⲆᐃᐃᐃᐃ.ⲆⵠⲆ);
      f293(v439, v1826, v1823 - v1826.width / 2, -v1826.height + v1824);
    }
    v439.restore();
  }
  function f347() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ⲆΔᐃΔ.ⲆᐃⲆ();
    v439.globalAlpha = 0.3;
    var v1829 = ⵠΔ[282][v2812.time];
    var v1830 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1829.width;
    var v1831 = -v1829.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
    f293(v439, v1829, -v1830 / 2, -v1831 / 2, v1830, v1831);
    v439.globalAlpha = 1;
    v439.restore();
  }
  function f348() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3026 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3026, 1);
    }
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    v1832 = ⵠΔ[449][v2812.time];
    ⵠΔΔ = this.scale * (-v1832.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ);
    ⵠᐃⵠ = -v1832.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    f293(v439, v1832, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && vVVV1423 == this.ᐃⵠΔ.ᐃΔⲆ) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1832 = ⵠΔ[463];
      f293(v439, v1832, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v1832 = ⵠΔ[451][v2812.time];
    ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1832.width);
    ⵠᐃⵠ = -v1832.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    v439.save();
    v439.translate(v454 * -30, v454 * 70);
    v439.rotate(this.rotate.ⲆⵠⲆ);
    f293(v439, v1832, v454 * -10, v454 * -40, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1832 = ⵠΔ[466];
      f293(v439, v1832, v454 * -10, v454 * -40, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v1832 = ⵠΔ[452][v2812.time];
    v439.save();
    v439.translate(v454 * 30, v454 * 70);
    v439.rotate(-this.rotate.ⲆⵠⲆ);
    f293(v439, v1832, v454 * 10 - ⵠΔΔ, v454 * -40, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1832 = ⵠΔ[467];
      f293(v439, v1832, v454 * 10 - ⵠΔΔ, v454 * -40, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.restore();
  }
  function f349() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVV142) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVV1423;
      }
      var v1833 = (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
      var v1834 = v1833 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1835 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1833;
    } else {
      v1834 = 0;
      v1835 = 0;
    }
    var v1836 = this.info & 15;
    if (this.info === 10 || v1836 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1837 = ⵠΔ[838][v2812.time];
      } else {
        v1837 = ⵠΔ[191][v2812.time];
      }
      var v1838 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1837.width;
      var v1839 = -v1837.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      f293(v439, v1837, -v1838 / 2 + v1834, -v1839 / 2 + v1835, v1838, v1839);
    } else {
      if (this.info & 16) {
        v1837 = ⵠΔ[839][v2812.time];
      } else {
        v1837 = ⵠΔ[192][v2812.time];
      }
      v439.translate(0, v1837.height / 2);
      f293(v439, v1837, v1834 - v1837.width / 2, -v1837.height + v1835);
    }
    v439.restore();
  }
  function f350() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1840 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
      var v1841 = v1840 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1842 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1840;
    } else {
      v1841 = 0;
      v1842 = 0;
    }
    var v1843 = this.info & 15;
    if (this.info === 10 || v1843 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1844 = ⵠΔ[849][v2812.time];
      } else {
        v1844 = ⵠΔ[193][v2812.time];
      }
      var v1845 = -v1844.width * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      var v1846 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1844.height;
      f293(v439, v1844, -v1845 / 2 + v1841, -v1846 / 2 + v1842, v1845, v1846);
    } else {
      if (this.info & 16) {
        v1844 = ⵠΔ[869][v2812.time];
      } else {
        v1844 = ⵠΔ[194][v2812.time];
      }
      v439.translate(0, v1844.height / 2);
      f293(v439, v1844, v1841 - v1844.width / 2, -v1844.height + v1842);
    }
    v439.restore();
  }
  function f351() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    var v1847 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r);
    this.scale = v1847 > 350 ? Math.min(this.scale + v3026 / 2, 1.8) : Math.max(this.scale - v3026, 1);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    this.ⵠⵠᐃⲆ = v1847 < 350 ? Math.max(0, this.ⵠⵠᐃⲆ - v3026 * 2.2) : Math.min(1, this.ⵠⵠᐃⲆ + v3026 * 2.2);
    v1848 = ⵠΔ[1135][v2812.time];
    ⵠΔΔ = -v1848.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1848.height * this.scale;
    v439.globalAlpha = 1 - this.ⵠⵠᐃⲆ;
    f293(v439, v1848, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    v1848 = ⵠΔ[1119][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1848.width * this.scale;
    ⵠᐃⵠ = -v1848.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    v439.globalAlpha = this.ⵠⵠᐃⲆ;
    f293(v439, v1848, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ) * (1 - this.ⵠⵠᐃⲆ);
      var v1848 = ⵠΔ[1136];
      ⵠΔΔ = this.scale * (-v1848.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ);
      ⵠᐃⵠ = -v1848.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
      f293(v439, v1848, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = this.ⵠⵠᐃⲆ * (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ);
      v1848 = ⵠΔ[1128];
      ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1848.width * this.scale;
      ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1848.height * this.scale;
      f293(v439, v1848, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v1848 = ⵠΔ[1122][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1848.width * this.scale;
    ⵠᐃⵠ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1848.height);
    v439.save();
    v439.translate(v454 * -40, v454 * 80);
    v439.rotate(this.rotate.ⲆⵠⲆ);
    v439.globalAlpha = this.ⵠⵠᐃⲆ;
    f293(v439, v1848, v454 * -ⵠΔΔ / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ) * this.ⵠⵠᐃⲆ;
      v1848 = ⵠΔ[1129];
      f293(v439, v1848, v454 * -ⵠΔΔ / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v1848 = ⵠΔ[1125][v2812.time];
    v439.save();
    v439.translate(v454 * 40, v454 * 80);
    v439.rotate(-this.rotate.ⲆⵠⲆ);
    v439.globalAlpha = this.ⵠⵠᐃⲆ;
    f293(v439, v1848, -ⵠΔΔ * v454 / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ) * this.ⵠⵠᐃⲆ;
      v1848 = ⵠΔ[1130];
      f293(v439, v1848, -ⵠΔΔ * v454 / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.globalAlpha = 1;
    v439.restore();
    v439.restore();
  }
  function f352() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVV143) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1849 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1850 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1849;
      var v1851 = v1849 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1850 = 0;
      v1851 = 0;
    }
    v439.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1850 += Math.random() * 2 - 1;
      v1851 += Math.random() * 2 - 1;
    }
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1850, v2813.ΔⲆΔ.y + this.y + v1851);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[154][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3026 * 3) % (Math.PI * 2);
    }
    v439.rotate(this.rotate);
    ⵠᐃ = ⵠΔ[1202][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
  }
  function f353() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && vVV142 == this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1852 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1853 = v1852 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1854 = v1852 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1853 = 0;
      v1854 = 0;
    }
    v439.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1853 += Math.random() * 2 - 1;
      v1854 += Math.random() * 2 - 1;
    }
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1853, v2813.ΔⲆΔ.y + this.y + v1854);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[153][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3026 * 3) % (Math.PI * 2);
    }
    v439.rotate(this.rotate);
    ⵠᐃ = ⵠΔ[1198][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
  }
  function f354() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1855 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1856 = v1855 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1857 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1855;
    } else {
      v1856 = 0;
      v1857 = 0;
    }
    v439.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1856 += Math.random() * 2 - 1;
      v1857 += Math.random() * 2 - 1;
    }
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1856, v2813.ΔⲆΔ.y + this.y + v1857);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[157][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3026 * 3) % (Math.PI * 2);
    }
    v439.rotate(this.rotate);
    ⵠᐃ = ⵠΔ[1214][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
  }
  function f355(p1235) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[p1235][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f356() {
    if (!(this.info < 10)) {
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.angle);
      if (this.ᐃⵠΔ.ⲆᐃⲆ) {
        if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
          this.ᐃⵠΔ.ⲆᐃⲆ = vVV1432;
        }
        var v1858 = (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
        var v1859 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1858;
        var v1860 = v1858 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
      } else {
        v1859 = 0;
        v1860 = 0;
      }
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      var v1861 = ⵠΔ[115][v2812.time];
      var v1862 = -v1861.width * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      var v1863 = -v1861.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      f293(v439, v1861, -v1862 / 2 + v1859, -v1863 / 2 + v1860, v1862, v1863);
      v439.restore();
    }
  }
  function f357() {
    var vUndefined3 = undefined;
    var vVVVVUndefined202 = vVVVUndefined20;
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    if (this.ⵠᐃⲆⵠⵠ >= 0.1 && this.ⵠᐃⲆⵠⵠ <= 1.1) {
      if ((v1864 = Math.max(0, Math.min(1, this.ⵠᐃⲆⵠⵠ - 0.1))) < 0.2) {
        v1864 *= 5;
      } else {
        v1864 = v1864 > 0.8 ? (1 - v1864) * 5 : 1;
      }
      vUndefined3 = ⵠΔ[1150][v2812.time];
      ⵠΔΔ = -vUndefined3.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
      ⵠᐃⵠ = -vUndefined3.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
      v439.globalAlpha = v1864;
      f293(v439, vUndefined3, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      vVVVVUndefined202 = ⵠΔ[1151];
    }
    if (this.ⵠᐃⲆⵠⵠ >= 0.9) {
      var v1864;
      if ((v1864 = Math.max(0, Math.min(1, this.ⵠᐃⲆⵠⵠ - 0.9))) < 0.2) {
        v1864 *= 5;
      } else {
        v1864 = 1;
      }
      vUndefined3 = ⵠΔ[1152][v2812.time];
      ⵠΔΔ = -vUndefined3.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
      ⵠᐃⵠ = -vUndefined3.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
      v439.globalAlpha = v1864;
      f293(v439, vUndefined3, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      vVVVVUndefined202 = ⵠΔ[1153];
    }
    if (this.action & 2 && vVVVUndefined117 !== vVVVVUndefined202) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = v1864 * (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ);
      ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -vVVVVUndefined202.width;
      ⵠᐃⵠ = -vVVVVUndefined202.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
      f293(v439, vVVVVUndefined202, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    }
    v439.globalAlpha = 1;
    v439.restore();
  }
  function f358() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVVV14;
      }
      var v1865 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
      var v1866 = v1865 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1867 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1865;
    } else {
      v1866 = 0;
      v1867 = 0;
    }
    this.ΔⵠⲆⵠΔᐃⵠ = (this.ΔⵠⲆⵠΔᐃⵠ + v3026 * 3) % (Math.PI * 2);
    this.ⵠΔᐃΔⵠΔᐃ = (this.ⵠΔᐃΔⵠΔᐃ - v3026 * 3) % (Math.PI * 2);
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1866, v2813.ΔⲆΔ.y + this.y + v1867);
    v439.save();
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[151][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.save();
    v439.rotate(this.ΔⵠⲆⵠΔᐃⵠ);
    ⵠᐃ = ⵠΔ[528][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.save();
    v439.rotate(this.ⵠΔᐃΔⵠΔᐃ);
    ⵠᐃ = ⵠΔ[527][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
    v439.restore();
  }
  function f359() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1868 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1869 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1868;
      var v1870 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1868;
    } else {
      v1869 = 0;
      v1870 = 0;
    }
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1869, v2813.ΔⲆΔ.y + this.y + v1870);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[135][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
  }
  function f360() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVV14;
      }
      var v1871 = (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
      var v1872 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1871;
      var v1873 = v1871 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1872 = 0;
      v1873 = 0;
    }
    if (this.info & 31 && this.info & 992 && ~this.info & 31744) {
      v1874 = ⵠΔ[716][v2812.time];
      f293(v439, v1874, -v1874.width / 2 + v1872, -v1874.height / 2 + v1873);
      this.up.ⲆᐃⲆ();
      var v1874 = ⵠΔ[720][v2812.time];
      var v1875 = this.up.ⲆⵠⲆ * -v1874.width;
      var v1876 = this.up.ⲆⵠⲆ * -v1874.height;
      f293(v439, v1874, -v1875 / 2 + v454 * 1, -v1876 / 2 + v454 * 3, v1875, v1876);
    } else {
      v1874 = ⵠΔ[144][v2812.time];
      f293(v439, v1874, -v1874.width / 2 + v1872, -v1874.height / 2 + v1873);
    }
    v439.restore();
  }
  function f361(p1236, p1237) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    v1877 = ⵠΔ[p1236][v2812.time];
    ⵠΔΔ = -v1877.width;
    ⵠᐃⵠ = -v1877.height;
    f293(v439, v1877, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == vVVV143) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1877 = ⵠΔ[p1237];
      f293(v439, v1877, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f362() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3026 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3026, 1);
    }
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    v1878 = this.info === 0 ? ⵠΔ[233][v2812.time] : ⵠΔ[1083][v2812.time];
    ⵠΔΔ = -v1878.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    ⵠᐃⵠ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1878.height);
    f293(v439, v1878, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && vVVVV14 == this.ᐃⵠΔ.ᐃΔⲆ) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1878 = ⵠΔ[1092];
      f293(v439, v1878, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v1878 = this.info === 0 ? ⵠΔ[1087][v2812.time] : ⵠΔ[1086][v2812.time];
    ⵠΔΔ = this.scale * (-v1878.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ);
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1878.height * this.scale;
    v439.save();
    v439.translate(v454 * -40, v454 * 10);
    v439.rotate(this.rotate.ⲆⵠⲆ);
    f293(v439, v1878, -ⵠΔΔ * v454 / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1878 = ⵠΔ[1093];
      f293(v439, v1878, -ⵠΔΔ * v454 / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v1878 = this.info === 0 ? ⵠΔ[1090][v2812.time] : ⵠΔ[1089][v2812.time];
    v439.save();
    v439.translate(v454 * 40, v454 * 10);
    v439.rotate(-this.rotate.ⲆⵠⲆ);
    f293(v439, v1878, -ⵠΔΔ * v454 / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1878 = ⵠΔ[1094];
      f293(v439, v1878, v454 * -ⵠΔΔ / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.restore();
  }
  function f363(p1238, p1239) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    v1879 = ⵠΔ[p1238][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1879.width;
    ⵠᐃⵠ = -v1879.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
    f293(v439, v1879, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == vV14) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1879 = ⵠΔ[p1239];
      f293(v439, v1879, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f364() {
    var v1880 = Math.PI / 2;
    var v1881 = Math.PI / 4;
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.ΔᐃⵠΔΔⵠᐃ.ⲆᐃⲆ();
    this.ᐃⵠⵠΔⲆⵠⵠ.ⲆᐃⲆ();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    v1882 = this.info === 0 ? ⵠΔ[887][v2812.time] : ⵠΔ[886][v2812.time];
    ⵠΔΔ = -v1882.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1882.height;
    f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && vVVV1422 == this.ᐃⵠΔ.ᐃΔⲆ) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1882 = ⵠΔ[888];
      f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.Δⵠⵠᐃⵠ.ⲆᐃⲆ() && vVVV143 == this.Δⵠⵠᐃⵠ.ᐃΔⲆ) {
        this.action -= 4;
      }
      v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
      v1882 = ⵠΔ[891];
      f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle + v1881);
    v439.translate(55, 0);
    v439.rotate(v1880);
    v1882 = this.info === 0 ? ⵠΔ[894][v2812.time] : ⵠΔ[896][v2812.time];
    ⵠΔΔ = -v1882.width * this.ΔᐃⵠΔΔⵠᐃ.ⲆⵠⲆ;
    ⵠᐃⵠ = this.ΔᐃⵠΔΔⵠᐃ.ⲆⵠⲆ * -v1882.height;
    f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1882 = ⵠΔ[889];
      f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    if (this.action & 4) {
      v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
      v1882 = ⵠΔ[892];
      f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle + v1880 + v1881);
    v439.translate(55, 0);
    v439.rotate(v1880);
    v1882 = this.info === 0 ? ⵠΔ[895][v2812.time] : ⵠΔ[897][v2812.time];
    ⵠΔΔ = -v1882.width * this.ᐃⵠⵠΔⲆⵠⵠ.ⲆⵠⲆ;
    ⵠᐃⵠ = -v1882.height * this.ᐃⵠⵠΔⲆⵠⵠ.ⲆⵠⲆ;
    f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      v1882 = ⵠΔ[890];
      f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    if (this.action & 4) {
      v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
      v1882 = ⵠΔ[893];
      f293(v439, v1882, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f365() {
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    v1883 = this.info === 0 ? ⵠΔ[248][v2812.time] : ⵠΔ[1222][v2812.time];
    ⵠΔΔ = -v1883.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1883.height;
    f293(v439, v1883, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1883 = ⵠΔ[1223];
      f293(v439, v1883, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f366() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ᐃΔⲆⲆΔ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[288][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width * this.ᐃΔⲆⲆΔ.ⲆⵠⲆ;
    ⵠᐃⵠ = -ⵠᐃ.height * this.ᐃΔⲆⲆΔ.ⲆⵠⲆ;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    this.ΔⲆᐃⲆⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[289][v2812.time];
    ⵠΔΔ = this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ * -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f367(p1240, p1241) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    v1884 = ⵠΔ[p1240][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1884.width;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1884.height;
    f293(v439, v1884, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1884 = ⵠΔ[p1241];
      f293(v439, v1884, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f368() {
    if (!(this.info < 10)) {
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.angle);
      if (this.ᐃⵠΔ.ⲆᐃⲆ) {
        if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
          this.ᐃⵠΔ.ⲆᐃⲆ = false;
        }
        var v1885 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
        var v1886 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1885;
        var v1887 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1885;
      } else {
        v1886 = 0;
        v1887 = 0;
      }
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      var v1888 = ⵠΔ[206][v2812.time];
      var v1889 = -v1888.width * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      var v1890 = -v1888.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      f293(v439, v1888, -v1889 / 2 + v1886, -v1890 / 2 + v1887, v1889, v1890);
      v439.restore();
    }
  }
  function f369() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ΔⲆᐃⲆⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[1192][v2812.time];
    ⵠΔΔ = this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ * -ⵠᐃ.width;
    ⵠᐃⵠ = -ⵠᐃ.height * this.ΔⲆᐃⲆⲆ.ⲆⵠⲆ;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f370() {
    if (this.info !== 10) {
      for (var v1891 = this.info & 15, v1892 = 0; v1891 > v1892; v1892++) {
        this.ⵠⵠⲆⵠ[v1892].ᐃᐃΔⵠ(207, this.x, this.y);
      }
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.angle);
      if (this.ᐃⵠΔ.ⲆᐃⲆ) {
        if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVVV1423) {
          this.ᐃⵠΔ.ⲆᐃⲆ = false;
        }
        var v1893 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
        var v1894 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1893;
        var v1895 = v1893 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
      } else {
        v1894 = 0;
        v1895 = 0;
      }
      if (this.info & 16) {
        var v1896 = ⵠΔ[958][v2812.time];
      } else {
        v1896 = ⵠΔ[957][v2812.time];
      }
      f293(v439, v1896, -v1896.width / 2 + v1894, -v1896.width / 2 + v1895);
      v439.restore();
    }
  }
  function f371() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVV14;
      }
      var v1897 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
      var v1898 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1897;
      var v1899 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1897;
    } else {
      v1898 = 0;
      v1899 = 0;
    }
    if (this.info === 0) {
      ⵠᐃ = ⵠΔ[183][v2812.time];
    } else {
      ⵠᐃ = ⵠΔ[802][v2812.time][this.info - 1];
    }
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2 + v1898, -ⵠᐃ.height / 2 + v1899);
    v439.restore();
  }
  function f372() {
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    v1900 = this.info === 0 ? ⵠΔ[1042][v2812.time] : ⵠΔ[1044][v2812.time];
    ⵠΔΔ = -v1900.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1900.height;
    f293(v439, v1900, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var v1900 = ⵠΔ[1045];
      f293(v439, v1900, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f373() {
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = false;
      }
      var v1901 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
      var v1902 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1901;
      var v1903 = v1901 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1902 = 0;
      v1903 = 0;
    }
    v439.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1902 += Math.random() * 2 - 1;
      v1903 += Math.random() * 2 - 1;
    }
    v439.translate(v2813.ΔⲆΔ.x + this.x + v1902, v2813.ΔⲆΔ.y + this.y + v1903);
    v439.rotate(this.angle);
    ⵠᐃ = ⵠΔ[155][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3026 * 3) % (Math.PI * 2);
    }
    v439.rotate(this.rotate);
    ⵠᐃ = ⵠΔ[1206][v2812.time];
    f293(v439, ⵠᐃ, -ⵠᐃ.width / 2, -ⵠᐃ.height / 2);
    v439.restore();
  }
  function f374() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    var v1904 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r);
    this.scale = v1904 > 350 ? Math.min(this.scale + v3026 / 2, 1.8) : Math.max(this.scale - v3026, 1);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    this.rotate.ⲆᐃⲆ();
    this.ⵠⵠᐃⲆ = v1904 < 350 ? Math.max(0, this.ⵠⵠᐃⲆ - v3026 * 2.2) : Math.min(1, this.ⵠⵠᐃⲆ + v3026 * 2.2);
    v1905 = this.info & 1 ? ⵠΔ[1114][v2812.time] : ⵠΔ[1113][v2812.time];
    ⵠΔΔ = -v1905.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    ⵠᐃⵠ = -v1905.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
    v439.globalAlpha = 1 - this.ⵠⵠᐃⲆ;
    f293(v439, v1905, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    v1905 = this.info & 1 ? ⵠΔ[1098][v2812.time] : ⵠΔ[235][v2812.time];
    ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1905.width);
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1905.height * this.scale;
    v439.globalAlpha = this.ⵠⵠᐃⲆ;
    f293(v439, v1905, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
        this.action -= 2;
      }
      v439.globalAlpha = (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ) * (1 - this.ⵠⵠᐃⲆ);
      var v1905 = ⵠΔ[1115];
      ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1905.width * this.scale;
      ⵠᐃⵠ = -v1905.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ * this.scale;
      f293(v439, v1905, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ) * this.ⵠⵠᐃⲆ;
      v1905 = ⵠΔ[1107];
      ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1905.width);
      ⵠᐃⵠ = this.scale * (-v1905.height * this.ΔᐃᐃⲆ.ⲆⵠⲆ);
      f293(v439, v1905, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v1905 = (this.info & 1) === 0 ? ⵠΔ[1102][v2812.time] : ⵠΔ[1101][v2812.time];
    ⵠΔΔ = this.scale * (this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1905.width);
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -v1905.height * this.scale;
    v439.save();
    v439.translate(v454 * -20, v454 * 0);
    v439.rotate(this.rotate.ⲆⵠⲆ);
    v439.globalAlpha = this.ⵠⵠᐃⲆ;
    f293(v439, v1905, -ⵠΔΔ * v454 / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = this.ⵠⵠᐃⲆ * (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ);
      v1905 = ⵠΔ[1108];
      f293(v439, v1905, v454 * -ⵠΔΔ / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.restore();
    v1905 = this.info & 1 ? ⵠΔ[1104][v2812.time] : ⵠΔ[1105][v2812.time];
    v439.save();
    v439.translate(v454 * 20, v454 * 0);
    v439.rotate(-this.rotate.ⲆⵠⲆ);
    v439.globalAlpha = this.ⵠⵠᐃⲆ;
    f293(v439, v1905, v454 * -ⵠΔΔ / 4, v454 * -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
    if (this.action & 2) {
      v439.globalAlpha = this.ⵠⵠᐃⲆ * (0.6 - this.ᐃⵠΔ.ⲆⵠⲆ);
      v1905 = ⵠΔ[1109];
      f293(v439, v1905, v454 * -ⵠΔΔ / 4, -ⵠᐃⵠ * v454 / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
      v439.globalAlpha = 1;
    }
    v439.globalAlpha = 1;
    v439.restore();
    v439.restore();
  }
  function f375() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ⵠΔⲆⲆⲆΔᐃ = Math.min(1, this.ⵠΔⲆⲆⲆΔᐃ + v3026 * 2);
    v439.globalAlpha = Math.min(1, Math.max(0, ᐃⵠⵠ.Ⲇᐃᐃᐃ(this, this.r) / 80)) * this.ⵠΔⲆⲆⲆΔᐃ;
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[247][v2812.time][this.ⵠⲆⲆⵠᐃ];
    if (this.ⵠⲆⲆⵠᐃ < 2) {
      ⵠΔΔ = -ⵠᐃ.width * this.ΔᐃᐃⲆ.ⲆⵠⲆ;
      ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -ⵠᐃ.height;
    } else if (this.ⵠⵠⲆⲆΔⲆⵠ === 0) {
      ⵠΔΔ = -ⵠᐃ.width;
      ⵠᐃⵠ = -ⵠᐃ.height;
    } else {
      ⵠΔΔ = -ⵠᐃ.width * 1.35;
      ⵠᐃⵠ = -ⵠᐃ.height * 1.35;
    }
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.globalAlpha = 1;
    v439.restore();
  }
  function f376() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = v14;
      }
      var v1906 = v454 * (v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600);
      var v1907 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1906;
      var v1908 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1906;
    } else {
      v1907 = 0;
      v1908 = 0;
    }
    var v1909 = this.info & 15;
    if (this.info === 10 || v1909 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1910 = ⵠΔ[812][v2812.time];
      } else {
        v1910 = ⵠΔ[188][v2812.time];
      }
      var v1911 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1910.width;
      var v1912 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1910.height;
      f293(v439, v1910, -v1911 / 2 + v1907, -v1912 / 2 + v1908, v1911, v1912);
    } else {
      if (this.info & 16) {
        v1910 = ⵠΔ[813][v2812.time];
      } else {
        v1910 = ⵠΔ[189][v2812.time];
      }
      v439.translate(0, v1910.height / 2);
      f293(v439, v1910, v1907 - v1910.width / 2, -v1910.height + v1908);
    }
    v439.restore();
  }
  function f377(p1242, p1243, p1244) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + p1243, v2813.ΔⲆΔ.y + p1244);
    v439.rotate(this.angle);
    v439.translate(this.x - p1243, this.y - p1244);
    this.ΔᐃᐃⲆ.ⲆᐃⲆ();
    ⵠᐃ = ⵠΔ[p1242][v2812.time];
    ⵠΔΔ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -ⵠᐃ.width;
    ⵠᐃⵠ = this.ΔᐃᐃⲆ.ⲆⵠⲆ * -ⵠᐃ.height;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    v439.restore();
  }
  function f378(p1245, p1246) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    if (p1245 === 854) {
      p1245 = 250;
      this.info = 36;
    }
    ⵠᐃ = ⵠΔ[p1245][this.info][v2812.time];
    ⵠΔΔ = -ⵠᐃ.width / 2;
    ⵠᐃⵠ = -ⵠᐃ.height / 2;
    f293(v439, ⵠᐃ, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
    if (this.action & 2) {
      if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == vVVVVV1422) {
        this.action -= 2;
      }
      v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
      var vQm = f386(this.info, ⵠᐃ, ΔⲆᐃᐃⵠΔΔⵠⲆ);
      f293(v439, vQm, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      v439.globalAlpha = 1;
    }
    v439.restore();
  }
  function f379() {
    if (this.info !== 10) {
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.angle);
      if (this.ᐃⵠΔ.ⲆᐃⲆ) {
        if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vVVV14) {
          this.ᐃⵠΔ.ⲆᐃⲆ = vVVVV1422;
        }
        var v1913 = v3026 * (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * 600 * v454;
        var v1914 = v1913 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
        var v1915 = v1913 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
      } else {
        v1914 = 0;
        v1915 = 0;
      }
      if (this.info & 16) {
        var v1916 = ⵠΔ[623][v2812.time];
      } else {
        v1916 = ⵠΔ[287][v2812.time];
      }
      f293(v439, v1916, -v1916.width / 2 + v1914, -v1916.width / 2 + v1915);
      v439.restore();
      for (var v1917 = this.info & 15, v1918 = 0; v1917 > v1918; v1918++) {
        this.ⵠⵠⲆⵠ[v1918].ᐃᐃΔⵠ(294);
      }
    }
  }
  function f380(p1247) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    v439.rotate(this.angle);
    this.ⲆΔᐃΔ.ⲆᐃⲆ();
    v439.globalAlpha = 0.3;
    var v1919 = ⵠΔ[282][v2812.time];
    var v1920 = this.ⲆΔᐃΔ.ⲆⵠⲆ * -v1919.width;
    var v1921 = -v1919.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
    f293(v439, v1919, -v1920 / 2, -v1921 / 2, v1920, v1921);
    v439.globalAlpha = 1;
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == vV142) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVVVVV14;
      }
      var v1922 = (1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
      var v1923 = Math.sin(this.ᐃⵠΔ.angle - this.angle) * v1922;
      var v1924 = Math.cos(this.ᐃⵠΔ.angle - this.angle) * v1922;
    } else {
      v1923 = 0;
      v1924 = 0;
    }
    v1919 = ⵠΔ[p1247][v2812.time];
    f293(v439, v1919, -v1919.width / 2 + v1923, -v1919.height / 2 + v1924);
    v439.restore();
  }
  function f381() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.ᐃⵠΔ.ⲆᐃⲆ) {
      if (this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ΔᐃⲆΔ.ᐃΔⲆ == 0) {
        this.ᐃⵠΔ.ⲆᐃⲆ = vVV14;
      }
      var v1925 = v454 * ((1 - this.ᐃⵠΔ.ΔᐃⲆΔ.ⲆⵠⲆ) * v3026 * 600);
      var v1926 = v1925 * Math.sin(this.ᐃⵠΔ.angle - this.angle);
      var v1927 = v1925 * Math.cos(this.ᐃⵠΔ.angle - this.angle);
    } else {
      v1926 = 0;
      v1927 = 0;
    }
    var v1928 = this.info & 15;
    if (this.info === 10 || v1928 === 0) {
      v439.rotate(this.angle);
      this.ⲆΔᐃΔ.ⲆᐃⲆ();
      if (this.info & 16) {
        var v1929 = ⵠΔ[970][v2812.time];
      } else {
        v1929 = ⵠΔ[208][v2812.time];
      }
      var v1930 = -v1929.width * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      var v1931 = -v1929.height * this.ⲆΔᐃΔ.ⲆⵠⲆ;
      f293(v439, v1929, -v1930 / 2 + v1926, -v1931 / 2 + v1927, v1930, v1931);
    } else {
      if (this.info & 16) {
        v1929 = ⵠΔ[971][v2812.time];
      } else {
        v1929 = ⵠΔ[209][v2812.time];
      }
      v439.translate(0, v1929.height / 2);
      f293(v439, v1929, v1926 - v1929.width / 2, -v1929.height + v1927);
    }
    v439.restore();
  }
  function f382(p1248) {
    if (p1248 > 0) {
      var v1932 = ⵠΔ[p1248][v2812.time];
      switch (p1248) {
        case 58:
          f409(p1248, v1932, -v1932.width / 2 + v454 * 2, -v1932.height / 2 - v454 * 5);
          break;
        case 10:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 18);
          break;
        case 11:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 10);
          break;
        case 23:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 19);
          break;
        case 24:
          f401(p1248, v1932, -v1932.width / 4, -v1932.height / 4 - v454 * 20);
          break;
        case 25:
          f409(p1248, v1932, -v1932.width / 2 - v454 * 1, -v1932.height / 2 - v454 * 23);
          break;
        case 26:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 5);
          break;
        case 27:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 2);
          break;
        case 43:
          f409(p1248, v1932, -v1932.width / 2 + v454 * 1.5, -v1932.height / 2 - v454 * 1);
          break;
        case 44:
        case 20:
        case 21:
        case 22:
        case 80:
        case 81:
        case 82:
        case 60:
        case 90:
        case 88:
        case 87:
          f401(p1248, v1932, -v1932.width / 4, -v1932.height / 4 + v454 * 2);
          break;
        case 41:
        case 42:
          f409(p1248, v1932, -v1932.width / 2 - v454 * 5, -v1932.height / 2 - v454 * 2);
          break;
        case 40:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 2);
          break;
        case 85:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 2);
          break;
        case 48:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 2);
          break;
        case 47:
          f409(p1248, v1932, -v1932.width / 2 + v454 * 2, -v1932.height / 2);
          break;
        case 59:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 5);
          break;
        case 77:
        case 78:
        case 79:
          f409(p1248, v1932, -v1932.width / 2 - v454 * 1, -v1932.height / 2);
          break;
        case 83:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 + v454 * 2);
          break;
        case 84:
        case 86:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 + v454 * 8);
          break;
        case 61:
          f409(p1248, v1932, -v1932.width / 2, -v1932.height / 2 - v454 * 4);
      }
    }
  }
  function f383() {
    if (!this.ΔⵠᐃⵠⲆ && this.ⵠΔᐃⵠⵠ !== 0) {
      if (this.r.x != this.x || this.y != this.r.y) {
        var v1933 = (ᐃⵠⵠ.ⵠᐃⵠᐃⲆⲆⵠ(this.x, this.y, this.r.x, this.r.y) + Math.PI / 2) % (Math.PI * 2);
        this.ᐃⵠⲆᐃᐃ = ᐃⵠⵠ.ⲆⵠΔⵠᐃⵠΔ(v1933, this.ᐃⵠⲆᐃᐃ);
        this.ᐃⵠⲆᐃᐃ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(this.ᐃⵠⲆᐃᐃ, v1933, 0.018);
      }
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v439.rotate(this.ᐃⵠⲆᐃᐃ);
      if (this.ⵠΔᐃⵠⵠ === 223) {
        if (this.ⵠΔⵠⲆΔ > 50 || this.ΔⲆΔΔⵠ > 0) {
          if (this.ⵠΔⵠⲆΔ > 50) {
            this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026);
          } else {
            this.ΔⲆΔΔⵠ = Math.max(0, this.ΔⲆΔΔⵠ - v3026);
          }
          v439.globalAlpha = this.ΔⲆΔΔⵠ;
          var v1934 = ⵠΔ[225][v2812.time];
          f401(225, v1934, -v1934.width / 4, -v1934.height / 4);
          v439.globalAlpha = 1;
        }
        v1934 = ⵠΔ[223][v2812.time];
        f401(223, v1934, -v1934.width / 4, -v1934.height / 4);
      } else if (this.ⵠΔᐃⵠⵠ === 229) {
        this.ΔⲆᐃᐃⵠ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(this.ΔⲆᐃᐃⵠ, this.ⵠΔⵠⲆΔ, 0.018);
        this.ΔⲆᐃᐃΔΔⲆ.ⲆᐃⲆ();
        if (this.ⵠΔⵠⲆΔ > 85) {
          this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026 / 4);
        } else {
          this.ΔⲆΔΔⵠ = Math.max(0.1, this.ΔⲆΔΔⵠ - v3026);
        }
        v1934 = ⵠΔ[1100][v2812.time];
        f401(1100, v1934, -v1934.width / 4, -v1934.height / 4);
        v1934 = ⵠΔ[1103][v2812.time];
        ⵠΔΔ = -v1934.width;
        ⵠᐃⵠ = -v1934.height;
        v439.save();
        v439.translate(v454 * -20, v454 * -20);
        v439.rotate(this.ΔⲆΔΔⵠ * this.ΔⲆᐃᐃΔΔⲆ.ⲆⵠⲆ);
        f293(v439, v1934, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
        v439.restore();
        v1934 = ⵠΔ[1106][v2812.time];
        v439.save();
        v439.translate(v454 * 20, v454 * -20);
        v439.rotate(this.ΔⲆΔΔⵠ * -this.ΔⲆᐃᐃΔΔⲆ.ⲆⵠⲆ);
        f293(v439, v1934, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
        v439.restore();
      } else if (this.ⵠΔᐃⵠⵠ === 228) {
        this.ΔⲆᐃᐃⵠ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(this.ΔⲆᐃᐃⵠ, this.ⵠΔⵠⲆΔ, 0.018);
        this.ΔⲆᐃᐃΔΔⲆ.ⲆᐃⲆ();
        if (this.ⵠΔⵠⲆΔ > 85) {
          this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026 / 4);
        } else {
          this.ΔⲆΔΔⵠ = Math.max(0.1, this.ΔⲆΔΔⵠ - v3026);
        }
        v1934 = ⵠΔ[1085][v2812.time];
        f401(1085, v1934, -v1934.width / 4, -v1934.height / 4);
        v1934 = ⵠΔ[1088][v2812.time];
        ⵠΔΔ = -v1934.width;
        ⵠᐃⵠ = -v1934.height;
        v439.save();
        v439.translate(v454 * -40, v454 * -45);
        v439.rotate(this.ΔⲆΔΔⵠ * this.ΔⲆᐃᐃΔΔⲆ.ⲆⵠⲆ);
        f293(v439, v1934, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
        v439.restore();
        v1934 = ⵠΔ[1091][v2812.time];
        v439.save();
        v439.translate(v454 * 40, v454 * -45);
        v439.rotate(-this.ΔⲆᐃᐃΔΔⲆ.ⲆⵠⲆ * this.ΔⲆΔΔⵠ);
        f293(v439, v1934, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
        v439.restore();
      } else if (this.ⵠΔᐃⵠⵠ === 227) {
        this.ΔⲆᐃᐃⵠ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(this.ΔⲆᐃᐃⵠ, this.ⵠΔⵠⲆΔ, 0.018);
        this.ΔⲆᐃᐃΔΔⲆ.ⲆᐃⲆ();
        if (this.ⵠΔⵠⲆΔ > 85) {
          this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026 / 4);
        } else {
          this.ΔⲆΔΔⵠ = Math.max(0.1, this.ΔⲆΔΔⵠ - v3026);
        }
        v1934 = ⵠΔ[1070][v2812.time];
        f401(1070, v1934, -v1934.width / 4, -v1934.height / 4);
        v1934 = ⵠΔ[1073][v2812.time];
        ⵠΔΔ = -v1934.width;
        ⵠᐃⵠ = -v1934.height;
        v439.save();
        v439.translate(v454 * -40, v454 * -45);
        v439.rotate(this.ΔⲆΔΔⵠ * this.ΔⲆᐃᐃΔΔⲆ.ⲆⵠⲆ);
        f293(v439, v1934, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
        v439.restore();
        v1934 = ⵠΔ[1076][v2812.time];
        v439.save();
        v439.translate(v454 * 40, v454 * -45);
        v439.rotate(-this.ΔⲆᐃᐃΔΔⲆ.ⲆⵠⲆ * this.ΔⲆΔΔⵠ);
        f293(v439, v1934, -ⵠΔΔ / 4, -ⵠᐃⵠ / 4, ⵠΔΔ / 2, ⵠᐃⵠ / 2);
        v439.restore();
      } else if (this.ⵠΔᐃⵠⵠ === 91) {
        this.ΔⲆᐃᐃⵠ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(this.ΔⲆᐃᐃⵠ, this.ⵠΔⵠⲆΔ, 0.018);
        v1934 = ⵠΔ[91][v2812.time];
        f401(91, v1934, -v1934.width / 4, -v1934.height / 4);
      } else if (this.ⵠΔᐃⵠⵠ === 230) {
        this.ΔⲆᐃᐃⵠ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(this.ΔⲆᐃᐃⵠ, this.ⵠΔⵠⲆΔ, 0.018);
        v1934 = ⵠΔ[236][v2812.time];
        f401(236, v1934, -v1934.width / 4, -v1934.height / 4);
      } else if (this.ⵠΔᐃⵠⵠ === 224) {
        v1934 = ⵠΔ[224][v2812.time];
        f401(224, v1934, -v1934.width / 4, -v1934.height / 4);
      } else if (this.ⵠΔᐃⵠⵠ === 239) {
        v1934 = ⵠΔ[1221][v2812.time];
        if (this.ⵠΔⵠⲆΔ > 85) {
          this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026 / 4);
        } else {
          this.ΔⲆΔΔⵠ = Math.max(0, this.ΔⲆΔΔⵠ - v3026);
        }
        this.ΔⵠⲆΔⵠ += v3026 * 60;
        if (this.ΔⵠⲆΔⵠ > 60) {
          this.ΔⵠⲆΔⵠ -= 60;
        }
        var v1935 = this.ΔⲆΔΔⵠ * ((this.ΔⵠⲆΔⵠ < 30 ? this.ΔⵠⲆΔⵠ / 30 : 1 - (this.ΔⵠⲆΔⵠ - 30) / 30) * 12 - 6);
        f401(1221, v1934, -v1934.width / 4, -v1934.height / 4 + v1935);
      } else if (this.ⵠΔᐃⵠⵠ === 225) {
        v1934 = ⵠΔ[1043][v2812.time];
        if (this.ⵠΔⵠⲆΔ > 85) {
          this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026 / 4);
        } else {
          this.ΔⲆΔΔⵠ = Math.max(0, this.ΔⲆΔΔⵠ - v3026);
        }
        this.ΔⵠⲆΔⵠ += v3026 * 60;
        if (this.ΔⵠⲆΔⵠ > 60) {
          this.ΔⵠⲆΔⵠ -= 60;
        }
        v1935 = ((this.ΔⵠⲆΔⵠ < 30 ? this.ΔⵠⲆΔⵠ / 30 : 1 - (this.ΔⵠⲆΔⵠ - 30) / 30) * 12 - 6) * this.ΔⲆΔΔⵠ;
        f401(1043, v1934, -v1934.width / 4, -v1934.height / 4 + v1935);
      } else if (this.ⵠΔᐃⵠⵠ === 226) {
        var v1936 = Math.PI / 2;
        var v1937 = Math.PI / 4;
        v1934 = ⵠΔ[1055][v2812.time];
        if (this.ⵠΔⵠⲆΔ > 85) {
          this.ΔⲆΔΔⵠ = Math.min(1, this.ΔⲆΔΔⵠ + v3026 / 4);
        } else {
          this.ΔⲆΔΔⵠ = Math.max(0, this.ΔⲆΔΔⵠ - v3026);
        }
        this.ΔⵠⲆΔⵠ += v3026 * 60;
        if (this.ΔⵠⲆΔⵠ > 60) {
          this.ΔⵠⲆΔⵠ -= 60;
        }
        v1935 = ((this.ΔⵠⲆΔⵠ < 30 ? this.ΔⵠⲆΔⵠ / 30 : 1 - (this.ΔⵠⲆΔⵠ - 30) / 30) * 12 - 6) * this.ΔⲆΔΔⵠ;
        f401(1055, v1934, -v1934.width / 4 + v1935, -v1934.height / 4);
        v439.restore();
        v439.save();
        v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
        v439.rotate(Math.PI + this.ᐃⵠⲆᐃᐃ + v1937);
        v439.translate(120, v1935);
        v439.rotate(v1936);
        v1934 = ⵠΔ[1060][v2812.time];
        ⵠΔΔ = -v1934.width;
        ⵠᐃⵠ = -v1934.height;
        f293(v439, v1934, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
        v439.restore();
        v439.save();
        v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
        v439.rotate(Math.PI + this.ᐃⵠⲆᐃᐃ + v1936 + v1937);
        v439.translate(120, v1935);
        v439.rotate(v1936);
        v1934 = ⵠΔ[1063][v2812.time];
        ⵠΔΔ = -v1934.width;
        ⵠᐃⵠ = -v1934.height;
        f293(v439, v1934, -ⵠΔΔ / 2, -ⵠᐃⵠ / 2, ⵠΔΔ, ⵠᐃⵠ);
      }
      v439.restore();
    }
  }
  ⵠᐃΔΔⵠⵠᐃΔⲆ = 0;
  ᐃⲆΔⵠΔⲆΔⵠⵠ = 1;
  ᐃⲆᐃⲆᐃᐃΔⲆᐃ = 2;
  ᐃΔᐃⵠⲆΔⵠΔⲆ = 3;
  ΔⲆᐃᐃⵠΔΔⵠⲆ = 4;
  ΔⵠᐃᐃⲆⲆΔ = [[], [], [], [], []];
  ⵠⵠⲆⲆⵠⲆⲆⵠⵠ = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
  if (vWindow.ⲆΔΔΔᐃΔΔΔᐃ) {
    var v1938 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v1938;
    var v1939 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v1939;
  }
  function f384() {
    if (this.message !== undefined) {
      var v1940 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length > 0 ? -95 : 0;
      f293(v439, this.message, 0, v442 - this.message.height + v1940);
    }
  }
  function f385() {
    var v1941 = 0;
    switch (this.right) {
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
        v1941 = 1;
    }
    if (this.ΔⵠᐃⵠⲆ) {
      for (var v1942 = 0; v1942 < this.bubbles.length; v1942++) {
        var v1943 = this.bubbles[v1942];
        if (v1943.ⵠΔΔⵠⲆ > 0.5) {
          var v1944 = 1 - (v1943.ⵠΔΔⵠⲆ - 0.5) * 2;
        } else {
          v1944 = v1943.ⵠΔΔⵠⲆ * 2;
        }
        v439.globalAlpha = v1944;
        var v1945 = ⵠΔ[540][v2812.time][v1943.id];
        f293(v439, v1945, v2813.ΔⲆΔ.x + v1943.x - v1945.width / 2, v2813.ΔⲆΔ.y + v1943.y - v1945.height / 2);
        v439.globalAlpha = 1;
      }
    } else {
      v439.save();
      v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
      v2812.ⵠΔΔΔᐃᐃⲆⲆⲆ(this);
      if (this.action & 16) {
        (function (p1249) {
          if (p1249.right >= 0) {
            switch (p1249.right) {
              case 49:
                v439.save();
                var v1946 = p1249.attack.ⲆⵠⲆ * -3 / Math.PI;
                if (p1249.attack.ᐃΔⲆ) {
                  var v1947 = -Math.PI / 3 - (Math.PI / 3 + p1249.attack.ⲆⵠⲆ) / 3;
                } else {
                  v1947 = p1249.attack.ⲆⵠⲆ;
                }
                v439.rotate(p1249.angle - Math.PI / 2 + v1947);
                v439.globalAlpha = v1946 / 1.2;
                f89(v439, v454 * -40, v454 * 90, v454 * 5);
                f84(v439, "#0B6A84");
                v439.globalAlpha = v1946 / 1.2;
                f89(v439, v454 * -52, v454 * 100, v454 * 8);
                f84(v439, "#0B6A84");
                v439.globalAlpha = v1946 / 1.2;
                f89(v439, v454 * -30, v454 * 95, v454 * 4);
                f84(v439, "#0B6A84");
                v439.globalAlpha = 1;
                v439.restore();
                break;
              case 46:
              case 50:
              case 51:
              case 52:
                if (p1249.ⵠⵠⲆⲆΔⲆⵠ === 1) {
                  break;
                }
                if (p1249.ⲆΔⵠⲆΔ > 0) {
                  var v1948 = v624.ⵠⲆΔΔᐃΔΔ[v2812.time];
                } else {
                  v1948 = p1249.ⲆᐃᐃΔⲆⲆⲆ > 0 || p1249.ΔⵠⵠΔΔ > 0 ? v624.ⲆΔᐃΔⲆⵠⲆ[v2812.time] : v624.ΔΔⵠⵠΔᐃᐃ[v2812.time];
                }
                v1946 = p1249.attack.ⲆⵠⲆ * -3 / Math.PI;
                if ((v1947 = p1249.attack.ᐃΔⲆ ? Math.max(0.5 - v1946 / 2 + 0.5, 0) : Math.max(v1946 / 2, 0)) === 0) {
                  p1249.ⵠⵠⲆᐃⵠⲆᐃ = p1249.angle;
                }
                v439.save();
                v439.rotate(p1249.ⵠⵠⲆᐃⵠⲆᐃ - Math.PI / 2);
                v439.globalAlpha = v1946;
                var v1949 = v454 * 25 + v1947 * 25;
                f89(v439, v1949, v454 * 80, v454 * 15);
                f84(v439, v1948);
                f89(v439, -v1949, v454 * 80, v454 * 15);
                f84(v439, v1948);
                v439.globalAlpha = 1;
                v439.restore();
            }
          }
        })(this);
      }
      v439.save();
      v439.rotate(this.angle - Math.PI / 2);
      if (!(this.action & 16)) {
        if (this.action & 64 || this.ⵠΔᐃⵠⵠ !== 0) {
          this.ᐃⵠⲆⲆΔΔⵠ.ⲆᐃⲆ();
        } else if (this.action & 32) {
          this.ⲆⵠⲆⵠΔⵠⵠ.ⲆᐃⲆ();
        }
      }
      var v1950;
      var v1951 = this.ᐃⵠⲆⲆΔΔⵠ.ⲆⵠⲆ;
      var v1952 = this.ⲆⵠⲆⵠΔⵠⵠ.ⲆⵠⲆ;
      if (this.Ⲇⵠⵠᐃⵠ === 85) {
        v1945 = ⵠΔ[793][v2812.time];
        v1950 = 793;
      } else if (this.Ⲇⵠⵠᐃⵠ === 20) {
        v1945 = ⵠΔ[920][v2812.time];
        v1950 = 920;
      } else if (this.Ⲇⵠⵠᐃⵠ === 21) {
        v1945 = ⵠΔ[924][v2812.time];
        v1950 = 924;
      } else if (this.Ⲇⵠⵠᐃⵠ === 22) {
        v1945 = ⵠΔ[928][v2812.time];
        v1950 = 928;
      } else if (this.ⲆⲆⵠΔⵠΔΔ) {
        v1945 = ⵠΔ[822][v2812.time];
        v1950 = 822;
      } else {
        v1945 = ⵠΔ[7][this.ⲆᐃⵠⲆ][v2812.time];
        v1950 = 7;
      }
      ᐃᐃⵠΔ = ⵠΔ[286][v2812.time];
      var vV1945 = v1945;
      var vV1950 = v1950;
      if (this.action & 16) {
        if (this.attack.ⲆᐃⲆ() && this.attack.ᐃΔⲆ == 0) {
          this.ⲆⲆΔΔⲆ = !this.ⲆⲆΔΔⲆ;
          this.action -= 16;
          if (v2813.ᐃⲆΔⵠ == this.ᐃⲆΔⵠ) {
            v2813.control.ᐃⵠΔⵠ = 0;
          }
        }
        if (this.right >= 0) {
          this.ⲆⲆΔΔⲆ = vVVVVV162;
        }
        var v1953 = this.ⲆⲆΔΔⲆ ? this.attack.ⲆⵠⲆ : -this.attack.ⲆⵠⲆ / 3;
        var v1954 = this.ⲆⲆΔΔⲆ ? this.attack.ⲆⵠⲆ / 3 : -this.attack.ⲆⵠⲆ;
        if (this.ⲆⲆⵠΔⵠΔΔ) {
          v439.save();
          v439.rotate(v1953);
          f409(v1950, v1945, -v1945.width / 2 - v454 * (66 + v1951), -v1945.height / 2 + (5 + v1952) * v454);
          v439.restore();
          v439.save();
          v439.rotate(v1954);
          f409(v1950, v1945, -v1945.width / 2 + v454 * (66 + v1951), -v1945.height / 2 + v454 * (5 + v1952));
          v439.restore();
        } else if (v1941 === 0) {
          if (this.right === 64) {
            v1953 = -ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ(-v1953);
          }
          v439.save();
          v439.rotate(v1953);
          f409(286, ᐃᐃⵠΔ, -ᐃᐃⵠΔ.width / 2 - v454 * (49 + v1951), -ᐃᐃⵠΔ.height / 2 + (15 + v1952) * v454);
          if (this.right === 28) {
            var v1955 = ⵠΔ[this.right][this.ⵠᐃΔⵠᐃ][v2812.time];
            f411(this.right, this.ⵠᐃΔⵠᐃ, v1955, -v1955.width / 4 - (62 + v1951) * v454, -v1955.height / 4 + (v1952 + 18) * v454);
          } else {
            f335(this.right, v1951, v1952);
          }
          if (v1950 >= 920) {
            f401(v1950, v1945, -v1945.width / 4 - v454 * (49 + v1951), -v1945.height / 4 + (11 + v1952) * v454);
          } else if (v1950 !== 793) {
            f411(v1950, this.ⲆᐃⵠⲆ, v1945, -v1945.width / 4 - (49 + v1951) * v454, -v1945.height / 4 + (11 + v1952) * v454);
          } else {
            f409(v1950, v1945, -v1945.width / 2 - v454 * (49 + v1951), -v1945.height / 2 + (11 + v1952) * v454);
          }
          v439.restore();
          v439.save();
          v439.rotate(v1954);
          f409(286, ᐃᐃⵠΔ, -ᐃᐃⵠΔ.width / 2 + v454 * (49 + v1951), -ᐃᐃⵠΔ.height / 2 + v454 * (15 + v1952));
          if (v1950 >= 920) {
            f401(v1950, v1945, -v1945.width / 4 + (49 + v1951) * v454, -v1945.height / 4 + (11 + v1952) * v454);
          } else if (v1950 !== 793) {
            f411(v1950, this.ⲆᐃⵠⲆ, v1945, -v1945.width / 4 + (49 + v1951) * v454, -v1945.height / 4 + (11 + v1952) * v454);
          } else {
            f409(v1950, v1945, -v1945.width / 2 + v454 * (49 + v1951), -v1945.height / 2 + v454 * (11 + v1952));
          }
          v439.restore();
        }
      } else if (this.ⲆⲆⵠΔⵠΔΔ) {
        f409(v1950, v1945, -v1945.width / 2 - v454 * (66 + v1951), -v1945.height / 2 + v454 * (5 + v1952));
        f409(v1950, v1945, -v1945.width / 2 + v454 * (66 + v1951), -v1945.height / 2 + (5 + v1952) * v454);
      } else if (v1941 === 0) {
        f409(286, ᐃᐃⵠΔ, -ᐃᐃⵠΔ.width / 2 - (49 + v1951) * v454, -ᐃᐃⵠΔ.height / 2 + (15 + v1952) * v454);
        if (this.right === 28) {
          v1955 = ⵠΔ[this.right][this.ⵠᐃΔⵠᐃ][v2812.time];
          f411(this.right, this.ⵠᐃΔⵠᐃ, v1955, -v1955.width / 4 - v454 * (62 + v1951), -v1955.height / 4 + (v1952 + 18) * v454);
        } else {
          f335(this.right, v1951, v1952);
        }
        if (v1950 >= 920) {
          f401(v1950, v1945, -v1945.width / 4 - (49 + v1951) * v454, -v1945.height / 4 + (11 + v1952) * v454);
        } else if (v1950 !== 793) {
          f411(v1950, this.ⲆᐃⵠⲆ, v1945, -v1945.width / 4 - v454 * (49 + v1951), -v1945.height / 4 + (11 + v1952) * v454);
        } else {
          f409(v1950, v1945, -v1945.width / 2 - (49 + v1951) * v454, -v1945.height / 2 + v454 * (11 + v1952));
        }
        f409(286, ᐃᐃⵠΔ, -ᐃᐃⵠΔ.width / 2 + v454 * (49 + v1951), -ᐃᐃⵠΔ.height / 2 + v454 * (15 + v1952));
        if (v1950 >= 920) {
          f401(v1950, v1945, -v1945.width / 4 + (49 + v1951) * v454, -v1945.height / 4 + v454 * (11 + v1952));
        } else if (v1950 !== 793) {
          f411(v1950, this.ⲆᐃⵠⲆ, v1945, -v1945.width / 4 + v454 * (49 + v1951), -v1945.height / 4 + (11 + v1952) * v454);
        } else {
          f409(v1950, v1945, -v1945.width / 2 + (49 + v1951) * v454, -v1945.height / 2 + (11 + v1952) * v454);
        }
      }
      if (this.ΔΔⲆⵠⲆ && this.Ⲇⵠⵠᐃⵠ < 1) {
        v1945 = ⵠΔ[29][this.ΔΔⲆΔᐃⵠⵠ][v2812.time];
        f411(29, this.ΔΔⲆΔᐃⵠⵠ, v1945, -v1945.width / 4, -v1945.height / 4 - v454 * 39);
      }
      if (this.ⲆⲆⵠΔⵠΔΔ) {
        v1945 = ⵠΔ[820][v2812.time];
        f409(820, v1945, -v1945.width / 2, -v1945.height / 2);
        this.ΔᐃⲆΔⵠⲆⲆ.ⲆᐃⲆ();
        v1945 = ⵠΔ[821][v2812.time];
        f409(821, v1945, -v1945.width / 2, -v1945.height / 2 + this.ΔᐃⲆΔⵠⲆⲆ.ⲆⵠⲆ);
      } else {
        v1945 = ⵠΔ[255][this.ⲆᐃⵠⲆ][v2812.time];
        if (this.Ⲇⵠⵠᐃⵠ !== 85 && (f411(255, this.ⲆᐃⵠⲆ, v1945, -v1945.width / 4, -v1945.height / 4), this.ⵠΔΔⵠΔ > 0)) {
          v1945 = ⵠΔ[796][this.ⵠΔΔⵠΔ][v2812.time];
          f411(796, this.ⵠΔΔⵠΔ, v1945, -v1945.width / 4, -v1945.height / 4);
        }
      }
      if (this.action & 128) {
        if (this.Δⵠⵠᐃⵠ.ⲆᐃⲆ() && this.Δⵠⵠᐃⵠ.ᐃΔⲆ == 0) {
          this.action -= 128;
        }
        v439.globalAlpha = 0.6 - this.Δⵠⵠᐃⵠ.ⲆⵠⲆ;
        if (this.ⲆⲆⵠΔⵠΔΔ) {
          v1945 = ⵠΔ[825];
          f293(v439, v1945, -v1945.width / 2, -v1945.height / 2);
        } else {
          v1945 = f386(this.ⲆᐃⵠⲆ, ⵠΔ[255][this.ⲆᐃⵠⲆ][0], ᐃⲆΔⵠΔⲆΔⵠⵠ);
          f293(v439, v1945, v1945.width / 4, v1945.height / 4, -v1945.width / 2, -v1945.height / 2);
        }
        v439.globalAlpha = 1;
      }
      if (this.action & 256) {
        if (this.ΔⲆⵠⲆⵠⵠⵠ.ⲆᐃⲆ() && vVVV144 == this.ΔⲆⵠⲆⵠⵠⵠ.ᐃΔⲆ) {
          this.action -= 256;
        }
        v439.globalAlpha = 0.6 - this.ΔⲆⵠⲆⵠⵠⵠ.ⲆⵠⲆ;
        v1945 = ⵠΔ[266];
        f293(v439, v1945, -v1945.width / 2, -v1945.height / 2);
        v439.globalAlpha = 1;
      }
      if (this.action & 2) {
        if (this.ᐃⵠΔ.ⲆᐃⲆ() && this.ᐃⵠΔ.ᐃΔⲆ == 0) {
          this.action -= 2;
        }
        v439.globalAlpha = 0.6 - this.ᐃⵠΔ.ⲆⵠⲆ;
        if (this.ⲆⲆⵠΔⵠΔΔ) {
          v1945 = ⵠΔ[823];
          f293(v439, v1945, -v1945.width / 2, -v1945.height / 2);
        } else {
          v1945 = f386(this.ⲆᐃⵠⲆ, ⵠΔ[255][this.ⲆᐃⵠⲆ][0], ⵠᐃΔΔⵠⵠᐃΔⲆ);
          f293(v439, v1945, v1945.width / 4, v1945.height / 4, -v1945.width / 2, -v1945.height / 2);
        }
        v439.globalAlpha = 1;
      }
      if (this.action & 4) {
        if (this.freeze.ⲆᐃⲆ() && this.freeze.ᐃΔⲆ == vVV14) {
          this.action -= 4;
        }
        v439.globalAlpha = 0.6 - this.freeze.ⲆⵠⲆ;
        v1945 = f386(this.ⲆᐃⵠⲆ, ⵠΔ[255][this.ⲆᐃⵠⲆ][0], ᐃⲆᐃⲆᐃᐃΔⲆᐃ);
        f293(v439, v1945, v1945.width / 4, v1945.height / 4, -v1945.width / 2, -v1945.height / 2);
        v439.globalAlpha = 1;
      }
      if (this.action & 8) {
        if (this.ⲆΔⵠᐃⲆᐃⲆ.ⲆᐃⲆ() && this.ⲆΔⵠᐃⲆᐃⲆ.ᐃΔⲆ == 0) {
          this.action -= 8;
        }
        v439.globalAlpha = 0.6 - this.ⲆΔⵠᐃⲆᐃⲆ.ⲆⵠⲆ;
        if (this.ⲆⲆⵠΔⵠΔΔ) {
          v1945 = ⵠΔ[824];
          f293(v439, v1945, -v1945.width / 2, -v1945.height / 2);
        } else {
          v1945 = f386(this.ⲆᐃⵠⲆ, ⵠΔ[255][this.ⲆᐃⵠⲆ][0], ᐃΔᐃⵠⲆΔⵠΔⲆ);
          f293(v439, v1945, v1945.width / 4, v1945.height / 4, -v1945.width / 2, -v1945.height / 2);
        }
        v439.globalAlpha = 1;
      }
      f382(this.Ⲇⵠⵠᐃⵠ);
      if (v1941 === 1) {
        if (this.action & 16) {
          v1951 += this.attack.ⲆⵠⲆ * 15;
        }
        f409(286, ᐃᐃⵠΔ, -ᐃᐃⵠΔ.width / 2 - v454 * 26, -ᐃᐃⵠΔ.height / 2 + (31 + v1952 + v1951) * v454);
        if (vV1950 >= 920) {
          f401(vV1950, vV1945, -vV1945.width / 4 - v454 * 26, -vV1945.height / 4 + (27 + v1952 + v1951) * v454);
        } else if (vV1950 !== 793) {
          f411(vV1950, this.ⲆᐃⵠⲆ, vV1945, -vV1945.width / 4 - v454 * 26, -vV1945.height / 4 + v454 * (27 + v1952 + v1951));
        } else {
          f409(vV1950, vV1945, -vV1945.width / 2 - v454 * 26, -vV1945.height / 2 + (27 + v1952 + v1951) * v454);
        }
        f409(286, ᐃᐃⵠΔ, -ᐃᐃⵠΔ.width / 2 + v454 * 26, -ᐃᐃⵠΔ.height / 2 + v454 * (31 + v1952 + v1951));
        if (vV1950 >= 920) {
          f401(vV1950, vV1945, -vV1945.width / 4 + v454 * 26, -vV1945.height / 4 + v454 * (27 + v1952 + v1951));
        } else if (vV1950 !== 793) {
          f411(vV1950, this.ⲆᐃⵠⲆ, vV1945, -vV1945.width / 4 + v454 * 26, -vV1945.height / 4 + (27 + v1952 + v1951) * v454);
        } else {
          f409(vV1950, vV1945, -vV1945.width / 2 + v454 * 26, -vV1945.height / 2 + (27 + v1952 + v1951) * v454);
        }
        f332(this.right, 0, v1952 + v1951);
      }
      v439.restore();
      if (this.Ⲇⵠⵠᐃⵠ !== 83 && this.Ⲇⵠⵠᐃⵠ !== 85) {
        if (this.ⲆΔⵠⲆΔ > 0) {
          this.ⲆⲆⲆⵠ.ΔΔᐃⲆᐃⲆΔ ||= f162(v454, this.ⲆⲆⲆⵠ.ⵠᐃΔⵠΔ, 20, "#187484", "#000", 2, null, null, v454 * 300);
          v1945 = this.ⲆⲆⲆⵠ.ΔΔᐃⲆᐃⲆΔ;
        } else {
          this.ⲆⲆⲆⵠ.label ||= f162(v454, this.ⲆⲆⲆⵠ.ⵠᐃΔⵠΔ, 20, "#FFF", "#000", 2, null, null, v454 * 300);
          v1945 = this.ⲆⲆⲆⵠ.label;
        }
        if (v624.Δᐃⵠ == v2812.ⵠΔⵠ) {
          v439.globalAlpha = 0.5;
        }
        v1951 = Math.floor(-v1945.width / 2);
        v1952 = Math.floor(-v1945.height / 2 - v454 * 70);
        f293(v439, v1945, v1951, v1952);
        if (this.ⲆⲆⲆⵠ.level > 0) {
          var v1956 = v1951 + v1945.width + 5;
          v1945 = ⵠΔ[885];
          if (ᐃΔⵠΔΔΔᐃ[this.ⲆⲆⲆⵠ.level] === undefined) {
            ᐃΔⵠΔΔΔᐃ[this.ⲆⲆⲆⵠ.level] = f162(v454, "[" + this.ⲆⲆⲆⵠ.level + "]", 20, "#F9E8A2", "#000", 2, null, null, v454 * 50);
          }
          f293(v439, ᐃΔⵠΔΔΔᐃ[this.ⲆⲆⲆⵠ.level], v1956, v1952);
        }
        v439.globalAlpha = 1;
      } else {
        v1952 = Math.floor(v454 * -70);
        v1951 = Math.floor(ⵠΔ[558].width / 1.5);
      }
      if (v2813.ᐃⵠᐃⵠᐃⲆⲆ(this.ⵠⵠⵠᐃ)) {
        if (v2813.ⲆᐃⲆΔᐃ[0] == this.ⵠⵠⵠᐃ) {
          v1945 = ⵠΔ[559];
        } else {
          v1945 = ⵠΔ[558];
        }
        f293(v439, v1945, v1951 - v1945.width - 5, v1952 - 6);
      }
      v439.restore();
    }
  }
  function f386(p1250, p1251, p1252) {
    if (p1251.Ⲇⵠⵠⵠⵠᐃᐃ() !== 1) {
      return p1251;
    }
    var v1957 = ΔⵠᐃᐃⲆⲆΔ[p1252][p1250];
    if (v1957 === undefined) {
      var v1958 = (v1957 = document.createElement("canvas")).getContext("2d");
      var v1959 = p1251.width;
      var v1960 = p1251.height;
      v1957.width = v1959;
      v1957.height = v1960;
      v1958.drawImage(p1251, 0, 0);
      v1958.globalCompositeOperation = "source-in";
      v1958.fillStyle = ⵠⵠⲆⲆⵠⲆⲆⵠⵠ[p1252];
      v1958.fillRect(0, 0, v1959, v1960);
      ΔⵠᐃᐃⲆⲆΔ[p1252][p1250] = v1957;
    }
    return v1957;
  }
  function f387(p1253, p1254) {
    if (this.text) {
      if (this.timeout.ᐃΔⲆ) {
        v439.globalAlpha = 1 - this.timeout.ⲆⵠⲆ;
      } else {
        v439.globalAlpha = 1;
      }
      if (!this.label) {
        this.label = f162(v454, this.text, 40, p1253, null, null, null, null, null, p1254, 10);
      }
      f293(v439, this.label, (v441 - this.label.width) / 2, v454 * 50);
      v439.globalAlpha = 1;
      if (this.timeout.ⲆᐃⲆ() && vVVV1423 == this.timeout.ᐃΔⲆ) {
        this.text = this.list.shift();
        this.label = null;
      }
    }
  }
  function f388() {
    if (this.enabled && this.ΔΔΔⵠⲆ >= 0) {
      var v1961 = new Date().getTime() - this.ΔΔΔⵠⲆ;
      var v1962 = v1961 % 1000 / 1000;
      if (v1962 > 0.5) {
        v1962 = 1 - (v1962 - 0.5) * 2;
      } else {
        v1962 *= 2;
      }
      if ((v1961 = Math.floor(v1961 / 1000)) < 60) {
        v1961 = 60 - v1961;
        if (!this.label) {
          this.label = f162(v454, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        if (this.now != v1961 || !this.ᐃᐃΔⵠⵠⲆΔ) {
          this.now = v1961;
          this.ᐃᐃΔⵠⵠⲆΔ = f162(v454, "" + v1961, 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        f293(v439, this.label, (v441 - this.label.width) / 2, v454 * 100);
        v439.globalAlpha = v1962;
        f293(v439, this.ᐃᐃΔⵠⵠⲆΔ, (v441 - this.label.width) / 2 - this.ᐃᐃΔⵠⵠⲆΔ.width + v454 * 15, v454 * 100);
        v439.globalAlpha = 1;
      }
    }
  }
  function f389() {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + this.x, v2813.ΔⲆΔ.y + this.y);
    if (this.text.length > 0) {
      for (var v1963 = 0; this.text.length > v1963 && v1963 < 2; v1963++) {
        if (!this.label[v1963]) {
          this.label[v1963] = f86(v454, this.text[v1963]);
          this.ΔᐃⲆⵠΔᐃΔ[v1963] = 0;
          this.ΔⲆΔⵠⵠᐃΔ[v1963] = 0;
        }
        if (v1963 === 1) {
          this.ΔⲆΔⵠⵠᐃΔ[0] = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(this.ⵠⲆᐃᐃΔᐃⵠ) * 30;
        }
      }
      this.ΔᐃⲆⵠΔᐃΔ[0] += v3026;
      if (this.text.length > 1) {
        this.ⵠⲆᐃᐃΔᐃⵠ = Math.min(this.ⵠⲆᐃᐃΔᐃⵠ + v3026, 1);
        if (this.ΔᐃⲆⵠΔᐃΔ[0] > 1 && this.ⵠⲆᐃᐃΔᐃⵠ > 0.5) {
          this.ΔᐃⲆⵠΔᐃΔ[1] += v3026;
        }
      }
      for (v1963 = 0; v1963 < this.text.length && v1963 < 2; v1963++) {
        var v1964 = this.ΔᐃⲆⵠΔᐃΔ[v1963];
        if (v1964 > 0) {
          v439.globalAlpha = v1964 < 0.25 ? v1964 * 4 : v1964 > 3.75 ? Math.max((4 - v1964) * 4, 0) : 1;
          f293(v439, this.label[v1963], -this.label[v1963].width / 2, -this.ΔⲆΔⵠⵠᐃΔ[v1963] + -this.label[v1963].height / 2 - v454 * 110);
        }
      }
      if (this.ΔᐃⲆⵠΔᐃΔ[0] > 4) {
        this.ΔᐃⲆⵠΔᐃΔ.shift();
        this.text.shift();
        this.ΔⲆΔⵠⵠᐃΔ.shift();
        this.label.shift();
        this.ⵠⲆᐃᐃΔᐃⵠ = 0;
      }
    }
    v439.restore();
  }
  var v1965 = 0;
  function f390(p1255, p1256, p1257, p1258, p1259, p1260, p1261, p1262 = 0) {
    v2812.ΔᐃᐃⲆ[p1259].ⲆᐃⲆ();
    for (var vP1261 = p1261; vP1261 >= p1262; vP1261--) {
      for (var vP1255 = p1255; p1256 >= vP1255; vP1255++) {
        for (var vP1257 = p1257; vP1257 <= p1258; vP1257++) {
          var v1966 = v2809.ΔⵠΔⲆ[vP1255][vP1257];
          if (v1966 && v1966[p1260]) {
            var v1967 = v1966[p1260][vP1261];
            if (v1967 !== undefined) {
              for (var v1968 = 0; v1967.length > v1968; v1968++) {
                var v1969 = v1967[v1968];
                if (v1969.ⲆᐃⲆ) {
                  if (v1969.ᐃⵠΔ.ⲆᐃⲆ() && v1969.ᐃⵠΔ.ᐃΔⲆ == 0) {
                    v1969.ⲆᐃⲆ = vVVV1422;
                  }
                  var v1970 = (1 - v1969.ᐃⵠΔ.ⲆⵠⲆ) * v3026 * 600 * v454;
                  var v1971 = Math.sin(v1969.angle) * v1970;
                  var v1972 = Math.cos(v1969.angle) * v1970;
                } else {
                  v1971 = 0;
                  v1972 = 0;
                }
                var v1973 = ⵠΔ[p1259][v2812.time][vP1261];
                var v1974 = -v1973.width * v2812.ΔᐃᐃⲆ[p1259].ⲆⵠⲆ;
                var v1975 = v2812.ΔᐃᐃⲆ[p1259].ⲆⵠⲆ * -v1973.height;
                f293(v439, v1973, v2813.ΔⲆΔ.x + v1969.x - v1974 / 2 + v1971, v2813.ΔⲆΔ.y + "#674C2A" - v1975 / 2 + v1972, v1974, v1975);
              }
            }
          }
        }
      }
    }
  }
  function f391(p1263, p1264, p1265, p1266, p1267, p1268, p1269, p1270) {
    if (vVVVUndefined212 === p1270) {
      p1270 = 0;
    }
    for (var vP1269 = p1269; p1270 <= vP1269; vP1269--) {
      for (var vP1263 = p1263; p1264 >= vP1263; vP1263++) {
        for (var vP1265 = p1265; p1266 >= vP1265; vP1265++) {
          var v1976 = v2809.ΔⵠΔⲆ[vP1263][vP1265];
          if (v1976 && v1976[p1268]) {
            var v1977 = v1976[p1268][vP1269];
            if (vVVUndefined20 !== v1977) {
              for (var v1978 = 0; v1977.length > v1978; v1978++) {
                var v1979 = v1977[v1978];
                var v1980 = ⵠΔ[p1267][v2812.time][vP1269];
                var v1981 = (v1965 + (vP1263 + vP1265) * 3) % 60;
                var v1982 = v1981 < 30 ? v1981 / 30 : 1 - (v1981 - 30) / 30;
                var v1983 = (1 + v1982 * 0.9 / 30) * -v1980.width;
                var v1984 = -v1980.height * (1 + v1982 * 0.9 / 30);
                v1982 = (v1981 = (v1965 + (vP1263 + vP1265) * 7) % 60) < 30 ? v1981 / 30 : 1 - (v1981 - 30) / 30;
                var v1985 = v439.globalAlpha;
                v439.globalAlpha = (0.9 + v1982 * 0.1) * v1985;
                f293(v439, v1980, v2813.ΔⲆΔ.x + v1979.x - v1983 / 2, v2813.ΔⲆΔ.y + "#674C2A" - v1984 / 2, v1983, v1984);
                v439.globalAlpha = v1985;
              }
            }
          }
        }
      }
    }
  }
  var v1986 = [];
  for (v782 = 0; v782 < 100; v782++) {
    var v1987 = 1;
    if (Math.random() < 0.25) {
      v1987 = 0;
    }
    v1986.push(v1987);
  }
  function f392(p1271, p1272, p1273, p1274, p1275, p1276, p1277, p1278 = 0, p1279) {
    for (var vP1277 = p1277; vP1277 >= p1278; vP1277--) {
      for (var vP1271 = p1271; p1272 >= vP1271; vP1271++) {
        for (var vP1273 = p1273; p1274 >= vP1273; vP1273++) {
          var v1988 = v2809.ΔⵠΔⲆ[vP1271][vP1273];
          if (vVVVUndefined212 !== v1988 && v1988[p1276] !== undefined) {
            var v1989 = v1988[p1276][vP1277];
            if (v1989 !== undefined) {
              for (var v1990 = 0; v1989.length > v1990; v1990++) {
                var v1991 = v1989[v1990];
                if (v1991.ⲆᐃⲆ) {
                  if (v1991.ᐃⵠΔ.ⲆᐃⲆ() && vVVV1423 == v1991.ᐃⵠΔ.ᐃΔⲆ) {
                    v1991.ⲆᐃⲆ = false;
                  }
                  var v1992 = v3026 * (1 - v1991.ᐃⵠΔ.ⲆⵠⲆ) * 600 * v454;
                  var v1993 = v1992 * Math.sin(v1991.angle);
                  var v1994 = v1992 * Math.cos(v1991.angle);
                } else {
                  v1993 = 0;
                  v1994 = 0;
                }
                for (var v1995 = 0; ⵠᐃⵠᐃΔⵠⵠ[vP1277].Δᐃᐃᐃ > v1995; v1995++) {
                  if (v2812.ᐃⵠᐃⵠⵠ[v1995].ᐃΔⵠᐃⵠ !== v3025) {
                    v2812.ᐃⵠᐃⵠⵠ[v1995].ⲆᐃⲆ();
                    v2812.ᐃⵠᐃⵠⵠ[v1995].ᐃΔⵠᐃⵠ = v3025;
                  }
                  var v1996 = ⵠΔ[941][v2812.time][ⵠᐃⵠᐃΔⵠⵠ[vP1277].Δᐃᐃⵠ[v1995].ΔᐃΔ];
                  var v1997 = -v1996.width * v2812.ᐃⵠᐃⵠⵠ[v1995].ⲆⵠⲆ;
                  var v1998 = v2812.ᐃⵠᐃⵠⵠ[v1995].ⲆⵠⲆ * -v1996.height;
                  f293(v439, v1996, v2813.ΔⲆΔ.x + v1991.x - v1997 / 4 + v1993 + ⵠᐃⵠᐃΔⵠⵠ[vP1277].Δᐃᐃⵠ[v1995].x, v2813.ΔⲆΔ.y + v1991.y - v1998 / 4 + v1994 + ⵠᐃⵠᐃΔⵠⵠ[vP1277].Δᐃᐃⵠ[v1995].y, v1997 / 2, v1998 / 2);
                }
              }
            }
          }
        }
      }
    }
  }
  function f393(p1280, p1281, p1282, p1283, p1284, p1285, p1286, p1287 = 0, p1288) {
    for (var vP1280 = p1280; vP1280 <= p1281; vP1280++) {
      for (var vP1282 = p1282; vP1282 <= p1283; vP1282++) {
        var v1999 = v2809.ΔⵠΔⲆ[vP1280][vP1282];
        if (v1999 !== vVVVVUndefined20 && vVVVUndefined117 !== v1999[p1285]) {
          var v2000 = v1999[p1285];
          if (v2000 !== undefined) {
            if (v2000.scale === 1) {
              var v2001 = ⵠΔ[p1284][v2812.time][v2000.ΔΔⵠᐃⲆ];
              v439.save();
              v439.translate(v2813.ΔⲆΔ.x + v2000.x, v2813.ΔⲆΔ.y + v2000.y);
              v439.rotate(v2000.angle);
              f293(v439, v2001, -v2001.width / 4, -v2001.height / 4, v2001.width / 2, v2001.height / 2);
              v439.restore();
            } else if (v2000.scale === 3) {
              for (var v2002 = 0; v2002 < v2000.ᐃⲆⲆ.length; v2002++) {
                v439.save();
                v439.translate(v2813.ΔⲆΔ.x + v2000.x, v2813.ΔⲆΔ.y + v2000.y);
                v439.rotate(v2000.ᐃⲆⲆ[v2002].angle);
                v2001 = ⵠΔ[p1284][v2812.time][v2000.ᐃⲆⲆ[v2002].ΔΔⵠᐃⲆ];
                f293(v439, v2001, -v2001.width / 3 + v2000.ᐃⲆⲆ[v2002].x, -v2001.height / 3 + v2000.ᐃⲆⲆ[v2002].y, v2001.width / 1.5, v2001.height / 1.5);
                v439.restore();
              }
            } else {
              v2001 = ⵠΔ[p1284][v2812.time][v2000.ΔΔⵠᐃⲆ];
              v439.save();
              v439.translate(v2813.ΔⲆΔ.x + v2000.x, v2813.ΔⲆΔ.y + v2000.y);
              v439.rotate(v2000.angle);
              f293(v439, v2001, -v2001.width / 2, -v2001.height / 2, v2001.width, v2001.height);
              v439.restore();
            }
          }
        }
      }
    }
  }
  function f394(p1289, p1290, p1291, p1292, p1293, p1294, p1295, p1296 = 0, p1297) {
    for (var vP1295 = p1295; vP1295 >= p1296; vP1295--) {
      for (var vP1289 = p1289; vP1289 <= p1290; vP1289++) {
        for (var vP1291 = p1291; p1292 >= vP1291; vP1291++) {
          if (!(p1297 > 0) || v1986[(vP1289 + vP1291 * p1297) % v1986.length] !== 1) {
            var v2003 = v2809.ΔⵠΔⲆ[vP1289][vP1291];
            if (v2003 !== undefined && v2003[p1294] !== undefined) {
              var v2004 = v2003[p1294][vP1295];
              if (vVVUndefined212 !== v2004) {
                for (var v2005 = 0; v2004.length > v2005; v2005++) {
                  var v2006 = v2004[v2005];
                  if (v2006.ⲆᐃⲆ) {
                    if (v2006.ᐃⵠΔ.ⲆᐃⲆ() && v2006.ᐃⵠΔ.ᐃΔⲆ == 0) {
                      v2006.ⲆᐃⲆ = vV142;
                    }
                    var v2007 = v454 * ((1 - v2006.ᐃⵠΔ.ⲆⵠⲆ) * v3026 * 600);
                    var v2008 = v2007 * Math.sin(v2006.angle);
                    var v2009 = Math.cos(v2006.angle) * v2007;
                  } else {
                    v2008 = 0;
                    v2009 = 0;
                  }
                  var v2010 = ⵠΔ[p1293][v2812.time][vP1295];
                  f293(v439, v2010, v2813.ΔⲆΔ.x + v2006.x - v2010.width / (ᐃⵠᐃⵠᐃ * 2) + v2008, v2813.ΔⲆΔ.y + v2006.y - v2010.height / (ᐃⵠᐃⵠᐃ * 2) + v2009, v2010.width / ᐃⵠᐃⵠᐃ, v2010.height / ᐃⵠᐃⵠᐃ);
                }
              }
            }
          }
        }
      }
    }
  }
  (function f395() {
    const v2011 = {
      ΔⲆⵠⲆⲆⲆⵠΔΔ: 0
    };
    let v2012 = 0;
    for (let v2013 in v2011) {
      v2012 = v2013;
    }
    const v2014 = [];
    for (let v2015 = 0; v2015 < 12; v2015++) {
      v2014.push(vWindow.Math.floor(1 + vWindow.Math.random() * 10));
    }
    let v2016 = "for (let " + v2012 + " = 0 ; " + v2012 + " < " + v2014[0] + " ; " + v2012 + "++) {";
    for (let v2017 = 0; v2017 < v2014[1]; v2017++) {
      v2016 += v2014[v2017] + ";debugger;";
    }
    for (let v2018 = 0; v2018 < v2014[2]; v2018++) {
      v2016 += "debugger;";
    }
    v2016 += "}";
    const v2019 = new vWindow.Function(v2016);
    vWindow.setTimeout(f395, 10000);
    v2019();
  })();
  ᐃⵠᐃⵠᐃ = 1;
  ⵠᐃⵠᐃΔⵠⵠ = [{
    Δᐃᐃⵠ: [{
      y: -20,
      x: -128,
      ΔᐃΔ: 0
    }, {
      ΔᐃΔ: 1,
      y: -4,
      x: -86
    }, {
      y: -74,
      ΔᐃΔ: 2,
      x: -60
    }, {
      y: -144,
      x: -22,
      ΔᐃΔ: 0
    }, {
      x: -58,
      y: 86,
      ΔᐃΔ: 0
    }, {
      ΔᐃΔ: 0,
      x: 3,
      y: -30
    }, {
      x: 65,
      y: -115,
      ΔᐃΔ: 1
    }, {
      y: -50,
      ΔᐃΔ: 0,
      x: 118
    }, {
      x: 73,
      y: 15,
      ΔᐃΔ: 1
    }, {
      ΔᐃΔ: 0,
      y: 79,
      x: 67
    }],
    Δᐃᐃᐃ: 10
  }, {
    Δᐃᐃᐃ: 5,
    Δᐃᐃⵠ: [{
      ΔᐃΔ: 0,
      y: -26,
      x: -45
    }, {
      x: -45,
      y: 20,
      ΔᐃΔ: 2
    }, {
      ΔᐃΔ: 1,
      x: 10,
      y: -60
    }, {
      x: 52,
      y: -17,
      ΔᐃΔ: 1
    }, {
      ΔᐃΔ: 0,
      y: 45,
      x: 14
    }]
  }, {
    Δᐃᐃⵠ: [{
      y: 3,
      x: -30,
      ΔᐃΔ: 2
    }, {
      x: 7,
      ΔᐃΔ: 2,
      y: -38
    }, {
      ΔᐃΔ: 2,
      x: 37,
      y: 5
    }],
    Δᐃᐃᐃ: 3
  }, {
    Δᐃᐃⵠ: [{
      ΔᐃΔ: 2,
      y: -87,
      x: -74
    }, {
      x: -11,
      y: -10,
      ΔᐃΔ: 1
    }, {
      ΔᐃΔ: 1,
      x: -99,
      y: 17
    }, {
      ΔᐃΔ: 0,
      y: 84,
      x: -66
    }, {
      x: -55,
      y: 123,
      ΔᐃΔ: 1
    }, {
      ΔᐃΔ: 2,
      y: 81,
      x: 10
    }, {
      x: 52,
      y: 50,
      ΔᐃΔ: 0
    }, {
      y: 9,
      x: 138,
      ΔᐃΔ: 1
    }, {
      y: -28,
      ΔᐃΔ: 0,
      x: 104
    }, {
      ΔᐃΔ: 2,
      x: 67,
      y: -56
    }, {
      ΔᐃΔ: 0,
      y: -112,
      x: 5
    }],
    Δᐃᐃᐃ: 11
  }, {
    Δᐃᐃᐃ: 6,
    Δᐃᐃⵠ: [{
      x: -33,
      ΔᐃΔ: 2,
      y: -66
    }, {
      ΔᐃΔ: 0,
      x: -58,
      y: 10
    }, {
      x: -19,
      y: 44,
      ΔᐃΔ: 1
    }, {
      x: 44,
      y: 20,
      ΔᐃΔ: 0
    }, {
      ΔᐃΔ: 2,
      y: -36,
      x: 53
    }, {
      x: 7,
      y: -62,
      ΔᐃΔ: 0
    }]
  }, {
    Δᐃᐃⵠ: [{
      ΔᐃΔ: 1,
      x: -19,
      y: -25
    }, {
      y: 13,
      x: -29,
      ΔᐃΔ: 2
    }, {
      x: 12,
      ΔᐃΔ: 0,
      y: 12
    }],
    Δᐃᐃᐃ: 3
  }];
  var v2020 = 0;
  var v2021 = 0;
  var v2022 = 0;
  var v2023 = 0;
  function f396(p1298, p1299, p1300, p1301, p1302, p1303, p1304) {
    var v2024;
    var v2025 = "#";
    v2025 += (v2024 = Math.floor(p1301 * p1304 + p1298 * (1 - p1304))) < 16 ? "0" + v2024.toString(16) : v2024.toString(16);
    v2025 += (v2024 = Math.floor(p1302 * p1304 + (1 - p1304) * p1299)) < 16 ? "0" + v2024.toString(16) : v2024.toString(16);
    return v2025 += (v2024 = Math.floor(p1303 * p1304 + p1300 * (1 - p1304))) < 16 ? "0" + v2024.toString(16) : v2024.toString(16);
  }
  function f397(p1305, p1306, p1307, p1308, p1309, p1310) {
    var v2026 = p1308.w1;
    var v2027 = p1308.w2;
    var v2028 = p1308.w3;
    var v2029 = v2813.ΔⲆΔ.y + p1305 + 710;
    var v2030 = Math.max(v2813.ΔⲆΔ.x + p1306, 0);
    var v2031 = Math.max(-v2813.ΔⲆΔ.x + v441 - p1307 - 100, 0);
    var vV2030 = v2030;
    var v2032 = v441 - v2030 - v2031;
    if (p1310) {
      var v2033 = p1308.ΔᐃΔ(v2026);
    } else {
      v2033 = v2026.r;
    }
    var v2034 = v2029 + 0;
    var vV2034 = v2034;
    var vVV2030 = vV2030;
    var v2035 = -v2033.x + 0;
    var vV2032 = v2032;
    var v2036 = v2034 += -v2033.x + 0 + 2;
    if (p1310) {
      v2033 = p1308.ΔᐃΔ(v2027);
    } else {
      v2033 = v2027.r;
    }
    var v2037 = v2029 - 250 - v2034 - v2033.x;
    var vV20342 = v2034;
    var vVV20302 = vV2030;
    var vV2037 = v2037;
    var vV20322 = v2032;
    var v2038 = (v2034 += v2037 + 2) - 2;
    if (p1310) {
      v2033 = p1308.ΔᐃΔ(v2028);
    } else {
      v2033 = v2028.r;
    }
    if (v2038 > v2034 + (v2037 = v2029 - 350 - v2034 - v2033.x)) {
      var v2039 = true;
      var vV20343 = v2034;
      var vVV20303 = vV2030;
      var vV20372 = v2037;
      var vV20323 = v2032;
      var v2040 = v2034 += v2037 + 2;
    } else {
      v2039 = vVV142;
      v2034 = v2038;
      v2040 = -1;
    }
    v2037 = v2029 - 700 - v2034;
    if (v2812.transition) {
      var v2041 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2041);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vVV2030, vV2034, vV2032, v2035);
    if (p1310) {
      if (v2812.transition) {
        v2041 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 70, 76, 42, 139, 155, v2041);
      } else {
        v439.fillStyle = v624.ᐃᐃᐃⲆᐃΔⵠ[v2812.time];
      }
    } else if (v2812.transition) {
      v2041 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2041);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vVV20302, vV20342, vV20322, vV2037);
    if (v2039) {
      if (p1310) {
        if (v2812.transition) {
          v2041 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
          v439.fillStyle = f396(17, 94, 96, 169, 214, 211, v2041);
        } else {
          v439.fillStyle = v624.ⵠⵠⵠⵠⲆΔΔ[v2812.time];
        }
      } else if (v2812.transition) {
        v2041 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2041);
      } else {
        v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
      }
      v439.fillRect(vVV20303, vV20343, vV20323, vV20372);
    }
    if (v2811.ⵠᐃΔⵠⵠ && p1310) {
      p1308.ΔΔᐃⲆΔΔΔᐃΔ(v2038, v2040, v2036, v2029, -v2813.ΔⲆΔ.x + vVV2030, -v2813.ΔⲆΔ.x + vVV2030 + vV2032);
    }
  }
  function f398(p1311, p1312, p1313, p1314, p1315, p1316) {
    var v2042 = p1314.w1;
    var v2043 = p1314.w2;
    var v2044 = p1314.w3;
    var v2045 = v2813.ΔⲆΔ.x + p1311 - 700;
    var v2046 = Math.max(v2813.ΔⲆΔ.y + p1312, 0);
    var v2047 = Math.max(-v2813.ΔⲆΔ.y + v442 - p1313 - 100, 0);
    var vV2046 = v2046;
    var v2048 = v442 - v2046 - v2047;
    if (p1316) {
      var v2049 = p1314.ΔᐃΔ(v2042);
    } else {
      v2049 = v2042.r;
    }
    var v2050 = v2045 + 0;
    var vV2050 = v2050;
    var vVV2046 = vV2046;
    var v2051 = v2049.x + 0;
    var vV2048 = v2048;
    var v2052 = v2050 += v2049.x + 0 - 2;
    if (p1316) {
      v2049 = p1314.ΔᐃΔ(v2043);
    } else {
      v2049 = v2043.r;
    }
    var v2053 = v2045 + 250 - v2050 + v2049.x;
    var vV20502 = v2050;
    var vVV20462 = vV2046;
    var vV2053 = v2053;
    var vV20482 = v2048;
    var v2054 = (v2050 += v2053 - 2) - 2;
    if (p1316) {
      v2049 = p1314.ΔᐃΔ(v2044);
    } else {
      v2049 = v2044.r;
    }
    if (v2050 + (v2053 = v2045 + 350 - v2050 + v2049.x) - 3 > v2054) {
      var vVVVVVV162 = vVVVVV16;
      var vV20503 = v2050;
      var vVV20463 = vV2046;
      var vV20532 = v2053;
      var vV20483 = v2048;
      var v2055 = v2050 += v2053 - 2;
    } else {
      vVVVVVV162 = false;
      v2050 = v2054;
      v2055 = -1;
    }
    v2053 = v2045 + 700 - v2050;
    if (v2812.transition) {
      var v2056 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2056);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vV2050, vVV2046, v2051, vV2048);
    if (p1316) {
      if (v2812.transition) {
        v2056 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 70, 76, 42, 139, 155, v2056);
      } else {
        v439.fillStyle = v624.ᐃᐃᐃⲆᐃΔⵠ[v2812.time];
      }
    } else if (v2812.transition) {
      v2056 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2056);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vV20502, vVV20462, vV2053, vV20482);
    if (vVVVVVV162) {
      if (p1316) {
        if (v2812.transition) {
          v2056 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
          v439.fillStyle = f396(17, 94, 96, 169, 214, 211, v2056);
        } else {
          v439.fillStyle = v624.ⵠⵠⵠⵠⲆΔΔ[v2812.time];
        }
      } else if (v2812.transition) {
        v2056 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2056);
      } else {
        v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
      }
      v439.fillRect(vV20503, vVV20463, vV20532, vV20483);
    }
    if (v2811.ⵠᐃΔⵠⵠ && p1316) {
      p1314.ⵠⵠᐃΔΔⵠΔᐃΔ(v2054, v2055, v2052, v2045, -v2813.ΔⲆΔ.y + vVV2046, -v2813.ΔⲆΔ.y + vVV2046 + vV2048);
    }
  }
  function f399(p1317, p1318, p1319, p1320, p1321, p1322) {
    var v2057 = p1320.w1;
    var v2058 = p1320.w2;
    var v2059 = p1320.w3;
    var v2060 = v2813.ΔⲆΔ.y + p1317 + 710;
    var v2061 = Math.max(v2813.ΔⲆΔ.x + p1318, 0);
    var v2062 = Math.max(-v2813.ΔⲆΔ.x + v441 - p1319 - 100, 0);
    var vV2061 = v2061;
    var v2063 = v441 - v2061 - v2062;
    if (p1322) {
      var v2064 = p1320.ΔᐃΔ(v2057).x;
    } else {
      v2064 = v2057.r.x;
    }
    var v2065 = v2060 + 0;
    0;
    v2065 += -v2064 + 0 + 2;
    if (p1322) {
      v2064 = p1320.ΔᐃΔ(v2058).x;
    } else {
      v2064 = v2058.r.x;
    }
    var v2066 = v2060 - 250 - v2065 - v2064;
    var v2067 = (v2065 += v2066 + 2) - 2;
    if (p1322) {
      v2064 = p1320.ΔᐃΔ(v2059).x;
    } else {
      v2064 = v2059.r.x;
    }
    if (v2067 > v2065 + (v2066 = v2060 - 350 - v2065 - v2064)) {
      v2065 += v2066 + 2;
    } else {
      v2065 = v2067;
    }
    v2066 = v2060 - 700 - v2065;
    if (p1322 > 0 && p1321.ⲆΔⵠΔⵠⵠⲆ === 1) {
      if (v2812.transition) {
        var v2068 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 77, 72, 252, 239, 187, v2068);
      } else {
        v439.fillStyle = v624.ⵠⵠⲆⲆⲆᐃⲆ[v2812.time];
      }
      v439.fillRect(vV2061, v2065, v2063, v2066);
    } else {
      if (v2812.transition) {
        v2068 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(p1321.ⵠᐃᐃ[0], p1321.ⵠᐃᐃ[1], p1321.ⵠᐃᐃ[2], p1321.ⵠΔⵠ[0], p1321.ⵠΔⵠ[1], p1321.ⵠΔⵠ[2], v2068);
      } else {
        v439.fillStyle = p1321.ⲆⵠⲆΔⵠ[v2812.time];
      }
      v439.fillRect(vV2061, v2065, v2063, v2066);
    }
  }
  function f400(p1323, p1324, p1325, p1326, p1327) {
    if (v2812.transition && p1327 == 1) {
      v439.globalAlpha = 1;
      f293(v439, ⵠΔ[p1323][v2812.time][p1324], p1325, p1326);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      f293(v439, ⵠΔ[p1323][v2812.time][p1324], p1325, p1326);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      v439.globalAlpha = p1327;
      f293(v439, ⵠΔ[p1323][v2812.time][p1324], p1325, p1326);
      v439.globalAlpha = 1;
    }
  }
  function f401(p1328, p1329, p1330, p1331) {
    var v2069 = p1329.width;
    var v2070 = p1329.height;
    var v2071 = Math.floor(v2069 / 2);
    var v2072 = Math.floor(v2070 / 2);
    if (v2812.transition) {
      v439.globalAlpha = 1;
      f293(v439, ⵠΔ[p1328][v2812.time], 0, 0, v2069, v2070, p1330, p1331, v2071, v2072);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      f293(v439, ⵠΔ[p1328][v2812.time], 0, 0, v2069, v2070, p1330, p1331, v2071, v2072);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      f293(v439, p1329, 0, 0, v2069, v2070, p1330, p1331, v2071, v2072);
    }
  }
  function f402(p1332) {
    v439.save();
    v439.translate(v2813.ΔⲆΔ.x + p1332.x, v2813.ΔⲆΔ.y + p1332.y);
    v439.rotate(p1332.angle);
    v439.globalAlpha = p1332.alpha;
    var v2073 = ⵠΔ[p1332.id][v2812.time];
    f293(v439, v2073, -v2073.width / 2, -v2073.height / 2);
    v439.globalAlpha = 1;
    v439.restore();
  }
  function f403(p1333, p1334) {
    if (v2812.transition) {
      v439.globalAlpha = 1;
      p1333.ΔΔⲆᐃⵠ(p1334);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      p1333.ΔΔⲆᐃⵠ(p1334);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      p1333.ΔΔⲆᐃⵠ(p1334);
    }
  }
  function f404(p1335, p1336, p1337, p1338, p1339, p1340) {
    var v2074 = p1338.w1;
    var v2075 = p1338.w2;
    var v2076 = p1338.w3;
    var v2077 = v2813.ΔⲆΔ.x + p1335 - 700;
    var v2078 = Math.max(v2813.ΔⲆΔ.y + p1336, 0);
    var v2079 = Math.max(-v2813.ΔⲆΔ.y + v442 - p1337 - 100, 0);
    var vV2078 = v2078;
    var v2080 = v442 - v2078 - v2079;
    if (p1340) {
      var v2081 = p1338.ΔᐃΔ(v2074).x;
    } else {
      v2081 = v2074.r.x;
    }
    var v2082 = v2077 + 0;
    0;
    v2082 += v2081 + 0 - 2;
    if (p1340) {
      v2081 = p1338.ΔᐃΔ(v2075).x;
    } else {
      v2081 = v2075.r.x;
    }
    var v2083 = v2077 + 250 - v2082 + v2081;
    var v2084 = (v2082 += v2083 - 2) - 2;
    if (p1340) {
      v2081 = p1338.ΔᐃΔ(v2076).x;
    } else {
      v2081 = v2076.r.x;
    }
    if (v2082 + (v2083 = v2077 + 350 - v2082 + v2081) - 3 > v2084) {
      v2082 += v2083 - 2;
    } else {
      v2082 = v2084;
    }
    v2083 = v2077 + 700 - v2082;
    if (p1340 > 0 && p1339.ⲆΔⵠΔⵠⵠⲆ === 1) {
      if (v2812.transition) {
        var v2085 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 77, 72, 252, 239, 187, v2085);
      } else {
        v439.fillStyle = v624.ⵠⵠⲆⲆⲆᐃⲆ[v2812.time];
      }
      v439.fillRect(v2082, vV2078, v2083, v2080);
    } else {
      if (v2812.transition) {
        v2085 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(p1339.ⵠᐃᐃ[0], p1339.ⵠᐃᐃ[1], p1339.ⵠᐃᐃ[2], p1339.ⵠΔⵠ[0], p1339.ⵠΔⵠ[1], p1339.ⵠΔⵠ[2], v2085);
      } else {
        v439.fillStyle = p1339.ⲆⵠⲆΔⵠ[v2812.time];
      }
      v439.fillRect(v2082, vV2078, v2083, v2080);
    }
  }
  function f405(p1341) {
    v439.globalAlpha = p1341.alpha;
    f89(v439, p1341.x + v2813.ΔⲆΔ.x, p1341.y + v2813.ΔⲆΔ.y, p1341.r);
    f84(v439, v624.ⵠΔΔᐃᐃΔᐃ[v2812.time]);
    v439.globalAlpha = 1;
  }
  function f406(p1342, p1343, p1344, p1345, p1346, p1347) {
    var v2086 = p1345.w1;
    var v2087 = p1345.w2;
    var v2088 = p1345.w3;
    var v2089 = v2813.ΔⲆΔ.x + p1342 + 820;
    var v2090 = Math.max(v2813.ΔⲆΔ.y + p1343, 0);
    var v2091 = Math.max(-v2813.ΔⲆΔ.y + v442 - p1344 - 100, 0);
    var vV2090 = v2090;
    var v2092 = v442 - v2090 - v2091;
    if (p1347) {
      var v2093 = p1345.ΔᐃΔ(v2086);
    } else {
      v2093 = v2086.r;
    }
    var v2094 = v2089 + 0;
    var vV2094 = v2094;
    var vVV2090 = vV2090;
    var v2095 = -v2093.x + 0;
    var vV2092 = v2092;
    var v2096 = v2094 += -v2093.x + 0 + 2;
    if (p1347) {
      v2093 = p1345.ΔᐃΔ(v2087);
    } else {
      v2093 = v2087.r;
    }
    var v2097 = v2089 - 250 - v2094 - v2093.x;
    var vV20942 = v2094;
    var vVV20902 = vV2090;
    var vV2097 = v2097;
    var vV20922 = v2092;
    var v2098 = (v2094 += v2097 + 2) - 2;
    if (p1347) {
      v2093 = p1345.ΔᐃΔ(v2088);
    } else {
      v2093 = v2088.r;
    }
    if (v2098 > v2094 + (v2097 = v2089 - 350 - v2094 - v2093.x)) {
      var vVVVVVVV16 = vVVVVVV16;
      var vV20943 = v2094;
      var vVV20903 = vV2090;
      var vV20972 = v2097;
      var vV20923 = v2092;
      var v2099 = v2094 += v2097 + 2;
    } else {
      vVVVVVVV16 = vV144;
      v2094 = v2098;
      v2099 = -1;
    }
    v2097 = v2089 - 700 - v2094;
    if (v2812.transition) {
      var v2100 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2100);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vV2094, vVV2090, v2095, vV2092);
    if (p1347) {
      if (v2812.transition) {
        v2100 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 70, 76, 42, 139, 155, v2100);
      } else {
        v439.fillStyle = v624.ᐃᐃᐃⲆᐃΔⵠ[v2812.time];
      }
    } else if (v2812.transition) {
      v2100 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2100);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vV20942, vVV20902, vV2097, vV20922);
    if (vVVVVVVV16) {
      if (p1347) {
        if (v2812.transition) {
          v2100 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
          v439.fillStyle = f396(17, 94, 96, 169, 214, 211, v2100);
        } else {
          v439.fillStyle = v624.ⵠⵠⵠⵠⲆΔΔ[v2812.time];
        }
      } else if (v2812.transition) {
        v2100 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2100);
      } else {
        v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
      }
      v439.fillRect(vV20943, vVV20903, vV20972, vV20923);
    }
    if (v2811.ⵠᐃΔⵠⵠ && p1347) {
      p1345.ⵠⲆΔⲆⵠⵠⵠⲆⲆ(v2098, v2099, v2096, v2089, -v2813.ΔⲆΔ.y + vVV2090, -v2813.ΔⲆΔ.y + vVV2090 + vV2092);
    }
  }
  function f407(p1348, p1349, p1350, p1351, p1352, p1353, p1354, p1355, p1356, p1357) {
    if (v2812.transition) {
      v439.globalAlpha = 1;
      p1348(p1349, p1350, p1351, p1352, p1353, p1354, p1355, p1356, p1357);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      p1348(p1349, p1350, p1351, p1352, p1353, p1354, p1355, p1356, p1357);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      p1348(p1349, p1350, p1351, p1352, p1353, p1354, p1355, p1356, p1357);
    }
  }
  function f408(p1358, p1359) {
    if (v2812.transition) {
      v439.globalAlpha = 1;
      p1358.ⲆᐃⲆᐃⵠ(p1359);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      p1358.ⲆᐃⲆᐃⵠ(p1359);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      p1358.ⲆᐃⲆᐃⵠ(p1359);
    }
  }
  function f409(p1360, p1361, p1362, p1363) {
    if (v2812.transition) {
      v439.globalAlpha = 1;
      f293(v439, ⵠΔ[p1360][v2812.time], p1362, p1363);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      f293(v439, ⵠΔ[p1360][v2812.time], p1362, p1363);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      f293(v439, p1361, p1362, p1363);
    }
  }
  function f410(p1364, p1365, p1366) {
    if (v2812.transition) {
      v439.globalAlpha = 1;
      p1364.ᐃᐃΔⵠ(p1365, p1366);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      p1364.ᐃᐃΔⵠ(p1365, p1366);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      p1364.ᐃᐃΔⵠ(p1365, p1366);
    }
  }
  function f411(p1367, p1368, p1369, p1370, p1371) {
    var v2101 = p1369.width;
    var v2102 = p1369.height;
    var v2103 = Math.floor(v2101 / 2);
    var v2104 = Math.floor(v2102 / 2);
    if (v2812.transition) {
      v439.globalAlpha = 1;
      f293(v439, ⵠΔ[p1367][p1368][v2812.time], 0, 0, v2101, v2102, p1370, p1371, v2103, v2104);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      f293(v439, ⵠΔ[p1367][p1368][v2812.time], 0, 0, v2101, v2102, p1370, p1371, v2103, v2104);
      v2812.time = v2812.time ? 0 : 1;
      v439.globalAlpha = 1;
    } else {
      f293(v439, ⵠΔ[p1367][p1368][v2812.time], 0, 0, v2101, v2102, p1370, p1371, v2103, v2104);
    }
  }
  function f412(p1372, p1373, p1374, p1375, p1376, p1377) {
    var v2105 = p1375.w1;
    var v2106 = p1375.w2;
    var v2107 = p1375.w3;
    var v2108 = v2813.ΔⲆΔ.x + p1372 + 820;
    var v2109 = Math.max(v2813.ΔⲆΔ.y + p1373, 0);
    var v2110 = Math.max(-v2813.ΔⲆΔ.y + v442 - p1374 - 100, 0);
    var vV2109 = v2109;
    var v2111 = v442 - v2109 - v2110;
    if (p1377) {
      var v2112 = p1375.ΔᐃΔ(v2105).x;
    } else {
      v2112 = v2105.r.x;
    }
    var v2113 = v2108 + 0;
    0;
    v2113 += -v2112 + 0 + 2;
    if (p1377) {
      v2112 = p1375.ΔᐃΔ(v2106).x;
    } else {
      v2112 = v2106.r.x;
    }
    var v2114 = v2108 - 250 - v2113 - v2112;
    var v2115 = (v2113 += v2114 + 2) - 2;
    if (p1377) {
      v2112 = p1375.ΔᐃΔ(v2107).x;
    } else {
      v2112 = v2107.r.x;
    }
    if (v2115 > v2113 + (v2114 = v2108 - 350 - v2113 - v2112)) {
      v2113 += v2114 + 2;
    } else {
      v2113 = v2115;
    }
    v2114 = v2108 - 700 - v2113;
    if (p1377 > 0 && p1376.ⲆΔⵠΔⵠⵠⲆ === 1) {
      if (v2812.transition) {
        var v2116 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 77, 72, 252, 239, 187, v2116);
      } else {
        v439.fillStyle = v624.ⵠⵠⲆⲆⲆᐃⲆ[v2812.time];
      }
      v439.fillRect(v2113, vV2109, v2114, v2111);
    } else {
      if (v2812.transition) {
        v2116 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(p1376.ⵠᐃᐃ[0], p1376.ⵠᐃᐃ[1], p1376.ⵠᐃᐃ[2], p1376.ⵠΔⵠ[0], p1376.ⵠΔⵠ[1], p1376.ⵠΔⵠ[2], v2116);
      } else {
        v439.fillStyle = p1376.ⲆⵠⲆΔⵠ[v2812.time];
      }
      v439.fillRect(v2113, vV2109, v2114, v2111);
    }
  }
  function f413(p1378, p1379, p1380, p1381, p1382, p1383) {
    var v2117 = p1381.w1;
    var v2118 = p1381.w2;
    var v2119 = p1381.w3;
    var v2120 = v2813.ΔⲆΔ.y + p1378 - 700;
    var v2121 = Math.max(v2813.ΔⲆΔ.x + p1379, 0);
    var v2122 = Math.max(-v2813.ΔⲆΔ.x + v441 - p1380 - 100, 0);
    var vV2121 = v2121;
    var v2123 = v441 - v2121 - v2122;
    if (p1383) {
      var v2124 = p1381.ΔᐃΔ(v2117);
    } else {
      v2124 = v2117.r;
    }
    var v2125 = v2120 + 0;
    var vVV2121 = vV2121;
    var vV2125 = v2125;
    var v2126 = v2124.x + 0;
    var vV2123 = v2123;
    var v2127 = v2125 += v2124.x + 0 - 2;
    if (p1383) {
      v2124 = p1381.ΔᐃΔ(v2118);
    } else {
      v2124 = v2118.r;
    }
    var v2128 = v2120 + 250 - v2125 + v2124.x;
    var vV21252 = v2125;
    var vVV21212 = vV2121;
    var vV2128 = v2128;
    var vV21232 = v2123;
    var v2129 = (v2125 += v2128 - 2) - 2;
    if (p1383) {
      v2124 = p1381.ΔᐃΔ(v2119);
    } else {
      v2124 = v2119.r;
    }
    if (v2129 < v2125 + (v2128 = v2120 + 350 - v2125 + v2124.x) - 3) {
      var v2130 = true;
      var vV21253 = v2125;
      var vVV21213 = vV2121;
      var vV21282 = v2128;
      var vV21233 = v2123;
      var v2131 = v2125 += v2128 - 2;
    } else {
      v2130 = false;
      v2125 = v2129;
      v2131 = -1;
    }
    v2128 = v2120 + 700 - v2125;
    if (v2812.transition) {
      var v2132 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2132);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vVV2121, vV2125, vV2123, v2126);
    if (p1383) {
      if (v2812.transition) {
        v2132 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 70, 76, 42, 139, 155, v2132);
      } else {
        v439.fillStyle = v624.ᐃᐃᐃⲆᐃΔⵠ[v2812.time];
      }
    } else if (v2812.transition) {
      v2132 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
      v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2132);
    } else {
      v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
    }
    v439.fillRect(vVV21212, vV21252, vV21232, vV2128);
    if (v2130) {
      if (p1383) {
        if (v2812.transition) {
          v2132 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
          v439.fillStyle = f396(17, 94, 96, 169, 214, 211, v2132);
        } else {
          v439.fillStyle = v624.ⵠⵠⵠⵠⲆΔΔ[v2812.time];
        }
      } else if (v2812.transition) {
        v2132 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(9, 55, 63, 11, 106, 132, v2132);
      } else {
        v439.fillStyle = v624.ᐃᐃⲆΔΔ[v2812.time];
      }
      v439.fillRect(vVV21213, vV21253, vV21233, vV21282);
    }
    if (v2811.ⵠᐃΔⵠⵠ && p1383) {
      p1381.ᐃΔⵠⵠΔΔⵠΔΔ(v2129, v2131, v2127, v2120, -v2813.ΔⲆΔ.x + vVV2121, -v2813.ΔⲆΔ.x + vVV2121 + vV2123);
    }
  }
  function f414(p1384, p1385, p1386, p1387, p1388, p1389) {
    var v2133 = p1387.w1;
    var v2134 = p1387.w2;
    var v2135 = p1387.w3;
    var v2136 = v2813.ΔⲆΔ.y + p1384 - 700;
    var v2137 = Math.max(v2813.ΔⲆΔ.x + p1385, 0);
    var v2138 = Math.max(-v2813.ΔⲆΔ.x + v441 - p1386 - 100, 0);
    var vV2137 = v2137;
    var v2139 = v441 - v2137 - v2138;
    if (p1389) {
      var v2140 = p1387.ΔᐃΔ(v2133).x;
    } else {
      v2140 = v2133.r.x;
    }
    var v2141 = v2136 + 0;
    0;
    v2141 += v2140 + 0 - 2;
    if (p1389) {
      v2140 = p1387.ΔᐃΔ(v2134).x;
    } else {
      v2140 = v2134.r.x;
    }
    var v2142 = v2136 + 250 - v2141 + v2140;
    var v2143 = (v2141 += v2142 - 2) - 2;
    if (p1389) {
      v2140 = p1387.ΔᐃΔ(v2135).x;
    } else {
      v2140 = v2135.r.x;
    }
    if (v2143 < v2141 + (v2142 = v2136 + 350 - v2141 + v2140) - 3) {
      v2141 += v2142 - 2;
    } else {
      v2141 = v2143;
    }
    v2142 = v2136 + 700 - v2141;
    if (p1389 > 0 && p1388.ⲆΔⵠΔⵠⵠⲆ === 1) {
      if (v2812.transition) {
        var v2144 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(15, 77, 72, 252, 239, 187, v2144);
      } else {
        v439.fillStyle = v624.ⵠⵠⲆⲆⲆᐃⲆ[v2812.time];
      }
      v439.fillRect(vV2137, v2141, v2139, v2142);
    } else {
      if (v2812.transition) {
        v2144 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
        v439.fillStyle = f396(p1388.ⵠᐃᐃ[0], p1388.ⵠᐃᐃ[1], p1388.ⵠᐃᐃ[2], p1388.ⵠΔⵠ[0], p1388.ⵠΔⵠ[1], p1388.ⵠΔⵠ[2], v2144);
      } else {
        v439.fillStyle = p1388.ⲆⵠⲆΔⵠ[v2812.time];
      }
      v439.fillRect(vV2137, v2141, v2139, v2142);
    }
  }
  function f415() {
    v439.globalAlpha = 1;
    if (v2812.transition) {
      var v2145 = v2812.ⲆΔⲆΔ.ⲆᐃⲆ();
    }
    v2812.ΔⵠⲆⵠⵠⵠΔᐃⵠ(-v2813.ΔⲆΔ.x, -v2813.ΔⲆΔ.y);
    v2020 = Math.max(Math.floor(-v2813.ΔⲆΔ.x / v2812.ⲆΔᐃⵠⲆᐃⵠ) - 5, 0);
    v2021 = Math.min(Math.floor((-v2813.ΔⲆΔ.x + v2813.ΔⲆΔ.w) / v2812.ⲆΔᐃⵠⲆᐃⵠ) + 4, v2812.ⲆΔᐃⵠⲆ - 1);
    v2022 = Math.max(Math.floor(-v2813.ΔⲆΔ.y / v2812.Ⲇⵠᐃⵠⵠᐃⵠ) - 3, 0);
    v2023 = Math.min(Math.floor((-v2813.ΔⲆΔ.y + v2813.ΔⲆΔ.ⵠᐃⵠ) / v2812.Ⲇⵠᐃⵠⵠᐃⵠ) + 3, v2812.ⵠΔᐃΔⵠ - 1);
    (function () {
      for (var v2146 = v2812.ΔᐃⵠⲆ.length - 1; v2146 >= 0; v2146--) {
        var v2147 = v2812.ΔᐃⵠⲆ[v2146];
        if (v2812.ᐃᐃⵠⲆⵠ === v2147.ΔᐃΔ) {
          var v2148 = v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ];
          if (v2147.x1 - 230 - v441 <= -v2813.ΔⲆΔ.x && v2147.x2 + 330 >= -v2813.ΔⲆΔ.x && v2147.y1 - v442 <= -v2813.ΔⲆΔ.y && v2147.y2 + 100 >= -v2813.ΔⲆΔ.y) {
            var v2149 = v2147.x2;
            if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
              v2149 -= 610;
            }
            var v2150 = v2147.x1;
            if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
              v2150 += 610;
            }
            var v2151 = v2147.y2;
            if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
              v2151 -= 610;
            }
            var v2152 = v2147.y1;
            if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
              v2152 += 610;
            }
            if (v2812.transition) {
              var v2153 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
              v439.fillStyle = f396(v2148.ⵠᐃᐃ[0], v2148.ⵠᐃᐃ[1], v2148.ⵠᐃᐃ[2], v2148.ⵠΔⵠ[0], v2148.ⵠΔⵠ[1], v2148.ⵠΔⵠ[1], v2153);
            } else {
              v439.fillStyle = v2148.ⲆⵠⲆΔⵠ[v2812.time];
            }
            var v2154 = Math.max(v2813.ΔⲆΔ.x + v2150 - 2 - 230, 0);
            var v2155 = Math.max(-v2813.ΔⲆΔ.x + v441 - v2149 - 330 - 2, 0);
            var v2156 = Math.max(v2813.ΔⲆΔ.y + v2152 - 2, 0);
            var v2157 = Math.max(-v2813.ΔⲆΔ.y + v442 - v2151 - 100 - 2, 0);
            v439.beginPath();
            v439.fillRect(v2154, v2156, v441 - v2155 - v2154, v442 - v2156 - v2157);
          }
        }
      }
      for (v2146 = v2812.ΔᐃⵠⲆ.length - 1; v2146 >= 0; v2146--) {
        v2147 = v2812.ΔᐃⵠⲆ[v2146];
        if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
          v2149 = v2147.x2;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2149 -= 400;
          }
          v2150 = v2147.x1;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2150 += 400;
          }
          v2151 = v2147.y2;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2151 -= 300;
          }
          v2152 = v2147.y1;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2152 += 300;
          }
          if (!(v2147.ⲆⵠⲆ & 8) && -v2813.ΔⲆΔ.x >= v2149 - v441 + 120 && v2149 + 820 >= -v2813.ΔⲆΔ.x && v2152 + 88 - v442 <= -v2813.ΔⲆΔ.y && -v2813.ΔⲆΔ.y <= v2151 + 50) {
            f412(v2149, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[0], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 8);
            f406(v2149, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[0], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 8);
          }
          if (!(v2147.ⲆⵠⲆ & 4) && v2150 - v441 - 700 <= -v2813.ΔⲆΔ.x && v2150 - 20 >= -v2813.ΔⲆΔ.x && -v2813.ΔⲆΔ.y >= v2152 + 88 - v442 && -v2813.ΔⲆΔ.y <= v2151 + 50) {
            f404(v2150, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[1], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 4);
            f398(v2150, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[1], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 4);
          }
          if (!(v2147.ⲆⵠⲆ & 2) && -v2813.ΔⲆΔ.x >= v2150 - 235 - v441 && -v2813.ΔⲆΔ.x <= v2149 + 350 && -v2813.ΔⲆΔ.y >= v2151 - v442 - 275 && -v2813.ΔⲆΔ.y <= v2151 + 490) {
            f399(v2151 - 230, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[2], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 2);
            f397(v2151 - 230, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[2], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 2);
          }
          if (!(v2147.ⲆⵠⲆ & 1) && -v2813.ΔⲆΔ.x >= v2150 - 235 - v441 && v2149 + 350 >= -v2813.ΔⲆΔ.x && v2152 - v442 - 390 <= -v2813.ΔⲆΔ.y && v2152 + 315 >= -v2813.ΔⲆΔ.y) {
            f414(v2152 + 310, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[3], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 1);
            f413(v2152 + 310, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[3], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 1);
          }
        }
      }
      for (v2146 = v2812.ΔᐃⵠⲆ.length - 1; v2146 >= 0; v2146--) {
        if ((v2147 = v2812.ΔᐃⵠⲆ[v2146]).ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
          v2149 = v2147.x2;
          if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
            v2149 -= 400;
          }
          v2150 = v2147.x1;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2150 += 400;
          }
          v2151 = v2147.y2;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2151 -= 300;
          }
          v2152 = v2147.y1;
          if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
            v2152 += 300;
          }
          if (v2147.ⲆⵠⲆ & 8 && v2149 - v441 + 120 <= -v2813.ΔⲆΔ.x && v2149 + 820 >= -v2813.ΔⲆΔ.x && -v2813.ΔⲆΔ.y >= v2152 + 88 - v442 && v2151 + 50 >= -v2813.ΔⲆΔ.y) {
            f412(v2149, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[0], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 8);
          }
          if (v2147.ⲆⵠⲆ & 4 && -v2813.ΔⲆΔ.x >= v2150 - v441 - 700 && -v2813.ΔⲆΔ.x <= v2150 - 20 && v2152 + 88 - v442 <= -v2813.ΔⲆΔ.y && v2151 + 50 >= -v2813.ΔⲆΔ.y) {
            f404(v2150, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[1], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 4);
          }
          if (v2147.ⲆⵠⲆ & 2 && v2150 - 235 - v441 <= -v2813.ΔⲆΔ.x && v2149 + 350 >= -v2813.ΔⲆΔ.x && v2151 - v442 - 275 <= -v2813.ΔⲆΔ.y && -v2813.ΔⲆΔ.y <= v2151 + 490) {
            f399(v2151 - 230, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[2], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 2);
          }
          if ((v2147.ⲆⵠⲆ & 1) !== 0 && v2150 - 235 - v441 <= -v2813.ΔⲆΔ.x && v2149 + 350 >= -v2813.ΔⲆΔ.x && v2152 - v442 - 390 <= -v2813.ΔⲆΔ.y && -v2813.ΔⲆΔ.y <= v2152 + 315) {
            f414(v2152 + 310, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[3], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 1);
          }
        }
      }
      for (v2146 = v2812.ΔᐃⵠⲆ.length - 1; v2146 >= 0; v2146--) {
        if ((v2147 = v2812.ΔᐃⵠⲆ[v2146]).ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
          v2148 = v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ];
          if (v2147.x1 - 230 - v441 <= -v2813.ΔⲆΔ.x && v2147.x2 + 330 >= -v2813.ΔⲆΔ.x && v2147.y1 - v442 <= -v2813.ΔⲆΔ.y && -v2813.ΔⲆΔ.y <= v2147.y2 + 100) {
            v2149 = v2147.x2;
            if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
              if (v2147.ⲆⵠⲆ & 8) {
                v2149 -= 610;
              } else {
                v2149 -= 414;
              }
            }
            v2150 = v2147.x1;
            if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
              if (v2147.ⲆⵠⲆ & 4) {
                v2150 += 610;
              } else {
                v2150 += 414;
              }
            }
            v2151 = v2147.y2;
            if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
              if (v2147.ⲆⵠⲆ & 2) {
                v2151 -= 610;
              } else {
                v2151 -= 414;
              }
            }
            v2152 = v2147.y1;
            if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
              if (v2147.ⲆⵠⲆ & 1) {
                v2152 += 610;
              } else {
                v2152 += 414;
              }
            }
            if (v2812.transition) {
              v2153 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
              v439.fillStyle = f396(v2148.ⵠᐃᐃ[0], v2148.ⵠᐃᐃ[1], v2148.ⵠᐃᐃ[2], v2148.ⵠΔⵠ[0], v2148.ⵠΔⵠ[1], v2148.ⵠΔⵠ[2], v2153);
            } else {
              v439.fillStyle = v2148.ⲆⵠⲆΔⵠ[v2812.time];
            }
            v2154 = Math.max(v2813.ΔⲆΔ.x + v2150 - 2 - 230, 0);
            v2155 = Math.max(-v2813.ΔⲆΔ.x + v441 - v2149 - 330 - 2, 0);
            v2156 = Math.max(v2813.ΔⲆΔ.y + v2152 - 2, 0);
            v2157 = Math.max(-v2813.ΔⲆΔ.y + v442 - v2151 - 100 - 2, 0);
            v439.beginPath();
            v439.fillRect(v2154, v2156, v441 - v2155 - v2154, v442 - v2156 - v2157);
          }
        }
      }
      if (v2811.ⵠᐃΔⵠⵠ) {
        f407(f390, v2022, v2023, v2020, v2021, 695, "isl", 2);
        f407(f390, v2022, v2023, v2020, v2021, 694, "isl", 2);
      }
      f407(f394, v2022, v2023, v2020, v2021, 692, "isl", 2);
      if (v2811.ⵠᐃΔⵠⵠ) {
        f407(f393, v2022, v2023, v2020, v2021, 243, "de");
      }
      var v2158 = v2812.ⲆⵠΔ[0];
      for (v2146 = 0; v2146 < v2158.length; v2146++) {
        for (var v2159 = v2158[v2146], v2160 = 0; v2160 < v2159.ᐃⲆᐃⵠΔ.length; v2160++) {
          f402(v2159.ᐃⲆᐃⵠΔ[v2160]);
        }
      }
      if ((v1778 += v3026 * 40) > 60) {
        v1778 -= 60;
      }
      f407(f338, v2022, v2023, v2020, v2021, 1024, "r", 0);
      v2146 = 0;
      for (; v2812.ΔᐃⵠⲆ.length > v2146; v2146++) {
        if ((v2147 = v2812.ΔᐃⵠⲆ[v2146]).ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
          v2149 = v2147.x2;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2149 -= 400;
          }
          v2150 = v2147.x1;
          if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
            v2150 += 400;
          }
          v2151 = v2147.y2;
          if (v2147.ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ) {
            v2151 -= 300;
          }
          v2152 = v2147.y1;
          if (v2812.ᐃᐃⵠⲆⵠ !== v2147.ΔᐃΔ) {
            v2152 += 300;
          }
          if ((v2147.ⲆⵠⲆ & 8) > 0 && -v2813.ΔⲆΔ.x >= v2149 - v441 + 120 && -v2813.ΔⲆΔ.x <= v2149 + 820 && -v2813.ΔⲆΔ.y >= v2152 + 88 - v442 && -v2813.ΔⲆΔ.y <= v2151 + 50) {
            f406(v2149, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[0], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 8);
          }
          if ((v2147.ⲆⵠⲆ & 4) > 0 && v2150 - v441 - 700 <= -v2813.ΔⲆΔ.x && -v2813.ΔⲆΔ.x <= v2150 - 20 && v2152 + 88 - v442 <= -v2813.ΔⲆΔ.y && v2151 + 50 >= -v2813.ΔⲆΔ.y) {
            f398(v2150, v2152 + 88, v2151 - 88, v2813.ⵠᐃΔⵠ[1], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 4);
          }
          if ((v2147.ⲆⵠⲆ & 2) > 0 && v2150 - 235 - v441 <= -v2813.ΔⲆΔ.x && -v2813.ΔⲆΔ.x <= v2149 + 350 && v2151 - v442 - 275 <= -v2813.ΔⲆΔ.y && v2151 + 490 >= -v2813.ΔⲆΔ.y) {
            f397(v2151 - 230, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[2], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 2);
          }
          if ((v2147.ⲆⵠⲆ & 1) > 0 && -v2813.ΔⲆΔ.x >= v2150 - 235 - v441 && v2149 + 350 >= -v2813.ΔⲆΔ.x && -v2813.ΔⲆΔ.y >= v2152 - v442 - 390 && v2152 + 315 >= -v2813.ΔⲆΔ.y) {
            f413(v2152 + 310, v2150 - 230, v2149 + 230, v2813.ⵠᐃΔⵠ[3], v2812.ⲆᐃᐃⵠⲆ[v2147.ΔᐃΔ], v2147.ⲆⵠⲆ & 1);
          }
        }
      }
    })();
    (function () {
      var vV2020 = v2020;
      var vV2021 = v2021;
      var vV2022 = v2022;
      var vV2023 = v2023;
      if (v2811.ⵠᐃΔⵠⵠ) {
        f407(f394, vV2022, vV2023, vV2020, vV2021, 621, "l", 2);
      }
      if (v2811.ⵠᐃΔⵠⵠ) {
        f407(f394, vV2022, vV2023, vV2020, vV2021, v624.ᐃΔⵠⵠⲆ, "la", 5);
      }
      f407(f394, vV2022, vV2023, vV2020, vV2021, 203, "la", 5);
      f407(f390, vV2022, vV2023, vV2020, vV2021, 620, "l", 2);
      if (v2811.ⵠᐃΔⵠⵠ) {
        f407(f392, vV2022, vV2023, vV2020, vV2021, 203, "la", 5);
        f407(f390, vV2022, vV2023, vV2020, vV2021, 619, "l", 2);
      }
      f407(f394, vV2022, vV2023, vV2020, vV2021, 1052, "ma", 4);
      for (var v2161 = v2812.ⲆⵠΔ[76], v2162 = 0; v2162 < v2161.length; v2162++) {
        v2161[v2162].ΔⲆΔᐃⲆⲆⵠ();
      }
      var v2163 = v2812.ⲆⵠΔ[0];
      for (v2162 = 0; v2163.length > v2162; v2162++) {
        for (var v2164 = v2163[v2162], v2165 = 0; v2165 < v2164.ΔΔⵠᐃⵠ.length; v2165++) {
          f405(v2164.ΔΔⵠᐃⵠ[v2165]);
        }
      }
      var v2166 = v2812.ⲆⵠΔ[30];
      for (v2162 = 0; v2162 < v2166.length; v2162++) {
        f410(v2166[v2162], 125);
        v2166[v2162].ⵠⵠΔᐃΔ(v2166[v2162].info);
      }
      var v2167 = v2812.ⲆⵠΔ[18];
      for (v2162 = 0; v2167.length > v2162; v2162++) {
        if (v2167[v2162].action == 2) {
          f403(v2167[v2162]);
        }
      }
      var v2168 = v2812.ⲆⵠΔ[1];
      for (v2162 = 0; v2162 < v2168.length; v2162++) {
        f403(v2168[v2162], 113);
      }
      var v2169 = v2812.ⲆⵠΔ[22];
      for (v2162 = 0; v2169.length > v2162; v2162++) {
        f403(v2169[v2162]);
      }
      var v2170 = v2812.ⲆⵠΔ[23];
      for (v2162 = 0; v2170.length > v2162; v2162++) {
        f403(v2170[v2162]);
      }
      var v2171 = v2812.ⲆⵠΔ[6];
      for (v2162 = 0; v2171.length > v2162; v2162++) {
        f403(v2171[v2162], 118);
      }
      var v2172 = v2812.ⲆⵠΔ[36];
      for (v2162 = 0; v2162 < v2172.length; v2162++) {
        f410(v2172[v2162]);
      }
      var v2173 = v2812.ⲆⵠΔ[33];
      for (v2162 = 0; v2162 < v2173.length; v2162++) {
        f410(v2173[v2162], 141);
      }
      var v2174 = v2812.ⲆⵠΔ[3];
      for (v2162 = 0; v2174.length > v2162; v2162++) {
        f403(v2174[v2162]);
      }
      v2174 = v2812.ⲆⵠΔ[43];
      v2162 = 0;
      for (; v2174.length > v2162; v2162++) {
        f403(v2174[v2162]);
      }
      v2174 = v2812.ⲆⵠΔ[3];
      v2162 = 0;
      for (; v2162 < v2174.length; v2162++) {
        f408(v2174[v2162]);
      }
      var v2175 = v2812.ⲆⵠΔ[44];
      for (v2162 = 0; v2175.length > v2162; v2162++) {
        if (!(v2175[v2162].info & 15) || v2175[v2162].info === 10) {
          f410(v2175[v2162]);
        }
      }
      var v2176 = v2812.ⲆⵠΔ[54];
      for (v2162 = 0; v2162 < v2176.length; v2162++) {
        if (!(v2176[v2162].info & 15) || v2176[v2162].info === 10) {
          f410(v2176[v2162]);
        }
      }
      var v2177 = v2812.ⲆⵠΔ[55];
      for (v2162 = 0; v2177.length > v2162; v2162++) {
        if ((v2177[v2162].info & 15) === 0 || v2177[v2162].info === 10) {
          f410(v2177[v2162]);
        }
      }
      var v2178 = v2812.ⲆⵠΔ[79];
      for (v2162 = 0; v2162 < v2178.length; v2162++) {
        f410(v2178[v2162], 132);
      }
      var v2179 = v2812.ⲆⵠΔ[39];
      for (v2162 = 0; v2162 < v2179.length; v2162++) {
        if ((v2179[v2162].info & 15) === 0 || v2179[v2162].info === 10) {
          f410(v2179[v2162]);
        }
      }
      var v2180 = v2812.ⲆⵠΔ[40];
      for (v2162 = 0; v2162 < v2180.length; v2162++) {
        if (!(v2180[v2162].info & 15) || v2180[v2162].info === 10) {
          f410(v2180[v2162]);
        }
      }
      var v2181 = v2812.ⲆⵠΔ[37];
      for (v2162 = 0; v2181.length > v2162; v2162++) {
        if (!(v2181[v2162].info & 15) || v2181[v2162].info === 10) {
          f410(v2181[v2162]);
        }
      }
      v2178 = v2812.ⲆⵠΔ[31];
      v2162 = 0;
      for (; v2178.length > v2162; v2162++) {
        f410(v2178[v2162]);
      }
      var v2182 = v2812.ⲆⵠΔ[86];
      for (v2162 = 0; v2162 < v2182.length; v2162++) {
        f410(v2182[v2162], 250, 729);
      }
      var v2183 = v2812.ⲆⵠΔ[82];
      for (v2162 = 0; v2162 < v2183.length; v2162++) {
        f410(v2183[v2162], 250, 729);
      }
      var v2184 = v2812.ⲆⵠΔ[87];
      for (v2162 = 0; v2162 < v2184.length; v2162++) {
        f410(v2184[v2162], 854, 859);
      }
      var v2185 = v2812.ⲆⵠΔ[45];
      for (v2162 = 0; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info & 1) {
          f410(v2185[v2162], 336);
        }
      }
      v2185 = v2812.ⲆⵠΔ[46];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info & 1) {
          f410(v2185[v2162], 373);
        }
      }
      v2185 = v2812.ⲆⵠΔ[47];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 376);
        }
      }
      v2185 = v2812.ⲆⵠΔ[48];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 379);
        }
      }
      v2185 = v2812.ⲆⵠΔ[49];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 500);
        }
      }
      v2185 = v2812.ⲆⵠΔ[53];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 376);
        }
      }
      v2185 = v2812.ⲆⵠΔ[10];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info & 1) {
          f410(v2185[v2162], 336);
        }
      }
      v2185 = v2812.ⲆⵠΔ[15];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (v2185[v2162].info & 1) {
          f410(v2185[v2162], 373);
        }
      }
      v2185 = v2812.ⲆⵠΔ[16];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 376);
        }
      }
      v2185 = v2812.ⲆⵠΔ[17];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 379);
        }
      }
      v2185 = v2812.ⲆⵠΔ[21];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 500);
        }
      }
      v2185 = v2812.ⲆⵠΔ[51];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (v2185[v2162].info) {
          f410(v2185[v2162], 376);
        }
      }
      var v2186 = v2812.ⲆⵠΔ[80];
      for (v2162 = 0; v2162 < v2186.length; v2162++) {
        f410(v2186[v2162], 264, 322);
      }
      var v2187 = v2812.ⲆⵠΔ[41];
      for (v2162 = 0; v2187.length > v2162; v2162++) {
        f410(v2187[v2162], 198);
      }
      v2161 = v2812.ⲆⵠΔ[76];
      v2162 = 0;
      for (; v2161.length > v2162; v2162++) {
        f410(v2161[v2162], v624.ⲆΔΔⵠΔᐃΔ, v624.ΔⵠᐃⵠⲆⵠΔᐃΔ);
      }
      var v2188 = v2812.ⲆⵠΔ[91];
      for (v2162 = 0; v2162 < v2188.length; v2162++) {
        if (v2188[v2162].ⵠⵠⲆⲆΔⲆⵠ === 0) {
          f410(v2188[v2162]);
        }
      }
      v2163 = v2812.ⲆⵠΔ[0];
      v2162 = 0;
      for (; v2163.length > v2162; v2162++) {
        v2164 = v2163[v2162];
        if (v2163[v2162].ⵠΔᐃⵠⵠ !== 227 && v2163[v2162].ⵠΔᐃⵠⵠ !== 228 && v2163[v2162].ⵠΔᐃⵠⵠ !== 229 && v2163[v2162].ⵠΔᐃⵠⵠ !== 230 && v2163[v2162].ⵠΔᐃⵠⵠ !== 91) {
          if (v2164.ᐃⲆΔⵠⲆⲆⵠ === 0) {
            if (v2164.ᐃⲆΔⲆΔᐃᐃ > 0.001) {
              v2164.ᐃⲆΔⲆΔᐃᐃ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(v2164.ᐃⲆΔⲆΔᐃᐃ, 0, 0.018);
              var v2189 = 1 + Math.min(1, Math.max(v2164.ᐃⲆΔⲆΔᐃᐃ, 0) / 100) * 0.18;
              v439.save();
              v439.scale(v2189, v2189);
              v2813.ΔⲆΔ.x /= v2189;
              v2813.ΔⲆΔ.y /= v2189;
              v2164.x /= v2189;
              v2164.y /= v2189;
              v2164.r.x /= v2189;
              v2164.r.y /= v2189;
              v2164.ΔΔΔΔⲆⲆᐃ();
              v2164.ᐃᐃΔⵠ();
              v2813.ΔⲆΔ.x *= v2189;
              v2813.ΔⲆΔ.y *= v2189;
              v2164.x *= v2189;
              v2164.y *= v2189;
              v2164.r.x *= v2189;
              v2164.r.y *= v2189;
              v439.restore();
            } else {
              v2164.ⵠⵠⲆⲆΔⲆⵠ = 0;
              v2164.ΔΔΔΔⲆⲆᐃ();
              v2164.ᐃᐃΔⵠ();
            }
          }
        } else if (v2164.ⵠΔⵠⲆΔ <= 180) {
          v439.save();
          v2189 = 1 + Math.min(1, Math.max(v2164.ΔⲆᐃᐃⵠ - 30, 0) / 180) * 0.35;
          v439.scale(v2189, v2189);
          v2813.ΔⲆΔ.x /= v2189;
          v2813.ΔⲆΔ.y /= v2189;
          v2164.x /= v2189;
          v2164.y /= v2189;
          v2164.r.x /= v2189;
          v2164.r.y /= v2189;
          v2164.ⵠⵠⲆⲆΔⲆⵠ = 0;
          v2164.ΔΔΔΔⲆⲆᐃ();
          v2164.ᐃᐃΔⵠ();
          v2813.ΔⲆΔ.x *= v2189;
          v2813.ΔⲆΔ.y *= v2189;
          v2164.x *= v2189;
          v2164.y *= v2189;
          v2164.r.x *= v2189;
          v2164.r.y *= v2189;
          v439.restore();
        }
      }
      v2187 = v2812.ⲆⵠΔ[41];
      v2162 = 0;
      for (; v2187.length > v2162; v2162++) {
        f410(v2187[v2162], 913);
      }
      var v2190 = v2812.ⲆⵠΔ[67];
      for (v2162 = 0; v2162 < v2190.length; v2162++) {
        f410(v2190[v2162]);
      }
      var v2191 = v2812.ⲆⵠΔ[62];
      for (v2162 = 0; v2162 < v2191.length; v2162++) {
        f410(v2191[v2162], 419, 461);
      }
      var v2192 = v2812.ⲆⵠΔ[70];
      for (v2162 = 0; v2162 < v2192.length; v2162++) {
        f410(v2192[v2162]);
      }
      var v2193 = v2812.ⲆⵠΔ[60];
      for (v2162 = 0; v2162 < v2193.length; v2162++) {
        f410(v2193[v2162], 299, 326);
      }
      var v2194 = v2812.ⲆⵠΔ[72];
      for (v2162 = 0; v2194.length > v2162; v2162++) {
        f410(v2194[v2162], 232, 1077);
      }
      var v2195 = v2812.ⲆⵠΔ[73];
      for (v2162 = 0; v2162 < v2195.length; v2162++) {
        f410(v2195[v2162], 233, 1092);
      }
      v2175 = v2812.ⲆⵠΔ[44];
      v2162 = 0;
      for (; v2162 < v2175.length; v2162++) {
        if ((v2175[v2162].info & 15) !== 0 && v2175[v2162].info !== 10) {
          f410(v2175[v2162]);
        }
      }
      v2176 = v2812.ⲆⵠΔ[54];
      v2162 = 0;
      for (; v2162 < v2176.length; v2162++) {
        if (v2176[v2162].info & 15 && v2176[v2162].info !== 10) {
          f410(v2176[v2162]);
        }
      }
      v2177 = v2812.ⲆⵠΔ[89];
      v2162 = 0;
      for (; v2162 < v2177.length; v2162++) {
        f410(v2177[v2162], 239);
      }
      v2177 = v2812.ⲆⵠΔ[55];
      v2162 = 0;
      for (; v2177.length > v2162; v2162++) {
        if (v2177[v2162].info & 15 && v2177[v2162].info !== 10) {
          f410(v2177[v2162]);
        }
      }
      v2174 = v2812.ⲆⵠΔ[43];
      v2162 = 0;
      for (; v2174.length > v2162; v2162++) {
        f408(v2174[v2162]);
      }
      v2179 = v2812.ⲆⵠΔ[39];
      v2162 = 0;
      for (; v2179.length > v2162; v2162++) {
        if (v2179[v2162].info & 15 && v2179[v2162].info !== 10) {
          f410(v2179[v2162]);
        }
      }
      v2180 = v2812.ⲆⵠΔ[40];
      v2162 = 0;
      for (; v2180.length > v2162; v2162++) {
        if (v2180[v2162].info & 15 && v2180[v2162].info !== 10) {
          f410(v2180[v2162]);
        }
      }
      v2181 = v2812.ⲆⵠΔ[37];
      v2162 = 0;
      for (; v2162 < v2181.length; v2162++) {
        if (v2181[v2162].info & 15 && v2181[v2162].info !== 10) {
          f410(v2181[v2162]);
        }
      }
      var v2196 = v2812.ⲆⵠΔ[81];
      for (v2162 = 0; v2196.length > v2162; v2162++) {
        f410(v2196[v2162], 691, 697);
      }
      var v2197 = v2812.ⲆⵠΔ[66];
      for (v2162 = 0; v2197.length > v2162; v2162++) {
        f410(v2197[v2162], 637, 687);
      }
      var v2198 = v2812.ⲆⵠΔ[65];
      for (v2162 = 0; v2198.length > v2162; v2162++) {
        f410(v2198[v2162], 673, 688);
      }
      var v2199 = v2812.ⲆⵠΔ[61];
      for (v2162 = 0; v2199.length > v2162; v2162++) {
        f410(v2199[v2162], 260, 333);
      }
      var v2200 = v2812.ⲆⵠΔ[88];
      for (v2162 = 0; v2162 < v2200.length; v2162++) {
        f410(v2200[v2162], 1033, 1034);
      }
      var v2201 = v2812.ⲆⵠΔ[63];
      for (v2162 = 0; v2162 < v2201.length; v2162++) {
        f410(v2201[v2162], 445, 462);
      }
      var v2202 = v2812.ⲆⵠΔ[77];
      for (v2162 = 0; v2162 < v2202.length; v2162++) {
        f410(v2202[v2162]);
      }
      var v2203 = v2812.ⲆⵠΔ[68];
      for (v2162 = 0; v2162 < v2203.length; v2162++) {
        f410(v2203[v2162], 918, 919);
      }
      var v2204 = v2812.ⲆⵠΔ[71];
      for (v2162 = 0; v2204.length > v2162; v2162++) {
        f410(v2204[v2162]);
      }
      var v2205 = v2812.ⲆⵠΔ[78];
      for (v2162 = 0; v2205.length > v2162; v2162++) {
        f410(v2205[v2162], 1218, 1219);
      }
      var v2206 = v2812.ⲆⵠΔ[64];
      for (v2162 = 0; v2206.length > v2162; v2162++) {
        if (v2206[v2162].scale === 1) {
          f410(v2206[v2162], 449, 463);
        }
      }
      v2206 = v2812.ⲆⵠΔ[69];
      v2162 = 0;
      for (; v2206.length > v2162; v2162++) {
        if (v2206[v2162].scale === 1) {
          f410(v2206[v2162], 450, 464);
        }
      }
      var v2207 = v2812.ⲆⵠΔ[11];
      for (v2162 = 0; v2162 < v2207.length; v2162++) {
        f410(v2207[v2162]);
      }
      var v2208 = v2812.ⲆⵠΔ[2];
      for (v2162 = 0; v2162 < v2208.length; v2162++) {
        f410(v2208[v2162], 114);
      }
      v2167 = v2812.ⲆⵠΔ[18];
      v2162 = 0;
      for (; v2162 < v2167.length; v2162++) {
        f410(v2167[v2162]);
      }
      var v2209 = v2812.ⲆⵠΔ[34];
      for (v2162 = 0; v2209.length > v2162; v2162++) {
        f410(v2209[v2162]);
      }
      v2185 = v2812.ⲆⵠΔ[10];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 166);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[15];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 171);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[16];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 172);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[17];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 173);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[21];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 124);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[51];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 218);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[45];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 212);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[46];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 213);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[47];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 214);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[48];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 215);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[49];
      v2162 = 0;
      for (; v2162 < v2185.length; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 216);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      v2185 = v2812.ⲆⵠΔ[53];
      v2162 = 0;
      for (; v2185.length > v2162; v2162++) {
        if (!(v2185[v2162].info & 1)) {
          f410(v2185[v2162], 220);
        }
        v2185[v2162].ⵠⵠΔᐃΔ(v2185[v2162].info >> 1);
      }
      var v2210 = v2812.ⲆⵠΔ[4];
      for (v2162 = 0; v2210.length > v2162; v2162++) {
        f410(v2210[v2162], 162);
        v2210[v2162].ⵠⵠΔᐃΔ(v2210[v2162].info);
      }
      v2210 = v2812.ⲆⵠΔ[7];
      v2162 = 0;
      for (; v2210.length > v2162; v2162++) {
        f410(v2210[v2162], 163);
        v2210[v2162].ⵠⵠΔᐃΔ(v2210[v2162].info);
      }
      v2210 = v2812.ⲆⵠΔ[8];
      v2162 = 0;
      for (; v2162 < v2210.length; v2162++) {
        f410(v2210[v2162], 164);
        v2210[v2162].ⵠⵠΔᐃΔ(v2210[v2162].info);
      }
      v2210 = v2812.ⲆⵠΔ[9];
      v2162 = 0;
      for (; v2210.length > v2162; v2162++) {
        f410(v2210[v2162], 165);
        v2210[v2162].ⵠⵠΔᐃΔ(v2210[v2162].info);
      }
      v2210 = v2812.ⲆⵠΔ[19];
      v2162 = 0;
      for (; v2210.length > v2162; v2162++) {
        f410(v2210[v2162], 122);
        v2210[v2162].ⵠⵠΔᐃΔ(v2210[v2162].info);
      }
      v2210 = v2812.ⲆⵠΔ[50];
      v2162 = 0;
      for (; v2210.length > v2162; v2162++) {
        f410(v2210[v2162], 217);
        v2210[v2162].ⵠⵠΔᐃΔ(v2210[v2162].info);
      }
      var v2211 = v2812.ⲆⵠΔ[5];
      for (v2162 = 0; v2211.length > v2162; v2162++) {
        f410(v2211[v2162], 160);
        v2211[v2162].ⵠⵠΔᐃΔ(v2211[v2162].info);
      }
      v2211 = v2812.ⲆⵠΔ[12];
      v2162 = 0;
      for (; v2162 < v2211.length; v2162++) {
        f410(v2211[v2162], 168);
        v2211[v2162].ⵠⵠΔᐃΔ(v2211[v2162].info);
      }
      v2211 = v2812.ⲆⵠΔ[13];
      v2162 = 0;
      for (; v2162 < v2211.length; v2162++) {
        f410(v2211[v2162], 169);
        v2211[v2162].ⵠⵠΔᐃΔ(v2211[v2162].info);
      }
      v2211 = v2812.ⲆⵠΔ[14];
      v2162 = 0;
      for (; v2162 < v2211.length; v2162++) {
        f410(v2211[v2162], 170);
        v2211[v2162].ⵠⵠΔᐃΔ(v2211[v2162].info);
      }
      v2211 = v2812.ⲆⵠΔ[20];
      v2162 = 0;
      for (; v2211.length > v2162; v2162++) {
        f410(v2211[v2162], 123);
        v2211[v2162].ⵠⵠΔᐃΔ(v2211[v2162].info);
      }
      v2211 = v2812.ⲆⵠΔ[52];
      v2162 = 0;
      for (; v2162 < v2211.length; v2162++) {
        f410(v2211[v2162], 219);
        v2211[v2162].ⵠⵠΔᐃΔ(v2211[v2162].info);
      }
      var v2212 = v2812.ⲆⵠΔ[35];
      for (v2162 = 0; v2162 < v2212.length; v2162++) {
        var v2213 = v2212[v2162];
        if (v2213.info > 0) {
          f410(v2213, 788);
        } else {
          f410(v2213, 182);
        }
      }
      var v2214 = v2812.ⲆⵠΔ[29];
      for (v2162 = 0; v2214.length > v2162; v2162++) {
        f410(v2214[v2162], 159);
      }
      f407(f394, vV2022, vV2023, vV2020, vV2021, 111, "g", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 415, "gw", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 112, "d", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 416, "dw", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 110, "p", 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 241, "m", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 121, "a", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 202, "re", 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 679, "cs", 3, 3);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 679, "cs", 2, 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 679, "cs", 1, 1);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 679, "cs", 0, 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 676, "cs", 3, 3);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 676, "cs", 2, 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 676, "cs", 1, 1);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 676, "cs", 0, 0);
      var v2215 = v2812.ⲆⵠΔ[100];
      for (v2162 = 0; v2215.length > v2162; v2162++) {
        for (v2165 = 0; v2165 < v2215[v2162].info; v2165++) {
          f410(v2215[v2162].ⵠⵠⲆⵠ[v2165], 294);
        }
      }
      f407(f394, vV2022, vV2023, vV2020, vV2021, 108, "s", 2);
      var v2216 = v2812.ⲆⵠΔ[24];
      for (v2162 = 0; v2162 < v2216.length; v2162++) {
        f410(v2216[v2162]);
      }
      v2216 = v2812.ⲆⵠΔ[25];
      v2162 = 0;
      for (; v2216.length > v2162; v2162++) {
        f410(v2216[v2162]);
      }
      v2216 = v2812.ⲆⵠΔ[26];
      v2162 = 0;
      for (; v2216.length > v2162; v2162++) {
        f410(v2216[v2162]);
      }
      v2216 = v2812.ⲆⵠΔ[27];
      v2162 = 0;
      for (; v2216.length > v2162; v2162++) {
        f410(v2216[v2162]);
      }
      v2216 = v2812.ⲆⵠΔ[28];
      v2162 = 0;
      for (; v2162 < v2216.length; v2162++) {
        f410(v2216[v2162]);
      }
      var v2217 = v2812.ⲆⵠΔ[32];
      for (v2162 = 0; v2217.length > v2162; v2162++) {
        f403(v2217[v2162]);
      }
      v2168 = v2812.ⲆⵠΔ[1];
      v2162 = 0;
      for (; v2168.length > v2162; v2162++) {
        f408(v2168[v2162]);
      }
      v2168 = v2812.ⲆⵠΔ[6];
      v2162 = 0;
      for (; v2162 < v2168.length; v2162++) {
        f408(v2168[v2162]);
      }
      v2167 = v2812.ⲆⵠΔ[18];
      v2162 = 0;
      for (; v2162 < v2167.length; v2162++) {
        if (v2167[v2162].action == 2) {
          f408(v2167[v2162]);
        }
      }
      v2209 = v2812.ⲆⵠΔ[34];
      v2162 = 0;
      for (; v2209.length > v2162; v2162++) {
        f408(v2209[v2162]);
      }
      v2169 = v2812.ⲆⵠΔ[22];
      v2162 = 0;
      for (; v2169.length > v2162; v2162++) {
        f408(v2169[v2162]);
      }
      v2170 = v2812.ⲆⵠΔ[23];
      v2162 = 0;
      for (; v2170.length > v2162; v2162++) {
        f408(v2170[v2162]);
        v2170[v2162].ⵠⵠΔᐃΔ(v2170[v2162].info);
      }
      f407(f394, vV2022, vV2023, vV2020, vV2021, 989, "c", 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 109, "t", 5, 4);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 413, "f", 2, 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 693, "plm", 0, 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 307, "b", 3, 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 109, "t", 3, 2);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 307, "b", 1, 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 413, "f", 1, 1);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 693, "plm", 1, 1);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 109, "t", 1, 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 413, "f", 0, 0);
      f407(f394, vV2022, vV2023, vV2020, vV2021, 693, "plm", 2, 2);
      v2217 = v2812.ⲆⵠΔ[32];
      v2162 = 0;
      for (; v2162 < v2217.length; v2162++) {
        f408(v2217[v2162]);
      }
      var v2218 = v2812.ⲆⵠΔ[56];
      for (v2162 = 0; v2218.length > v2162; v2162++) {
        f410(v2218[v2162], 221);
      }
      v2163 = v2812.ⲆⵠΔ[0];
      v2162 = 0;
      for (; v2162 < v2163.length; v2162++) {
        if ((v2164 = v2163[v2162]).ᐃⲆΔⵠⲆⲆⵠ === 1 && (v2164.ⵠΔⵠⲆΔ < 180 || v2164.ⵠΔᐃⵠⵠ !== 227 && v2164.ⵠΔᐃⵠⵠ !== 228 && v2164.ⵠΔᐃⵠⵠ !== 91 && v2164.ⵠΔᐃⵠⵠ !== 229 && v2164.ⵠΔᐃⵠⵠ !== 230)) {
          v2164.ᐃⲆΔⲆΔᐃᐃ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(v2164.ᐃⲆΔⲆΔᐃᐃ, 100, 0.018);
          v2189 = 1 + Math.min(1, Math.max(v2164.ᐃⲆΔⲆΔᐃᐃ, 0) / 100) * 0.18;
          v439.save();
          v439.scale(v2189, v2189);
          v2813.ΔⲆΔ.x /= v2189;
          v2813.ΔⲆΔ.y /= v2189;
          v2164.x /= v2189;
          v2164.y /= v2189;
          v2164.r.x /= v2189;
          v2164.r.y /= v2189;
          v2164.ΔΔΔΔⲆⲆᐃ();
          v2164.ᐃᐃΔⵠ();
          v2813.ΔⲆΔ.x *= v2189;
          v2813.ΔⲆΔ.y *= v2189;
          v2164.x *= v2189;
          v2164.y *= v2189;
          v2164.r.x *= v2189;
          v2164.r.y *= v2189;
          v439.restore();
        }
      }
      var v2219 = v2812.ⲆⵠΔ[38];
      for (v2162 = 0; v2219.length > v2162; v2162++) {
        f410(v2219[v2162], 190);
        v2219[v2162].ⵠⵠΔᐃΔ(v2219[v2162].info);
      }
      var v2220 = v2812.ⲆⵠΔ[90];
      for (v2162 = 0; v2162 < v2220.length; v2162++) {
        f410(v2220[v2162], 245, 246);
      }
      var v2221 = v2812.ⲆⵠΔ[42];
      for (v2162 = 0; v2221.length > v2162; v2162++) {
        f410(v2221[v2162], 201);
      }
      v2163 = v2812.ⲆⵠΔ[0];
      v2162 = 0;
      for (; v2163.length > v2162; v2162++) {
        v2164 = v2163[v2162];
        if ((v2164.ⵠΔᐃⵠⵠ === 227 || v2164.ⵠΔᐃⵠⵠ === 228 || v2164.ⵠΔᐃⵠⵠ === 91 || v2164.ⵠΔᐃⵠⵠ === 229 || v2164.ⵠΔᐃⵠⵠ === 230) && v2164.ⵠΔⵠⲆΔ > 180) {
          v2164.ⵠⵠⲆⲆΔⲆⵠ = 1;
          v439.save();
          v2189 = 1 + Math.min(1, Math.max(v2164.ΔⲆᐃᐃⵠ - 30, 0) / 180) * 0.35;
          v439.scale(v2189, v2189);
          v2813.ΔⲆΔ.x /= v2189;
          v2813.ΔⲆΔ.y /= v2189;
          v2164.x /= v2189;
          v2164.y /= v2189;
          v2164.r.x /= v2189;
          v2164.r.y /= v2189;
          v2164.ΔΔΔΔⲆⲆᐃ();
          v2164.ᐃᐃΔⵠ();
          v2813.ΔⲆΔ.x *= v2189;
          v2813.ΔⲆΔ.y *= v2189;
          v2164.x *= v2189;
          v2164.y *= v2189;
          v2164.r.x *= v2189;
          v2164.r.y *= v2189;
          v439.restore();
        }
      }
      v2188 = v2812.ⲆⵠΔ[91];
      v2162 = 0;
      for (; v2162 < v2188.length; v2162++) {
        if (v2188[v2162].ⵠⵠⲆⲆΔⲆⵠ === 1) {
          f410(v2188[v2162]);
        }
      }
      v2206 = v2812.ⲆⵠΔ[64];
      v2162 = 0;
      for (; v2206.length > v2162; v2162++) {
        if (v2206[v2162].scale > 1) {
          f410(v2206[v2162], 449, 463);
        }
      }
      v2206 = v2812.ⲆⵠΔ[69];
      v2162 = 0;
      for (; v2206.length > v2162; v2162++) {
        if (v2206[v2162].scale > 1) {
          f410(v2206[v2162], 450, 464);
        }
      }
      var v2222 = v2812.ⲆⵠΔ[74];
      for (v2162 = 0; v2162 < v2222.length; v2162++) {
        f410(v2222[v2162], 235, 1107);
      }
      var v2223 = v2812.ⲆⵠΔ[75];
      for (v2162 = 0; v2223.length > v2162; v2162++) {
        f410(v2223[v2162], 238, 1128);
      }
      if ((v1965 += v3026 * 15) > 60) {
        v1965 -= 60;
      }
      f407(f391, vV2022, vV2023, vV2020, vV2021, 1041, "fo", 2);
      f407(f391, vV2022, vV2023, vV2020, vV2021, 244, "fod", 2);
    })();
    if (v2811.ⵠᐃΔⵠⵠ && v2812.mode !== 2 && v2812.mode !== 4 && v2812.mode !== 5) {
      (function () {
        var v2224 = v2813.ᐃⵠΔⵠⲆ;
        if (v2224.ᐃᐃᐃᐃᐃ === 0) {
          v2224.ⲆⲆΔⵠⵠ = Math.max(0, v2224.ⲆⲆΔⵠⵠ - v3026 / 10);
        } else {
          v2224.ⲆⲆΔⵠⵠ = Math.min(1, v2224.ⲆⲆΔⵠⵠ + v3026 / 10);
        }
        for (var v2225 = v2224.ΔΔΔΔⲆ, v2226 = 0; v2225.length > v2226; v2226++) {
          var v2227 = v2225[v2226];
          v2224.ⲆᐃⲆ(v2227);
          f400(471, v2227.id, v2813.ΔⲆΔ.x + v2227.x, v2813.ΔⲆΔ.y + v2227.y, v2227.alpha);
        }
        for (v2226 = 0; v2225.length > v2226; v2226++) {
          if ((v2227 = v2225[v2226]).ⵠΔΔⵠⲆ <= 0 || v2227.x > -v2813.ΔⲆΔ.x + v441 || v2227.x < -v2813.ΔⲆΔ.x - v2813.ΔⲆΔ.w / 2 || -v2813.ΔⲆΔ.y + v442 < v2227.y) {
            v2225.splice(v2226, 1);
          }
        }
        var v2228 = -v2813.ΔⲆΔ.y;
        if (v2812.ΔⵠⵠΔΔ > -1000) {
          v2224.add(v2228);
        }
      })();
      (function () {
        var v2229 = v2813.ᐃΔⲆᐃⲆ;
        if (v2229.ᐃᐃᐃᐃᐃ === 0) {
          v2229.ⲆⲆΔⵠⵠ = Math.max(0, v2229.ⲆⲆΔⵠⵠ - v3026 / 10);
        } else {
          v2229.ⲆⲆΔⵠⵠ = Math.min(1, v2229.ⲆⲆΔⵠⵠ + v3026 / 10);
        }
        for (var v2230 = v2229.ΔΔΔΔⲆ, v2231 = 0; v2230.length > v2231; v2231++) {
          var v2232 = v2230[v2231];
          v2229.ⲆᐃⲆ(v2232);
          f400(470, v2232.id, v2813.ΔⲆΔ.x + v2232.x, v2813.ΔⲆΔ.y + v2232.y, v2232.alpha);
        }
        for (v2231 = 0; v2231 < v2230.length; v2231++) {
          if ((v2232 = v2230[v2231]).ⵠΔΔⵠⲆ <= 0 || v2232.x > -v2813.ΔⲆΔ.x + v441 || v2232.x < -v2813.ΔⲆΔ.x || -v2813.ΔⲆΔ.y + v442 < v2232.y) {
            v2230.splice(v2231, 1);
          }
        }
        var v2233 = -v2813.ΔⲆΔ.y;
        if (v2812.ⲆΔⵠⲆΔ > -1000) {
          v2229.add(v2233);
        }
      })();
      (function () {
        var v2234 = v2813.ΔΔᐃᐃᐃΔⵠ;
        for (var v2235 = v2234.ΔΔΔΔⲆ, v2236 = 0; v2235.length > v2236; v2236++) {
          var v2237 = v2235[v2236];
          v2234.ⲆᐃⲆ(v2237);
          f400(942, v2237.id, v2813.ΔⲆΔ.x + v2237.x, v2813.ΔⲆΔ.y + v2237.y, v2237.alpha);
        }
        for (v2236 = 0; v2235.length > v2236; v2236++) {
          if ((v2237 = v2235[v2236]).ⵠΔΔⵠⲆ <= 0 || v2237.x > -v2813.ΔⲆΔ.x + v441 || v2237.x < -v2813.ΔⲆΔ.x || v2237.y > -v2813.ΔⲆΔ.y + v442) {
            v2235.splice(v2236, 1);
          }
        }
        var v2238 = -v2813.ΔⲆΔ.y;
        if (v2812.ⵠⲆⵠⲆⲆ > -1000) {
          v2234.add(v2238);
        }
      })();
    }
    if (v2812.transition && v2145) {
      v2812.transition = false;
      v2812.ⲆΔⲆΔ.ⲆⵠⲆ = 0;
      v2812.ⲆΔⲆΔ.ᐃΔⲆ = vVVV144;
    }
  }
  var v2239 = 1;
  var v2240 = 2;
  function f416(p1390, p1391, p1392, p1393, p1394) {
    var v2241 = {
      x: p1392,
      y: p1393,
      ⲆⲆΔᐃⲆ: p1392,
      ΔⵠΔΔⵠ: p1393
    };
    return {
      translate: v2241,
      ᐃᐃΔⵠ: function (p1395) {
        f293(p1395, p1390, v2241.x, v2241.y, p1390.width / 2, p1390.height / 2);
      },
      active: p1391,
      position: p1394
    };
  }
  function f417(p1396, p1397, p1398, p1399, p1400, p1401, p1402, p1403, p1404, p1405, p1406, p1407, p1408, p1409, p1410) {
    if (p1396.length === 0) {
      p1396 = " ";
    }
    if (vVVVVUndefined21 === p1402) {
      p1402 = 0;
    }
    if (p1403 === vVVVVUndefined20) {
      p1403 = 0;
    }
    if (p1404 === undefined) {
      p1404 = 0;
    }
    if (vVVVUndefined212 === p1409) {
      p1409 = 0;
    }
    var v2242 = document.createElement("canvas");
    var v2243 = v2242.getContext("2d");
    v2243.textBaseline = "middle";
    v2243.font = (p1410 !== vVUndefined21 ? p1410 + " " : "") + p1399 + "px " + p1397;
    p1400 = vVVUndefined20 !== p1400 ? Math.min(v2243.measureText(p1396).width, p1400) : v2243.measureText(p1396).width;
    v2242.width = p1400 + p1402;
    v2242.height = p1399 + p1403;
    if (vVUndefined21 !== p1401) {
      if (p1406 !== undefined) {
        v2243.globalAlpha = p1406;
      }
      v2243.fillStyle = p1401;
      if (p1407 !== undefined) {
        ⲆΔᐃΔⲆⵠΔΔⲆ(v2243, p1404 + 2, p1404, p1400 + p1402 - p1404 * 2 - 4, p1399 + p1403 - p1404 * 2, p1407);
        v2243.fill();
      } else {
        v2243.fillRect(p1404, p1404, p1400 + p1402 - p1404 * 2, p1399 + p1403 - p1404 * 2);
      }
      v2243.globalAlpha = 1;
      if (p1404 !== 0) {
        v2243.lineWidth = p1404;
        v2243.strokeStyle = p1405;
        v2243.stroke();
      }
    }
    v2243.textBaseline = "middle";
    v2243.font = (p1410 !== vUndefined ? p1410 + " " : "") + p1399 + "px " + p1397;
    if (p1408 !== undefined) {
      v2243.strokeStyle = p1408;
      v2243.lineWidth = p1409;
      v2243.lineJoin = "miter";
      v2243.miterLimit = 2;
      v2243.strokeText(p1396, Math.floor(p1402 / 2), Math.floor(p1403 / 2) + Math.floor(p1399 / 2), p1400);
    }
    v2243.fillStyle = p1398;
    v2243.fillText(p1396, Math.floor(p1402 / 2), Math.floor(p1403 / 2) + Math.floor(p1399 / 2), p1400);
    v2242.w2 = v2242.width / 2;
    v2242.ᐃΔᐃΔΔ = v2242.height / 2;
    return v2242;
  }
  function f418(p1411, p1412, p1413, p1414, p1415, p1416, p1417, p1418, p1419, p1420, p1421) {
    if (p1419 === vVVUndefined21) {
      p1419 = 0;
    }
    if (p1418 === undefined) {
      p1418 = 0;
    }
    if (p1420 === vVVVUndefined2022) {
      p1420 = 0;
    }
    if (p1421 === undefined) {
      p1421 = 1;
    }
    if (p1416 !== 1) {
      p1416 = 0;
    }
    if (p1414) {
      var vP1414 = p1414;
    }
    var v2244;
    var v2245 = {
      width: p1411,
      height: p1412,
      ⵠᐃ: vP1414,
      state: 0,
      translate: {
        x: p1418,
        y: p1419,
        ⲆⲆΔᐃⲆ: p1418,
        ΔⵠΔΔⵠ: p1419
      },
      ᐃΔΔΔᐃᐃⲆⵠⵠ: p1416,
      ΔᐃᐃⲆ: 0,
      callback: p1417,
      position: p1420,
      active: p1421
    };
    function f419() {
      return v2245.ⵠᐃ[0];
    }
    function f420(p1422) {
      var v2246 = v2245.translate;
      if (v2245.width === 0 || v2245.height === 0) {
        v2245.width = v2245.ⵠᐃ[0].width;
        v2245.height = v2245.ⵠᐃ[0].height;
      }
      return p1422.x > v2246.x && p1422.x < v2246.x + v2245.width / p1415 && p1422.y > v2246.y && p1422.y < v2246.y + v2245.height / p1415;
    }
    p1416 = function () {
      var v2247 = 0;
      if (v2245.ᐃΔΔΔᐃᐃⲆⵠⵠ === 1) {
        if (1 === 0 || v2240 === 0) {
          v2245.ΔᐃᐃⲆ = (0 + v3026 * 1000) % 1000;
        } else if (0 > 0) {
          v2245.ΔᐃᐃⲆ = 0 > 500 ? 0 + v3026 * 1000 : 0 - v3026 * 1000;
          if (0 > 0 || 0 > 1000) {
            v2245.ΔᐃᐃⲆ = 0;
          }
        }
        v2247 = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(500 < 0 ? 2 : 0) * 0.2;
      }
      return v2247;
    };
    if ((p1415 = p1415 === 3 ? 3 : p1415 === 1 ? 2 : 1) === 2) {
      v2244 = function (p1423) {
        var v2248 = 1 + p1416();
        var vF419 = f419();
        var v2249 = v2248 * v2245.width / 2;
        var v2250 = v2245.height * v2248 / 2;
        var v2251 = (v2249 - v2245.width / 2) / 2;
        var v2252 = (v2250 - v2245.height / 2) / 2;
        f293(p1423, vF419, v2245.translate.x - v2251, v2245.translate.y - v2252, v2249, v2250);
      };
    } else if (p1415 === 3) {
      v2244 = function (p1424) {
        var vF4192 = f419();
        var v2253 = v2245.width;
        var v2254 = v2245.height;
        var v2255 = (v2253 - v2245.width) / 2;
        var v2256 = (v2254 - v2245.height) / 2;
        f293(p1424, vF4192, v2245.translate.x - v2255, v2245.translate.y - v2256, v2253, v2254);
      };
      p1415 = 1;
    } else {
      v2244 = function (p1425) {
        f293(p1425, f419(), v2245.translate.x, v2245.translate.y);
      };
    }
    return {
      info: v2245,
      ⲆᐃΔⲆ: function (p1426, p1427, p1428) {
        if (f420(p1427)) {
          if (p1428 == v2239) {
            v2245.state = v2240;
          } else if (p1428 == 2 || p1428 == 0 && v2240 != 0) {
            v2245.state = 1;
          }
          return true;
        } else {
          v2245.state = 0;
          return false;
        }
      },
      ᐃᐃΔⵠ: v2244,
      ᐃⵠⵠⲆᐃⲆⲆ: f420
    };
  }
  function f421(p1429) {
    return vWindow.String.fromCharCode(p1429);
  }
  function f422(p1430, p1431) {
    var v2257 = p1430.getBoundingClientRect();
    return {
      x: p1431.clientX - v2257.left,
      y: p1431.clientY - v2257.top
    };
  }
  (function () {
    const v2258 = {
      ⵠΔⵠΔⲆᐃⵠ: 12097587,
      ⵠᐃⵠᐃⲆⲆⵠⵠⲆ: 7259080,
      ⵠᐃⲆΔⵠΔᐃᐃⵠ: 12971209,
      ᐃⵠⵠΔⵠⲆΔ: 14422172
    };
  })();
  var v2259 = "send";
  var v2260 = ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("id") === "1" ? 1 : 0;
  var v2261 = ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("password");
  var v2262 = ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("debug") || undefined;
  if (v2262 !== undefined) {
    v2262 = JSON.parse(vWindow.decodeURIComponent(v2262));
  }
  var v2263 = ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("server") || vVVVUndefined2022;
  var v2264 = ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("region") || undefined;
  var v2265 = "starve.io";
  var v2266 = "https://" + v2265;
  var v2267 = {
    ᐃᐃⲆⲆⵠⵠⲆ: 16,
    ⲆⲆΔⲆⲆᐃⵠ: 32,
    IDLE: 64,
    Δⵠᐃⵠ: 2,
    ᐃⲆⲆᐃᐃᐃⵠ: 128,
    ⵠⵠⵠΔⲆⵠΔⵠⵠ: 1,
    ⲆΔᐃⲆᐃⲆΔ: 256,
    ⲆᐃⲆΔΔ: 4,
    ΔΔᐃⵠⵠⵠⲆ: 8
  };
  var v2268 = [{
    ⲆⵠᐃΔΔ: 1000,
    items: [[2, 113], [1, 117], [8, 110], [1, 143]]
  }, {
    ⲆⵠᐃΔΔ: 2000,
    items: [[2, 118], [1, 8], [2, 117], [16, 110], [2, 143]]
  }, {
    ⲆⵠᐃΔΔ: 4000,
    items: [[3, 118], [1, 1], [4, 117], [20, 110], [4, 143], [1, 114], [80, 108], [140, 109]]
  }, {
    ⲆⵠᐃΔΔ: 8000,
    items: [[1, 29], [4, 118], [1, 3], [6, 117], [30, 110], [6, 143], [1, 114], [150, 108], [200, 109], [60, 111], [2, 127]]
  }, {
    ⲆⵠᐃΔΔ: 16000,
    items: [[1, 29], [1, 4], [1, 198], [7, 136], [2, 127], [2, 118], [1, 119], [15, 163], [2, 171], [1, 159], [1, 55], [200, 108], [300, 109]]
  }, {
    ⲆⵠᐃΔΔ: 16000,
    items: [[1, 29], [1, 11], [1, 50], [1, 3], [10, 136], [4, 127], [6, 118], [3, 195], [1, 28], [200, 108], [300, 109]]
  }, {
    ⲆⵠᐃΔΔ: 16000,
    items: [[1, 29], [1, 83], [1, 36], [3, 195], [1, 0], [1, 3], [7, 136], [2, 127], [4, 118], [150, 108], [200, 109], [1, 158]]
  }, {
    ⲆⵠᐃΔΔ: 16000,
    items: [[1, 29], [1, 84], [1, 3], [7, 136], [2, 127], [4, 118], [2, 135], [4, 144], [10, 141], [6, 132], [4, 115], [1, 49], [500, 109]]
  }, {
    ⲆⵠᐃΔΔ: 16000,
    items: [[1, 29], [1, 3], [16, 138], [1, 127], [6, 118], [3, 195], [1, 48], [1, 0], [16, 125], [150, 108], [200, 109]]
  }, {
    ⲆⵠᐃΔΔ: 20000,
    items: [[1, 29], [1, 3], [1, 136], [1, 127], [3, 118], [3, 195], [1, 26], [1, 5], [1, 15], [2, 169], [50, 108], [100, 109]]
  }];
  let v2269 = 0;
  const v2270 = [];
  var v2271 = {
    ⵠΔⵠΔΔⲆᐃᐃⲆ: 125000,
    ᐃΔΔⵠᐃᐃΔ: 4,
    ⲆᐃⵠΔⲆⵠⲆ: 0,
    ᐃΔΔⲆᐃᐃΔ: 3,
    ⲆⵠΔᐃⵠᐃᐃⲆΔ: "[21]",
    ᐃΔⲆΔΔΔᐃΔΔ: 200,
    ΔⵠᐃⲆΔΔᐃⲆΔ: 2000,
    ΔⵠⲆΔᐃᐃΔ: 52,
    ⲆᐃΔᐃᐃΔᐃ: 4,
    ᐃΔΔᐃᐃᐃΔΔⲆ: 5,
    ⵠΔᐃᐃᐃᐃᐃⵠᐃ: 14,
    ᐃⵠΔΔᐃᐃⵠⲆⲆ: 0.58,
    ⲆᐃⵠᐃᐃᐃⲆⲆᐃ: 20,
    ⲆⵠΔᐃᐃⲆⲆⵠⲆ: 8000,
    ⵠᐃⵠⵠⵠΔⲆⵠⵠ: 5,
    ⵠΔᐃΔⵠⲆⵠ: 1,
    ⵠⵠᐃΔΔⵠⵠ: 600000,
    ᐃⵠⲆⲆΔᐃᐃⲆᐃ: 3,
    ΔΔⲆⵠⲆΔᐃ: 0.2,
    ⵠΔᐃᐃᐃⲆΔΔⲆ: 5,
    ᐃⵠᐃⵠⵠⲆΔ: 2,
    ΔᐃⲆⲆⲆᐃΔᐃᐃ: 14,
    ᐃΔᐃᐃⵠⲆⵠΔΔ: 60000,
    ᐃᐃⲆⲆⵠⵠⲆ: 0.2,
    ⵠⵠⵠⵠᐃⵠⲆΔΔ: 50
  };
  var v2272 = {
    ᐃᐃᐃ: 480000,
    ⵠⲆᐃᐃΔⲆᐃ: 10,
    ⲆⲆΔⵠᐃⵠᐃ: 16,
    ᐃΔΔⵠΔⲆⵠⵠⵠ: 6,
    ΔᐃⵠⵠⲆⲆⲆ: 60,
    ᐃᐃⵠⲆᐃ: 1,
    ⲆΔᐃᐃⲆ: 2,
    ᐃᐃᐃⲆⵠ: 4,
    ⵠᐃᐃⲆⵠ: 8,
    ΔΔⲆⵠⲆΔᐃ: 10,
    ᐃᐃᐃⵠᐃⲆⵠ: 100,
    ⲆΔⲆΔΔΔⵠ: 100,
    ⵠⲆⲆΔΔⵠⲆ: 100,
    ΔᐃᐃΔΔⲆᐃⵠᐃ: 100,
    ⲆᐃⵠᐃⲆᐃⵠ: 100,
    ΔᐃⲆⵠⲆⲆΔ: 100,
    ΔⲆΔᐃΔᐃⲆΔⲆ: 100,
    ΔᐃⲆⵠⲆⲆΔ: 100,
    ΔΔⲆΔⵠΔΔ: 100,
    ⵠⲆᐃᐃᐃⲆᐃ: 100,
    ᐃᐃᐃⵠⵠ: 0,
    ΔᐃᐃⵠᐃⵠⲆ: 1,
    ⵠⵠⲆΔΔ: 2,
    ᐃⲆᐃᐃⵠ: 3,
    ΔⵠⵠⵠΔ: 4,
    ⲆΔⲆⲆΔⲆΔ: 5,
    ᐃᐃⲆⲆⲆ: 6,
    ΔⵠⵠⲆΔ: 7,
    ᐃᐃᐃⲆⲆⵠΔⵠΔ: {
      sydney: "Sydney",
      losangeles: "Los Angeles",
      atlanta: "Atlanta",
      osaka: "Osaka",
      frankfurt: "Frankfurt"
    },
    ⲆⲆⲆⲆᐃΔᐃ: {
      0: "normal",
      2: "zombies",
      3: "vampires",
      4: "forest",
      6: "community",
      7: "experimental"
    },
    ΔΔΔⵠᐃᐃᐃ: 0,
    ⲆΔⲆⵠΔⲆⲆ: 0,
    ᐃΔᐃⲆⲆⵠΔ: 30,
    ⲆⲆᐃⵠΔᐃⲆⵠⵠ: 2,
    ΔᐃⵠⵠⲆⲆⲆ: 60000,
    ᐃΔᐃΔⵠΔⵠⲆᐃ: 0,
    ΔΔΔᐃⵠⵠΔᐃⵠ: 0,
    ᐃⵠΔⵠΔⵠⵠΔⵠ: 50,
    ᐃᐃⲆⲆΔⲆᐃΔⵠ: 0,
    ⲆⵠᐃᐃⲆᐃⲆⲆᐃ: 40,
    ⵠᐃᐃᐃⲆΔⵠΔⲆ: 39,
    ᐃⵠᐃΔⲆⵠΔⵠΔ: 830,
    ᐃΔⵠⲆΔⲆⲆ: 25,
    ΔᐃⲆⵠⵠⵠᐃ: 8,
    ⵠⲆΔᐃⲆ: 0,
    ⲆΔᐃⲆᐃ: 0,
    ⵠⲆⵠᐃΔⲆⵠ: 200,
    ΔᐃΔΔᐃⲆⲆ: 0,
    ⲆⲆⲆⵠΔ: 250,
    ⵠᐃⵠⲆΔⵠⲆ: 150,
    ⵠⵠⲆⵠᐃⵠᐃ: 0,
    ⲆᐃΔⵠⵠ: 350,
    ᐃᐃΔⵠⲆᐃⲆ: 100,
    ᐃᐃΔᐃⵠⲆⵠ: 700,
    ⲆᐃᐃⲆⵠ: 39879
  };
  var v2273 = [];
  for (v782 = 0; v782 < 500; v782++) {
    v2273[v782] = 0;
  }
  v2273[47] = 1;
  v2273[57] = 1;
  v2273[0] = 1;
  v2273[5] = 1;
  v2273[6] = 1;
  v2273[30] = 1;
  function f423(p1432) {
    if (p1432 > 0) {
      return p1432 * p1432;
    } else {
      return p1432;
    }
  }
  function f424(p1433) {
    return vWindow.String.fromCharCode(p1433);
  }
  v2273[19] = 1;
  v2273[9] = 1;
  v2273[62] = 1;
  v2273[63] = 1;
  v2273[13] = 1;
  v2273[14] = 1;
  v2273[15] = 1;
  v2273[33] = 1;
  v2273[34] = 1;
  v2273[16] = 1;
  v2273[17] = 1;
  v2273[12] = 1;
  v2273[18] = 1;
  var v2274 = [{
    time: 2880000
  }, {
    time: 1440000
  }, {
    time: 1920000
  }, {
    time: 1440000
  }, {
    time: 2880000
  }, {
    time: 2400000
  }, {
    time: 2400000
  }, {
    time: 4800000
  }, {
    time: 2880000
  }, {
    time: 3360000
  }, {
    time: 2880000
  }, {
    time: 3840000
  }, {
    time: 3360000
  }];
  var v2275 = {
    ᐃⵠⵠΔΔ: 16,
    ⵠⵠⵠⲆⵠ: 91,
    ⵠⵠΔΔⲆ: 22,
    ΔⵠΔⲆΔ: 21,
    ⲆⵠᐃⵠΔ: 42,
    ΔΔⵠⵠⵠ: 20,
    ᐃᐃⲆΔᐃ: 10,
    ⵠΔΔΔⲆ: 34,
    ΔⲆΔⵠⵠ: 67,
    ⲆⵠᐃⲆᐃ: 69,
    ⵠⲆΔᐃΔ: 29,
    Δᐃᐃᐃⵠ: 78,
    ΔΔⲆᐃΔ: 81,
    ⲆΔΔⲆΔ: 48,
    ⲆᐃΔⲆⲆ: 18,
    ⵠᐃΔΔⲆ: 63,
    ᐃᐃΔⵠⵠ: 37,
    ⲆⲆΔᐃᐃ: 86,
    ⵠⲆΔΔΔ: 47,
    ⲆᐃᐃΔⵠ: 14,
    ⵠⲆⵠⵠⵠ: 9,
    ᐃⲆΔΔᐃ: 79,
    ᐃᐃΔⲆΔ: 73,
    ΔⵠᐃⲆⲆ: 25,
    ᐃⲆΔⲆΔ: 41,
    ⲆᐃⵠᐃΔ: 100,
    ᐃⲆⵠᐃⲆ: 71,
    ⲆⲆⵠⲆΔ: 7,
    ᐃᐃⲆⵠⲆ: 32,
    ⵠΔⵠⵠΔ: 6,
    ⲆᐃΔⵠᐃ: 87,
    ⵠΔⲆⵠΔ: 17,
    ᐃⲆⲆᐃⵠ: 36,
    ⵠᐃΔⲆᐃ: 5,
    ⵠⵠⵠⵠⵠⵠᐃ: 82,
    ΔΔⵠⵠᐃ: 15,
    ⲆΔᐃⵠⵠ: 39,
    ⲆᐃΔΔⵠ: 49,
    ⲆᐃΔᐃᐃ: 75,
    ᐃⲆⲆⵠΔ: 88,
    ⵠⵠᐃⵠΔ: 24,
    ⲆΔⵠⲆᐃ: 80,
    ⵠⲆⲆⲆΔ: 61,
    ⲆᐃᐃⲆⵠ: 3,
    ⵠⲆⵠᐃ: 0,
    ⵠᐃᐃΔⲆ: 44,
    ΔΔⲆⲆⵠ: 2,
    ᐃⲆΔⵠⲆ: 26,
    ΔᐃⲆΔⲆ: 4,
    ⲆⲆᐃⵠⲆ: 1,
    ΔⵠᐃᐃⲆ: 19,
    ΔⵠᐃΔᐃ: 40,
    ⲆⵠⵠΔⲆᐃᐃ: 84,
    ⲆⲆᐃΔΔ: 60,
    ᐃΔᐃᐃⵠ: 31,
    ΔΔⵠΔⵠⵠΔ: 83,
    ΔⵠᐃⲆᐃ: 12,
    ᐃΔᐃΔⲆ: 28,
    ⵠΔΔΔᐃ: 30,
    ΔᐃⲆΔᐃ: 74,
    ΔᐃΔΔᐃ: 90,
    ⵠⵠⵠΔⲆ: 23,
    ᐃΔΔⲆᐃ: 53,
    ᐃⵠⵠⲆⵠ: 45,
    ᐃⲆᐃᐃΔ: 51,
    ⵠΔⵠᐃᐃ: 62,
    ⵠᐃⵠΔⵠ: 70,
    ⲆΔΔⵠΔᐃΔ: 76,
    ⵠⲆΔᐃᐃ: 65,
    ⵠΔⵠⲆⲆ: 43,
    ⲆⵠᐃΔᐃ: 64,
    ᐃΔΔⲆⲆⵠᐃ: 89,
    ᐃᐃⲆⵠΔ: 52,
    ⵠᐃⵠΔⲆ: 11,
    ⲆⲆᐃⵠᐃ: 27,
    ΔⵠⲆⵠⲆ: 33,
    ΔⲆⵠᐃⵠ: 56,
    ⲆⵠΔⲆⵠ: 46,
    ⲆᐃⵠⲆⲆ: 54,
    ΔⲆⵠⲆⵠ: 50,
    ⲆⵠΔΔᐃ: 72,
    ⲆⵠΔⵠⵠ: 35,
    ΔΔᐃⲆᐃ: 13,
    ΔᐃⵠΔᐃ: 68,
    ΔⲆⲆᐃΔ: 38,
    ⲆⵠⲆᐃⲆ: 66,
    ΔΔΔⲆⲆ: 8,
    ⵠΔᐃⲆᐃ: 77,
    ⲆᐃⲆⵠᐃΔΔ: 85,
    ᐃⲆᐃⵠᐃ: 55
  };
  var v2276 = [[24, 108], [25, 111], [26, 112], [27, 121], [28, 202]];
  function f425(p1434, p1435, p1436, p1437, p1438, p1439, p1440, p1441, p1442, p1443) {
    this.type = p1434;
    this.ⵠⵠⵠᐃ = p1435;
    this.id = p1436;
    this.x = p1437;
    this.y = p1438;
    this.angle = p1439;
    this.ᐃⵠΔΔⵠⲆⲆ = p1439;
    this.action = p1440;
    this.info = p1441;
    this.ⵠΔⲆⲆᐃ = p1443;
    this.r = {
      x: p1437,
      y: p1438
    };
    this.ⵠΔⵠⲆΔ = p1442;
    if (v2812) {
      this.ᐃⲆΔⵠ = p1435 * v2812.ᐃⵠⲆⵠΔΔⲆ + p1436;
    }
    switch (p1434) {
      case 0:
        this.ⲆⲆⲆⵠ = v2812.ΔⵠΔⵠ[this.ⵠⵠⵠᐃ];
        this.ⲆᐃⵠⲆ = this.ⲆⲆⲆⵠ.ⲆᐃⵠⲆ;
        this.ΔΔⲆΔᐃⵠⵠ = this.ⲆⲆⲆⵠ.ΔΔⲆΔᐃⵠⵠ;
        this.ⵠᐃΔⵠᐃ = this.ⲆⲆⲆⵠ.ⵠᐃΔⵠᐃ;
        this.ⵠΔΔⵠΔ = this.ⲆⲆⲆⵠ.ⵠΔΔⵠΔ;
        this.ⲆⲆᐃΔⵠᐃΔ = -1000000;
        this.ⵠⲆⵠⲆⲆ = -1000000;
        this.ⲆΔⵠⲆΔ = -1000000;
        this.ΔⵠⵠΔΔ = -1000000;
        this.ⵠᐃⵠΔΔΔΔ = -1000000;
        this.ⲆᐃᐃΔⲆⲆⲆ = -1000000;
        this.ΔⵠⵠᐃΔ = -1000000;
        this.ⵠΔᐃᐃⲆ = v2812.mode === 2 && this.ⲆᐃⵠⲆ === 0;
        this.ᐃⵠΔᐃⵠⲆⵠ = v2812.mode === 3 && this.ⲆᐃⵠⲆ === 0 && vV16;
        this.ⲆⲆⵠΔⵠΔΔ = !!this.ⵠΔᐃᐃⲆ && this.ⲆⲆⲆⵠ.ⵠᐃΔⵠΔ === "  " && vVVV162;
        this.ᐃⲆᐃⵠΔ = [];
        this.ᐃⲆΔⵠⲆⲆⵠ = 0;
        this.ᐃⵠᐃᐃ = true;
        this.ⵠⵠΔᐃᐃΔᐃ = 0;
        this.ⵠⵠⲆⲆΔⲆⵠ = 0;
        this.ΔΔⵠᐃⵠ = [];
        this.r = {
          x: p1437,
          y: p1438
        };
        this.ᐃᐃΔⵠ = f385;
        this.ΔΔΔΔⲆⲆᐃ = f383;
        this.ΔⲆΔΔⵠ = 0;
        this.ᐃⵠⲆᐃᐃ = 0;
        this.ΔⵠⲆΔⵠ = 0;
        this.ΔⲆᐃᐃΔΔⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ΔⲆᐃᐃⵠ = 0;
        this.ᐃⲆΔⲆΔᐃᐃ = 0;
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV143, 0.6, 0.6, 0, 5, 3);
        this.Δⵠⵠᐃⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV142, 0.6, 0.6, 0, 5, 3);
        this.freeze = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        this.ⲆΔⵠᐃⲆᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV142, 0.6, 0.6, 0, 5, 3);
        this.ᐃⵠⲆⲆΔΔⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(true, 0, 2.25, -1.5, 3.75, 7.5);
        this.ⲆⵠⲆⵠΔⵠⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1622, 0, 7.5, -3, 22.5, 33.75);
        this.attack = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 0, -Math.PI / 3, 6, 9);
        this.ⵠⲆⵠⲆⲆⵠⲆΔᐃ = 0;
        this.ΔⲆⵠⲆⵠⵠⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV14, 0.6, 0.6, 0, 1, 3);
        this.ΔᐃⲆΔⵠⲆⲆ = this.ⲆⲆⵠΔⵠΔΔ ? new ᐃⵠⵠ.ⲆΔⵠᐃ(true, 0, 2.25, -1.5, 2.75, 5.5) : 0;
        this.ⵠⵠⲆᐃⵠⲆᐃ = 0;
        this.ⵠⲆᐃᐃΔᐃⵠ = 0;
        this.ΔᐃⲆⵠΔᐃΔ = [];
        this.ΔⲆΔⵠⵠᐃΔ = [];
        this.text = [];
        this.label = [];
        this.ΔⲆΔΔⲆⵠᐃ = f389;
        this.ⲆⲆΔΔⲆ = true;
        this.right = -1;
        this.ⵠΔᐃⵠⵠ = -1;
        this.action = 64;
        this.ᐃⲆᐃⲆΔΔᐃ = vVVV144;
        this.Ⲇⵠⵠᐃⵠ = 0;
        this.ΔⵠᐃⵠⲆ = false;
        this.bubbles = [];
        this.ΔΔⲆⵠⲆ = 0;
        this.ᐃᐃⵠⵠⵠ = -1;
        this.ⲆᐃⲆ = function (p1444) {
          if (this.info & 32768) {
            this.ᐃⲆᐃⲆΔΔᐃ = v16;
            this.info = this.info & -32769;
          } else {
            this.ᐃⲆᐃⲆΔΔᐃ = false;
          }
          if (this.info & 16384) {
            this.info = this.info & -16385;
            this.ΔΔⲆⵠⲆ = 1;
          } else {
            this.ΔΔⲆⵠⲆ = 0;
          }
          this.Ⲇⵠⵠᐃⵠ = Math.floor(this.info / 128);
          this.info -= this.Ⲇⵠⵠᐃⵠ * 128;
          if (this.info === 7 || this.ⲆⲆⵠΔⵠΔΔ) {
            this.right = -1;
          } else {
            this.right = this.info;
          }
          this.ᐃⲆΔⵠⲆⲆⵠ = v2812.ⲆⵠᐃᐃⵠΔⵠⲆΔ(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100));
          this.ⵠΔᐃⵠⵠ = this.ⵠΔⲆⲆᐃ & 255;
          if (this.right === 2) {
            this.ΔⵠᐃⵠⲆ = vV162;
          } else {
            this.ΔⵠᐃⵠⲆ = false;
          }
          if (v2273[this.right]) {
            this.ⵠᐃⲆΔᐃ = vVVVV163;
          } else {
            this.ⵠᐃⲆΔᐃ = vVV143;
          }
          if (p1444 & 256) {
            this.ΔⲆⵠⲆⵠⵠⵠ.ᐃΔⲆ = vVVV1423;
            this.ΔⲆⵠⲆⵠⵠⵠ.ⲆⵠⲆ = 0.6;
          } else if (p1444 & 4) {
            this.freeze.ᐃΔⲆ = vVVV1422;
            this.freeze.ⲆⵠⲆ = 0.6;
          } else if (p1444 & 128) {
            this.Δⵠⵠᐃⵠ.ᐃΔⲆ = false;
            this.Δⵠⵠᐃⵠ.ⲆⵠⲆ = 0.6;
          }
          if (p1444 & 8) {
            this.ⲆΔⵠᐃⲆᐃⲆ.ᐃΔⲆ = vV14;
            this.ⲆΔⵠᐃⲆᐃⲆ.ⲆⵠⲆ = 0.6;
          }
          if (p1444 & 2) {
            this.ᐃⵠΔ.ᐃΔⲆ = false;
            this.ᐃⵠΔ.ⲆⵠⲆ = 0.6;
          }
          if (p1444 & 16) {
            this.ⵠⲆⵠⲆⲆⵠⲆΔᐃ = 0.58;
            if (v2992.ⵠᐃᐃⲆᐃ && this.ᐃᐃⵠⵠⵠ !== -1) {
              v2992.ΔⵠΔⵠ[this.ᐃᐃⵠⵠⵠ].ΔⲆᐃⲆΔᐃⲆΔⲆ(v2777[this.right]);
            }
          }
        };
        this.ⲆᐃⲆ();
        break;
      case 23:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        this.ΔΔⲆᐃⵠ = f369;
        this.ⲆᐃⲆᐃⵠ = f345;
        this.ΔⲆᐃⲆⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV144, 1, 1.23, 1.18, 0.01, 0.01);
        this.ΔⵠⲆⵠΔᐃⵠ = 0;
        this.ⵠΔᐃΔⵠΔᐃ = 0;
        this.ⵠⵠΔᐃΔ = f327;
        break;
      case 22:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV14, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        this.ΔΔⲆᐃⵠ = f334;
        this.ⲆᐃⲆᐃⵠ = f358;
        this.ΔⲆᐃⲆⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1.23, 1.18, 0.01, 0.01);
        this.ΔⵠⲆⵠΔᐃⵠ = 0;
        this.ⵠΔᐃΔⵠΔᐃ = 0;
        break;
      case 1:
      case 6:
        this.ΔΔⲆᐃⵠ = f380;
        this.ⲆᐃⲆᐃⵠ = f366;
        this.ᐃΔⲆⲆΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1.03, 0.98, 0.3, 0.3);
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV14, 1, 1.23, 1.18, 0.01, 0.01);
        this.ΔⲆᐃⲆⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1.23, 1.18, 0.01, 0.01);
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 43:
        this.ΔΔⲆᐃⵠ = f368;
        this.ⲆᐃⲆᐃⵠ = f370;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV142, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVV143,
          angle: 0
        };
        this.ⵠⵠⲆⵠ = [];
        for (var v2277 = 0; v2277 < 3; v2277++) {
          this.ⵠⵠⲆⵠ.push({
            ᐃᐃΔⵠ: f377,
            ΔᐃᐃⲆ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ⵠⵠⲆⵠ[0].x = this.x - 16.5;
        this.ⵠⵠⲆⵠ[0].y = this.y - 15.5;
        this.ⵠⵠⲆⵠ[0].angle = this.angle;
        this.ⵠⵠⲆⵠ[1].x = this.x + 36;
        this.ⵠⵠⲆⵠ[1].y = this.y + 17;
        this.ⵠⵠⲆⵠ[1].angle = this.angle;
        this.ⵠⵠⲆⵠ[2].x = this.x - 18.5;
        this.ⵠⵠⲆⵠ[2].y = this.y + 39;
        this.ⵠⵠⲆⵠ[2].angle = this.angle;
        break;
      case 3:
        this.ΔΔⲆᐃⵠ = f356;
        this.ⲆᐃⲆᐃⵠ = f379;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV14, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vV14,
          angle: 0
        };
        this.ⵠⵠⲆⵠ = [];
        for (v2277 = 0; v2277 < 3; v2277++) {
          this.ⵠⵠⲆⵠ.push({
            ᐃᐃΔⵠ: f355,
            ΔᐃᐃⲆ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV1422, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ⵠⵠⲆⵠ[0].x = this.x - 16.5;
        this.ⵠⵠⲆⵠ[0].y = this.y - 15.5;
        this.ⵠⵠⲆⵠ[1].x = this.x - 5.5;
        this.ⵠⵠⲆⵠ[1].y = this.y + 7.5;
        this.ⵠⵠⲆⵠ[2].x = this.x + 18;
        this.ⵠⵠⲆⵠ[2].y = this.y - 5;
        break;
      case 77:
        this.ᐃᐃΔⵠ = f365;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1422, 0.6, 0.6, 0, 5, 3);
        break;
      case 70:
        this.ᐃᐃΔⵠ = f372;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV143, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 0.6, 0.6, 0, 5, 3);
        break;
      case 71:
        this.ᐃᐃΔⵠ = f344;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔᐃⵠΔΔⵠᐃ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠⵠΔⲆⵠⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        this.Δⵠⵠᐃⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV144, 0.6, 0.6, 0, 5, 3);
        break;
      case 67:
        this.ᐃᐃΔⵠ = f364;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ΔᐃⵠΔΔⵠᐃ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠⵠΔⲆⵠⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(v14, 0.6, 0.6, 0, 5, 3);
        this.Δⵠⵠᐃⵠ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV143, 0.6, 0.6, 0, 5, 3);
        break;
      case 68:
        this.ᐃᐃΔⵠ = f367;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 90:
        this.ᐃᐃΔⵠ = f363;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.5, 0.5);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 91:
        this.ⵠⲆⲆⵠᐃ = this.info & 15;
        this.ⵠⵠⲆⲆΔⲆⵠ = this.ⵠΔⲆⲆᐃ & 1;
        this.ⵠΔⲆⲆⲆΔᐃ = 0;
        this.x = this.info;
        this.y = this.ⵠΔⲆⲆᐃ;
        this.ᐃᐃΔⵠ = f375;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV142, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.6, 0.6);
        break;
      case 80:
      case 60:
      case 61:
      case 62:
      case 63:
      case 78:
      case 65:
      case 66:
      case 88:
        this.ᐃᐃΔⵠ = f363;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 0.6, 0.6, 0, 5, 3);
        break;
      case 36:
        this.ᐃᐃΔⵠ = f371;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vV14,
          angle: 0
        };
        break;
      case 34:
        this.ⲆᐃⲆᐃⵠ = f331;
        this.ᐃᐃΔⵠ = f360;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV142, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        this.up = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV143, 1, 1.03, 0.98, 0.1, 0.1);
        this.ᐃⵠⵠⲆⲆ = [];
        break;
      case 87:
        this.angle = Math.PI * Math.random() / 2;
      case 86:
      case 82:
        this.ᐃᐃΔⵠ = f378;
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 81:
        this.ᐃᐃΔⵠ = f361;
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV14, 0.6, 0.6, 0, 5, 3);
        break;
      case 69:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f333;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 76:
        this.ⵠᐃⲆⵠⵠ = 0;
        this.ⲆΔᐃΔ = [];
        this.ΔⲆΔΔⵠΔΔ = 0;
        this.ΔⲆΔᐃⲆⲆⵠ = f340;
        this.ᐃᐃΔⵠ = f357;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(v14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV142, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 75:
        this.x = this.info;
        this.y = this.ⵠΔⲆⲆᐃ;
        this.scale = 1;
        this.ⵠⵠᐃⲆ = 0;
        this.ᐃᐃΔⵠ = f351;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV142, 0.6, 0.6, 0, 5, 3);
        break;
      case 74:
        this.x = this.info;
        this.y = this.ⵠΔⲆⲆᐃ;
        this.scale = 1;
        this.ⵠⵠᐃⲆ = 0;
        this.ᐃᐃΔⵠ = f374;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1432, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 73:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f362;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV142, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV14, 0.6, 0.6, 0, 5, 3);
        break;
      case 72:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f337;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1422, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 64:
        this.scale = 1;
        this.ᐃᐃΔⵠ = f348;
        this.ΔᐃᐃⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV14, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⵠΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV14, 0.6, 0.6, 0, 5, 3);
        break;
      case 100:
        this.ⵠⵠⲆⵠ = [];
        for (v2277 = 0; v2277 < 5; v2277++) {
          this.ⵠⵠⲆⵠ.push({
            ᐃᐃΔⵠ: f355,
            ΔᐃᐃⲆ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        switch (this.id % 3) {
          case 0:
            this.ⵠⵠⲆⵠ[0].x = this.x - 20.5;
            this.ⵠⵠⲆⵠ[0].y = this.y - 22.5;
            this.ⵠⵠⲆⵠ[1].x = this.x - 35.5;
            this.ⵠⵠⲆⵠ[1].y = this.y + 7.5;
            this.ⵠⵠⲆⵠ[2].x = this.x + 7.5;
            this.ⵠⵠⲆⵠ[2].y = this.y - 30;
            this.ⵠⵠⲆⵠ[3].x = this.x + 22.5;
            this.ⵠⵠⲆⵠ[3].y = this.y;
            this.ⵠⵠⲆⵠ[4].x = this.x - 7.5;
            this.ⵠⵠⲆⵠ[4].y = this.y + 14.5;
            break;
          case 1:
            this.ⵠⵠⲆⵠ[0].x = this.x - 30.5;
            this.ⵠⵠⲆⵠ[0].y = this.y - 22.5;
            this.ⵠⵠⲆⵠ[1].x = this.x - 15.5;
            this.ⵠⵠⲆⵠ[1].y = this.y + 7.5;
            this.ⵠⵠⲆⵠ[2].x = this.x + 15.5;
            this.ⵠⵠⲆⵠ[2].y = this.y - 30;
            this.ⵠⵠⲆⵠ[3].x = this.x + 12.5;
            this.ⵠⵠⲆⵠ[3].y = this.y + 5;
            this.ⵠⵠⲆⵠ[4].x = this.x - 40.5;
            this.ⵠⵠⲆⵠ[4].y = this.y + 14.5;
            break;
          case 2:
            this.ⵠⵠⲆⵠ[0].x = this.x - 20.5;
            this.ⵠⵠⲆⵠ[0].y = this.y - 20.5;
            this.ⵠⵠⲆⵠ[1].x = this.x - 35.5;
            this.ⵠⵠⲆⵠ[1].y = this.y + 15.5;
            this.ⵠⵠⲆⵠ[2].x = this.x + 7.5;
            this.ⵠⵠⲆⵠ[2].y = this.y - 17;
            this.ⵠⵠⲆⵠ[3].x = this.x + 22.5;
            this.ⵠⵠⲆⵠ[3].y = this.y + 5;
            this.ⵠⵠⲆⵠ[4].x = this.x - 7.5;
            this.ⵠⵠⲆⵠ[4].y = this.y + 1.5;
        }
        break;
      case 31:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f346;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ⲆᐃⲆᐃᐃᐃᐃ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV1422, 0, Math.PI / 30, -Math.PI / 30, 0.06, 0.06);
        break;
      case 40:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVVVVV14,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f350;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 39:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVV143,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f349;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 44:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vV142, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVVVV1422,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f339;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV1422, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 55:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVVVV14,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f342;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 54:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f381;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 37:
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1422, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVV14,
          angle: 0
        };
        this.ᐃᐃΔⵠ = f376;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 24:
        this.ᐃᐃΔⵠ = f353;
        this.rotate = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV14, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 25:
        this.ᐃᐃΔⵠ = f352;
        this.rotate = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1432, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 26:
        this.ᐃᐃΔⵠ = f373;
        this.rotate = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV142, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 27:
        this.ᐃᐃΔⵠ = f343;
        this.rotate = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 28:
        this.ᐃᐃΔⵠ = f354;
        this.rotate = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV144, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 32:
        this.ΔΔⲆᐃⵠ = f359;
        this.ⲆᐃⲆᐃⵠ = f330;
        this.rotate = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV1422, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 38:
        this.ᐃᐃΔⵠ = f325;
        this.ⲆΔⲆ = Math.floor(this.x / 100);
        this.ᐃⲆ = Math.floor(this.y / 100);
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVVVV1422,
          angle: 0
        };
        this.opacity = 1;
        this.ⵠⵠΔᐃΔ = f318;
        break;
      case 42:
        this.ᐃᐃΔⵠ = f329;
        this.ΔⲆᐃⲆⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV14, 1, 1.15, 1, 0.3, 0.3);
        this.color = 0;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVV142,
          angle: 0
        };
        break;
      case 33:
      case 2:
      case 56:
      case 35:
      case 29:
        this.ᐃᐃΔⵠ = f326;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV143, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        break;
      case 30:
        this.ᐃᐃΔⵠ = f326;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVVVVV14,
          angle: 0
        };
        this.ⵠⵠΔᐃΔ = f318;
        break;
      case 4:
      case 7:
      case 8:
      case 9:
      case 19:
      case 50:
      case 5:
      case 12:
      case 13:
      case 14:
      case 20:
      case 52:
        this.ᐃᐃΔⵠ = f326;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV14, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vV143,
          angle: 0
        };
        this.ⵠⵠΔᐃΔ = f327;
        break;
      case 41:
        this.ᐃᐃΔⵠ = f328;
        this.opacity = 1;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        var v2278 = this.angle % (Math.PI / 2);
        if (Math.PI / 4 > v2278) {
          this.angle -= v2278;
        } else {
          this.angle += Math.PI / 2 - v2278;
        }
        break;
      case 79:
        this.ᐃᐃΔⵠ = f316;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 89:
        this.ᐃᐃΔⵠ = f310;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 83:
        this.ᐃᐃΔⵠ = f313;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 84:
        this.ᐃᐃΔⵠ = f314;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 85:
        this.ᐃᐃΔⵠ = f317;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 11:
        this.ⲆᐃⲆ = function (p1445) {
          this.lock = this.info & 8192 ? 1 : 0;
          this.info = this.info & 8191;
          this.action = p1445;
        };
        this.ᐃᐃΔⵠ = f308;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV143, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vVVV144,
          angle: 0
        };
        this.lock = 0;
        this.ⲆᐃⲆ(this.action);
        break;
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 53:
      case 10:
      case 15:
      case 16:
      case 17:
      case 21:
      case 51:
        this.ᐃᐃΔⵠ = f309;
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: false,
          angle: 0
        };
        this.ⵠⵠΔᐃΔ = f327;
        break;
      case 18:
        this.ΔΔⲆᐃⵠ = f347;
        this.ᐃᐃΔⵠ = f336;
        this.ⲆᐃⲆᐃⵠ = f341;
        this.ⲆΔᐃΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV142, 1, 1.23, 1.18, 0.02, 0.02);
        this.ΔⲆᐃⲆⲆ = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV144, 1, 1.23, 1.18, 0.04, 0.04);
        this.ᐃⵠΔ = {
          ΔᐃⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10),
          ⲆᐃⲆ: vV142,
          angle: 0
        };
        this.ⲆᐃⲆ = function (p1446) {
          this.action = p1446;
        };
    }
  }
  function f426(p1447) {
    this.ⲆᐃⵠΔᐃⵠᐃ = 134;
    this.ᐃΔⵠΔΔⵠⵠ = 48;
    this.ⲆⵠⵠⵠΔⲆⵠⲆΔ = 58;
    this.ⲆᐃⵠΔᐃⵠᐃ;
    this.ᐃΔⵠΔΔⵠⵠ;
    this.mode = 0;
    this.ᐃⵠⲆⵠΔΔⲆ = p1447;
    this.ⲆⵠΔⲆΔ = 0;
    this.ⲆΔΔⵠⲆⲆⲆ = 6;
    this.ΔⵠΔⵠ = [];
    this.ᐃᐃᐃᐃΔᐃⵠ = 191;
    this.ᐃᐃᐃᐃΔᐃⵠ.ⲆᐃⵠⲆΔᐃⲆ = 10;
    this.ⲆⵠΔ = [];
    this.ⲆⵠΔ[0] = [];
    this.ⲆⵠΔ[100] = [];
    this.ⲆⵠΔ[80] = [];
    this.ⲆⵠΔ[60] = [];
    this.ⲆⵠΔ[67] = [];
    this.ⲆⲆΔΔⲆⲆⵠⵠⵠ = false;
    this.ⲆⵠΔ[70] = [];
    this.ⲆⵠΔ[77] = [];
    this.ⲆⵠΔ[71] = [];
    this.ⲆⵠΔ[72] = [];
    this.ⲆⵠΔ[73] = [];
    this.ⲆⵠΔ[74] = [];
    this.ⲆⵠΔ[65] = [];
    this.ⲆⵠΔ[66] = [];
    this.ⲆⵠΔ[62] = [];
    this.ⲆⵠΔ[88] = [];
    this.ⲆⵠΔ[91] = [];
    this.ⲆⵠΔ[90] = [];
    this.ⲆⵠΔ[63] = [];
    this.ⲆⵠΔ[78] = [];
    this.ⲆⵠΔ[64] = [];
    this.ΔⲆⲆΔΔΔⲆ = 2400;
    this.ⲆⵠΔ[69] = [];
    this.ⲆⵠΔ[68] = [];
    this.ⲆⵠΔ[79] = [];
    this.ⲆⵠΔ[89] = [];
    this.ⲆⵠΔ[83] = [];
    this.ⲆⵠΔ[84] = [];
    this.ⲆⵠΔ[85] = [];
    this.ⲆⵠΔ[81] = [];
    this.ⲆⵠΔ[82] = [];
    this.ⲆⵠΔ[86] = [];
    this.ⲆⵠΔ[34] = [];
    this.ⲆⵠΔ[36] = [];
    this.ⲆⵠΔ[61] = [];
    this.ⲆᐃΔⵠᐃᐃⲆ = 110;
    this.ⲆᐃΔⵠᐃᐃⲆ.ⲆΔΔᐃⲆΔⲆ = 4;
    this.ⲆⵠΔ[2] = [];
    this.ⲆⵠΔ[1] = [];
    this.ⲆⵠΔ[6] = [];
    this.ⲆⵠΔ[3] = [];
    this.ⲆⵠΔ[5] = [];
    this.ⲆⵠΔ[12] = [];
    this.ⲆⵠΔ[13] = [];
    this.ⲆⵠΔ[14] = [];
    this.ⲆⵠΔ[20] = [];
    this.ⲆⵠΔ[52] = [];
    this.ⲆⵠΔ[4] = [];
    this.ⲆⵠΔ[7] = [];
    this.ⲆⵠΔ[8] = [];
    this.ⲆⵠΔ[9] = [];
    this.ⲆⵠΔ[19] = [];
    this.ⲆⵠΔ[50] = [];
    this.ⲆⵠΔ[41] = [];
    this.ⲆⵠⵠᐃΔΔⲆ = 71;
    this.ⲆᐃⵠⵠⲆΔᐃⲆⵠ = this.ⲆⵠⵠᐃΔΔⲆ;
    this.ⲆⵠΔ[10] = [];
    this.ⵠⲆΔⵠΔⵠᐃΔᐃ = 171;
    this.ᐃᐃΔⲆⵠⵠⲆⵠΔ = 197;
    this.ⵠⲆΔⵠΔⵠᐃΔᐃ;
    this.ᐃᐃΔⲆⵠⵠⲆⵠΔ;
    this.ⲆⵠΔ[15] = [];
    this.ⲆⲆΔΔⲆᐃⲆ = 95;
    this.ᐃΔⵠᐃΔⲆΔ = 128;
    this.ⲆⲆΔΔⲆᐃⲆ;
    this.ᐃΔⵠᐃΔⲆΔ;
    this.ⲆⵠΔ[16] = [];
    this.ⲆⵠΔ[17] = [];
    this.ⲆⵠΔ[21] = [];
    this.ⲆΔᐃⵠᐃⵠΔ = 36;
    var v2279 = 82;
    if (v2279 > 5) {
      v2279 = 171;
    }
    this.ⲆΔᐃⵠᐃⵠΔ.ⵠᐃᐃⲆᐃⵠΔⵠΔ = 3;
    this.ⲆⵠΔ[51] = [];
    this.ⲆⵠΔ[45] = [];
    this.ⲆⵠΔ[46] = [];
    this.ⲆⵠΔ[47] = [];
    this.ⲆⵠΔ[48] = [];
    this.ⲆⵠΔ[49] = [];
    var v2280 = 31;
    if (v2280 == 13) {
      v2280 = 120;
    }
    this.ⲆⵠΔ[53] = [];
    this.ⲆⵠΔ[18] = [];
    this.ⲆⵠΔ[29] = [];
    this.ΔᐃⵠΔⲆⵠᐃ = {};
    this.ΔᐃⵠΔⲆⵠᐃ.ΔⲆⲆⲆⲆΔΔ = 7;
    this.ⲆⵠΔ[56] = [];
    this.ⲆⵠΔ[11] = [];
    this.ⲆⵠΔ[22] = [];
    this.ⲆⵠΔ[23] = [];
    this.ⲆⵠΔ[30] = [];
    this.ⲆⵠΔ[38] = [];
    this.ⲆⵠΔ[33] = [];
    this.ⲆⵠΔ[31] = [];
    this.ⲆⵠΔ[55] = [];
    this.ⲆⵠΔ[37] = [];
    this.ⲆⵠΔ[43] = [];
    this.ⲆⵠΔ[44] = [];
    this.ⲆⵠΔ[54] = [];
    this.ⲆⵠΔ[39] = [];
    this.ⲆⵠΔ[40] = [];
    this.ⲆⵠΔ[32] = [];
    this.ⲆⵠΔ[24] = [];
    this.ⲆⵠΔ[25] = [];
    this.ⲆⵠΔ[26] = [];
    this.ⲆⵠΔ[27] = [];
    this.ⲆⵠΔ[28] = [];
    this.ⲆⵠΔ[35] = [];
    this.ⲆⵠΔ[87] = [];
    this.ⲆⵠΔ[42] = [];
    this.ᐃΔΔⵠᐃ = [];
    this.ⲆΔᐃⵠⲆ = 260;
    this.ⵠᐃΔΔⵠᐃⲆ = true;
    this.ⵠΔᐃΔⵠ = 260;
    this.ⲆΔᐃⵠⲆᐃⵠ = 100;
    this.Ⲇⵠᐃⵠⵠᐃⵠ = 100;
    this.w = this.ⲆΔᐃⵠⲆ * this.ⲆΔᐃⵠⲆᐃⵠ;
    var v2281 = 211;
    function o(p1448, p1449, p1450, p1451, p1452) {
      for (var v2282 = 0; p1452 > v2282 && r(p1448, p1449, p1450, p1451, 8) !== 1; v2282++);
      if (p1452 === v2282) {
        return 0;
      } else {
        return 1;
      }
    }
    function a(p1453, p1454, p1455) {
      var vP1454 = p1454;
      for (var vP1455 = p1455; v2812.ⵠΔᐃΔⵠ > vP1455; vP1455++) {
        for (var vP14542 = p1454; v2812.ⲆΔᐃⵠⲆ > vP14542 && (vP1455 === p1455 && (vP1454 = Math.max(vP14542, vP1454)), !(vP14542 > vP1454)) && p1453[vP1455][vP14542] !== 1; vP14542++) {
          p1453[vP1455][vP14542] = 1;
        }
        if (vP14542 < vP1454) {
          break;
        }
      }
      v2812.ΔᐃⵠⲆ.push(new v2812.ⲆΔⲆⲆⵠⲆΔ(v2812.ᐃᐃⵠⲆⵠ, p1454, p1455, vP1454 - p1454 + 1, vP1455 - p1455, 15));
    }
    function r(p1456, p1457, p1458, p1459, p1460) {
      var v2283 = p1457 + Math.floor(p1459 * v2812.ΔⲆⵠⵠᐃ.get());
      var v2284 = p1458 + Math.floor(p1459 * v2812.ΔⲆⵠⵠᐃ.get());
      var v2285 = 10 + Math.floor((v2812.ⲆΔᐃⵠⲆ - v2283 - 20) * v2812.ΔⲆⵠⵠᐃ.get());
      var v2286 = 10 + Math.floor((v2812.ⵠΔᐃΔⵠ - v2284 - 20) * v2812.ΔⲆⵠⵠᐃ.get());
      var v2287 = v2285 + v2283;
      var v2288 = v2286 + v2284;
      for (var v2289 = 0; v2289 < v2812.ΔᐃⵠⲆ.length; v2289++) {
        var v2290 = v2812.ΔᐃⵠⲆ[v2289];
        if (ᐃⵠⵠ.ᐃᐃⲆⵠᐃⵠΔ(v2285, v2287, v2286, v2288, v2290.x1 / 100 - p1460, v2290.x2 / 100 + p1460, v2290.y1 / 100 - p1460, v2290.y2 / 100 + p1460) === 1) {
          return 0;
        }
      }
      v2812.ΔᐃⵠⲆ.push(new v2812.ⲆΔⲆⲆⵠⲆΔ(p1456, v2285, v2286, v2283, v2284, 15));
      return 1;
    }
    function s(p1461, p1462, p1463, p1464, p1465, p1466, p1467, p1468) {
      var v2291 = Math.floor(p1467 / 2);
      var v2292 = Math.max(1, Math.floor(p1467 / 2));
      var v2293 = Math.floor(p1468 / 2);
      var v2294 = Math.max(1, Math.floor(p1468 / 2));
      for (var v2295 = 0; v2295 < p1463; v2295++) {
        for (var v2296 = p1461 - v2293; v2296 < p1461 + v2294; v2296++) {
          for (var v2297 = p1462 - v2291; v2297 < p1462 + v2292; v2297++) {
            if (f441(v2296, v2297, "wtb", 0, 1) === 1) {
              p1466.push([v2296, v2297, 1]);
            }
          }
        }
        p1461 += p1464;
        p1462 += p1465;
      }
    }
    function f431(p1469, p1470) {
      for (var v2298 = 0; p1470.length > v2298; v2298++) {
        f443(p1470[v2298][0], p1470[v2298][1], p1469, p1470[v2298][2]);
      }
    }
    function g(p1471, p1472) {
      var v2299 = v2812.ΔᐃⵠⲆ[p1471];
      var v2300 = Math.floor(v2299.y1 / 100);
      var v2301 = Math.floor(v2299.x1 / 100);
      var v2302 = Math.floor(v2299.ⵠᐃⵠ / 100);
      var v2303 = v2301 + (v2310 = Math.floor(v2299.w / 100));
      var v2304 = 2;
      var vV2302 = v2302;
      var vV2300 = v2300;
      for (var v2305 = v2301 + 10 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * (v2310 - 20)), v2306 = v2305 - 4; v2305 + 4 > v2306; v2306++) {
        f441(v2300 - 1, v2306, "wtb", 0, 1);
      }
      while (vV2302 > 0) {
        if (v2304 !== 2) {
          if (vV2302 < 10) {
            for (v2311 = 1; vV2302 > 0; v2311++) {
              s(vV2300, v2305, 1, 1, 0, p1472, v2311, 1);
              vV2302 -= 1;
              vV2300 += 1;
            }
          } else if (v2304 !== 1) {
            v2304 = 1;
            var v2307 = Math.floor(1 + v2812.ΔⲆⵠⵠᐃ.get() * 2);
            var v2308 = 1 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 4);
            if (v2301 + 16 > v2305) {
              s(vV2300, v2305, v2307, 0, 1, p1472, v2308, v2308);
              v2305 += v2307;
            } else if (v2305 > v2303 - 16) {
              s(vV2300, v2305, v2307, 0, -1, p1472, v2308, v2308);
              v2305 -= v2307;
            } else if (v2812.ΔⲆⵠⵠᐃ.get() > 0.5) {
              s(vV2300, v2305, v2307, 0, 1, p1472, v2308, v2308);
              v2305 += v2307;
            } else {
              s(vV2300, v2305, v2307, 0, -1, p1472, v2308, v2308);
              v2305 -= v2307;
            }
          } else {
            var v2309 = Math.min(vV2302, Math.floor(1 + v2812.ΔⲆⵠⵠᐃ.get() * 4));
            var v2310 = 1 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 4);
            s(vV2300, v2305, v2309, 1, 0, p1472, v2310, v2310);
            v2304 = 0;
            vV2302 -= v2309;
            vV2300 += v2309;
          }
        } else {
          for (var v2311 = 10; v2311 > 1; v2311--) {
            s(vV2300, v2305, 1, 1, 0, p1472, v2311, 1);
            vV2302 -= 1;
            vV2300 += 1;
          }
          v2304 = 0;
        }
      }
      for (v2306 = v2305 - 1; v2306 < v2305 + 2; v2306++) {
        f441(vV2300, v2306, "wtb", 0, 1);
      }
    }
    function f433(p1473, p1474) {
      for (var v2312 = 0; v2312 < 6; v2312++) {
        f439(p1473, "t", v2312, Math.floor(p1474 * 20));
      }
      for (v2312 = 0; v2312 < 4; v2312++) {
        f439(p1473, "b", v2312, Math.floor(p1474 * 20));
      }
      for (v2312 = 0; v2312 < 3; v2312++) {
        f439(p1473, "s", v2312, Math.floor(p1474 * 20));
      }
      var v2313 = [];
      g(p1473, v2313);
      f431(p1473, v2313);
      v2313 = [];
      f439(p1473, "p", 0, Math.floor(p1474 * 24));
      for (v2312 = 0; v2312 < 3; v2312++) {
        f439(p1473, "g", v2312, Math.floor(p1474 * 5));
      }
      if (v2812.mode === 2) {
        for (v2312 = 0; v2312 < 3; v2312++) {
          f439(p1473, "d", v2312, Math.floor(p1474 * 3));
        }
        for (v2312 = 0; v2312 < 3; v2312++) {
          f439(p1473, "a", v2312, Math.floor(p1474 * 2));
        }
      }
      f442(p1473);
    }
    function f434(p1475) {
      for (var v2314 = 0; v2314 < 3; v2314++) {
        f439(p1475, "s", v2314, 15);
      }
      for (v2314 = 0; v2314 < 3; v2314++) {
        f439(p1475, "a", v2314, 1);
      }
      for (v2314 = 0; v2314 < 3; v2314++) {
        f439(p1475, "d", v2314, 1);
      }
      f442(p1475);
    }
    function f435(p1476, p1477) {
      for (var v2315 = 0; v2315 < 3; v2315++) {
        f439(p1476, "s", v2315, Math.floor(p1477 * 12));
      }
      for (v2315 = 0; v2315 < 3; v2315++) {
        f439(p1476, "m", v2315, Math.max(1, Math.floor(p1477 * 1)), 0.2);
      }
      f439(p1476, "c", 0, Math.floor(p1477 * 36));
      var v2316 = [];
      (function (p1478, p1479) {
        var v2317 = v2812.ΔᐃⵠⲆ[p1478];
        var v2318 = Math.floor(v2317.y1 / 100);
        var v2319 = Math.floor(v2317.x1 / 100);
        var v2320 = Math.floor(v2317.ⵠᐃⵠ / 100);
        var v2321 = Math.floor(v2317.w / 100);
        var v2322 = v2318 + Math.floor(v2320 / 2);
        var v2323 = v2319 + Math.floor(v2321 / 2);
        for (var v2324 = 0; v2324 < 3; v2324++) {
          f441(v2325 = Math.floor(v2322 - 3 + v2812.ΔⲆⵠⵠᐃ.get() * 6), v2326 = Math.floor(v2323 - 3 + v2812.ΔⲆⵠⵠᐃ.get() * 6), "plm", v2324, 1);
        }
        for (v2324 = 0; v2324 < 80; v2324++) {
          var v2325;
          var v2326;
          if (f441(v2325 = Math.floor(v2322 - 3 + v2812.ΔⲆⵠⵠᐃ.get() * 6), v2326 = Math.floor(v2323 - 3 + v2812.ΔⲆⵠⵠᐃ.get() * 6), "wtb", 0, 1) === 1) {
            p1479.push([v2325, v2326, 0]);
          }
        }
      })(p1476, v2316);
      f431(p1476, v2316);
      v2316 = [];
    }
    function f436(p1480, p1481) {
      for (var v2327 = 0; v2327 < 6; v2327++) {
        f439(p1480, "t", v2327, Math.floor(p1481 * 80));
      }
      for (v2327 = 0; v2327 < 4; v2327++) {
        f439(p1480, "b", v2327, Math.floor(p1481 * 80));
      }
      for (v2327 = 0; v2327 < 3; v2327++) {
        f439(p1480, "s", v2327, Math.floor(p1481 * 50));
      }
      var v2328 = [];
      for (v2327 = 0; v2327 < 6; v2327++) {
        g(p1480, v2328);
      }
      f431(p1480, v2328);
      v2328 = [];
      f439(p1480, "p", 0, Math.floor(p1481 * 28));
      for (v2327 = 0; v2327 < 3; v2327++) {
        f439(p1480, "g", v2327, Math.floor(p1481 * 7));
      }
      for (v2327 = 0; v2327 < 3; v2327++) {
        f439(p1480, "d", v2327, Math.floor(p1481 * 2));
      }
      for (v2327 = 0; v2327 < 3; v2327++) {
        f439(p1480, "a", v2327, Math.floor(p1481 * 1));
      }
      for (v2327 = 0; v2327 < 3; v2327++) {
        f439(p1480, "m", v2327, Math.floor(p1481 * 1));
      }
      f439(p1480, "a", 0, Math.floor(p1481 * 1));
      f442(p1480);
    }
    function f437(p1482, p1483) {
      (function (p1484, p1485) {
        var v2329 = v2812.ΔᐃⵠⲆ[p1485];
        for (var v2330 = 0, v2331 = 0; p1484 > v2330 && v2331 < 10000; v2331++) {
          var v2332 = v2329.y1 + v2329.ⵠᐃⵠ * v2812.ΔⲆⵠⵠᐃ.get();
          var v2333 = v2329.x1 + v2329.w * v2812.ΔⲆⵠⵠᐃ.get();
          var v2334 = Math.floor(v2332 / 100);
          var v2335 = Math.floor(v2333 / 100);
          if (!(v2812.Ⲇᐃᐃᐃᐃ(p1485, v2335 * 100 + 50, v2334 * 100 + 50) < 600)) {
            for (var v2336 = 1, v2337 = v2334 - 4; v2336 === 1 && v2337 <= v2334 + 4; v2337++) {
              for (var v2338 = v2335 - 4; v2336 === 1 && v2335 + 4 >= v2338; v2338++) {
                if (vVVVUndefined202 !== v2809.ΔⵠΔⲆ[v2337][v2338]) {
                  v2336 = 0;
                }
              }
            }
            if (v2336 !== 0) {
              f441(v2334, v2335, "la", v2330 % 6, 0);
              v2330++;
            }
          }
        }
      })(p1483 * 80, p1482);
      for (var v2339 = 0; v2339 < 3; v2339++) {
        f439(p1482, "s", v2339, Math.floor(p1483 * 12));
      }
      for (v2339 = 0; v2339 < 3; v2339++) {
        f439(p1482, "g", v2339, Math.floor(p1483 * 6));
      }
      for (v2339 = 0; v2339 < 3; v2339++) {
        f439(p1482, "re", v2339, Math.max(1, Math.floor(p1483 * 1)), 0.2);
      }
      for (v2339 = 0; v2339 < 3; v2339++) {
        f439(p1482, "a", v2339, Math.max(1, Math.floor(p1483 * 2)));
      }
      f442(p1482);
    }
    function f438(p1486, p1487) {
      for (var v2340 = 0; v2340 < 3; v2340++) {
        f439(p1486, "s", v2340, Math.floor(p1487 * 18));
      }
      for (v2340 = 0; v2340 < 3; v2340++) {
        f439(p1486, "f", v2340, Math.floor(p1487 * 24));
      }
      for (v2340 = 0; v2340 < 3; v2340++) {
        f439(p1486, "d", v2340, Math.max(1, Math.floor(p1487 * 2)), 0.3);
      }
      for (v2340 = 0; v2340 < 3; v2340++) {
        f439(p1486, "g", v2340, Math.floor(p1487 * 6));
      }
      f442(p1486);
    }
    function f439(p1488, p1489, p1490, p1491, p1492) {
      var v2341 = v2812.ΔᐃⵠⲆ[p1488];
      var v2342 = Math.floor(v2341.x1 / 100);
      var v2343 = Math.floor(v2341.y1 / 100);
      var v2344 = Math.floor(v2341.w / 100);
      var v2345 = Math.floor(v2341.ⵠᐃⵠ / 100);
      if (vVVUndefined21 !== p1492) {
        p1492 = 1 - p1492;
        v2342 += Math.floor(v2344 * p1492 / 2);
        v2343 += Math.floor(p1492 * v2345 / 2);
        v2344 -= Math.floor(v2344 * p1492);
        v2345 -= Math.floor(v2345 * p1492);
      }
      var v2346 = v2809.ΔⵠΔⲆ;
      for (var v2347 = 0, v2348 = 0; v2347 < p1491 && !(v2348 > 50000); v2348++) {
        var v2349 = v2343 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * v2345);
        var v2350 = v2342 + Math.floor(v2344 * v2812.ΔⲆⵠⵠᐃ.get());
        if (!(v2812.Ⲇᐃᐃᐃᐃ(p1488, v2350 * 100 + 50, v2349 * 100 + 50) < 400) && ((v2351 = v2346[v2349][v2350 + 1]) === undefined || vVUndefined20 === v2351[p1489] || v2351[p1489][p1490] === vVVUndefined20) && ((v2351 = v2346[v2349][v2350 - 1]) === undefined || vVVUndefined21 === v2351[p1489] || v2351[p1489][p1490] === undefined) && ((v2351 = v2346[v2349 + 1][v2350]) === undefined || v2351[p1489] === undefined || v2351[p1489][p1490] === undefined)) {
          var v2351 = v2346[v2349 - 1][v2350];
          if (vUndefined === v2351 || v2351[p1489] === vVVVUndefined2022 || v2351[p1489][p1490] === vVVVVUndefined117) {
            if ((v2351 = v2346[v2349 + 1][v2350 - 1]) === vVVUndefined202 || vVVUndefined21 === v2351[p1489] || v2351[p1489][p1490] === undefined) {
              if ((v2351 = v2346[v2349 - 1][v2350 + 1]) === vVVVUndefined212 || v2351[p1489] === undefined || v2351[p1489][p1490] === vVVUndefined202) {
                if ((v2351 = v2346[v2349 + 1][v2350 + 1]) === undefined || vVUndefined20 === v2351[p1489] || v2351[p1489][p1490] === undefined) {
                  if ((v2351 = v2346[v2349 - 1][v2350 - 1]) === undefined || v2351[p1489] === undefined || v2351[p1489][p1490] === undefined) {
                    if (vVVVUndefined202 === v2346[v2349][v2350]) {
                      f441(v2349, v2350, p1489, p1490, 1);
                      v2347++;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    function f440(p1493, p1494) {
      return p1493 >= 0 && p1494 >= 0 && p1493 < v2812.ⵠΔᐃΔⵠ && p1494 < v2812.ⲆΔᐃⵠⲆ;
    }
    function f441(p1495, p1496, p1497, p1498, p1499) {
      if (!(p1495 < 0) && !(p1496 < 0) && !(p1495 >= v2812.ⵠΔᐃΔⵠ) && !(p1496 >= v2812.ⲆΔᐃⵠⲆ)) {
        ΔⵠΔⲆ = v2809.ΔⵠΔⲆ;
        if (vVVUndefined212 === ΔⵠΔⲆ[p1495][p1496]) {
          ΔⵠΔⲆ[p1495][p1496] = {};
        }
        if (vVVUndefined202 !== ΔⵠΔⲆ[p1495][p1496][p1497]) {
          return 0;
        } else {
          ΔⵠΔⲆ[p1495][p1496][p1497] = [];
          ΔⵠΔⲆ[p1495][p1496][p1497][p1498] = [{
            x: p1496 * 100 + 50,
            y: p1495 * 100 + 50
          }];
          if (p1499 === 1) {
            (function (p1500, p1501, p1502, p1503) {
              v789.push([p1500, p1501, p1502, p1503]);
            })(p1497, p1498, p1495, p1496);
          }
          return 1;
        }
      }
    }
    function f442(p1504) {
      var v2352 = v2812.ΔᐃⵠⲆ[p1504];
      f441(-3 + Math.floor(v2352.y2 / 100), -1 + Math.floor(v2352.x2 / 100), "s", 0, 0);
      f441(3 + Math.floor(v2352.y1 / 100), -1 + Math.floor(v2352.x2 / 100), "s", 0, 0);
      f441(-3 + Math.floor(v2352.y2 / 100), 1 + Math.floor(v2352.x1 / 100), "s", 0, 0);
      f441(3 + Math.floor(v2352.y1 / 100), 1 + Math.floor(v2352.x1 / 100), "s", 0, 0);
    }
    function f443(p1505, p1506, p1507, p1508) {
      if (f440(p1505, p1506) && (ΔⵠΔⲆ = v2809.ΔⵠΔⲆ, ΔⵠΔⲆ[p1505][p1506] === undefined && (ΔⵠΔⲆ[p1505][p1506] = {}), ΔⵠΔⲆ[p1505][p1506].r === vUndefined)) {
        var v2353 = 0;
        if (f440(p1505 - 1, p1506) && vVVVUndefined21 !== ΔⵠΔⲆ[p1505 - 1][p1506] && ΔⵠΔⲆ[p1505 - 1][p1506].wtb !== undefined) {
          v2353 += 2;
        }
        if (f440(p1505, p1506 - 1) && ΔⵠΔⲆ[p1505][p1506 - 1] !== undefined && ΔⵠΔⲆ[p1505][p1506 - 1].wtb !== undefined) {
          v2353 += 8;
        }
        if (f440(p1505, p1506 + 1) && vVVVUndefined117 !== ΔⵠΔⲆ[p1505][p1506 + 1] && vVVVUndefined117 !== ΔⵠΔⲆ[p1505][p1506 + 1].wtb) {
          v2353 += 16;
        }
        if (f440(p1505 + 1, p1506) && ΔⵠΔⲆ[p1505 + 1][p1506] !== undefined && ΔⵠΔⲆ[p1505 + 1][p1506].wtb !== undefined) {
          v2353 += 64;
        }
        if (f440(p1505 - 1, p1506 - 1) && (v2353 & 10) == 10 && ΔⵠΔⲆ[p1505 - 1][p1506 - 1] !== undefined && vVVUndefined21 !== ΔⵠΔⲆ[p1505 - 1][p1506 - 1].wtb) {
          v2353 += 1;
        }
        if (f440(p1505 - 1, p1506 + 1) && (v2353 & 18) === 18 && vVVVVUndefined20 !== ΔⵠΔⲆ[p1505 - 1][p1506 + 1] && ΔⵠΔⲆ[p1505 - 1][p1506 + 1].wtb !== undefined) {
          v2353 += 4;
        }
        if (f440(p1505 + 1, p1506 - 1) && !(~v2353 & 72) && ΔⵠΔⲆ[p1505 + 1][p1506 - 1] !== undefined && vVVVUndefined202 !== ΔⵠΔⲆ[p1505 + 1][p1506 - 1].wtb) {
          v2353 += 32;
        }
        if (f440(p1505 + 1, p1506 + 1) && !(~v2353 & 80) && ΔⵠΔⲆ[p1505 + 1][p1506 + 1] !== vVVVVUndefined21 && ΔⵠΔⲆ[p1505 + 1][p1506 + 1].wtb !== undefined) {
          v2353 += 128;
        }
        ΔⵠΔⲆ[p1505][p1506].r = {};
        ΔⵠΔⲆ[p1505][p1506].r.ΔᐃⵠⵠΔⵠΔ = v2353;
        ΔⵠΔⲆ[p1505][p1506].r.ΔᐃⵠⲆⵠⵠᐃ = p1508;
        ΔⵠΔⲆ[p1505][p1506].r.Ⲇᐃᐃᐃ = v2812.Ⲇᐃᐃᐃᐃ(p1507, p1506 * 100 + 50, p1505 * 100 + 50) - 400;
        ΔⵠΔⲆ[p1505][p1506].r.x = p1506 * 100 + 50;
        ΔⵠΔⲆ[p1505][p1506].r.y = p1505 * 100 + 50;
      }
    }
    function f444(p1509, p1510, p1511) {
      if (p1509[p1510]) {
        for (v123 = 0; p1509[p1510].length > v123; v123++) {
          if (p1509[p1510][v123]) {
            for (ⲆⲆⲆᐃ = 0; ⲆⲆⲆᐃ < p1509[p1510][v123].length; ⲆⲆⲆᐃ++) {
              p1509[p1510][v123][ⲆⲆⲆᐃ].ᐃⵠΔ = p1511;
              p1509[p1510][v123][ⲆⲆⲆᐃ].ⲆᐃⲆ = false;
              p1509[p1510][v123][ⲆⲆⲆᐃ].time = 0;
              p1509[p1510][v123][ⲆⲆⲆᐃ].angle = 0;
            }
          }
        }
      }
    }
    if (v2281 > 2) {
      v2281 = 249;
    }
    this.ⵠᐃⵠ = this.Ⲇⵠᐃⵠⵠᐃⵠ * this.ⵠΔᐃΔⵠ;
    this.ΔⲆⵠⵠᐃ = new v616.ᐃᐃᐃᐃⲆⲆΔ();
    this.ΔᐃⵠⲆ = [];
    this.ⲆΔⲆΔ = new ᐃⵠⵠ.ⲆΔⵠᐃ(v14, 0, 1, 0, 1, 1);
    this.transition = vVVVVV1422;
    this.ⲆᐃᐃⵠⲆ = [];
    this.ⵠⵠⵠᐃⵠ = 0;
    this.ᐃⵠⲆⲆᐃⵠΔ = 1;
    this.Ⲇᐃᐃᐃᐃⵠᐃ = 2;
    this.ⵠⲆⲆⵠᐃᐃⲆ = 3;
    this.ΔᐃᐃⲆⲆᐃⵠ = 353;
    this.ᐃᐃⵠⲆⵠ = 4;
    this.ΔᐃΔⵠᐃⵠᐃ = 10;
    this.ⲆᐃᐃⵠⲆ[this.ⵠⵠⵠᐃⵠ] = {
      ⲆΔⵠΔⵠⵠⲆ: 1,
      ⵠΔⵠ: [19, 58, 43],
      ⵠᐃᐃ: [4, 43, 48],
      ⲆⵠⲆΔⵠ: ["#133a2b", "#042b30"]
    };
    this.ⲆᐃᐃⵠⲆ[this.ᐃᐃⵠⲆⵠ] = {
      ⲆΔⵠΔⵠⵠⲆ: 0,
      ⵠΔⵠ: [11, 106, 132],
      ⵠᐃᐃ: [9, 55, 63],
      ⲆⵠⲆΔⵠ: ["#0B6A84", "#09373F"]
    };
    this.ⲆᐃᐃⵠⲆ[this.ᐃⵠⲆⲆᐃⵠΔ] = {
      ⲆΔⵠΔⵠⵠⲆ: 0,
      ⵠΔⵠ: [235, 242, 240],
      ⵠᐃᐃ: [19, 97, 103],
      ⲆⵠⲆΔⵠ: ["#EBF2F0", "#136167"]
    };
    this.ⲆᐃᐃⵠⲆ[this.Ⲇᐃᐃᐃᐃⵠᐃ] = {
      ⵠΔⵠ: [45, 32, 23],
      ⲆΔⵠΔⵠⵠⲆ: 0,
      ⵠᐃᐃ: [3, 28, 30],
      ⲆⵠⲆΔⵠ: ["#2D2017", "#031C1E"]
    };
    this.ⲆᐃᐃⵠⲆ[this.ⵠⲆⲆⵠᐃᐃⲆ] = {
      ⲆⵠⲆΔⵠ: ["#4A4A4A", "#183D3C"],
      ⲆΔⵠΔⵠⵠⲆ: 0,
      ⵠΔⵠ: [74, 74, 74],
      ⵠᐃᐃ: [24, 61, 60]
    };
    this.ⲆᐃᐃⵠⲆ[this.ΔᐃΔⵠᐃⵠᐃ] = {
      ⵠΔⵠ: [235, 216, 166],
      ⵠᐃᐃ: [9, 61, 56],
      ⲆⵠⲆΔⵠ: ["#EBD8A6", "#093D38"],
      ⲆΔⵠΔⵠⵠⲆ: 0
    };
    this.ⲆΔⲆⲆⵠⲆΔ = function (p1512, p1513, p1514, p1515, p1516, p1517) {
      this.x1 = p1513 * 100;
      this.y1 = p1514 * 100;
      this.w = p1515 * 100;
      this.ⵠᐃⵠ = p1516 * 100;
      this.x2 = (p1513 + p1515) * 100;
      this.y2 = (p1514 + p1516) * 100;
      this.ΔᐃΔ = p1512;
      this.ⲆⵠⲆ = vVVUndefined21 === p1517 ? 15 : p1517;
    };
    this.ⲆᐃⵠⵠⲆ = -1000000;
    this.ⲆΔⵠⲆΔ = this.ⲆᐃⵠⵠⲆ;
    this.ΔⵠⵠΔΔ = this.ⲆᐃⵠⵠⲆ;
    this.ⵠⲆⵠⲆⲆ = this.ⲆᐃⵠⵠⲆ;
    this.ⲆⲆᐃΔⵠᐃΔ = this.ⲆᐃⵠⵠⲆ;
    this.ⵠᐃⵠΔΔΔΔ = this.ⲆᐃⵠⵠⲆ;
    this.ΔⵠⵠᐃΔ = this.ⲆᐃⵠⵠⲆ;
    this.ⵠΔΔΔᐃᐃⲆⲆⲆ = function (p1518) {
      var v2354 = p1518.r.x;
      var v2355 = p1518.r.y;
      var v2356 = Math.floor(v2355 / 100);
      var v2357 = Math.floor(v2354 / 100);
      p1518.ⲆΔⵠⲆΔ = v2812.ⲆᐃⵠⵠⲆ;
      p1518.ΔⵠⵠΔΔ = v2812.ⲆᐃⵠⵠⲆ;
      p1518.ⵠⲆⵠⲆⲆ = v2812.ⲆᐃⵠⵠⲆ;
      p1518.ⲆⲆᐃΔⵠᐃΔ = v2812.ⲆᐃⵠⵠⲆ;
      p1518.ΔⵠⵠᐃΔ = v2812.ⲆᐃⵠⵠⲆ;
      p1518.ⲆᐃᐃΔⲆⲆⲆ = v2812.ⲆᐃⵠⵠⲆ;
      for (var v2358 = 0; v2812.ᐃᐃⵠⲆⵠ !== v2812.ΔᐃⵠⲆ[v2358].ΔᐃΔ; v2358++) {
        if (v2812.ΔᐃⵠⲆ[v2358].ΔᐃΔ === v2812.ⵠⵠⵠᐃⵠ) {
          var v2359 = v2812.Ⲇᐃᐃᐃᐃ(v2358, v2354, v2355);
          p1518.ⲆⲆᐃΔⵠᐃΔ = Math.max(p1518.ⲆⲆᐃΔⵠᐃΔ, v2359);
          if (v2359 > 0 && v2812.ᐃⲆΔᐃⵠᐃⲆᐃΔ(v2358, v2354, v2355) === 1) {
            p1518.ⲆᐃᐃΔⲆⲆⲆ = 1;
          }
        } else if (v2812.ΔᐃⵠⲆ[v2358].ΔᐃΔ === v2812.ᐃⵠⲆⲆᐃⵠΔ) {
          p1518.ⲆΔⵠⲆΔ = Math.max(p1518.ⲆΔⵠⲆΔ, v2812.Ⲇᐃᐃᐃᐃ(v2358, v2354, v2355));
        } else if (v2812.ΔᐃΔⵠᐃⵠᐃ === v2812.ΔᐃⵠⲆ[v2358].ΔᐃΔ) {
          p1518.ΔⵠⵠΔΔ = Math.max(p1518.ΔⵠⵠΔΔ, v2812.Ⲇᐃᐃᐃᐃ(v2358, v2354, v2355));
        } else if (v2812.Ⲇᐃᐃᐃᐃⵠᐃ === v2812.ΔᐃⵠⲆ[v2358].ΔᐃΔ) {
          p1518.ⵠⲆⵠⲆⲆ = Math.max(p1518.ⵠⲆⵠⲆⲆ, v2812.Ⲇᐃᐃᐃᐃ(v2358, v2354, v2355));
        } else if (v2812.ⵠⲆⲆⵠᐃᐃⲆ === v2812.ΔᐃⵠⲆ[v2358].ΔᐃΔ) {
          p1518.ΔⵠⵠᐃΔ = Math.max(p1518.ΔⵠⵠᐃΔ, v2812.Ⲇᐃᐃᐃᐃ(v2358, v2354, v2355));
        }
      }
      if (v2809.ΔⵠΔⲆ[v2356][v2357].iblk) {
        p1518.ⲆᐃᐃΔⲆⲆⲆ = 1;
      }
      if (v2812.ⵠΔⵠΔⵠᐃᐃᐃⲆ(v2357, v2356)) {
        p1518.ⵠᐃⵠΔΔΔΔ = p1518.ⲆᐃⵠⵠⲆ;
      } else if (v2809.ΔⵠΔⲆ[v2356][v2357].wtb || p1518.ⲆΔⵠⲆΔ < 0 && p1518.ⵠⲆⵠⲆⲆ < 0 && p1518.ⲆⲆᐃΔⵠᐃΔ < 0 && p1518.ⲆᐃᐃΔⲆⲆⲆ < 0 && p1518.ΔⵠⵠᐃΔ < 0 && p1518.ΔⵠⵠΔΔ < 0) {
        p1518.ⵠᐃⵠΔΔΔΔ = 1;
      } else {
        p1518.ⵠᐃⵠΔΔΔΔ = p1518.ⲆᐃⵠⵠⲆ;
      }
    };
    this.ΔⵠⲆⵠⵠⵠΔᐃⵠ = function (p1519, p1520) {
      v2812.ⲆΔⵠⲆΔ = v2812.ⲆᐃⵠⵠⲆ;
      v2812.ΔⵠⵠΔΔ = v2812.ⲆᐃⵠⵠⲆ;
      v2812.ⵠⲆⵠⲆⲆ = v2812.ⲆᐃⵠⵠⲆ;
      v2812.ΔⵠⵠᐃΔ = v2812.ⲆᐃⵠⵠⲆ;
      v2812.ⲆⲆᐃΔⵠᐃΔ = v2812.ⲆᐃⵠⵠⲆ;
      for (var v2360 = 0; v2812.ΔᐃⵠⲆ[v2360].ΔᐃΔ !== v2812.ᐃᐃⵠⲆⵠ; v2360++) {
        if (v2812.ΔᐃⵠⲆ[v2360].ΔᐃΔ === v2812.ⵠⵠⵠᐃⵠ) {
          v2812.ⲆⲆᐃΔⵠᐃΔ = Math.max(v2812.ⲆⲆᐃΔⵠᐃΔ, v2812.Ⲇᐃᐃᐃᐃ(v2360, p1519, p1520));
        } else if (v2812.ᐃⵠⲆⲆᐃⵠΔ === v2812.ΔᐃⵠⲆ[v2360].ΔᐃΔ) {
          v2812.ⲆΔⵠⲆΔ = Math.max(v2812.ⲆΔⵠⲆΔ, v2812.Ⲇᐃᐃᐃᐃ(v2360, p1519, p1520));
        } else if (v2812.ΔᐃⵠⲆ[v2360].ΔᐃΔ === v2812.ΔᐃΔⵠᐃⵠᐃ) {
          v2812.ΔⵠⵠΔΔ = Math.max(v2812.ΔⵠⵠΔΔ, v2812.Ⲇᐃᐃᐃᐃ(v2360, p1519, p1520));
        } else if (v2812.Ⲇᐃᐃᐃᐃⵠᐃ === v2812.ΔᐃⵠⲆ[v2360].ΔᐃΔ) {
          v2812.ⵠⲆⵠⲆⲆ = Math.max(v2812.ⵠⲆⵠⲆⲆ, v2812.Ⲇᐃᐃᐃᐃ(v2360, p1519, p1520));
        } else if (v2812.ΔᐃⵠⲆ[v2360].ΔᐃΔ === v2812.ⵠⲆⲆⵠᐃᐃⲆ) {
          v2812.ΔⵠⵠᐃΔ = Math.max(v2812.ΔⵠⵠᐃΔ, v2812.Ⲇᐃᐃᐃᐃ(v2360, p1519, p1520));
        }
      }
      if (v2812.ⲆΔⵠⲆΔ < 0 && v2812.ΔⵠⵠᐃΔ < 0 && v2812.ⲆⲆᐃΔⵠᐃΔ < 0 && v2812.ΔⵠⵠᐃΔ < 0 && v2812.ΔⵠⵠΔΔ < 0) {
        v2812.ⵠᐃⵠΔΔΔΔ = 1;
      } else {
        v2812.ⵠᐃⵠΔΔΔΔ = v2812.ⲆᐃⵠⵠⲆ;
      }
    };
    this.ᐃⲆΔᐃⵠᐃⲆᐃΔ = function (p1521, p1522, p1523) {
      var v2361 = v2812.ΔᐃⵠⲆ[p1521];
      var v2362 = 0;
      ⵠⲆⲆⵠ = v2361.x1 + 30 + ((v2361.ⲆⵠⲆ & 4) === 0 ? 150 : 0);
      var v2363 = p1522 - ⵠⲆⲆⵠ;
      if ((v2361.ⲆⵠⲆ & 4) > 0 && v2363 > 0 && v2363 < 320) {
        v2362 = 1;
      }
      ⲆⲆᐃΔ = v2361.y1 + 250 + ((v2361.ⲆⵠⲆ & 1) === 0 ? 150 : 0);
      v2363 = p1523 - ⲆⲆᐃΔ;
      if ((v2361.ⲆⵠⲆ & 1) > 0 && v2363 > 0 && v2363 < 320) {
        v2362 = 1;
      }
      ΔⲆΔⵠ = v2361.x2 + 80 + (v2361.ⲆⵠⲆ & 8 ? 0 : -200);
      v2363 = ΔⲆΔⵠ - p1522;
      if ((v2361.ⲆⵠⲆ & 8) > 0 && v2363 > 0 && v2363 < 320) {
        v2362 = 1;
      }
      ⲆΔΔᐃ = v2361.y2 - 200 + ((v2361.ⲆⵠⲆ & 2) === 0 ? -200 : 0);
      v2363 = ⲆΔΔᐃ - p1523;
      if ((v2361.ⲆⵠⲆ & 2) > 0 && v2363 > 0 && v2363 < 320) {
        v2362 = 1;
      }
      if (p1522 >= ⵠⲆⲆⵠ && ΔⲆΔⵠ >= p1522 && ⲆⲆᐃΔ <= p1523 && ⲆΔΔᐃ >= p1523) {
        return v2362;
      } else {
        return 0;
      }
    };
    this.Ⲇᐃᐃᐃᐃ = function (p1524, p1525, p1526) {
      var v2364 = v2812.ΔᐃⵠⲆ[p1524];
      ⵠⲆⲆⵠ = v2364.x1 + 30;
      ⲆⲆᐃΔ = v2364.y1 + 250;
      ΔⲆΔⵠ = v2364.x2 + 80;
      ⲆΔΔᐃ = v2364.y2 - 200;
      if (p1525 >= ⵠⲆⲆⵠ && ΔⲆΔⵠ >= p1525 && p1526 >= ⲆⲆᐃΔ && ⲆΔΔᐃ >= p1526) {
        return Math.min(p1525 - ⵠⲆⲆⵠ, ΔⲆΔⵠ - p1525, p1526 - ⲆⲆᐃΔ, ⲆΔΔᐃ - p1526);
      }
      var v2365 = -1000000;
      if (p1525 - ⵠⲆⲆⵠ < 0) {
        v2365 = Math.max(v2365, p1525 - ⵠⲆⲆⵠ);
      } else if (ΔⲆΔⵠ - p1525 < 0) {
        v2365 = Math.max(v2365, ΔⲆΔⵠ - p1525);
      }
      ΔⲆⵠΔⲆⵠⵠ = -1000000;
      if (p1526 < ⲆⲆᐃΔ || p1526 > ⲆΔΔᐃ) {
        if (p1526 - ⲆⲆᐃΔ < 0) {
          ΔⲆⵠΔⲆⵠⵠ = Math.max(ΔⲆⵠΔⲆⵠⵠ, p1526 - ⲆⲆᐃΔ);
        } else {
          ΔⲆⵠΔⲆⵠⵠ = Math.max(ΔⲆⵠΔⲆⵠⵠ, ⲆΔΔᐃ - p1526);
        }
        v2365 = v2365 !== -1000000 && ΔⲆⵠΔⲆⵠⵠ !== -1000000 ? Math.min(v2365, ΔⲆⵠΔⲆⵠⵠ) : ΔⲆⵠΔⲆⵠⵠ;
      }
      return v2365;
    };
    this.ᐃΔΔΔⲆⵠⵠ = function (p1527, p1528, p1529) {
      var vP1529 = p1529;
      var vP1528 = p1528;
      f441(vP1529, vP1528, "isl", p1527, 1);
      for (var v2366 = 0; v2366 < 4; v2366++) {
        for (var v2367 = 0; v2367 < 3; v2367++) {
          f441(vP1529 - v2367, vP1528 - v2366, "iblk", 0);
          f441(vP1529 + v2367, vP1528 - v2366, "iblk", 0);
          f441(vP1529 + v2367, vP1528 + v2366, "iblk", 0);
          f441(vP1529 - v2367, vP1528 + v2366, "iblk", 0);
        }
      }
      if (p1527 === 0) {
        for (v2366 = 0; v2366 < 2; v2366++) {
          f441(vP1529 - v2366, vP1528 - 4, "iblk", 0);
          f441(vP1529 + v2366, vP1528 - 4, "iblk", 0);
          f441(vP1529 - v2366, vP1528 + 4, "iblk", 0);
          f441(vP1529 + v2366, vP1528 + 4, "iblk", 0);
        }
        for (v2366 = 0; v2366 < 3; v2366++) {
          f441(vP1529 - 3, vP1528 + v2366, "iblk", 0);
          f441(vP1529 + 3, vP1528 + v2366, "iblk", 0);
          f441(vP1529 - 3, vP1528 - v2366, "iblk", 0);
          f441(vP1529 + 3, vP1528 - v2366, "iblk", 0);
        }
        f441(vP1529 - 2, vP1528 - 4, "iblk", 0);
        f441(vP1529 - 3, vP1528 - 3, "iblk", 0);
        f441(vP1529 + 2, vP1528 + 4, "iblk", 0);
        f441(vP1529 + 3, vP1528 + 3, "iblk", 0);
      } else if (p1527 === 1) {
        for (v2366 = 0; v2366 < 3; v2366++) {
          f441(vP1529 - v2366, vP1528 - 4, "iblk", 0);
          f441(vP1529 + v2366, vP1528 - 4, "iblk", 0);
          f441(vP1529 - v2366, vP1528 + 4, "iblk", 0);
          f441(vP1529 + v2366, vP1528 + 4, "iblk", 0);
        }
        for (v2366 = 0; v2366 < 4; v2366++) {
          f441(vP1529 - 3, vP1528 + v2366, "iblk", 0);
          f441(vP1529 + 3, vP1528 + v2366, "iblk", 0);
          f441(vP1529 - 3, vP1528 - v2366, "iblk", 0);
          f441(vP1529 + 3, vP1528 - v2366, "iblk", 0);
        }
      } else if (p1527 === 2) {
        for (v2366 = 0; v2366 < 2; v2366++) {
          f441(vP1529 - v2366, vP1528 - 4, "iblk", 0);
          f441(vP1529 + v2366, vP1528 - 4, "iblk", 0);
          f441(vP1529 - v2366, vP1528 + 4, "iblk", 0);
          f441(vP1529 + v2366, vP1528 + 4, "iblk", 0);
        }
        for (v2366 = 0; v2366 < 3; v2366++) {
          f441(vP1529 - 3, vP1528 + v2366, "iblk", 0);
          f441(vP1529 + 3, vP1528 + v2366, "iblk", 0);
          f441(vP1529 - 3, vP1528 - v2366, "iblk", 0);
          f441(vP1529 + 3, vP1528 - v2366, "iblk", 0);
        }
      }
    };
    this.ᐃⵠᐃⵠⵠᐃᐃⵠΔ = function (p1530) {
      for (var v2368 = 0; v2368 < v2812.ΔᐃⵠⲆ.length && p1530 > 0; v2368++) {
        var v2369 = v2812.ΔᐃⵠⲆ[v2368];
        if (v2369.ΔᐃΔ === v2812.ᐃᐃⵠⲆⵠ && v2369.w > 1800 && v2369.ⵠᐃⵠ > 1000) {
          var v2370 = Math.floor((v2369.x1 + v2369.w / 2) / 100);
          var v2371 = Math.floor((v2369.y1 + v2369.ⵠᐃⵠ / 2) / 100);
          v2812.ᐃΔΔΔⲆⵠⵠ(p1530 % 3, v2370, v2371);
          for (var v2372 = 0; v2372 < 3; v2372++) {
            var v2373 = v2371 - 2 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 4);
            var v2374 = v2370 - 3 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 6);
            if (v2809.ΔⵠΔⲆ[v2373][v2374].s === undefined) {
              f441(v2373, v2374, "plm", v2372);
            }
            v2373 = v2371 - 2 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 4);
            v2374 = v2370 - 3 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 6);
            if (v2809.ΔⵠΔⲆ[v2373][v2374].plm === vVVUndefined212) {
              f441(v2373, v2374, "s", v2372);
            }
          }
          v2373 = v2371 - 2 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 4);
          v2374 = v2370 - 3 + Math.floor(v2812.ΔⲆⵠⵠᐃ.get() * 6);
          if (v2809.ΔⵠΔⲆ[v2373][v2374].plm === undefined && v2809.ΔⵠΔⲆ[v2373][v2374].s === undefined) {
            f441(v2373, v2374, "p", 0, 1);
          }
          p1530--;
        }
      }
    };
    this.ⵠⵠΔⲆᐃⵠΔᐃΔ = function (p1531) {
      v2812.ΔⲆⵠⵠᐃ.ᐃⵠᐃⲆⵠ(p1531);
      var v2375 = 0;
      while (1) {
        if (++v2375 > 10000) {
          return;
        }
        v2812.ΔᐃⵠⲆ = [];
        if (v2812.ⲆⵠΔⲆΔ === 0 && (v2812.mode === 3 || v2812.mode === 7 || v2812.mode === 0)) {
          v2812.ⲆⵠΔⲆΔ = v620;
        }
        if (v2812.mode === 2) {
          v2812.ΔᐃⵠⲆ.push(new v2812.ⲆΔⲆⲆⵠⲆΔ(v2812.ⵠⵠⵠᐃⵠ, 2, 2, 80, 80, 15));
        } else if (v2812.mode === 4) {
          v2812.ΔᐃⵠⲆ.push(new v2812.ⲆΔⲆⲆⵠⲆΔ(v2812.ⵠⵠⵠᐃⵠ, 2, 2, 150, 150, 15));
        } else if (v2812.ⲆⵠΔⲆΔ !== 0 && v2812.ⲆⵠΔⲆΔ.length > 0 && v2812.ⲆⵠΔⲆΔ[0].length > 3) {
          for (var v2376 = 0; v2812.ⲆⵠΔⲆΔ.length > v2376; v2376++) {
            if ((v2386 = v2812.ⲆⵠΔⲆΔ[v2376])[0] !== 0) {
              break;
            }
            var v2377 = v2272.ⵠⵠⵠᐃⵠ;
            switch (v2386[1]) {
              case "FOREST":
                v2377 = v2812.ⵠⵠⵠᐃⵠ;
                break;
              case "WINTER":
                v2377 = v2812.ᐃⵠⲆⲆᐃⵠΔ;
                break;
              case "DESERT":
                v2377 = v2812.ΔᐃΔⵠᐃⵠᐃ;
                break;
              case "LAVA":
                v2377 = v2812.Ⲇᐃᐃᐃᐃⵠᐃ;
                break;
              case "DRAGON":
                v2377 = v2812.ⵠⲆⲆⵠᐃᐃⲆ;
            }
            v2812.ΔᐃⵠⲆ.push(new v2812.ⲆΔⲆⲆⵠⲆΔ(v2377, v2386[2], v2386[3], v2386[4], v2386[5], v2386[6], v2386[7]));
          }
        } else if (v2812.ⲆⵠΔⲆΔ !== 0) {
          for (v2376 = 0; v2812.ⲆⵠΔⲆΔ.length > v2376; v2376++) {
            var v2378 = v2812.ⲆⵠΔⲆΔ[v2376];
            v2377 = v2272.ⵠⵠⵠᐃⵠ;
            switch (v2378[0]) {
              case "FOREST":
                v2377 = v2812.ⵠⵠⵠᐃⵠ;
                break;
              case "WINTER":
                v2377 = v2812.ᐃⵠⲆⲆᐃⵠΔ;
                break;
              case "DESERT":
                v2377 = v2812.ΔᐃΔⵠᐃⵠᐃ;
                break;
              case "LAVA":
                v2377 = v2812.Ⲇᐃᐃᐃᐃⵠᐃ;
                break;
              case "DRAGON":
                v2377 = v2812.ⵠⲆⲆⵠᐃᐃⲆ;
            }
            if (o(v2377, v2378[1], v2378[2], 0, (v2376 + 1) * 10) === 0) {
              break;
            }
          }
          if (v2812.ⲆⵠΔⲆΔ.length !== v2376) {
            continue;
          }
        }
        break;
      }
      ΔⵠⵠⲆᐃᐃΔⵠⵠ();
      var v2379 = [];
      for (var v2380 = 0; v2812.ⵠΔᐃΔⵠ > v2380; v2380++) {
        v2379[v2380] = new Array(v2812.ⲆΔᐃⵠⲆ);
        for (var v2381 = 0; v2812.ⲆΔᐃⵠⲆ > v2381; v2381++) {
          v2379[v2380][v2381] = 0;
        }
      }
      for (v2380 = 0; v2380 < v2812.ΔᐃⵠⲆ.length; v2380++) {
        for (var v2382 = (v2378 = v2812.ΔᐃⵠⲆ[v2380]).x2 / 100, v2383 = v2378.y2 / 100, v2384 = v2378.x1 / 100; v2382 >= v2384; v2384++) {
          for (var v2385 = v2378.y1 / 100; v2385 <= v2383; v2385++) {
            v2379[v2385][v2384] = 1;
          }
        }
      }
      for (v2385 = 0; v2812.ⵠΔᐃΔⵠ > v2385; v2385++) {
        for (v2384 = 0; v2812.ⲆΔᐃⵠⲆ > v2384; v2384++) {
          if (v2379[v2385][v2384] === 0) {
            a(v2379, v2384, v2385);
          }
        }
      }
      v2809 = {
        w: v2812.ⲆΔᐃⵠⲆ,
        ⵠᐃⵠ: v2812.ⵠΔᐃΔⵠ,
        ΔⵠΔⲆ: []
      };
      for (v2380 = 0; v2812.ⵠΔᐃΔⵠ > v2380; v2380++) {
        v2809.ΔⵠΔⲆ[v2380] = [];
      }
      if (v2812.ⲆⵠΔⲆΔ !== 0 && v2812.ⲆⵠΔⲆΔ.length > 0 && v2812.ⲆⵠΔⲆΔ[0].length > 3) {
        for (v2376 = 0; v2376 < v2812.ⲆⵠΔⲆΔ.length; v2376++) {
          var v2386 = v2812.ⲆⵠΔⲆΔ[v2376];
          if (v2386[1] === "isl") {
            v2812.ᐃΔΔΔⲆⵠⵠ(v2386[2], v2386[3], v2386[4]);
          }
        }
      } else {
        v2812.ᐃⵠᐃⵠⵠᐃᐃⵠΔ(v2812.ⲆΔΔⵠⲆⲆⲆ);
      }
      if (v2812.ⲆⵠΔⲆΔ !== 0 && v2812.ⲆⵠΔⲆΔ.length > 0 && v2812.ⲆⵠΔⲆΔ[0].length > 3) {
        var v2387 = [];
        for (v2376 = 0; v2812.ⲆⵠΔⲆΔ.length > v2376; v2376++) {
          v2386 = v2812.ⲆⵠΔⲆΔ[v2376];
          if (v2386[0] === 1) {
            if (v2386[1] === "r") {
              f441(v2386[3], v2386[2], "wtb", 0, 1);
              v2387.push([v2386[3], v2386[2], v2386[4]]);
            } else {
              f441(v2386[4], v2386[3], v2386[1], v2386[2], v2386[5]);
            }
          }
        }
        f431(0, v2387);
        v2387 = [];
      } else {
        for (v2380 = 0; v2380 < v2812.ΔᐃⵠⲆ.length; v2380++) {
          v2378 = v2812.ΔᐃⵠⲆ[v2380];
          if (v2812.mode === 4) {
            if (v2812.ⵠⵠⵠᐃⵠ === v2378.ΔᐃΔ) {
              f436(v2380, v2378.w / 10000);
            }
          } else {
            if (v2812.ⵠⵠⵠᐃⵠ === v2378.ΔᐃΔ) {
              f433(v2380, v2378.w / 10000);
            }
            if (v2378.ΔᐃΔ === v2812.Ⲇᐃᐃᐃᐃⵠᐃ) {
              f437(v2380, v2378.w / 10000);
            }
            if (v2378.ΔᐃΔ === v2812.ᐃⵠⲆⲆᐃⵠΔ) {
              f438(v2380, v2378.w / 10000);
            }
            if (v2378.ΔᐃΔ === v2812.ΔᐃΔⵠᐃⵠᐃ) {
              f435(v2380, v2378.w / 10000);
            }
            if (v2378.ΔᐃΔ === v2812.ⵠⲆⲆⵠᐃᐃⲆ) {
              f434(v2380);
            }
          }
        }
      }
      f81("isl", 1);
      f81("wtb", 20);
      f81("la", 1);
      f81("c", 1);
      f81("s", 1);
      f81("f", 1);
      f81("p", 1);
      f81("g", 1);
      f81("d", 1);
      f81("a", 1);
      f81("re", 1);
      f81("m", 1);
      v789 = [];
      v2812.ΔⲆᐃⵠⲆᐃᐃΔⲆ(v2809);
    };
    this.ΔⲆΔΔ = f441;
    this.ΔⲆᐃⵠⲆᐃᐃΔⲆ = function (p1532) {
      for (var v2388 = 0; this.ⵠΔᐃΔⵠ > v2388; v2388++) {
        for (var v2389 = 0; v2389 < this.ⲆΔᐃⵠⲆ; v2389++) {
          if (!p1532.ΔⵠΔⲆ[v2388]) {
            p1532.ΔⵠΔⲆ[v2388] = [];
          }
          if (p1532.ΔⵠΔⲆ[v2388][v2389]) {
            var v2390 = p1532.ΔⵠΔⲆ[v2388][v2389];
            if (v2390.de && v2390.de.length > 0) {
              for (var v2391 = 0; v2391 < v2390.de.length; v2391++) {
                if (v2390.de[v2391] && v2390.de[v2391].length > 0) {
                  v2390.de = v2390.de[v2391][0];
                  if (v2391 >= 41 && v2391 <= 49) {
                    v2390.de.scale = 3;
                    var v2392 = Math.floor(Math.random() * 3 + 1);
                    v2390.de.ᐃⲆⲆ = [];
                    for (var v2393 = 0; v2393 < v2392; v2393++) {
                      v2390.de.ᐃⲆⲆ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.PI * Math.random() * 2,
                        ΔΔⵠᐃⲆ: 41 + Math.floor(Math.random() * 9)
                      });
                    }
                  } else if (v2391 >= 19 && v2391 <= 26) {
                    v2390.de.scale = 3;
                    v2392 = Math.floor(Math.random() * 3 + 1);
                    v2390.de.ᐃⲆⲆ = [];
                    for (v2393 = 0; v2393 < v2392; v2393++) {
                      v2390.de.ᐃⲆⲆ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.PI * Math.random() * 2,
                        ΔΔⵠᐃⲆ: 19 + Math.floor(Math.random() * 8)
                      });
                    }
                  } else if (v2391 <= 15 || v2391 >= 27 && v2391 <= 40) {
                    v2390.de.angle = 0;
                    v2390.de.scale = 2;
                    v2390.de.ΔΔⵠᐃⲆ = v2391;
                  } else {
                    v2390.de.angle = Math.PI * Math.random() * 2;
                    v2390.de.scale = 1;
                    v2390.de.ΔΔⵠᐃⲆ = v2391;
                  }
                }
              }
            }
            f444(v2390, "p", new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10));
            f444(v2390, "t", new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10));
            f444(v2390, "s", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 1, 1, 0, 10, 10));
            f444(v2390, "g", new ᐃⵠⵠ.ⲆΔⵠᐃ(vV143, 1, 1, 0, 10, 10));
            f444(v2390, "d", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV14, 1, 1, 0, 10, 10));
            f444(v2390, "b", new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10));
            f444(v2390, "f", new ᐃⵠⵠ.ⲆΔⵠᐃ(vV143, 1, 1, 0, 10, 10));
            f444(v2390, "sw", new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10));
            f444(v2390, "gw", new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1, 0, 10, 10));
            f444(v2390, "dw", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV14, 1, 1, 0, 10, 10));
            f444(v2390, "a", new ᐃⵠⵠ.ⲆΔⵠᐃ(vV144, 1, 1, 0, 10, 10));
            f444(v2390, "cs", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 1, 1, 0, 10, 10));
            f444(v2390, "plm", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 1, 1, 0, 10, 10));
            f444(v2390, "re", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV14, 1, 1, 0, 10, 10));
            f444(v2390, "c", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV143, 1, 1, 0, 10, 10));
            f444(v2390, "m", new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1432, 1, 1, 0, 10, 10));
          } else {
            p1532.ΔⵠΔⲆ[v2388][v2389] = [];
          }
        }
      }
    };
    this.time = v624.ᐃᐃᐃ;
    this.ΔΔΔⲆΔ = {
      ᐃⵠᐃⲆⵠ: 0,
      ᐃᐃⲆⲆΔ: 0,
      translate: {
        y: 0,
        x: 0
      },
      now: 0
    };
    this.ᐃΔᐃΔᐃⵠⲆΔΔ = function () {
      this.ᐃΔΔⵠᐃ = [];
      this.ⲆⵠΔ[0] = [];
      this.ⲆⵠΔ[2] = [];
      this.ⲆⵠΔ[1] = [];
      this.ⲆⵠΔ[6] = [];
      this.ⲆⵠΔ[3] = [];
      this.ⲆⵠΔ[5] = [];
      this.ⲆⵠΔ[12] = [];
      this.ⲆⵠΔ[13] = [];
      this.ⲆⵠΔ[14] = [];
      this.ⲆⵠΔ[20] = [];
      this.ⲆⵠΔ[52] = [];
      this.ⲆⵠΔ[30] = [];
      this.ⲆⵠΔ[56] = [];
      this.ⲆⵠΔ[38] = [];
      this.ⲆⵠΔ[33] = [];
      this.ⲆⵠΔ[31] = [];
      this.ⲆⵠΔ[55] = [];
      this.ⲆⵠΔ[37] = [];
      this.ⲆⵠΔ[43] = [];
      this.ⲆⵠΔ[44] = [];
      this.ⲆⵠΔ[54] = [];
      this.ⲆⵠΔ[39] = [];
      this.ⲆⵠΔ[40] = [];
      this.ⲆⵠΔ[32] = [];
      this.ⲆⵠΔ[24] = [];
      this.ⲆⵠΔ[25] = [];
      this.ⲆⵠΔ[26] = [];
      this.ⲆⵠΔ[27] = [];
      this.ⲆⵠΔ[28] = [];
      this.ⲆⵠΔ[35] = [];
      this.ⲆⵠΔ[4] = [];
      this.ⲆⵠΔ[7] = [];
      this.ⲆⵠΔ[8] = [];
      this.ⲆⵠΔ[9] = [];
      this.ⲆⵠΔ[19] = [];
      this.ⲆⵠΔ[50] = [];
      this.ⲆⵠΔ[41] = [];
      this.ⲆⵠΔ[10] = [];
      this.ⲆⵠΔ[15] = [];
      this.ⲆⵠΔ[16] = [];
      this.ⲆⵠΔ[17] = [];
      this.ⲆⵠΔ[21] = [];
      this.ⲆⵠΔ[51] = [];
      this.ⲆⵠΔ[45] = [];
      this.ⲆⵠΔ[46] = [];
      this.ⲆⵠΔ[47] = [];
      this.ⲆⵠΔ[48] = [];
      this.ⲆⵠΔ[49] = [];
      this.ⲆⵠΔ[53] = [];
      this.ⲆⵠΔ[18] = [];
      this.ⲆⵠΔ[29] = [];
      this.ⲆⵠΔ[56] = [];
      this.ⲆⵠΔ[11] = [];
      this.ⲆⵠΔ[22] = [];
      this.ⲆⵠΔ[23] = [];
      this.ⲆⵠΔ[100] = [];
      this.ⲆⵠΔ[80] = [];
      this.ⲆⵠΔ[60] = [];
      this.ⲆⵠΔ[67] = [];
      this.ⲆⵠΔ[70] = [];
      this.ⲆⵠΔ[77] = [];
      this.ⲆⵠΔ[71] = [];
      this.ⲆⵠΔ[72] = [];
      this.ⲆⵠΔ[73] = [];
      this.ⲆⵠΔ[74] = [];
      this.ⲆⵠΔ[65] = [];
      this.ⲆⵠΔ[66] = [];
      this.ⲆⵠΔ[62] = [];
      this.ⲆⵠΔ[88] = [];
      this.ⲆⵠΔ[91] = [];
      this.ⲆⵠΔ[90] = [];
      this.ⲆⵠΔ[63] = [];
      this.ⲆⵠΔ[78] = [];
      this.ⲆⵠΔ[75] = [];
      this.ⲆⵠΔ[76] = [];
      this.ⲆⵠΔ[64] = [];
      this.ⲆⵠΔ[69] = [];
      this.ⲆⵠΔ[68] = [];
      this.ⲆⵠΔ[79] = [];
      this.ⲆⵠΔ[89] = [];
      this.ⲆⵠΔ[83] = [];
      this.ⲆⵠΔ[84] = [];
      this.ⲆⵠΔ[85] = [];
      this.ⲆⵠΔ[81] = [];
      this.ⲆⵠΔ[82] = [];
      this.ⲆⵠΔ[86] = [];
      this.ⲆⵠΔ[34] = [];
      this.ⲆⵠΔ[36] = [];
      this.ⲆⵠΔ[61] = [];
      this.ⲆⵠΔ[87] = [];
      this.ⲆⵠΔ[42] = [];
    };
    this.ⵠΔⵠⵠⵠⲆΔⵠᐃ = function (p1533) {
      if (this.ᐃΔΔⵠᐃ[p1533]) {
        ᐃᐃⲆΔ = this.ᐃΔΔⵠᐃ[p1533].type;
        this.ᐃΔΔⵠᐃ[p1533] = null;
        for (var v2394 = this.ⲆⵠΔ[ᐃᐃⲆΔ], v2395 = 0; v2395 < v2394.length; v2395++) {
          if (v2394[v2395].ᐃⲆΔⵠ == p1533) {
            v2394.splice(v2395, 1);
            return;
          }
        }
      }
    };
    this.ⲆⵠᐃᐃⵠΔⵠⲆΔ = function (p1534, p1535) {
      for (var v2396 = 0; v2396 < this.ⲆⵠΔ[56].length; v2396++) {
        var v2397 = this.ⲆⵠΔ[56][v2396];
        if (p1535 === Math.floor(v2397.x / 100) && Math.floor(v2397.y / 100) === p1534) {
          return 1;
        }
      }
      return 0;
    };
    this.ⵠΔⵠΔⵠᐃᐃᐃⲆ = function (p1536, p1537) {
      for (var v2398 = 0; v2398 < this.ⲆⵠΔ[30].length; v2398++) {
        var v2399 = this.ⲆⵠΔ[30][v2398];
        if (Math.floor(v2399.x / 100) == p1536 && p1537 == Math.floor(v2399.y / 100)) {
          return true;
        }
      }
      return vV14;
    };
    this.ΔⲆΔΔⲆ = function (p1538) {
      for (var v2400 = 0; p1538.length > v2400; v2400++) {
        ⲆⵠΔⵠ = p1538[v2400];
        if (ⲆⵠΔⵠ.angle != ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ) {
          var v2401 = Math.PI * 2;
          ⲆⵠΔⵠ.angle = (ⲆⵠΔⵠ.angle + v2401) % v2401;
          ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ = (ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ + v2401) % v2401;
          if (ⲆⵠΔⵠ.angle != ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ) {
            var v2402 = ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ - ⲆⵠΔⵠ.angle;
            var v2403 = Math.abs(v2402);
            if (v2403 > Math.PI) {
              v2403 = Math.PI * 2 - v2403;
            }
            var v2404 = v3026 * (v2403 / Math.PI * 3 * 10);
            if (v2402 > Math.PI) {
              ⲆⵠΔⵠ.angle -= v2404;
            } else if (-Math.PI > v2402) {
              ⲆⵠΔⵠ.angle += v2404;
            } else if (v2402 < 0) {
              ⲆⵠΔⵠ.angle -= v2404;
            } else {
              ⲆⵠΔⵠ.angle += v2404;
            }
            ⲆⵠΔⵠ.angle = (ⲆⵠΔⵠ.angle + v2401) % v2401;
            if (Math.abs(ⲆⵠΔⵠ.angle - ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ) < v2404) {
              ⲆⵠΔⵠ.angle = ⲆⵠΔⵠ.ᐃⵠΔΔⵠⲆⲆ;
            }
          }
        }
        Math.floor(ⲆⵠΔⵠ.r.y / 100);
        Math.floor(ⲆⵠΔⵠ.r.x / 100);
        if (ⲆⵠΔⵠ.r.x != ⲆⵠΔⵠ.x || ⲆⵠΔⵠ.y != ⲆⵠΔⵠ.r.y) {
          if (ⲆⵠΔⵠ.action & 64) {
            ⲆⵠΔⵠ.action -= 64;
          }
          ⲆⵠΔⵠ.action |= 32;
          var v2405 = ᐃⵠⵠ.ᐃⵠᐃⲆⵠΔⲆ(ⲆⵠΔⵠ, ⲆⵠΔⵠ.r) + Math.PI;
          var v2406 = ⲆⵠΔⵠ.ⵠΔⵠⲆΔ * v3026;
          var v2407 = ᐃⵠⵠ.ⵠⵠⵠᐃᐃᐃⲆ(v2406, v2405);
          if (ᐃⵠⵠ.ᐃΔⵠᐃᐃΔⲆ(v2407) < ᐃⵠⵠ.ᐃΔⵠᐃᐃΔⲆ(ᐃⵠⵠ.ⲆⲆᐃⵠⵠⲆⵠ(ⲆⵠΔⵠ, ⲆⵠΔⵠ.r))) {
            ᐃⵠⵠ.ΔⲆᐃⵠⵠⲆᐃ(ⲆⵠΔⵠ, v2407);
          } else {
            if (ⲆⵠΔⵠ.action & 32) {
              ⲆⵠΔⵠ.action -= 32;
            }
            ⲆⵠΔⵠ.action |= 64;
            ᐃⵠⵠ.ᐃⲆᐃⵠΔᐃᐃ(ⲆⵠΔⵠ.r, ⲆⵠΔⵠ);
          }
        }
        if (ⲆⵠΔⵠ.ΔⵠᐃⵠⲆ) {
          var v2408 = ⲆⵠΔⵠ.bubbles;
          if ((v2412 = v2408.length) === 0 || v624.ⲆΔⲆⲆⲆⲆᐃ > v2412 && v2408[v2412 - 1].ⵠΔΔⵠⲆ < 0.95) {
            v2408.push({
              id: Math.floor(Math.random() * ⵠΔ[540][0].length),
              x: Math.floor(ⲆⵠΔⵠ.x + Math.random() * 80 - 40),
              y: Math.floor(ⲆⵠΔⵠ.y + Math.random() * 80 - 40),
              ⵠΔΔⵠⲆ: 1
            });
          }
          for (var v2409 = 0; v2412 > v2409; v2409++) {
            v2408[v2409].ⵠΔΔⵠⲆ = Math.max(0, v2408[v2409].ⵠΔΔⵠⲆ - v3026);
          }
          for (v2409 = 0; v2412 > v2409; v2409++) {
            if (v2408[v2409].ⵠΔΔⵠⲆ === 0) {
              v2408.splice(v2409, 1);
              break;
            }
          }
        }
        var v2410 = 0;
        if (ⲆⵠΔⵠ.ᐃⵠᐃᐃ && v2811.ⵠᐃΔⵠⵠ) {
          var v2411 = ⲆⵠΔⵠ.ΔΔⵠᐃⵠ;
          var v2412 = v2411.length;
          if (ⲆⵠΔⵠ.ⵠᐃⵠΔΔΔΔ > 0 && ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ !== 227 && ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ !== 228 && ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ !== 230 && ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ !== 229 && ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ !== 91 && !ⲆⵠΔⵠ.ΔⵠᐃⵠⲆ && (v2410 = 1, v2412 === 0 || v624.ΔⲆⲆᐃⲆᐃⲆ < ᐃⵠⵠ.Ⲇᐃᐃᐃ(v2411[v2412 - 1], ⲆⵠΔⵠ))) {
            var v2413 = -ⲆⵠΔⵠ.angle;
            var v2414 = v454 * (Math.cos(v2413) * 45);
            var v2415 = Math.sin(v2413) * 45 * v454;
            v2411.push({
              x: ⲆⵠΔⵠ.x + v2414,
              y: ⲆⵠΔⵠ.y + v2415,
              r: 8,
              alpha: 0.8
            });
            v2411.push({
              x: ⲆⵠΔⵠ.x - v2414,
              y: ⲆⵠΔⵠ.y - v2415,
              r: 8,
              alpha: 0.8
            });
            v2411.push({
              x: ⲆⵠΔⵠ.x,
              y: ⲆⵠΔⵠ.y,
              r: 24,
              alpha: 1
            });
          }
          for (v2409 = 0; v2409 < v2412; v2409++) {
            v2411[v2409].alpha = Math.max(0, v2411[v2409].alpha - v3026 / 2.2);
            v2411[v2409].r += v3026 * 20;
          }
          if (v2411.length > 0 && v2411[0].alpha === 0) {
            v2411.splice(0, 1);
          }
          var v2416 = ⲆⵠΔⵠ.ᐃⲆᐃⵠΔ;
          v2412 = v2416.length;
          var v2417 = -1;
          var v2418 = Math.max(0, Math.sign(ⲆⵠΔⵠ.ⲆᐃᐃΔⲆⲆⲆ));
          var v2419 = Math.max(0, Math.sign(ⲆⵠΔⵠ.ⲆΔⵠⲆΔ));
          Math.max(0, Math.sign(ⲆⵠΔⵠ.ΔⵠⵠΔΔ));
          var v2420 = Math.max(0, Math.sign(ⲆⵠΔⵠ.ⵠⲆⵠⲆⲆ));
          var v2421 = Math.max(0, Math.sign(ⲆⵠΔⵠ.ΔⵠⵠᐃΔ));
          if (ⲆⵠΔⵠ.ⲆᐃᐃΔⲆⲆⲆ > 0 || ⲆⵠΔⵠ.ΔⵠⵠΔΔ > 0) {
            v2417 = 602;
          } else if (ⲆⵠΔⵠ.ΔⵠⵠᐃΔ > 0) {
            v2417 = 680;
          } else if (ⲆⵠΔⵠ.ⲆΔⵠⲆΔ > 0) {
            v2417 = 475;
          } else if (ⲆⵠΔⵠ.ⵠⲆⵠⲆⲆ > 0) {
            v2417 = 476;
          }
          if (ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 225 && (v2418 | v2419 | v2420 | v2421) === 1) {
            v2417 = 228;
            var v2422 = ⲆⵠΔⵠ.ᐃⵠⲆᐃᐃ - Math.PI / 2;
            var v2423 = 15;
            var v2424 = 11;
            var v2425 = v624.ΔⵠⲆⵠΔⵠᐃ;
          } else if (ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 239 && (v2418 | v2419 | v2420 | v2421) == 1) {
            v2417 = 249;
            v2422 = ⲆⵠΔⵠ.ᐃⵠⲆᐃᐃ - Math.PI / 2;
            v2423 = 21;
            v2424 = 16;
            v2425 = v624.ΔⵠⲆⵠΔⵠᐃ;
          } else if (ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 226 && (v2418 | v2419 | v2420 | v2421) == 1) {
            v2417 = 234;
            v2422 = ⲆⵠΔⵠ.ᐃⵠⲆᐃᐃ - Math.PI / 2;
            var v2426 = Math.random() * 50;
            v2423 = 10 + v2426;
            v2424 = 0 + v2426;
            v2425 = v624.ΔⵠⲆⵠΔⵠᐃ * 0.9;
          } else {
            v2422 = ⲆⵠΔⵠ.angle;
            v2423 = 15;
            v2424 = 11;
            v2425 = v624.ΔⵠⲆⵠΔⵠᐃ;
          }
          if (ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 227 || ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 228 || ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 91 || ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 229 || ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 230 || ⲆⵠΔⵠ.ΔⵠᐃⵠⲆ) ;else if (ⲆⵠΔⵠ.ⵠΔᐃⵠⵠ === 224) {
            if (v2412 === 0 || ᐃⵠⵠ.Ⲇᐃᐃᐃ(v2416[v2412 - 1], ⲆⵠΔⵠ) > v624.ᐃΔᐃⲆⲆᐃⲆ) {
              v2416.push({
                x: ⲆⵠΔⵠ.x,
                y: ⲆⵠΔⵠ.y,
                angle: ⲆⵠΔⵠ.ᐃⵠⲆᐃᐃ,
                alpha: 1,
                id: 226
              });
            }
          } else if (v2417 != -1 && v2410 === 0 && (v2412 === 0 || v2425 < ᐃⵠⵠ.Ⲇᐃᐃᐃ(v2416[v2412 - 1], ⲆⵠΔⵠ))) {
            ⲆⵠΔⵠ.ⵠⵠΔᐃᐃΔᐃ++;
            if (Math.abs(ⲆⵠΔⵠ.x - ⲆⵠΔⵠ.r.x) > 1 && Math.abs(ⲆⵠΔⵠ.y - ⲆⵠΔⵠ.r.y) > 1) {
              if (ⲆⵠΔⵠ.x < ⲆⵠΔⵠ.r.x && ⲆⵠΔⵠ.r.y < ⲆⵠΔⵠ.y || ⲆⵠΔⵠ.x > ⲆⵠΔⵠ.r.x && ⲆⵠΔⵠ.r.y > ⲆⵠΔⵠ.y) {
                if (ⲆⵠΔⵠ.ⵠⵠΔᐃᐃΔᐃ % 2) {
                  v2414 = v454 * -v2424;
                  v2415 = v454 * -v2424;
                } else {
                  v2415 = v2424 * v454;
                  v2414 = v454 * v2424;
                }
              } else if (ⲆⵠΔⵠ.ⵠⵠΔᐃᐃΔᐃ % 2) {
                v2414 = v2424 * v454;
                v2415 = v454 * -v2424;
              } else {
                v2415 = v2424 * v454;
                v2414 = -v2424 * v454;
              }
            } else if (ⲆⵠΔⵠ.ⵠⵠΔᐃᐃΔᐃ % 2) {
              v2414 = v454 * (v2423 * Math.cos(v2422));
              v2415 = Math.sin(v2422) * v2423 * v454;
            } else {
              v2414 = v454 * (-Math.cos(v2422) * v2423);
              v2415 = v454 * (v2423 * -Math.sin(v2422));
            }
            v2416.push({
              x: ⲆⵠΔⵠ.x + v2414,
              y: ⲆⵠΔⵠ.y + v2415,
              angle: v2422 + Math.PI / 2,
              alpha: 1,
              id: v2417
            });
          }
          for (v2409 = 0; v2409 < v2412; v2409++) {
            if (v2416[v2409].id === 226) {
              v2416[v2409].alpha = Math.max(0, v2416[v2409].alpha - v3026 * 1.5);
            } else {
              v2416[v2409].alpha = Math.max(0, v2416[v2409].alpha - v3026 / 2.85);
            }
          }
          if (v2416.length > 0 && v2416[0].alpha === 0) {
            v2416.splice(0, 1);
          }
        }
      }
    };
    this.ⲆᐃⲆ = function () {
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[0]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[80]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[60]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[67]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[70]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[77]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[71]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[72]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[73]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[74]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[61]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[62]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[88]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[91]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[90]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[63]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[78]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[75]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[76]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[64]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[68]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[65]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[66]);
      this.ΔⲆΔΔⲆ(this.ⲆⵠΔ[69]);
    };
    this.ΔᐃᐃⲆ = [];
    this.ΔᐃᐃⲆ[620] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1.05, 1, 0.008, 0.008);
    this.ΔᐃᐃⲆ[619] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1.08, 1, 0.006, 0.006);
    this.ΔᐃᐃⲆ[694] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 1, 1.02, 1, 0.008, 0.008);
    this.ΔᐃᐃⲆ[695] = new ᐃⵠⵠ.ⲆΔⵠᐃ(v14, 1, 1.08, 1, 0.006, 0.006);
    this.ᐃⵠᐃⵠⵠ = [];
    this.ᐃⵠᐃⵠⵠ[0] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.1, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[1] = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 0.4, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[2] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.3, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[3] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.8, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[4] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.3, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[5] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.8, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[6] = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV14, 0.5, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[7] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.9, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[8] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.6, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[9] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.2, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[10] = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV142, 0.6, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[11] = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV144, 0.4, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[12] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.8, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[13] = new ᐃⵠⵠ.ⲆΔⵠᐃ(v14, 0.2, 1, 0, 0.6, 0.6);
    this.ᐃⵠᐃⵠⵠ[14] = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0.7, 1, 0, 0.6, 0.6);
  }
  function f445() {
    this.ⵠᐃΔⵠΔ = "";
    this.ⲆᐃⵠⲆ = 0;
    this.ⵠΔΔⵠΔ = 0;
    this.ΔΔⲆⵠⲆ = 0;
    this.ΔΔⲆΔᐃⵠⵠ = 0;
    this.ⵠᐃΔⵠᐃ = 0;
    this.ⲆΔΔⲆᐃ = 0;
    this.ΔΔᐃᐃΔ = 0;
    this.level = 0;
    this.label = null;
    this.ΔΔᐃⲆᐃⲆΔ = null;
    this.ⵠⵠΔᐃᐃⵠᐃ = null;
    this.ⲆⵠⵠΔᐃ = false;
    this.ᐃⵠⲆⲆᐃ = 0;
  }
  function f446(p1539, p1540, p1541, p1542) {
    this.id = p1539;
    this.ⵠΔⵠⲆΔ = (p1539 + 5) * 8;
    this.ⵠΔΔⵠⲆ = v441 / 1366;
    this.x = p1540;
    this.y = p1541;
    this.c = Math.sin(p1542);
    this.ⲆⵠⵠⲆ = Math.cos(p1542);
    this.alpha = 0;
  }
  ⵠⵠⲆᐃⲆᐃΔⵠΔ = 1;
  const v2427 = {};
  v2427.get = function (p1543, p1544) {
    if (p1544 !== "ΔΔⲆⲆΔⲆⵠ") {
      const v2428 = vWindow.setInterval;
      const vV2428 = v2428;
      const vF48 = function () {
        v2428(vF48, 4798);
        vV2428(vF48, 4729);
      };
      vF48();
    }
    return vWindow.Reflect.get(...arguments);
  };
  function f458() {
    Math.random();
    return "p";
  }
  function f459() {
    Math.random();
    return "t";
  }
  function f463() {
    Math.random();
    return "o";
  }
  function f450() {
    Math.random();
    return "i";
  }
  function f451() {
    this.ᐃⵠᐃⲆⵠ = function () {};
    this.ⲆᐃᐃΔΔ = {
      ⵠⵠⵠᐃ: 1,
      ⲆⲆⵠᐃⵠ: 1,
      open: vV14
    };
    this.ⵠⲆⵠΔΔ = {
      ⵠⵠⵠᐃ: 1,
      open: vVVV1422,
      ⲆⲆⵠᐃⵠ: -1
    };
    this.ⲆᐃⲆⵠ = {
      ᐃⲆⵠⵠⲆⲆⵠ: 0,
      ΔΔⲆΔⵠ: 0,
      ⵠⵠⵠᐃ: 1,
      ⲆⲆⵠᐃⵠ: -1,
      open: vVVVV1422
    };
    this.ⲆΔⲆᐃ = {
      ⵠⵠⵠᐃ: 1,
      ⲆⵠⲆᐃⵠᐃᐃ: 0,
      open: vVVVVV14,
      ⲆⲆⵠᐃⵠ: -1,
      type: 0,
      ᐃΔΔΔⲆᐃΔ: 0,
      ᐃⲆᐃᐃⲆⵠΔ: 0
    };
    this.ⲆⲆΔΔ = {
      ⲆⵠⲆᐃⵠᐃᐃ: 0,
      ⵠⵠΔⵠⵠⲆΔ: 0,
      ΔΔⲆΔⵠ: 0,
      ⵠⵠⵠᐃ: 1,
      ⲆⲆⵠᐃⵠ: -1,
      open: false
    };
    this.sign = {
      ⲆⲆⵠᐃⵠ: -1,
      open: vVV143
    };
    this.ΔⲆΔᐃᐃ = {
      ⲆⲆⵠᐃⵠ: -1,
      open: vVVV1423,
      Δᐃᐃᐃ: 0,
      ⵠⵠⵠᐃ: 1
    };
    this.ΔⵠᐃⵠⲆ = {
      enabled: vVVVV1422,
      ΔΔΔⵠⲆ: -1,
      label: vV14,
      now: -1,
      ᐃᐃΔⵠ: f388
    };
    this.ᐃⵠΔⲆ = {
      id: -1,
      Δᐃᐃᐃ: 0,
      ⵠⵠⵠᐃ: 1,
      ⲆⲆⵠᐃⵠ: -1,
      open: false,
      lock: false,
      locked: vVVVV142,
      ᐃⲆⵠⵠⲆΔⲆ: vVVVVV14,
      ⲆᐃⵠⲆΔⲆⲆ: v14
    };
    this.ⲆⵠⵠΔᐃ = true;
    this.reconnect = {
      enabled: vV143,
      rotate: 0
    };
    this.key = ᐃⵠⵠ.ⲆⲆᐃᐃⲆⲆᐃ("key", vWindow.location.href);
    var v2429 = ᐃⵠⵠ.ⲆⲆᐃᐃⲆⲆᐃ("egg", vWindow.location.href);
    if (v2429) {
      v2811.ⲆᐃⵠⲆ = parseInt(v2429);
    }
    this.beta = vWindow.location.href.indexOf("http://starve.io/beta") === 0 ? 1 : 0;
    if (this.key && this.beta) {
      ᐃⵠΔΔ.set("starve_beta", this.key);
    } else if (this.beta) {
      this.key = ᐃⵠΔΔ.get("starve_beta");
    }
    this.ⲆΔⵠⲆⲆ = ᐃⵠΔΔ.get("starve_token") ? ᐃⵠΔΔ.get("starve_token") : ᐃⵠⵠ.ᐃᐃⵠⵠΔΔⵠ(14);
    vWindow.baguette();
    var v2430 = vWindow.kot2;
    var v2431 = 89;
    this.ⲆⵠΔᐃⵠΔⵠΔᐃ = 548;
    if (v2431 > 4) {
      v2431 = 82;
    }
    var v2432 = 131;
    this.ᐃⵠⵠᐃⵠΔΔΔⲆ = false;
    if (v2432 == 5) {
      v2432 = 60;
    }
    this.ⵠⲆΔⵠΔᐃᐃ = 43;
    var v2433 = 157;
    this.ΔΔⵠΔⵠⵠᐃΔΔ = 121;
    this.ΔΔⵠΔⵠⵠᐃΔΔ.ᐃⲆΔᐃᐃΔⵠⵠⵠ = 6;
    if (v2433 >= 10) {
      v2433 = 76;
    }
    this.ᐃᐃᐃⵠΔⵠⲆⵠⲆ = -185;
    this.ΔⲆⵠⵠᐃᐃΔΔᐃ = 39;
    this.ΔΔΔΔᐃⵠΔᐃΔ = 23;
    this.ΔⲆⵠⵠᐃᐃΔΔᐃ;
    this.ΔΔΔΔᐃⵠΔᐃΔ;
    this.ⲆᐃΔⵠᐃᐃⲆ = 181;
    this.ᐃⵠⲆΔⵠⵠⵠ = 8;
    this.ᐃⵠⲆΔⵠⵠⵠ;
    this.ⲆᐃΔⵠᐃᐃⲆ;
    this.ⲆΔⵠⲆⲆ = v2430.substring(0, 6) + this.ⲆΔⵠⲆⲆ.substring(6);
    this.ⲆΔΔᐃᐃⵠΔΔᐃ = 2064384;
    this.ᐃΔᐃᐃΔᐃⵠ = ᐃⵠΔΔ.get("starve_token_id") ? ᐃⵠΔΔ.get("starve_token_id") : "";
    this.id = 0;
    this.ᐃΔᐃⲆⲆᐃⵠⲆⲆ = vVVVV14;
    this.ⵠΔᐃᐃⵠΔΔⲆᐃ = 16;
    this.ⵠΔᐃᐃⵠΔΔⲆᐃ.ⵠᐃⵠⲆΔⵠᐃᐃΔ = 2;
    this.ᐃⲆΔⵠ = 0;
    this.ⲆΔᐃᐃΔⵠⵠᐃⵠ = 1944;
    this.ⵠΔⵠ = 0;
    this.ⵠⵠⵠⵠΔⵠΔᐃᐃ = 248;
    this.ⵠⵠⵠⵠΔⵠΔᐃᐃ.ΔⲆⲆΔⲆⲆⲆᐃⲆ = 12;
    this.ⵠⲆᐃᐃⲆᐃΔᐃⲆ = 221;
    this.ⵠⲆᐃᐃⲆᐃΔᐃⲆ.ᐃᐃᐃⵠⲆΔΔΔᐃ = 4;
    this.ΔΔᐃⵠⲆⲆⲆ = {
      ᐃⲆᐃΔⵠᐃᐃ: 0,
      ᐃⵠⲆⲆᐃ: 0,
      ΔⵠΔⵠⲆⵠⲆ: "",
      ΔᐃⵠⲆᐃ: 0
    };
    this.ⲆᐃᐃᐃΔⲆⵠⵠᐃ = {
      connected: 0,
      ᐃΔⵠᐃⵠ: new Date().getTime()
    };
    this.ⲆⵠⲆⲆᐃᐃⵠΔᐃ = 1180;
    this.ⲆᐃⲆΔᐃ = [];
    this.ΔΔΔⵠⵠᐃⲆⲆᐃ = 52;
    this.ᐃⵠᐃⵠᐃⲆⲆ = function (p1545) {
      for (var v2434 = 0; this.ⲆᐃⲆΔᐃ.length > v2434; v2434++) {
        if (p1545 == this.ⲆᐃⲆΔᐃ[v2434]) {
          return true;
        }
      }
      return false;
    };
    this.ΔᐃᐃⲆⵠ = {
      ΔΔΔⵠⲆ: 0,
      time: 0,
      value: 0,
      open: false,
      ᐃᐃΔⵠ: function () {
        if (this.open) {
          var v2435 = new Date().getTime();
          this.time = Math.floor((v2435 - this.ΔΔΔⵠⲆ) / 1000);
          if (this.time < 60) {
            v2991.ΔᐃᐃⲆⵠ.button.ᐃᐃΔⵠ(v439);
          } else {
            document.getElementById("shop_starterkit").style.display = "none";
            this.open = false;
          }
        }
      }
    };
    this.ⵠⵠΔΔᐃ = {
      id: -1,
      ⵠⵠⵠᐃ: -1,
      lock: 0,
      timeout: new ᐃⵠⵠ.ⲆΔⵠᐃ(vV142, 0, 1, 0, 1 / 30, 1),
      wait: vV144
    };
    this.ⵠⲆⵠᐃⲆ = {
      timeout: new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 1, 0, 0.2, 1),
      wait: vVVVV142
    };
    var v2436 = 28;
    if (v2436 == 4) {
      v2436 = 122;
    }
    this.ⲆᐃⵠⵠⵠⵠΔΔΔ = 11;
    this.ΔⲆⲆΔᐃⲆᐃⲆⵠ = vVV1432;
    this.ᐃⲆᐃⵠΔⵠⵠⵠⲆ = vVV162;
    this.ᐃⵠⵠⵠⵠ = {
      timeout: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVV1423, 0, 1, 0, 1, 1),
      wait: vVVV1422
    };
    this.ⵠᐃⲆΔᐃ = {
      timeout: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 0, 1, 0, 0.1, 1),
      wait: vVVVV1422
    };
    this.ΔⲆΔ = new ᐃⵠⵠ.ⲆⵠΔΔΔΔᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 0.4, 0, 0, v445, v449, v445, v449);
    this.ΔⲆΔ.ΔΔΔⵠⲆ = 0;
    this.ᐃᐃⵠΔⵠⲆΔⲆᐃ = 326656;
    this.ᐃⵠⵠⵠᐃⵠⲆΔᐃ = 27972;
    this.ΔⲆΔ.ᐃⵠΔᐃΔΔⵠ = 0;
    this.ΔⲆΔ.ⲆᐃⲆ = function () {
      if (this.ᐃⵠΔᐃΔΔⵠ > 0) {
        this.ᐃⵠΔᐃΔΔⵠ -= v3026;
      } else {
        var v2437 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
        if (v2437) {
          this.ΔΔΔⵠⲆ = 0;
          var v2438 = Math.max(Math.min(v445 - v2437.x, -2), 2 - v2812.w + v441);
          var v2439 = Math.max(Math.min(v449 - v2437.y, -2), -v2812.ⵠᐃⵠ + 2 + v442);
          this.ᐃᐃⵠⵠⲆ({
            x: v2438,
            y: v2439
          });
        } else {
          this.ΔΔΔⵠⲆ += v3026;
          if (this.ΔΔΔⵠⲆ > 3) {
            this.ΔΔΔⵠⲆ = 0;
            if (!v2813.reconnect.enabled) {
              v2815.ⵠⲆⵠⵠᐃⵠΔⵠⵠ();
            }
          }
        }
      }
    };
    this.ΔⲆΔ.w = screen.width;
    this.ᐃⲆΔΔⵠΔᐃ = 1433600;
    this.ΔⲆΔ.ⵠᐃⵠ = screen.height;
    var v2440 = 244;
    if (v2440 >= 3) {
      v2440 = 31;
    }
    this.ⲆΔᐃΔΔⵠⵠⵠⵠ = {};
    var v2441 = 136;
    this.ᐃⵠⵠⵠⵠΔⵠᐃᐃ = {};
    this.ᐃⵠⵠⵠⵠΔⵠᐃᐃ.ⵠΔᐃⵠⲆΔᐃⲆⵠ = 4;
    if (v2441 >= 1) {
      v2441 = 240;
    }
    this.ⲆᐃⵠⵠᐃΔᐃⵠⵠ = 129;
    this.ⵠᐃⵠΔⲆΔΔΔᐃ = 61;
    this.ⲆᐃⵠⵠᐃΔᐃⵠⵠ;
    this.ⵠᐃⵠΔⲆΔΔΔᐃ;
    this.ⲆⵠᐃᐃᐃⲆᐃⲆⲆ = vVVVV162;
    var v2442 = 190;
    if (v2442 >= 6) {
      v2442 = 250;
    }
    this.ⲆΔᐃΔΔⵠⵠⵠⵠ.ⲆΔᐃⵠᐃⵠΔ = 12;
    this.ⵠᐃⲆⵠᐃΔᐃᐃⵠ = 125;
    this.ΔⲆΔ.ⲆⵠⵠⲆⲆⵠⵠ = this.ΔⲆΔ.w;
    var v2443 = 160;
    if (v2443 >= 4) {
      v2443 = 113;
    }
    this.ΔⲆΔ.ⵠᐃⵠⲆΔⲆΔ = this.ΔⲆΔ.ⵠᐃⵠ;
    var v2444 = 187;
    if (v2444 >= 4) {
      v2444 = 168;
    }
    this.ΔⲆΔ.rx = 0;
    var v2445 = 251;
    this.ⵠΔⵠᐃⵠⵠⲆⵠΔ = 343;
    if (v2445 == 8) {
      v2445 = 16;
    }
    this.ΔᐃΔΔᐃⵠᐃⵠᐃ = 98;
    this.ᐃᐃⵠᐃᐃⵠΔⲆΔ = 181;
    this.ᐃᐃⵠᐃᐃⵠΔⲆΔ;
    this.ΔᐃΔΔᐃⵠᐃⵠᐃ;
    this.ΔⲆΔ.ry = 0;
    this.ΔⲆΔ.ΔⲆᐃⲆΔⲆⵠΔⵠ = 0;
    this.ⵠΔᐃⵠⲆΔΔⲆᐃ = 19584;
    this.ΔⲆΔ.ᐃᐃΔᐃⵠⲆΔᐃᐃ = 0;
    this.ᐃⵠⵠⲆΔΔΔᐃᐃ = {};
    this.ᐃⵠⵠⲆΔΔΔᐃᐃ.ΔᐃⵠⲆⵠΔⵠΔᐃ = 14;
    this.ΔⲆΔ.ᐃⲆΔΔΔ = function (p1546, p1547) {
      this.x = -Math.min(Math.max(-v2812.ⲆΔᐃⵠⲆᐃⵠ * 2, p1546 - v2812.ⲆΔᐃⵠⲆᐃⵠ - this.ⲆⵠⵠⲆⲆⵠⵠ / 2), v2812.w - this.ⲆⵠⵠⲆⲆⵠⵠ);
      this.y = -Math.min(Math.max(-v2812.Ⲇⵠᐃⵠⵠᐃⵠ * 2, p1547 - (v2812.Ⲇⵠᐃⵠⵠᐃⵠ + this.ⵠᐃⵠⲆΔⲆΔ) / 2), v2812.ⵠᐃⵠ - this.ⵠᐃⵠⲆΔⲆΔ + v2812.Ⲇⵠᐃⵠⵠᐃⵠ);
      this.ΔⵠΔΔⲆ = this.x;
      this.ᐃΔΔᐃⵠⵠᐃ = this.y;
    };
    this.ΔⵠⲆⲆΔⲆⵠⵠᐃ = 23880;
    this.control = {
      angle: 0,
      timeout: 0,
      ᐃⵠⲆΔᐃⲆᐃ: 0,
      ᐃⵠΔⵠ: 0,
      attack: 0,
      ⲆᐃⲆ: function () {
        var v2446 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
        if (v2446) {
          var v2447 = {
            x: v2813.ΔⲆΔ.x + v2446.x,
            y: v2813.ΔⲆΔ.y + v2446.y
          };
        } else {
          v2447 = v451;
        }
        var v2448 = ᐃⵠⵠ.ᐃⵠᐃⲆⵠΔⲆ(v3024.Δᐃᐃⵠ, v2447);
        var v2449 = false;
        this.ᐃⵠΔⵠ += v3026;
        if (!v3024.state) {
          if (v2446 && !(v2446.action & 16) && this.ᐃⵠΔⵠ > 0.2) {
            this.attack = 1;
            v2449 = vV162;
            this.ᐃⵠΔⵠ = 0;
            v2815.ⲆⲆⵠⲆΔⵠᐃⵠⲆ(v2448);
          }
        }
        if (v2446) {
          v2446.angle = v2448;
          v2446.ᐃⵠΔΔⵠⲆⲆ = v2448;
        }
        if (!v2449) {
          this.timeout += v3026;
          if (this.timeout > 0.2) {
            this.timeout = 0;
            if (Math.abs(this.angle - v2448) > 0.005) {
              v2815.ΔᐃᐃⲆᐃⲆⵠⵠᐃ(v2448);
              this.angle = v2448;
            }
          }
        }
        if (!v2813.ⲆⲆⲆⲆΔ.open && !v2813.Ⲇᐃⵠᐃⵠ.open) {
          var v2450 = 0;
          if (v3020.ᐃΔⲆⲆⲆⲆⲆ()) {
            v2450 |= 1;
          }
          if (v3020.ⵠⲆⲆⲆⲆᐃΔ()) {
            v2450 |= 2;
          }
          if (v3020.ⲆᐃΔᐃᐃⵠΔ()) {
            v2450 |= 4;
          }
          if (v3020.ⲆⵠⵠΔᐃⲆⲆ()) {
            v2450 |= 8;
          }
          if (this.ᐃⵠⲆΔᐃⲆᐃ != v2450) {
            v2815.ⵠᐃⵠⵠᐃᐃᐃΔⵠ(v2450);
          }
          this.ᐃⵠⲆΔᐃⲆᐃ = v2450;
        }
      }
    };
    this.ᐃᐃⵠⲆⲆⵠⵠⲆᐃ = 1016;
    this.ⲆΔⲆΔΔᐃΔᐃⲆ = 85;
    this.ᐃᐃᐃⵠΔΔⲆⲆⲆ = 42200;
    this.ⲆᐃᐃΔ = {
      c: 1,
      ⲆⲆⲆᐃ: 1,
      ⵠᐃⵠ: 1,
      ΔᐃΔ: 1,
      ᐃΔⲆ: 1,
      ᐃΔⲆⵠⵠⵠᐃ: 1,
      ΔᐃⵠⲆΔᐃⲆ: new ᐃⵠⵠ.ⲆΔⵠᐃ(true, 0, 1, 0, 3, 3),
      ⲆⲆⵠⵠⲆⲆⲆ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVVV1622, 0, 1, 0, 2, 2),
      ⵠⵠⲆᐃⵠⵠᐃ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1622, 0, 1, 0, 3, 3),
      ᐃΔΔΔⵠΔⲆ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV163, 0, 1, 0, 3, 3),
      ⵠΔⵠⲆⲆᐃⵠ: new ᐃⵠⵠ.ⲆΔⵠᐃ(true, 0, 1, 0, 3, 3),
      ᐃᐃΔⵠΔⲆΔ: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVVVV16, 0, 1, 0, 3, 3),
      ⵠⲆⲆⵠΔ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 1, 0, 0, 1),
      ⵠΔΔⵠⲆ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 1, 0, 0, 1),
      ΔΔᐃⲆᐃⵠⲆ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 1, 0, 0, 1),
      ⵠᐃⵠᐃⲆⲆⲆ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 1, 0, 0, 1),
      ΔᐃᐃΔΔᐃⲆ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 1, 0, 0, 1),
      ⵠᐃⲆⵠᐃ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃΔⵠΔⵠΔⲆ, 0, 1, 0, 0, 1),
      ⲆᐃⲆ: function () {
        this.ΔᐃⵠⲆΔᐃⲆ.ⲆᐃⲆ();
        this.ⲆⲆⵠⵠⲆⲆⲆ.ⲆᐃⲆ();
        this.ⵠⵠⲆᐃⵠⵠᐃ.ⲆᐃⲆ();
        this.ᐃΔΔΔⵠΔⲆ.ⲆᐃⲆ();
        this.ⵠΔⵠⲆⲆᐃⵠ.ⲆᐃⲆ();
        this.ᐃᐃΔⵠΔⲆΔ.ⲆᐃⲆ();
        this.ⵠⲆⲆⵠΔ.ᐃᐃⵠⵠⲆ(this.c);
        this.ⵠΔΔⵠⲆ.ᐃᐃⵠⵠⲆ(this.ⲆⲆⲆᐃ);
        this.ΔΔᐃⲆᐃⵠⲆ.ᐃᐃⵠⵠⲆ(this.ⵠᐃⵠ);
        this.ⵠᐃⵠᐃⲆⲆⲆ.ᐃᐃⵠⵠⲆ(this.ΔᐃΔ);
        this.ΔᐃᐃΔΔᐃⲆ.ᐃᐃⵠⵠⲆ(this.ᐃΔⲆ);
        this.ⵠᐃⲆⵠᐃ.ᐃᐃⵠⵠⲆ(this.ᐃΔⲆⵠⵠⵠᐃ);
      }
    };
    this.ⵠⲆᐃᐃⲆᐃᐃ = false;
    this.ⵠΔⵠⲆΔᐃⲆᐃᐃ = 188;
    this.ᐃⲆΔΔᐃⲆⵠᐃⲆ = this.ⵠΔⵠⲆΔᐃⲆᐃᐃ;
    this.ᐃᐃᐃᐃⵠⵠⵠ = 80;
    this.ᐃⵠⲆᐃΔΔⵠᐃⲆ = 222;
    this.ⵠΔᐃΔΔⲆⲆⵠᐃ = 109;
    this.ⵠΔᐃΔΔⲆⲆⵠᐃ;
    this.ᐃⵠⲆᐃΔΔⵠᐃⲆ;
    this.ⲆⲆᐃᐃⲆΔⲆᐃⲆ = true;
    this.ⲆⲆΔΔⲆᐃⲆ = 40;
    this.ᐃᐃᐃᐃⵠⵠⵠ;
    this.ⲆⲆΔΔⲆᐃⲆ;
    this.ᐃᐃⲆⵠⵠⲆⲆΔΔ = {};
    this.ⲆΔⵠᐃΔΔΔΔⵠ = 159;
    this.ᐃᐃⲆⵠⵠⲆⲆΔΔ.ⲆᐃΔΔΔⲆᐃΔᐃ = 2;
    this.ᐃᐃⲆⵠⲆΔᐃ = vVVV14;
    this.ⵠΔᐃᐃⲆ = vVVVV14;
    function f452() {
      this.seed = 1;
      this.ⵠⲆⲆΔⵠΔⲆ = 2;
      this.ⲆⵠᐃΔⵠᐃΔ = 3;
      this.ⲆᐃⲆⵠᐃᐃΔΔᐃ = 1;
      this.ⵠⲆΔⲆⲆⲆⲆⵠΔ = 2;
      this.ⵠⵠⲆΔᐃΔⲆᐃⲆ = 3;
      this.ᐃⵠⵠΔⵠⲆⵠ = function (p1548) {
        this.seed = 2 + Math.floor(Math.random() * 39879);
      };
      this.ᐃⵠΔⲆⲆⵠⵠ = function (p1549) {
        this.ⵠⲆⲆΔⵠΔⲆ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ᐃⵠΔⵠⲆΔⵠ = function (p1550) {
        this.ⲆⵠᐃΔⵠᐃΔ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ΔⵠⲆⲆⵠᐃᐃⵠΔ = function (p1551) {
        this.ⲆᐃⲆⵠᐃᐃΔΔᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⲆⵠⲆⵠᐃⵠᐃⵠⵠ = function (p1552) {
        this.ⵠⲆΔⲆⲆⲆⲆⵠΔ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ⲆⵠᐃⲆΔΔⵠⲆΔ = function (p1553) {
        this.ⵠⵠⲆΔᐃΔⲆᐃⲆ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ᐃⲆⲆΔⵠΔΔ = function (p1554, p1555, p1556, p1557, p1558, p1559, p1560) {
        for (var v2451 = 1; p1560 > v2451;) {
          var v2452 = p1556 * v2451 % ᐃΔⲆⵠᐃΔⲆ;
          var v2453 = ⵠᐃᐃΔⵠΔⵠ[v2452];
          if (v2453 < 0.1) {
            v2454 += 50;
            v2451 += 50;
          } else {
            var v2454 = Math.floor(p1557 * v2453 + p1558);
            if (v2451 > p1559 && v2451 < p1560) {
              var v2455 = Math.random() > 0.5 ? v3026 * -10 : v3026 * 10;
              var v2456 = v2454 * p1555;
              this.ⵠΔΔⲆΔΔⲆ[v2452] = Math.max(-25, Math.min(25, this.ⵠΔΔⲆΔΔⲆ[v2452] + v2455));
              this.ⲆⵠΔⵠΔⵠⵠ[v2452] = Math.max(-8, Math.min(8, this.ⲆⵠΔⵠΔⵠⵠ[v2452] + v2455));
              if (v2456 > 0) {
                v439.beginPath();
                v439.arc(v2451 + v2813.ΔⲆΔ.x + this.ⲆⵠΔⵠΔⵠⵠ[v2452], p1554 + this.ⵠΔΔⲆΔΔⲆ[v2452] - 20, v2456, 0, Math.PI * 2);
                if (v2812.transition) {
                  var v2457 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
                  v439.fillStyle = f396(83, 156, 160, 236, 247, 249, v2457);
                } else {
                  v439.fillStyle = v624.ⲆⵠᐃⵠΔⲆⲆ[v2812.time];
                }
                v439.fill();
              }
            }
            v2451 += v2454 * 2;
          }
        }
      };
      this.ᐃΔΔᐃⵠᐃᐃ = function (p1561, p1562, p1563, p1564, p1565, p1566, p1567) {
        for (var v2458 = 1; v2458 < p1567;) {
          var v2459 = p1563 * v2458 % ᐃΔⲆⵠᐃΔⲆ;
          var v2460 = ⵠᐃᐃΔⵠΔⵠ[v2459];
          if (v2460 < 0.1) {
            v2461 += 50;
            v2458 += 50;
          } else {
            var v2461 = Math.floor(v2460 * p1564 + p1565);
            if (v2458 > p1566 && p1567 > v2458) {
              var v2462 = Math.random() > 0.5 ? v3026 * -10 : v3026 * 10;
              var v2463 = v2461 * p1562;
              this.ⵠΔⵠⵠⵠ[v2459] = Math.max(-25, Math.min(25, this.ⵠΔⵠⵠⵠ[v2459] + v2462));
              this.ᐃΔⵠⲆᐃ[v2459] = Math.max(-8, Math.min(8, this.ᐃΔⵠⲆᐃ[v2459] + v2462));
              if (v2463 > 0) {
                v439.beginPath();
                v439.arc(p1561 + this.ⵠΔⵠⵠⵠ[v2459] - 20, v2458 + v2813.ΔⲆΔ.y + this.ᐃΔⵠⲆᐃ[v2459], v2463, 0, Math.PI * 2);
                if (v2812.transition) {
                  var v2464 = v2812.time ? 1 - v2812.ⲆΔⲆΔ.ⲆⵠⲆ : v2812.ⲆΔⲆΔ.ⲆⵠⲆ;
                  v439.fillStyle = f396(83, 156, 160, 236, 247, 249, v2464);
                } else {
                  v439.fillStyle = v624.ⲆⵠᐃⵠΔⲆⲆ[v2812.time];
                }
                v439.fill();
              }
            }
            v2458 += v2461 * 2;
          }
        }
      };
      this.ΔΔᐃⲆΔΔΔᐃΔ = function (p1568, p1569, p1570, p1571, p1572, p1573) {
        var v2465;
        p1572 -= 30;
        p1573 += 30;
        if ((v2465 = -(p1570 - 0 - p1571 - 2) / 200) === 0) {
          this.ᐃⵠΔⵠⲆΔⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2465);
        this.ᐃⲆⲆΔⵠΔΔ(p1570, v2465, this.ⲆⵠᐃΔⵠᐃΔ, 18, 16, p1572, p1573);
        v439.globalAlpha = 1;
        if ((v2465 = -(p1568 - 250 - p1571 + 500) / 150) === 0) {
          this.ᐃⵠⵠΔⵠⲆⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2465);
        this.ᐃⲆⲆΔⵠΔΔ(p1568, v2465, this.seed, 12, 10, p1572, p1573);
        v439.globalAlpha = 1;
        if (p1569 !== -1) {
          if ((v2465 = -(p1569 - 350 - p1571 + 698) / 100) <= 0.01) {
            this.ᐃⵠΔⲆⲆⵠⵠ();
          }
          v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2465);
          this.ᐃⲆⲆΔⵠΔΔ(p1569, v2465, this.ⵠⲆⲆΔⵠΔⲆ, 6, 6, p1572, p1573);
          v439.globalAlpha = 1;
        }
      };
      this.ᐃΔⵠⵠΔΔⵠΔΔ = function (p1574, p1575, p1576, p1577, p1578, p1579) {
        var v2466;
        p1578 -= 30;
        p1579 += 30;
        if ((v2466 = -(-p1576 + 0 + p1577 + 2) / 200) === 0) {
          this.ᐃⵠΔⵠⲆΔⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2466);
        this.ᐃⲆⲆΔⵠΔΔ(p1576, v2466, this.ⲆⵠᐃΔⵠᐃΔ, 18, 16, p1578, p1579);
        v439.globalAlpha = 1;
        if ((v2466 = -(-p1574 + 250 + p1577) / 150) === 0) {
          this.ᐃⵠⵠΔⵠⲆⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2466);
        this.ᐃⲆⲆΔⵠΔΔ(p1574, v2466, this.seed, 12, 10, p1578, p1579);
        v439.globalAlpha = 1;
        if (p1575 !== -1) {
          if ((v2466 = -(-p1575 + 350 + p1577) / 100) <= 0.01) {
            this.ᐃⵠΔⲆⲆⵠⵠ();
          }
          v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2466);
          this.ᐃⲆⲆΔⵠΔΔ(p1575, v2466, this.ⵠⲆⲆΔⵠΔⲆ, 6, 6, p1578, p1579);
          v439.globalAlpha = 1;
        }
      };
      this.ⵠⵠᐃΔΔⵠΔᐃΔ = function (p1580, p1581, p1582, p1583, p1584, p1585) {
        var v2467;
        p1584 -= 30;
        p1585 += 30;
        if ((v2467 = -(-p1582 + 0 + p1583 + 2) / 200) === 0) {
          this.ᐃⵠΔⵠⲆΔⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2467);
        this.ᐃΔΔᐃⵠᐃᐃ(p1582, v2467, this.ⲆⵠᐃΔⵠᐃΔ, 18, 16, p1584, p1585);
        v439.globalAlpha = 1;
        if ((v2467 = -(-p1580 + 250 + p1583) / 150) === 0) {
          this.ᐃⵠⵠΔⵠⲆⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2467);
        this.ᐃΔΔᐃⵠᐃᐃ(p1580, v2467, this.seed, 12, 10, p1584, p1585);
        v439.globalAlpha = 1;
        if (p1581 !== -1) {
          if ((v2467 = -(-p1581 + 350 + p1583) / 100) <= 0.01) {
            this.ᐃⵠΔⲆⲆⵠⵠ();
          }
          v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2467);
          this.ᐃΔΔᐃⵠᐃᐃ(p1581, v2467, this.ⵠⲆⲆΔⵠΔⲆ, 6, 6, p1584, p1585);
          v439.globalAlpha = 1;
        }
      };
      this.ⵠⲆΔⲆⵠⵠⵠⲆⲆ = function (p1586, p1587, p1588, p1589, p1590, p1591) {
        var v2468;
        p1590 -= 30;
        p1591 += 30;
        if ((v2468 = -(p1588 - 0 - p1589 - 2) / 200) === 0) {
          this.ᐃⵠΔⵠⲆΔⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2468);
        this.ᐃΔΔᐃⵠᐃᐃ(p1588, v2468, this.ⲆⵠᐃΔⵠᐃΔ, 18, 16, p1590, p1591);
        v439.globalAlpha = 1;
        if ((v2468 = -(p1586 - 250 - p1589 + 500) / 150) === 0) {
          this.ᐃⵠⵠΔⵠⲆⵠ();
        }
        v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2468);
        this.ᐃΔΔᐃⵠᐃᐃ(p1586, v2468, this.seed, 12, 10, p1590, p1591);
        v439.globalAlpha = 1;
        if (p1587 !== -1) {
          if ((v2468 = -(p1587 - 350 - p1589 + 698) / 100) <= 0.01) {
            this.ᐃⵠΔⲆⲆⵠⵠ();
          }
          v439.globalAlpha = ᐃⵠⵠ.ⵠⵠⲆᐃΔ(v2468);
          this.ᐃΔΔᐃⵠᐃᐃ(p1587, v2468, this.ⵠⲆⲆΔⵠΔⲆ, 6, 6, p1590, p1591);
          v439.globalAlpha = 1;
        }
      };
      this.w1 = {
        r: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃᐃⵠΔΔⲆⵠ, 0, 10, 0, 0, 200),
        ⲆⲆⲆᐃ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ⵠⲆⲆⵠⵠⲆⵠ, 0, 10, 200, 200, 0)
      };
      this.w2 = {
        r: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ᐃⲆⵠⲆⵠⲆⲆ, 0, 10, 0, 0, 150),
        ⲆⲆⲆᐃ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ⵠⵠⲆᐃΔ, 0, 10, 150, 150, 0)
      };
      this.w3 = {
        r: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ΔⵠⲆᐃᐃⵠⵠ, 0, 10, 0, 0, 100),
        ⲆⲆⲆᐃ: new ᐃⵠⵠ.ᐃΔⲆⲆᐃ(ᐃⵠⵠ.ⵠⵠⲆᐃΔ, 0, 10, 100, 100, 0)
      };
      this.ᐃⲆⵠᐃⲆⵠⲆⵠᐃ = function (p1592) {
        if (p1592.r.x === p1592.r.ΔⵠΔΔⲆ) {
          if (p1592.ⲆⲆⲆᐃ.x === p1592.ⲆⲆⲆᐃ.ΔⵠΔΔⲆ) {
            return p1592.r;
          } else {
            return p1592.ⲆⲆⲆᐃ;
          }
        } else {
          return p1592.r;
        }
      };
      this.ΔᐃΔ = function (p1593) {
        var v2469;
        if (p1593.r.ΔⵠΔΔⲆ === p1593.r.x) {
          if (p1593.ⲆⲆⲆᐃ.x === p1593.ⲆⲆⲆᐃ.ΔⵠΔΔⲆ) {
            p1593.r.ΔⲆⵠᐃⵠⵠᐃ();
            p1593.ⲆⲆⲆᐃ.ΔⲆⵠᐃⵠⵠᐃ();
            v2469 = p1593.r;
          } else {
            v2469 = p1593.ⲆⲆⲆᐃ;
          }
        } else {
          v2469 = p1593.r;
        }
        v2469.ᐃᐃⵠⵠⲆ(v2469.ΔⵠΔΔⲆ);
        return v2469;
      };
      this.ⵠΔⵠⵠⵠ = [];
      this.ᐃΔⵠⲆᐃ = [];
      this.ⵠΔΔⲆΔΔⲆ = [];
      this.ⲆⵠΔⵠΔⵠⵠ = [];
      this.ᐃⵠᐃⲆⵠ = function () {
        for (var v2470 = 0; v2470 < ᐃΔⲆⵠᐃΔⲆ; v2470++) {
          this.ⵠΔⵠⵠⵠ[v2470] = Math.floor(ⵠᐃᐃΔⵠΔⵠ[v2470] * 25);
          this.ᐃΔⵠⲆᐃ[v2470] = Math.floor(ⵠᐃᐃΔⵠΔⵠ[v2470] * 8);
          this.ⵠΔΔⲆΔΔⲆ[v2470] = Math.floor(ⵠᐃᐃΔⵠΔⵠ[v2470] * 25);
          this.ⲆⵠΔⵠΔⵠⵠ[v2470] = Math.floor(ⵠᐃᐃΔⵠΔⵠ[v2470] * 8);
        }
        this.w1.r.x = this.w1.r.ΔⵠΔΔⲆ;
        this.w2.r.ⲆⲆΔΔⵠ = 3.5;
        this.w3.r.ⲆⲆΔΔⵠ = 2;
      };
      this.ᐃⵠᐃⲆⵠ();
    }
    this.ⵠᐃΔΔᐃⲆⵠᐃΔ = 141;
    this.ⵠⲆΔⵠⵠⵠⲆᐃⲆ = 70;
    this.ⵠⲆΔⵠⵠⵠⲆᐃⲆ;
    this.ⵠᐃΔΔᐃⲆⵠᐃΔ;
    this.ΔᐃᐃⲆⲆᐃⵠ = 19;
    this.ⵠⵠⲆᐃΔᐃΔ = 250;
    this.ⵠⵠⲆᐃΔᐃΔ;
    this.ΔᐃᐃⲆⲆᐃⵠ;
    this.ΔᐃⵠΔⲆⵠᐃ = 10752;
    this.ⲆⵠᐃΔΔΔᐃ = vVVVV163;
    this.ᐃⵠΔᐃⵠⲆⵠ = v14;
    this.ⲆΔᐃΔⵠⲆᐃⲆΔ = {};
    this.ⲆΔᐃΔⵠⲆᐃⲆΔ.ⲆⵠⲆΔΔⵠⵠΔⵠ = 8;
    this.ⵠⲆΔⵠ = {
      max: 10,
      ᐃⲆⲆΔΔᐃᐃ: 0,
      ΔΔⲆⵠⲆ: 0,
      ⵠΔΔⲆ: [],
      ᐃᐃΔΔΔ: [],
      ⵠⵠⵠⵠᐃⵠⲆ: function (p1594, p1595) {
        if (p1594 === 1) {
          this.ΔΔⲆⵠⲆ = 6;
        }
        this.ᐃⲆⲆΔΔᐃᐃ += p1595;
        this.max = 10 + this.ᐃⲆⲆΔΔᐃᐃ + this.ΔΔⲆⵠⲆ;
      },
      ⲆⲆⲆⲆᐃⵠᐃ: {
        item: -1,
        ⵠᐃ: null,
        ΔⵠⵠΔⵠⵠⵠ: 0,
        ⵠᐃⲆᐃⵠΔⲆ: 0,
        ⲆⲆΔᐃⲆ: -1,
        ΔⵠΔΔⵠ: -1,
        ᐃⲆᐃⵠⵠ: function (p1596) {
          if (!!this.ΔⵠⵠΔⵠⵠⵠ && (p1596.x !== this.ⲆⲆΔᐃⲆ || p1596.y !== this.ΔⵠΔΔⵠ)) {
            this.ⵠᐃⲆᐃⵠΔⲆ = 1;
          }
        },
        start: function (p1597, p1598) {
          this.ⲆⲆΔᐃⲆ = p1598.x;
          this.ΔⵠΔΔⵠ = p1598.y;
          this.item = p1597;
          this.ⵠᐃ = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ[p1597].info.ⵠᐃ[2];
          this.ΔⵠⵠΔⵠⵠⵠ = 1;
        },
        stop: function () {
          this.ΔⵠⵠΔⵠⵠⵠ = 0;
          this.ⵠᐃⲆᐃⵠΔⲆ = 0;
          this.ⲆⲆΔᐃⲆ = -1;
          this.ΔⵠΔΔⵠ = -1;
        },
        release: function () {
          var v2471 = -1;
          var v2472 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ;
          var v2473 = 0;
          if (this.ΔⵠⵠΔⵠⵠⵠ && this.ⵠᐃⲆᐃⵠΔⲆ) {
            for (var v2474 = 0; v2474 < v2472.length; v2474++) {
              if (v2472[v2474].info.state === 1) {
                v2471 = v2474;
                break;
              }
            }
            if (v2471 !== -1 && v2471 !== this.item && v2472[this.item]) {
              v2473 = 1;
              var v2475 = v2472[v2471];
              v2472[v2471] = v2472[this.item];
              v2472[this.item] = v2475;
              v2991.ΔⲆᐃⲆⵠⲆⵠ();
            }
          }
          this.stop();
          return v2473;
        },
        ᐃᐃΔⵠ: function (p1599, p1600) {
          if (this.ΔⵠⵠΔⵠⵠⵠ && this.ⵠᐃⲆᐃⵠΔⲆ) {
            f293(v439, this.ⵠᐃ, Math.floor(p1599 - this.ⵠᐃ.width / 2), Math.floor(p1600 - this.ⵠᐃ.height / 2));
          }
        }
      },
      ⲆΔΔΔⵠᐃᐃⵠⲆ: function (p1601) {
        for (v2523 = 0; v2523 < p1601.length; v2523++) {
          if (this.ⵠΔΔⲆ[p1601[v2523][0]] == p1601[v2523][1]) {
            return true;
          }
        }
        return false;
      },
      ⲆΔⵠⲆⵠ: function (p1602) {
        for (var v2476 = 0; v2476 < this.ᐃᐃΔΔΔ.length; v2476++) {
          if (this.ᐃᐃΔΔΔ[v2476].id == p1602) {
            return v2476;
          }
        }
        return -1;
      },
      ⵠⲆΔⵠⵠⲆⵠ: function (p1603, p1604) {
        this.ⵠΔΔⲆ[p1603] = 0;
        this.ᐃᐃΔΔΔ.splice(p1604, 1);
        v2991.ΔⲆᐃⲆⵠⲆⵠ();
      },
      ΔᐃΔⵠⵠΔⲆ: function (p1605, p1606, p1607) {
        ⲆᐃⲆ = true;
        this.ⵠΔΔⲆ[p1605] = Math.max(0, this.ⵠΔΔⲆ[p1605] - p1606);
        if (!this.ⵠΔΔⲆ[p1605] && p1607 >= 0) {
          this.ⵠⲆΔⵠⵠⲆⵠ(p1605, p1607);
        }
      }
    };
    this.ΔⲆⲆⵠⲆ = {
      enabled: vVVV144,
      translate: {
        x: 0,
        y: 0
      },
      ⵠⵠⲆⲆⲆⲆⵠ: function () {
        if (v2812.mode == 1 && !v2813.ᐃᐃⲆⵠⲆΔᐃ) {
          v2813.ΔⲆⲆⵠⲆ.enabled = !v2813.ΔⲆⲆⵠⲆ.enabled;
          if (v2813.ΔⲆⲆⵠⲆ.enabled) {
            v2991.options.ΔⲆⲆⵠⲆᐃΔ.display = "inline-block";
          } else {
            v2991.options.ΔⲆⲆⵠⲆᐃΔ.display = "none";
          }
        }
      }
    };
    v2991.options.ΔⲆⲆⵠⲆᐃΔ.display = "none";
    this.ⵠⵠⵠⲆΔ = {
      enabled: vV143,
      translate: {
        x: 0,
        y: 0
      },
      ΔΔΔⵠⲆ: 0,
      ⵠⵠⲆⲆⲆⲆⵠ: function () {
        v2813.ⵠⵠⵠⲆΔ.enabled = !v2813.ⵠⵠⵠⲆΔ.enabled;
        if (v2813.ⵠⵠⵠⲆΔ.enabled) {
          v2991.options.ΔΔⲆΔⵠⲆⲆ.display = "inline-block";
        } else {
          v2991.options.ΔΔⲆΔⵠⲆⲆ.display = "none";
        }
      },
      ⲆᐃⲆ: function () {
        if (!!this.enabled && !(v2813.ⵠⲆᐃⲆ.id >= 0) && !v2991.ⲆᐃⲆΔ.open) {
          this.ΔΔΔⵠⲆ += v3026;
          if (this.ΔΔΔⵠⲆ > 2) {
            this.ΔΔΔⵠⲆ = 0;
            if (v2813.ⲆᐃᐃΔ.ⵠᐃⵠ < 0.35) {
              if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[110]) {
                v2815.ᐃⲆⵠⲆΔ(110, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(110));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[192]) {
                v2815.ᐃⲆⵠⲆΔ(192, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(192));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[196]) {
                v2815.ᐃⲆⵠⲆΔ(196, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(196));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[189]) {
                v2815.ᐃⲆⵠⲆΔ(189, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(189));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[207]) {
                v2815.ᐃⲆⵠⲆΔ(207, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(207));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[205]) {
                v2815.ᐃⲆⵠⲆΔ(205, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(205));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[209]) {
                v2815.ᐃⲆⵠⲆΔ(209, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(209));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[143]) {
                v2815.ᐃⲆⵠⲆΔ(143, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(143));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[117]) {
                v2815.ᐃⲆⵠⲆΔ(117, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(117));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[138]) {
                v2815.ᐃⲆⵠⲆΔ(138, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(138));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[133]) {
                v2815.ᐃⲆⵠⲆΔ(133, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(133));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[145]) {
                v2815.ᐃⲆⵠⲆΔ(145, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(145));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[136]) {
                v2815.ᐃⲆⵠⲆΔ(136, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(136));
              } else if (v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[197]) {
                v2815.ᐃⲆⵠⲆΔ(197, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(197));
              }
            } else if (v2813.ⲆᐃᐃΔ.ΔᐃΔ < 0.35 && v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[127]) {
              v2815.ᐃⲆⵠⲆΔ(127, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(127));
            }
          }
        }
      }
    };
    v2991.options.ΔΔⲆΔⵠⲆⲆ.display = "none";
    this.ⵠⲆᐃⲆ = {
      id: -1,
      ⵠᐃⲆⵠ: -1,
      timeout: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1432, 0, 1, 0, 1, 1),
      ᐃΔⲆⲆⲆ: false,
      Ⲇᐃⵠᐃ: -1,
      mode: 0,
      label: [],
      ΔⵠΔΔᐃ: [],
      ⲆⲆᐃΔⲆ: vVVVVV14,
      ᐃΔⲆⲆΔ: vVVVVV1422,
      ⲆⲆΔⵠⵠΔⲆ: false,
      ⵠⲆⵠΔΔ: vVVVVV14,
      ΔᐃΔΔⵠΔⵠΔⲆ: function () {
        this.mode = this.mode === 0 ? 1 : 0;
      },
      ⵠⵠΔᐃⵠᐃⲆⵠⵠ: function (p1608) {
        this.ⲆⲆᐃΔⲆ = p1608;
        var v2477 = v2991.ⲆᐃⲆΔ;
        if (v2477.open) {
          v2477.ⲆᐃⲆⵠⵠⵠΔ(v2477.button);
        }
        this.ⲆᐃⲆ();
      },
      ⵠΔⵠΔᐃᐃᐃⲆΔ: function (p1609) {
        var v2478 = v732[p1609];
        this.id = p1609;
        this.ᐃΔⲆⲆⲆ = true;
        v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
        this.timeout.ⵠΔⲆΔⲆᐃᐃ = v2478.time * 8;
        this.ⵠᐃⲆⵠ = v2478.ⵠᐃⲆⵠ;
      },
      ᐃᐃⲆΔΔΔⲆΔⲆ: function (p1610) {
        var v2479 = v732[p1610];
        this.id = p1610;
        this.ᐃΔⲆⲆⲆ = v16;
        var v2480 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
        if (v2480 && v2480.right == 28) {
          this.timeout.ⵠΔⲆΔⲆᐃᐃ = v2479.time * 3;
        } else {
          this.timeout.ⵠΔⲆΔⲆᐃᐃ = v2479.time;
        }
        this.ⵠᐃⲆⵠ = v2479.ⵠᐃⲆⵠ;
        for (var v2481 = 0; v2481 < v2479.r.length; v2481++) {
          var v2482 = v2479.r[v2481];
          v2813.ⵠⲆΔⵠ.ΔᐃΔⵠⵠΔⲆ(v2482[0], v2482[1], v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(v2482[0]));
        }
        v2991.ΔⲆᐃⲆⵠⲆⵠ();
      },
      ⲆᐃⲆ: function () {
        this.ΔⵠΔΔᐃ = [];
        if (v2991.ⲆⵠⲆⲆᐃ.ⵠⲆᐃⲆ === 1) {
          v2991.ⲆⵠⲆⲆᐃ.display = 0;
        }
        for (var v2483 in v732) {
          var v2484 = v732[v2483];
          var v2485 = true;
          if (v2484.r) {
            for (var v2486 = 0; v2486 < v2484.r.length; v2486++) {
              if (v2813.ⵠⲆΔⵠ.max >= 16 && v2484.id === 100) {
                v2485 = vVV14;
                break;
              }
              if (v2484.w > this.ⲆⲆᐃΔⲆ || v2484.f > this.ᐃΔⲆⲆΔ || v2484.ᐃΔⲆ > this.ⲆⲆΔⵠⵠΔⲆ || v2484.e > this.ⵠⲆⵠΔΔ) {
                v2485 = vVV142;
                break;
              }
              var v2487 = v2484.r[v2486];
              if (!v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[v2487[0]] || v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[v2487[0]] < v2487[1]) {
                v2485 = false;
                break;
              }
            }
            if (v2485) {
              this.ΔⵠΔΔᐃ.push(v2991.ᐃΔΔ[v2484.id]);
            }
          }
        }
        v2991.ΔⲆΔⲆΔⲆΔ();
        v2991.ΔⲆⲆⲆᐃᐃᐃ();
        v2991.ᐃⵠⲆΔΔᐃᐃ();
        v2991.ⲆΔⲆᐃⲆΔΔ();
        v2991.ⲆᐃᐃΔΔⵠᐃ();
        v2991.ⲆⵠΔⵠΔΔⲆ();
        v2991.sign.ᐃΔⲆΔⲆⵠⲆ();
      },
      ΔⲆⵠᐃⵠⵠᐃ: function () {
        this.id = -1;
        this.ᐃΔⲆⲆⲆ = vVVVV14;
        this.timeout.ⲆⵠⲆ = 0;
        this.timeout.ᐃΔⲆ = false;
        this.ⲆᐃⲆ();
      }
    };
    this.ⵠᐃᐃΔᐃⲆⲆ = {
      message: undefined,
      ᐃᐃΔⵠ: f384
    };
    this.alert = {
      timeout: new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1432, 1, 1, 0, 4, 0.3),
      text: "",
      label: null,
      ᐃᐃΔⵠ: f387,
      list: []
    };
    this.ⲆΔⲆᐃⲆ = {
      ΔⲆ: document.createElement("canvas"),
      ⲆⲆΔⲆⲆ: [],
      ⲆᐃⲆ: true,
      translate: {
        x: 0,
        y: 0
      },
      sort: function () {
        var v2488 = [];
        for (var v2489 = v2812.ΔⵠΔⵠ, v2490 = 0; v2490 < v2489.length; v2490++) {
          if (v2489[v2490].ⲆⵠⵠΔᐃ) {
            v2488.push({
              id: v2490,
              ⲆⵠⵠⲆ: v2489[v2490].ᐃⵠⲆⲆᐃ
            });
          }
        }
        v2488.sort(function (p1611, p1612) {
          return p1612.ⲆⵠⵠⲆ - p1611.ⲆⵠⵠⲆ;
        });
        this.ⲆⲆΔⲆⲆ = [];
        for (v2490 = 0; v2490 < v2488.length && v2490 < 10; v2490++) {
          this.ⲆⲆΔⲆⲆ.push(v2488[v2490].id);
        }
        this.ⲆᐃⲆ = true;
      },
      ᐃⵠᐃⲆⵠ: function (p1613) {
        for (var v2491 = v2812.ΔⵠΔⵠ, v2492 = 0; v2492 < v2491.length; v2492++) {
          v2491[v2492].ᐃⵠⲆⲆᐃ = 0;
        }
        v2491[v2813.id].ᐃⵠⲆⲆᐃ = ᐃⵠⵠ.ΔⲆᐃΔⲆⲆⲆ(p1613[1]);
        this.ⲆⲆΔⲆⲆ = [];
        for (v2492 = 2; v2492 < p1613.length; v2492 += 2) {
          this.ⲆⲆΔⲆⲆ.push(p1613[v2492]);
          v2491[p1613[v2492]].ᐃⵠⲆⲆᐃ = ᐃⵠⵠ.ΔⲆᐃΔⲆⲆⲆ(p1613[v2492 + 1]);
        }
        this.ⲆᐃⲆ = true;
      }
    };
    this.ⲆΔⲆᐃⲆ.ΔⲆ.width = v454 * 180;
    this.ⲆΔⲆᐃⲆ.ΔⲆ.height = v454 * 300;
    this.ⲆΔⲆᐃⲆ.Δ = this.ⲆΔⲆᐃⲆ.ΔⲆ.getContext("2d");
    this.Ⲇᐃⵠᐃⵠ = {
      open: vVVVV142,
      input: document.getElementById("commandInput"),
      ⲆⲆΔΔⲆΔΔ: document.getElementById("commandsBox"),
      style: document.getElementById("commandMainBox").style,
      ΔΔⲆⲆΔⵠⵠⵠⵠ: function (p1614) {
        this.ⲆⲆΔΔⲆΔΔ.innerHTML += p1614;
      },
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v441 / 2 - 300) + "px";
        this.style.top = Math.floor(v442 / 2 - 250) + "px";
      },
      ⲆᐃΔΔⵠΔᐃⲆᐃ: function () {
        this.ⲆⲆΔΔⲆΔΔ.innerHTML = "";
      },
      ΔᐃΔⵠΔ: function () {
        this.open = vVVVV142;
        this.style.display = "none";
      },
      ⵠᐃⵠᐃΔ: function (p1615) {
        var v2493 = "<table class=\"tableList\">";
        for (var v2494 = 0; v2494 < p1615.length; v2494++) {
          if (v2494 % 3 == 0) {
            v2493 += "<tr>";
          }
          v2493 += "<td class=\"tableList\">" + p1615[v2494] + "</td>";
          if ((v2494 + 1) % 3 == 0 || v2494 + 1 === p1615.length) {
            v2493 += "</tr>";
          }
        }
        return v2493 += "</table>";
      },
      ΔΔᐃᐃᐃ: function (p1616, p1617, p1618, p1619) {
        var v2495 = "<div class=commandWritten>" + (p1616 = p1616 || "");
        v2495 += (p1617 = p1617 || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>";
        v2495 += (p1618 = p1618 || "") + "</div>" + (p1619 = p1619 || "") + "</div>";
        this.ΔΔⲆⲆΔⵠⵠⵠⵠ(v2495);
        this.ⲆⲆⵠⵠⲆⲆⲆⵠⵠ();
      },
      ⲆⲆⵠⵠⲆⲆⲆⵠⵠ: function () {
        this.ⲆⲆΔΔⲆΔΔ.scrollTop = this.ⲆⲆΔΔⲆΔΔ.scrollHeight;
      },
      ⵠᐃⲆᐃⲆᐃᐃ: function (p1620) {
        switch (p1620) {
          case "clean":
            this.ⲆᐃΔΔⵠΔᐃⲆᐃ();
            return vVVVVV1622;
          case "list":
            var v2496 = "";
            const v2497 = vWindow.document.createElement("div");
            for (var v2498 = v2812.ΔⵠΔⵠ, v2499 = 0; v2499 < v2498.length; v2499++) {
              var v2500 = v2498[v2499];
              if (v2500.ⲆⵠⵠΔᐃ) {
                v2497.innerText = v2500.ⵠᐃΔⵠΔ;
                v2496 += v2497.innerHTML + " <span style=\"color:green\">#" + v2499 + "</span><br />";
              }
            }
            this.ΔΔᐃᐃᐃ("list", 1, "List all connected players", v2496);
            return vVVVVVV16;
          case "weapon-list":
            this.ΔΔᐃᐃᐃ("Weapons", 1, "List all weapons in the game", this.ⵠᐃⵠᐃΔ(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "wood_bow", "wood_arrow", "wood_axe", "stone_axe", "gold_axe", "diamond_axe", "amethyst_axe", "reidite_axe"]));
            return true;
          case "tool-list":
            this.ΔΔᐃᐃᐃ("Tools", 1, "List all tools in the game", this.ⵠᐃⵠᐃΔ(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "pitchfork", "pitchfork2", "spanner", "book"]));
            return true;
          case "survival-list":
            this.ΔΔᐃᐃᐃ("Survival Items", 1, "List all survival items in the game", this.ⵠᐃⵠᐃΔ(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite_button"]));
            return true;
          case "resource-list":
            this.ΔΔᐃᐃᐃ("Resources", 1, "List all resources in the game", this.ⵠᐃⵠᐃΔ(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"]));
            return vVVV1622;
          case "food-list":
            this.ΔΔᐃᐃᐃ("Food", 1, "List all food in the game", this.ⵠᐃⵠᐃΔ(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus"]));
            return true;
          case "hat-list":
            this.ΔΔᐃᐃᐃ("Hats", 1, "List all hats in the game", this.ⵠᐃⵠᐃΔ(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"]));
            return vVVV1622;
          case "building-list":
            this.ΔΔᐃᐃᐃ("Buildings", 1, "List all buildings in the game", this.ⵠᐃⵠᐃΔ(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"]));
            return true;
          case "biome-list":
            this.ΔΔᐃᐃᐃ("Biomes list", 1, "List all available biomes in the game", this.ⵠᐃⵠᐃΔ(["forest", "winter", "lava", "sea", "beach", "island", "dragon"]));
            return vVV162;
          case "help-config":
            this.ΔΔᐃᐃᐃ("Help Configuration", 1, "Learn how to build your customized map", "<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.");
            return true;
          case "pos":
            v2498 = v2812.ⲆⵠΔ[0];
            v2499 = 0;
            for (; v2499 < v2498.length; v2499++) {
              var v2501 = v2498[v2499];
              if (v2501.ⵠⵠⵠᐃ === v2813.id) {
                this.ΔΔᐃᐃᐃ("pos", 1, "Your position is " + Math.floor(v2501.x / 100) + ":" + Math.floor(v2501.y / 100));
                return vV162;
              }
            }
            break;
          case "help-admin":
            this.ΔΔᐃᐃᐃ("help-admin", 1, "List all available commands for admin only", this.ⵠᐃⵠᐃΔ(["restart", "m | message", "mt | message-to", "w | welcome", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"]));
            return vVV16;
          case "help":
            this.ΔΔᐃᐃᐃ("help", 1, "List all available commands", this.ⵠᐃⵠᐃΔ(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"]));
            return vVVVVV1622;
        }
        return false;
      },
      ᐃΔᐃΔΔΔⲆⵠΔ: function () {
        if (!this.open) {
          this.open = vVVVVVV16;
          this.style.display = "inline-block";
          this.input.focus();
        }
      },
      ᐃⲆᐃⲆᐃⲆᐃ: function () {
        var v2502 = this.input.value;
        if (v2502 && v2502.length > 0) {
          if (!this.ⵠᐃⲆᐃⲆᐃᐃ(v2502)) {
            v2815.ⲆⲆⲆⲆΔΔⲆⵠΔ(this.input.value);
          }
          this.input.value = "";
        }
      }
    };
    this.ⲆⲆⲆⲆΔ = {
      open: vV142,
      input: document.getElementById("chat_input"),
      style: document.getElementById("chat_block").style,
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v441 / 2 - 150) + "px";
        this.style.top = Math.floor(v442 / 2 + 80) + "px";
      },
      ΔᐃΔⵠΔ: function () {
        this.open = vVVV1422;
        this.style.display = "none";
        this.input.value = "";
      },
      prefix: "!",
      cmd: {
        hud: function (p1621) {
          if (p1621 === "off") {
            var v2503 = "Enter \"!hud\" without the quotes to restore the HUD";
            if (v2813.alert.text) {
              v2813.alert.list.push(v2503);
            } else {
              v2813.alert.text = v2503;
            }
            v2991.ᐃᐃⵠᐃⲆᐃᐃ = 0;
          } else {
            v2991.ᐃᐃⵠᐃⲆᐃᐃ = 1;
          }
        }
      },
      ⵠᐃⲆᐃⲆᐃᐃ: function (p1622) {
        if (p1622.charAt(0) == this.prefix) {
          var v2504 = "";
          var v2505 = "";
          for (var v2506 = 1; v2506 < p1622.length && p1622.charAt(v2506) != " "; v2506++) {
            v2504 += p1622.charAt(v2506);
          }
          for (v2506++; v2506 < p1622.length; v2506++) {
            v2505 += p1622.charAt(v2506);
          }
          var v2507 = this.cmd[v2504];
          if (v2507) {
            v2507(v2505);
          }
          return true;
        }
        return vV144;
      },
      ⵠᐃᐃⲆᐃ: function () {
        if (this.open) {
          this.open = false;
          this.style.display = "none";
          var v2508 = this.input.value;
          if (v2508) {
            if (!this.ⵠᐃⲆᐃⲆᐃᐃ(v2508)) {
              v2815.ᐃⲆᐃᐃⲆⲆⵠⲆⲆ(this.input.value);
            }
            this.input.value = "";
          }
        } else {
          this.open = true;
          this.style.display = "inline-block";
          this.input.focus();
        }
      }
    };
    this.ΔΔᐃᐃᐃΔⵠ = {
      ΔΔΔΔⲆ: [],
      ⲆᐃⲆ: function (p1623) {
        p1623.y += v3026 * 80 * p1623.ⲆⵠⵠⲆ;
        p1623.x += v3026 * 80 * p1623.c;
        p1623.ⵠΔΔⵠⲆ -= v3026 / 6;
        if (p1623.ⵠΔΔⵠⲆ > 0.2) {
          p1623.alpha = Math.min(p1623.alpha + v3026 * 3, 1);
        } else {
          p1623.alpha = Math.max(p1623.alpha - v3026 * 1, 0);
        }
      },
      add: function (p1624) {
        var v2509 = Math.floor(Math.min(v624.ⵠⲆᐃⲆⵠⵠΔ * (v441 / 1366), v624.ⵠⲆᐃⲆⵠⵠΔ + 10) * Math.max(Math.min(v2812.ⵠⲆⵠⲆⲆ + 1000, 3000) / 3000, 0));
        if (this.ΔΔΔΔⲆ.length < v2509) {
          var v2510 = Math.floor(Math.random() * v624.ⲆᐃⲆⵠⲆⲆΔ);
          var v2511 = -v2813.ΔⲆΔ.x + Math.floor(Math.random() * v2813.ΔⲆΔ.w);
          var v2512 = -v2813.ΔⲆΔ.y + Math.floor(Math.random() * v2813.ΔⲆΔ.ⵠᐃⵠ);
          var v2513 = Math.random(Math.PI);
          this.ΔΔΔΔⲆ.push(new f446(v2510, v2511, v2512, v2513));
        }
      }
    };
    this.ΔΔⲆⲆⲆΔⵠ = 0;
    this.ⲆᐃΔᐃⲆ = 0;
    this.ᐃⵠΔⵠⲆ = {
      ΔΔΔΔⲆ: [],
      ᐃᐃᐃᐃᐃ: 0,
      ⲆⲆΔⵠⵠ: 0,
      ⲆᐃⲆ: function (p1625) {
        p1625.y += v3026 * (200 + this.ⲆⲆΔⵠⵠ * 800) * p1625.ⲆⵠⵠⲆ;
        p1625.x += v3026 * (200 + this.ⲆⲆΔⵠⵠ * 800) * p1625.c;
        p1625.ⵠΔΔⵠⲆ -= v3026 / 6;
        if (p1625.ⵠΔΔⵠⲆ > 0.2) {
          p1625.alpha = Math.min(p1625.alpha + v3026 * 3, 1);
        } else {
          p1625.alpha = Math.max(p1625.alpha - v3026 * 1, 0);
        }
      },
      add: function (p1626) {
        var v2514 = Math.floor(Math.min((this.ⲆⲆΔⵠⵠ + 0.1) * v624.ⲆᐃⵠⵠᐃΔⲆ * (v441 / 1366), (this.ⲆⲆΔⵠⵠ + 0.1) * v624.ⲆᐃⵠⵠᐃΔⲆ + 10) * Math.max(Math.min(v2812.ΔⵠⵠΔΔ + 1000, 3000) / 3000, 0));
        if (this.ΔΔΔΔⲆ.length < v2514) {
          var v2515 = Math.floor(Math.random() * v624.ⲆᐃⲆⵠⲆⲆΔ);
          var v2516 = -v2813.ΔⲆΔ.x + Math.floor(Math.random() * v2813.ΔⲆΔ.w);
          var v2517 = -v2813.ΔⲆΔ.y + Math.floor(Math.random() * v2813.ΔⲆΔ.ⵠᐃⵠ);
          var v2518 = Math.random(Math.PI);
          if (v2813.ᐃⵠΔⵠⲆ.ᐃᐃᐃᐃᐃ !== 0) {
            v2516 -= v2813.ΔⲆΔ.w / 2;
          }
          this.ΔΔΔΔⲆ.push(new f446(v2515, v2516, v2517, v2518));
        }
      }
    };
    this.ᐃΔⲆᐃⲆ = {
      ΔΔΔΔⲆ: [],
      ᐃᐃᐃᐃᐃ: 0,
      ⲆⲆΔⵠⵠ: 0,
      ⲆᐃⲆ: function (p1627) {
        if (v3020.ⲆᐃΔᐃᐃⵠΔ()) {
          p1627.y += v3026 * p1627.ⵠΔⵠⲆΔ * (5.5 + this.ⲆⲆΔⵠⵠ * 10);
        } else {
          p1627.y += v3026 * p1627.ⵠΔⵠⲆΔ * (5 + this.ⲆⲆΔⵠⵠ * 10);
        }
        p1627.ⵠΔΔⵠⲆ -= v3026 / 2;
        if (v3020.ᐃΔⲆⲆⲆⲆⲆ()) {
          p1627.x += v3026 * (100 + this.ⲆⲆΔⵠⵠ * 400);
        } else if (v3020.ⵠⲆⲆⲆⲆᐃΔ()) {
          p1627.x -= v3026 * (130 - this.ⲆⲆΔⵠⵠ * 400);
        } else {
          p1627.x -= v3026 * (30 - this.ⲆⲆΔⵠⵠ * 400);
        }
        if (p1627.ⵠΔΔⵠⲆ > 0.2) {
          p1627.alpha = Math.min(p1627.alpha + v3026 * 3, 1);
        } else {
          p1627.alpha = Math.max(p1627.alpha - v3026 * 5, 0);
        }
      },
      add: function (p1628) {
        var v2519 = Math.floor(Math.min((this.ⲆⲆΔⵠⵠ * 1.5 + 0.5) * v624.ΔⲆⵠⲆⵠⵠⲆ * (v441 / 1366), (this.ⲆⲆΔⵠⵠ * 1.5 + 0.5) * v624.ΔⲆⵠⲆⵠⵠⲆ + 10) * Math.max(Math.min(v2812.ⲆΔⵠⲆΔ + 1000, 3000) / 3000, 0));
        if (this.ΔΔΔΔⲆ.length < v2519) {
          var v2520 = Math.floor(Math.random() * v624.ⲆΔⵠⵠᐃᐃⲆ);
          var v2521 = -v2813.ΔⲆΔ.x + Math.floor(Math.random() * v2813.ΔⲆΔ.w);
          var v2522 = -v2813.ΔⲆΔ.y + Math.floor(Math.random() * 400 * v454 - v454 * 200);
          this.ΔΔΔΔⲆ.push(new f446(v2520, v2521, v2522, 0));
        }
      }
    };
    this.ⵠᐃΔⵠ = [];
    for (var v2523 = 0; v2523 < 4; v2523++) {
      this.ⵠᐃΔⵠ.push(new f452());
    }
  }
  function f453() {
    Math.random();
    return "g";
  }
  function f454() {
    Math.random();
    return "C";
  }
  function f455() {
    Math.random();
    return "r";
  }
  function f456() {
    Math.random();
    return "e";
  }
  function f457() {
    Math.random();
    return "n";
  }
  function f458() {
    Math.random();
    return "p";
  }
  function f459() {
    Math.random();
    return "t";
  }
  function f460() {
    Math.random();
    return "s";
  }
  function f461() {
    Math.random();
    return "d";
  }
  function f464() {
    Math.random();
    return "a";
  }
  function f463() {
    Math.random();
    return "o";
  }
  function f464() {
    Math.random();
    return "a";
  }
  setTimeout(function f465() {
    var v2524 = f457() + f464() + f459() + f450();
    Math.random();
    var v2525 = "W" + f456() + function () {
      Math.random();
      return "b";
    }() + (Math.random(), "S") + f463() + (Math.random(), "c") + (Math.random(), "k") + f456() + f459();
    if (vWindow[v2525].toString().indexOf(v2524) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    var v2526 = f460() + f456() + f457() + f461();
    var v2527 = f458() + f455() + f463() + f459() + f463() + f459() + (Math.random(), "y") + f458() + f456();
    if (vWindow[v2525][v2527][v2526].toString().indexOf(v2524) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    v2525 = f461() + f455() + f464() + (Math.random(), "w") + (Math.random(), "I") + function () {
      Math.random();
      return "m";
    }() + f464() + f453() + f456();
    v2526 = f454() + f464() + f457() + (Math.random(), "v") + f464() + f460() + function () {
      Math.random();
      return "R";
    }() + f456() + f457() + f461() + f456() + f455() + f450() + f457() + f453() + f454() + f463() + f457() + f459() + f456() + function () {
      Math.random();
      return "x";
    }() + f459() + (Math.random(), "2") + (Math.random(), "D");
    if (vWindow[v2526][v2527][v2525].toString().indexOf(v2524) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    setTimeout(f465, 100000);
  }, 100000);
  function f466(p1629, p1630) {
    this.ΔⲆ = p1629;
    this.Δ = p1630;
    var vThis = this;
    this.ⲆΔᐃᐃⵠΔⵠ = false;
    this.ⵠⲆΔⲆᐃⵠᐃ = {
      id: document.getElementById("scoreboard"),
      style: document.getElementById("scoreboard").style,
      height: 0,
      translate: {
        y: 0,
        x: 0
      },
      ⲆᐃⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = this.translate.y + "px";
      },
      ᐃⵠᐃⲆⵠ: function () {
        this.id.innerHTML = "<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">" + v2813.ΔΔᐃⵠⲆⲆⲆ.ΔⵠΔⵠⲆⵠⲆ + "</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> " + v772[335] + " : " + v2813.ⵠΔⵠ + "</div><div class=\"stats\"> " + v772[334] + " : " + v2813.ΔΔᐃⵠⲆⲆⲆ.ΔᐃⵠⲆᐃ + "</div></div><div id=\"flexDisplay\"><div id=\"score\"> " + v772[333] + " : " + v2813.ΔΔᐃⵠⲆⲆⲆ.ᐃⵠⲆⲆᐃ + "</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> " + v2813.ΔΔᐃⵠⲆⲆⲆ.ᐃⲆᐃΔⵠᐃᐃ + " " + v772[332] + "</div></div><div id=\"shop_points\">" + v772[331] + "</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">" + v772[329] + "</div><div class=\"social\" id=\"fffacebook\">" + v772[330] + "</div></div><div id=\"bbback\">" + v772[328] + "</div>";
        this.style.display = "inline-block";
        document.getElementById("tttwitter").addEventListener("mouseup", f488, false);
        document.getElementById("bbback").addEventListener("mouseup", function () {
          v2814.ΔᐃΔⵠΔ(v2811.ⵠᐃᐃⲆᐃ);
        }, vVVVVV1422);
        document.getElementById("fffacebook").addEventListener("mouseup", f469, vVV143);
        this.height = Math.floor(this.id.clientHeight / 2);
        (function () {
          var v2528 = new XMLHttpRequest();
          v2528.open("GET", v3050 + "getBreadAndScore?userid=" + vVVUndefined19);
          v2528.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2528.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200 && v2528.responseText !== "0") {
              var v2529 = JSON.parse(v2528.responseText);
              var v2530 = v2529.b - v2811.ᐃⵠᐃΔⲆ;
              v2811.ᐃⵠᐃΔⲆ = v2529.b;
              v2811.ᐃⵠⲆⲆᐃ = v2529.s;
              v2811.ᐃⵠΔⲆᐃ = v2811.ⵠΔⲆⵠⲆΔⵠ(v2811.ᐃⵠⲆⲆᐃ);
              v2811.ⵠⲆᐃᐃⵠᐃΔ = v2811.ⵠⲆⵠᐃΔᐃⵠ(v2811.ᐃⵠⲆⲆᐃ);
              v2811.ΔⵠⵠΔⵠⲆⵠ = 0;
              document.getElementById("breadWonInner").innerHTML = "" + v2530;
            }
          };
          v2528.send();
        })();
      }
    };
    var v2531;
    var v2532 = 0;
    function f467() {
      vThis.ⲆᐃⲆ();
      if (++v2532 != 30) {
        vWindow.setTimeout(f467, 33);
      } else {
        vThis.ⲆᐃⲆ();
      }
    }
    this.ΔᐃΔⵠΔ = function (p1631) {
      if (vThis.ⲆΔᐃᐃⵠΔⵠ === true) {
        vThis.ⲆΔᐃᐃⵠΔⵠ = vVVVV142;
        v2531 = p1631;
        v2533 = -1;
        f468();
        f515();
      }
    };
    var v2533 = -1;
    function f468() {
      vThis.ⲆᐃⲆ();
      if (++v2533 == 30) {
        vThis.stop();
        vThis.ⵠⲆΔⲆᐃⵠᐃ.style.display = "none";
        v2531();
        return;
      }
      vWindow.setTimeout(f468, 33);
    }
    this.ⵠⲆⵠᐃᐃ = vVVV1422;
    this.stop = function () {
      this.ⵠⲆⵠᐃᐃ = false;
    };
    this.ⵠᐃᐃⲆᐃ = function () {
      f519();
      document.getElementById("game_body").style.backgroundColor = v624.ᐃⵠᐃⵠⲆ[v2810.time];
      vThis.ⵠⲆΔⲆᐃⵠᐃ.ᐃⵠᐃⲆⵠ();
      v2811.ΔΔⵠⲆᐃ.style.display = "inline-block";
      vThis.ⵠⲆⵠᐃᐃ = true;
      vThis.ⲆΔᐃᐃⵠΔⵠ = true;
      v2533 = -1;
      v2532 = 0;
      f467();
    };
    this.ⲆᐃⲆ = function () {
      this.ⵠⲆΔⲆᐃⵠᐃ.translate.x = Math.floor(v445 - 275);
      this.ⵠⲆΔⲆᐃⵠᐃ.translate.y = Math.floor(v449 - this.ⵠⲆΔⲆᐃⵠᐃ.height - 28);
      v2811.ΔΔⵠⲆᐃ.translate.x = this.ⵠⲆΔⲆᐃⵠᐃ.translate.x - 350;
      v2811.ΔΔⵠⲆᐃ.translate.y = this.ⵠⲆΔⲆᐃⵠᐃ.translate.y + 0;
      v2811.ΔΔⵠⲆᐃ.ⲆᐃⲆ();
      if (v2532 != 30 || v2533 != -1) {
        var v2534 = 0;
        if (v2532 != 30) {
          v2534 = 1500 / (v2532 + 1) - 50;
        }
        if (v2533 != -1) {
          v2534 = -(1750 / (30 - v2533 + 1) - 48);
        }
        this.ⵠⲆΔⲆᐃⵠᐃ.translate.y -= v2534;
      }
      this.ⵠⲆΔⲆᐃⵠᐃ.ⲆᐃⲆ();
    };
    this.ᐃᐃΔⵠ = function () {
      f290();
      v2813.alert.ᐃᐃΔⵠ("#FFF", "#000");
    };
  }
  function f469() {
    ᐃⵠⵠ.ΔᐃⲆΔΔΔⵠ("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0");
  }
  function f470(p1632, p1633) {
    var vThis2 = this;
    this.ΔⲆ = p1632;
    var v2535 = 214;
    if (v2535 > 4) {
      v2535 = 110;
    }
    this.Δ = p1633;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ⵠᐃⵠΔΔⲆⲆ = "default";
      this.ᐃᐃᐃΔΔΔΔ = "pointer";
    } else {
      this.ⵠᐃⵠΔΔⲆⲆ = "url('img/cursor0.png'), default";
      this.ᐃᐃᐃΔΔΔΔ = "url('img/cursor1.png'), pointer";
    }
    this.ᐃᐃⵠᐃⲆᐃᐃ = 1;
    this.ⵠⲆᐃⵠΔᐃᐃ = 1;
    this.ΔᐃΔΔᐃΔⵠ = 1;
    this.ΔⲆⵠᐃⲆⵠΔ = 1;
    this.ΔⲆⵠᐃᐃᐃⵠᐃΔ = {
      id: document.getElementById("team_box"),
      style: document.getElementById("team_box").style,
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 125) + "px";
        this.style.top = "110px";
      }
    };
    this.ᐃⵠⲆⵠ = {
      ᐃᐃⵠᐃⲆⲆΔ: f418(60, 60, 0, ⵠΔ[782]),
      ᐃⵠⲆⵠΔᐃⲆ: f418(60, 60, 0, ⵠΔ[783])
    };
    this.sign = {
      open: vV144,
      ᐃᐃᐃⵠⵠΔⵠⲆᐃ: 0,
      ⲆΔⲆᐃⵠⵠⲆ: document.getElementById("sign_object"),
      ⵠⲆΔΔⲆᐃΔ: 0,
      id: document.getElementById("sign_window"),
      style: document.getElementById("sign_window").style,
      button: f418(60, 60, 0, ⵠΔ[803]),
      ᐃΔⲆΔⲆⵠⲆ: function () {
        var v2536 = Math.floor(Math.floor((3 + v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ.length) / 4) * (10 + ⵠΔ[316][0].width) + 35);
        this.button.info.translate.x = v2536;
        this.button.info.translate.y = 22;
      },
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 150) + "px";
        this.style.top = Math.floor(v449 - 115) + "px";
      },
      ΔᐃΔⵠΔ: function () {
        v2991.sign.style.display = "none";
        v2991.sign.open = vVVVVV1422;
      },
      select: function () {
        v2991.sign.open = !v2991.sign.open;
        if (v2991.sign.open) {
          v2991.sign.style.display = "inline-block";
        } else {
          v2991.sign.style.display = "none";
        }
      },
      ok: function () {
        v2815.ΔᐃᐃΔΔⲆΔⲆⲆ(v2813.sign.ⲆⲆⵠᐃⵠ, v2991.sign.ⵠⲆΔΔⲆᐃΔ);
        v2991.sign.select();
      },
      up: function () {
        v2991.sign.ⵠⲆΔΔⲆᐃΔ = v2991.sign.ⵠⲆΔΔⲆᐃΔ === 0 ? 3 : v2991.sign.ⵠⲆΔΔⲆᐃΔ - 1;
        v2991.sign.ⲆΔⲆᐃⵠⵠⲆ.src = "./img/sign" + v2991.sign.ⵠⲆΔΔⲆᐃΔ + ".png";
      },
      down: function () {
        v2991.sign.ⵠⲆΔΔⲆᐃΔ = (v2991.sign.ⵠⲆΔΔⲆᐃΔ + 1) % 4;
        v2991.sign.ⲆΔⲆᐃⵠⵠⲆ.src = "./img/sign" + v2991.sign.ⵠⲆΔΔⲆᐃΔ + ".png";
      }
    };
    document.getElementById("quit_sign").addEventListener("mouseup", this.sign.select, vV144);
    document.getElementById("ok_sign").addEventListener("mouseup", this.sign.ok, false);
    document.getElementById("sign_up").addEventListener("mouseup", this.sign.up, vVVVVV142);
    document.getElementById("sign_down").addEventListener("mouseup", this.sign.down, vVVVV14);
    this.ᐃΔᐃⵠΔ = {
      open: vVVV1422,
      id: document.getElementById("shop_market"),
      style: document.getElementById("shop_market").style,
      items: [{
        id: 0,
        name: "wood",
        ᐃⲆᐃΔⲆ: 1,
        b: 1,
        a: 3,
        ⵠᐃⵠⲆⵠ: 316
      }, {
        id: 1,
        name: "stone",
        ᐃⲆᐃΔⲆ: 1,
        b: 1,
        a: 4,
        ⵠᐃⵠⲆⵠ: 315
      }, {
        id: 2,
        name: "gold",
        ᐃⲆᐃΔⲆ: 1,
        b: 1,
        a: 6,
        ⵠᐃⵠⲆⵠ: 297
      }, {
        id: 3,
        name: "diamond",
        ᐃⲆᐃΔⲆ: 4,
        b: 4,
        a: 1,
        ⵠᐃⵠⲆⵠ: 298
      }, {
        id: 4,
        name: "amethyst",
        ᐃⲆᐃΔⲆ: 8,
        b: 8,
        a: 1,
        ⵠᐃⵠⲆⵠ: 418
      }, {
        id: 5,
        name: "reidite",
        ᐃⲆᐃΔⲆ: 16,
        b: 16,
        a: 1,
        ⵠᐃⵠⲆⵠ: 938
      }, {
        id: 6,
        name: "pumpkin_seed",
        ᐃⲆᐃΔⲆ: 10,
        b: 10,
        a: 1,
        ⵠᐃⵠⲆⵠ: 808
      }, {
        id: 7,
        name: "carrot_seed",
        ᐃⲆᐃΔⲆ: 16,
        b: 16,
        a: 1,
        ⵠᐃⵠⲆⵠ: 949
      }, {
        id: 8,
        name: "tomato_seed",
        ᐃⲆᐃΔⲆ: 20,
        b: 20,
        a: 1,
        ⵠᐃⵠⲆⵠ: 959
      }, {
        id: 9,
        name: "thornbush_seed",
        ᐃⲆᐃΔⲆ: 30,
        b: 30,
        a: 1,
        ⵠᐃⵠⲆⵠ: 845
      }, {
        id: 10,
        name: "garlic_seed",
        ᐃⲆᐃΔⲆ: 40,
        b: 40,
        a: 1,
        ⵠᐃⵠⲆⵠ: 834
      }, {
        id: 11,
        name: "watermelon_seed",
        ᐃⲆᐃΔⲆ: 60,
        b: 60,
        a: 1,
        ⵠᐃⵠⲆⵠ: 966
      }],
      button: f418(60, 60, 0, ⵠΔ[795]),
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 450) + "px";
        this.style.top = Math.floor(v449 - 270) + "px";
      },
      select: function () {
        v2991.ᐃΔᐃⵠΔ.open = !v2991.ᐃΔᐃⵠΔ.open;
        if (v2991.ᐃΔᐃⵠΔ.open) {
          v2991.ᐃΔᐃⵠΔ.style.display = "inline-block";
        } else {
          v2991.ᐃΔᐃⵠΔ.style.display = "none";
        }
      },
      ΔᐃΔⵠΔ: function () {
        v2991.ᐃΔᐃⵠΔ.style.display = "none";
        v2991.ᐃΔᐃⵠΔ.open = vVVV1422;
      },
      ΔⵠᐃᐃⲆⲆⵠ: function () {
        v2815.ⲆⲆⲆⲆᐃᐃΔΔⲆ(this.ᐃⲆΔᐃⲆᐃⲆ);
      },
      ᐃⲆΔΔΔ: function () {
        this.id;
        if (this.ᐃⲆΔᐃⲆᐃⲆ.a === 1) {
          var v2537 = Math.floor(Number(this.value) * this.ᐃⲆΔᐃⲆᐃⲆ.b);
          this.ᐃⲆΔᐃⲆᐃⲆ.ᐃⲆᐃΔⲆ = v2537;
          document.getElementById(this.ᐃⲆΔᐃⲆᐃⲆ.name + "_trad_number").innerHTML = v2537 + "";
        } else {
          v2537 = Math.floor(Number(this.value) / this.ᐃⲆΔᐃⲆᐃⲆ.a);
          this.ᐃⲆΔᐃⲆᐃⲆ.ᐃⲆᐃΔⲆ = v2537;
          document.getElementById(this.ᐃⲆΔᐃⲆᐃⲆ.name + "_trad_number").innerHTML = v2537 + "";
        }
      }
    };
    document.getElementById("quit_market").addEventListener("mouseup", this.ᐃΔᐃⵠΔ.ΔᐃΔⵠΔ, vVVVV14);
    var v2538 = [["mouseup", this.ᐃΔᐃⵠΔ.ΔⵠᐃᐃⲆⲆⵠ, "buy_"], ["click", this.ᐃΔᐃⵠΔ.ᐃⲆΔΔΔ, ""], ["change", this.ᐃΔᐃⵠΔ.ᐃⲆΔΔΔ, ""], ["keypress", this.ᐃΔᐃⵠΔ.keypress, ""]];
    for (var v2539 = 0; v2539 < this.ᐃΔᐃⵠΔ.items.length; v2539++) {
      var v2540 = this.ᐃΔᐃⵠΔ.items[v2539];
      document.getElementById(v2540.name + "_market").src = vVUndefined22 === ⵠΔ[v2540.ⵠᐃⵠⲆⵠ][0].ΔⲆⲆᐃⲆ ? ⵠΔ[v2540.ⵠᐃⵠⲆⵠ][0].src : ⵠΔ[v2540.ⵠᐃⵠⲆⵠ][0].ΔⲆⲆᐃⲆ;
      if (v2540.a === 1) {
        document.getElementById(v2540.name + "_trad_number").innerHTML = v2540.b;
        document.getElementById(v2540.name + "_number").value = 1;
        document.getElementById(v2540.name + "_number").step = 1;
        document.getElementById(v2540.name + "_number").min = 1;
        document.getElementById(v2540.name + "_number").max = Math.floor(255 / v2540.b);
      } else {
        document.getElementById(v2540.name + "_trad_number").innerHTML = 1;
        document.getElementById(v2540.name + "_number").value = v2540.a;
        document.getElementById(v2540.name + "_number").step = v2540.a;
        document.getElementById(v2540.name + "_number").min = v2540.a;
      }
      document.getElementById("buy_" + v2540.name + "_number").ᐃⲆΔᐃⲆᐃⲆ = v2540;
      document.getElementById(v2540.name + "_number").ᐃⲆΔᐃⲆᐃⲆ = v2540;
      for (var v2541 = 0; v2541 < v2538.length; v2541++) {
        document.getElementById(v2538[v2541][2] + v2540.name + "_number").addEventListener(v2538[v2541][0], v2538[v2541][1], vV142);
      }
    }
    $("[type='number']").keypress(function (p1634) {
      p1634.preventDefault();
    });
    this.options = {
      open: false,
      id: document.getElementById("option_in_game"),
      style: document.getElementById("option_in_game").style,
      ΔⵠⲆⵠΔ: document.getElementById("agree_ing").style,
      ΔⲆⵠΔⵠⲆⵠ: document.getElementById("cancel_agree_ing").style,
      ⲆᐃᐃⲆΔⲆΔ: document.getElementById("quest_agree_ing").style,
      ΔⲆⲆⵠⲆᐃΔ: document.getElementById("spectator_agree_ing").style,
      ΔΔⲆΔⵠⲆⲆ: document.getElementById("auto_feed_agree_ing").style,
      ᐃᐃΔᐃΔⵠⲆ: document.getElementById("info_agree_ing").style,
      ⲆΔΔᐃⵠΔⲆ: document.getElementById("pixelated_agree_ing").style,
      button: f418(60, 60, 0, ⵠΔ[727]),
      ΔΔⵠᐃΔΔΔᐃⵠ: function () {
        v2991.options.open = !v2991.options.open;
        if (v2991.options.open) {
          v2991.options.style.display = "inline-block";
        } else {
          v2991.options.style.display = "none";
        }
      },
      ᐃᐃⵠⵠⵠᐃⲆⵠΔ: function () {
        v2811.ⵠΔⲆΔᐃᐃⲆ();
      },
      ⲆⵠᐃⵠᐃⲆΔᐃΔ: function () {
        v2811.ᐃⵠⲆΔⲆᐃⵠ();
      },
      high: function () {
        v2811.ΔᐃⵠᐃⲆⵠⲆⲆⲆ();
      },
      low: function () {
        v2811.ⵠⵠΔⵠΔᐃᐃΔᐃ();
      },
      ⵠΔⲆᐃΔ: function () {
        v2991.ⲆᐃⲆΔ.ⵠΔⲆᐃΔ();
      },
      ΔⵠᐃⲆⵠᐃⲆⲆⵠ: function () {
        v2991.ⲆⲆⵠⲆⵠ.ⵠΔⲆᐃΔ();
      },
      ᐃᐃⵠⲆΔⲆⵠᐃΔ: function () {
        v2991.ΔᐃΔΔ.ⵠΔⲆᐃΔ();
      },
      ΔⵠᐃᐃᐃᐃᐃⲆⵠ: function () {
        v2813.ΔⲆⲆⵠⲆ.ⵠⵠⲆⲆⲆⲆⵠ();
      },
      ⲆⵠⲆᐃΔΔΔᐃⲆ: function () {
        v2813.ⵠⵠⵠⲆΔ.ⵠⵠⲆⲆⲆⲆⵠ();
      },
      ΔᐃΔⵠΔ: function () {
        v2991.options.style.display = "none";
        v2991.options.open = vVVVVV142;
      },
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 235) + "px";
        this.style.top = Math.floor(v449 - 170) + "px";
      }
    };
    document.getElementById("azerty_ing").addEventListener("mouseup", this.options.ᐃᐃⵠⵠⵠᐃⲆⵠΔ, vVV143);
    document.getElementById("qwerty_ing").addEventListener("mouseup", this.options.ⲆⵠᐃⵠᐃⲆΔᐃΔ, vVV143);
    document.getElementById("low_ing").addEventListener("mouseup", this.options.low, vVVV1423);
    document.getElementById("high_ing").addEventListener("mouseup", this.options.high, vV14);
    document.getElementById("quit_opt").addEventListener("mouseup", this.options.ΔᐃΔⵠΔ, false);
    document.getElementById("case_agree_opt").addEventListener("mouseup", this.options.ⵠΔⲆᐃΔ, v14);
    document.getElementById("quest_case_agree_opt").addEventListener("mouseup", this.options.ᐃᐃⵠⲆΔⲆⵠᐃΔ, vVVV1423);
    document.getElementById("cancel_case_agree_opt").addEventListener("mouseup", this.options.ΔⵠᐃⲆⵠᐃⲆⲆⵠ, false);
    document.getElementById("spectator_case_agree_opt").addEventListener("mouseup", this.options.ΔⵠᐃᐃᐃᐃᐃⲆⵠ, vVVVVV142);
    document.getElementById("auto_feed_case_agree_opt").addEventListener("mouseup", this.options.ⲆⵠⲆᐃΔΔΔᐃⲆ, vV143);
    this.ⲆⲆⵠⲆⵠ = {
      open: vVVVVV1422,
      ⲆᐃΔΔⲆ: ᐃⵠΔΔ.get("starve_cancel") ? ᐃⵠΔΔ.get("starve_cancel") === "0" ? 0 : 1 : 1,
      id: document.getElementById("cancel_sure_delete"),
      style: document.getElementById("cancel_sure_delete").style,
      ΔⵠⲆⵠΔ: document.getElementById("cancel_agree").style,
      button: 0,
      ᐃⲆ: 0,
      ΔᐃΔⵠΔ: function () {
        v2991.ⲆⲆⵠⲆⵠ.style.display = "none";
        v2991.ⲆⲆⵠⲆⵠ.open = vV144;
      },
      ⲆᐃᐃᐃⲆⵠΔ: function () {
        if (v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆⲆ) {
          v2815.ΔⲆᐃⲆᐃⵠⲆⲆⲆ();
        }
        v2991.ⲆⲆⵠⲆⵠ.ΔᐃΔⵠΔ();
      },
      ⵠΔⲆᐃΔ: function () {
        if (v2991.ⲆⲆⵠⲆⵠ.ⲆᐃΔΔⲆ) {
          ᐃⵠΔΔ.set("starve_cancel", "0");
          v2991.ⲆⲆⵠⲆⵠ.ΔⵠⲆⵠΔ.display = "inline-block";
          v2991.options.ΔⲆⵠΔⵠⲆⵠ.display = "none";
        } else {
          ᐃⵠΔΔ.set("starve_cancel", "1");
          v2991.ⲆⲆⵠⲆⵠ.ΔⵠⲆⵠΔ.display = "none";
          v2991.options.ΔⲆⵠΔⵠⲆⵠ.display = "inline-block";
        }
        v2991.ⲆⲆⵠⲆⵠ.ⲆᐃΔΔⲆ = !v2991.ⲆⲆⵠⲆⵠ.ⲆᐃΔΔⲆ;
      },
      ⲆᐃⲆⵠⵠⵠΔ: function () {
        if (this.ⲆᐃΔΔⲆ) {
          this.style.display = "inline-block";
          this.open = true;
        } else {
          this.ⲆᐃᐃᐃⲆⵠΔ();
        }
      },
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 235) + "px";
        this.style.top = Math.floor(v449 - 130) + "px";
      }
    };
    this.ⲆⲆⵠⲆⵠ.id.oncontextmenu = function () {
      return false;
    };
    this.ⲆⲆⵠⲆⵠ.ΔⵠⲆⵠΔ.display = "none";
    if (this.ⲆⲆⵠⲆⵠ.ⲆᐃΔΔⲆ) {
      this.options.ΔⲆⵠΔⵠⲆⵠ.display = "inline-block";
    } else {
      this.options.ΔⲆⵠΔⵠⲆⵠ.display = "none";
    }
    document.getElementById("cancel_yes_delete").addEventListener("mouseup", this.ⲆⲆⵠⲆⵠ.ⲆᐃᐃᐃⲆⵠΔ, vV144);
    document.getElementById("cancel_no_delete").addEventListener("mouseup", this.ⲆⲆⵠⲆⵠ.ΔᐃΔⵠΔ, false);
    document.getElementById("cancel_case_agree").addEventListener("mouseup", this.ⲆⲆⵠⲆⵠ.ⵠΔⲆᐃΔ, vVVVV142);
    document.addEventListener("cancel_sure_delete", function (p1635) {
      p1635.preventDefault();
    }, false);
    this.ΔΔⲆΔⲆᐃΔ = {
      ⲆᐃΔΔⲆ: ᐃⵠΔΔ.get("starve_aliasing") ? ᐃⵠΔΔ.get("starve_aliasing") === "0" ? 0 : 1 : 1,
      ⲆΔΔᐃᐃᐃⲆ: function (p1636) {
        document.getElementById("game_canvas").style.imageRendering = p1636 ? "pixelated" : "auto";
      },
      ⵠΔⲆᐃΔ: function () {
        if (v2991.ΔΔⲆΔⲆᐃΔ.ⲆᐃΔΔⲆ === 0) {
          ᐃⵠΔΔ.set("starve_aliasing", "1");
          v2991.ΔΔⲆΔⲆᐃΔ.ⲆΔΔᐃᐃᐃⲆ(1);
          v2991.options.ⲆΔΔᐃⵠΔⲆ.display = "inline-block";
        } else {
          ᐃⵠΔΔ.set("starve_aliasing", "0");
          v2991.ΔΔⲆΔⲆᐃΔ.ⲆΔΔᐃᐃᐃⲆ(0);
          v2991.options.ⲆΔΔᐃⵠΔⲆ.display = "none";
        }
        v2991.ΔΔⲆΔⲆᐃΔ.ⲆᐃΔΔⲆ = (v2991.ΔΔⲆΔⲆᐃΔ.ⲆᐃΔΔⲆ + 1) % 2;
      }
    };
    if (this.ΔΔⲆΔⲆᐃΔ.ⲆᐃΔΔⲆ === 1) {
      this.options.ⲆΔΔᐃⵠΔⲆ.display = "inline-block";
    } else {
      this.ΔΔⲆΔⲆᐃΔ.ⲆΔΔᐃᐃᐃⲆ(0);
      this.options.ⲆΔΔᐃⵠΔⲆ.display = "none";
    }
    document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.ΔΔⲆΔⲆᐃΔ.ⵠΔⲆᐃΔ, false);
    this.ⲆⵠⲆⲆᐃ = {
      ⲆᐃΔΔⲆ: ᐃⵠΔΔ.get("starve_info_box") ? ᐃⵠΔΔ.get("starve_info_box") === "0" ? 0 : 1 : 1,
      display: 0,
      x: 0,
      y: 0,
      id: 0,
      ⵠⲆᐃⲆ: 0,
      ⵠΔⲆᐃΔ: function () {
        if (v2991.ⲆⵠⲆⲆᐃ.ⲆᐃΔΔⲆ === 0) {
          ᐃⵠΔΔ.set("starve_info_box", "1");
          v2991.options.ᐃᐃΔᐃΔⵠⲆ.display = "inline-block";
        } else {
          ᐃⵠΔΔ.set("starve_info_box", "0");
          v2991.options.ᐃᐃΔᐃΔⵠⲆ.display = "none";
        }
        v2991.ⲆⵠⲆⲆᐃ.ⲆᐃΔΔⲆ = (v2991.ⲆⵠⲆⲆᐃ.ⲆᐃΔΔⲆ + 1) % 2;
      },
      ⲆᐃΔⲆ: function (p1637, p1638, p1639) {
        if (p1637 && this.ⲆᐃΔΔⲆ) {
          this.display = 1;
          this.id = p1639 === 0 ? p1638.id : v732[p1638.id].ⵠᐃⲆⵠ;
          this.x = p1638.info.translate.x + 80;
          this.y = p1638.info.translate.y;
          this.ⵠⲆᐃⲆ = p1639;
        }
        return p1637;
      }
    };
    if (this.ⲆⵠⲆⲆᐃ.ⲆᐃΔΔⲆ === 1) {
      this.options.ᐃᐃΔᐃΔⵠⲆ.display = "inline-block";
    } else {
      this.options.ᐃᐃΔᐃΔⵠⲆ.display = "none";
    }
    document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.ⲆⵠⲆⲆᐃ.ⵠΔⲆᐃΔ, vVVVVV14);
    if (ᐃⵠΔΔ.get("starve_scale")) {
      v457 = Number(ᐃⵠΔΔ.get("starve_scale"));
      document.getElementById("input_ratio").value = v457;
      v457 *= v522 / v523;
      f54();
    }
    this.ⲆⵠΔⵠᐃΔΔ = function () {
      ᐃⵠΔΔ.set("starve_scale", "" + document.getElementById("input_ratio").value);
      v457 = v522 / v523 * document.getElementById("input_ratio").value;
      f54();
    };
    document.getElementById("input_ratio").addEventListener("input", this.ⲆⵠΔⵠᐃΔΔ, vVV14);
    this.ⲆᐃⲆΔ = {
      open: false,
      ⲆᐃΔΔⲆ: ᐃⵠΔΔ.get("starve_safe") && ᐃⵠΔΔ.get("starve_safe") === "0" ? 0 : 1,
      id: document.getElementById("sure_delete"),
      style: document.getElementById("sure_delete").style,
      ΔⵠⲆⵠΔ: document.getElementById("agree").style,
      button: 0,
      ᐃⲆ: 0,
      ΔᐃΔⵠΔ: function () {
        v2991.ⲆᐃⲆΔ.style.display = "none";
        v2991.ⲆᐃⲆΔ.open = false;
      },
      all: function () {
        if (!v2813.ᐃⵠⵠⵠⵠ.wait) {
          if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && v2813.ⵠⲆᐃⲆ.id < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled) {
            v2815.ᐃᐃΔΔᐃᐃΔⵠΔ(v2991.ⲆᐃⲆΔ.button);
          }
          v2991.ⲆᐃⲆΔ.ΔᐃΔⵠΔ();
        }
      },
      ᐃΔⲆΔ: function () {
        if (v2813.ⵠⲆᐃⲆ.ⲆⲆᐃΔⲆ && !v2813.ᐃⵠⵠⵠⵠ.wait) {
          if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && v2813.ⵠⲆᐃⲆ.id < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled) {
            v2815.ᐃΔΔᐃΔᐃΔΔΔ(v2991.ⲆᐃⲆΔ.button);
          }
          v2991.ⲆᐃⲆΔ.ΔᐃΔⵠΔ();
        }
      },
      ᐃⵠⵠⵠⲆΔⵠΔᐃ: function () {
        if (!v2813.ᐃⵠⵠⵠⵠ.wait) {
          if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && v2813.ⵠⲆᐃⲆ.id < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled) {
            v2815.ᐃΔⲆΔⵠΔᐃΔⲆ(v2991.ⲆᐃⲆΔ.button);
          }
          v2991.ⲆᐃⲆΔ.ΔᐃΔⵠΔ();
        }
      },
      ⵠΔⲆᐃΔ: function () {
        if (v2991.ⲆᐃⲆΔ.ⲆᐃΔΔⲆ) {
          ᐃⵠΔΔ.set("starve_safe", "0");
          v2991.ⲆᐃⲆΔ.ΔⵠⲆⵠΔ.display = "inline-block";
          v2991.options.ΔⵠⲆⵠΔ.display = "none";
        } else {
          ᐃⵠΔΔ.set("starve_safe", "1");
          v2991.ⲆᐃⲆΔ.ΔⵠⲆⵠΔ.display = "none";
          v2991.options.ΔⵠⲆⵠΔ.display = "inline-block";
        }
        v2991.ⲆᐃⲆΔ.ⲆᐃΔΔⲆ = !v2991.ⲆᐃⲆΔ.ⲆᐃΔΔⲆ;
      },
      ⲆᐃⲆⵠⵠⵠΔ: function (p1640) {
        this.button = p1640;
        document.getElementById("item_to_del").src = ⵠΔ[v628[p1640].ⵠᐃ][0].ΔⲆⲆᐃⲆ === undefined ? ⵠΔ[v628[p1640].ⵠᐃ][0].src : ⵠΔ[v628[p1640].ⵠᐃ][0].ΔⲆⲆᐃⲆ;
        if (v628[p1640].ᐃΔⲆΔ && !v2813.ⵠΔᐃᐃⲆ && v2813.ⵠⲆᐃⲆ.ⲆⲆᐃΔⲆ) {
          document.getElementById("recycle_delete").style.display = "inline-block";
        } else {
          document.getElementById("recycle_delete").style.display = "none";
        }
        if (this.ⲆᐃΔΔⲆ) {
          this.style.display = "inline-block";
          this.open = true;
        } else {
          this.all();
        }
      },
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 235) + "px";
        this.style.top = Math.floor(v449 - 175) + "px";
      }
    };
    this.ⲆᐃⲆΔ.ΔⵠⲆⵠΔ.display = "none";
    if (this.ⲆᐃⲆΔ.ⲆᐃΔΔⲆ) {
      this.options.ΔⵠⲆⵠΔ.display = "inline-block";
    } else {
      this.options.ΔⵠⲆⵠΔ.display = "none";
    }
    document.getElementById("one_delete").addEventListener("mouseup", this.ⲆᐃⲆΔ.ᐃⵠⵠⵠⲆΔⵠΔᐃ, vVV14);
    document.getElementById("yes_delete").addEventListener("mouseup", this.ⲆᐃⲆΔ.all, vVVVV14);
    document.getElementById("recycle_delete").addEventListener("mouseup", this.ⲆᐃⲆΔ.ᐃΔⲆΔ, false);
    document.getElementById("no_delete").addEventListener("mouseup", this.ⲆᐃⲆΔ.ΔᐃΔⵠΔ, false);
    document.getElementById("case_agree").addEventListener("mouseup", this.ⲆᐃⲆΔ.ⵠΔⲆᐃΔ, vVVV143);
    this.ΔᐃᐃⲆⵠ = {
      open: vVVVVV14,
      ⲆⲆⲆⲆⵠ: -1,
      button: f418(60, 60, 0, ⵠΔ[592]),
      id: document.getElementById("shop_starterkit"),
      style: document.getElementById("shop_starterkit").style,
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 300) + "px";
        this.style.top = Math.floor(v449 - 215) + "px";
      },
      ΔᐃΔⵠΔ: function () {
        v2991.ΔᐃᐃⲆⵠ.open = false;
        v2991.ΔᐃᐃⲆⵠ.style.display = "none";
      },
      select: function () {
        v2991.ΔᐃᐃⲆⵠ.open = !v2991.ΔᐃᐃⲆⵠ.open;
        if (v2991.ΔᐃᐃⲆⵠ.open) {
          v2991.ΔᐃᐃⲆⵠ.style.display = "inline-block";
        } else {
          v2991.ΔᐃᐃⲆⵠ.style.display = "none";
        }
      },
      ΔⵠᐃᐃⲆⲆⵠ: function () {
        if (v2991.ΔᐃᐃⲆⵠ.ⲆⲆⲆⲆⵠ >= 0) {
          v2815.ΔⵠⵠⵠᐃⵠⵠⲆⵠ(v2991.ΔᐃᐃⲆⵠ.ⲆⲆⲆⲆⵠ);
          v2991.ΔᐃᐃⲆⵠ.ΔᐃΔⵠΔ();
          if (ga) {
            ga("send", "event", "Game", "kit", "" + v2991.ΔᐃᐃⲆⵠ.ⲆⲆⲆⲆⵠ);
          }
        }
      },
      ᐃⵠᐃⲆⵠ: function () {
        var v2542 = v2813.ΔᐃᐃⲆⵠ.value;
        document.getElementById("points_bank").innerHTML = ᐃⵠⵠ.ΔᐃΔⵠⵠΔΔ(v2542) + " points";
        for (var v2543 = 0; v2543 < v2268.length; v2543++) {
          if (v2268[v2543].ⲆⵠᐃΔΔ > v2542) {
            document.getElementById("starter" + (v2543 + 1)).style.opacity = "0.4";
          } else {
            document.getElementById("starter" + (v2543 + 1)).style.opacity = "1";
          }
        }
        for (v2543 = 1; v2543 < 13; v2543++) {
          document.getElementById("inv_shop" + v2543).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2543).innerHTML = "";
        }
        document.getElementById("buy_kit").style.opacity = "0.2";
      },
      ᐃⵠᐃⵠᐃⲆᐃⲆⵠ: function () {
        if (this.id.length > 8) {
          var vNumber = Number(this.id.charAt(7) + this.id.charAt(8));
        } else {
          vNumber = Number(this.id.charAt(7));
        }
        var v2544 = v2268[vNumber - 1];
        if (v2813.ΔᐃᐃⲆⵠ.value >= v2544.ⲆⵠᐃΔΔ) {
          v2991.ΔᐃᐃⲆⵠ.ⲆⲆⲆⲆⵠ = vNumber;
          document.getElementById("buy_kit").style.opacity = "1";
        } else {
          v2991.ΔᐃᐃⲆⵠ.ⲆⲆⲆⲆⵠ = -1;
          document.getElementById("buy_kit").style.opacity = "0.2";
        }
        v2544 = v2544.items;
        for (var v2545 = 1, v2546 = 1; v2545 < v2544.length + 1; v2545++) {
          if (v2544[v2545 - 1][1] !== 29) {
            document.getElementById("inv_shop" + v2546).style.display = "inline-block";
            document.getElementById("inv_shop" + v2546).src = ⵠΔ[v628[v2544[v2545 - 1][1]].ⵠᐃ][0].ΔⲆⲆᐃⲆ === undefined ? ⵠΔ[v628[v2544[v2545 - 1][1]].ⵠᐃ][0].src : ⵠΔ[v628[v2544[v2545 - 1][1]].ⵠᐃ][0].ΔⲆⲆᐃⲆ;
            document.getElementById("amount_shop" + v2546).innerHTML = "" + v2544[v2545 - 1][0];
            v2546++;
          }
        }
        for (; v2546 < 13; v2546++) {
          document.getElementById("inv_shop" + v2546).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2546).innerHTML = "";
        }
      }
    };
    document.getElementById("quit3").addEventListener("mouseup", this.ΔᐃᐃⲆⵠ.ΔᐃΔⵠΔ, false);
    document.getElementById("buy_kit").addEventListener("mouseup", this.ΔᐃᐃⲆⵠ.ΔⵠᐃᐃⲆⲆⵠ, vVVV14);
    for (v2541 = 1; v2541 < 11; v2541++) {
      document.getElementById("starter" + v2541).addEventListener("mouseup", this.ΔᐃᐃⲆⵠ.ᐃⵠᐃⵠᐃⲆᐃⲆⵠ, vVV143);
    }
    this.ΔᐃΔΔ = {
      open: false,
      ⲆᐃΔΔⲆ: ᐃⵠΔΔ.get("starve_quests") && ᐃⵠΔΔ.get("starve_quests") === "1" ? 1 : 0,
      button: f418(60, 60, 0, ⵠΔ[755]),
      id: document.getElementById("chronoquest"),
      style: document.getElementById("chronoquest").style,
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(v445 - 420) + "px";
        this.style.top = Math.floor(v449 - 270) + "px";
      },
      ΔᐃΔⵠΔ: function () {
        v2991.ΔᐃΔΔ.style.display = "none";
        v2991.ΔᐃΔΔ.open = false;
      },
      select: function () {
        v2991.ΔᐃΔΔ.open = !v2991.ΔᐃΔΔ.open;
        if (v2991.ΔᐃΔΔ.open) {
          v2991.ΔᐃΔΔ.style.display = "inline-block";
        } else {
          v2991.ΔᐃΔΔ.style.display = "none";
        }
      },
      list: [],
      reset: function () {
        for (var v2547 = 0; v2547 < v2274.length; v2547++) {
          this.list[v2547] = 1;
          document.getElementById("timeremain_" + v2547).style.display = "inline-block";
          document.getElementById("time_finished_" + v2547).style.display = "none";
          document.getElementById("claim_reward_" + v2547).style.display = "none";
        }
      },
      ⵠⵠⵠᐃⲆΔⲆ: 0,
      ⵠΔⲆⲆⲆΔᐃ: 0,
      ⵠⲆᐃⲆΔⵠⲆⵠΔ: function () {
        if (v2991.ΔᐃΔΔ.open) {
          var v2548 = new Date().getTime();
          if (!(v2548 - this.ⵠⵠⵠᐃⲆΔⲆ < 1000)) {
            this.ⵠⵠⵠᐃⲆΔⲆ = v2548;
            for (var v2549 = 0; v2549 < v2274.length; v2549++) {
              if (v2991.ΔᐃΔΔ.list[v2549]) {
                var v2550 = v2274[v2549].time - (v2548 - v2812.ΔΔΔⲆΔ.ᐃⵠᐃⲆⵠ + v2991.ΔᐃΔΔ.ⵠΔⲆⲆⲆΔᐃ);
                document.getElementById("timeremain_" + v2549).innerHTML = v2550 > 960000 ? Math.floor(v2550 / 480000) + " days" : v2550 > 480000 ? Math.floor(v2550 / 480000) + " day" : v2550 > 60000 ? Math.floor(v2550 / 60000) + " min" : Math.floor(v2550 / 1000) + " sec";
              }
            }
          }
        }
      },
      restore: function (p1641) {
        for (var v2551 = 0; v2551 < p1641.length; v2551++) {
          if (p1641[v2551] != 1) {
            v2991.ΔᐃΔΔ.ᐃᐃⲆᐃⵠΔⵠ(v2551, p1641[v2551]);
          }
        }
      },
      ᐃᐃⲆᐃⵠΔⵠ: function (p1642, p1643) {
        if (p1643 === 3 && (p1642 === 11 || p1642 === 12)) {
          v2813.ⵠⲆΔⵠ.ⵠⵠⵠⵠᐃⵠⲆ(0, 1);
          v2991.ΔⲆᐃⲆⵠⲆⵠ();
        }
        document.getElementById("timeremain_" + p1642).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        if (p1643 > 1) {
          document.getElementById("time_finished_" + p1642).innerHTML = "SUCCEED";
          document.getElementById("timeremain_" + p1642).style.display = "none";
        } else if (p1643 === 0) {
          document.getElementById("time_finished_" + p1642).innerHTML = "FAILED";
          document.getElementById("timeremain_" + p1642).style.display = "none";
        }
        document.getElementById("claim_reward_" + p1642).style.display = p1643 === 2 ? "inline-block" : "none";
        document.getElementById("time_finished_" + p1642).style.display = "inline";
        v2991.ΔᐃΔΔ.list[p1642] = 0;
      },
      modify: function (p1644, p1645) {
        v2991.ΔᐃΔΔ.ᐃᐃⲆᐃⵠΔⵠ(p1644, p1645);
        if (v2991.ΔᐃΔΔ.ⲆᐃΔΔⲆ) {
          v2991.ΔᐃΔΔ.open = vVVV162;
          v2991.ΔᐃΔΔ.style.display = "inline-block";
        }
      },
      ⵠΔⲆᐃΔ: function () {
        if (v2991.ΔᐃΔΔ.ⲆᐃΔΔⲆ) {
          ᐃⵠΔΔ.set("starve_quests", "0");
          v2991.options.ⲆᐃᐃⲆΔⲆΔ.display = "none";
        } else {
          ᐃⵠΔΔ.set("starve_quests", "1");
          v2991.options.ⲆᐃᐃⲆΔⲆΔ.display = "inline-block";
        }
        v2991.ΔᐃΔΔ.ⲆᐃΔΔⲆ = !v2991.ΔᐃΔΔ.ⲆᐃΔΔⲆ;
      },
      ᐃᐃⵠΔⵠΔΔⵠⲆ: function () {
        var vNumber2 = Number(this.id.charAt(13));
        var vNumber3 = Number(this.id.charAt(14));
        if (this.id.charAt(14) !== "" && vNumber3 >= 0 && vNumber3 <= 9) {
          vNumber2 = vNumber2 * 10 + vNumber3;
        }
        v2815.ⵠᐃⵠΔΔⲆⵠᐃΔ(vNumber2);
      }
    };
    if (this.ΔᐃΔΔ.ⲆᐃΔΔⲆ) {
      this.options.ⲆᐃᐃⲆΔⲆΔ.display = "inline-block";
    } else {
      this.options.ⲆᐃᐃⲆΔⲆΔ.display = "none";
    }
    document.getElementById("quit_chronoquest").addEventListener("mouseup", this.ΔᐃΔΔ.ΔᐃΔⵠΔ, vVVVV142);
    for (v2541 = 0; v2541 < v2274.length; v2541++) {
      document.getElementById("claim_reward_" + v2541).addEventListener("mouseup", this.ΔᐃΔΔ.ᐃᐃⵠΔⵠΔΔⵠⲆ, vVVVVV142);
    }
    this.ⵠᐃⲆᐃ = {
      open: false,
      button: f418(60, 60, 0, ⵠΔ[708]),
      list: {
        id: document.getElementById("recipe_craft"),
        style: document.getElementById("recipe_craft").style,
        ⵠⵠΔⲆΔⵠⵠ: [],
        ᐃᐃⵠΔᐃΔᐃ: 0,
        ⲆᐃⲆ: function () {
          this.style.left = Math.floor(v445 - 335) + "px";
          this.style.top = Math.floor(v449 - 215) + "px";
        },
        ΔᐃΔⵠΔ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          v2991.ⵠᐃⲆᐃ.open = vV144;
        },
        ᐃⵠⲆΔᐃⲆᐃ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          document.getElementById("home_craft").style.display = "inline-block";
        },
        ΔⵠᐃΔ: function (p1646) {
          if ((v2552 = this.ⵠⵠΔⲆΔⵠⵠ[p1646]).ᐃΔⲆ) {
            document.getElementById("watercraft").style.display = "inline-block";
          } else {
            document.getElementById("watercraft").style.display = "none";
          }
          if (v2552.f) {
            document.getElementById("firecraft").style.display = "inline-block";
          } else {
            document.getElementById("firecraft").style.display = "none";
          }
          if (v2552.w) {
            document.getElementById("workcraft").style.display = "inline-block";
          } else {
            document.getElementById("workcraft").style.display = "none";
          }
          if (v2552.e) {
            document.getElementById("wellcraft").style.display = "inline-block";
          } else {
            document.getElementById("wellcraft").style.display = "none";
          }
          for (var v2552 = v2552.r, v2553 = (p1646 = 0, 1); p1646 < v2552.length; p1646++) {
            document.getElementById("inv" + v2553).style.display = "inline-block";
            document.getElementById("inv" + v2553).src = ⵠΔ[v628[v2552[p1646][0]].ⵠᐃ][0].ΔⲆⲆᐃⲆ === vVUndefined20 ? ⵠΔ[v628[v2552[p1646][0]].ⵠᐃ][0].src : ⵠΔ[v628[v2552[p1646][0]].ⵠᐃ][0].ΔⲆⲆᐃⲆ;
            document.getElementById("numb" + v2553).innerHTML = "" + v2552[p1646][1];
            v2553++;
          }
          for (; v2553 < 6; v2553++) {
            document.getElementById("inv" + v2553).style.display = "none";
            document.getElementById("numb" + v2553).innerHTML = "";
          }
        },
        select: function (p1647) {
          this.ᐃᐃⵠΔᐃΔᐃ = p1647;
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("workcraft").style.display = "none";
          document.getElementById("firecraft").style.display = "none";
          document.getElementById("watercraft").style.display = "none";
          document.getElementById("wellcraft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "inline-block";
          document.getElementById("inv1").style.display = "none";
          document.getElementById("inv2").style.display = "none";
          document.getElementById("inv3").style.display = "none";
          document.getElementById("inv4").style.display = "none";
          document.getElementById("inv5").style.display = "none";
          document.getElementById("numb1").innerHTML = "";
          document.getElementById("numb2").innerHTML = "";
          document.getElementById("numb3").innerHTML = "";
          document.getElementById("numb4").innerHTML = "";
          document.getElementById("numb5").innerHTML = "";
          for (var v2554 = 0, v2555 = 0; v2554 < v732.length; v2554++) {
            var v2556 = v732[v2554];
            if (p1647 === v2556.ΔᐃΔ) {
              this.ⵠⵠΔⲆΔⵠⵠ[v2555] = v2556;
              v2555++;
              document.getElementById("img_" + v2555).style.display = "inline-block";
              document.getElementById("img_" + v2555).src = ⵠΔ[v628[v2556.ⵠᐃⲆⵠ].ⵠᐃ][0].ΔⲆⲆᐃⲆ === undefined ? ⵠΔ[v628[v2556.ⵠᐃⲆⵠ].ⵠᐃ][0].src : ⵠΔ[v628[v2556.ⵠᐃⲆⵠ].ⵠᐃ][0].ΔⲆⲆᐃⲆ;
            }
          }
          for (v2555++; v2555 < 49; v2555++) {
            document.getElementById("img_" + v2555).style.display = "none";
          }
        }
      },
      ⲆᐃᐃΔⵠᐃΔ: {
        id: document.getElementById("home_craft"),
        style: document.getElementById("home_craft").style,
        ⲆᐃⲆ: function () {
          this.style.left = Math.floor(v445 - 285) + "px";
          this.style.top = Math.floor(v449 - 170) + "px";
        },
        ΔᐃΔⵠΔ: function () {
          document.getElementById("home_craft").style.display = "none";
          v2991.ⵠᐃⲆᐃ.open = false;
        }
      },
      ΔΔΔᐃⲆᐃΔΔᐃ: function () {
        this.open = !this.open;
        if (this.open) {
          document.getElementById("home_craft").style.display = "inline-block";
        } else {
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "none";
        }
      }
    };
    document.getElementById("quit").addEventListener("mouseup", this.ⵠᐃⲆᐃ.ⲆᐃᐃΔⵠᐃΔ.ΔᐃΔⵠΔ, false);
    document.getElementById("quitmenu").addEventListener("mouseup", this.ⵠᐃⲆᐃ.list.ΔᐃΔⵠΔ, false);
    document.getElementById("backhome").addEventListener("mouseup", this.ⵠᐃⲆᐃ.list.ᐃⵠⲆΔᐃⲆᐃ, false);
    document.getElementById("hatcategory").addEventListener("mouseup", function () {
      v2991.ⵠᐃⲆᐃ.list.select(2);
    }, vVV143);
    document.getElementById("weaponcategory").addEventListener("mouseup", function () {
      v2991.ⵠᐃⲆᐃ.list.select(1);
    }, vVVV14);
    document.getElementById("toolcategory").addEventListener("mouseup", function () {
      v2991.ⵠᐃⲆᐃ.list.select(0);
    }, false);
    document.getElementById("foodcategory").addEventListener("mouseup", function () {
      v2991.ⵠᐃⲆᐃ.list.select(3);
    }, false);
    document.getElementById("placeablecategory").addEventListener("mouseup", function () {
      v2991.ⵠᐃⲆᐃ.list.select(4);
    }, false);
    document.getElementById("constructioncategory").addEventListener("mouseup", function () {
      v2991.ⵠᐃⲆᐃ.list.select(5);
    }, false);
    document.getElementById("img_1").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(0);
    }, false);
    document.getElementById("img_2").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(1);
    }, vVVV144);
    document.getElementById("img_3").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(2);
    }, vVVV1422);
    document.getElementById("img_4").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(3);
    }, v14);
    document.getElementById("img_5").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(4);
    }, vVV142);
    document.getElementById("img_6").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(5);
    }, false);
    document.getElementById("img_7").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(6);
    }, false);
    document.getElementById("img_8").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(7);
    }, vVVVV14);
    document.getElementById("img_9").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(8);
    }, false);
    document.getElementById("img_10").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(9);
    }, false);
    document.getElementById("img_11").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(10);
    }, false);
    document.getElementById("img_12").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(11);
    }, false);
    document.getElementById("img_13").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(12);
    }, false);
    document.getElementById("img_14").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(13);
    }, false);
    document.getElementById("img_15").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(14);
    }, false);
    document.getElementById("img_16").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(15);
    }, vVV143);
    document.getElementById("img_17").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(16);
    }, vVVVVV142);
    document.getElementById("img_18").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(17);
    }, false);
    document.getElementById("img_19").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(18);
    }, false);
    document.getElementById("img_20").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(19);
    }, vVV142);
    document.getElementById("img_21").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(20);
    }, vVV143);
    document.getElementById("img_22").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(21);
    }, false);
    document.getElementById("img_23").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(22);
    }, false);
    document.getElementById("img_24").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(23);
    }, vVVV1423);
    document.getElementById("img_25").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(24);
    }, false);
    document.getElementById("img_26").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(25);
    }, false);
    document.getElementById("img_27").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(26);
    }, v14);
    document.getElementById("img_28").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(27);
    }, false);
    document.getElementById("img_29").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(28);
    }, vVVVV14);
    document.getElementById("img_30").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(29);
    }, v14);
    document.getElementById("img_31").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(30);
    }, vVVV143);
    document.getElementById("img_32").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(31);
    }, false);
    document.getElementById("img_33").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(32);
    }, vV14);
    document.getElementById("img_34").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(33);
    }, false);
    document.getElementById("img_35").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(34);
    }, false);
    document.getElementById("img_36").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(35);
    }, vVVVVV14);
    document.getElementById("img_37").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(36);
    }, false);
    document.getElementById("img_38").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(37);
    }, false);
    document.getElementById("img_39").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(38);
    }, false);
    document.getElementById("img_40").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(39);
    }, vVVV144);
    document.getElementById("img_41").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(40);
    }, false);
    document.getElementById("img_42").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(41);
    }, vVV142);
    document.getElementById("img_43").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(42);
    }, false);
    document.getElementById("img_44").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(43);
    }, false);
    document.getElementById("img_45").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(44);
    }, vV142);
    document.getElementById("img_46").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(45);
    }, false);
    document.getElementById("img_47").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(46);
    }, vVVVVV1422);
    document.getElementById("img_48").addEventListener("mousedown", function () {
      v2991.ⵠᐃⲆᐃ.list.ΔⵠᐃΔ(47);
    }, vVVV1423);
    this.ΔⲆⲆⲆⲆ = {
      translate: {
        y: 0,
        x: 0
      },
      ᐃΔⲆᐃⵠ: {
        x: -1,
        y: -1
      },
      ΔⵠΔⵠ: [],
      focus: function (p1648) {
        var v2557 = this.translate.y + (v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length > 0 ? -120 : -50);
        if (p1648.x > this.translate.x && p1648.x < this.translate.x + 193 && p1648.y > v2557 && p1648.y < v2557 + 193) {
          this.ᐃΔⲆᐃⵠ.x = p1648.x - this.translate.x;
          this.ᐃΔⲆᐃⵠ.y = p1648.y - v2557;
        }
      }
    };
    this.ⵠⵠΔⲆ = {
      translate: {
        y: 0,
        x: 0
      },
      ⵠᐃ: ⵠΔ[278],
      ΔⲆ: document.createElement("canvas")
    };
    this.ⵠⵠΔⲆ.ΔⲆ.width = this.ⵠⵠΔⲆ.ⵠᐃ.width;
    this.ⵠⵠΔⲆ.ΔⲆ.height = this.ⵠⵠΔⲆ.ⵠᐃ.height;
    this.ⵠⵠΔⲆ.Δ = this.ⵠⵠΔⲆ.ΔⲆ.getContext("2d");
    this.ⲆᐃᐃΔ = {
      translate: {
        x: 0,
        y: 0
      },
      ⵠᐃ: ⵠΔ[267],
      ᐃᐃΔⵠ: f306,
      y: 0
    };
    var v2558 = vWindow.document.createElement("div");
    this.ⵠΔⲆᐃⲆⲆⵠ = function () {
      ⲆΔⵠᐃⵠ = document.getElementById("team_box");
      ⲆΔⵠᐃⵠ.innerHTML = "";
      ⲆΔⵠᐃⵠ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2558.innerText = v2812.ΔⵠΔⵠ[v2813.ⲆᐃⲆΔᐃ[0]].ⵠᐃΔⵠΔ) && v2558.innerHTML) + "</div";
      for (var v2559 = 1; v2813.ⲆᐃⲆΔᐃ.length > v2559; v2559++) {
        ⲆΔⵠᐃⵠ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2558.innerText = v2812.ΔⵠΔⵠ[v2813.ⲆᐃⲆΔᐃ[v2559]].ⵠᐃΔⵠΔ) && v2558.innerHTML) + "</div></div>";
      }
      ⲆΔⵠᐃⵠ.innerHTML += "<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>";
      ⲆΔⵠᐃⵠ.style.display = "inline-block";
      document.getElementById("leave").addEventListener("click", v2815.ⵠΔⲆᐃⲆⲆⵠ, false);
    };
    this.ΔⵠⲆⵠⵠⵠΔⲆᐃ = function () {
      ⲆΔⵠᐃⵠ = document.getElementById("team_box");
      ⲆΔⵠᐃⵠ.innerHTML = "";
      ⲆΔⵠᐃⵠ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2558.innerText = v2812.ΔⵠΔⵠ[v2813.ⲆᐃⲆΔᐃ[0]].ⵠᐃΔⵠΔ) && v2558.innerHTML) + "</div";
      for (var v2560 = 1; v2560 < v2813.ⲆᐃⲆΔᐃ.length; v2560++) {
        ⲆΔⵠᐃⵠ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2558.innerText = v2812.ΔⵠΔⵠ[v2813.ⲆᐃⲆΔᐃ[v2560]].ⵠᐃΔⵠΔ) && v2558.innerHTML) + "</div></div>";
      }
      ⲆΔⵠᐃⵠ.innerHTML += "</div>";
      ⲆΔⵠᐃⵠ.style.display = "inline-block";
    };
    this.ⲆⵠᐃⵠΔⵠΔⲆΔ = function () {
      ⲆΔⵠᐃⵠ = document.getElementById("team_box");
      ⲆΔⵠᐃⵠ.innerHTML = "";
      ⲆΔⵠᐃⵠ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2558.innerText = v2812.ΔⵠΔⵠ[v2813.ⲆᐃⲆΔᐃ[0]].ⵠᐃΔⵠΔ) && v2558.innerHTML) + "</div";
      for (var v2561 = 1; v2561 < v2813.ⲆᐃⲆΔᐃ.length; v2561++) {
        ⲆΔⵠᐃⵠ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2558.innerText = v2812.ΔⵠΔⵠ[v2813.ⲆᐃⲆΔᐃ[v2561]].ⵠᐃΔⵠΔ) && v2558.innerHTML) + "</div><div class=\"eject_member\" id=\"eject_member" + v2561 + "\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>";
      }
      if (v2813.ⵠⵠΔΔᐃ.lock === 0) {
        ⲆΔⵠᐃⵠ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>";
      } else {
        ⲆΔⵠᐃⵠ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>";
      }
      document.getElementById("lock_team").addEventListener("click", v2815.ᐃᐃⵠⵠⲆⵠΔΔⵠ, false);
      ⲆΔⵠᐃⵠ.style.display = "inline-block";
      for (v2561 = 1; v2813.ⲆᐃⲆΔᐃ.length > v2561; v2561++) {
        switch (v2561) {
          case 1:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(1);
            }, vVVVV1422);
            break;
          case 2:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(2);
            }, vVV1432);
            break;
          case 3:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(3);
            }, vVVV143);
            break;
          case 4:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(4);
            }, false);
            break;
          case 5:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(5);
            }, false);
            break;
          case 6:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(6);
            }, false);
            break;
          case 7:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(7);
            }, vVVVV14);
            break;
          case 8:
            document.getElementById("eject_member" + v2561).addEventListener("click", function () {
              v2815.ⵠΔᐃⲆⵠΔΔ(8);
            }, vVVVVV1422);
        }
      }
    };
    this.ⲆⲆΔΔᐃ = [];
    this.ⲆⲆΔΔᐃ[2] = {
      button: f418(60, 60, 0, ⵠΔ[556]),
      action: this.ⵠΔⲆᐃⲆⲆⵠ
    };
    this.ⲆⲆΔΔᐃ[3] = {
      button: f418(60, 60, 0, ⵠΔ[556]),
      action: v2815.ᐃΔⵠⵠⲆΔⵠⵠΔ
    };
    this.ⲆⲆΔΔᐃ[0] = {
      button: f418(60, 60, 0, ⵠΔ[557]),
      action: this.ⲆⵠᐃⵠΔⵠΔⲆΔ
    };
    this.ⲆⲆΔΔᐃ[1] = {
      button: f418(60, 60, 0, ⵠΔ[561]),
      action: this.ΔⵠⲆⵠⵠⵠΔⲆᐃ
    };
    this.ⲆⲆΔΔᐃ[4] = {
      button: f418(60, 60, 0, ⵠΔ[560]),
      action: function () {}
    };
    this.ΔΔᐃⵠⵠ = -1;
    this.ΔΔⵠᐃΔΔⲆ = f418(60, 60, 0, ⵠΔ[723]);
    this.ᐃⵠⵠⲆᐃΔΔ = f418(60, 60, 0, ⵠΔ[724]);
    this.ⵠⲆⲆⵠⲆΔⲆ = f418(60, 60, 0, ⵠΔ[658]);
    this.ⲆᐃᐃΔⵠΔⲆ = f418(60, 60, 0, ⵠΔ[657]);
    this.ⲆⵠᐃⲆᐃⲆᐃ = f418(60, 60, 0, ⵠΔ[658]);
    this.ⵠΔᐃⵠΔᐃⲆ = f418(60, 60, 0, ⵠΔ[316]);
    this.ⵠⲆⲆΔᐃⵠΔ = f418(60, 60, 0, ⵠΔ[315]);
    this.ΔΔᐃΔⲆⵠᐃ = f418(60, 60, 0, ⵠΔ[297]);
    this.ⵠΔᐃΔᐃⵠΔ = f418(60, 60, 0, ⵠΔ[298]);
    this.ᐃΔⵠΔⵠᐃᐃ = f418(60, 60, 0, ⵠΔ[418]);
    this.ⵠΔᐃⵠᐃΔΔ = f418(60, 60, 0, ⵠΔ[938]);
    this.ᐃⲆΔᐃⲆΔᐃ = f418(60, 60, 0, ⵠΔ[412]);
    this.ᐃΔⵠΔΔⲆⵠ = f418(60, 60, 0, ⵠΔ[536]);
    this.ᐃⵠⵠΔᐃⲆⵠ = f418(60, 60, 0, ⵠΔ[535]);
    this.ⲆⵠⲆⵠⲆΔⲆ = f418(60, 60, 0, ⵠΔ[538]);
    this.ⲆᐃᐃΔΔ = f418(120, 120, 0, ⵠΔ[149]);
    this.ⲆᐃᐃΔΔ.info.translate.x = 10;
    this.ⲆᐃᐃΔΔ.info.translate.y = 10;
    this.ⵠⲆⵠ = [];
    this.ⵠⲆⵠ[0] = f418(68, 68, 0, ⵠΔ[340], 3);
    this.ⵠⲆⵠ[0].id = 0;
    this.ⵠⲆⵠ[1] = f418(68, 68, 0, ⵠΔ[341], 3);
    this.ⵠⲆⵠ[1].id = 1;
    this.ⵠⲆⵠ[108] = f418(68, 68, 0, ⵠΔ[342], 3);
    this.ⵠⲆⵠ[108].id = 108;
    this.ⵠⲆⵠ[109] = f418(68, 68, 0, ⵠΔ[343], 3);
    this.ⵠⲆⵠ[109].id = 109;
    this.ⵠⲆⵠ[110] = f418(68, 68, 0, ⵠΔ[269], 3);
    this.ⵠⲆⵠ[110].id = 110;
    this.ⵠⲆⵠ[233] = f418(68, 68, 0, ⵠΔ[1155], 3);
    this.ⵠⲆⵠ[233].id = 233;
    this.ⵠⲆⵠ[111] = f418(68, 68, 0, ⵠΔ[270], 3);
    this.ⵠⲆⵠ[111].id = 111;
    this.ⵠⲆⵠ[112] = f418(68, 68, 0, ⵠΔ[271], 3);
    this.ⵠⲆⵠ[112].id = 112;
    this.ⵠⲆⵠ[3] = f418(68, 68, 0, ⵠΔ[272], 3);
    this.ⵠⲆⵠ[3].id = 3;
    this.ⵠⲆⵠ[4] = f418(68, 68, 0, ⵠΔ[344], 3);
    this.ⵠⲆⵠ[4].id = 4;
    this.ⵠⲆⵠ[5] = f418(68, 68, 0, ⵠΔ[345], 3);
    this.ⵠⲆⵠ[5].id = 5;
    this.ⵠⲆⵠ[57] = f418(68, 68, 0, ⵠΔ[831], 3);
    this.ⵠⲆⵠ[57].id = 57;
    this.ⵠⲆⵠ[6] = f418(68, 68, 0, ⵠΔ[346], 3);
    this.ⵠⲆⵠ[6].id = 6;
    this.ⵠⲆⵠ[113] = f418(68, 68, 0, ⵠΔ[273], 3);
    this.ⵠⲆⵠ[113].id = 113;
    this.ⵠⲆⵠ[114] = f418(68, 68, 0, ⵠΔ[358], 3);
    this.ⵠⲆⵠ[114].id = 114;
    this.ⵠⲆⵠ[115] = f418(68, 68, 0, ⵠΔ[348], 3);
    this.ⵠⲆⵠ[115].id = 115;
    this.ⵠⲆⵠ[162] = f418(68, 68, 0, ⵠΔ[349], 3);
    this.ⵠⲆⵠ[162].id = 162;
    this.ⵠⲆⵠ[160] = f418(68, 68, 0, ⵠΔ[350], 3);
    this.ⵠⲆⵠ[160].id = 160;
    this.ⵠⲆⵠ[8] = f418(68, 68, 0, ⵠΔ[274], 3);
    this.ⵠⲆⵠ[8].id = 8;
    this.ⵠⲆⵠ[117] = f418(68, 68, 0, ⵠΔ[351], 3);
    this.ⵠⲆⵠ[117].id = 117;
    this.ⵠⲆⵠ[116] = f418(68, 68, 0, ⵠΔ[275], 3);
    this.ⵠⲆⵠ[116].id = 116;
    this.ⵠⲆⵠ[118] = f418(68, 68, 0, ⵠΔ[276], 3);
    this.ⵠⲆⵠ[118].id = 118;
    this.ⵠⲆⵠ[195] = f418(68, 68, 0, ⵠΔ[352], 3);
    this.ⵠⲆⵠ[195].id = 195;
    this.ⵠⲆⵠ[161] = f418(68, 68, 0, ⵠΔ[353], 3);
    this.ⵠⲆⵠ[161].id = 161;
    this.ⵠⲆⵠ[163] = f418(68, 68, 0, ⵠΔ[354], 3);
    this.ⵠⲆⵠ[163].id = 163;
    this.ⵠⲆⵠ[164] = f418(68, 68, 0, ⵠΔ[355], 3);
    this.ⵠⲆⵠ[164].id = 164;
    this.ⵠⲆⵠ[165] = f418(68, 68, 0, ⵠΔ[356], 3);
    this.ⵠⲆⵠ[165].id = 165;
    this.ⵠⲆⵠ[166] = f418(68, 68, 0, ⵠΔ[357], 3);
    this.ⵠⲆⵠ[166].id = 166;
    this.ⵠⲆⵠ[167] = f418(68, 68, 0, ⵠΔ[359], 3);
    this.ⵠⲆⵠ[167].id = 167;
    this.ⵠⲆⵠ[168] = f418(68, 68, 0, ⵠΔ[382], 3);
    this.ⵠⲆⵠ[168].id = 168;
    this.ⵠⲆⵠ[169] = f418(68, 68, 0, ⵠΔ[383], 3);
    this.ⵠⲆⵠ[169].id = 169;
    this.ⵠⲆⵠ[170] = f418(68, 68, 0, ⵠΔ[384], 3);
    this.ⵠⲆⵠ[170].id = 170;
    this.ⵠⲆⵠ[2] = f418(68, 68, 0, ⵠΔ[386], 3);
    this.ⵠⲆⵠ[2].id = 2;
    this.ⵠⲆⵠ[237] = f418(68, 68, 0, ⵠΔ[1163], 3);
    this.ⵠⲆⵠ[237].id = 237;
    this.ⵠⲆⵠ[174] = f418(68, 68, 0, ⵠΔ[394], 3);
    this.ⵠⲆⵠ[174].id = 174;
    this.ⵠⲆⵠ[222] = f418(68, 68, 0, ⵠΔ[1036], 3);
    this.ⵠⲆⵠ[222].id = 222;
    this.ⵠⲆⵠ[231] = f418(68, 68, 0, ⵠΔ[1038], 3);
    this.ⵠⲆⵠ[231].id = 231;
    this.ⵠⲆⵠ[232] = f418(68, 68, 0, ⵠΔ[1040], 3);
    this.ⵠⲆⵠ[232].id = 232;
    this.ⵠⲆⵠ[234] = f418(68, 68, 0, ⵠΔ[1157], 3);
    this.ⵠⲆⵠ[234].id = 234;
    this.ⵠⲆⵠ[10] = f418(68, 68, 0, ⵠΔ[387], 3);
    this.ⵠⲆⵠ[10].id = 10;
    this.ⵠⲆⵠ[171] = f418(68, 68, 0, ⵠΔ[388], 3);
    this.ⵠⲆⵠ[171].id = 171;
    this.ⵠⲆⵠ[172] = f418(68, 68, 0, ⵠΔ[389], 3);
    this.ⵠⲆⵠ[172].id = 172;
    this.ⵠⲆⵠ[173] = f418(68, 68, 0, ⵠΔ[390], 3);
    this.ⵠⲆⵠ[173].id = 173;
    this.ⵠⲆⵠ[11] = f418(68, 68, 0, ⵠΔ[391], 3);
    this.ⵠⲆⵠ[11].id = 11;
    this.ⵠⲆⵠ[12] = f418(68, 68, 0, ⵠΔ[403], 3);
    this.ⵠⲆⵠ[12].id = 12;
    this.ⵠⲆⵠ[13] = f418(68, 68, 0, ⵠΔ[397], 3);
    this.ⵠⲆⵠ[13].id = 13;
    this.ⵠⲆⵠ[14] = f418(68, 68, 0, ⵠΔ[400], 3);
    this.ⵠⲆⵠ[14].id = 14;
    this.ⵠⲆⵠ[15] = f418(68, 68, 0, ⵠΔ[406], 3);
    this.ⵠⲆⵠ[15].id = 15;
    this.ⵠⲆⵠ[16] = f418(68, 68, 0, ⵠΔ[875], 3);
    this.ⵠⲆⵠ[16].id = 16;
    this.ⵠⲆⵠ[119] = f418(68, 68, 0, ⵠΔ[410], 3);
    this.ⵠⲆⵠ[119].id = 119;
    this.ⵠⲆⵠ[23] = f418(68, 68, 0, ⵠΔ[422], 3);
    this.ⵠⲆⵠ[23].id = 23;
    this.ⵠⲆⵠ[24] = f418(68, 68, 0, ⵠΔ[425], 3);
    this.ⵠⲆⵠ[24].id = 24;
    this.ⵠⲆⵠ[87] = f418(68, 68, 0, ⵠΔ[1229], 3);
    this.ⵠⲆⵠ[87].id = 87;
    this.ⵠⲆⵠ[88] = f418(68, 68, 0, ⵠΔ[1232], 3);
    this.ⵠⲆⵠ[88].id = 88;
    this.ⵠⲆⵠ[80] = f418(68, 68, 0, ⵠΔ[1139], 3);
    this.ⵠⲆⵠ[80].id = 80;
    this.ⵠⲆⵠ[81] = f418(68, 68, 0, ⵠΔ[1142], 3);
    this.ⵠⲆⵠ[81].id = 81;
    this.ⵠⲆⵠ[101] = f418(68, 68, 0, ⵠΔ[1167], 3);
    this.ⵠⲆⵠ[101].id = 101;
    this.ⵠⲆⵠ[64] = f418(68, 68, 0, ⵠΔ[571], 3);
    this.ⵠⲆⵠ[64].id = 64;
    this.ⵠⲆⵠ[71] = f418(68, 68, 0, ⵠΔ[1240], 3);
    this.ⵠⲆⵠ[71].id = 71;
    this.ⵠⲆⵠ[102] = f418(68, 68, 0, ⵠΔ[1170], 3);
    this.ⵠⲆⵠ[102].id = 102;
    this.ⵠⲆⵠ[65] = f418(68, 68, 0, ⵠΔ[574], 3);
    this.ⵠⲆⵠ[65].id = 65;
    this.ⵠⲆⵠ[72] = f418(68, 68, 0, ⵠΔ[1243], 3);
    this.ⵠⲆⵠ[72].id = 72;
    this.ⵠⲆⵠ[103] = f418(68, 68, 0, ⵠΔ[1173], 3);
    this.ⵠⲆⵠ[103].id = 103;
    this.ⵠⲆⵠ[66] = f418(68, 68, 0, ⵠΔ[577], 3);
    this.ⵠⲆⵠ[66].id = 66;
    this.ⵠⲆⵠ[73] = f418(68, 68, 0, ⵠΔ[1246], 3);
    this.ⵠⲆⵠ[73].id = 73;
    this.ⵠⲆⵠ[104] = f418(68, 68, 0, ⵠΔ[1176], 3);
    this.ⵠⲆⵠ[104].id = 104;
    this.ⵠⲆⵠ[67] = f418(68, 68, 0, ⵠΔ[580], 3);
    this.ⵠⲆⵠ[67].id = 67;
    this.ⵠⲆⵠ[74] = f418(68, 68, 0, ⵠΔ[1249], 3);
    this.ⵠⲆⵠ[74].id = 74;
    this.ⵠⲆⵠ[105] = f418(68, 68, 0, ⵠΔ[1179], 3);
    this.ⵠⲆⵠ[105].id = 105;
    this.ⵠⲆⵠ[68] = f418(68, 68, 0, ⵠΔ[583], 3);
    this.ⵠⲆⵠ[68].id = 68;
    this.ⵠⲆⵠ[75] = f418(68, 68, 0, ⵠΔ[1252], 3);
    this.ⵠⲆⵠ[75].id = 75;
    this.ⵠⲆⵠ[106] = f418(68, 68, 0, ⵠΔ[1182], 3);
    this.ⵠⲆⵠ[106].id = 106;
    this.ⵠⲆⵠ[69] = f418(68, 68, 0, ⵠΔ[586], 3);
    this.ⵠⲆⵠ[69].id = 69;
    this.ⵠⲆⵠ[76] = f418(68, 68, 0, ⵠΔ[1255], 3);
    this.ⵠⲆⵠ[76].id = 76;
    this.ⵠⲆⵠ[107] = f418(68, 68, 0, ⵠΔ[1185], 3);
    this.ⵠⲆⵠ[107].id = 107;
    this.ⵠⲆⵠ[70] = f418(68, 68, 0, ⵠΔ[589], 3);
    this.ⵠⲆⵠ[70].id = 70;
    this.ⵠⲆⵠ[94] = f418(68, 68, 0, ⵠΔ[1258], 3);
    this.ⵠⲆⵠ[94].id = 94;
    this.ⵠⲆⵠ[95] = f418(68, 68, 0, ⵠΔ[1261], 3);
    this.ⵠⲆⵠ[95].id = 95;
    this.ⵠⲆⵠ[96] = f418(68, 68, 0, ⵠΔ[1264], 3);
    this.ⵠⲆⵠ[96].id = 96;
    this.ⵠⲆⵠ[97] = f418(68, 68, 0, ⵠΔ[1267], 3);
    this.ⵠⲆⵠ[97].id = 97;
    this.ⵠⲆⵠ[98] = f418(68, 68, 0, ⵠΔ[1270], 3);
    this.ⵠⲆⵠ[98].id = 98;
    this.ⵠⲆⵠ[99] = f418(68, 68, 0, ⵠΔ[1273], 3);
    this.ⵠⲆⵠ[99].id = 99;
    this.ⵠⲆⵠ[58] = f418(68, 68, 0, ⵠΔ[828], 3);
    this.ⵠⲆⵠ[58].id = 58;
    this.ⵠⲆⵠ[25] = f418(68, 68, 0, ⵠΔ[431], 3);
    this.ⵠⲆⵠ[25].id = 25;
    this.ⵠⲆⵠ[26] = f418(68, 68, 0, ⵠΔ[434], 3);
    this.ⵠⲆⵠ[26].id = 26;
    this.ⵠⲆⵠ[27] = f418(68, 68, 0, ⵠΔ[437], 3);
    this.ⵠⲆⵠ[27].id = 27;
    this.ⵠⲆⵠ[28] = f418(68, 68, 0, ⵠΔ[440], 3);
    this.ⵠⲆⵠ[28].id = 28;
    this.ⵠⲆⵠ[120] = f418(68, 68, 0, ⵠΔ[443], 3);
    this.ⵠⲆⵠ[120].id = 120;
    this.ⵠⲆⵠ[29] = f418(68, 68, 0, ⵠΔ[385], 3);
    this.ⵠⲆⵠ[29].id = 29;
    this.ⵠⲆⵠ[121] = f418(68, 68, 0, ⵠΔ[446], 3);
    this.ⵠⲆⵠ[121].id = 121;
    this.ⵠⲆⵠ[30] = f418(68, 68, 0, ⵠΔ[457], 3);
    this.ⵠⲆⵠ[30].id = 30;
    this.ⵠⲆⵠ[9] = f418(68, 68, 0, ⵠΔ[862], 3);
    this.ⵠⲆⵠ[9].id = 9;
    this.ⵠⲆⵠ[31] = f418(68, 68, 0, ⵠΔ[459], 3);
    this.ⵠⲆⵠ[31].id = 31;
    this.ⵠⲆⵠ[32] = f418(68, 68, 0, ⵠΔ[1018], 3);
    this.ⵠⲆⵠ[32].id = 32;
    this.ⵠⲆⵠ[33] = f418(68, 68, 0, ⵠΔ[474], 3);
    this.ⵠⲆⵠ[33].id = 33;
    this.ⵠⲆⵠ[35] = f418(68, 68, 0, ⵠΔ[479], 3);
    this.ⵠⲆⵠ[35].id = 35;
    this.ⵠⲆⵠ[36] = f418(68, 68, 0, ⵠΔ[482], 3);
    this.ⵠⲆⵠ[36].id = 36;
    this.ⵠⲆⵠ[37] = f418(68, 68, 0, ⵠΔ[485], 3);
    this.ⵠⲆⵠ[37].id = 37;
    this.ⵠⲆⵠ[38] = f418(68, 68, 0, ⵠΔ[488], 3);
    this.ⵠⲆⵠ[38].id = 38;
    this.ⵠⲆⵠ[39] = f418(68, 68, 0, ⵠΔ[491], 3);
    this.ⵠⲆⵠ[39].id = 39;
    this.ⵠⲆⵠ[122] = f418(68, 68, 0, ⵠΔ[494], 3);
    this.ⵠⲆⵠ[122].id = 122;
    this.ⵠⲆⵠ[123] = f418(68, 68, 0, ⵠΔ[497], 3);
    this.ⵠⲆⵠ[123].id = 123;
    this.ⵠⲆⵠ[124] = f418(68, 68, 0, ⵠΔ[501], 3);
    this.ⵠⲆⵠ[124].id = 124;
    this.ⵠⲆⵠ[40] = f418(68, 68, 0, ⵠΔ[504], 3);
    this.ⵠⲆⵠ[40].id = 40;
    this.ⵠⲆⵠ[146] = f418(68, 68, 0, ⵠΔ[506], 3);
    this.ⵠⲆⵠ[146].id = 146;
    this.ⵠⲆⵠ[240] = f418(68, 68, 0, ⵠΔ[1234], 3);
    this.ⵠⲆⵠ[240].id = 240;
    this.ⵠⲆⵠ[147] = f418(68, 68, 0, ⵠΔ[514], 3);
    this.ⵠⲆⵠ[147].id = 147;
    this.ⵠⲆⵠ[148] = f418(68, 68, 0, ⵠΔ[520], 3);
    this.ⵠⲆⵠ[148].id = 148;
    this.ⵠⲆⵠ[149] = f418(68, 68, 0, ⵠΔ[522], 3);
    this.ⵠⲆⵠ[149].id = 149;
    this.ⵠⲆⵠ[150] = f418(68, 68, 0, ⵠΔ[524], 3);
    this.ⵠⲆⵠ[150].id = 150;
    this.ⵠⲆⵠ[151] = f418(68, 68, 0, ⵠΔ[531], 3);
    this.ⵠⲆⵠ[151].id = 151;
    this.ⵠⲆⵠ[158] = f418(68, 68, 0, ⵠΔ[534], 3);
    this.ⵠⲆⵠ[158].id = 158;
    this.ⵠⲆⵠ[159] = f418(68, 68, 0, ⵠΔ[554], 3);
    this.ⵠⲆⵠ[159].id = 159;
    this.ⵠⲆⵠ[43] = f418(68, 68, 0, ⵠΔ[543], 3);
    this.ⵠⲆⵠ[43].id = 43;
    this.ⵠⲆⵠ[45] = f418(68, 68, 0, ⵠΔ[552], 3);
    this.ⵠⲆⵠ[45].id = 45;
    this.ⵠⲆⵠ[125] = f418(68, 68, 0, ⵠΔ[606], 3);
    this.ⵠⲆⵠ[125].id = 125;
    this.ⵠⲆⵠ[221] = f418(68, 68, 0, ⵠΔ[1237], 3);
    this.ⵠⲆⵠ[221].id = 221;
    this.ⵠⲆⵠ[223] = f418(68, 68, 0, ⵠΔ[1029], 3);
    this.ⵠⲆⵠ[223].id = 223;
    this.ⵠⲆⵠ[224] = f418(68, 68, 0, ⵠΔ[1032], 3);
    this.ⵠⲆⵠ[224].id = 224;
    this.ⵠⲆⵠ[230] = f418(68, 68, 0, ⵠΔ[1118], 3);
    this.ⵠⲆⵠ[230].id = 230;
    this.ⵠⲆⵠ[89] = f418(68, 68, 0, ⵠΔ[1047], 3);
    this.ⵠⲆⵠ[89].id = 89;
    this.ⵠⲆⵠ[225] = f418(68, 68, 0, ⵠΔ[1050], 3);
    this.ⵠⲆⵠ[225].id = 225;
    this.ⵠⲆⵠ[227] = f418(68, 68, 0, ⵠΔ[1081], 3);
    this.ⵠⲆⵠ[227].id = 227;
    this.ⵠⲆⵠ[239] = f418(68, 68, 0, ⵠΔ[1225], 3);
    this.ⵠⲆⵠ[239].id = 239;
    this.ⵠⲆⵠ[228] = f418(68, 68, 0, ⵠΔ[1096], 3);
    this.ⵠⲆⵠ[228].id = 228;
    this.ⵠⲆⵠ[229] = f418(68, 68, 0, ⵠΔ[1111], 3);
    this.ⵠⲆⵠ[229].id = 229;
    this.ⵠⲆⵠ[226] = f418(68, 68, 0, ⵠΔ[1190], 3);
    this.ⵠⲆⵠ[226].id = 226;
    this.ⵠⲆⵠ[126] = f418(68, 68, 0, ⵠΔ[610], 3);
    this.ⵠⲆⵠ[126].id = 126;
    this.ⵠⲆⵠ[127] = f418(68, 68, 0, ⵠΔ[615], 3);
    this.ⵠⲆⵠ[127].id = 127;
    this.ⵠⲆⵠ[128] = f418(68, 68, 0, ⵠΔ[614], 3);
    this.ⵠⲆⵠ[128].id = 128;
    this.ⵠⲆⵠ[46] = f418(68, 68, 0, ⵠΔ[617], 3);
    this.ⵠⲆⵠ[46].id = 46;
    this.ⵠⲆⵠ[50] = f418(68, 68, 0, ⵠΔ[701], 3);
    this.ⵠⲆⵠ[50].id = 50;
    this.ⵠⲆⵠ[51] = f418(68, 68, 0, ⵠΔ[703], 3);
    this.ⵠⲆⵠ[51].id = 51;
    this.ⵠⲆⵠ[52] = f418(68, 68, 0, ⵠΔ[707], 3);
    this.ⵠⲆⵠ[52].id = 52;
    this.ⵠⲆⵠ[55] = f418(68, 68, 0, ⵠΔ[710], 3);
    this.ⵠⲆⵠ[55].id = 55;
    this.ⵠⲆⵠ[129] = f418(68, 68, 0, ⵠΔ[625], 3);
    this.ⵠⲆⵠ[129].id = 129;
    this.ⵠⲆⵠ[130] = f418(68, 68, 0, ⵠΔ[628], 3);
    this.ⵠⲆⵠ[130].id = 130;
    this.ⵠⲆⵠ[131] = f418(68, 68, 0, ⵠΔ[630], 3);
    this.ⵠⲆⵠ[131].id = 131;
    this.ⵠⲆⵠ[132] = f418(68, 68, 0, ⵠΔ[633], 3);
    this.ⵠⲆⵠ[132].id = 132;
    this.ⵠⲆⵠ[133] = f418(68, 68, 0, ⵠΔ[636], 3);
    this.ⵠⲆⵠ[133].id = 133;
    this.ⵠⲆⵠ[134] = f418(68, 68, 0, ⵠΔ[640], 3);
    this.ⵠⲆⵠ[134].id = 134;
    this.ⵠⲆⵠ[135] = f418(68, 68, 0, ⵠΔ[645], 3);
    this.ⵠⲆⵠ[135].id = 135;
    this.ⵠⲆⵠ[47] = f418(68, 68, 0, ⵠΔ[648], 3);
    this.ⵠⲆⵠ[47].id = 47;
    this.ⵠⲆⵠ[48] = f418(68, 68, 0, ⵠΔ[651], 3);
    this.ⵠⲆⵠ[48].id = 48;
    this.ⵠⲆⵠ[49] = f418(68, 68, 0, ⵠΔ[653], 3);
    this.ⵠⲆⵠ[49].id = 49;
    this.ⵠⲆⵠ[136] = f418(68, 68, 0, ⵠΔ[661], 3);
    this.ⵠⲆⵠ[136].id = 136;
    this.ⵠⲆⵠ[143] = f418(68, 68, 0, ⵠΔ[689], 3);
    this.ⵠⲆⵠ[143].id = 143;
    this.ⵠⲆⵠ[137] = f418(68, 68, 0, ⵠΔ[663], 3);
    this.ⵠⲆⵠ[137].id = 137;
    this.ⵠⲆⵠ[138] = f418(68, 68, 0, ⵠΔ[665], 3);
    this.ⵠⲆⵠ[138].id = 138;
    this.ⵠⲆⵠ[139] = f418(68, 68, 0, ⵠΔ[675], 3);
    this.ⵠⲆⵠ[139].id = 139;
    this.ⵠⲆⵠ[140] = f418(68, 68, 0, ⵠΔ[682], 3);
    this.ⵠⲆⵠ[140].id = 140;
    this.ⵠⲆⵠ[141] = f418(68, 68, 0, ⵠΔ[683], 3);
    this.ⵠⲆⵠ[141].id = 141;
    this.ⵠⲆⵠ[142] = f418(68, 68, 0, ⵠΔ[686], 3);
    this.ⵠⲆⵠ[142].id = 142;
    this.ⵠⲆⵠ[144] = f418(68, 68, 0, ⵠΔ[719], 3);
    this.ⵠⲆⵠ[144].id = 144;
    this.ⵠⲆⵠ[145] = f418(68, 68, 0, ⵠΔ[731], 3);
    this.ⵠⲆⵠ[145].id = 145;
    this.ⵠⲆⵠ[59] = f418(68, 68, 0, ⵠΔ[733], 3);
    this.ⵠⲆⵠ[59].id = 59;
    this.ⵠⲆⵠ[62] = f418(68, 68, 0, ⵠΔ[565], 3);
    this.ⵠⲆⵠ[62].id = 62;
    this.ⵠⲆⵠ[185] = f418(68, 68, 0, ⵠΔ[590], 3);
    this.ⵠⲆⵠ[185].id = 185;
    this.ⵠⲆⵠ[184] = f418(68, 68, 0, ⵠΔ[752], 3);
    this.ⵠⲆⵠ[184].id = 184;
    this.ⵠⲆⵠ[187] = f418(68, 68, 0, ⵠΔ[591], 3);
    this.ⵠⲆⵠ[187].id = 187;
    this.ⵠⲆⵠ[186] = f418(68, 68, 0, ⵠΔ[754], 3);
    this.ⵠⲆⵠ[186].id = 186;
    this.ⵠⲆⵠ[77] = f418(68, 68, 0, ⵠΔ[757], 3);
    this.ⵠⲆⵠ[77].id = 77;
    this.ⵠⲆⵠ[175] = f418(68, 68, 0, ⵠΔ[759], 3);
    this.ⵠⲆⵠ[175].id = 175;
    this.ⵠⲆⵠ[176] = f418(68, 68, 0, ⵠΔ[763], 3);
    this.ⵠⲆⵠ[176].id = 176;
    this.ⵠⲆⵠ[78] = f418(68, 68, 0, ⵠΔ[761], 3);
    this.ⵠⲆⵠ[78].id = 78;
    this.ⵠⲆⵠ[177] = f418(68, 68, 0, ⵠΔ[766], 3);
    this.ⵠⲆⵠ[177].id = 177;
    this.ⵠⲆⵠ[79] = f418(68, 68, 0, ⵠΔ[765], 3);
    this.ⵠⲆⵠ[79].id = 79;
    this.ⵠⲆⵠ[83] = f418(68, 68, 0, ⵠΔ[769], 3);
    this.ⵠⲆⵠ[83].id = 83;
    this.ⵠⲆⵠ[84] = f418(68, 68, 0, ⵠΔ[773], 3);
    this.ⵠⲆⵠ[84].id = 84;
    this.ⵠⲆⵠ[178] = f418(68, 68, 0, ⵠΔ[774], 3);
    this.ⵠⲆⵠ[178].id = 178;
    this.ⵠⲆⵠ[179] = f418(68, 68, 0, ⵠΔ[775], 3);
    this.ⵠⲆⵠ[179].id = 179;
    this.ⵠⲆⵠ[86] = f418(68, 68, 0, ⵠΔ[778], 3);
    this.ⵠⲆⵠ[86].id = 86;
    this.ⵠⲆⵠ[85] = f418(68, 68, 0, ⵠΔ[781], 3);
    this.ⵠⲆⵠ[85].id = 85;
    this.ⵠⲆⵠ[180] = f418(68, 68, 0, ⵠΔ[786], 3);
    this.ⵠⲆⵠ[180].id = 180;
    this.ⵠⲆⵠ[181] = f418(68, 68, 0, ⵠΔ[787], 3);
    this.ⵠⲆⵠ[181].id = 181;
    this.ⵠⲆⵠ[182] = f418(68, 68, 0, ⵠΔ[790], 3);
    this.ⵠⲆⵠ[182].id = 182;
    this.ⵠⲆⵠ[183] = f418(68, 68, 0, ⵠΔ[801], 3);
    this.ⵠⲆⵠ[183].id = 183;
    this.ⵠⲆⵠ[188] = f418(68, 68, 0, ⵠΔ[810], 3);
    this.ⵠⲆⵠ[188].id = 188;
    this.ⵠⲆⵠ[189] = f418(68, 68, 0, ⵠΔ[815], 3);
    this.ⵠⲆⵠ[189].id = 189;
    this.ⵠⲆⵠ[190] = f418(68, 68, 0, ⵠΔ[844], 3);
    this.ⵠⲆⵠ[190].id = 190;
    this.ⵠⲆⵠ[191] = f418(68, 68, 0, ⵠΔ[836], 3);
    this.ⵠⲆⵠ[191].id = 191;
    this.ⵠⲆⵠ[192] = f418(68, 68, 0, ⵠΔ[841], 3);
    this.ⵠⲆⵠ[192].id = 192;
    this.ⵠⲆⵠ[193] = f418(68, 68, 0, ⵠΔ[847], 3);
    this.ⵠⲆⵠ[193].id = 193;
    this.ⵠⲆⵠ[194] = f418(68, 68, 0, ⵠΔ[851], 3);
    this.ⵠⲆⵠ[194].id = 194;
    this.ⵠⲆⵠ[206] = f418(68, 68, 0, ⵠΔ[961], 3);
    this.ⵠⲆⵠ[206].id = 206;
    this.ⵠⲆⵠ[207] = f418(68, 68, 0, ⵠΔ[974], 3);
    this.ⵠⲆⵠ[207].id = 207;
    this.ⵠⲆⵠ[204] = f418(68, 68, 0, ⵠΔ[951], 3);
    this.ⵠⲆⵠ[204].id = 204;
    this.ⵠⲆⵠ[205] = f418(68, 68, 0, ⵠΔ[956], 3);
    this.ⵠⲆⵠ[205].id = 205;
    this.ⵠⲆⵠ[208] = f418(68, 68, 0, ⵠΔ[968], 3);
    this.ⵠⲆⵠ[208].id = 208;
    this.ⵠⲆⵠ[209] = f418(68, 68, 0, ⵠΔ[973], 3);
    this.ⵠⲆⵠ[209].id = 209;
    this.ⵠⲆⵠ[210] = f418(68, 68, 0, ⵠΔ[983], 3);
    this.ⵠⲆⵠ[210].id = 210;
    this.ⵠⲆⵠ[211] = f418(68, 68, 0, ⵠΔ[988], 3);
    this.ⵠⲆⵠ[211].id = 211;
    this.ⵠⲆⵠ[41] = f418(68, 68, 0, ⵠΔ[881], 3);
    this.ⵠⲆⵠ[41].id = 41;
    this.ⵠⲆⵠ[42] = f418(68, 68, 0, ⵠΔ[883], 3);
    this.ⵠⲆⵠ[42].id = 42;
    this.ⵠⲆⵠ[12] = f418(68, 68, 0, ⵠΔ[403], 3);
    this.ⵠⲆⵠ[12].id = 12;
    this.ⵠⲆⵠ[16] = f418(68, 68, 0, ⵠΔ[875], 3);
    this.ⵠⲆⵠ[16].id = 16;
    this.ⵠⲆⵠ[196] = f418(68, 68, 0, ⵠΔ[898], 3);
    this.ⵠⲆⵠ[196].id = 196;
    this.ⵠⲆⵠ[18] = f418(68, 68, 0, ⵠΔ[899], 3);
    this.ⵠⲆⵠ[18].id = 18;
    this.ⵠⲆⵠ[197] = f418(68, 68, 0, ⵠΔ[906], 3);
    this.ⵠⲆⵠ[197].id = 197;
    this.ⵠⲆⵠ[198] = f418(68, 68, 0, ⵠΔ[908], 3);
    this.ⵠⲆⵠ[198].id = 198;
    this.ⵠⲆⵠ[61] = f418(68, 68, 0, ⵠΔ[911], 3);
    this.ⵠⲆⵠ[61].id = 61;
    this.ⵠⲆⵠ[201] = f418(68, 68, 0, ⵠΔ[871], 3);
    this.ⵠⲆⵠ[201].id = 201;
    this.ⵠⲆⵠ[199] = f418(68, 68, 0, ⵠΔ[863], 3);
    this.ⵠⲆⵠ[199].id = 199;
    this.ⵠⲆⵠ[200] = f418(68, 68, 0, ⵠΔ[868], 3);
    this.ⵠⲆⵠ[200].id = 200;
    this.ⵠⵠΔⲆΔ = [];
    for (v2541 = 0; v2541 < 250; v2541++) {
      this.ⵠⵠΔⲆΔ[v2541] = f418(0, 0, 0, ⵠΔ[366]);
    }
    this.ⵠⵠⲆ = [];
    this.ⵠⵠⲆ[0] = f418(60, 60, 0, ⵠΔ[261], 3);
    this.ⵠⵠⲆ[0].id = 0;
    this.ⵠⵠⲆ[1] = f418(60, 60, 0, ⵠΔ[312], 3);
    this.ⵠⵠⲆ[1].id = 1;
    this.ⵠⵠⲆ[108] = f418(60, 60, 0, ⵠΔ[315], 3);
    this.ⵠⵠⲆ[108].id = 108;
    this.ⵠⵠⲆ[108].info.ⵠᐃ[2] = this.ⵠⵠⲆ[108].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[109] = f418(60, 60, 0, ⵠΔ[316], 3);
    this.ⵠⵠⲆ[109].id = 109;
    this.ⵠⵠⲆ[109].info.ⵠᐃ[2] = this.ⵠⵠⲆ[109].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[110] = f418(60, 60, 0, ⵠΔ[277], 3);
    this.ⵠⵠⲆ[110].id = 110;
    this.ⵠⵠⲆ[233] = f418(60, 60, 0, ⵠΔ[1154], 3);
    this.ⵠⵠⲆ[233].id = 233;
    this.ⵠⵠⲆ[111] = f418(60, 60, 0, ⵠΔ[297], 3);
    this.ⵠⵠⲆ[111].id = 111;
    this.ⵠⵠⲆ[111].info.ⵠᐃ[2] = this.ⵠⵠⲆ[111].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[112] = f418(60, 60, 0, ⵠΔ[298], 3);
    this.ⵠⵠⲆ[112].id = 112;
    this.ⵠⵠⲆ[112].info.ⵠᐃ[2] = this.ⵠⵠⲆ[112].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[3] = f418(60, 60, 0, ⵠΔ[258], 3);
    this.ⵠⵠⲆ[3].id = 3;
    this.ⵠⵠⲆ[4] = f418(60, 60, 0, ⵠΔ[296], 3);
    this.ⵠⵠⲆ[4].id = 4;
    this.ⵠⵠⲆ[5] = f418(60, 60, 0, ⵠΔ[292], 3);
    this.ⵠⵠⲆ[5].id = 5;
    this.ⵠⵠⲆ[57] = f418(60, 60, 0, ⵠΔ[829], 3);
    this.ⵠⵠⲆ[57].id = 57;
    this.ⵠⵠⲆ[6] = f418(60, 60, 0, ⵠΔ[293], 3);
    this.ⵠⵠⲆ[6].id = 6;
    this.ⵠⵠⲆ[113] = f418(60, 60, 0, ⵠΔ[309], 3);
    this.ⵠⵠⲆ[113].id = 113;
    this.ⵠⵠⲆ[114] = f418(60, 60, 0, ⵠΔ[310], 3);
    this.ⵠⵠⲆ[114].id = 114;
    this.ⵠⵠⲆ[115] = f418(60, 60, 0, ⵠΔ[311], 3);
    this.ⵠⵠⲆ[115].id = 115;
    this.ⵠⵠⲆ[162] = f418(60, 60, 0, ⵠΔ[317], 3);
    this.ⵠⵠⲆ[162].id = 162;
    this.ⵠⵠⲆ[160] = f418(60, 60, 0, ⵠΔ[319], 3);
    this.ⵠⵠⲆ[160].id = 160;
    this.ⵠⵠⲆ[8] = f418(60, 60, 0, ⵠΔ[313], 3);
    this.ⵠⵠⲆ[8].id = 8;
    this.ⵠⵠⲆ[117] = f418(60, 60, 0, ⵠΔ[323], 3);
    this.ⵠⵠⲆ[117].id = 117;
    this.ⵠⵠⲆ[116] = f418(60, 60, 0, ⵠΔ[300], 3);
    this.ⵠⵠⲆ[116].id = 116;
    this.ⵠⵠⲆ[118] = f418(60, 60, 0, ⵠΔ[328], 3);
    this.ⵠⵠⲆ[118].id = 118;
    this.ⵠⵠⲆ[195] = f418(60, 60, 0, ⵠΔ[303], 3);
    this.ⵠⵠⲆ[195].id = 195;
    this.ⵠⵠⲆ[161] = f418(60, 60, 0, ⵠΔ[305], 3);
    this.ⵠⵠⲆ[161].id = 161;
    this.ⵠⵠⲆ[161].info.ⵠᐃ[2] = this.ⵠⵠⲆ[161].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[163] = f418(60, 60, 0, ⵠΔ[329], 3);
    this.ⵠⵠⲆ[163].id = 163;
    this.ⵠⵠⲆ[164] = f418(60, 60, 0, ⵠΔ[330], 3);
    this.ⵠⵠⲆ[164].id = 164;
    this.ⵠⵠⲆ[165] = f418(60, 60, 0, ⵠΔ[331], 3);
    this.ⵠⵠⲆ[165].id = 165;
    this.ⵠⵠⲆ[166] = f418(60, 60, 0, ⵠΔ[335], 3);
    this.ⵠⵠⲆ[166].id = 166;
    this.ⵠⵠⲆ[167] = f418(60, 60, 0, ⵠΔ[337], 3);
    this.ⵠⵠⲆ[167].id = 167;
    this.ⵠⵠⲆ[168] = f418(60, 60, 0, ⵠΔ[361], 3);
    this.ⵠⵠⲆ[168].id = 168;
    this.ⵠⵠⲆ[169] = f418(60, 60, 0, ⵠΔ[362], 3);
    this.ⵠⵠⲆ[169].id = 169;
    this.ⵠⵠⲆ[170] = f418(60, 60, 0, ⵠΔ[364], 3);
    this.ⵠⵠⲆ[170].id = 170;
    this.ⵠⵠⲆ[29] = f418(60, 60, 0, ⵠΔ[392], 3);
    this.ⵠⵠⲆ[29].id = 29;
    this.ⵠⵠⲆ[10] = f418(60, 60, 0, ⵠΔ[369], 3);
    this.ⵠⵠⲆ[10].id = 10;
    this.ⵠⵠⲆ[171] = f418(60, 60, 0, ⵠΔ[372], 3);
    this.ⵠⵠⲆ[171].id = 171;
    this.ⵠⵠⲆ[172] = f418(60, 60, 0, ⵠΔ[375], 3);
    this.ⵠⵠⲆ[172].id = 172;
    this.ⵠⵠⲆ[173] = f418(60, 60, 0, ⵠΔ[378], 3);
    this.ⵠⵠⲆ[173].id = 173;
    this.ⵠⵠⲆ[2] = f418(60, 60, 0, ⵠΔ[368], 3);
    this.ⵠⵠⲆ[2].id = 2;
    this.ⵠⵠⲆ[2].info.ⵠᐃ[2] = this.ⵠⵠⲆ[2].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[237] = f418(60, 60, 0, ⵠΔ[1162], 3);
    this.ⵠⵠⲆ[237].id = 237;
    this.ⵠⵠⲆ[237].info.ⵠᐃ[2] = this.ⵠⵠⲆ[237].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[174] = f418(60, 60, 0, ⵠΔ[393], 3);
    this.ⵠⵠⲆ[174].id = 174;
    this.ⵠⵠⲆ[174].info.ⵠᐃ[2] = this.ⵠⵠⲆ[174].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[222] = f418(60, 60, 0, ⵠΔ[1035], 3);
    this.ⵠⵠⲆ[222].id = 222;
    this.ⵠⵠⲆ[231] = f418(60, 60, 0, ⵠΔ[1037], 3);
    this.ⵠⵠⲆ[231].id = 231;
    this.ⵠⵠⲆ[232] = f418(60, 60, 0, ⵠΔ[1039], 3);
    this.ⵠⵠⲆ[232].id = 232;
    this.ⵠⵠⲆ[234] = f418(60, 60, 0, ⵠΔ[1156], 3);
    this.ⵠⵠⲆ[234].id = 234;
    this.ⵠⵠⲆ[10] = f418(60, 60, 0, ⵠΔ[369], 3);
    this.ⵠⵠⲆ[10].id = 10;
    this.ⵠⵠⲆ[11] = f418(60, 60, 0, ⵠΔ[381], 3);
    this.ⵠⵠⲆ[11].id = 11;
    this.ⵠⵠⲆ[12] = f418(60, 60, 0, ⵠΔ[401], 3);
    this.ⵠⵠⲆ[12].id = 12;
    this.ⵠⵠⲆ[13] = f418(60, 60, 0, ⵠΔ[395], 3);
    this.ⵠⵠⲆ[13].id = 13;
    this.ⵠⵠⲆ[14] = f418(60, 60, 0, ⵠΔ[398], 3);
    this.ⵠⵠⲆ[14].id = 14;
    this.ⵠⵠⲆ[15] = f418(60, 60, 0, ⵠΔ[404], 3);
    this.ⵠⵠⲆ[15].id = 15;
    this.ⵠⵠⲆ[16] = f418(60, 60, 0, ⵠΔ[874], 3);
    this.ⵠⵠⲆ[16].id = 16;
    this.ⵠⵠⲆ[119] = f418(60, 60, 0, ⵠΔ[408], 3);
    this.ⵠⵠⲆ[119].id = 119;
    this.ⵠⵠⲆ[23] = f418(60, 60, 0, ⵠΔ[420], 3);
    this.ⵠⵠⲆ[23].id = 23;
    this.ⵠⵠⲆ[24] = f418(60, 60, 0, ⵠΔ[423], 3);
    this.ⵠⵠⲆ[24].id = 24;
    this.ⵠⵠⲆ[87] = f418(60, 60, 0, ⵠΔ[1227], 3);
    this.ⵠⵠⲆ[87].id = 87;
    this.ⵠⵠⲆ[88] = f418(60, 60, 0, ⵠΔ[1230], 3);
    this.ⵠⵠⲆ[88].id = 88;
    this.ⵠⵠⲆ[80] = f418(60, 60, 0, ⵠΔ[1137], 3);
    this.ⵠⵠⲆ[80].id = 80;
    this.ⵠⵠⲆ[81] = f418(60, 60, 0, ⵠΔ[1140], 3);
    this.ⵠⵠⲆ[81].id = 81;
    this.ⵠⵠⲆ[64] = f418(60, 60, 0, ⵠΔ[569], 3);
    this.ⵠⵠⲆ[64].id = 64;
    this.ⵠⵠⲆ[101] = f418(60, 60, 0, ⵠΔ[1166], 3);
    this.ⵠⵠⲆ[101].id = 101;
    this.ⵠⵠⲆ[71] = f418(60, 60, 0, ⵠΔ[1239], 3);
    this.ⵠⵠⲆ[71].id = 71;
    this.ⵠⵠⲆ[65] = f418(60, 60, 0, ⵠΔ[572], 3);
    this.ⵠⵠⲆ[65].id = 65;
    this.ⵠⵠⲆ[102] = f418(60, 60, 0, ⵠΔ[1169], 3);
    this.ⵠⵠⲆ[102].id = 102;
    this.ⵠⵠⲆ[72] = f418(60, 60, 0, ⵠΔ[1242], 3);
    this.ⵠⵠⲆ[72].id = 72;
    this.ⵠⵠⲆ[66] = f418(60, 60, 0, ⵠΔ[575], 3);
    this.ⵠⵠⲆ[66].id = 66;
    this.ⵠⵠⲆ[103] = f418(60, 60, 0, ⵠΔ[1172], 3);
    this.ⵠⵠⲆ[103].id = 103;
    this.ⵠⵠⲆ[73] = f418(60, 60, 0, ⵠΔ[1245], 3);
    this.ⵠⵠⲆ[73].id = 73;
    this.ⵠⵠⲆ[67] = f418(60, 60, 0, ⵠΔ[578], 3);
    this.ⵠⵠⲆ[67].id = 67;
    this.ⵠⵠⲆ[104] = f418(60, 60, 0, ⵠΔ[1175], 3);
    this.ⵠⵠⲆ[104].id = 104;
    this.ⵠⵠⲆ[74] = f418(60, 60, 0, ⵠΔ[1248], 3);
    this.ⵠⵠⲆ[74].id = 74;
    this.ⵠⵠⲆ[68] = f418(60, 60, 0, ⵠΔ[581], 3);
    this.ⵠⵠⲆ[68].id = 68;
    this.ⵠⵠⲆ[105] = f418(60, 60, 0, ⵠΔ[1178], 3);
    this.ⵠⵠⲆ[105].id = 105;
    this.ⵠⵠⲆ[75] = f418(60, 60, 0, ⵠΔ[1251], 3);
    this.ⵠⵠⲆ[75].id = 75;
    this.ⵠⵠⲆ[69] = f418(60, 60, 0, ⵠΔ[584], 3);
    this.ⵠⵠⲆ[69].id = 69;
    this.ⵠⵠⲆ[106] = f418(60, 60, 0, ⵠΔ[1181], 3);
    this.ⵠⵠⲆ[106].id = 106;
    this.ⵠⵠⲆ[76] = f418(60, 60, 0, ⵠΔ[1254], 3);
    this.ⵠⵠⲆ[76].id = 76;
    this.ⵠⵠⲆ[70] = f418(60, 60, 0, ⵠΔ[587], 3);
    this.ⵠⵠⲆ[70].id = 70;
    this.ⵠⵠⲆ[107] = f418(60, 60, 0, ⵠΔ[1184], 3);
    this.ⵠⵠⲆ[107].id = 107;
    this.ⵠⵠⲆ[94] = f418(60, 60, 0, ⵠΔ[1257], 3);
    this.ⵠⵠⲆ[94].id = 94;
    this.ⵠⵠⲆ[95] = f418(60, 60, 0, ⵠΔ[1260], 3);
    this.ⵠⵠⲆ[95].id = 95;
    this.ⵠⵠⲆ[96] = f418(60, 60, 0, ⵠΔ[1263], 3);
    this.ⵠⵠⲆ[96].id = 96;
    this.ⵠⵠⲆ[97] = f418(60, 60, 0, ⵠΔ[1266], 3);
    this.ⵠⵠⲆ[97].id = 97;
    this.ⵠⵠⲆ[98] = f418(60, 60, 0, ⵠΔ[1269], 3);
    this.ⵠⵠⲆ[98].id = 98;
    this.ⵠⵠⲆ[99] = f418(60, 60, 0, ⵠΔ[1272], 3);
    this.ⵠⵠⲆ[99].id = 99;
    this.ⵠⵠⲆ[58] = f418(60, 60, 0, ⵠΔ[826], 3);
    this.ⵠⵠⲆ[58].id = 58;
    this.ⵠⵠⲆ[25] = f418(60, 60, 0, ⵠΔ[429], 3);
    this.ⵠⵠⲆ[25].id = 25;
    this.ⵠⵠⲆ[26] = f418(60, 60, 0, ⵠΔ[432], 3);
    this.ⵠⵠⲆ[26].id = 26;
    this.ⵠⵠⲆ[27] = f418(60, 60, 0, ⵠΔ[435], 3);
    this.ⵠⵠⲆ[27].id = 27;
    this.ⵠⵠⲆ[28] = f418(60, 60, 0, ⵠΔ[438], 3);
    this.ⵠⵠⲆ[28].id = 28;
    this.ⵠⵠⲆ[120] = f418(60, 60, 0, ⵠΔ[441], 3);
    this.ⵠⵠⲆ[120].id = 120;
    this.ⵠⵠⲆ[120].info.ⵠᐃ[2] = this.ⵠⵠⲆ[120].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[29] = f418(60, 60, 0, ⵠΔ[392], 3);
    this.ⵠⵠⲆ[29].id = 29;
    this.ⵠⵠⲆ[121] = f418(60, 60, 0, ⵠΔ[418], 3);
    this.ⵠⵠⲆ[121].id = 121;
    this.ⵠⵠⲆ[121].info.ⵠᐃ[2] = this.ⵠⵠⲆ[121].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[30] = f418(60, 60, 0, ⵠΔ[455], 3);
    this.ⵠⵠⲆ[30].id = 30;
    this.ⵠⵠⲆ[9] = f418(60, 60, 0, ⵠΔ[860], 3);
    this.ⵠⵠⲆ[9].id = 9;
    this.ⵠⵠⲆ[31] = f418(60, 60, 0, ⵠΔ[458], 3);
    this.ⵠⵠⲆ[31].id = 31;
    this.ⵠⵠⲆ[32] = f418(60, 60, 0, ⵠΔ[1017], 3);
    this.ⵠⵠⲆ[32].id = 32;
    this.ⵠⵠⲆ[33] = f418(60, 60, 0, ⵠΔ[472], 3);
    this.ⵠⵠⲆ[33].id = 33;
    this.ⵠⵠⲆ[35] = f418(60, 60, 0, ⵠΔ[477], 3);
    this.ⵠⵠⲆ[35].id = 35;
    this.ⵠⵠⲆ[36] = f418(60, 60, 0, ⵠΔ[480], 3);
    this.ⵠⵠⲆ[36].id = 36;
    this.ⵠⵠⲆ[37] = f418(60, 60, 0, ⵠΔ[483], 3);
    this.ⵠⵠⲆ[37].id = 37;
    this.ⵠⵠⲆ[38] = f418(60, 60, 0, ⵠΔ[486], 3);
    this.ⵠⵠⲆ[38].id = 38;
    this.ⵠⵠⲆ[39] = f418(60, 60, 0, ⵠΔ[489], 3);
    this.ⵠⵠⲆ[39].id = 39;
    this.ⵠⵠⲆ[122] = f418(60, 60, 0, ⵠΔ[492], 3);
    this.ⵠⵠⲆ[122].id = 122;
    this.ⵠⵠⲆ[123] = f418(60, 60, 0, ⵠΔ[495], 3);
    this.ⵠⵠⲆ[123].id = 123;
    this.ⵠⵠⲆ[124] = f418(60, 60, 0, ⵠΔ[499], 3);
    this.ⵠⵠⲆ[124].id = 124;
    this.ⵠⵠⲆ[40] = f418(60, 60, 0, ⵠΔ[502], 3);
    this.ⵠⵠⲆ[40].id = 40;
    this.ⵠⵠⲆ[146] = f418(60, 60, 0, ⵠΔ[505], 3);
    this.ⵠⵠⲆ[146].id = 146;
    this.ⵠⵠⲆ[146].info.ⵠᐃ[2] = this.ⵠⵠⲆ[146].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[240] = f418(60, 60, 0, ⵠΔ[1233], 3);
    this.ⵠⵠⲆ[240].id = 240;
    this.ⵠⵠⲆ[240].info.ⵠᐃ[2] = this.ⵠⵠⲆ[240].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[147] = f418(60, 60, 0, ⵠΔ[513], 3);
    this.ⵠⵠⲆ[147].id = 147;
    this.ⵠⵠⲆ[147].info.ⵠᐃ[2] = this.ⵠⵠⲆ[147].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[148] = f418(60, 60, 0, ⵠΔ[518], 3);
    this.ⵠⵠⲆ[148].id = 148;
    this.ⵠⵠⲆ[148].info.ⵠᐃ[2] = this.ⵠⵠⲆ[148].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[149] = f418(60, 60, 0, ⵠΔ[521], 3);
    this.ⵠⵠⲆ[149].id = 149;
    this.ⵠⵠⲆ[150] = f418(60, 60, 0, ⵠΔ[523], 3);
    this.ⵠⵠⲆ[150].id = 150;
    this.ⵠⵠⲆ[151] = f418(60, 60, 0, ⵠΔ[529], 3);
    this.ⵠⵠⲆ[151].id = 151;
    this.ⵠⵠⲆ[158] = f418(60, 60, 0, ⵠΔ[532], 3);
    this.ⵠⵠⲆ[158].id = 158;
    this.ⵠⵠⲆ[159] = f418(60, 60, 0, ⵠΔ[553], 3);
    this.ⵠⵠⲆ[159].id = 159;
    this.ⵠⵠⲆ[43] = f418(60, 60, 0, ⵠΔ[541], 3);
    this.ⵠⵠⲆ[43].id = 43;
    this.ⵠⵠⲆ[45] = f418(60, 60, 0, ⵠΔ[550], 3);
    this.ⵠⵠⲆ[45].id = 45;
    this.ⵠⵠⲆ[125] = f418(60, 60, 0, ⵠΔ[605], 3);
    this.ⵠⵠⲆ[125].id = 125;
    this.ⵠⵠⲆ[221] = f418(60, 60, 0, ⵠΔ[1236], 3);
    this.ⵠⵠⲆ[221].id = 221;
    this.ⵠⵠⲆ[223] = f418(60, 60, 0, ⵠΔ[1028], 3);
    this.ⵠⵠⲆ[223].id = 223;
    this.ⵠⵠⲆ[224] = f418(60, 60, 0, ⵠΔ[1031], 3);
    this.ⵠⵠⲆ[224].id = 224;
    this.ⵠⵠⲆ[230] = f418(60, 60, 0, ⵠΔ[1117], 3);
    this.ⵠⵠⲆ[230].id = 230;
    this.ⵠⵠⲆ[89] = f418(60, 60, 0, ⵠΔ[1046], 3);
    this.ⵠⵠⲆ[89].id = 89;
    this.ⵠⵠⲆ[225] = f418(60, 60, 0, ⵠΔ[1049], 3);
    this.ⵠⵠⲆ[225].id = 225;
    this.ⵠⵠⲆ[226] = f418(60, 60, 0, ⵠΔ[1189], 3);
    this.ⵠⵠⲆ[226].id = 226;
    this.ⵠⵠⲆ[227] = f418(60, 60, 0, ⵠΔ[1080], 3);
    this.ⵠⵠⲆ[227].id = 227;
    this.ⵠⵠⲆ[239] = f418(60, 60, 0, ⵠΔ[1224], 3);
    this.ⵠⵠⲆ[239].id = 239;
    this.ⵠⵠⲆ[228] = f418(60, 60, 0, ⵠΔ[1095], 3);
    this.ⵠⵠⲆ[228].id = 228;
    this.ⵠⵠⲆ[229] = f418(60, 60, 0, ⵠΔ[1110], 3);
    this.ⵠⵠⲆ[229].id = 229;
    this.ⵠⵠⲆ[126] = f418(60, 60, 0, ⵠΔ[609], 3);
    this.ⵠⵠⲆ[126].id = 126;
    this.ⵠⵠⲆ[126].info.ⵠᐃ[2] = this.ⵠⵠⲆ[126].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[127] = f418(60, 60, 0, ⵠΔ[613], 3);
    this.ⵠⵠⲆ[127].id = 127;
    this.ⵠⵠⲆ[128] = f418(60, 60, 0, ⵠΔ[612], 3);
    this.ⵠⵠⲆ[128].id = 128;
    this.ⵠⵠⲆ[46] = f418(60, 60, 0, ⵠΔ[616], 3);
    this.ⵠⵠⲆ[46].id = 46;
    this.ⵠⵠⲆ[50] = f418(60, 60, 0, ⵠΔ[699], 3);
    this.ⵠⵠⲆ[50].id = 50;
    this.ⵠⵠⲆ[51] = f418(60, 60, 0, ⵠΔ[702], 3);
    this.ⵠⵠⲆ[51].id = 51;
    this.ⵠⵠⲆ[52] = f418(60, 60, 0, ⵠΔ[705], 3);
    this.ⵠⵠⲆ[52].id = 52;
    this.ⵠⵠⲆ[55] = f418(60, 60, 0, ⵠΔ[709], 3);
    this.ⵠⵠⲆ[55].id = 55;
    this.ⵠⵠⲆ[129] = f418(60, 60, 0, ⵠΔ[624], 3);
    this.ⵠⵠⲆ[129].id = 129;
    this.ⵠⵠⲆ[129].info.ⵠᐃ[2] = this.ⵠⵠⲆ[129].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[130] = f418(60, 60, 0, ⵠΔ[626], 3);
    this.ⵠⵠⲆ[130].id = 130;
    this.ⵠⵠⲆ[131] = f418(60, 60, 0, ⵠΔ[629], 3);
    this.ⵠⵠⲆ[131].id = 131;
    this.ⵠⵠⲆ[131].info.ⵠᐃ[2] = this.ⵠⵠⲆ[131].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[132] = f418(60, 60, 0, ⵠΔ[631], 3);
    this.ⵠⵠⲆ[132].id = 132;
    this.ⵠⵠⲆ[133] = f418(60, 60, 0, ⵠΔ[634], 3);
    this.ⵠⵠⲆ[133].id = 133;
    this.ⵠⵠⲆ[134] = f418(60, 60, 0, ⵠΔ[639], 3);
    this.ⵠⵠⲆ[134].id = 134;
    this.ⵠⵠⲆ[134].info.ⵠᐃ[2] = this.ⵠⵠⲆ[134].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[135] = f418(60, 60, 0, ⵠΔ[644], 3);
    this.ⵠⵠⲆ[135].id = 135;
    this.ⵠⵠⲆ[47] = f418(60, 60, 0, ⵠΔ[646], 3);
    this.ⵠⵠⲆ[47].id = 47;
    this.ⵠⵠⲆ[48] = f418(60, 60, 0, ⵠΔ[649], 3);
    this.ⵠⵠⲆ[48].id = 48;
    this.ⵠⵠⲆ[49] = f418(60, 60, 0, ⵠΔ[652], 3);
    this.ⵠⵠⲆ[49].id = 49;
    this.ⵠⵠⲆ[136] = f418(60, 60, 0, ⵠΔ[659], 3);
    this.ⵠⵠⲆ[136].id = 136;
    this.ⵠⵠⲆ[143] = f418(60, 60, 0, ⵠΔ[143], 3);
    this.ⵠⵠⲆ[143].id = 143;
    this.ⵠⵠⲆ[137] = f418(60, 60, 0, ⵠΔ[662], 3);
    this.ⵠⵠⲆ[137].id = 137;
    this.ⵠⵠⲆ[138] = f418(60, 60, 0, ⵠΔ[664], 3);
    this.ⵠⵠⲆ[138].id = 138;
    this.ⵠⵠⲆ[139] = f418(60, 60, 0, ⵠΔ[674], 3);
    this.ⵠⵠⲆ[139].id = 139;
    this.ⵠⵠⲆ[139].info.ⵠᐃ[2] = this.ⵠⵠⲆ[139].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[140] = f418(60, 60, 0, ⵠΔ[140], 3);
    this.ⵠⵠⲆ[140].id = 140;
    this.ⵠⵠⲆ[140].info.ⵠᐃ[2] = this.ⵠⵠⲆ[140].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[141] = f418(60, 60, 0, ⵠΔ[685], 3);
    this.ⵠⵠⲆ[141].id = 141;
    this.ⵠⵠⲆ[142] = f418(60, 60, 0, ⵠΔ[142], 3);
    this.ⵠⵠⲆ[142].id = 142;
    this.ⵠⵠⲆ[142].info.ⵠᐃ[2] = this.ⵠⵠⲆ[142].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[144] = f418(60, 60, 0, ⵠΔ[717], 3);
    this.ⵠⵠⲆ[144].id = 144;
    this.ⵠⵠⲆ[145] = f418(60, 60, 0, ⵠΔ[145], 3);
    this.ⵠⵠⲆ[145].id = 145;
    this.ⵠⵠⲆ[59] = f418(60, 60, 0, ⵠΔ[732], 3);
    this.ⵠⵠⲆ[59].id = 59;
    this.ⵠⵠⲆ[62] = f418(60, 60, 0, ⵠΔ[563], 3);
    this.ⵠⵠⲆ[62].id = 62;
    this.ⵠⵠⲆ[185] = f418(60, 60, 0, ⵠΔ[252], 3);
    this.ⵠⵠⲆ[185].id = 185;
    this.ⵠⵠⲆ[185].info.ⵠᐃ[2] = this.ⵠⵠⲆ[185].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[184] = f418(60, 60, 0, ⵠΔ[751], 3);
    this.ⵠⵠⲆ[184].id = 184;
    this.ⵠⵠⲆ[184].info.ⵠᐃ[2] = this.ⵠⵠⲆ[184].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[17] = f418(60, 60, 0, ⵠΔ[877], 3);
    this.ⵠⵠⲆ[17].id = 17;
    this.ⵠⵠⲆ[63] = f418(60, 60, 0, ⵠΔ[566], 3);
    this.ⵠⵠⲆ[63].id = 63;
    this.ⵠⵠⲆ[187] = f418(60, 60, 0, ⵠΔ[253], 3);
    this.ⵠⵠⲆ[187].id = 187;
    this.ⵠⵠⲆ[187].info.ⵠᐃ[2] = this.ⵠⵠⲆ[187].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[186] = f418(60, 60, 0, ⵠΔ[753], 3);
    this.ⵠⵠⲆ[186].id = 186;
    this.ⵠⵠⲆ[186].info.ⵠᐃ[2] = this.ⵠⵠⲆ[186].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[77] = f418(60, 60, 0, ⵠΔ[756], 3);
    this.ⵠⵠⲆ[77].id = 77;
    this.ⵠⵠⲆ[175] = f418(60, 60, 0, ⵠΔ[176], 3);
    this.ⵠⵠⲆ[175].id = 175;
    this.ⵠⵠⲆ[175].info.ⵠᐃ[2] = this.ⵠⵠⲆ[175].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[176] = f418(60, 60, 0, ⵠΔ[177], 3);
    this.ⵠⵠⲆ[176].id = 176;
    this.ⵠⵠⲆ[176].info.ⵠᐃ[2] = this.ⵠⵠⲆ[176].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[78] = f418(60, 60, 0, ⵠΔ[760], 3);
    this.ⵠⵠⲆ[78].id = 78;
    this.ⵠⵠⲆ[177] = f418(60, 60, 0, ⵠΔ[175], 3);
    this.ⵠⵠⲆ[177].id = 177;
    this.ⵠⵠⲆ[177].info.ⵠᐃ[2] = this.ⵠⵠⲆ[177].info.ⵠᐃ[0];
    this.ⵠⵠⲆ[79] = f418(60, 60, 0, ⵠΔ[764], 3);
    this.ⵠⵠⲆ[79].id = 79;
    this.ⵠⵠⲆ[83] = f418(60, 60, 0, ⵠΔ[767], 3);
    this.ⵠⵠⲆ[83].id = 83;
    this.ⵠⵠⲆ[84] = f418(60, 60, 0, ⵠΔ[771], 3);
    this.ⵠⵠⲆ[84].id = 84;
    this.ⵠⵠⲆ[178] = f418(60, 60, 0, ⵠΔ[178], 3);
    this.ⵠⵠⲆ[178].id = 178;
    this.ⵠⵠⲆ[179] = f418(60, 60, 0, ⵠΔ[179], 3);
    this.ⵠⵠⲆ[179].id = 179;
    this.ⵠⵠⲆ[86] = f418(60, 60, 0, ⵠΔ[776], 3);
    this.ⵠⵠⲆ[86].id = 86;
    this.ⵠⵠⲆ[85] = f418(60, 60, 0, ⵠΔ[779], 3);
    this.ⵠⵠⲆ[85].id = 85;
    this.ⵠⵠⲆ[180] = f418(60, 60, 0, ⵠΔ[180], 3);
    this.ⵠⵠⲆ[180].id = 180;
    this.ⵠⵠⲆ[181] = f418(60, 60, 0, ⵠΔ[181], 3);
    this.ⵠⵠⲆ[181].id = 181;
    this.ⵠⵠⲆ[182] = f418(60, 60, 0, ⵠΔ[789], 3);
    this.ⵠⵠⲆ[182].id = 182;
    this.ⵠⵠⲆ[183] = f418(60, 60, 0, ⵠΔ[800], 3);
    this.ⵠⵠⲆ[183].id = 183;
    this.ⵠⵠⲆ[188] = f418(60, 60, 0, ⵠΔ[808], 3);
    this.ⵠⵠⲆ[188].id = 188;
    this.ⵠⵠⲆ[189] = f418(60, 60, 0, ⵠΔ[814], 3);
    this.ⵠⵠⲆ[189].id = 189;
    this.ⵠⵠⲆ[191] = f418(60, 60, 0, ⵠΔ[834], 3);
    this.ⵠⵠⲆ[191].id = 191;
    this.ⵠⵠⲆ[192] = f418(60, 60, 0, ⵠΔ[840], 3);
    this.ⵠⵠⲆ[192].id = 192;
    this.ⵠⵠⲆ[190] = f418(60, 60, 0, ⵠΔ[842], 3);
    this.ⵠⵠⲆ[190].id = 190;
    this.ⵠⵠⲆ[193] = f418(60, 60, 0, ⵠΔ[845], 3);
    this.ⵠⵠⲆ[193].id = 193;
    this.ⵠⵠⲆ[194] = f418(60, 60, 0, ⵠΔ[850], 3);
    this.ⵠⵠⲆ[194].id = 194;
    this.ⵠⵠⲆ[204] = f418(60, 60, 0, ⵠΔ[949], 3);
    this.ⵠⵠⲆ[204].id = 204;
    this.ⵠⵠⲆ[205] = f418(60, 60, 0, ⵠΔ[955], 3);
    this.ⵠⵠⲆ[205].id = 205;
    this.ⵠⵠⲆ[206] = f418(60, 60, 0, ⵠΔ[959], 3);
    this.ⵠⵠⲆ[206].id = 206;
    this.ⵠⵠⲆ[207] = f418(60, 60, 0, ⵠΔ[965], 3);
    this.ⵠⵠⲆ[207].id = 207;
    this.ⵠⵠⲆ[208] = f418(60, 60, 0, ⵠΔ[966], 3);
    this.ⵠⵠⲆ[208].id = 208;
    this.ⵠⵠⲆ[209] = f418(60, 60, 0, ⵠΔ[972], 3);
    this.ⵠⵠⲆ[209].id = 209;
    this.ⵠⵠⲆ[210] = f418(60, 60, 0, ⵠΔ[981], 3);
    this.ⵠⵠⲆ[210].id = 210;
    this.ⵠⵠⲆ[211] = f418(60, 60, 0, ⵠΔ[987], 3);
    this.ⵠⵠⲆ[211].id = 211;
    this.ⵠⵠⲆ[41] = f418(60, 60, 0, ⵠΔ[880], 3);
    this.ⵠⵠⲆ[41].id = 41;
    this.ⵠⵠⲆ[42] = f418(60, 60, 0, ⵠΔ[882], 3);
    this.ⵠⵠⲆ[42].id = 42;
    this.ⵠⵠⲆ[12] = f418(60, 60, 0, ⵠΔ[401], 3);
    this.ⵠⵠⲆ[12].id = 12;
    this.ⵠⵠⲆ[16] = f418(60, 60, 0, ⵠΔ[874], 3);
    this.ⵠⵠⲆ[16].id = 16;
    this.ⵠⵠⲆ[196] = f418(60, 60, 0, ⵠΔ[196], 3);
    this.ⵠⵠⲆ[196].id = 196;
    this.ⵠⵠⲆ[18] = f418(60, 60, 0, ⵠΔ[901], 3);
    this.ⵠⵠⲆ[18].id = 18;
    this.ⵠⵠⲆ[197] = f418(60, 60, 0, ⵠΔ[197], 3);
    this.ⵠⵠⲆ[197].id = 197;
    this.ⵠⵠⲆ[198] = f418(60, 60, 0, ⵠΔ[907], 3);
    this.ⵠⵠⲆ[198].id = 198;
    this.ⵠⵠⲆ[61] = f418(60, 60, 0, ⵠΔ[910], 3);
    this.ⵠⵠⲆ[61].id = 61;
    this.ⵠⵠⲆ[201] = f418(60, 60, 0, ⵠΔ[870], 3);
    this.ⵠⵠⲆ[201].id = 201;
    this.ⵠⵠⲆ[200] = f418(60, 60, 0, ⵠΔ[200], 3);
    this.ⵠⵠⲆ[200].id = 200;
    this.ⵠⵠⲆ[199] = f418(60, 60, 0, ⵠΔ[865], 3);
    this.ⵠⵠⲆ[199].id = 199;
    this.ᐃΔΔ = [];
    this.ᐃΔΔ[35] = f418(60, 60, 0, ⵠΔ[254], 3);
    this.ᐃΔΔ[35].id = 35;
    this.ᐃΔΔ[5] = f418(60, 60, 0, ⵠΔ[256], 3);
    this.ᐃΔΔ[5].id = 5;
    this.ᐃΔΔ[0] = f418(60, 60, 0, ⵠΔ[302], 3);
    this.ᐃΔΔ[0].id = 0;
    this.ᐃΔΔ[3] = f418(60, 60, 0, ⵠΔ[262], 3);
    this.ᐃΔΔ[3].id = 3;
    this.ᐃΔΔ[55] = f418(60, 60, 0, ⵠΔ[318], 3);
    this.ᐃΔΔ[55].id = 55;
    this.ᐃΔΔ[67] = f418(60, 60, 0, ⵠΔ[320], 3);
    this.ᐃΔΔ[67].id = 67;
    this.ᐃΔΔ[40] = f418(60, 60, 0, ⵠΔ[284], 3);
    this.ᐃΔΔ[40].id = 40;
    this.ᐃΔΔ[6] = f418(60, 60, 0, ⵠΔ[295], 3);
    this.ᐃΔΔ[6].id = 6;
    this.ᐃΔΔ[7] = f418(60, 60, 0, ⵠΔ[257], 3);
    this.ᐃΔΔ[7].id = 7;
    this.ᐃΔΔ[36] = f418(60, 60, 0, ⵠΔ[290], 3);
    this.ᐃΔΔ[36].id = 36;
    this.ᐃΔΔ[34] = f418(60, 60, 0, ⵠΔ[830], 3);
    this.ᐃΔΔ[34].id = 34;
    this.ᐃΔΔ[37] = f418(60, 60, 0, ⵠΔ[291], 3);
    this.ᐃΔΔ[37].id = 37;
    this.ᐃΔΔ[4] = f418(60, 60, 0, ⵠΔ[314], 3);
    this.ᐃΔΔ[4].id = 4;
    this.ᐃΔΔ[49] = f418(60, 60, 0, ⵠΔ[325], 3);
    this.ᐃΔΔ[49].id = 49;
    this.ᐃΔΔ[1] = f418(60, 60, 0, ⵠΔ[327], 3);
    this.ᐃΔΔ[1].id = 1;
    this.ᐃΔΔ[54] = f418(60, 60, 0, ⵠΔ[304], 3);
    this.ᐃΔΔ[54].id = 54;
    this.ᐃΔΔ[56] = f418(60, 60, 0, ⵠΔ[263], 3);
    this.ᐃΔΔ[56].id = 56;
    this.ᐃΔΔ[57] = f418(60, 60, 0, ⵠΔ[265], 3);
    this.ᐃΔΔ[57].id = 57;
    this.ᐃΔΔ[58] = f418(60, 60, 0, ⵠΔ[332], 3);
    this.ᐃΔΔ[58].id = 58;
    this.ᐃΔΔ[61] = f418(60, 60, 0, ⵠΔ[268], 3);
    this.ᐃΔΔ[61].id = 61;
    this.ᐃΔΔ[79] = f418(60, 60, 0, ⵠΔ[338], 3);
    this.ᐃΔΔ[79].id = 79;
    this.ᐃΔΔ[68] = f418(60, 60, 0, ⵠΔ[360], 3);
    this.ᐃΔΔ[68].id = 68;
    this.ᐃΔΔ[69] = f418(60, 60, 0, ⵠΔ[363], 3);
    this.ᐃΔΔ[69].id = 69;
    this.ᐃΔΔ[70] = f418(60, 60, 0, ⵠΔ[365], 3);
    this.ᐃΔΔ[70].id = 70;
    this.ᐃΔΔ[100] = f418(60, 60, 0, ⵠΔ[367], 3);
    this.ᐃΔΔ[100].id = 100;
    this.ᐃΔΔ[83] = f418(60, 60, 0, ⵠΔ[370], 3);
    this.ᐃΔΔ[83].id = 83;
    this.ᐃΔΔ[62] = f418(60, 60, 0, ⵠΔ[371], 3);
    this.ᐃΔΔ[62].id = 62;
    this.ᐃΔΔ[63] = f418(60, 60, 0, ⵠΔ[374], 3);
    this.ᐃΔΔ[63].id = 63;
    this.ᐃΔΔ[64] = f418(60, 60, 0, ⵠΔ[377], 3);
    this.ᐃΔΔ[64].id = 64;
    this.ᐃΔΔ[83] = f418(60, 60, 0, ⵠΔ[370], 3);
    this.ᐃΔΔ[83].id = 83;
    this.ᐃΔΔ[84] = f418(60, 60, 0, ⵠΔ[380], 3);
    this.ᐃΔΔ[84].id = 84;
    this.ᐃΔΔ[25] = f418(60, 60, 0, ⵠΔ[402], 3);
    this.ᐃΔΔ[25].id = 25;
    this.ᐃΔΔ[26] = f418(60, 60, 0, ⵠΔ[396], 3);
    this.ᐃΔΔ[26].id = 26;
    this.ᐃΔΔ[27] = f418(60, 60, 0, ⵠΔ[399], 3);
    this.ᐃΔΔ[27].id = 27;
    this.ᐃΔΔ[28] = f418(60, 60, 0, ⵠΔ[405], 3);
    this.ᐃΔΔ[28].id = 28;
    this.ᐃΔΔ[31] = f418(60, 60, 0, ⵠΔ[876], 3);
    this.ᐃΔΔ[31].id = 31;
    this.ᐃΔΔ[2] = f418(60, 60, 0, ⵠΔ[409], 3);
    this.ᐃΔΔ[2].id = 2;
    this.ᐃΔΔ[80] = f418(60, 60, 0, ⵠΔ[421], 3);
    this.ᐃΔΔ[80].id = 80;
    this.ᐃΔΔ[81] = f418(60, 60, 0, ⵠΔ[424], 3);
    this.ᐃΔΔ[81].id = 81;
    this.ᐃΔΔ[v625.ΔⵠΔΔΔ] = f418(60, 60, 0, ⵠΔ[1228], 3);
    this.ᐃΔΔ[v625.ΔⵠΔΔΔ].id = v625.ΔⵠΔΔΔ;
    this.ᐃΔΔ[86] = f418(60, 60, 0, ⵠΔ[1231], 3);
    this.ᐃΔΔ[86].id = 86;
    this.ᐃΔΔ[98] = f418(60, 60, 0, ⵠΔ[1138], 3);
    this.ᐃΔΔ[98].id = 98;
    this.ᐃΔΔ[99] = f418(60, 60, 0, ⵠΔ[1141], 3);
    this.ᐃΔΔ[99].id = 99;
    this.ᐃΔΔ[131] = f418(60, 60, 0, ⵠΔ[570], 3);
    this.ᐃΔΔ[131].id = 131;
    this.ᐃΔΔ[132] = f418(60, 60, 0, ⵠΔ[1168], 3);
    this.ᐃΔΔ[132].id = 132;
    this.ᐃΔΔ[145] = f418(60, 60, 0, ⵠΔ[1238], 3);
    this.ᐃΔΔ[145].id = 145;
    this.ᐃΔΔ[133] = f418(60, 60, 0, ⵠΔ[573], 3);
    this.ᐃΔΔ[133].id = 133;
    this.ᐃΔΔ[134] = f418(60, 60, 0, ⵠΔ[1171], 3);
    this.ᐃΔΔ[134].id = 134;
    this.ᐃΔΔ[146] = f418(60, 60, 0, ⵠΔ[1241], 3);
    this.ᐃΔΔ[146].id = 146;
    this.ᐃΔΔ[135] = f418(60, 60, 0, ⵠΔ[576], 3);
    this.ᐃΔΔ[135].id = 135;
    this.ᐃΔΔ[136] = f418(60, 60, 0, ⵠΔ[1174], 3);
    this.ᐃΔΔ[136].id = 136;
    this.ᐃΔΔ[147] = f418(60, 60, 0, ⵠΔ[1244], 3);
    this.ᐃΔΔ[147].id = 147;
    this.ᐃΔΔ[137] = f418(60, 60, 0, ⵠΔ[579], 3);
    this.ᐃΔΔ[137].id = 137;
    this.ᐃΔΔ[138] = f418(60, 60, 0, ⵠΔ[1177], 3);
    this.ᐃΔΔ[138].id = 138;
    this.ᐃΔΔ[167] = f418(60, 60, 0, ⵠΔ[1256], 3);
    this.ᐃΔΔ[167].id = 167;
    this.ᐃΔΔ[168] = f418(60, 60, 0, ⵠΔ[1259], 3);
    this.ᐃΔΔ[168].id = 168;
    this.ᐃΔΔ[169] = f418(60, 60, 0, ⵠΔ[1262], 3);
    this.ᐃΔΔ[169].id = 169;
    this.ᐃΔΔ[170] = f418(60, 60, 0, ⵠΔ[1265], 3);
    this.ᐃΔΔ[170].id = 170;
    this.ᐃΔΔ[171] = f418(60, 60, 0, ⵠΔ[1268], 3);
    this.ᐃΔΔ[171].id = 171;
    this.ᐃΔΔ[172] = f418(60, 60, 0, ⵠΔ[1271], 3);
    this.ᐃΔΔ[172].id = 172;
    this.ᐃΔΔ[148] = f418(60, 60, 0, ⵠΔ[1247], 3);
    this.ᐃΔΔ[148].id = 148;
    this.ᐃΔΔ[139] = f418(60, 60, 0, ⵠΔ[582], 3);
    this.ᐃΔΔ[139].id = 139;
    this.ᐃΔΔ[140] = f418(60, 60, 0, ⵠΔ[1180], 3);
    this.ᐃΔΔ[140].id = 140;
    this.ᐃΔΔ[149] = f418(60, 60, 0, ⵠΔ[1250], 3);
    this.ᐃΔΔ[149].id = 149;
    this.ᐃΔΔ[141] = f418(60, 60, 0, ⵠΔ[585], 3);
    this.ᐃΔΔ[141].id = 141;
    this.ᐃΔΔ[142] = f418(60, 60, 0, ⵠΔ[1183], 3);
    this.ᐃΔΔ[142].id = 142;
    this.ᐃΔΔ[150] = f418(60, 60, 0, ⵠΔ[1253], 3);
    this.ᐃΔΔ[150].id = 150;
    this.ᐃΔΔ[143] = f418(60, 60, 0, ⵠΔ[588], 3);
    this.ᐃΔΔ[143].id = 143;
    this.ᐃΔΔ[144] = f418(60, 60, 0, ⵠΔ[1186], 3);
    this.ᐃΔΔ[144].id = 144;
    this.ᐃΔΔ[87] = f418(60, 60, 0, ⵠΔ[827], 3);
    this.ᐃΔΔ[87].id = 87;
    this.ᐃΔΔ[88] = f418(60, 60, 0, ⵠΔ[430], 3);
    this.ᐃΔΔ[88].id = 88;
    this.ᐃΔΔ[89] = f418(60, 60, 0, ⵠΔ[433], 3);
    this.ᐃΔΔ[89].id = 89;
    this.ᐃΔΔ[90] = f418(60, 60, 0, ⵠΔ[436], 3);
    this.ᐃΔΔ[90].id = 90;
    this.ᐃΔΔ[24] = f418(60, 60, 0, ⵠΔ[439], 3);
    this.ᐃΔΔ[24].id = 24;
    this.ᐃΔΔ[101] = f418(60, 60, 0, ⵠΔ[442], 3);
    this.ᐃΔΔ[101].id = 101;
    this.ᐃΔΔ[100] = f418(60, 60, 0, ⵠΔ[367], 3);
    this.ᐃΔΔ[100].id = 100;
    this.ᐃΔΔ[38] = f418(60, 60, 0, ⵠΔ[456], 3);
    this.ᐃΔΔ[38].id = 38;
    this.ᐃΔΔ[v625.ᐃⲆⲆⵠⲆ] = f418(60, 60, 0, ⵠΔ[861], 3);
    this.ᐃΔΔ[v625.ᐃⲆⲆⵠⲆ].id = v625.ᐃⲆⲆⵠⲆ;
    this.ᐃΔΔ[8] = f418(60, 60, 0, ⵠΔ[460], 3);
    this.ᐃΔΔ[8].id = 8;
    this.ᐃΔΔ[9] = f418(60, 60, 0, ⵠΔ[1019], 3);
    this.ᐃΔΔ[9].id = 9;
    this.ᐃΔΔ[29] = f418(60, 60, 0, ⵠΔ[473], 3);
    this.ᐃΔΔ[29].id = 29;
    this.ᐃΔΔ[10] = f418(60, 60, 0, ⵠΔ[478], 3);
    this.ᐃΔΔ[10].id = 10;
    this.ᐃΔΔ[11] = f418(60, 60, 0, ⵠΔ[481], 3);
    this.ᐃΔΔ[11].id = 11;
    this.ᐃΔΔ[12] = f418(60, 60, 0, ⵠΔ[484], 3);
    this.ᐃΔΔ[12].id = 12;
    this.ᐃΔΔ[13] = f418(60, 60, 0, ⵠΔ[487], 3);
    this.ᐃΔΔ[13].id = 13;
    this.ᐃΔΔ[14] = f418(60, 60, 0, ⵠΔ[490], 3);
    this.ᐃΔΔ[14].id = 14;
    this.ᐃΔΔ[59] = f418(60, 60, 0, ⵠΔ[493], 3);
    this.ᐃΔΔ[59].id = 59;
    this.ᐃΔΔ[71] = f418(60, 60, 0, ⵠΔ[496], 3);
    this.ᐃΔΔ[71].id = 71;
    this.ᐃΔΔ[65] = f418(60, 60, 0, ⵠΔ[498], 3);
    this.ᐃΔΔ[65].id = 65;
    this.ᐃΔΔ[85] = f418(60, 60, 0, ⵠΔ[503], 3);
    this.ᐃΔΔ[85].id = 85;
    this.ᐃΔΔ[102] = f418(60, 60, 0, ⵠΔ[515], 3);
    this.ᐃΔΔ[102].id = 102;
    this.ᐃΔΔ[103] = f418(60, 60, 0, ⵠΔ[519], 3);
    this.ᐃΔΔ[103].id = 103;
    this.ᐃΔΔ[115] = f418(60, 60, 0, ⵠΔ[530], 3);
    this.ᐃΔΔ[115].id = 115;
    this.ᐃΔΔ[104] = f418(60, 60, 0, ⵠΔ[533], 3);
    this.ᐃΔΔ[104].id = 104;
    this.ᐃΔΔ[105] = f418(60, 60, 0, ⵠΔ[555], 3);
    this.ᐃΔΔ[105].id = 105;
    this.ᐃΔΔ[91] = f418(60, 60, 0, ⵠΔ[542], 3);
    this.ᐃΔΔ[91].id = 91;
    this.ᐃΔΔ[15] = f418(60, 60, 0, ⵠΔ[551], 3);
    this.ᐃΔΔ[15].id = 15;
    this.ᐃΔΔ[106] = f418(60, 60, 0, ⵠΔ[604], 3);
    this.ᐃΔΔ[106].id = 106;
    this.ᐃΔΔ[108] = f418(60, 60, 0, ⵠΔ[1235], 3);
    this.ᐃΔΔ[108].id = 108;
    this.ᐃΔΔ[163] = f418(60, 60, 0, ⵠΔ[1027], 3);
    this.ᐃΔΔ[163].id = 163;
    this.ᐃΔΔ[164] = f418(60, 60, 0, ⵠΔ[1030], 3);
    this.ᐃΔΔ[164].id = 164;
    this.ᐃΔΔ[166] = f418(60, 60, 0, ⵠΔ[1116], 3);
    this.ᐃΔΔ[166].id = 166;
    this.ᐃΔΔ[165] = f418(60, 60, 0, ⵠΔ[1048], 3);
    this.ᐃΔΔ[165].id = 165;
    this.ᐃΔΔ[v625.ΔⲆᐃⵠⲆ] = f418(60, 60, 0, ⵠΔ[1051], 3);
    this.ᐃΔΔ[v625.ΔⲆᐃⵠⲆ].id = v625.ΔⲆᐃⵠⲆ;
    this.ᐃΔΔ[v625.ⲆⵠΔΔᐃ] = f418(60, 60, 0, ⵠΔ[1082], 3);
    this.ᐃΔΔ[v625.ⲆⵠΔΔᐃ].id = v625.ⲆⵠΔΔᐃ;
    this.ᐃΔΔ[v625.ⵠΔᐃⲆᐃ] = f418(60, 60, 0, ⵠΔ[1226], 3);
    this.ᐃΔΔ[v625.ⵠΔᐃⲆᐃ].id = v625.ⵠΔᐃⲆᐃ;
    this.ᐃΔΔ[v625.ᐃⲆⵠᐃⲆ] = f418(60, 60, 0, ⵠΔ[1191], 3);
    this.ᐃΔΔ[v625.ᐃⲆⵠᐃⲆ].id = v625.ᐃⲆⵠᐃⲆ;
    this.ᐃΔΔ[110] = f418(60, 60, 0, ⵠΔ[611], 3);
    this.ᐃΔΔ[110].id = 110;
    this.ᐃΔΔ[111] = f418(60, 60, 0, ⵠΔ[715], 3);
    this.ᐃΔΔ[111].id = 111;
    this.ᐃΔΔ[112] = f418(60, 60, 0, ⵠΔ[715], 3);
    this.ᐃΔΔ[112].id = 112;
    this.ᐃΔΔ[113] = f418(60, 60, 0, ⵠΔ[715], 3);
    this.ᐃΔΔ[113].id = 113;
    this.ᐃΔΔ[16] = f418(60, 60, 0, ⵠΔ[618], 3);
    this.ᐃΔΔ[16].id = 16;
    this.ᐃΔΔ[17] = f418(60, 60, 0, ⵠΔ[700], 3);
    this.ᐃΔΔ[17].id = 17;
    this.ᐃΔΔ[18] = f418(60, 60, 0, ⵠΔ[704], 3);
    this.ᐃΔΔ[18].id = 18;
    this.ᐃΔΔ[19] = f418(60, 60, 0, ⵠΔ[706], 3);
    this.ᐃΔΔ[19].id = 19;
    this.ᐃΔΔ[122] = f418(60, 60, 0, ⵠΔ[711], 3);
    this.ᐃΔΔ[122].id = 122;
    this.ᐃΔΔ[20] = f418(60, 60, 0, ⵠΔ[627], 3);
    this.ᐃΔΔ[20].id = 20;
    this.ᐃΔΔ[41] = f418(60, 60, 0, ⵠΔ[632], 3);
    this.ᐃΔΔ[41].id = 41;
    this.ᐃΔΔ[52] = f418(60, 60, 0, ⵠΔ[635], 3);
    this.ᐃΔΔ[52].id = 52;
    this.ᐃΔΔ[114] = f418(60, 60, 0, ⵠΔ[643], 3);
    this.ᐃΔΔ[114].id = 114;
    this.ᐃΔΔ[94] = f418(60, 60, 0, ⵠΔ[647], 3);
    this.ᐃΔΔ[94].id = 94;
    this.ᐃΔΔ[93] = f418(60, 60, 0, ⵠΔ[650], 3);
    this.ᐃΔΔ[93].id = 93;
    this.ᐃΔΔ[21] = f418(60, 60, 0, ⵠΔ[654], 3);
    this.ᐃΔΔ[21].id = 21;
    this.ᐃΔΔ[53] = f418(60, 60, 0, ⵠΔ[660], 3);
    this.ᐃΔΔ[53].id = 53;
    this.ᐃΔΔ[51] = f418(60, 60, 0, ⵠΔ[690], 3);
    this.ᐃΔΔ[51].id = 51;
    this.ᐃΔΔ[50] = f418(60, 60, 0, ⵠΔ[666], 3);
    this.ᐃΔΔ[50].id = 50;
    this.ᐃΔΔ[109] = f418(60, 60, 0, ⵠΔ[684], 3);
    this.ᐃΔΔ[109].id = 109;
    this.ᐃΔΔ[124] = f418(60, 60, 0, ⵠΔ[718], 3);
    this.ᐃΔΔ[124].id = 124;
    this.ᐃΔΔ[125] = f418(60, 60, 0, ⵠΔ[730], 3);
    this.ᐃΔΔ[125].id = 125;
    this.ᐃΔΔ[126] = f418(60, 60, 0, ⵠΔ[734], 3);
    this.ᐃΔΔ[126].id = 126;
    this.ᐃΔΔ[129] = f418(60, 60, 0, ⵠΔ[563], 3);
    this.ᐃΔΔ[129].id = 129;
    this.ᐃΔΔ[151] = f418(60, 60, 0, ⵠΔ[758], 3);
    this.ᐃΔΔ[151].id = 151;
    this.ᐃΔΔ[152] = f418(60, 60, 0, ⵠΔ[762], 3);
    this.ᐃΔΔ[152].id = 152;
    this.ᐃΔΔ[153] = f418(60, 60, 0, ⵠΔ[770], 3);
    this.ᐃΔΔ[153].id = 153;
    this.ᐃΔΔ[154] = f418(60, 60, 0, ⵠΔ[768], 3);
    this.ᐃΔΔ[154].id = 154;
    this.ᐃΔΔ[155] = f418(60, 60, 0, ⵠΔ[772], 3);
    this.ᐃΔΔ[155].id = 155;
    this.ᐃΔΔ[157] = f418(60, 60, 0, ⵠΔ[777], 3);
    this.ᐃΔΔ[157].id = 157;
    this.ᐃΔΔ[156] = f418(60, 60, 0, ⵠΔ[780], 3);
    this.ᐃΔΔ[156].id = 156;
    this.ᐃΔΔ[158] = f418(60, 60, 0, ⵠΔ[784], 3);
    this.ᐃΔΔ[158].id = 158;
    this.ᐃΔΔ[159] = f418(60, 60, 0, ⵠΔ[785], 3);
    this.ᐃΔΔ[159].id = 159;
    this.ᐃΔΔ[160] = f418(60, 60, 0, ⵠΔ[791], 3);
    this.ᐃΔΔ[160].id = 160;
    this.ᐃΔΔ[161] = f418(60, 60, 0, ⵠΔ[799], 3);
    this.ᐃΔΔ[161].id = 161;
    this.ᐃΔΔ[42] = f418(60, 60, 0, ⵠΔ[809], 3);
    this.ᐃΔΔ[42].id = 42;
    this.ᐃΔΔ[43] = f418(60, 60, 0, ⵠΔ[835], 3);
    this.ᐃΔΔ[43].id = 43;
    this.ᐃΔΔ[107] = f418(60, 60, 0, ⵠΔ[843], 3);
    this.ᐃΔΔ[107].id = 107;
    this.ᐃΔΔ[44] = f418(60, 60, 0, ⵠΔ[846], 3);
    this.ᐃΔΔ[44].id = 44;
    this.ᐃΔΔ[46] = f418(60, 60, 0, ⵠΔ[960], 3);
    this.ᐃΔΔ[46].id = 46;
    this.ᐃΔΔ[45] = f418(60, 60, 0, ⵠΔ[950], 3);
    this.ᐃΔΔ[45].id = 45;
    this.ᐃΔΔ[47] = f418(60, 60, 0, ⵠΔ[967], 3);
    this.ᐃΔΔ[47].id = 47;
    this.ᐃΔΔ[48] = f418(60, 60, 0, ⵠΔ[982], 3);
    this.ᐃΔΔ[48].id = 48;
    this.ᐃΔΔ[25] = f418(60, 60, 0, ⵠΔ[402], 3);
    this.ᐃΔΔ[25].id = 25;
    this.ᐃΔΔ[31] = f418(60, 60, 0, ⵠΔ[876], 3);
    this.ᐃΔΔ[31].id = 31;
    this.ᐃΔΔ[33] = f418(60, 60, 0, ⵠΔ[900], 3);
    this.ᐃΔΔ[33].id = 33;
    this.ᐃΔΔ[162] = f418(60, 60, 0, ⵠΔ[909], 3);
    this.ᐃΔΔ[162].id = 162;
    this.ᐃΔΔ[128] = f418(60, 60, 0, ⵠΔ[912], 3);
    this.ᐃΔΔ[128].id = 128;
    this.ⵠⲆⵠ[53] = f418(68, 68, 0, ⵠΔ[976], 3);
    this.ⵠⲆⵠ[53].id = 53;
    this.ⵠⵠⲆ[53] = f418(60, 60, 0, ⵠΔ[975], 3);
    this.ⵠⵠⲆ[53].id = 53;
    this.ᐃΔΔ[22] = f418(60, 60, 0, ⵠΔ[977], 3);
    this.ᐃΔΔ[22].id = 22;
    this.ⵠⲆⵠ[54] = f418(68, 68, 0, ⵠΔ[979], 3);
    this.ⵠⲆⵠ[54].id = 54;
    this.ⵠⵠⲆ[54] = f418(60, 60, 0, ⵠΔ[978], 3);
    this.ⵠⵠⲆ[54].id = 54;
    this.ᐃΔΔ[23] = f418(60, 60, 0, ⵠΔ[980], 3);
    this.ᐃΔΔ[23].id = 23;
    this.ⵠⲆⵠ[56] = f418(68, 68, 0, ⵠΔ[713], 3);
    this.ⵠⲆⵠ[56].id = 56;
    this.ⵠⵠⲆ[56] = f418(60, 60, 0, ⵠΔ[712], 3);
    this.ⵠⵠⲆ[56].id = 56;
    this.ᐃΔΔ[123] = f418(60, 60, 0, ⵠΔ[714], 3);
    this.ᐃΔΔ[123].id = 123;
    this.ⵠⲆⵠ[82] = f418(68, 68, 0, ⵠΔ[428], 3);
    this.ⵠⲆⵠ[82].id = 82;
    this.ⵠⵠⲆ[82] = f418(60, 60, 0, ⵠΔ[426], 3);
    this.ⵠⵠⲆ[82].id = 82;
    this.ᐃΔΔ[82] = f418(60, 60, 0, ⵠΔ[427], 3);
    this.ᐃΔΔ[82].id = 82;
    this.ⵠⲆⵠ[235] = f418(68, 68, 0, ⵠΔ[1159], 3);
    this.ⵠⲆⵠ[235].id = 235;
    this.ⵠⵠⲆ[235] = f418(60, 60, 0, ⵠΔ[1158], 3);
    this.ⵠⵠⲆ[235].id = 235;
    this.ⵠⲆⵠ[238] = f418(68, 68, 0, ⵠΔ[1188], 3);
    this.ⵠⲆⵠ[238].id = 238;
    this.ⵠⵠⲆ[238] = f418(60, 60, 0, ⵠΔ[1187], 3);
    this.ⵠⵠⲆ[238].id = 238;
    this.ⵠⲆⵠ[236] = f418(68, 68, 0, ⵠΔ[1161], 3);
    this.ⵠⲆⵠ[236].id = 236;
    this.ⵠⵠⲆ[236] = f418(60, 60, 0, ⵠΔ[1160], 3);
    this.ⵠⵠⲆ[236].id = 236;
    this.ⵠⲆⵠ[152] = f418(68, 68, 0, ⵠΔ[1197], 3);
    this.ⵠⲆⵠ[152].id = 152;
    this.ⵠⵠⲆ[152] = f418(60, 60, 0, ⵠΔ[1195], 3);
    this.ⵠⵠⲆ[152].id = 152;
    this.ᐃΔΔ[116] = f418(60, 60, 0, ⵠΔ[1196], 3);
    this.ᐃΔΔ[116].id = 116;
    this.ⵠⲆⵠ[212] = f418(68, 68, 0, ⵠΔ[992], 3);
    this.ⵠⲆⵠ[212].id = 212;
    this.ⵠⵠⲆ[212] = f418(60, 60, 0, ⵠΔ[991], 3);
    this.ⵠⵠⲆ[212].id = 212;
    this.ᐃΔΔ[73] = f418(60, 60, 0, ⵠΔ[990], 3);
    this.ᐃΔΔ[73].id = 73;
    this.ⵠⲆⵠ[213] = f418(68, 68, 0, ⵠΔ[995], 3);
    this.ⵠⲆⵠ[213].id = 213;
    this.ⵠⵠⲆ[213] = f418(60, 60, 0, ⵠΔ[994], 3);
    this.ⵠⵠⲆ[213].id = 213;
    this.ᐃΔΔ[74] = f418(60, 60, 0, ⵠΔ[993], 3);
    this.ᐃΔΔ[74].id = 74;
    this.ⵠⲆⵠ[214] = f418(68, 68, 0, ⵠΔ[998], 3);
    this.ⵠⲆⵠ[214].id = 214;
    this.ⵠⵠⲆ[214] = f418(60, 60, 0, ⵠΔ[997], 3);
    this.ⵠⵠⲆ[214].id = 214;
    this.ᐃΔΔ[75] = f418(60, 60, 0, ⵠΔ[996], 3);
    this.ᐃΔΔ[75].id = 75;
    this.ⵠⲆⵠ[215] = f418(68, 68, 0, ⵠΔ[1001], 3);
    this.ⵠⲆⵠ[215].id = 215;
    this.ⵠⵠⲆ[215] = f418(60, 60, 0, ⵠΔ[1000], 3);
    this.ⵠⵠⲆ[215].id = 215;
    this.ᐃΔΔ[76] = f418(60, 60, 0, ⵠΔ[999], 3);
    this.ᐃΔΔ[76].id = 76;
    this.ⵠⲆⵠ[216] = f418(68, 68, 0, ⵠΔ[1004], 3);
    this.ⵠⲆⵠ[216].id = 216;
    this.ⵠⵠⲆ[216] = f418(60, 60, 0, ⵠΔ[1003], 3);
    this.ⵠⵠⲆ[216].id = 216;
    this.ᐃΔΔ[77] = f418(60, 60, 0, ⵠΔ[1002], 3);
    this.ᐃΔΔ[77].id = 77;
    this.ⵠⲆⵠ[220] = f418(68, 68, 0, ⵠΔ[1007], 3);
    this.ⵠⲆⵠ[220].id = 220;
    this.ⵠⵠⲆ[220] = f418(60, 60, 0, ⵠΔ[1006], 3);
    this.ⵠⵠⲆ[220].id = 220;
    this.ᐃΔΔ[78] = f418(60, 60, 0, ⵠΔ[1005], 3);
    this.ᐃΔΔ[78].id = 78;
    this.ⵠⲆⵠ[217] = f418(68, 68, 0, ⵠΔ[1016], 3);
    this.ⵠⲆⵠ[217].id = 217;
    this.ⵠⵠⲆ[217] = f418(60, 60, 0, ⵠΔ[1015], 3);
    this.ⵠⵠⲆ[217].id = 217;
    this.ᐃΔΔ[60] = f418(60, 60, 0, ⵠΔ[1014], 3);
    this.ᐃΔΔ[60].id = 60;
    this.ⵠⲆⵠ[219] = f418(68, 68, 0, ⵠΔ[1013], 3);
    this.ⵠⲆⵠ[219].id = 219;
    this.ⵠⵠⲆ[219] = f418(60, 60, 0, ⵠΔ[1012], 3);
    this.ⵠⵠⲆ[219].id = 219;
    this.ᐃΔΔ[72] = f418(60, 60, 0, ⵠΔ[1011], 3);
    this.ᐃΔΔ[72].id = 72;
    this.ⵠⲆⵠ[218] = f418(68, 68, 0, ⵠΔ[1010], 3);
    this.ⵠⲆⵠ[218].id = 218;
    this.ⵠⵠⲆ[218] = f418(60, 60, 0, ⵠΔ[1009], 3);
    this.ⵠⵠⲆ[218].id = 218;
    this.ᐃΔΔ[66] = f418(60, 60, 0, ⵠΔ[1008], 3);
    this.ᐃΔΔ[66].id = 66;
    this.ⵠⲆⵠ[153] = f418(68, 68, 0, ⵠΔ[1201], 3);
    this.ⵠⲆⵠ[153].id = 153;
    this.ⵠⵠⲆ[153] = f418(60, 60, 0, ⵠΔ[1199], 3);
    this.ⵠⵠⲆ[153].id = 153;
    this.ᐃΔΔ[117] = f418(60, 60, 0, ⵠΔ[1200], 3);
    this.ᐃΔΔ[117].id = 117;
    this.ⵠⲆⵠ[154] = f418(68, 68, 0, ⵠΔ[1205], 3);
    this.ⵠⲆⵠ[154].id = 154;
    this.ⵠⵠⲆ[154] = f418(60, 60, 0, ⵠΔ[1203], 3);
    this.ⵠⵠⲆ[154].id = 154;
    this.ᐃΔΔ[118] = f418(60, 60, 0, ⵠΔ[1204], 3);
    this.ᐃΔΔ[118].id = 118;
    this.ⵠⲆⵠ[155] = f418(68, 68, 0, ⵠΔ[1209], 3);
    this.ⵠⲆⵠ[155].id = 155;
    this.ⵠⵠⲆ[155] = f418(60, 60, 0, ⵠΔ[1207], 3);
    this.ⵠⵠⲆ[155].id = 155;
    this.ᐃΔΔ[119] = f418(60, 60, 0, ⵠΔ[1208], 3);
    this.ᐃΔΔ[119].id = 119;
    this.ⵠⲆⵠ[156] = f418(68, 68, 0, ⵠΔ[1213], 3);
    this.ⵠⲆⵠ[156].id = 156;
    this.ⵠⵠⲆ[156] = f418(60, 60, 0, ⵠΔ[1211], 3);
    this.ⵠⵠⲆ[156].id = 156;
    this.ᐃΔΔ[120] = f418(60, 60, 0, ⵠΔ[1212], 3);
    this.ᐃΔΔ[120].id = 120;
    this.ⵠⲆⵠ[157] = f418(68, 68, 0, ⵠΔ[1217], 3);
    this.ⵠⲆⵠ[157].id = 157;
    this.ⵠⵠⲆ[157] = f418(60, 60, 0, ⵠΔ[1215], 3);
    this.ⵠⵠⲆ[157].id = 157;
    this.ᐃΔΔ[121] = f418(60, 60, 0, ⵠΔ[1216], 3);
    this.ᐃΔΔ[121].id = 121;
    this.ⵠⲆⵠ[203] = f418(68, 68, 0, ⵠΔ[937], 3);
    this.ⵠⲆⵠ[203].id = 203;
    this.ⵠⵠⲆ[203] = f418(60, 60, 0, ⵠΔ[936], 3);
    this.ⵠⵠⲆ[203].id = 203;
    this.ⵠⵠⲆ[203].info.ⵠᐃ[2] = this.ⵠⵠⲆ[203].info.ⵠᐃ[0];
    this.ⵠⲆⵠ[150] = f418(68, 68, 0, ⵠΔ[524], 3);
    this.ⵠⲆⵠ[150].id = 150;
    this.ⵠⵠⲆ[150] = f418(60, 60, 0, ⵠΔ[523], 3);
    this.ⵠⵠⲆ[150].id = 150;
    this.ⵠⵠⲆ[150].info.ⵠᐃ[2] = this.ⵠⵠⲆ[150].info.ⵠᐃ[0];
    this.ⵠⲆⵠ[202] = f418(68, 68, 0, ⵠΔ[939], 3);
    this.ⵠⲆⵠ[202].id = 202;
    this.ⵠⵠⲆ[202] = f418(60, 60, 0, ⵠΔ[938], 3);
    this.ⵠⵠⲆ[202].id = 202;
    this.ⵠⵠⲆ[202].info.ⵠᐃ[2] = this.ⵠⵠⲆ[202].info.ⵠᐃ[0];
    this.ⵠⲆⵠ[19] = f418(68, 68, 0, ⵠΔ[934], 3);
    this.ⵠⲆⵠ[19].id = 19;
    this.ⵠⵠⲆ[19] = f418(60, 60, 0, ⵠΔ[932], 3);
    this.ⵠⵠⲆ[19].id = 19;
    this.ᐃΔΔ[39] = f418(60, 60, 0, ⵠΔ[933], 3);
    this.ᐃΔΔ[39].id = 39;
    this.ⵠⲆⵠ[20] = f418(68, 68, 0, ⵠΔ[923], 3);
    this.ⵠⲆⵠ[20].id = 20;
    this.ⵠⵠⲆ[20] = f418(60, 60, 0, ⵠΔ[921], 3);
    this.ⵠⵠⲆ[20].id = 20;
    this.ᐃΔΔ[95] = f418(60, 60, 0, ⵠΔ[922], 3);
    this.ᐃΔΔ[95].id = 95;
    this.ⵠⲆⵠ[21] = f418(68, 68, 0, ⵠΔ[927], 3);
    this.ⵠⲆⵠ[21].id = 21;
    this.ⵠⵠⲆ[21] = f418(60, 60, 0, ⵠΔ[925], 3);
    this.ⵠⵠⲆ[21].id = 21;
    this.ᐃΔΔ[96] = f418(60, 60, 0, ⵠΔ[926], 3);
    this.ᐃΔΔ[96].id = 96;
    this.ⵠⲆⵠ[22] = f418(68, 68, 0, ⵠΔ[931], 3);
    this.ⵠⲆⵠ[22].id = 22;
    this.ⵠⵠⲆ[22] = f418(60, 60, 0, ⵠΔ[929], 3);
    this.ⵠⵠⲆ[22].id = 22;
    this.ᐃΔΔ[97] = f418(60, 60, 0, ⵠΔ[930], 3);
    this.ᐃΔΔ[97].id = 97;
    this.ⵠⲆⵠ[60] = f418(68, 68, 0, ⵠΔ[736], 3);
    this.ⵠⲆⵠ[60].id = 60;
    this.ⵠⵠⲆ[60] = f418(60, 60, 0, ⵠΔ[735], 3);
    this.ⵠⵠⲆ[60].id = 60;
    this.ᐃΔΔ[127] = f418(60, 60, 0, ⵠΔ[737], 3);
    this.ᐃΔΔ[127].id = 127;
    this.ⵠⲆⵠ[90] = f418(68, 68, 0, ⵠΔ[739], 3);
    this.ⵠⲆⵠ[90].id = 90;
    this.ⵠⵠⲆ[90] = f418(60, 60, 0, ⵠΔ[738], 3);
    this.ⵠⵠⲆ[90].id = 90;
    this.ᐃΔΔ[173] = f418(60, 60, 0, ⵠΔ[740], 3);
    this.ᐃΔΔ[173].id = 173;
    this.ⵠⲆⵠ[92] = f418(68, 68, 0, ⵠΔ[745], 3);
    this.ⵠⲆⵠ[92].id = 92;
    this.ⵠⵠⲆ[92] = f418(60, 60, 0, ⵠΔ[744], 3);
    this.ⵠⵠⲆ[92].id = 92;
    this.ᐃΔΔ[174] = f418(60, 60, 0, ⵠΔ[746], 3);
    this.ᐃΔΔ[174].id = 174;
    this.ⵠⲆⵠ[93] = f418(68, 68, 0, ⵠΔ[748], 3);
    this.ⵠⲆⵠ[93].id = 93;
    this.ⵠⵠⲆ[93] = f418(60, 60, 0, ⵠΔ[747], 3);
    this.ⵠⵠⲆ[93].id = 93;
    this.ᐃΔΔ[175] = f418(60, 60, 0, ⵠΔ[749], 3);
    this.ᐃΔΔ[175].id = 175;
    this.ⵠⲆⵠ[91] = f418(68, 68, 0, ⵠΔ[742], 3);
    this.ⵠⲆⵠ[91].id = 91;
    this.ⵠⵠⲆ[91] = f418(60, 60, 0, ⵠΔ[741], 3);
    this.ⵠⵠⲆ[91].id = 91;
    this.ᐃΔΔ[176] = f418(60, 60, 0, ⵠΔ[743], 3);
    this.ᐃΔΔ[176].id = 176;
    this.ⵠⲆⵠ[100] = f418(68, 68, 0, ⵠΔ[1165], 3);
    this.ⵠⲆⵠ[100].id = 100;
    this.ⵠⵠⲆ[100] = f418(60, 60, 0, ⵠΔ[1164], 3);
    this.ⵠⵠⲆ[100].id = 100;
    this.ᐃΔΔ[v625.ΔᐃΔΔᐃ] = f418(60, 60, 0, ⵠΔ[v624.ᐃΔⵠᐃⲆΔⵠᐃΔ], 3);
    this.ᐃΔΔ[v625.ΔᐃΔΔᐃ].id = v625.ΔᐃΔΔᐃ;
    this.ⵠⲆⵠ[34] = f418(68, 68, 0, ⵠΔ[945], 3);
    this.ⵠⲆⵠ[34].id = 34;
    this.ⵠⵠⲆ[34] = f418(60, 60, 0, ⵠΔ[943], 3);
    this.ⵠⵠⲆ[34].id = 34;
    this.ᐃΔΔ[30] = f418(60, 60, 0, ⵠΔ[944], 3);
    this.ᐃΔΔ[30].id = 30;
    this.ⵠⲆⵠ[44] = f418(68, 68, 0, ⵠΔ[948], 3);
    this.ⵠⲆⵠ[44].id = 44;
    this.ⵠⵠⲆ[44] = f418(60, 60, 0, ⵠΔ[946], 3);
    this.ⵠⵠⲆ[44].id = 44;
    this.ᐃΔΔ[92] = f418(60, 60, 0, ⵠΔ[947], 3);
    this.ᐃΔΔ[92].id = 92;
    this.ⵠⲆⵠ[17] = f418(68, 68, 0, ⵠΔ[878], 3);
    this.ⵠⲆⵠ[17].id = 17;
    this.ⵠⵠⲆ[17] = f418(60, 60, 0, ⵠΔ[877], 3);
    this.ⵠⵠⲆ[17].id = 17;
    this.ᐃΔΔ[32] = f418(60, 60, 0, ⵠΔ[879], 3);
    this.ᐃΔΔ[32].id = 32;
    this.ⵠⲆⵠ[63] = f418(68, 68, 0, ⵠΔ[568], 3);
    this.ⵠⲆⵠ[63].id = 63;
    this.ⵠⵠⲆ[63] = f418(60, 60, 0, ⵠΔ[566], 3);
    this.ⵠⵠⲆ[63].id = 63;
    this.ᐃΔΔ[130] = f418(60, 60, 0, ⵠΔ[567], 3);
    this.ᐃΔΔ[130].id = 130;
    this.ⵠⲆⵠ[187] = f418(68, 68, 0, ⵠΔ[591], 3);
    this.ⵠⲆⵠ[187].id = 187;
    this.ⵠⵠⲆ[187] = f418(60, 60, 0, ⵠΔ[253], 3);
    this.ⵠⵠⲆ[187].id = 187;
    this.ⵠⲆⵠ[v626.ᐃᐃⲆᐃᐃᐃΔ] = f418(68, 68, 0, ⵠΔ[v624.ⵠⲆᐃᐃⲆᐃⵠΔΔ], 3);
    this.ⵠⲆⵠ[v626.ᐃᐃⲆᐃᐃᐃΔ].id = v626.ᐃᐃⲆᐃᐃᐃΔ;
    this.ⵠⵠⲆ[v626.ᐃᐃⲆᐃᐃᐃΔ] = f418(60, 60, 0, ⵠΔ[v624.ⵠᐃΔᐃⲆᐃΔⲆΔ], 3);
    this.ⵠⵠⲆ[v626.ᐃᐃⲆᐃᐃᐃΔ].id = v626.ᐃᐃⲆᐃᐃᐃΔ;
    this.ⵠⲆⵠ[v626.ΔⵠⵠΔⲆᐃᐃ] = f418(68, 68, 0, ⵠΔ[v624.ΔΔᐃΔⲆᐃᐃⲆⵠ], 3);
    this.ⵠⲆⵠ[v626.ΔⵠⵠΔⲆᐃᐃ].id = v626.ΔⵠⵠΔⲆᐃᐃ;
    this.ⵠⵠⲆ[v626.ΔⵠⵠΔⲆᐃᐃ] = f418(60, 60, 0, ⵠΔ[v624.ⵠᐃΔΔΔΔᐃⵠⲆ], 3);
    this.ⵠⵠⲆ[v626.ΔⵠⵠΔⲆᐃᐃ].id = v626.ΔⵠⵠΔⲆᐃᐃ;
    this.ⵠⲆⵠ[v626.ⵠᐃⲆⵠⵠⵠΔ] = f418(68, 68, 0, ⵠΔ[v624.ᐃᐃⲆⵠⲆⲆⲆᐃⵠ], 3);
    this.ⵠⲆⵠ[v626.ⵠᐃⲆⵠⵠⵠΔ].id = v626.ⵠᐃⲆⵠⵠⵠΔ;
    this.ⵠⵠⲆ[v626.ⵠᐃⲆⵠⵠⵠΔ] = f418(60, 60, 0, ⵠΔ[v624.ⲆᐃᐃⲆⲆᐃΔΔⲆ], 3);
    this.ⵠⵠⲆ[v626.ⵠᐃⲆⵠⵠⵠΔ].id = v626.ⵠᐃⲆⵠⵠⵠΔ;
    this.ⵠⲆⵠ[v626.ⵠΔΔΔⲆⲆΔ] = f418(68, 68, 0, ⵠΔ[v624.ⵠᐃΔΔΔⲆⲆⲆΔ], 3);
    this.ⵠⲆⵠ[v626.ⵠΔΔΔⲆⲆΔ].id = v626.ⵠΔΔΔⲆⲆΔ;
    this.ⵠⵠⲆ[v626.ⵠΔΔΔⲆⲆΔ] = f418(60, 60, 0, ⵠΔ[v624.ᐃΔΔᐃⲆᐃⲆⲆᐃ], 3);
    this.ⵠⵠⲆ[v626.ⵠΔΔΔⲆⲆΔ].id = v626.ⵠΔΔΔⲆⲆΔ;
    this.ⵠⲆⵠ[v626.ⵠⵠᐃⵠⲆΔⲆ] = f418(68, 68, 0, ⵠΔ[v624.ΔΔᐃⵠⲆⲆᐃⲆⲆ], 3);
    this.ⵠⲆⵠ[v626.ⵠⵠᐃⵠⲆΔⲆ].id = v626.ⵠⵠᐃⵠⲆΔⲆ;
    this.ⵠⵠⲆ[v626.ⵠⵠᐃⵠⲆΔⲆ] = f418(60, 60, 0, ⵠΔ[v624.ⵠⲆᐃΔΔΔᐃΔΔ], 3);
    this.ⵠⵠⲆ[v626.ⵠⵠᐃⵠⲆΔⲆ].id = v626.ⵠⵠᐃⵠⲆΔⲆ;
    this.ΔⲆΔⲆΔⲆΔ = function () {
      for (var v2562 = v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ, v2563 = 10, v2564 = 10, v2565 = 0; v2562.length > v2565; v2565++) {
        if (v2565 > 0 && !(v2565 % 4)) {
          v2563 += v2562[0].info.width + 10;
          v2564 = 10;
        }
        v2562[v2565].info.translate.x = v2563;
        v2562[v2565].info.translate.y = v2564;
        v2564 += 10 + v2562[v2565].info.height;
      }
    };
    this.ΔⲆⲆⲆᐃᐃᐃ = function () {
      var v2566 = Math.floor((10 + this.ⵠⲆⵠ[0].info.ⵠᐃ[0].width) * Math.floor((3 + v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ.length) / 4) + 35);
      for (var v2567 = 0; this.ⵠⲆⵠ.length > v2567; v2567++) {
        if (this.ⵠⲆⵠ[v2567]) {
          this.ⵠⲆⵠ[v2567].info.translate.x = v2566;
          this.ⵠⲆⵠ[v2567].info.translate.y = 22;
        }
      }
      this.ᐃⵠⵠΔᐃⲆⵠ.info.translate.x = v2566 + 17;
      this.ᐃⵠⵠΔᐃⲆⵠ.info.translate.y = 22 + ⵠΔ[339].height;
      this.ⲆⵠⲆⵠⲆΔⲆ.info.translate.x = v2566 + 17;
      this.ⲆⵠⲆⵠⲆΔⲆ.info.translate.y = 30;
      this.ᐃΔⵠΔΔⲆⵠ.info.translate.x = v2566 + 17;
      this.ᐃΔⵠΔΔⲆⵠ.info.translate.y = 22 + ⵠΔ[339].height;
    };
    this.ΔⲆⲆⲆⵠΔⵠⵠᐃ = function () {
      var v2568 = Math.floor((v441 - ⵠΔ[556][0].width) / 2);
      for (var v2569 = 0; this.ⲆⲆΔΔᐃ.length > v2569; v2569++) {
        this.ⲆⲆΔΔᐃ[v2569].button.info.translate.x = v2568;
        this.ⲆⲆΔΔᐃ[v2569].button.info.translate.y = -13;
      }
    };
    this.ⲆⵠΔⵠΔΔⲆ = function () {
      var v2570 = 12 + Math.floor(Math.floor((3 + v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ.length) / 4) * (10 + this.ΔΔⵠᐃΔΔⲆ.info.ⵠᐃ[0].width) + 35);
      this.ΔΔⵠᐃΔΔⲆ.info.translate.x = v2570;
      this.ΔΔⵠᐃΔΔⲆ.info.translate.y = 33;
      this.ⵠⲆⲆⵠⲆΔⲆ.info.translate.x = this.ΔΔⵠᐃΔΔⲆ.info.translate.x;
      this.ⵠⲆⲆⵠⲆΔⲆ.info.translate.y = 137;
      this.ᐃⵠⵠⲆᐃΔΔ.info.translate.x = this.ΔΔⵠᐃΔΔⲆ.info.translate.x;
      this.ᐃⵠⵠⲆᐃΔΔ.info.translate.y = 240;
    };
    this.ⲆᐃᐃΔΔⵠᐃ = function () {
      var v2571 = 12 + Math.floor((10 + this.ⵠΔᐃⵠΔᐃⲆ.info.ⵠᐃ[0].width) * Math.floor((3 + v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ.length) / 4) + 35);
      this.ⵠΔᐃⵠΔᐃⲆ.info.translate.x = v2571;
      this.ⵠΔᐃⵠΔᐃⲆ.info.translate.y = 36;
      v2571 += 83;
      this.ⵠⲆⲆΔᐃⵠΔ.info.translate.x = v2571;
      this.ⵠⲆⲆΔᐃⵠΔ.info.translate.y = 36;
      this.ΔΔᐃΔⲆⵠᐃ.info.translate.x = v2571;
      this.ΔΔᐃΔⲆⵠᐃ.info.translate.y = 36;
      this.ⵠΔᐃΔᐃⵠΔ.info.translate.x = v2571;
      this.ⵠΔᐃΔᐃⵠΔ.info.translate.y = 36;
      this.ᐃΔⵠΔⵠᐃᐃ.info.translate.x = v2571;
      this.ᐃΔⵠΔⵠᐃᐃ.info.translate.y = 36;
      this.ⵠΔᐃⵠᐃΔΔ.info.translate.x = v2571;
      this.ⵠΔᐃⵠᐃΔΔ.info.translate.y = 36;
    };
    this.ⲆΔⲆᐃⲆΔΔ = function () {
      var v2572 = 12 + Math.floor((10 + this.ⲆᐃᐃΔⵠΔⲆ.info.ⵠᐃ[0].width) * Math.floor((3 + v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ.length) / 4) + 35);
      this.ⲆᐃᐃΔⵠΔⲆ.info.translate.x = v2572;
      this.ⲆᐃᐃΔⵠΔⲆ.info.translate.y = 36;
      v2572 += 83;
      this.ⲆⵠᐃⲆᐃⲆᐃ.info.translate.x = v2572;
      this.ⲆⵠᐃⲆᐃⲆᐃ.info.translate.y = 36;
    };
    this.ᐃⵠⲆΔΔᐃᐃ = function () {
      var v2573 = Math.floor((10 + this.ᐃⲆΔᐃⲆΔᐃ.info.ⵠᐃ[0].width) * Math.floor((3 + v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ.length) / 4) + 35);
      this.ᐃⲆΔᐃⲆΔᐃ.info.translate.x = v2573;
      this.ᐃⲆΔᐃⲆΔᐃ.info.translate.y = 22;
    };
    this.ΔⲆᐃⲆⵠⲆⵠ = function () {
      var v2574 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ;
      if (v2574.length > 0) {
        var v2575 = Math.floor((v441 - v2813.ⵠⲆΔⵠ.max * (v2574[0].info.width + 5)) / 2);
      }
      for (var v2576 = 0; v2576 < v2574.length; v2576++) {
        v2574[v2576].info.translate.x = v2575 + v2576 * (v2574[v2576].info.width + 5);
        v2574[v2576].info.translate.y = v442 - v2574[v2576].info.width - 10;
        this.ⵠⵠΔⲆΔ[v2574[v2576].id].info.translate.x = v2574[v2576].info.translate.x + 13;
        this.ⵠⵠΔⲆΔ[v2574[v2576].id].info.translate.y = v2574[v2576].info.translate.y - this.ⵠⵠΔⲆΔ[v2574[v2576].id].info.ⵠᐃ[0].height - 6;
      }
    };
    var v2577;
    var v2578 = 0;
    function f471() {
      vThis2.ⲆᐃⲆ();
      if (++v2578 == 30) {
        vThis2.ᐃⲆᐃΔᐃⲆᐃ();
        vThis2.ⲆᐃⲆ();
        return;
      }
      vWindow.setTimeout(f471, 33);
    }
    this.ΔᐃΔⵠΔ = function (p1649) {
      if (v2813.ⲆⲆⲆⲆΔ.open) {
        v2813.ⲆⲆⲆⲆΔ.ΔᐃΔⵠΔ();
      }
      if (v2813.Ⲇᐃⵠᐃⵠ.open) {
        v2813.Ⲇᐃⵠᐃⵠ.ΔᐃΔⵠΔ();
      }
      document.getElementById("team_box").style.display = "none";
      vThis2.ᐃΔᐃⵠΔ.style.display = "none";
      vThis2.ᐃΔᐃⵠΔ.open = false;
      vThis2.sign.style.display = "none";
      vThis2.sign.open = vVV1432;
      document.getElementById("shop_starterkit").style.display = "none";
      document.getElementById("home_craft").style.display = "none";
      document.getElementById("recipe_craft").style.display = "none";
      vThis2.ⵠᐃⲆᐃ.open = vVVV14;
      document.getElementById("option_in_game").style.display = "none";
      vThis2.options.open = false;
      document.getElementById("sure_delete").style.display = "none";
      vThis2.ⲆᐃⲆΔ.open = false;
      document.getElementById("cancel_sure_delete").style.display = "none";
      vThis2.ⲆⲆⵠⲆⵠ.open = vV142;
      document.getElementById("chronoquest").style.display = "none";
      vThis2.ΔᐃΔΔ.open = vVVV14;
      v2577 = p1649;
      vThis2.ᐃⲆⵠⵠΔⵠΔ();
      vThis2.ΔⲆ.style.cursor = vThis2.ⵠᐃⵠΔΔⲆⲆ;
      v2992.ΔᐃΔⵠΔ();
      v2579 = -1;
      f472();
      f515();
    };
    var v2579 = -1;
    function f472() {
      vThis2.ⲆᐃⲆ();
      if (++v2579 == 30) {
        vThis2.stop();
        v2577();
        return;
      }
      vWindow.setTimeout(f472, 33);
    }
    this.ⵠⲆⵠᐃᐃ = vV144;
    this.stop = function () {
      this.ⵠⲆⵠᐃᐃ = false;
    };
    this.ⵠᐃᐃⲆᐃ = function () {
      v2815.ⲆⵠⵠⵠᐃᐃᐃⲆᐃ();
      vThis2.ⵠⲆⵠᐃᐃ = vVVVV163;
      v2579 = -1;
      v2578 = 0;
      f471();
    };
    this.ⲆᐃⲆ = function () {
      this.ⵠⵠΔⲆ.translate.x = v441 - this.ⵠⵠΔⲆ.ⵠᐃ.width - 10;
      this.ⵠⵠΔⲆ.translate.y = 5;
      v2812.ΔΔΔⲆΔ.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[725][0].width - 85;
      v2812.ΔΔΔⲆΔ.translate.y = 10;
      this.ⵠᐃⲆᐃ.button.info.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[708][0].width - 10;
      this.ⵠᐃⲆᐃ.button.info.translate.y = 10;
      this.ΔᐃΔΔ.button.info.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[755][0].width - 20;
      this.ΔᐃΔΔ.button.info.translate.y = this.ⵠᐃⲆᐃ.button.info.translate.y + ⵠΔ[708][0].height + 5;
      this.options.button.info.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[727][0].width - 20;
      this.options.button.info.translate.y = this.ΔᐃΔΔ.button.info.translate.y + ⵠΔ[727][0].height + 18;
      this.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.info.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[727][0].width - 20;
      this.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.info.translate.y = this.options.button.info.translate.y + ⵠΔ[783][0].height;
      this.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.info.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[727][0].width - 20;
      this.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.info.translate.y = this.options.button.info.translate.y + ⵠΔ[783][0].height;
      this.ᐃΔᐃⵠΔ.button.info.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[795][0].width - 20;
      this.ᐃΔᐃⵠΔ.button.info.translate.y = this.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.info.translate.y + ⵠΔ[795][0].height;
      v2813.ⵠⵠⵠⲆΔ.translate.x = this.ⵠⵠΔⲆ.translate.x - 63 - 85;
      v2813.ⵠⵠⵠⲆΔ.translate.y = 100;
      v2813.ΔⲆⲆⵠⲆ.translate.x = this.ⵠⵠΔⲆ.translate.x - ⵠΔ[517].width - 85;
      v2813.ΔⲆⲆⵠⲆ.translate.y = v2813.ⵠⵠⵠⲆΔ.translate.y + 10 + ⵠΔ[546].height;
      this.ΔⲆⲆⲆⲆ.translate.y = v442 - 3 - 193;
      this.ΔⲆⲆⲆⲆ.translate.x = v441 - 3 - 193;
      this.ⲆᐃᐃΔ.translate.x = 5;
      this.ⲆᐃᐃΔ.translate.y = v442 - this.ⲆᐃᐃΔ.ⵠᐃ.height - 5;
      this.ΔᐃᐃⲆⵠ.button.info.translate.x = v445 - 45.5;
      this.ΔᐃᐃⲆⵠ.button.info.translate.y = 50;
      this.ΔⲆΔⲆΔⲆΔ();
      this.ΔⲆᐃⲆⵠⲆⵠ();
      this.ΔⲆⲆⲆᐃᐃᐃ();
      this.ᐃⵠⲆΔΔᐃᐃ();
      this.ⲆΔⲆᐃⲆΔΔ();
      this.ⲆᐃᐃΔΔⵠᐃ();
      this.ⲆⵠΔⵠΔΔⲆ();
      this.ΔⲆⲆⲆⵠΔⵠⵠᐃ();
      this.sign.ᐃΔⲆΔⲆⵠⲆ();
      f301();
      v2813.ⲆⲆⲆⲆΔ.ⲆᐃⲆ();
      v2813.Ⲇᐃⵠᐃⵠ.ⲆᐃⲆ();
      this.ΔⲆⵠᐃᐃᐃⵠᐃΔ.ⲆᐃⲆ();
      this.ⵠᐃⲆᐃ.ⲆᐃᐃΔⵠᐃΔ.ⲆᐃⲆ();
      this.ⵠᐃⲆᐃ.list.ⲆᐃⲆ();
      this.ⲆᐃⲆΔ.ⲆᐃⲆ();
      this.ⲆⲆⵠⲆⵠ.ⲆᐃⲆ();
      this.ΔᐃΔΔ.ⲆᐃⲆ();
      this.ΔᐃᐃⲆⵠ.ⲆᐃⲆ();
      this.options.ⲆᐃⲆ();
      this.ᐃΔᐃⵠΔ.ⲆᐃⲆ();
      this.sign.ⲆᐃⲆ();
      var v2580 = 0;
      if (v2578 != 30) {
        v2580 = 1500 / (v2578 + 1) - 50;
      }
      if (v2579 != -1) {
        v2580 = -(1500 / (30 - v2579 + 1) - 48);
      }
      this.ΔᐃᐃⲆⵠ.button.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ⵠⵠΔⲆ.translate.y -= v2580 > 0 ? v2580 : -v2580;
      v2813.ⵠⵠⵠⲆΔ.translate.y -= v2580 > 0 ? v2580 : -v2580;
      v2813.ΔⲆⲆⵠⲆ.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ⵠᐃⲆᐃ.button.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ΔᐃΔΔ.button.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.options.button.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ᐃΔᐃⵠΔ.button.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.info.translate.y -= v2580 > 0 ? v2580 : -v2580;
      v2812.ΔΔΔⲆΔ.translate.y -= v2580 > 0 ? v2580 : -v2580;
      this.ⲆᐃᐃΔ.translate.y -= v2580 < 0 ? v2580 : -v2580;
      this.ΔⲆⲆⲆⲆ.translate.y -= v2580 < 0 ? v2580 : -v2580;
    };
    this.ΔⵠⲆⲆⲆᐃⵠ = function () {
      if (!v2813.ΔⵠᐃⵠⲆ.enabled && this.ᐃᐃⵠᐃⲆᐃᐃ && !v2813.ⵠΔᐃᐃⲆ) {
        f322();
      }
      f324();
      (function () {
        var v2581 = v2812.ⲆⵠΔ[0];
        if (v2812.mode === 0 || v2812.mode === 7 || v2812.mode === 2 || v2812.mode === 4 || v2812.mode === 5 || v2812.mode === 6 || v2812.mode === 3) {
          for (var v2582 = 0; v2582 < v2581.length; v2582++) {
            v2581[v2582].ΔⲆΔΔⲆⵠᐃ();
          }
        } else if (v2812.mode === 1) {
          for (v2582 = 0; v2582 < v2581.length; v2582++) {
            if (v2813.ᐃᐃⲆⵠⲆΔᐃ || v2813.ΔⲆⲆⵠⲆ.enabled || v2581[v2582].ⲆⲆⲆⵠ.ⵠᐃΔⵠΔ !== "spectator") {
              v2581[v2582].ΔⲆΔΔⲆⵠᐃ();
            }
          }
        }
      })();
      vF34.ᐃΔΔⲆⵠⲆᐃ();
      if (this.ᐃᐃⵠᐃⲆᐃᐃ) {
        f302();
        if (this.ΔᐃΔΔᐃΔⵠ === 1) {
          this.ⵠᐃⲆᐃ.button.ᐃᐃΔⵠ(p1633);
        }
        if (v2812.mode !== 2 && v2812.mode !== 4 && v2812.mode !== 5 && this.ΔⲆⵠᐃⲆⵠΔ === 1) {
          this.ΔᐃΔΔ.button.ᐃᐃΔⵠ(p1633);
        }
        this.options.button.ᐃᐃΔⵠ(p1633);
        if (this.ᐃⵠᐃⵠᐃΔΔ === 1) {
          this.ᐃΔᐃⵠΔ.button.ᐃᐃΔⵠ(p1633);
        }
        if (v2992.ⵠᐃᐃⲆᐃ) {
          this.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.ᐃᐃΔⵠ(p1633);
        } else {
          this.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.ᐃᐃΔⵠ(p1633);
        }
        f311();
        f323();
        this.ⲆᐃᐃΔ.ᐃᐃΔⵠ();
        f321();
        f320();
        f315();
        f307();
        f319();
        f298();
        f296();
        (function () {
          if (!v2813.ᐃⵠΔⲆ.open && !v2813.ΔⲆΔᐃᐃ.open && !v2813.ⲆᐃⲆⵠ.open && !v2813.ⲆⲆΔΔ.open && !v2813.ⲆΔⲆᐃ.open) {
            v2813.ⵠⲆⵠΔΔ.open = vVVVVV1422;
            var v2583 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
            var v2584 = 100;
            if (v2583) {
              for (var v2585 = 0; v2585 < v2812.ⲆⵠΔ[35].length; v2585++) {
                var v2586 = v2812.ⲆⵠΔ[35][v2585];
                var v2587 = ᐃⵠⵠ.Ⲇᐃᐃᐃ(v2586, v2583);
                if (v2587 < v2584) {
                  v2584 = v2587;
                  v2813.ⵠⲆⵠΔΔ.open = vVV16;
                  v2813.ⵠⲆⵠΔΔ.ⵠⵠⵠᐃ = v2586.ⵠⵠⵠᐃ;
                  v2813.ⵠⲆⵠΔΔ.ⲆⲆⵠᐃⵠ = v2586.id;
                }
              }
            }
          }
        })();
        f297();
        f305();
        f300();
        f292();
        f301();
        f295();
      }
      if (v2813.ΔⵠᐃⵠⲆ.enabled) {
        f304();
      }
      f299();
      if (this.ᐃᐃⵠᐃⲆᐃᐃ && this.ⵠⲆᐃⵠΔᐃᐃ === 1) {
        f312();
      }
      v2813.ⵠᐃᐃΔᐃⲆⲆ.ᐃᐃΔⵠ();
      v2813.alert.ᐃᐃΔⵠ("#FFF", "#000");
      if (this.ᐃᐃⵠᐃⲆᐃᐃ) {
        v2813.ΔⵠᐃⵠⲆ.ᐃᐃΔⵠ();
        v2813.ΔᐃᐃⲆⵠ.ᐃᐃΔⵠ();
        v2813.ⵠⲆΔⵠ.ⲆⲆⲆⲆᐃⵠᐃ.ᐃᐃΔⵠ(v3024.Δᐃᐃⵠ.x, v3024.Δᐃᐃⵠ.y);
      }
      f303();
    };
    this.ⲆΔⵠⲆⵠΔΔΔⲆ = function () {
      v2813.ΔⲆΔ.ⲆᐃⲆ();
      v2813.ⲆᐃᐃΔ.ⲆᐃⲆ();
      if (!v2813.reconnect.enabled && v2813.ⲆⵠⵠΔᐃ) {
        v2813.control.ⲆᐃⲆ();
        v2813.ⵠⵠⵠⲆΔ.ⲆᐃⲆ();
      }
      v2812.ⲆᐃⲆ();
      this.ΔᐃΔΔ.ⵠⲆᐃⲆΔⵠⲆⵠΔ();
    };
    this.ⲆⵠᐃⲆᐃⵠⵠⵠⲆ = function () {
      f415();
    };
    this.ᐃⵠⲆᐃᐃⵠᐃⲆⲆ = function () {
      v2815.ⲆᐃⵠΔΔⵠΔⵠΔ();
      v2815.ᐃⲆΔⵠᐃΔᐃᐃⲆ();
      v2815.ΔⵠⲆⲆⵠⲆⵠΔΔ();
      v2815.ΔᐃⵠᐃΔΔᐃⵠⵠ();
    };
    this.ᐃᐃΔⵠ = function () {
      if (!v2813.reconnect.enabled && v2813.ⲆⵠⵠΔᐃ) {
        this.ᐃⵠⲆᐃᐃⵠᐃⲆⲆ();
      }
      v2992.ⲆᐃⲆᐃⵠᐃᐃⲆⲆ();
      this.ⲆΔⵠⲆⵠΔΔΔⲆ();
      if (v2811.ᐃⵠⲆᐃⵠⵠⵠ !== 1) {
        this.ⲆⵠᐃⲆᐃⵠⵠⵠⲆ();
        this.ΔⵠⲆⲆⲆᐃⵠ();
      } else {
        var v2588 = Δⵠ.ⵠⵠⲆΔΔΔΔ;
        f293(p1633, v2588, v445 - v2588.width / 4, v449 - v2588.height / 4, v2588.width / 2, v2588.height / 2);
      }
    };
    this.ⵠⲆⵠΔⲆⵠᐃ = function (p1650) {
      if (v2813.ⲆⲆⲆⲆΔ.open && p1650.keyCode === 27) {
        v2813.ⲆⲆⲆⲆΔ.ΔᐃΔⵠΔ();
      } else if (v2813.Ⲇᐃⵠᐃⵠ.open && p1650.keyCode === 27) {
        v2813.Ⲇᐃⵠᐃⵠ.ΔᐃΔⵠΔ();
      } else if (v2813.ⲆⲆⲆⲆΔ.open || v2813.Ⲇᐃⵠᐃⵠ.open || p1650.keyCode != 79 || v2579 != -1) {
        if (p1650.keyCode == 13 && v2579 == -1) {
          if (v2813.Ⲇᐃⵠᐃⵠ.open) {
            v2813.Ⲇᐃⵠᐃⵠ.ᐃⲆᐃⲆᐃⲆᐃ();
          } else {
            v2813.ⲆⲆⲆⲆΔ.ⵠᐃᐃⲆᐃ();
          }
        } else if (!v2813.ⲆⲆⲆⲆΔ.open && !v2813.Ⲇᐃⵠᐃⵠ.open) {
          if (p1650.keyCode === 82) {
            v2813.ⵠⵠⵠⲆΔ.ⵠⵠⲆⲆⲆⲆⵠ();
          } else if (p1650.keyCode !== 80 || v2812.mode !== 1 || v2813.ᐃᐃⲆⵠⲆΔᐃ) {
            if (p1650.keyCode >= 49 && p1650.keyCode <= 57) {
              if (v2813.ⵠⲆᐃⲆ.id < 0) {
                var v2589 = p1650.keyCode - 49;
                var v2590 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ[v2589];
                if (v2590) {
                  v2815.ᐃⲆⵠⲆΔ(v2590.id, v2589);
                }
              }
            } else if (p1650.keyCode == 89) {
              v2813.ⵠⲆᐃᐃⲆᐃᐃ = !v2813.ⵠⲆᐃᐃⲆᐃᐃ;
            } else if (p1650.keyCode == 71) {
              v2813.ⵠⲆᐃⲆ.ΔᐃΔΔⵠΔⵠΔⲆ();
            }
          } else {
            v2813.ΔⲆⲆⵠⲆ.ⵠⵠⲆⲆⲆⲆⵠ();
          }
        }
      } else {
        v2813.Ⲇᐃⵠᐃⵠ.ᐃΔᐃΔΔΔⲆⵠΔ();
      }
      v3020.up(p1650);
    };
    this.ⲆⲆⲆΔⲆΔⵠ = function (p1651) {
      v3020.down(p1651);
      if (p1651.keyCode == 8 && !v2813.ⲆⲆⲆⲆΔ.open && !v2813.Ⲇᐃⵠᐃⵠ.open) {
        p1651.preventDefault();
      }
    };
    this.ΔⲆΔΔΔᐃᐃ = function (p1652) {
      v3024.Δᐃᐃⵠ = f422(vThis2.ΔⲆ, p1652);
      var v2591 = false;
      if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
        vThis2.ΔⲆⲆⲆⲆ.focus(v3024.Δᐃᐃⵠ);
      }
      var v2592 = v2813.ᐃⵠΔⲆ;
      if (v2813.ⵠⲆᐃⲆ.id < 0 && v2592.id >= 0) {
        if (!v2813.ᐃⵠΔⲆ.lock || v2813.ᐃⵠΔⲆ.ⵠⵠⵠᐃ === v2813.id) {
          v2591 |= vThis2.ⵠⲆⵠ[v2813.ᐃⵠΔⲆ.id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        }
      }
      var v2593 = v2813.ⲆᐃⲆⵠ;
      if (v2593.open && v2593.ΔΔⲆΔⵠ > 0) {
        v2591 |= vThis2.ⲆⵠᐃⲆᐃⲆᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      var v2594 = v2813.ⲆΔⲆᐃ;
      if (v2594.open && v2594.ᐃΔΔΔⲆᐃΔ > 0) {
        v2591 |= vThis2.ⵠⲆⲆΔᐃⵠΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        v2591 |= vThis2.ΔΔᐃΔⲆⵠᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        v2591 |= vThis2.ⵠΔᐃΔᐃⵠΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        v2591 |= vThis2.ᐃΔⵠΔⵠᐃᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        v2591 |= vThis2.ⵠΔᐃⵠᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      var v2595 = v2813.ⲆⲆΔΔ;
      if (v2595.open && v2595.ⵠⵠΔⵠⵠⲆΔ > 0) {
        v2591 |= vThis2.ᐃⵠⵠⲆᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (v2813.sign.open) {
        v2591 |= vThis2.sign.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (!v2813.ᐃⵠΔⲆ.lock) {
        if (v2813.ᐃⵠΔⲆ.ⲆᐃⵠⲆΔⲆⲆ) {
          v2591 |= vThis2.ᐃΔⵠΔΔⲆⵠ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        }
      }
      if (v2813.ᐃⵠΔⲆ.ᐃⲆⵠⵠⲆΔⲆ) {
        v2591 |= vThis2.ᐃⵠⵠΔᐃⲆⵠ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (v2813.ⵠⲆᐃⲆ.id < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        for (var v2596 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ, v2597 = 0; v2597 < v2596.length; v2597++) {
          var v2598 = v2596[v2597].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
          v2591 |= v2598;
          if (v2598) {
            v2813.ⵠⲆΔⵠ.ⲆⲆⲆⲆᐃⵠᐃ.start(v2597, v3024.Δᐃᐃⵠ);
          }
          if (v2592.open && (v2592.id < 0 || v2592.id == v2596[v2597].id) || v2813.ΔⲆΔᐃᐃ.open && v2596[v2597].id === 109 || v2813.ⵠⲆⵠΔΔ.open && v2596[v2597].id === 180 || v2813.ⲆⲆΔΔ.open && (v2596[v2597].id === 109 || v2596[v2597].id === 131) || v2813.ⲆᐃⲆⵠ.open && v2596[v2597].id === 134 || v2813.ⲆΔⲆᐃ.open && v2596[v2597].id === 109) {
            v2591 |= vThis2.ⵠⵠΔⲆΔ[v2596[v2597].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
          }
        }
      }
      if (v2813.ⲆᐃᐃΔΔ.open) {
        v2591 |= vThis2.ⲆᐃᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (vThis2.ΔΔᐃⵠⵠ != -1) {
        if (v2591 |= vThis2.ⲆⲆΔΔᐃ[vThis2.ΔΔᐃⵠⵠ].button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239)) {
          var v2599 = true;
        }
      } else {
        v2599 = vVV143;
      }
      if (!!(v2813.ⵠⲆᐃⲆ.id < 0) && !!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !v2599 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ᐃΔᐃⵠΔ.open && !v2813.ⵠΔᐃᐃⲆ) {
        v2596 = v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ;
        v2597 = 0;
        for (; v2597 < v2596.length; v2597++) {
          v2591 |= v2596[v2597].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        }
      }
      if (v2813.ⵠⲆᐃⲆ.id < 0 && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && v2813.ΔᐃᐃⲆⵠ.open && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        v2591 |= vThis2.ΔᐃᐃⲆⵠ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        v2591 |= vThis2.ⵠᐃⲆᐃ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        v2591 |= vThis2.options.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open) {
        v2591 |= vThis2.ᐃΔᐃⵠΔ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        if (v2992.ⵠᐃᐃⲆᐃ) {
          v2591 |= vThis2.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        } else {
          v2591 |= vThis2.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        }
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ᐃΔᐃⵠΔ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && v2812.mode !== 2 && v2812.mode !== 4 && v2812.mode !== 5) {
        v2591 |= vThis2.ΔᐃΔΔ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
      }
      if (!v2591 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open && !vThis2.sign.open) {
        if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ >= 0) {
          v2815.ᐃΔⲆⲆᐃᐃᐃᐃΔ();
        } else if (!v2599) {
          v3024.down();
        }
      }
    };
    this.ⲆᐃΔᐃⲆᐃΔ = function (p1653) {
      v3024.Δᐃᐃⵠ = f422(vThis2.ΔⲆ, p1653);
      v3024.up();
      if (!v2813.ⵠⲆΔⵠ.ⲆⲆⲆⲆᐃⵠᐃ.release()) {
        var v2600 = v2813.ᐃⵠΔⲆ;
        var v2601 = v2813.ΔⲆΔᐃᐃ;
        var v2602 = v2813.ⵠⲆⵠΔΔ;
        var v2603 = v2813.ⲆᐃⲆⵠ;
        var v2604 = v2813.ⲆΔⲆᐃ;
        var v2605 = v2813.ⲆⲆΔΔ;
        if (v2813.control.attack) {
          v2813.control.attack = 0;
          v2815.ΔΔΔⲆᐃⵠΔΔᐃ();
        }
        if (vThis2.ΔΔᐃⵠⵠ != -1) {
          var v2606 = vThis2.ⲆⲆΔΔᐃ[vThis2.ΔΔᐃⵠⵠ].button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2);
          var v2607 = document.getElementById("team_box").style;
          if (v2606 && v2607.display == "inline-block") {
            v2607.display = "none";
            return;
          }
          if (v2606) {
            vThis2.ⲆⲆΔΔᐃ[vThis2.ΔΔᐃⵠⵠ].action();
          }
        }
        if (v2813.ⵠⲆᐃⲆ.id < 0 && v2600.id >= 0 && !vThis2.ⲆᐃⲆΔ.open) {
          if (!v2813.ᐃⵠΔⲆ.lock || v2813.id === v2813.ᐃⵠΔⲆ.ⵠⵠⵠᐃ) {
            if (v2606 = vThis2.ⵠⲆⵠ[v2813.ᐃⵠΔⲆ.id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
              v2815.ᐃⵠⲆᐃᐃᐃΔⵠⲆ(v2600);
            }
          }
        }
        if ((v2603 = v2813.ⲆᐃⲆⵠ).open && v2603.ΔΔⲆΔⵠ > 0 && !vThis2.ⲆᐃⲆΔ.open) {
          if (v2606 = vThis2.ⲆⵠᐃⲆᐃⲆᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            v2815.ⲆΔᐃⲆᐃΔᐃΔⲆ(v2603);
          }
        }
        if ((v2604 = v2813.ⲆΔⲆᐃ).open && v2604.ᐃΔΔΔⲆᐃΔ > 0 && !vThis2.ⲆᐃⲆΔ.open) {
          switch (v2604.type) {
            case 24:
              if (v2606 = vThis2.ⵠⲆⲆΔᐃⵠΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
                v2815.ⲆᐃⵠⵠΔΔⵠ(v2604);
              }
              break;
            case 25:
              if (v2606 = vThis2.ΔΔᐃΔⲆⵠᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
                v2815.ⲆᐃⵠⵠΔΔⵠ(v2604);
              }
              break;
            case 26:
              if (v2606 = vThis2.ⵠΔᐃΔᐃⵠΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
                v2815.ⲆᐃⵠⵠΔΔⵠ(v2604);
              }
              break;
            case 27:
              if (v2606 = vThis2.ᐃΔⵠΔⵠᐃᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
                v2815.ⲆᐃⵠⵠΔΔⵠ(v2604);
              }
              break;
            case 28:
              if (v2606 = vThis2.ⵠΔᐃⵠᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
                v2815.ⲆᐃⵠⵠΔΔⵠ(v2604);
              }
          }
        }
        if ((v2605 = v2813.ⲆⲆΔΔ).open && v2605.ⵠⵠΔⵠⵠⲆΔ > 0 && !vThis2.ⲆᐃⲆΔ.open) {
          if (v2606 = vThis2.ᐃⵠⵠⲆᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            v2815.ΔⲆⲆⵠⵠᐃⲆⲆΔ(v2605);
          }
        }
        if (v2813.sign.open && !vThis2.ⲆᐃⲆΔ.open) {
          if (v2606 = vThis2.sign.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            vThis2.sign.select();
          }
        }
        if (!v2813.ᐃⵠΔⲆ.lock && !vThis2.ⲆᐃⲆΔ.open) {
          if (v2813.ᐃⵠΔⲆ.ⲆᐃⵠⲆΔⲆⲆ && (v2606 = vThis2.ᐃΔⵠΔΔⲆⵠ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2))) {
            v2815.ⲆᐃⲆᐃⲆⵠᐃΔΔ(v2600);
          }
        }
        if (v2813.ᐃⵠΔⲆ.ᐃⲆⵠⵠⲆΔⲆ && !vThis2.ⲆᐃⲆΔ.open && (v2606 = vThis2.ᐃⵠⵠΔᐃⲆⵠ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2))) {
          v2815.ΔΔΔⵠΔⲆⲆⵠΔ(v2600);
          if (ga) {
            ga("send", "event", "Game", "lockpick");
          }
        }
        if (v2813.ⲆᐃᐃΔΔ.open) {
          if (v2606 = vThis2.ⲆᐃᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            v2815.ⲆᐃᐃΔΔ();
            if (ga) {
              ga("send", "event", "Game", "resurrection");
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.id < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled && !vThis2.ⲆᐃⲆΔ.open) {
          for (var v2608 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ, v2609 = 0; v2609 < v2608.length; v2609++) {
            if (v2606 = v2608[v2609].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
              if (p1653.which != 1 || p1653.shiftKey) {
                if ((p1653.which == 1 && p1653.shiftKey || p1653.which == 3) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                  vThis2.ⲆᐃⲆΔ.ⲆᐃⲆⵠⵠⵠΔ(v2608[v2609].id);
                }
              } else {
                v2815.ᐃⲆⵠⲆΔ(v2608[v2609].id, v2609);
              }
            } else if (v2600.open && (v2600.id < 0 || v2608[v2609].id === v2600.id)) {
              if ((v2606 = vThis2.ⵠⵠΔⲆΔ[v2608[v2609].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                v2815.ⲆⵠΔᐃⵠⵠⲆⵠᐃ(v2600, v2608[v2609].id, p1653.shiftKey ? 10 : 1);
              }
            } else if (v2602.open && v2608[v2609].id === 180) {
              if ((v2606 = vThis2.ⵠⵠΔⲆΔ[v2608[v2609].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                v2815.ΔⲆΔΔⲆΔᐃⲆᐃ(v2602);
              }
            } else if (v2601.open && v2608[v2609].id === 109) {
              if ((v2606 = vThis2.ⵠⵠΔⲆΔ[v2608[v2609].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                v2815.ⵠΔⲆⲆΔᐃⲆΔᐃ(v2601, p1653.shiftKey ? 10 : 1);
              }
            } else if (v2603.open && v2608[v2609].id === 134) {
              if ((v2606 = vThis2.ⵠⵠΔⲆΔ[v2608[v2609].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                v2815.ΔⵠΔᐃⲆΔᐃⲆᐃ(v2603, p1653.shiftKey ? 10 : 1);
              }
            } else if (v2604.open && v2608[v2609].id === 109) {
              if ((v2606 = vThis2.ⵠⵠΔⲆΔ[v2608[v2609].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                v2815.ᐃᐃᐃⵠⵠΔᐃΔᐃ(v2604, p1653.shiftKey ? 10 : 1);
              }
            } else if (v2605.open && (v2608[v2609].id === 109 || v2608[v2609].id === 131)) {
              if ((v2606 = vThis2.ⵠⵠΔⲆΔ[v2608[v2609].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) {
                if (v2608[v2609].id === 109) {
                  v2815.ΔⵠⲆᐃᐃΔⵠ(v2605, p1653.shiftKey ? 10 : 1, 0);
                } else {
                  v2815.ΔⵠⲆᐃᐃΔⵠ(v2605, 0, p1653.shiftKey ? 10 : 1);
                }
              }
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.id < 0 && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled && !vThis2.ⲆᐃⲆΔ.open && !v2813.ⵠΔᐃᐃⲆ) {
          v2608 = v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ;
          v2609 = 0;
          for (; v2608.length > v2609; v2609++) {
            if (v2606 = v2608[v2609].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
              ⵠⲆᐃΔⵠ = v2815.ⲆⲆᐃⵠⲆᐃⲆᐃⵠ(v2608[v2609].id);
              if (ⵠⲆᐃΔⵠ && ga) {
                ga("send", "event", "Game", "craft", v628[v732[v2608[v2609].id].ⵠᐃⲆⵠ].name);
              }
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.id < 0 && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && v2813.ΔᐃᐃⲆⵠ.open && !vThis2.ᐃΔᐃⵠΔ.open && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open) {
          if (v2606 = vThis2.ΔᐃᐃⲆⵠ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0)) {
            v2991.ΔᐃᐃⲆⵠ.select();
          }
        }
        if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ᐃΔᐃⵠΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open) {
          if (v2992.ⵠᐃᐃⲆᐃ) {
            if (v2606 = vThis2.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
              v2992.select();
              if (ga) {
                ga("send", "event", "Game", "sound on");
              }
            }
          } else if (v2606 = vThis2.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            v2992.select();
            if (ga) {
              ga("send", "event", "Game", "sound off");
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open) {
          if (v2606 = vThis2.options.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            vThis2.options.ΔΔⵠᐃΔΔΔᐃⵠ();
            if (ga) {
              ga("send", "event", "Game", "options");
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open && vThis2.ᐃⵠᐃⵠᐃΔΔ === 1) {
          if (v2606 = vThis2.ᐃΔᐃⵠΔ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            vThis2.ᐃΔᐃⵠΔ.select();
            if (ga) {
              ga("send", "event", "Game", "market");
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ᐃΔᐃⵠΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && vThis2.ΔᐃΔΔᐃΔⵠ === 1) {
          if (v2606 = vThis2.ⵠᐃⲆᐃ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            vThis2.ⵠᐃⲆᐃ.ΔΔΔᐃⲆᐃΔΔᐃ();
            if (ga) {
              ga("send", "event", "Game", "recipe");
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ᐃΔᐃⵠΔ.open && v2812.mode !== 2 && v2812.mode !== 4 && v2812.mode !== 5 && vThis2.ΔⲆⵠᐃⲆⵠΔ === 1) {
          if (v2606 = vThis2.ΔᐃΔΔ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
            vThis2.ΔᐃΔΔ.select();
            if (ga) {
              ga("send", "event", "Game", "quests");
            }
          }
        }
        if (v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆⲆ && p1653.which == 3) {
          vThis2.ⲆⲆⵠⲆⵠ.ⲆᐃⲆⵠⵠⵠΔ();
        }
      }
    };
    this.ΔⲆⵠΔⵠΔΔ = false;
    this.ⲆᐃΔᐃᐃⲆᐃ = function (p1654) {
      v3024.Δᐃᐃⵠ = f422(vThis2.ΔⲆ, p1654);
      var v2610 = false;
      v2991.ⲆⵠⲆⲆᐃ.display = 0;
      v2813.ⵠⲆΔⵠ.ⲆⲆⲆⲆᐃⵠᐃ.ᐃⲆᐃⵠⵠ(v3024.Δᐃᐃⵠ);
      if (vThis2.ΔΔᐃⵠⵠ != -1) {
        v2610 |= vThis2.ⲆⲆΔΔᐃ[vThis2.ΔΔᐃⵠⵠ].button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      var v2611 = v2813.ⲆᐃⲆⵠ;
      if (v2611.open && v2611.ΔΔⲆΔⵠ > 0) {
        v2610 |= vThis2.ⲆⵠᐃⲆᐃⲆᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      var v2612 = v2813.ⲆΔⲆᐃ;
      if (v2612.open && v2612.ᐃΔΔΔⲆᐃΔ > 0) {
        v2610 |= vThis2.ⵠⲆⲆΔᐃⵠΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        v2610 |= vThis2.ΔΔᐃΔⲆⵠᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        v2610 |= vThis2.ⵠΔᐃΔᐃⵠΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        v2610 |= vThis2.ᐃΔⵠΔⵠᐃᐃ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        v2610 |= vThis2.ⵠΔᐃⵠᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      var v2613 = v2813.ⲆⲆΔΔ;
      if (v2613.open && v2613.ⵠⵠΔⵠⵠⲆΔ > 0) {
        v2610 |= vThis2.ᐃⵠⵠⲆᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (v2813.sign.open) {
        v2610 |= vThis2.sign.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      var v2614 = v2813.ᐃⵠΔⲆ;
      if (v2813.ⵠⲆᐃⲆ.id < 0 && v2614.id >= 0 && !v2813.ΔⵠᐃⵠⲆ.enabled && (!v2813.ᐃⵠΔⲆ.lock || v2813.ᐃⵠΔⲆ.ⵠⵠⵠᐃ === v2813.id)) {
        v2610 |= vThis2.ⵠⲆⵠ[v2614.id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (v2813.ⲆᐃᐃΔΔ.open) {
        v2610 |= vThis2.ⲆᐃᐃΔΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (!v2813.ᐃⵠΔⲆ.lock && !v2813.ΔⵠᐃⵠⲆ.enabled) {
        if (v2813.ᐃⵠΔⲆ.ⲆᐃⵠⲆΔⲆⲆ) {
          v2610 |= vThis2.ᐃΔⵠΔΔⲆⵠ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        }
      }
      if (v2813.ᐃⵠΔⲆ.ᐃⲆⵠⵠⲆΔⲆ && !v2813.ΔⵠᐃⵠⲆ.enabled) {
        v2610 |= vThis2.ᐃⵠⵠΔᐃⲆⵠ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (v2813.ⵠⲆᐃⲆ.id < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled) {
        for (var v2615 = v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ, v2616 = 0; v2616 < v2615.length; v2616++) {
          var v2617 = v2615[v2616].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
          v2610 |= v2991.ⲆⵠⲆⲆᐃ.ⲆᐃΔⲆ(v2617, v2615[v2616], 0);
          if (v2614.open && (v2614.id < 0 || v2614.id == v2615[v2616].id) || v2813.ΔⲆΔᐃᐃ.open && v2615[v2616].id == 109 || v2813.ⵠⲆⵠΔΔ.open && v2615[v2616].id === 180 || v2813.ⲆⲆΔΔ.open && (v2615[v2616].id == 109 || v2615[v2616].id == 131) || v2813.ⲆᐃⲆⵠ.open && v2615[v2616].id == 134 || v2813.ⲆΔⲆᐃ.open && v2615[v2616].id == 109) {
            v2610 |= vThis2.ⵠⵠΔⲆΔ[v2615[v2616].id].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
          }
        }
      }
      if (v2813.ⵠⲆᐃⲆ.id < 0 && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !v2813.ΔⵠᐃⵠⲆ.enabled && !v2813.ⵠΔᐃᐃⲆ) {
        v2615 = v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ;
        v2616 = 0;
        for (; v2615.length > v2616; v2616++) {
          v2617 = vVVV143;
          v2617 = v2615[v2616].ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
          v2610 |= v2991.ⲆⵠⲆⲆᐃ.ⲆᐃΔⲆ(v2617, v2615[v2616], 1);
        }
      }
      if (v2813.ⵠⲆᐃⲆ.id < 0 && v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && v2813.ΔᐃᐃⲆⵠ.open && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        v2610 |= vThis2.ΔᐃᐃⲆⵠ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open && vThis2.ΔᐃΔΔᐃΔⵠ === 1) {
        v2610 |= vThis2.ⵠᐃⲆᐃ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        v2610 |= vThis2.options.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0 && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open && vThis2.ᐃⵠᐃⵠᐃΔΔ === 1) {
        v2610 |= vThis2.ᐃΔᐃⵠΔ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ΔᐃΔΔ.open && !vThis2.options.open && !vThis2.ᐃΔᐃⵠΔ.open) {
        if (v2992.ⵠᐃᐃⲆᐃ) {
          v2610 |= vThis2.ᐃⵠⲆⵠ.ᐃᐃⵠᐃⲆⲆΔ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        } else {
          v2610 |= vThis2.ᐃⵠⲆⵠ.ᐃⵠⲆⵠΔᐃⲆ.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        }
      }
      if (!!(v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ < 0) && !vThis2.ⵠᐃⲆᐃ.open && !vThis2.ⲆᐃⲆΔ.open && !vThis2.options.open && !vThis2.ⲆⲆⵠⲆⵠ.open && !vThis2.ᐃΔᐃⵠΔ.open && v2812.mode !== 2 && v2812.mode !== 4 && v2272.ⵠᐃⵠⲆⲆΔΔⵠⲆ !== v2812.mode && vThis2.ΔⲆⵠᐃⲆⵠΔ === 1) {
        v2610 |= vThis2.ΔᐃΔΔ.button.ⲆᐃΔⲆ(vThis2.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
      }
      if (vThis2.ΔⲆⵠΔⵠΔΔ !== v2610) {
        vThis2.ΔⲆⵠΔⵠΔΔ = v2610;
        p1632.style.cursor = v2610 ? vThis2.ᐃᐃᐃΔΔΔΔ : vThis2.ⵠᐃⵠΔΔⲆⲆ;
      }
    };
    this.ᐃⲆᐃΔᐃⲆᐃ = function () {
      vWindow.addEventListener("mousedown", this.ΔⲆΔΔΔᐃᐃ, vVVV14);
      vWindow.addEventListener("mouseup", this.ⲆᐃΔᐃⲆᐃΔ, false);
      vWindow.addEventListener("mousemove", this.ⲆᐃΔᐃᐃⲆᐃ, false);
      vWindow.addEventListener("keyup", this.ⵠⲆⵠΔⲆⵠᐃ, vVVVVV14);
      vWindow.addEventListener("keydown", this.ⲆⲆⲆΔⲆΔⵠ, vVV14);
    };
    this.ᐃⲆⵠⵠΔⵠΔ = function () {
      vWindow.removeEventListener("mousedown", this.ΔⲆΔΔΔᐃᐃ, vVV14);
      vWindow.removeEventListener("mouseup", this.ⲆᐃΔᐃⲆᐃΔ, v14);
      vWindow.removeEventListener("mousemove", this.ⲆᐃΔᐃᐃⲆᐃ, false);
      vWindow.removeEventListener("keyup", this.ⵠⲆⵠΔⲆⵠᐃ, false);
      vWindow.removeEventListener("keydown", this.ⲆⲆⲆΔⲆΔⵠ, false);
    };
  }
  function f473(p1655, p1656) {
    this.ΔⲆ = p1655;
    this.Δ = p1656;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ⵠᐃⵠΔΔⲆⲆ = "default";
      this.ᐃᐃᐃΔΔΔΔ = "pointer";
    } else {
      this.ⵠᐃⵠΔΔⲆⲆ = "url('img/cursor0.png'), default";
      this.ᐃᐃᐃΔΔΔΔ = "url('img/cursor1.png'), pointer";
    }
    this.ⲆΔΔᐃⲆΔⲆ = 119;
    this.ⲆⵠⵠᐃΔΔⲆ = 186;
    this.ⲆΔΔᐃⲆΔⲆ;
    this.ⲆⵠⵠᐃΔΔⲆ;
    var vThis3 = this;
    this.waiting = false;
    this.ⲆⵠⲆⲆⵠᐃⵠ = 0;
    this.ΔⲆⵠⲆΔⲆᐃ = -1;
    this.ⵠΔΔᐃᐃᐃⵠ = {
      translate: {
        y: 0,
        x: 0
      },
      angle: 0,
      ⵠᐃ: ⵠΔ[301],
      ᐃᐃΔⵠ: function () {
        this.angle += v3026 * 2;
        p1656.save();
        p1656.translate(this.translate.x + this.ⵠᐃ.width / 2, this.translate.y + this.ⵠᐃ.height / 2);
        p1656.rotate(this.angle);
        f293(p1656, this.ⵠᐃ, -this.ⵠᐃ.width / 2, -this.ⵠᐃ.height / 2);
        p1656.restore();
      }
    };
    this.ⵠⲆⵠⲆᐃⵠⵠ = {
      id: document.getElementById("langselect"),
      style: document.getElementById("langselect").style,
      translate: {
        y: 0,
        x: 0
      },
      ⲆᐃⲆ: function () {
        this.style.left = Math.floor(this.translate.x) + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ᐃⵠᐃΔⲆ = 0;
    this.ᐃⲆⲆⲆⵠΔⲆ = -1;
    this.ΔⲆᐃⵠⲆⲆⵠ = vVVVUndefined202;
    this.ΔⵠⲆⲆⲆⲆⲆ = "";
    this.ⲆⵠⲆΔⵠⵠⲆ = "";
    this.ᐃΔΔⲆΔᐃΔ = vVVVUndefined202;
    this.ᐃⵠΔⲆᐃ = 0;
    this.ⲆⵠᐃᐃⵠΔⵠ = -1;
    this.ⲆΔⵠᐃΔΔᐃ = 314;
    this.ΔⲆⲆΔΔΔⲆ = {};
    this.ΔⲆⲆΔΔΔⲆ.ⵠⲆΔⵠΔᐃᐃ = 5;
    this.ⲆⵠⲆΔΔⵠΔ = undefined;
    this.ΔⵠⵠΔⵠⲆⵠ = 0;
    this.ⵠⲆᐃᐃⵠᐃΔ = 0;
    this.ⵠⵠⵠⲆⲆⵠΔ = 0;
    this.ΔᐃⵠⲆᐃ = 0;
    this.ⲆⵠᐃΔΔΔᐃ = -83;
    this.ΔΔⲆⵠΔᐃⲆ = 0;
    this.time = 0;
    this.ᐃⵠⲆⲆᐃ = 0;
    this.ⲆᐃΔⵠᐃᐃⲆ = 115968;
    this.ᐃᐃᐃΔⲆᐃⵠ = 0;
    function o(p1657, p1658, p1659, p1660, p1661) {
      var vThis4 = this;
      for (var v2618 = p1658 + 9, v2619 = 0, vP1660 = p1660, vP1658 = p1658; vP1658 < v2618; vP1658++) {
        vThis3.buttons[vP1658].info.callback = f476;
        vThis3.buttons[vP1658].info.ⲆⵠΔⵠⵠᐃᐃᐃⵠ = p1657;
      }
      function f475() {
        var v2620 = p1657[vP1660];
        v2811.ᐃⲆᐃⲆⲆⵠΔ = f417(v2620.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, vVVVUndefined212, 10, 8);
        if (vVVVVUndefined20 !== v2620.level) {
          v2811.ΔᐃΔⲆΔⲆᐃ = f417("Level " + v2620.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, vVVVUndefined202, 10, 8);
        } else {
          v2811.ΔᐃΔⲆΔⲆᐃ = f417("by " + v2620.ΔᐃⲆ, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, undefined, 10, 8);
        }
      }
      function f476() {
        if (this.Ⲇᐃⵠⵠⵠᐃᐃ !== vP1660 && this.Ⲇᐃⵠⵠⵠᐃᐃ !== -1) {
          if (this.ΔᐃΔⲆᐃⵠᐃ > 0) {
            if (ⲆΔⵠⵠᐃⵠΔ === p1658) {
              f481(v2661, v2728, "none");
            } else {
              f481(v2662, v2728, "none");
            }
          } else if (p1658 === ⲆΔⵠⵠᐃⵠΔ) {
            f481(v2661, v2729, "inline-block");
          } else {
            f481(v2662, v2729, "inline-block");
          }
          vP1660 = this.Ⲇᐃⵠⵠⵠᐃᐃ;
          p1659(this.Ⲇᐃⵠⵠⵠᐃᐃ);
          f475();
        }
      }
      this.ΔⲆᐃⲆⵠ = function () {
        for (var vP16582 = p1658, v2621 = v2619 * 3; v2618 > vP16582 && v2621 < p1657.length; vP16582++, v2621++) {
          if (ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ !== p1657[v2621].ⲆΔⵠ || p1661[v2621] !== 0) {
            vThis3.buttons[vP16582].info.Ⲇᐃⵠⵠⵠᐃᐃ = v2621;
            for (var v2622 = 0; v2622 < 3; v2622++) {
              vThis3.buttons[vP16582].info.ⵠᐃ[v2622] = ⵠⵠᐃΔⲆ[p1657[v2621].ⲆΔⵠ][v2622];
              vThis3.buttons[vP16582].info.active = v2729;
              vThis3.buttons[vP16582].info.ΔᐃΔⲆᐃⵠᐃ = p1661[v2621];
            }
          } else {
            vThis3.buttons[vP16582].info.Ⲇᐃⵠⵠⵠᐃᐃ = -1;
            vThis3.buttons[vP16582].info.active = v2728;
          }
        }
        for (; v2618 > vP16582; vP16582++) {
          vThis3.buttons[vP16582].info.Ⲇᐃⵠⵠⵠᐃᐃ = -1;
          vThis3.buttons[vP16582].info.active = v2728;
        }
        f475();
      };
      vThis3.buttons[v2618].info.callback = function () {
        if (v2619 > 0) {
          v2619--;
        }
        vThis4.ΔⲆᐃⲆⵠ();
      };
      vThis3.buttons[v2618 + 1].info.callback = function () {
        if (p1657.length > v2619 * 3 + 9) {
          v2619++;
        }
        vThis4.ΔⲆᐃⲆⵠ();
      };
    }
    function a() {
      var vNumber4 = Number(ᐃⵠΔΔ.get("starve_crate"));
      var vNumber5 = Number(ᐃⵠΔΔ.get("starve_dead"));
      var vNumber6 = Number(ᐃⵠΔΔ.get("starve_book"));
      var vNumber7 = Number(ᐃⵠΔΔ.get("starve_bag"));
      var vNumber8 = Number(ᐃⵠΔΔ.get("starve_skin"));
      var vNumber9 = Number(ᐃⵠΔΔ.get("starve_accessory"));
      vThis3.ⲆᐃⵠⲆ = vNumber8 || 0;
      vThis3.ⵠᐃΔⵠᐃ = vNumber6 || 0;
      vThis3.ⲆΔΔⲆᐃ = vNumber4 || 1;
      vThis3.ⵠΔΔⵠΔ = vNumber9 || 0;
      vThis3.ΔΔⲆⵠⲆ = vNumber7 || 0;
      vThis3.ΔΔᐃᐃΔ = vNumber5 || 0;
    }
    function f478() {
      for (var v2623 = ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ, v2624 = 0; v2623.length > v2624; v2624++) {
        if (v2623[v2624].ⲆΔⵠ === ⲆⲆⲆ.ᐃΔⵠᐃᐃ) {
          vThis3.unlock.ⲆᐃⵠⲆ[v2624] = 1;
        } else {
          vThis3.unlock.ⲆᐃⵠⲆ[v2624] = 0;
        }
      }
      v2623 = ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ;
      v2624 = 0;
      for (; v2624 < v2623.length; v2624++) {
        if (ⲆⲆⲆ.ᐃΔⵠᐃᐃ === v2623[v2624].ⲆΔⵠ) {
          vThis3.unlock.ⵠΔΔⵠΔ[v2624] = 1;
        } else {
          vThis3.unlock.ⵠΔΔⵠΔ[v2624] = 0;
        }
      }
      v2623 = ⲆⵠᐃⲆ.Δⵠⵠⵠ;
      v2624 = 0;
      for (; v2623.length > v2624; v2624++) {
        if (ⲆⲆⲆ.ᐃΔⵠᐃᐃ === v2623[v2624].ⲆΔⵠ) {
          vThis3.unlock.ΔΔⲆⵠⲆ[v2624] = 1;
        } else {
          vThis3.unlock.ΔΔⲆⵠⲆ[v2624] = 0;
        }
      }
      v2623 = ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ;
      v2624 = 0;
      for (; v2623.length > v2624; v2624++) {
        if (ⲆⲆⲆ.ᐃΔⵠᐃᐃ === v2623[v2624].ⲆΔⵠ) {
          vThis3.unlock.ⵠᐃΔⵠᐃ[v2624] = 1;
        } else {
          vThis3.unlock.ⵠᐃΔⵠᐃ[v2624] = 0;
        }
      }
      v2623 = ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ;
      v2624 = 0;
      for (; v2624 < v2623.length; v2624++) {
        if (v2623[v2624].ⲆΔⵠ === ⲆⲆⲆ.ᐃΔⵠᐃᐃ) {
          vThis3.unlock.ⲆΔΔⲆᐃ[v2624] = 1;
          vThis3.unlock.ΔΔᐃᐃΔ[v2624] = 1;
        } else {
          vThis3.unlock.ⲆΔΔⲆᐃ[v2624] = 0;
          vThis3.unlock.ΔΔᐃᐃΔ[v2624] = 0;
        }
      }
    }
    this.ⵠΔΔⵠⲆᐃᐃ = 0;
    this.ᐃΔⵠⵠⵠᐃΔ = 0;
    this.ⵠⵠⲆᐃⵠΔⲆ = 0;
    this.ⲆⲆⵠⵠⲆΔᐃ = [];
    this.ⲆⲆⲆⲆⵠ = -1;
    this.ΔⲆⲆᐃⵠⲆⵠ = -1;
    this.ΔᐃⵠⵠⵠΔⲆ = -1;
    this.ΔⲆᐃΔⵠⵠⵠ = vVUndefined20;
    this.ᐃΔΔᐃᐃⲆⵠ = undefined;
    this.ΔⲆⲆⵠⵠⲆⵠ = -1;
    this.ⵠΔⲆⲆⵠⲆΔ = -1;
    this.ᐃⵠᐃΔⲆΔΔ = -1;
    this.ⵠⵠᐃⵠᐃⵠᐃ = -1;
    this.ⲆᐃᐃⲆΔⲆⲆ = vVVUndefined21;
    this.ᐃᐃᐃⵠᐃⲆⲆ = vVVVUndefined20;
    this.ᐃⲆΔᐃⵠᐃⲆ = vUndefined;
    this.ᐃⲆᐃⲆⲆⵠΔ = undefined;
    this.ΔᐃΔⲆΔⲆᐃ = vVVUndefined202;
    this.ⵠΔⵠΔΔᐃⲆ = undefined;
    this.ⲆΔⲆᐃⵠΔᐃ = undefined;
    this.ⲆΔᐃⲆⲆⲆΔ = vVVVUndefined2022;
    this.ΔⵠᐃⲆᐃᐃⵠ = false;
    this.ΔΔⲆΔΔ = {};
    this.ΔΔⲆΔΔ.ᐃⵠⲆⵠⵠᐃⲆⲆᐃ = 6;
    this.ᐃᐃᐃᐃⵠⵠⵠ = 11220;
    this.ⲆⲆΔΔⲆᐃⲆ = 445;
    this.ⲆⲆᐃⵠᐃⲆᐃ = undefined;
    this.ⵠⵠⵠⲆᐃⵠⵠ = 3;
    this.ΔᐃᐃⲆ = 0;
    this.ΔⲆⵠΔᐃⵠⲆᐃᐃ = false;
    this.ⵠᐃΔⵠⵠ = ᐃⵠΔΔ.get("starve_quality") ? ᐃⵠΔΔ.get("starve_quality") : "high";
    if (this.ⵠᐃΔⵠⵠ === "high") {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      this.ⵠᐃΔⵠⵠ = 1;
    } else {
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      this.ⵠᐃΔⵠⵠ = 0;
    }
    this.ΔᐃⵠᐃⲆⵠⲆⲆⲆ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      ᐃⵠΔΔ.set("starve_quality", "high", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 1;
      v2991.ⲆⵠΔⵠᐃΔΔ();
      v2811.ⵠᐃΔⵠⵠ = 1;
    };
    this.ⵠⵠΔⵠΔᐃᐃΔᐃ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      ᐃⵠΔΔ.set("starve_quality", "low", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 0.5 / (v522 / v523);
      v2991.ⲆⵠΔⵠᐃΔΔ();
      v2811.ⵠᐃΔⵠⵠ = 0;
    };
    if (ᐃⵠΔΔ.get("starve_mapping") === undefined && v596 === "FR") {
      v3020.ⵠΔⲆΔᐃᐃⲆ();
      this.ⵠᐃΔⲆⵠⲆⵠ = "azerty";
    } else {
      this.ⵠᐃΔⲆⵠⲆⵠ = ᐃⵠΔΔ.get("starve_mapping") ? ᐃⵠΔΔ.get("starve_mapping") : "qwerty";
    }
    if (this.ⵠᐃΔⲆⵠⲆⵠ == "azerty") {
      v3020.ⵠΔⲆΔᐃᐃⲆ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
    } else {
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
    }
    this.ⵠΔⲆΔᐃᐃⲆ = function () {
      v3020.ⵠΔⲆΔᐃᐃⲆ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
      ᐃⵠΔΔ.set("starve_mapping", "azerty", {
        expires: 30
      });
    };
    this.ᐃⵠⲆΔⲆᐃⵠ = function () {
      v3020.ᐃⵠⲆΔⲆᐃⵠ();
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      ᐃⵠΔΔ.set("starve_mapping", "qwerty", {
        expires: 30
      });
    };
    this.ΔⵠΔⲆΔⲆⲆ = {
      id: document.getElementById("all_rights_reserved"),
      style: document.getElementById("all_rights_reserved").style,
      translate: {
        x: 0,
        y: 0
      },
      ⲆᐃⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    a();
    this.unlock = {};
    this.unlock.ⲆᐃⵠⲆ = [];
    this.unlock.ΔΔⲆⵠⲆ = [];
    this.unlock.ⵠᐃΔⵠᐃ = [];
    this.unlock.ⲆΔΔⲆᐃ = [];
    this.unlock.ΔΔᐃᐃΔ = [];
    this.unlock.ⵠΔΔⵠΔ = [];
    this.ⵠⲆᐃᐃΔⵠΔ = 0;
    this.ⵠⲆᐃΔⵠⲆⵠ = f478;
    f478();
    this.ΔΔⵠⲆᐃ = {
      id: document.getElementById("trevda"),
      style: document.getElementById("trevda").style,
      translate: {
        y: 0,
        x: 0
      },
      ⲆᐃⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    var v2625;
    var v2626 = 0;
    function f479() {
      vThis3.ⲆᐃⲆ();
      if (++v2626 == 30) {
        vThis3.ᐃⲆᐃΔᐃⲆᐃ();
        vThis3.ⲆⵠⲆⲆⵠᐃⵠ = vVVVV162;
        vThis3.ⲆᐃⲆ();
        return;
      }
      vWindow.setTimeout(f479, 33);
    }
    this.ΔᐃΔⵠΔ = function (p1662) {
      v2625 = p1662;
      vThis3.ᐃⲆⵠⵠΔⵠΔ();
      vThis3.ⲆⵠⲆⲆⵠᐃⵠ = 0;
      v2627 = -1;
      f480();
    };
    var v2627 = -1;
    function f480() {
      vThis3.ⲆᐃⲆ();
      if (++v2627 == 30) {
        ᐃⵠΔΔ.set("starve_nickname", vThis3.ⵠᐃΔⵠΔ.input.value, {
          expires: 30
        });
        vThis3.ⵠᐃΔⵠΔ.style.display = "none";
        vThis3.ΔΔΔᐃⵠ.style.display = "none";
        vThis3.ⵠⲆⵠⲆᐃⵠⵠ.style.display = "none";
        vThis3.ΔⵠΔⲆΔⲆⲆ.style.display = "none";
        vThis3.ΔΔⵠⲆᐃ.style.display = "none";
        vThis3.stop();
        v2625();
        return;
      }
      vWindow.setTimeout(f480, 33);
    }
    this.ⵠⲆⵠᐃᐃ = vVVV144;
    this.stop = function () {
      this.ⵠⲆⵠᐃᐃ = vV143;
    };
    this.ⵠᐃᐃⲆᐃ = function () {
      f519();
      document.getElementById("game_body").style.backgroundColor = v624.ᐃⵠᐃⵠⲆ[v2810.time];
      vThis3.ⵠᐃΔⵠΔ.style.display = "inline-block";
      vThis3.ΔΔΔᐃⵠ.style.display = "inline-block";
      vThis3.ⵠⲆⵠⲆᐃⵠⵠ.style.display = "inline-block";
      vThis3.ΔⵠΔⲆΔⲆⲆ.style.display = "inline-block";
      vThis3.ΔΔⵠⲆᐃ.style.display = "inline-block";
      vThis3.waiting = vV142;
      vThis3.ⵠⲆⵠᐃᐃ = true;
      v2627 = -1;
      v2626 = 0;
      f479();
    };
    this.ⵠᐃΔⲆΔⲆⵠ = function (p1663, p1664) {
      p1664 = p1664 < 0 ? -p1664 : p1664;
      if ((p1663.position & v2724) === v2724) {
        if ((p1663.position & v2720) === v2720) {
          p1663.translate.x = v445 + p1663.translate.ⲆⲆΔᐃⲆ - p1664;
        } else if ((p1663.position & v2721) === v2721) {
          p1663.translate.x = v445 + p1663.translate.ⲆⲆΔᐃⲆ + p1664;
        } else {
          p1663.translate.x = v445 + p1663.translate.ⲆⲆΔᐃⲆ;
        }
      } else if ((p1663.position & v2720) === v2720) {
        p1663.translate.x = p1663.translate.ⲆⲆΔᐃⲆ - p1664;
      } else if (v2721 === (p1663.position & v2721)) {
        p1663.translate.x = v441 - p1663.translate.ⲆⲆΔᐃⲆ + p1664;
      } else {
        p1663.translate.x = p1663.translate.ⲆⲆΔᐃⲆ;
      }
      if (v2725 === (p1663.position & v2725)) {
        if (v2722 === (p1663.position & v2722)) {
          p1663.translate.y = v449 + p1663.translate.ΔⵠΔΔⵠ - p1664;
        } else if (v2723 === (p1663.position & v2723)) {
          p1663.translate.y = v449 + p1663.translate.ΔⵠΔΔⵠ + p1664;
        } else {
          p1663.translate.y = v449 + p1663.translate.ΔⵠΔΔⵠ;
        }
      } else if (v2722 === (p1663.position & v2722)) {
        p1663.translate.y = p1663.translate.ΔⵠΔΔⵠ - p1664;
      } else if (v2723 === (p1663.position & v2723)) {
        p1663.translate.y = v442 + p1663.translate.ΔⵠΔΔⵠ + p1664;
      } else {
        p1663.translate.y = p1663.translate.ΔⵠΔΔⵠ;
      }
      if (p1663.style !== vVVVUndefined202) {
        p1663.style.left = Math.floor(p1663.translate.x) + "px";
        p1663.style.top = Math.floor(p1663.translate.y) + "px";
      }
    };
    this.ⲆᐃⲆ = function () {
      var v2628 = 0;
      if (v2626 != 30 || v2627 != -1) {
        if (v2626 != 30) {
          v2628 = 1500 / (v2626 + 1) - 50;
        }
        if (v2627 != -1) {
          v2628 = -(1750 / (30 - v2627 + 1) - 48);
        }
      }
      for (var v2629 = 0; v2629 < this.ⵠΔΔᐃ.length; v2629++) {
        this.ⵠᐃΔⲆΔⲆⵠ(this.ⵠΔΔᐃ[v2629], v2628);
      }
      for (v2629 = 0; v2629 < this.buttons.length; v2629++) {
        this.ⵠᐃΔⲆΔⲆⵠ(this.buttons[v2629].info, v2628);
      }
      for (v2629 = 0; this.ΔΔΔⵠᐃ.length > v2629; v2629++) {
        this.ⵠᐃΔⲆΔⲆⵠ(this.ΔΔΔⵠᐃ[v2629], v2628);
      }
      this.ⵠΔΔᐃᐃᐃⵠ.translate.x = (v441 - this.ⵠΔΔᐃᐃᐃⵠ.ⵠᐃ.width) / 2;
      this.ⵠΔΔᐃᐃᐃⵠ.translate.y = 0;
      this.ⵠⲆⵠⲆᐃⵠⵠ.translate.x = v441 - 450;
      this.ⵠⲆⵠⲆᐃⵠⵠ.translate.y = v442 - 40;
      this.ΔⵠΔⲆΔⲆⲆ.translate.x = v441 - 340;
      this.ΔⵠΔⲆΔⲆⲆ.translate.y = v442 - 25;
      this.ΔΔⵠⲆᐃ.translate.x = v441 - 320;
      this.ΔΔⵠⲆᐃ.translate.y = 80;
      if (v2626 != 30 || v2627 != -1) {
        var v2630 = 0;
        if (v2626 != 30) {
          v2630 = 1500 / (v2626 + 1) - 50;
        }
        if (v2627 != -1) {
          v2630 = -(1750 / (30 - v2627 + 1) - 48);
        }
        this.ⵠΔΔᐃᐃᐃⵠ.translate.y -= v2630 > 0 ? v2630 : -v2630;
        this.ⵠⲆⵠⲆᐃⵠⵠ.translate.y -= v2630 < 0 ? v2630 : -v2630;
        this.ΔⵠΔⲆΔⲆⲆ.translate.y -= v2630 < 0 ? v2630 : -v2630;
      }
      this.ⵠⲆⵠⲆᐃⵠⵠ.ⲆᐃⲆ();
      this.ΔⵠΔⲆΔⲆⲆ.ⲆᐃⲆ();
      this.ΔΔⵠⲆᐃ.ⲆᐃⲆ();
    };
    this.ⵠΔᐃⲆⵠᐃΔ = function (p1665) {
      var v2631 = document.createElement("canvas");
      var v2632 = v2631.getContext("2d");
      v2631.width = 342;
      v2631.height = 342;
      var v2633 = -Math.PI / 2;
      for (var v2634 = 0; v2634 < p1665.length; v2634++) {
        var v2635 = p1665[v2634][0];
        var v2636 = p1665[v2634][1] * Math.PI / 180;
        v2632.beginPath();
        v2632.arc(171, 171, 170, v2633, v2633 + v2636, vVVV144);
        v2632.lineTo(171, 171);
        v2632.fillStyle = v2635;
        v2632.fill();
        v2633 += v2636;
      }
      return v2631;
    };
    this.ⲆⲆⲆⲆᐃᐃᐃΔΔ = function () {
      this.ΔⵠⲆⲆⲆⲆⲆ = document.getElementById("account_nickname_input").value;
      if (this.ⲆⵠⲆΔⵠⵠⲆ !== this.ΔⵠⲆⲆⲆⲆⲆ) {
        this.ⲆⵠⲆΔⵠⵠⲆ = this.ΔⵠⲆⲆⲆⲆⲆ;
        this.ᐃΔΔⲆΔᐃΔ = f417(this.ΔⵠⲆⲆⲆⲆⲆ, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550);
      }
    };
    this.ᐃᐃΔⵠ = function () {
      f290();
      v2811.ΔⵠⵠΔⵠⲆⵠ = ᐃⵠⵠ.ⵠΔᐃΔⲆ(v2811.ΔⵠⵠΔⵠⲆⵠ, v2811.ⵠⲆᐃᐃⵠᐃΔ, 0.03);
      this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ].translate.x = this.ⵠΔΔᐃ[0].translate.x + -72 + v2811.ΔⵠⵠΔⵠⲆⵠ * 165;
      this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ].translate.ⲆⲆΔᐃⲆ = this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ].translate.x;
      this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ].translate.y = this.ⵠΔΔᐃ[0].translate.y + 30;
      this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ].translate.ΔⵠΔΔⵠ = this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ].translate.y;
      for (var v2637 = 2; v2637 < this.ⵠΔΔᐃ.length; v2637++) {
        if (this.ⵠΔΔᐃ[v2637].active === v2729) {
          this.ⵠΔΔᐃ[v2637].ᐃᐃΔⵠ(p1656);
        }
      }
      var v2638;
      if ((v2638 = this.ⲆⲆⲆⲆⵠ - Date.now()) > 0) {
        var v2639 = Math.floor(v2638 / 60000);
        var v2640 = Math.floor(v2639 / 60);
        v2639 %= 60;
        if (this.ΔᐃⵠⵠⵠΔⲆ !== v2639) {
          this.ΔᐃⵠⵠⵠΔⲆ = v2639;
          v2639 = v2639 < 10 ? "0" + v2639 : "" + v2639;
          vThis3.ΔⲆᐃΔⵠⵠⵠ = f417(v2639, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2640 !== this.ΔⲆⲆᐃⵠⲆⵠ) {
          this.ΔⲆⲆᐃⵠⲆⵠ = v2640;
          v2640 = v2640 < 10 ? "0" + v2640 : "" + v2640;
          vThis3.ᐃΔΔᐃᐃⲆⵠ = f417(v2640, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2642 = this.ⵠΔΔᐃ[ᐃᐃⲆΔΔᐃᐃ]).ᐃᐃΔⵠ(p1656);
        var v2641 = this.ᐃΔΔᐃᐃⲆⵠ;
        f293(p1656, v2641, v2642.translate.x - v2641.width / 4 + 182, v2642.translate.y - v2641.height / 4 + 40, v2641.width / 2, v2641.height / 2);
        v2641 = this.ΔⲆᐃΔⵠⵠⵠ;
        f293(p1656, v2641, v2642.translate.x - v2641.width / 4 + 251, v2642.translate.y - v2641.height / 4 + 40, v2641.width / 2, v2641.height / 2);
      }
      if ((v2638 = this.ΔⲆⲆⵠⵠⲆⵠ - Date.now()) > 0) {
        v2639 = Math.floor(v2638 / 60000);
        v2640 = Math.floor(v2639 / 60);
        var v2642;
        var v2643 = Math.floor(v2640 / 24);
        v2640 %= 24;
        if ((v2639 %= 60) !== this.ⵠⵠᐃⵠᐃⵠᐃ) {
          this.ⵠⵠᐃⵠᐃⵠᐃ = v2639;
          v2639 = v2639 < 10 ? "0" + v2639 : "" + v2639;
          vThis3.ⲆᐃᐃⲆΔⲆⲆ = f417(v2639, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2640 !== this.ᐃⵠᐃΔⲆΔΔ) {
          this.ᐃⵠᐃΔⲆΔΔ = v2640;
          v2640 = v2640 < 10 ? "0" + v2640 : "" + v2640;
          vThis3.ᐃᐃᐃⵠᐃⲆⲆ = f417(v2640, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2643 !== this.ⵠΔⲆⲆⵠⲆΔ) {
          this.ⵠΔⲆⲆⵠⲆΔ = v2643;
          v2643 = v2643 < 10 ? "0" + v2643 : "" + v2643;
          vThis3.ᐃⲆΔᐃⵠᐃⲆ = f417(v2643, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2642 = this.ⵠΔΔᐃ[ⲆᐃᐃΔⲆᐃⲆ]).ᐃᐃΔⵠ(p1656);
        v2641 = this.ᐃⲆΔᐃⵠᐃⲆ;
        f293(p1656, v2641, v2642.translate.x - v2641.width / 4 + 113, v2642.translate.y - v2641.height / 4 + 40, v2641.width / 2, v2641.height / 2);
        v2641 = this.ᐃᐃᐃⵠᐃⲆⲆ;
        f293(p1656, v2641, v2642.translate.x - v2641.width / 4 + 182, v2642.translate.y - v2641.height / 4 + 40, v2641.width / 2, v2641.height / 2);
        v2641 = this.ⲆᐃᐃⲆΔⲆⲆ;
        f293(p1656, v2641, v2642.translate.x - v2641.width / 4 + 251, v2642.translate.y - v2641.height / 4 + 40, v2641.width / 2, v2641.height / 2);
      }
      if ((this.ⲆⵠⵠᐃΔ & v2653) === v2653) {
        this.buttons[ⲆⵠⲆΔⵠⵠᐃ].info.state = v2240;
      } else if ((this.ⲆⵠⵠᐃΔ & v2659) === v2659) {
        this.buttons[ΔⵠⲆΔⲆᐃΔ].info.state = v2240;
      } else if (v2656 === (this.ⲆⵠⵠᐃΔ & v2656)) {
        this.buttons[ᐃⲆΔⲆΔⲆΔ].info.state = v2240;
      } else if ((this.ⲆⵠⵠᐃΔ & v2654) === v2654) {
        this.buttons[ΔᐃⲆⲆΔⲆⲆ].info.state = v2240;
      } else if (v2658 === (this.ⲆⵠⵠᐃΔ & v2658)) {
        this.buttons[ⲆΔΔⵠⵠᐃⲆ].info.state = v2240;
      } else if ((this.ⲆⵠⵠᐃΔ & v2655) === v2655) {
        this.buttons[ⵠΔΔⲆⲆᐃⲆ].info.state = v2240;
      } else if (v2657 === (this.ⲆⵠⵠᐃΔ & v2657) || v2663 === (this.ⲆⵠⵠᐃΔ & v2663) || (this.ⲆⵠⵠᐃΔ & v2664) === v2664 || v2665 === (this.ⲆⵠⵠᐃΔ & v2665) || (this.ⲆⵠⵠᐃΔ & v2666) === v2666 || v2667 === (this.ⲆⵠⵠᐃΔ & v2667) || (this.ⲆⵠⵠᐃΔ & v2668) === v2668) {
        this.buttons[ⲆΔΔᐃᐃⵠᐃ].info.state = v2240;
      } else if ((this.ⲆⵠⵠᐃΔ & v2669) === v2669 || v2671 === (this.ⲆⵠⵠᐃΔ & v2671) || (this.ⲆⵠⵠᐃΔ & v2670) === v2670 || v2672 === (this.ⲆⵠⵠᐃΔ & v2672) || v2673 === (this.ⲆⵠⵠᐃΔ & v2673) || (this.ⲆⵠⵠᐃΔ & v2674) === v2674) {
        this.buttons[ᐃⲆΔⲆΔⲆΔ].info.state = v2240;
      } else if (v2677 === (this.ⲆⵠⵠᐃΔ & v2677) || (this.ⲆⵠⵠᐃΔ & v2678) === v2678 || v2679 === (this.ⲆⵠⵠᐃΔ & v2679)) {
        this.buttons[ΔⲆⵠΔᐃΔᐃ].info.state = v2240;
      } else if (v2680 === (this.ⲆⵠⵠᐃΔ & v2680)) {
        this.buttons[ΔᐃⲆⲆΔⲆⲆ].info.state = v2240;
      }
      if ((this.ⲆⵠⵠᐃΔ & v2659) === v2659) {
        if (this.ⲆΔⲆᐃⵠΔᐃ === this.ⵠⵠⲆΔⲆⵠΔ) {
          this.ⵠΔⵠΔΔᐃⲆ = this.ⵠⵠⵠⲆⲆΔΔ;
          this.buttons[this.ⵠⵠⵠⲆⲆΔΔ].info.active = v2728;
          this.buttons[this.ⵠⲆⵠᐃᐃᐃⵠ].info.active = v2728;
          this.buttons[this.ΔⵠᐃⵠΔᐃⵠ].info.active = v2728;
        } else {
          this.buttons[this.ⵠⵠⵠⲆⲆΔΔ].info.active = v2729;
          this.buttons[this.ⵠⲆⵠᐃᐃᐃⵠ].info.active = v2729;
          this.buttons[this.ΔⵠᐃⵠΔᐃⵠ].info.active = v2729;
        }
        if (this.ⲆΔⲆᐃⵠΔᐃ === this.ᐃⲆᐃⲆΔⲆΔ) {
          this.buttons[this.ᐃⲆᐃⲆΔⲆΔ].info.state = v2240;
        } else if (this.ᐃᐃⲆᐃⲆⲆᐃ === this.ⲆΔⲆᐃⵠΔᐃ) {
          this.buttons[this.ᐃᐃⲆᐃⲆⲆᐃ].info.state = v2240;
        } else if (this.ⵠⵠⲆΔⲆⵠΔ === this.ⲆΔⲆᐃⵠΔᐃ) {
          this.buttons[this.ⵠⵠⲆΔⲆⵠΔ].info.state = v2240;
        } else if (this.ⵠⲆⲆΔΔᐃΔ === this.ⲆΔⲆᐃⵠΔᐃ) {
          this.buttons[this.ⵠⲆⲆΔΔᐃΔ].info.state = v2240;
        } else if (this.ⲆΔⲆᐃⵠΔᐃ === this.ᐃᐃⵠΔⲆⵠⲆ) {
          this.buttons[this.ᐃᐃⵠΔⲆⵠⲆ].info.state = v2240;
        }
        if (this.ⵠΔⵠΔΔᐃⲆ === this.ⵠⵠⵠⲆⲆΔΔ) {
          this.buttons[this.ⵠⵠⵠⲆⲆΔΔ].info.state = v2240;
        } else if (this.ⵠΔⵠΔΔᐃⲆ === this.ⵠⲆⵠᐃᐃᐃⵠ) {
          this.buttons[this.ⵠⲆⵠᐃᐃᐃⵠ].info.state = v2240;
        } else if (this.ΔⵠᐃⵠΔᐃⵠ === this.ⵠΔⵠΔΔᐃⲆ) {
          this.buttons[this.ΔⵠᐃⵠΔᐃⵠ].info.state = v2240;
        }
        if (this.ⲆΔᐃⲆⲆⲆΔ === this.ⲆⲆⲆⲆⲆⲆⲆ) {
          this.buttons[this.ⲆⲆⲆⲆⲆⲆⲆ].info.state = v2240;
        } else if (this.ⲆⵠⵠΔⲆΔΔ === this.ⲆΔᐃⲆⲆⲆΔ) {
          this.buttons[this.ⲆⵠⵠΔⲆΔΔ].info.state = v2240;
        } else if (this.ᐃⲆΔⲆᐃΔΔ === this.ⲆΔᐃⲆⲆⲆΔ) {
          this.buttons[this.ᐃⲆΔⲆᐃΔΔ].info.state = v2240;
        }
        if (this.ΔᐃΔᐃⵠΔΔ === this.ⲆⲆᐃⵠᐃⲆᐃ) {
          this.buttons[this.ΔᐃΔᐃⵠΔΔ].info.state = v2240;
        } else if (this.ⲆⲆⵠᐃⲆⲆⵠ === this.ⲆⲆᐃⵠᐃⲆᐃ) {
          this.buttons[this.ⲆⲆⵠᐃⲆⲆⵠ].info.state = v2240;
        } else if (this.ⵠⵠΔⲆⵠᐃⵠ === this.ⲆⲆᐃⵠᐃⲆᐃ) {
          this.buttons[this.ⵠⵠΔⲆⵠᐃⵠ].info.state = v2240;
        } else if (this.ΔΔⵠᐃⲆΔΔ === this.ⲆⲆᐃⵠᐃⲆᐃ) {
          this.buttons[this.ΔΔⵠᐃⲆΔΔ].info.state = v2240;
        } else if (this.ⲆⲆᐃⵠᐃⲆᐃ === this.ⲆⲆᐃⵠⵠᐃΔ) {
          this.buttons[this.ⲆⲆᐃⵠⵠᐃΔ].info.state = v2240;
        } else if (this.ΔⲆⲆⵠᐃⲆⲆ === this.ⲆⲆᐃⵠᐃⲆᐃ) {
          this.buttons[this.ΔⲆⲆⵠᐃⲆⲆ].info.state = v2240;
        }
      }
      if (v2654 === (this.ⲆⵠⵠᐃΔ & v2654)) {
        if (this.ΔⲆⵠⲆΔⲆᐃ === -1) {
          this.buttons[vV26527].info.state = v2240;
        } else if (this.ΔⲆⵠⲆΔⲆᐃ === 0) {
          this.buttons[vV26528].info.state = v2240;
        } else if (this.ΔⲆⵠⲆΔⲆᐃ === 2) {
          this.buttons[vV265210].info.state = v2240;
        } else if (this.ΔⲆⵠⲆΔⲆᐃ === 3) {
          this.buttons[vV265211].info.state = v2240;
        } else if (this.ΔⲆⵠⲆΔⲆᐃ === 4) {
          this.buttons[vV26529].info.state = v2240;
        }
        if (this.ⵠⵠⵠⲆᐃⵠⵠ === 0) {
          this.buttons[vV2652].info.state = v2240;
        } else if (this.ⵠⵠⵠⲆᐃⵠⵠ === 1) {
          this.buttons[vV26522].info.state = v2240;
        } else if (this.ⵠⵠⵠⲆᐃⵠⵠ === 2) {
          this.buttons[vV26523].info.state = v2240;
        } else if (this.ⵠⵠⵠⲆᐃⵠⵠ === 3) {
          this.buttons[vV26524].info.state = v2240;
        } else if (this.ⵠⵠⵠⲆᐃⵠⵠ === 4) {
          this.buttons[vV26525].info.state = v2240;
        } else if (this.ⵠⵠⵠⲆᐃⵠⵠ === 5) {
          this.buttons[vV26526].info.state = v2240;
        }
      }
      if (v2653 === (this.ⲆⵠⵠᐃΔ & v2653) && v2815.ⵠᐃᐃᐃⵠΔΔ === 0) {
        if (this.buttons[v2735].ᐃⵠⵠⲆᐃⲆⲆ(v3024.Δᐃᐃⵠ)) {
          this.buttons[v2735].hint = Math.min(1, this.buttons[v2735].hint + v3026 * 1.5);
        } else {
          this.buttons[v2735].hint = Math.max(0, this.buttons[v2735].hint - v3026 * 1.5);
        }
        if (this.buttons[v2736].ᐃⵠⵠⲆᐃⲆⲆ(v3024.Δᐃᐃⵠ)) {
          this.buttons[v2736].hint = Math.min(1, this.buttons[v2736].hint + v3026 * 1.5);
        } else {
          this.buttons[v2736].hint = Math.max(0, this.buttons[v2736].hint - v3026 * 1.5);
        }
        if (this.buttons[v2737].ᐃⵠⵠⲆᐃⲆⲆ(v3024.Δᐃᐃⵠ)) {
          this.buttons[v2737].hint = Math.min(1, this.buttons[v2737].hint + v3026 * 1.5);
        } else {
          this.buttons[v2737].hint = Math.max(0, this.buttons[v2737].hint - v3026 * 1.5);
        }
        if (this.buttons[v2740].ᐃⵠⵠⲆᐃⲆⲆ(v3024.Δᐃᐃⵠ)) {
          this.buttons[v2740].hint = Math.min(1, this.buttons[v2740].hint + v3026 * 1.5);
        } else {
          this.buttons[v2740].hint = Math.max(0, this.buttons[v2740].hint - v3026 * 1.5);
        }
        if (this.buttons[v2738].ᐃⵠⵠⲆᐃⲆⲆ(v3024.Δᐃᐃⵠ)) {
          this.buttons[v2738].hint = Math.min(1, this.buttons[v2738].hint + v3026 * 1.5);
        } else {
          this.buttons[v2738].hint = Math.max(0, this.buttons[v2738].hint - v3026 * 1.5);
        }
        if (this.buttons[v2739].ᐃⵠⵠⲆᐃⲆⲆ(v3024.Δᐃᐃⵠ)) {
          this.buttons[v2739].hint = Math.min(1, this.buttons[v2739].hint + v3026 * 1.5);
        } else {
          this.buttons[v2739].hint = Math.max(0, this.buttons[v2739].hint - v3026 * 1.5);
        }
      }
      var v2644 = 1;
      if ((this.ⲆⵠⵠᐃΔ & (v2663 | v2664 | v2665 | v2666 | v2667 | v2668)) > 1) {
        v2641 = Δⵠ.ⵠⲆⲆⵠⲆⵠΔ;
        p1656.save();
        p1656.translate(v445, v2734 + v2641.height / 4);
        if (this.ᐃᐃᐃⵠΔ === 1) {
          this.ᐃⲆⲆⵠⵠΔΔ += v3026 / 3;
          v2644 = this.ⵠⲆᐃⲆᐃⵠⲆ - 100 / Math.pow(1 + this.ᐃⲆⲆⵠⵠΔΔ, 1 + this.ᐃⲆⲆⵠⵠΔΔ);
          p1656.rotate(v2644);
        }
        f293(p1656, v2641, -v2641.width / 4, -v2641.height / 4, v2641.width / 2, v2641.height / 2);
        p1656.restore();
      }
      if (v2815.ⵠᐃᐃᐃⵠΔΔ === 0) {
        if (v2815.ⵠΔΔᐃⵠ === 0) {
          this.buttons[v2735].info.state = v2240;
        } else if (v2815.ⵠΔΔᐃⵠ === 4) {
          this.buttons[v2736].info.state = v2240;
        } else if (v2815.ⵠΔΔᐃⵠ === 2) {
          this.buttons[v2738].info.state = v2240;
        } else if (v2815.ⵠΔΔᐃⵠ === 3) {
          this.buttons[v2739].info.state = v2240;
        } else if (v2815.ⵠΔΔᐃⵠ === 6) {
          this.buttons[v2737].info.state = v2240;
        } else if (v2815.ⵠΔΔᐃⵠ === 7) {
          this.buttons[v2740].info.state = v2240;
        }
      }
      for (v2637 = 1; v2637 < this.buttons.length; v2637++) {
        if (v2729 === this.buttons[v2637].info.active) {
          this.buttons[v2637].ᐃᐃΔⵠ(p1656);
        }
      }
      this.ⵠΔΔᐃ[0].ᐃᐃΔⵠ(p1656);
      if ((this.ⲆⵠⵠᐃΔ & (v2676 | v2675)) > 0) {
        v2641 = this.ᐃΔΔⲆΔᐃΔ;
        f293(p1656, v2641, v445 - v2641.width / 4, 138, v2641.width / 2, v2641.height / 2);
      }
      var v2645 = Math.max(1, Math.min(18, Math.floor((v2811.ᐃⵠΔⲆᐃ + 3) / 2)));
      this.ⵠΔΔᐃ[v2645].active = v2729;
      this.ⵠΔΔᐃ[v2645].ᐃᐃΔⵠ(p1656);
      this.ⵠΔΔᐃ[v2645].active = v2728;
      this.buttons[0].ᐃᐃΔⵠ(p1656);
      if ((this.ⲆⵠⵠᐃΔ & (v2656 | v2671 | v2672 | v2669 | v2673)) > 1) {
        var v2646 = (this.ⲆⵠⵠᐃΔ & (v2671 | v2672 | v2669 | v2673)) > 1 ? -190 : 0;
        v2641 = ⵠΔ[29][this.ΔΔⲆⵠⲆ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 + v2646, 183, v2641.width / 2, v2641.height / 2);
        this.ΔᐃᐃⲆ = (this.ΔᐃᐃⲆ + v3026 * 1000) % 2000;
        var v2647 = (this.ΔᐃᐃⲆ < 1000) * 4.5 ? this.ΔᐃᐃⲆ / 1000 : (2000 - this.ΔᐃᐃⲆ) / 1000;
        v2641 = ⵠΔ[28][this.ⵠᐃΔⵠᐃ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 - 62 + v2647 + v2646, 240, v2641.width / 2, v2641.height / 2);
        v2641 = ⵠΔ[7][this.ⲆᐃⵠⲆ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 - 54 + v2647 + v2646, 272, v2641.width / 2, v2641.height / 2);
        f293(p1656, v2641, v445 - v2641.width / 4 + 54 - v2647 + v2646, 272, v2641.width / 2, v2641.height / 2);
        v2641 = ⵠΔ[255][this.ⲆᐃⵠⲆ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 + v2646, 222, v2641.width / 2, v2641.height / 2);
        v2641 = ⵠΔ[796][this.ⵠΔΔⵠΔ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 + v2646, 222, v2641.width / 2, v2641.height / 2);
      }
      if (v2656 === (this.ⲆⵠⵠᐃΔ & v2656)) {
        v2641 = ⵠΔ[250][this.ⲆΔΔⲆᐃ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 - 61, 406 - v2641.height / 4, v2641.width / 2, v2641.height / 2);
        v2641 = ⵠΔ[250][this.ΔΔᐃᐃΔ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 + 53, 406 - v2641.height / 4, v2641.width / 2, v2641.height / 2);
      }
      if (v2670 === (this.ⲆⵠⵠᐃΔ & v2670)) {
        v2641 = ⵠΔ[250][this.ΔΔᐃᐃΔ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 - 200, 268 - v2641.height / 4, v2641.width / 2, v2641.height / 2);
      }
      if (v2674 === (this.ⲆⵠⵠᐃΔ & v2674)) {
        v2641 = ⵠΔ[250][this.ⲆΔΔⲆᐃ][this.ⵠⲆᐃᐃΔⵠΔ];
        f293(p1656, v2641, v445 - v2641.width / 4 - 200, 268 - v2641.height / 4, v2641.width / 2, v2641.height / 2);
      }
      if ((this.ⲆⵠⵠᐃΔ & (v2671 | v2672 | v2669 | v2673 | v2670 | v2674)) > 1) {
        for (v2637 = 1; v2637 < this.buttons.length; v2637++) {
          if (this.buttons[v2637].view & this.ⲆⵠⵠᐃΔ) {
            var v2648 = this.buttons[v2637].info;
            if (v2648.Ⲇᐃⵠⵠⵠᐃᐃ >= 0) {
              v2641 = v2648.ⲆⵠΔⵠⵠᐃᐃᐃⵠ[v2648.Ⲇᐃⵠⵠⵠᐃᐃ].ⵠΔⵠ;
              f293(p1656, v2641, v2648.translate.x - v2641.width / 8 + 44.5, v2648.translate.y - v2641.height / 8 + 45.5, v2641.width / 4, v2641.height / 4);
              if (v2648.ΔᐃΔⲆᐃⵠᐃ !== 1) {
                v2641 = Δⵠ.ᐃⵠᐃΔᐃⲆⵠ;
                f293(p1656, v2641, v2648.translate.x - v2641.width / 4 + 44.5, v2648.translate.y - v2641.height / 4 + 44.5, v2641.width / 2, v2641.height / 2);
              }
            }
          }
        }
        v2641 = this.ᐃⲆᐃⲆⲆⵠΔ;
        f293(p1656, v2641, v445 - 312, 375, v2641.width / 2, v2641.height / 2);
        v2641 = this.ΔᐃΔⲆΔⲆᐃ;
        f293(p1656, v2641, v445 - 312, 395, v2641.width / 2, v2641.height / 2);
      }
      if (this.ᐃⵠᐃΔⲆ !== this.ᐃⲆⲆⲆⵠΔⲆ) {
        this.ᐃⲆⲆⲆⵠΔⲆ = this.ᐃⵠᐃΔⲆ;
        this.ΔⲆᐃⵠⲆⲆⵠ = f417("" + this.ᐃⵠᐃΔⲆ, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250);
      }
      f293(p1656, this.ΔⲆᐃⵠⲆⲆⵠ, this.ⵠΔΔᐃ[0].translate.x + 350, 15, this.ΔⲆᐃⵠⲆⲆⵠ.w2, this.ΔⲆᐃⵠⲆⲆⵠ.ᐃΔᐃΔΔ);
      if (this.ᐃⵠΔⲆᐃ !== this.ⲆⵠᐃᐃⵠΔⵠ) {
        this.ⲆⵠᐃᐃⵠΔⵠ = this.ᐃⵠΔⲆᐃ;
        this.ⲆⵠⲆΔΔⵠΔ = f417("LVL " + (this.ᐃⵠΔⲆᐃ + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, vVVUndefined117, 30, 24, undefined, undefined, undefined, vUndefined, "#3F3019", 20);
      }
      f293(p1656, this.ⲆⵠⲆΔΔⵠΔ, this.ⵠΔΔᐃ[0].translate.x + 94, 0, this.ⲆⵠⲆΔΔⵠΔ.w2, this.ⲆⵠⲆΔΔⵠΔ.ᐃΔᐃΔΔ);
      if (v2815.ⵠᐃᐃᐃⵠΔΔ === 0) {
        if ((v2649 = this.buttons[v2735].hint) > 0) {
          v2641 = Δⵠ.ᐃᐃᐃᐃΔⵠᐃ;
          f293(p1656, v2641, v445 - v2641.width / 4, -36 - ᐃⵠⵠ.ⵠⵠⲆᐃΔ(1 - v2649) * v2641.height / 2, v2641.width / 2, v2641.height / 2);
        }
        if ((v2649 = this.buttons[v2736].hint) > 0) {
          v2641 = Δⵠ.ⵠᐃᐃⵠⲆΔⲆ;
          f293(p1656, v2641, v445 - v2641.width / 4, -36 - ᐃⵠⵠ.ⵠⵠⲆᐃΔ(1 - v2649) * v2641.height / 2, v2641.width / 2, v2641.height / 2);
        }
        if ((v2649 = this.buttons[v2737].hint) > 0) {
          v2641 = Δⵠ.ΔᐃⲆᐃⲆΔΔ;
          f293(p1656, v2641, v445 - v2641.width / 4, -36 - ᐃⵠⵠ.ⵠⵠⲆᐃΔ(1 - v2649) * v2641.height / 2, v2641.width / 2, v2641.height / 2);
        }
        if ((v2649 = this.buttons[v2740].hint) > 0) {
          v2641 = Δⵠ.ⲆⲆⲆΔⵠⲆᐃ;
          f293(p1656, v2641, v445 - v2641.width / 4, -36 - ᐃⵠⵠ.ⵠⵠⲆᐃΔ(1 - v2649) * v2641.height / 2, v2641.width / 2, v2641.height / 2);
        }
        var v2649 = this.buttons[v2739].hint;
        if (v2649 > 0) {
          v2641 = Δⵠ.ⲆⲆΔΔᐃΔᐃ;
          f293(p1656, v2641, v445 - v2641.width / 4, -36 - v2641.height * ᐃⵠⵠ.ⵠⵠⲆᐃΔ(1 - v2649) / 2, v2641.width / 2, v2641.height / 2);
        }
        if ((v2649 = this.buttons[v2738].hint) > 0) {
          v2641 = Δⵠ.ⲆⵠⵠⲆⵠΔⲆ;
          f293(p1656, v2641, v445 - v2641.width / 4, -36 - v2641.height * ᐃⵠⵠ.ⵠⵠⲆᐃΔ(1 - v2649) / 2, v2641.width / 2, v2641.height / 2);
        }
      }
      if (this.ᐃᐃᐃⵠΔ === 1 && Math.abs(v2644 - this.ⵠⲆᐃⲆᐃⵠⲆ) < 0.006) {
        p1656.globalAlpha = Math.min(1, this.ⵠΔⵠⵠΔΔΔ * 3);
        v2641 = Δⵠ.ᐃⲆᐃⵠⲆΔᐃ;
        p1656.save();
        p1656.translate(v445, 260);
        this.ⵠΔⵠⵠΔΔΔ += v3026;
        p1656.rotate(this.ⵠΔⵠⵠΔΔΔ);
        f293(p1656, v2641, -v2641.width / 2, -v2641.height / 2, v2641.width, v2641.height);
        p1656.restore();
        v2647 = 1.05 + Math.cos(this.ⵠΔⵠⵠΔΔΔ * 5) * 0.05;
        if (this.ᐃⲆⵠⲆⲆΔᐃ === 0) {
          var v2650 = (v2641 = ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[this.ΔᐃⵠⲆⲆⵠⲆ].ⵠΔⵠ).width * v2647;
          var v2651 = v2647 * v2641.height;
          f293(p1656, v2641, v445 - v2650 / 2, 260 - v2651 / 2, v2650, v2651);
        } else if (this.ᐃⲆⵠⲆⲆΔᐃ === 1) {
          v2650 = (v2641 = ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[0].ⵠΔⵠ).width * v2647;
          v2651 = v2641.height * v2647;
          f293(p1656, v2641, v445 - v2650 / 2, 260 - v2651 / 2, v2650, v2651);
          v2650 = v2647 * (v2641 = ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ[this.ΔᐃⵠⲆⲆⵠⲆ].ⵠΔⵠ).width;
          v2651 = v2647 * v2641.height;
          f293(p1656, v2641, v445 - v2650 / 2, 260 - v2651 / 2, v2650, v2651);
        } else if (this.ᐃⲆⵠⲆⲆΔᐃ === 2) {
          v2650 = (v2641 = ⲆⵠᐃⲆ.Δⵠⵠⵠ[this.ΔᐃⵠⲆⲆⵠⲆ].ⵠΔⵠ).width * v2647;
          v2651 = v2641.height * v2647;
          f293(p1656, v2641, v445 - v2650 / 2, 180 - v2651 / 2, v2650, v2651);
          v2650 = (v2641 = ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[0].ⵠΔⵠ).width * v2647;
          v2651 = v2641.height * v2647;
          f293(p1656, v2641, v445 - v2650 / 2, 260 - v2651 / 2, v2650, v2651);
        } else if (this.ᐃⲆⵠⲆⲆΔᐃ === 3) {
          v2650 = (v2641 = ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ[this.ΔᐃⵠⲆⲆⵠⲆ].ⵠΔⵠ).width * v2647;
          v2651 = v2641.height * v2647;
          p1656.save();
          p1656.translate(v445, 260);
          p1656.rotate(Math.PI);
          f293(p1656, v2641, -v2650 / 2, -v2651 / 2, v2650, v2651);
          p1656.restore();
        } else if (this.ᐃⲆⵠⲆⲆΔᐃ === 4) {
          v2650 = v2647 * (v2641 = ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ[this.ΔᐃⵠⲆⲆⵠⲆ].ⵠΔⵠ).width;
          v2651 = v2647 * v2641.height;
          f293(p1656, v2641, v445 - v2650 / 2, 260 - v2651 / 2, v2650, v2651);
        }
        v2641 = this.ΔⵠΔⵠⵠᐃⲆ;
        f293(p1656, v2641, v445 - v2641.width / 4, 340, v2641.width / 2, v2641.height / 2);
        v2641 = this.ᐃⵠΔΔΔᐃᐃ;
        f293(p1656, v2641, v445 - v2641.width / 4, 365, v2641.width / 2, v2641.height / 2);
        if (this.ⵠΔⵠⵠΔΔΔ > 6) {
          this.ᐃᐃᐃⵠΔ = 0;
          f482(v2657);
        }
        p1656.globalAlpha = 1;
      }
      v2813.alert.ᐃᐃΔⵠ("#FFF", "#000");
      if (vThis3.waiting) {
        this.ⵠΔΔᐃᐃᐃⵠ.ᐃᐃΔⵠ();
      }
    };
    var v2652 = 0;
    var v2653 = Math.pow(2, v2652++);
    var v2654 = Math.pow(2, v2652++);
    this.ᐃⲆⲆΔᐃ = v2654;
    var v2655 = Math.pow(2, v2652++);
    var v2656 = Math.pow(2, v2652++);
    var v2657 = Math.pow(2, v2652++);
    var v2658 = Math.pow(2, v2652++);
    var v2659 = Math.pow(2, v2652++);
    var v2660 = Math.pow(2, v2652++);
    this.ΔⲆᐃΔⲆ = v2660;
    var v2661 = Math.pow(2, v2652++);
    var v2662 = Math.pow(2, v2652++);
    var v2663 = Math.pow(2, v2652++);
    var v2664 = Math.pow(2, v2652++);
    var v2665 = Math.pow(2, v2652++);
    var v2666 = Math.pow(2, v2652++);
    var v2667 = Math.pow(2, v2652++);
    var v2668 = Math.pow(2, v2652++);
    var v2669 = Math.pow(2, v2652++);
    var v2670 = Math.pow(2, v2652++);
    var v2671 = Math.pow(2, v2652++);
    var v2672 = Math.pow(2, v2652++);
    var v2673 = Math.pow(2, v2652++);
    var v2674 = Math.pow(2, v2652++);
    var v2675 = Math.pow(2, v2652++);
    var v2676 = Math.pow(2, v2652++);
    var v2677 = Math.pow(2, v2652++);
    this.ⵠⵠᐃⲆᐃ = v2677;
    var v2678 = Math.pow(2, v2652++);
    this.ᐃᐃΔΔⲆ = v2678;
    var v2679 = Math.pow(2, v2652++);
    this.ⲆΔΔᐃⵠ = v2679;
    var v2680 = Math.pow(2, v2652++);
    function f481(p1666, p1667, p1668) {
      for (var v2681 = 0; v2681 < vThis3.ⵠΔΔᐃ.length; v2681++) {
        if ((vThis3.ⵠΔΔᐃ[v2681].view & p1666) !== 0) {
          vThis3.ⵠΔΔᐃ[v2681].active = p1667;
        }
      }
      for (v2681 = 0; vThis3.buttons.length > v2681; v2681++) {
        if ((vThis3.buttons[v2681].view & p1666) !== 0) {
          vThis3.buttons[v2681].info.active = p1667;
        }
      }
      for (v2681 = 0; vThis3.ΔΔΔⵠᐃ.length > v2681; v2681++) {
        if (vThis3.ΔΔΔⵠᐃ[v2681].view & p1666) {
          vThis3.ΔΔΔⵠᐃ[v2681].style.display = p1668;
        }
      }
    }
    this.ⲆⵠⵠᐃΔ = v2653;
    function f482(p1669) {
      if (vThis3.ⲆⵠⲆⲆⵠᐃⵠ !== false) {
        f481(v2661, v2728, "none");
        f481(v2662, v2728, "none");
        f483();
        if (vThis3.ⲆⵠⵠᐃΔ !== p1669 && !(vThis3.ᐃᐃᐃⵠΔ >= 1)) {
          vThis3.ΔΔⵠⲆᐃ.style.display = p1669 === v2653 || v2657 === p1669 || p1669 === v2654 || p1669 === v2659 || p1669 === v2656 || v2658 === p1669 ? "inline-block" : "none";
          f481(vThis3.ⲆⵠⵠᐃΔ, v2728, "none");
          vThis3.ⲆⵠⵠᐃΔ = p1669;
          f481(vThis3.ⲆⵠⵠᐃΔ, v2729, "inline-block");
        }
      }
    }
    function f483() {
      var vNumber10 = Number(ᐃⵠΔΔ.get("starve_crate"));
      var vNumber11 = Number(ᐃⵠΔΔ.get("starve_dead"));
      var vNumber12 = Number(ᐃⵠΔΔ.get("starve_book"));
      var vNumber13 = Number(ᐃⵠΔΔ.get("starve_bag"));
      var vNumber14 = Number(ᐃⵠΔΔ.get("starve_skin"));
      var vNumber15 = Number(ᐃⵠΔΔ.get("starve_accessory"));
      if (!(v2811.unlock.ⲆᐃⵠⲆ[v2811.ⲆᐃⵠⲆ] > 0)) {
        v2811.ⲆᐃⵠⲆ = v2811.unlock.ⲆᐃⵠⲆ[vNumber14] > 0 ? vNumber14 : 0;
      }
      if (!(v2811.unlock.ⵠᐃΔⵠᐃ[v2811.ⵠᐃΔⵠᐃ] > 0)) {
        v2811.ⵠᐃΔⵠᐃ = v2811.unlock.ⵠᐃΔⵠᐃ[vNumber12] > 0 ? vNumber12 : 0;
      }
      if (!(v2811.unlock.ΔΔᐃᐃΔ[v2811.ΔΔᐃᐃΔ] > 0)) {
        v2811.ΔΔᐃᐃΔ = v2811.unlock.ΔΔᐃᐃΔ[vNumber11] > 0 ? vNumber11 : 0;
      }
      if (!(v2811.unlock.ⲆΔΔⲆᐃ[v2811.ⲆΔΔⲆᐃ] > 0)) {
        v2811.ⲆΔΔⲆᐃ = v2811.unlock.ⲆΔΔⲆᐃ[vNumber10] > 0 ? vNumber10 : 0;
      }
      if (!(v2811.unlock.ⵠΔΔⵠΔ[v2811.ⵠΔΔⵠΔ] > 0)) {
        v2811.ⵠΔΔⵠΔ = v2811.unlock.ⵠΔΔⵠΔ[vNumber15] > 0 ? vNumber15 : 0;
      }
      if (!(v2811.unlock.ΔΔⲆⵠⲆ[v2811.ΔΔⲆⵠⲆ] > 0)) {
        v2811.ΔΔⲆⵠⲆ = v2811.unlock.ΔΔⲆⵠⲆ[vNumber13] > 0 ? vNumber13 : 0;
      }
    }
    function f484(p1670) {
      if (v2813.ⲆᐃᐃΔⲆᐃᐃ !== undefined && v2813.ⵠΔⵠΔⵠⵠⲆ !== undefined && vVVVUndefined212 !== v2813.ᐃᐃⵠᐃᐃΔⵠ && vVVVUndefined20 !== v2813.ΔⲆᐃᐃⵠᐃⵠ) {
        p1670();
      }
    }
    function f485(p1671, p1672, p1673) {
      const v2682 = new XMLHttpRequest();
      v2682.open("GET", p1671);
      v2682.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v2682.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          if (p1672 !== undefined) {
            p1672(v2682.responseText);
          }
        } else if (this.readyState == 4 && p1673 !== undefined) {
          p1673();
        }
      };
      v2682.send();
    }
    function f486() {
      f483();
      if (v3047 % 2) {
        console.log(undefined);
        v2815.connect();
      } else {
        console.log(vVVVUndefined2022);
        if (vWindow.Widget.isBlocked === 1) {
          vWindow.Widget.createAdPlayer(v2815.connect.bind(v2815), v2815.connect.bind(v2815));
        } else {
          vWindow.Widget.preroll();
          vWindow.Widget.play = v2815.connect.bind(v2815);
        }
      }
    }
    this.ᐃⵠⲆᐃⵠⵠⵠ = 0;
    this.ᐃⲆⵠΔ = f482;
    this.ᐃⲆⲆⵠᐃΔⵠ = function (p1674, p1675) {
      let v2683 = "0";
      let v2684 = 0;
      if (vVVUndefined19) {
        v2683 = vVVUndefined19 + vF34.ⲆΔᐃⵠⲆⲆᐃ();
      }
      if (v2813.ⲆᐃᐃΔⲆᐃᐃ) {
        f484(p1674);
      } else {
        f485(`${v3050}token?id=${v2683}`, function (p1676) {
          if (v2684 === 1) {
            return;
          }
          const v2685 = p1676.split("_");
          const v2686 = v2685[0] + "_";
          const vNumber16 = Number(v2685[1]);
          const v2687 = Math.abs(f24(vNumber16));
          v2813.ⲆᐃᐃΔⲆᐃᐃ = v2686 + v2687;
          f484(p1674);
        }, function () {
          if (v2684 !== 1) {
            if (p1675 === 1) {
              v2684 = 1;
              p1674();
              return;
            } else {
              vThis3.waiting = false;
              return;
            }
          }
        });
      }
      f485(`${v3051}let`, function (p1677) {
        if (v2684 === 1) {
          return;
        }
        var v2688 = 217;
        if (v2688 === 13) {
          v2688 = 78;
        }
        {
          const v2689 = (p1677 = p1677.split(":"))[0].split("_");
          var v2690 = 76;
          if (v2690 > 5) {
            v2690 = 87;
          }
          if (92 === 146) {
            221;
          }
          const v2691 = v2689[0] + "_";
          const vNumber17 = Number(v2689[1]);
          const v2692 = Math.abs(f64(vNumber17));
          v2813.ⵠΔⵠΔⵠⵠⲆ = v2691 + v2692;
          v2813.ΔⲆᐃⲆⵠΔⵠ = v2692;
          var v2693 = 64;
          if (v2693 > 12) {
            v2693 = 0;
          }
          var v2694 = 104;
          if (v2694 >= 7) {
            v2694 = 220;
          }
          if (188 === 174) {
            209;
          }
          var v2695 = 44;
          if (v2695 >= 13) {
            v2695 = 45;
          }
        }
        var v2696 = 206;
        if (v2696 == 9) {
          v2696 = 13;
        }
        var v2697 = 52;
        if (v2697 >= 9) {
          v2697 = 169;
        }
        {
          var v2698 = 249;
          if (v2698 == 4) {
            v2698 = 9;
          }
          var v2699 = 68;
          120 .ⲆΔᐃⲆΔᐃΔⵠⲆ = 3;
          ({}).ⲆΔᐃⵠⵠᐃᐃᐃᐃ = 0;
          if (v2699 > 5) {
            v2699 = 9;
          }
          const v2700 = p1677[1].split("_");
          var v2701 = 66;
          if (v2701 > 14) {
            v2701 = 253;
          }
          const v2702 = 80;
          var v2703 = 166;
          if (v2703 > 9) {
            v2703 = 116;
          }
          Math.floor(80[v2702.ⲆⲆΔⵠΔⵠᐃ]);
          const v2704 = v2700[0] + "_";
          if (145 == 140) {
            99;
          }
          const vNumber18 = Number(v2700[1]);
          211 .ᐃΔⲆⵠᐃΔⲆⲆΔ = 11;
          var v2705 = 241;
          const v2706 = 176;
          Math.floor(176[v2706.ⲆᐃⵠᐃΔᐃᐃ]);
          if (v2705 === 12) {
            v2705 = 173;
          }
          const v2707 = 222;
          Math.floor(222[v2707.ⲆᐃⲆⲆΔⵠⲆ]);
          const v2708 = Math.abs(f40(vNumber18));
          const v2709 = 51;
          const v2710 = 81;
          Math.floor(81[v2710.ᐃⲆⵠⲆⲆᐃⲆ]);
          if (200 > 51) {
            77;
          }
          v2813.ᐃᐃⵠᐃᐃΔⵠ = v2704 + v2708;
          var v2711 = 244;
          if (v2711 >= 3) {
            v2711 = 11;
          }
          v2813.ⵠⵠΔᐃᐃᐃⵠΔΔ = v2708;
          const v2712 = 123;
          Math.floor(123[v2712.ⵠΔⲆⲆⲆⲆⵠ]);
        }
        {
          const v2713 = p1677[2].split("_");
          var v2714 = 141;
          var v2715 = 215;
          if (v2715 === 4) {
            v2715 = 195;
          }
          if (0 == 100) {
            116;
          }
          if (v2714 === 14) {
            v2714 = 41;
          }
          const v2716 = v2713[0] + "_";
          const vNumber19 = Number(v2713[1]);
          var v2717 = 210;
          if (v2717 === 13) {
            v2717 = 207;
          }
          if (46 === 49) {
            244;
          }
          if (7 == 242) {
            119;
          }
          if (108 < 66) {
            146;
          }
          const v2718 = Math.abs(f40(vNumber19));
          v2813.ΔⲆᐃᐃⵠᐃⵠ = v2716 + v2718;
          let v2719 = 107;
          if (173 == 115) {
            61;
          }
          89 .ᐃⲆⵠⲆΔᐃΔΔⲆ = 8;
          if (232 == 47) {
            93;
          }
          v2719.ⵠⲆⲆᐃΔΔⵠᐃⲆ = 5;
          v2813.ΔⵠᐃⲆⲆⵠΔΔᐃ = v2718;
        }
        f484(p1674);
      }, function () {
        if (v2684 !== 1) {
          if (p1675 === 1) {
            v2684 = 1;
            p1674();
            return;
          } else {
            vThis3.waiting = vVVVV14;
            return;
          }
        }
      });
    };
    this.ᐃⲆⵠⵠΔⵠᐃ = function () {
      if (vThis3.waiting === false) {
        v2813.reconnect.enabled = vVV143;
        vThis3.waiting = true;
        vThis3.ᐃⲆⲆⵠᐃΔⵠ(f486);
      }
    };
    var v2720 = 1;
    var v2721 = 2;
    var v2722 = 4;
    var v2723 = 8;
    var v2724 = 16;
    var v2725 = 32;
    var v2726 = 1;
    var v2727 = 1;
    var v2728 = 0;
    var v2729 = 1;
    if (vWindow.innerWidth < 1300) {
      this.ⵠᐃΔⵠΔ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2729,
        position: v2722 | v2720,
        view: v2653,
        translate: {
          y: 0,
          x: 0,
          ΔⵠΔΔⵠ: 184,
          ⲆⲆΔᐃⲆ: 200
        }
      };
    } else {
      this.ⵠᐃΔⵠΔ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2729,
        position: v2722 | v2724,
        view: v2653,
        translate: {
          ΔⵠΔΔⵠ: 184,
          x: 0,
          y: 0,
          ⲆⲆΔᐃⲆ: -180
        }
      };
    }
    this.ⵠᐃΔⵠΔ.id.addEventListener("keyup", function (p1678) {
      p1678.preventDefault();
      if (p1678.keyCode == 13 && !vThis3.waiting && !vThis3.ΔⲆⵠΔᐃⵠⲆᐃᐃ) {
        vThis3.ᐃⲆⵠⵠΔⵠᐃ();
      }
    });
    this.ⵠᐃΔⵠΔ.input.value = ᐃⵠΔΔ.get("starve_nickname") ? ᐃⵠΔΔ.get("starve_nickname") : "";
    this.ⵠⲆᐃᐃΔⵠΔᐃⲆ = {
      id: document.getElementById("account_nickname_block"),
      style: document.getElementById("account_nickname_block").style,
      input: document.getElementById("account_nickname_input"),
      active: v2728,
      position: v2722 | v2724,
      view: v2654,
      translate: {
        ΔⵠΔΔⵠ: 110,
        x: 0,
        y: 0,
        ⲆⲆΔᐃⲆ: -122
      }
    };
    if (vWindow.innerWidth < 1300) {
      this.ΔΔΔᐃⵠ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2729,
        position: v2722 | v2720,
        view: v2653,
        translate: {
          y: 0,
          ⲆⲆΔᐃⲆ: 208,
          ΔⵠΔΔⵠ: 225,
          x: 0
        }
      };
    } else {
      this.ΔΔΔᐃⵠ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2729,
        position: v2722 | v2724,
        view: v2653,
        translate: {
          y: 0,
          x: 0,
          ΔⵠΔΔⵠ: 225,
          ⲆⲆΔᐃⲆ: -180
        }
      };
    }
    this.ⵠⵠΔⲆ = {
      id: document.getElementById("leaderboard"),
      style: document.getElementById("leaderboard").style,
      active: v2728,
      position: v2722 | v2724,
      view: v2659,
      translate: {
        x: 0,
        ⲆⲆΔᐃⲆ: -294.5,
        ΔⵠΔΔⵠ: 190,
        y: 0
      }
    };
    this.ΔⵠⲆⵠΔΔΔᐃΔ = {
      id: document.getElementById("stats_box"),
      style: document.getElementById("stats_box").style,
      active: v2728,
      position: v2722 | v2724,
      view: v2654,
      translate: {
        x: 0,
        ⲆⲆΔᐃⲆ: 125,
        ΔⵠΔΔⵠ: 187,
        y: 0
      }
    };
    this.ⵠⲆᐃⲆⲆᐃᐃΔⲆ = {
      id: document.getElementById("serverAddressBlock"),
      style: document.getElementById("serverAddressBlock").style,
      input: document.getElementById("serverAddressInput"),
      active: v2728,
      position: v2722 | v2724,
      view: v2679,
      translate: {
        ΔⵠΔΔⵠ: 350,
        x: 0,
        ⲆⲆΔᐃⲆ: -260,
        y: 0
      }
    };
    v2652 = 0;
    this.ΔΔΔⵠᐃ = [];
    this.ΔΔΔⵠᐃ[v2652++] = this.ⵠᐃΔⵠΔ;
    this.ΔΔΔⵠᐃ[v2652++] = this.ΔΔΔᐃⵠ;
    this.ΔΔΔⵠᐃ[v2652++] = this.ⵠⵠΔⲆ;
    this.ΔΔΔⵠᐃ[v2652++] = this.ⵠⲆᐃᐃΔⵠΔᐃⲆ;
    this.ΔΔΔⵠᐃ[v2652++] = this.ΔⵠⲆⵠΔΔΔᐃΔ;
    this.ΔΔΔⵠᐃ[v2652++] = this.ⵠⲆᐃⲆⲆᐃᐃΔⲆ;
    v2652 = 0;
    this.ⵠΔΔᐃ = [];
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⲆⵠⲆΔⲆⲆⵠ, v2729, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ᐃⲆⲆⵠⲆⵠⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⲆⲆⵠⲆⲆⲆⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ᐃⲆⲆΔᐃⲆⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ᐃⵠⵠⲆΔΔⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ΔⵠⲆⵠⲆΔⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⵠⲆᐃⵠᐃⲆⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ᐃᐃⲆⵠΔᐃⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ΔⲆⲆⵠΔΔⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⵠᐃΔΔⵠⲆⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⵠⵠΔΔᐃᐃⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⵠΔⲆᐃⵠⲆⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ΔᐃⵠΔⲆΔⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ᐃⵠᐃΔᐃⵠⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⲆⲆΔᐃΔⵠⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⲆΔᐃⲆⵠΔⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ΔΔᐃⲆΔⲆⵠ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ΔⵠᐃᐃⵠΔⲆ, v2728, 0, 0, v2720);
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ᐃⵠⵠⲆⲆΔⵠ, v2728, 0, 0, v2720);
    if (vWindow.innerWidth < 1300) {
      this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆΔⲆΔⲆⵠⵠ, v2729, 200, 100, v2722 | v2720);
    } else {
      this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆΔⲆΔⲆⵠⵠ, v2729, -753 / 4, 100, v2722 | v2724);
    }
    this.ⵠΔΔᐃ[v2652++].view = v2653;
    this.ⵠΔΔᐃ[v2652++] = f416(Δⵠ.ⲆⵠΔᐃᐃᐃΔ, v2729, 403, -10, v2721);
    if (vWindow.innerWidth > 1300) {
      this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃΔⲆⵠᐃᐃᐃ, v2729, -885 / 4, -319 / 2, v2723 | v2724);
      this.ⵠΔΔᐃ[v2652++].view = v2653;
    }
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆⵠⵠΔΔⵠΔ, v2728, -323.25, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2654;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⵠⵠⲆⵠⲆⲆΔ, v2728, -1425 / 4, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2656;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃⲆⲆⵠΔᐃⵠ, v2728, -905 / 4, 50, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2655;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃᐃΔⲆⵠⵠⲆ, v2728, -402, 130, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2657;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃⲆⲆⲆΔᐃⵠ, v2728, -279.25, 130, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2677;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.Δᐃⵠᐃᐃᐃᐃ, v2728, -305.5, 130, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2678;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ΔᐃⲆⵠⲆⵠΔ, v2728, -305.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2679;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ΔΔⵠᐃΔⲆⵠ, v2728, -Δⵠ.ΔΔⵠᐃΔⲆⵠ.width / 4 - 350, -15, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2680;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⵠΔΔⲆⵠᐃⲆ, v2728, -374.25, 110, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2658;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃⲆΔᐃᐃⲆΔ, v2728, -1226 / 4, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2659;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⵠⲆΔᐃΔⲆᐃ, v2728, -1381 / 4, 80, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2660;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆᐃⵠⲆⲆᐃΔ, v2728, -1542 / 4, 150, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2663;
    var v2730 = 3.6;
    var v2731 = this.ⵠΔᐃⲆⵠᐃΔ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2730 * 57]]);
    this.ⵠΔΔᐃ[v2652] = f416(v2731, v2728, -v2731.width / 4, 178, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2663;
    this.ΔⲆᐃⲆΔⲆⲆⵠᐃ = function (p1679, p1680, p1681) {
      var v2732;
      vThis3.ᐃᐃᐃⵠΔ = 1;
      vThis3.ᐃⲆⲆⵠⵠΔΔ = 0;
      vThis3.ⵠΔⵠⵠΔΔΔ = 0;
      vThis3.ⵠⲆᐃⲆᐃⵠⲆ = p1679;
      vThis3.ᐃⲆⵠⲆⲆΔᐃ = p1680;
      var v2733 = 0;
      if (p1680 === 0) {
        for (v2733 = 0; v2733 < ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ.length && p1681 !== ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[v2733].id; v2733++);
        v2732 = ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ[v2733];
        vThis3.unlock.ⲆᐃⵠⲆ[v2733] = 1;
      } else if (p1680 === 1) {
        for (v2733 = 0; v2733 < ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ.length && p1681 !== ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ[v2733].id; v2733++);
        v2732 = ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ[v2733];
        vThis3.unlock.ⵠΔΔⵠΔ[v2733] = 1;
      } else if (p1680 === 2) {
        for (v2733 = 0; v2733 < ⲆⵠᐃⲆ.Δⵠⵠⵠ.length && ⲆⵠᐃⲆ.Δⵠⵠⵠ[v2733].id !== p1681; v2733++);
        v2732 = ⲆⵠᐃⲆ.Δⵠⵠⵠ[v2733];
        vThis3.unlock.ΔΔⲆⵠⲆ[v2733] = 1;
      } else if (p1680 === 3) {
        for (v2733 = 0; v2733 < ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ.length && ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ[v2733].id !== p1681; v2733++);
        v2732 = ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ[v2733];
        vThis3.unlock.ⵠᐃΔⵠᐃ[v2733] = 1;
      } else if (p1680 === 4) {
        for (v2733 = 0; v2733 < ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ.length && p1681 !== ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ[v2733].id; v2733++);
        v2732 = ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ[v2733];
        vThis3.unlock.ⲆΔΔⲆᐃ[v2733] = 1;
        vThis3.unlock.ΔΔᐃᐃΔ[v2733] = 1;
      }
      vThis3.ΔᐃⵠⲆⲆⵠⲆ = v2733;
      vThis3.ᐃⵠΔΔΔᐃᐃ = f417("by " + v2732.ΔᐃⲆ, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, vVUndefined19, 30, 24, vVVUndefined20, vVVVUndefined117, undefined, vVVVUndefined20, "#000000", 24);
      vThis3.ΔⵠΔⵠⵠᐃⲆ = f417(v2732.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, undefined, 30, 24, vUndefined, vUndefined, undefined, undefined, "#000000", 20);
    };
    this.ᐃᐃᐃⵠΔ = 0;
    this.ᐃⲆⲆⵠⵠΔΔ = 0;
    this.ⵠⲆᐃⲆᐃⵠⲆ = 0;
    this.ᐃⲆⵠⲆⲆΔᐃ = 0;
    this.ⵠΔⵠⵠΔΔΔ = 0;
    this.ᐃⵠΔΔΔᐃᐃ = undefined;
    this.ΔⵠΔⵠⵠᐃⲆ = undefined;
    var v2734 = 197;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆᐃΔⵠΔⵠⵠ, v2728, -1542 / 4, 150, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2667;
    v2731 = this.ⵠΔᐃⲆⵠᐃΔ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2730 * 57]]);
    this.ⵠΔΔᐃ[v2652] = f416(v2731, v2728, -v2731.width / 4, 178, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2667;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ΔⲆⵠⲆⵠΔΔ, v2728, -385.5, 150, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2665;
    v2731 = this.ⵠΔᐃⲆⵠᐃΔ([["#d33a2a", v2730 * 3], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2730 * 57]]);
    this.ⵠΔΔᐃ[v2652] = f416(v2731, v2728, -v2731.width / 4, 178, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2665;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃᐃᐃⲆΔⵠᐃ, v2728, -385.5, 150, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2666;
    v2731 = this.ⵠΔᐃⲆⵠᐃΔ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2730 * 57]]);
    this.ⵠΔΔᐃ[v2652] = f416(v2731, v2728, -v2731.width / 4, 178, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2666;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃᐃⲆⲆⵠⲆΔ, v2728, -1542 / 4, 150, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2664;
    v2731 = this.ⵠΔᐃⲆⵠᐃΔ([["#d45ce5", v2730 * 3], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2730 * 57]]);
    this.ⵠΔΔᐃ[v2652] = f416(v2731, v2728, -v2731.width / 4, 178, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2664;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆᐃⵠⵠΔᐃΔ, v2728, -1542 / 4, 150, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2668;
    v2731 = this.ⵠΔᐃⲆⵠᐃΔ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2730 * 57]]);
    this.ⵠΔΔᐃ[v2652] = f416(v2731, v2728, -v2731.width / 4, 178, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2668;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⵠⲆⵠΔⵠⲆᐃ, v2728, -341.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2669;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆΔⲆⵠⵠⲆᐃ, v2728, -341.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2673;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆⲆⵠⲆΔⵠⵠ, v2728, -341.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2671;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃⲆΔᐃⵠⲆⵠ, v2728, -341.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2672;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ΔᐃᐃⵠᐃⲆⵠ, v2728, -341.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2670;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆΔᐃΔⲆΔⲆ, v2728, -341.5, 100, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2674;
    ᐃᐃⲆΔΔᐃᐃ = v2652++;
    this.ⵠΔΔᐃ[ᐃᐃⲆΔΔᐃᐃ] = f416(Δⵠ.ᐃᐃⲆΔΔᐃᐃ, v2728, 484, 0, v2722);
    ⲆᐃᐃΔⲆᐃⲆ = v2652++;
    this.ⵠΔΔᐃ[ⲆᐃᐃΔⲆᐃⲆ] = f416(Δⵠ.ⲆᐃᐃΔⲆᐃⲆ, v2728, 812.5, 0, v2722);
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ⲆΔΔⲆⲆᐃΔ, v2728, -758 / 4, -5, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2662;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃΔⲆᐃᐃΔⲆ, v2728, -189.5, -5, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2661;
    ⵠᐃΔⵠⵠΔΔ = v2652++;
    this.ⵠΔΔᐃ[ⵠᐃΔⵠⵠΔΔ] = f416(Δⵠ.ⲆⵠΔᐃᐃᐃⵠ, v2729, 93, 30, v2722);
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ᐃⲆⲆⵠΔⲆΔ, v2728, -173, 110, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2675;
    this.ⵠΔΔᐃ[v2652] = f416(Δⵠ.ΔⲆⵠΔⵠⲆΔ, v2728, -173, 110, v2722 | v2724);
    this.ⵠΔΔᐃ[v2652++].view = v2676;
    v2652 = 0;
    this.buttons = [];
    this.buttons[v2652] = f418(50, 57, 0, [Δⵠ.ᐃⲆΔⵠⲆᐃΔ, Δⵠ.ⵠΔⲆΔᐃᐃⵠ, Δⵠ.ⵠΔΔΔᐃⵠⵠ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f482(v2660);
      } else {
        f482(v2655);
      }
    }, 320, 0, v2720, v2729);
    v2652++;
    if (vWindow.innerWidth < 1300) {
      this.buttons[v2652] = f418(202, 97, 0, [Δⵠ.ⵠΔΔΔⲆᐃᐃ, Δⵠ.ᐃⲆⵠᐃⵠⵠⵠ, Δⵠ.ᐃᐃΔᐃⲆⲆᐃ], v2726, 0, this.ᐃⲆⵠⵠΔⵠᐃ, 462, 235, v2722 | v2720, v2729);
    } else {
      this.buttons[v2652] = f418(202, 97, 0, [Δⵠ.ⵠΔΔΔⲆᐃᐃ, Δⵠ.ᐃⲆⵠᐃⵠⵠⵠ, Δⵠ.ᐃᐃΔᐃⲆⲆᐃ], v2726, 0, this.ᐃⲆⵠⵠΔⵠᐃ, 74, 235, v2722 | v2724, v2729);
    }
    this.buttons[v2652].view = v2653;
    v2652++;
    if (vWindow.innerWidth > 1300) {
      this.buttons[v2652] = f418(355, 168, 0, [Δⵠ.ⵠΔⵠⵠΔᐃⵠ, Δⵠ.ⵠΔⵠⵠΔᐃⵠ, Δⵠ.ⵠΔⵠⵠΔᐃⵠ], v2726, 0, function () {
        vWindow.open("./changelog.html", "_blank");
      }, -195, -115, v2723 | v2724, v2729);
      this.buttons[v2652++].view = v2653;
      this.buttons[v2652] = f418(355, 168, 0, [Δⵠ.ΔⵠΔⲆⲆⲆⵠ, Δⵠ.ΔⵠΔⲆⲆⲆⵠ, Δⵠ.ΔⵠΔⲆⲆⲆⵠ], v2726, 0, function () {
        vWindow.open("https://taming.io", "_blank");
      }, 20, -115, v2723 | v2724, v2729);
      this.buttons[v2652++].view = v2653;
    }
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ⲆⲆⲆᐃⵠⲆᐃ, Δⵠ.ⲆⲆᐃⵠⵠⵠⲆ, Δⵠ.ⵠⵠΔᐃΔⵠⲆ], v2726, 0, function () {
      vWindow.open("https://lapamauve.creator-spring.com/", "_blank");
    }, 380, 10, v2721, v2729);
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ΔⲆΔⵠᐃᐃⵠ, Δⵠ.ⵠⲆⵠΔΔΔᐃ, Δⵠ.ⲆⲆⲆⲆⵠⵠⲆ], v2726, 0, function () {
      vWindow.open("https://discord.gg/starveio", "_blank");
    }, 330, 10, v2721, v2729);
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ᐃⵠΔΔⲆⵠᐃ, Δⵠ.ΔΔⵠⲆΔΔΔ, Δⵠ.ⵠΔⲆᐃᐃⲆΔ], v2726, 0, function () {
      vWindow.open("https://reddit.com/r/starveio", "_blank");
    }, 280, 10, v2721, v2729);
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ᐃⵠⲆⵠⲆᐃᐃ, Δⵠ.ⵠⵠΔⵠⲆⵠⵠ, Δⵠ.ᐃⵠᐃΔⲆΔⵠ], v2726, 0, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, 230, 10, v2721, v2729);
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ⵠΔΔΔΔΔⲆ, Δⵠ.ᐃⵠⲆⲆⲆⵠⵠ, Δⵠ.ⲆⲆⵠΔⲆᐃⲆ], v2726, 0, function () {
      vWindow.open("https://www.facebook.com/LapaMauve/", "_blank");
    }, 155, 10, v2721, v2729);
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ⵠΔᐃⵠⵠⲆᐃ, Δⵠ.ΔⲆΔᐃⵠⵠⲆ, Δⵠ.ᐃᐃⵠⲆⲆⵠⵠ], v2726, 0, function () {
      vWindow.open("https://twitter.com/lapamauve", "_blank");
    }, 105, 10, v2721, v2729);
    this.buttons[v2652++] = f418(80, 80, 0, [Δⵠ.ΔᐃⲆΔⵠΔⵠ, Δⵠ.ⲆΔΔΔᐃΔΔ, Δⵠ.ᐃⵠᐃΔΔⵠⵠ], v2726, 0, function () {
      vWindow.open("https://www.youtube.com/@lapamauveofficial", "_blank");
    }, 55, 10, v2721, v2729);
    ΔⵠⲆΔⲆᐃΔ = v2652++;
    this.buttons[ΔⵠⲆΔⲆᐃΔ] = f418(232, 142, 0, [Δⵠ.ⲆⲆⲆᐃⵠⵠᐃ, Δⵠ.ᐃⲆⵠᐃⲆᐃⵠ, Δⵠ.ᐃⵠⲆⲆΔᐃⵠ], v2726, 0, function () {
      f482(v2659);
      f528(v2811.ⵠⵠⵠⲆⲆΔΔ, v2811.ⵠⵠⲆΔⲆⵠΔ, v2811.ⲆⵠⵠΔⲆΔΔ, v2811.ΔⲆⲆⵠᐃⲆⲆ);
    }, -5, 573, v2720, v2729);
    this.buttons[v2652++] = f418(236, 165, 0, [Δⵠ.ⵠᐃΔⲆⵠⲆᐃ, Δⵠ.ⵠᐃΔⲆⵠⲆᐃ, Δⵠ.ⵠᐃΔⲆⵠⲆᐃ], v2726, v2727, function () {
      f482(v2659);
    }, -5, 566, v2720, v2729);
    ⲆΔΔⵠⵠᐃⲆ = v2652++;
    this.buttons[ⲆΔΔⵠⵠᐃⲆ] = f418(236, 165, 0, [Δⵠ.ᐃᐃᐃΔΔᐃΔ, Δⵠ.ᐃⵠⲆⲆᐃᐃᐃ, Δⵠ.ⲆΔⵠΔⵠᐃΔ], v2726, 0, function () {
      f482(v2658);
    }, -5, 494, v2720, v2729);
    this.buttons[v2652++] = f418(236, 165, 0, [Δⵠ.ⵠⵠⲆⲆⲆΔⵠ, Δⵠ.ⵠⵠⲆⲆⲆΔⵠ, Δⵠ.ⵠⵠⲆⲆⲆΔⵠ], v2726, v2727, function () {
      f482(v2658);
    }, -5, 494, v2720, v2729);
    ΔⲆⵠΔᐃΔᐃ = v2652++;
    this.buttons[ΔⲆⵠΔᐃΔᐃ] = f418(236, 165, 0, [Δⵠ.ᐃᐃᐃΔΔᐃΔ, Δⵠ.ᐃⵠⲆⲆᐃᐃᐃ, Δⵠ.ⲆΔⵠΔⵠᐃΔ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        if (v2811.ΔⲆⲆⵠⵠⲆⵠ - Date.now() > 0) {
          f482(v2679);
        } else {
          f482(v2677);
        }
      } else {
        f482(v2655);
      }
    }, -5, 415, v2720, v2729);
    this.buttons[v2652++] = f418(236, 165, 0, [Δⵠ.ΔᐃΔⵠⲆΔⵠ, Δⵠ.ΔᐃΔⵠⲆΔⵠ, Δⵠ.ΔᐃΔⵠⲆΔⵠ], v2726, v2727, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        if (v2811.ΔⲆⲆⵠⵠⲆⵠ - Date.now() > 0) {
          f482(v2679);
        } else {
          f482(v2677);
        }
      } else {
        f482(v2655);
      }
    }, -5, 415, v2720, v2729);
    ⲆΔΔᐃᐃⵠᐃ = v2652++;
    this.buttons[ⲆΔΔᐃᐃⵠᐃ] = f418(236, 165, 0, [Δⵠ.ᐃᐃᐃΔΔᐃΔ, Δⵠ.ᐃⵠⲆⲆᐃᐃᐃ, Δⵠ.ⲆΔⵠΔⵠᐃΔ], v2726, 0, function () {
      f482(v2657);
    }, -5, 336, v2720, v2729);
    this.buttons[v2652++] = f418(236, 165, 0, [Δⵠ.ᐃΔⲆⲆᐃⵠⲆ, Δⵠ.ᐃΔⲆⲆᐃⵠⲆ, Δⵠ.ᐃΔⲆⲆᐃⵠⲆ], v2726, v2727, function () {
      f482(v2657);
    }, -5, 336, v2720, v2729);
    ᐃⲆΔⲆΔⲆΔ = v2652++;
    this.buttons[ᐃⲆΔⲆΔⲆΔ] = f418(236, 165, 0, [Δⵠ.ᐃᐃᐃΔΔᐃΔ, Δⵠ.ᐃⵠⲆⲆᐃᐃᐃ, Δⵠ.ⲆΔⵠΔⵠᐃΔ], v2726, 0, function () {
      f482(v2656);
    }, -5, 257, v2720, v2729);
    this.buttons[v2652++] = f418(236, 165, 0, [Δⵠ.ⲆⵠΔᐃⵠᐃΔ, Δⵠ.ⲆⵠΔᐃⵠᐃΔ, Δⵠ.ⲆⵠΔᐃⵠᐃΔ], v2726, v2727, function () {
      f482(v2656);
    }, -5, 257, v2720, v2729);
    ⲆⵠⲆΔⵠⵠᐃ = v2652++;
    this.buttons[ⲆⵠⲆΔⵠⵠᐃ] = f418(236, 165, 0, [Δⵠ.ᐃᐃᐃΔΔᐃΔ, Δⵠ.ᐃⵠⲆⲆᐃᐃᐃ, Δⵠ.ⲆΔⵠΔⵠᐃΔ], v2726, 0, function () {
      f482(v2653);
    }, -5, 178, v2720, v2729);
    this.buttons[v2652++] = f418(236, 165, 0, [Δⵠ.ⲆΔⵠⵠΔᐃᐃ, Δⵠ.ⲆΔⵠⵠΔᐃᐃ, Δⵠ.ⲆΔⵠⵠΔᐃᐃ], v2726, v2727, function () {
      f482(v2653);
    }, -5, 178, v2720, v2729);
    ⵠΔΔⲆⲆᐃⲆ = v2652++;
    this.ⵠΔΔⲆⲆᐃⲆ = ⵠΔΔⲆⲆᐃⲆ;
    this.buttons[ⵠΔΔⲆⲆᐃⲆ] = f418(324, 222, 0, [Δⵠ.ⲆⵠᐃΔⵠᐃᐃ, Δⵠ.ⵠⵠᐃⵠΔⵠᐃ, Δⵠ.ⲆᐃΔⲆΔᐃⵠ], v2726, 0, function () {
      f482(v2655);
    }, 0, 70, v2720, v2729);
    ΔᐃⲆⲆΔⲆⲆ = v2652++;
    ⵠⲆΔᐃᐃΔⲆ = v2652++;
    this.ΔᐃⲆⲆΔⲆⲆ = ΔᐃⲆⲆΔⲆⲆ;
    this.ⵠⲆΔᐃᐃΔⲆ = ⵠⲆΔᐃᐃΔⲆ;
    this.buttons[ΔᐃⲆⲆΔⲆⲆ] = f418(324, 222, 0, [Δⵠ.ⵠᐃΔΔⲆΔᐃ, Δⵠ.ΔⲆᐃᐃⲆⵠⵠ, Δⵠ.ⲆⵠⲆⵠⲆⵠⵠ], v2726, 0, function () {
      f482(v2654);
      f487(-1);
    }, 0, 70, v2720, v2728);
    this.buttons[ⵠⲆΔᐃᐃΔⲆ] = f418(324, 222, 0, [Δⵠ.ⵠΔⵠⲆΔⵠⲆ, Δⵠ.ⵠΔⵠⲆΔⵠⲆ, Δⵠ.ⵠΔⵠⲆΔⵠⲆ], v2726, v2727, function () {
      f482(v2654);
      f487(-1);
    }, 0, 70, v2720, v2728);
    if (v2815.ⵠᐃᐃᐃⵠΔΔ === 0) {
      var v2735 = v2652++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2735] = f418(266, 176, 0, [Δⵠ.ᐃᐃᐃΔⲆⲆⵠ, Δⵠ.ⲆⵠⵠⵠᐃⵠⲆ, Δⵠ.ⵠⲆᐃⵠⵠⵠΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(0);
        }, 150, 300, v2720 | v2722, v2729);
      } else {
        this.buttons[v2735] = f418(266, 176, 0, [Δⵠ.ᐃᐃᐃΔⲆⲆⵠ, Δⵠ.ⲆⵠⵠⵠᐃⵠⲆ, Δⵠ.ⵠⲆᐃⵠⵠⵠΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(0);
        }, -340, 100, v2724 | v2722, v2729);
      }
      this.buttons[v2735].view = v2653;
      this.buttons[v2735].hint = 0;
      var v2736 = v2652++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2736] = f418(266, 176, 0, [Δⵠ.ⵠⵠⵠⵠⵠⲆⵠ, Δⵠ.ᐃΔᐃⵠⲆΔⲆ, Δⵠ.ⵠⲆⲆⲆⲆⲆΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(4);
        }, 150, 400, v2720 | v2722, v2729);
      } else {
        this.buttons[v2736] = f418(266, 176, 0, [Δⵠ.ⵠⵠⵠⵠⵠⲆⵠ, Δⵠ.ᐃΔᐃⵠⲆΔⲆ, Δⵠ.ⵠⲆⲆⲆⲆⲆΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(4);
        }, -340, 200, v2724 | v2722, v2729);
      }
      this.buttons[v2736].view = v2653;
      this.buttons[v2736].hint = 0;
      var v2737 = v2652++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2737] = f418(266, 176, 0, [Δⵠ.ⵠⵠⵠⵠⵠΔⲆ, Δⵠ.ΔΔΔⲆⵠⵠⲆ, Δⵠ.ⲆⵠⲆⵠⵠΔΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(6);
        }, 450, 300, v2720 | v2722, v2729);
      } else {
        this.buttons[v2737] = f418(266, 176, 0, [Δⵠ.ⵠⵠⵠⵠⵠΔⲆ, Δⵠ.ΔΔΔⲆⵠⵠⲆ, Δⵠ.ⲆⵠⲆⵠⵠΔΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(6);
        }, -340, 300, v2724 | v2722, v2729);
      }
      this.buttons[v2737].view = v2653;
      this.buttons[v2737].hint = 0;
      var v2738 = v2652++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2738] = f418(266, 176, 0, [Δⵠ.ᐃΔΔⵠΔⲆⲆ, Δⵠ.ᐃⲆΔΔΔᐃΔ, Δⵠ.ᐃⵠⵠⵠᐃⵠΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(2);
        }, 300, 300, v2720 | v2722, v2729);
      } else {
        this.buttons[v2738] = f418(266, 176, 0, [Δⵠ.ᐃΔΔⵠΔⲆⲆ, Δⵠ.ᐃⲆΔΔΔᐃΔ, Δⵠ.ᐃⵠⵠⵠᐃⵠΔ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(2);
        }, 204, 100, v2724 | v2722, v2729);
      }
      this.buttons[v2738].view = v2653;
      this.buttons[v2738].hint = 0;
      var v2739 = v2652++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2739] = f418(266, 176, 0, [Δⵠ.ⵠᐃⵠΔΔΔⲆ, Δⵠ.ⲆⵠⵠᐃⲆᐃᐃ, Δⵠ.ΔⵠΔᐃⲆᐃᐃ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(3);
        }, 300, 400, v2720 | v2722, v2729);
      } else {
        this.buttons[v2739] = f418(266, 176, 0, [Δⵠ.ⵠᐃⵠΔΔΔⲆ, Δⵠ.ⲆⵠⵠᐃⲆᐃᐃ, Δⵠ.ΔⵠΔᐃⲆᐃᐃ], v2726, 0, function () {
          v2815.ⲆⲆⵠΔΔ(3);
        }, 204, 200, v2724 | v2722, v2729);
      }
      this.buttons[v2739].view = v2653;
      this.buttons[v2739].hint = 0;
      var v2740 = v2652++;
      this.buttons[v2740] = f418(266, 176, 0, [Δⵠ.ΔᐃΔⲆⲆⲆΔ, Δⵠ.ᐃΔΔᐃΔΔᐃ, Δⵠ.ⵠⲆⵠᐃᐃⲆᐃ], v2726, 0, function () {
        v2815.ⲆⲆⵠΔΔ(7);
      }, vWindow.innerWidth < 1300 ? 450 : 204, vWindow.innerWidth < 1300 ? 400 : 300, (vWindow.innerWidth < 1300 ? v2720 : v2724) | v2722, v2729);
      this.buttons[v2740].view = v2653;
      this.buttons[v2740].hint = 0;
    }
    function f487(p1682, p1683) {
      if (p1683 !== undefined) {
        v2811.ⵠⵠⵠⲆᐃⵠⵠ = p1683;
        var v2741 = v2811.ⲆⲆⵠⵠⲆΔᐃ[p1683];
        v2811.ᐃⵠⲆⲆᐃ = v2741.score;
        v2811.ΔᐃⵠⲆᐃ = v2741.kill;
        v2811.ΔΔⲆⵠΔᐃⲆ = v2741.death;
        v2811.time = v2741.time;
        v2811.ⵠⵠⲆᐃⵠΔⲆ = v2741.bestScore;
        v2811.ⵠΔΔⵠⲆᐃᐃ = v2741.bestKill;
        v2811.ᐃΔⵠⵠⵠᐃΔ = v2741.bestTime;
        v2811.ᐃᐃᐃΔⲆᐃⵠ = v2741.scoreTotal;
      }
      if (vVVVUndefined2022 === p1682) {
        p1682 = v2811.ΔⲆⵠⲆΔⲆᐃ;
      }
      v2811.ΔⲆⵠⲆΔⲆᐃ = p1682;
      if (p1682 >= 0) {
        document.getElementById("stats_box_time").innerHTML = v2811.ᐃΔⵠⵠⵠᐃΔ[p1682];
        document.getElementById("stats_box_kill").innerHTML = v2811.ⵠΔΔⵠⲆᐃᐃ[p1682];
        document.getElementById("stats_box_score").innerHTML = v2811.ⵠⵠⲆᐃⵠΔⲆ[p1682];
      } else {
        var v2742 = 0;
        for (var v2743 = 0; v2811.ΔᐃⵠⲆᐃ.length > v2743; v2743++) {
          v2742 += v2811.ΔᐃⵠⲆᐃ[v2743];
        }
        var v2744 = 0;
        for (v2743 = 0; v2811.time.length > v2743; v2743++) {
          v2744 += v2811.time[v2743];
        }
        document.getElementById("stats_box_time").innerHTML = v2744;
        document.getElementById("stats_box_kill").innerHTML = v2742;
        document.getElementById("stats_box_score").innerHTML = v2811.ᐃⵠⲆⲆᐃ;
      }
    }
    this.buttons[v2652] = f418(87, 78, 0, [Δⵠ.ᐃⵠⵠᐃᐃⲆⵠ, Δⵠ.ᐃΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆⲆΔΔΔ], v2726, 0, function () {
      v2811.ⲆⲆⲆⲆᐃᐃᐃΔΔ();
      if (v2811.ⵠⵠⵠⲆⲆⵠΔ === 0) {
        f482(v2676);
      } else {
        f482(v2675);
      }
    }, 127, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    this.buttons[v2652] = f418(87, 78, 0, [Δⵠ.ΔⵠΔᐃᐃⵠⵠ, Δⵠ.ⵠΔⲆᐃⵠⵠᐃ, Δⵠ.ⵠΔΔᐃⲆⵠᐃ], v2726, 0, function () {
      const v2745 = vWindow.document.createElement("textarea");
      v2745.value = vVVUndefined19;
      vWindow.document.body.appendChild(v2745);
      v2745.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2745);
    }, 182, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    this.buttons[v2652] = f418(87, 78, 0, [Δⵠ.ΔⲆⵠⲆᐃⵠⲆ, Δⵠ.ΔΔΔᐃⲆⵠⵠ, Δⵠ.ⲆΔᐃⵠⵠΔⵠ], v2726, 0, function () {
      (function () {
        if (v3053 === vUndefined4 && vWindow.FB && vWindow.FB.getUserID()) {
          vWindow.FB.logout();
        }
        if (v3052 === vUndefined4 && vVVVVUndefined2122 !== undefined) {
          vWindow.gapi.auth2.getAuthInstance().signOut();
          vVVVVUndefined2122 = undefined;
        }
        vVVUndefined19 = vVVVUndefined20;
        vUndefined5 = undefined;
        vUndefined4 = vVVUndefined117;
        v2811.ⲆⲆⲆⲆⵠ = 0;
        v2811.ᐃⵠᐃΔⲆ = 0;
        v2811.ᐃⵠⲆⲆᐃ = 0;
        v2811.ⵠⲆᐃΔⵠⲆⵠ();
        ⵠᐃΔⲆⵠⲆⲆΔⲆ();
      })();
    }, 255, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    this.buttons[v2652] = f418(58, 64, 0, [Δⵠ.ⲆⲆᐃⲆⲆⲆⵠ, Δⵠ.ᐃΔⵠΔᐃᐃⵠ, Δⵠ.ᐃⵠⲆΔᐃⵠⵠ], v2726, 0, function () {
      f482(v2653);
    }, 189, 118, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2655;
    this.buttons[v2652] = f418(497, 72, 0, [Δⵠ.ΔΔᐃᐃⵠⵠᐃ, Δⵠ.ΔⲆΔⲆⵠⵠⲆ, Δⵠ.ⵠⵠⵠᐃᐃΔⵠ], v2726, 0, function () {
      (function () {
        if (v2262) {
          vUndefined5 = ᐃⵠⵠ.ᐃᐃⵠⵠΔΔⵠ(40);
          vUndefined4 = v3054;
          vVVUndefined19 = v2262.userId;
          vWindow.ⵠᐃⵠⲆⲆⵠΔ();
          return;
        }
        vWindow.gapi.auth2.getAuthInstance().signIn();
      })();
    }, -130, 390, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2655;
    this.buttons[v2652] = f418(497, 72, 0, [Δⵠ.ᐃⵠⵠⵠⵠᐃΔ, Δⵠ.ⲆᐃΔⲆΔᐃⲆ, Δⵠ.ΔⲆⵠᐃⵠᐃΔ], v2726, 0, function () {
      vWindow.FB.login(function (p1684) {
        if (p1684.authResponse) {
          vWindow.FB.api("/me", function (p1685) {
            vUndefined4 = v3053;
            vUndefined5 = vWindow.FB.getAuthResponse().accessToken;
            f530();
            vWindow.ⵠᐃⵠⲆⲆⵠΔ();
          });
        }
      });
    }, -130, 430, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2655;
    ⲆⵠᐃⵠᐃⲆⵠ = 20000;
    this.ⵠⲆⵠᐃΔᐃⵠ = function (p1686) {
      var v2746 = v2811.ⵠΔⲆⵠⲆΔⵠ(p1686);
      var v2747 = ⲆⵠᐃⵠᐃⲆⵠ * (v2746 * v2746);
      return (p1686 -= v2747) / ((v2746 + 1) * (v2746 + 1) * ⲆⵠᐃⵠᐃⲆⵠ - v2747);
    };
    this.ⵠΔⲆⵠⲆΔⵠ = function (p1687) {
      return Math.floor(Math.sqrt(p1687 / ⲆⵠᐃⵠᐃⲆⵠ));
    };
    this.ᐃⲆᐃⵠⲆⵠᐃᐃⵠ = function (p1688) {
      v2811.ᐃⵠΔⲆᐃ = v2811.ⵠΔⲆⵠⲆΔⵠ(p1688);
      v2811.ⵠⲆᐃᐃⵠᐃΔ = v2811.ⵠⲆⵠᐃΔᐃⵠ(p1688);
      v2811.ΔⵠⵠΔⵠⲆⵠ = 0;
      v2811.ᐃⵠⲆⲆᐃ = p1688;
    };
    this.ⵠΔⲆᐃᐃᐃᐃⲆᐃ = function (p1689) {
      v2811.buttons[v2811.ⵠΔΔⲆⲆᐃⲆ].info.active = 0;
      v2811.buttons[v2811.ΔᐃⲆⲆΔⲆⲆ].info.active = 1;
      v2811.buttons[v2811.ⵠⲆΔᐃᐃΔⲆ].info.active = 1;
      a();
      if (p1689.name.indexOf("Starver#") === -1) {
        document.getElementById("account_nickname_input").value = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(p1689.name)));
      } else {
        document.getElementById("account_nickname_input").value = p1689.name;
      }
      v2811.ᐃⵠᐃΔⲆ = p1689.bread;
      var v2748 = p1689.seasons;
      var v2749 = v2748[v2748.length - 1];
      v2811.ⲆⲆⵠⵠⲆΔᐃ = v2748;
      vThis3.ᐃⲆᐃⵠⲆⵠᐃᐃⵠ(v2749.score);
      v2811.ᐃⵠⲆⲆᐃ = v2749.score;
      v2811.ΔᐃⵠⲆᐃ = v2749.kill;
      v2811.ΔΔⲆⵠΔᐃⲆ = v2749.death;
      v2811.time = v2749.time;
      v2811.ⵠⵠⲆᐃⵠΔⲆ = v2749.bestScore;
      v2811.ⵠΔΔⵠⲆᐃᐃ = v2749.bestKill;
      v2811.ᐃΔⵠⵠⵠᐃΔ = v2749.bestTime;
      v2811.ᐃᐃᐃΔⲆᐃⵠ = v2749.scoreTotal;
      v2811.ⵠⵠⵠⲆⲆⵠΔ = p1689.firstName;
      document.getElementById("serverAddressInput").value = p1689.privateServerRegion + " : " + p1689.privateServer;
      if (v2811.ⵠⵠⵠⲆⲆⵠΔ === vVVUndefined21) {
        v2811.ⵠⵠⵠⲆⲆⵠΔ = 0;
      }
      v2811.ΔⲆⲆⵠⵠⲆⵠ = Date.now() + p1689.privateServerTime;
      if (Number(p1689.privateServerTime) > 0) {
        v2811.ΔⲆⲆⵠⵠⲆⵠ = Date.now() + Number(p1689.privateServerTime);
      }
      v2811.ⲆⲆⲆⲆⵠ = Date.now() + p1689.kit;
      if (Number(p1689.kit) > 0) {
        v2811.ⲆⲆⲆⲆⵠ = Date.now() + Number(p1689.kit);
      }
      var v2750 = ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ;
      for (var v2751 = 0; v2751 < p1689.skins.length; v2751++) {
        if ((v2753 = p1689.skins[v2751]) > 0) {
          for (var v2752 = 0; v2750.length > v2752; v2752++) {
            if (v2751 === v2750[v2752].id) {
              vThis3.unlock.ⲆᐃⵠⲆ[v2752] = 1;
            }
          }
        }
      }
      v2750 = ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ;
      v2751 = 0;
      for (; p1689.accessories.length > v2751; v2751++) {
        var v2753 = p1689.accessories[v2751];
        if (v2753 > 0) {
          for (v2752 = 0; v2750.length > v2752; v2752++) {
            if (v2750[v2752].id === v2751) {
              vThis3.unlock.ⵠΔΔⵠΔ[v2752] = 1;
            }
          }
        }
      }
      v2750 = ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ;
      v2751 = 0;
      for (; p1689.books.length > v2751; v2751++) {
        if ((v2753 = p1689.books[v2751]) > 0) {
          for (v2752 = 0; v2750.length > v2752; v2752++) {
            if (v2751 === v2750[v2752].id) {
              vThis3.unlock.ⵠᐃΔⵠᐃ[v2752] = 1;
            }
          }
        }
      }
      v2750 = ⲆⵠᐃⲆ.Δⵠⵠⵠ;
      v2751 = 0;
      for (; p1689.bags.length > v2751; v2751++) {
        if ((v2753 = p1689.bags[v2751]) > 0) {
          for (v2752 = 0; v2750.length > v2752; v2752++) {
            if (v2750[v2752].id === v2751) {
              vThis3.unlock.ΔΔⲆⵠⲆ[v2752] = 1;
            }
          }
        }
      }
      v2750 = ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ;
      v2751 = 0;
      for (; v2751 < p1689.crates.length; v2751++) {
        v2753 = p1689.crates[v2751];
        if (v2753 > 0) {
          for (v2752 = 0; v2752 < v2750.length; v2752++) {
            if (v2751 === v2750[v2752].id) {
              vThis3.unlock.ⲆΔΔⲆᐃ[v2752] = 1;
              vThis3.unlock.ΔΔᐃᐃΔ[v2752] = 1;
            }
          }
        }
      }
    };
    this.ΔⵠⵠᐃⲆΔΔⲆΔ = function () {
      vWindow.ⵠᐃⵠⲆⲆⵠΔ = function () {
        f482(v2653);
        (function (p1690) {
          var v2754 = new XMLHttpRequest();
          v2754.open("GET", v3050 + "login?token=" + vUndefined5 + "&type=" + vUndefined4 + (v2262 ? "&userId=" + v2262.userId + "&userInfo=" + v2262.userInfo : ""));
          v2754.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2754.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200 && v2754.responseText !== "0") {
              p1690(JSON.parse(v2754.responseText));
            }
          };
          v2754.send();
        })(vThis3.ⵠΔⲆᐃᐃᐃᐃⲆᐃ);
      };
      if (v3058 === 1) {
        vWindow.ⵠᐃⵠⲆⲆⵠΔ();
      }
    };
    vWindow.ⵠᐃΔⲆⵠⲆⲆΔⲆ = function () {
      v2811.buttons[v2811.ⵠΔΔⲆⲆᐃⲆ].info.active = 1;
      v2811.buttons[v2811.ΔᐃⲆⲆΔⲆⲆ].info.active = 0;
      v2811.buttons[v2811.ⵠⲆΔᐃᐃΔⲆ].info.active = 0;
      f482(v2653);
    };
    this.ᐃΔᐃᐃΔ = function () {
      return v2811.buttons[v2811.ΔᐃⲆⲆΔⲆⲆ].info.active;
    };
    this.buttons[v2652] = f418(461, 105, 0, [Δⵠ.ΔᐃᐃⵠⵠᐃΔ, Δⵠ.ΔⲆⲆⲆΔᐃⲆ, Δⵠ.ᐃΔΔⵠⲆⵠⲆ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f482(v2660);
      } else {
        f482(v2655);
      }
    }, -100, 80, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(157, 158, 0, [Δⵠ.ⲆᐃΔⵠⵠⵠΔ, Δⵠ.ΔΔΔΔΔᐃⵠ, Δⵠ.ⲆΔΔⵠᐃᐃⵠ], v2726, 0, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, -35, 125, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2658;
    this.buttons[v2652] = f418(66, 73, 0, [Δⵠ.ⵠⵠᐃΔᐃΔⲆ, Δⵠ.ⲆⵠΔⵠⵠⲆⲆ, Δⵠ.ΔΔᐃᐃⵠΔⲆ], v2726, 0, vVVVVUndefined21, -68, 340, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2658;
    this.buttons[v2652] = f418(66, 73, 0, [Δⵠ.ⵠⵠⲆⲆΔᐃᐃ, Δⵠ.ᐃᐃΔⵠΔΔΔ, Δⵠ.ΔΔⲆⵠⵠⵠΔ], v2726, 0, undefined, -30, 340, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2658;
    this.ΔⲆⲆⲆΔⵠⵠΔⲆ = v2652;
    this.buttons[v2652] = f418(97, 66, 0, [Δⵠ.ΔΔᐃⵠⲆᐃΔ, Δⵠ.ⲆⵠⵠΔⲆΔᐃ, Δⵠ.ΔⲆⵠΔᐃᐃⲆ], v2726, 0, function () {
      f528(vVVUndefined202, undefined, v2811.ⲆⵠⵠΔⲆΔΔ);
    }, -14, 151, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⲆⲆⲆⲆⲆⲆⲆ = v2652;
    this.buttons[v2652] = f418(135, 66, 0, [Δⵠ.ΔΔⵠⵠᐃⵠⲆ, Δⵠ.ᐃΔΔΔⵠΔΔ, Δⵠ.ΔⵠⲆⵠᐃⵠΔ], v2726, 0, function () {
      f528(vVUndefined22, vVUndefined11, v2811.ⲆⲆⲆⲆⲆⲆⲆ);
    }, 37.5, 151, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ᐃⲆΔⲆᐃΔΔ = v2652;
    this.buttons[v2652] = f418(160, 66, 0, [Δⵠ.ᐃᐃⵠᐃΔΔᐃ, Δⵠ.ᐃⵠⵠⲆⵠⵠⵠ, Δⵠ.ⲆᐃΔΔΔⲆᐃ], v2726, 0, function () {
      f528(undefined, vVVUndefined202, v2811.ᐃⲆΔⲆᐃΔΔ);
    }, 107.5, 151, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⲆⵠⵠΔⲆΔΔ = v2652;
    this.buttons[v2652] = f418(207, 66, 0, [Δⵠ.ᐃΔᐃΔᐃⲆΔ, Δⵠ.ⵠⵠⵠⵠⵠΔΔ, Δⵠ.ⲆⵠΔⲆⲆⵠΔ], v2726, 0, function () {
      f528(undefined, undefined, v2811.ⲆⵠⵠΔⲆΔΔ);
    }, 190.5, 151, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ΔⵠᐃⵠΔᐃⵠ = v2652;
    this.buttons[v2652] = f418(144, 66, 0, [Δⵠ.ΔⵠⲆⲆΔΔⵠ, Δⵠ.ᐃⲆᐃⵠᐃΔⵠ, Δⵠ.ⲆΔⲆΔⲆᐃⲆ], v2726, 0, function () {
      f528(v2811.ΔⵠᐃⵠΔᐃⵠ);
    }, 103.5, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⵠⲆⵠᐃᐃᐃⵠ = v2652;
    this.buttons[v2652] = f418(124, 66, 0, [Δⵠ.ᐃᐃΔⲆⵠⵠⵠ, Δⵠ.ΔⲆΔⲆΔⵠΔ, Δⵠ.ⲆΔΔⵠⵠⲆⵠ], v2726, 0, function () {
      f528(v2811.ⵠⲆⵠᐃᐃᐃⵠ);
    }, 177.5, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⵠⵠⵠⲆⲆΔΔ = v2652;
    this.buttons[v2652] = f418(104, 66, 0, [Δⵠ.ⵠᐃΔⵠΔᐃᐃ, Δⵠ.ⵠΔⵠⵠⲆⵠΔ, Δⵠ.ΔᐃⵠⲆⵠⵠⲆ], v2726, 0, function () {
      f528(v2811.ⵠⵠⵠⲆⲆΔΔ);
    }, 242, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ΔᐃΔᐃⵠΔΔ = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ΔΔⵠⵠᐃΔⲆ, Δⵠ.ⲆᐃᐃⲆⲆⲆᐃ, Δⵠ.ΔⵠΔᐃⲆⲆⲆ], v2726, 0, function () {
      f528(vVVUndefined21, vVUndefined21, undefined, v2811.ΔᐃΔᐃⵠΔΔ);
    }, -185, 528, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⲆⲆⵠᐃⲆⲆⵠ = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⲆⲆⵠᐃᐃᐃⵠ, Δⵠ.ⲆΔΔΔⵠΔΔ, Δⵠ.ⲆⲆⵠΔᐃⲆⵠ], v2726, 0, function () {
      f528(undefined, undefined, undefined, v2811.ⲆⲆⵠᐃⲆⲆⵠ);
    }, -149, 528, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⵠⵠΔⲆⵠᐃⵠ = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⵠⵠⵠΔΔⲆΔ, Δⵠ.ᐃᐃⵠⵠΔⲆᐃ, Δⵠ.ΔᐃΔⲆⲆⲆᐃ], v2726, 0, function () {
      f528(undefined, vVVUndefined20, vVVVUndefined212, v2811.ⵠⵠΔⲆⵠᐃⵠ);
    }, -113, 528, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ΔΔⵠᐃⲆΔΔ = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ΔⲆⵠⲆΔΔⵠ, Δⵠ.ⵠⲆᐃᐃΔΔⵠ, Δⵠ.ΔΔᐃⲆΔⲆΔ], v2726, 0, function () {
      f528(vVVVUndefined117, vVVUndefined20, undefined, v2811.ΔΔⵠᐃⲆΔΔ);
    }, -77, 528, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⲆⲆᐃⵠⵠᐃΔ = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⲆⵠⲆΔⵠΔΔ, Δⵠ.ⲆᐃⲆᐃᐃᐃΔ, Δⵠ.ᐃⵠⵠⵠⵠⵠᐃ], v2726, 0, function () {
      f528(vVUndefined21, undefined, undefined, v2811.ⲆⲆᐃⵠⵠᐃΔ);
    }, -41, 528, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ΔⲆⲆⵠᐃⲆⲆ = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⵠⵠⲆⵠⵠᐃⵠ, Δⵠ.ⵠⵠⲆᐃⵠⵠⵠ, Δⵠ.ⲆⲆΔⲆΔᐃⲆ], v2726, 0, function () {
      f528(undefined, undefined, undefined, v2811.ΔⲆⲆⵠᐃⲆⲆ);
    }, -5, 528, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.buttons[v2652] = f418(232, 352, 0, [Δⵠ.ΔΔᐃⲆᐃⲆⲆ, Δⵠ.ᐃΔⲆᐃⲆⲆᐃ, Δⵠ.ᐃⵠᐃΔΔᐃⲆ], v2726, 0, function () {
      f534(300);
    }, -330, 135, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2660;
    this.buttons[v2652] = f418(232, 352, 0, [Δⵠ.ⵠⲆⲆᐃⵠⲆⲆ, Δⵠ.ᐃⵠⲆⵠⵠᐃᐃ, Δⵠ.ᐃⲆⲆΔᐃᐃᐃ], v2726, 0, function () {
      f534(600);
    }, -195, 135, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2660;
    this.buttons[v2652] = f418(243, 374, 0, [Δⵠ.ⲆΔⲆΔⵠⵠΔ, Δⵠ.ⵠᐃΔⲆⵠⵠⲆ, Δⵠ.ⵠΔⲆᐃᐃΔⲆ], v2726, 0, function () {
      f534(2600);
    }, -60, 130, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2660;
    this.buttons[v2652] = f418(232, 352, 0, [Δⵠ.ⲆᐃⲆΔᐃΔΔ, Δⵠ.ᐃᐃⵠᐃΔΔⵠ, Δⵠ.ᐃΔⲆⵠⵠΔΔ], v2726, 0, function () {
      f534(7000);
    }, 78, 135, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2660;
    this.buttons[v2652] = f418(243, 374, 0, [Δⵠ.ᐃⲆᐃᐃⵠΔᐃ, Δⵠ.ᐃᐃΔⲆΔⲆⵠ, Δⵠ.ΔⵠΔⵠΔᐃᐃ], v2726, 0, function () {
      f534(20000);
    }, 213, 130, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2660;
    this.buttons[v2652] = f418(58, 64, 0, [Δⵠ.ⲆⲆᐃⲆⲆⲆⵠ, Δⵠ.ᐃΔⵠΔᐃᐃⵠ, Δⵠ.ᐃⵠⲆΔᐃⵠⵠ], v2726, 0, function () {
      f482(v2657);
    }, 300, 88, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2660;
    this.buttons[v2652] = f418(323, 112, 0, [Δⵠ.ⲆΔⵠⵠⵠᐃΔ, Δⵠ.ⲆⲆᐃΔᐃⲆⵠ, Δⵠ.ᐃⲆᐃᐃΔᐃΔ], v2726, 0, function () {
      f482(v2669);
      v2761.ΔⲆᐃⲆⵠ();
    }, -315, 185, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2656;
    this.buttons[v2652] = f418(323, 112, 0, [Δⵠ.ᐃⲆΔⲆᐃᐃⲆ, Δⵠ.ⵠⲆᐃΔⲆᐃⲆ, Δⵠ.ΔⵠΔⲆⵠⲆⲆ], v2726, 0, function () {
      f482(v2673);
      v2766.ΔⲆᐃⲆⵠ();
    }, -315, 321, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2656;
    this.buttons[v2652] = f418(323, 112, 0, [Δⵠ.ⲆⵠⵠⵠΔᐃⵠ, Δⵠ.ᐃᐃⵠⲆⲆⲆⵠ, Δⵠ.ⵠⲆⵠⵠᐃⲆⵠ], v2726, 0, function () {
      f482(v2671);
      v2762.ΔⲆᐃⲆⵠ();
    }, 153, 185, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2656;
    this.buttons[v2652] = f418(323, 112, 0, [Δⵠ.ΔⵠⵠⲆΔⵠᐃ, Δⵠ.ⵠⲆΔⲆΔΔΔ, Δⵠ.ΔⲆΔⲆⵠΔⲆ], v2726, 0, function () {
      f482(v2672);
      v2763.ΔⲆᐃⲆⵠ();
    }, 153, 321, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2656;
    this.buttons[v2652] = f418(323, 112, 0, [Δⵠ.ᐃΔΔⲆᐃⲆⲆ, Δⵠ.ⲆⵠᐃΔⵠΔᐃ, Δⵠ.ᐃⵠΔⲆⲆⲆᐃ], v2726, 0, function () {
      f482(v2670);
      v2764.ΔⲆᐃⲆⵠ();
    }, 153, 463, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2656;
    this.buttons[v2652] = f418(323, 112, 0, [Δⵠ.ⵠΔΔΔᐃⵠΔ, Δⵠ.ⲆΔᐃΔⵠᐃᐃ, Δⵠ.ΔⲆΔΔⵠⵠⲆ], v2726, 0, function () {
      f482(v2674);
      v2765.ΔⲆᐃⲆⵠ();
    }, -315, 463, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2656;
    this.buttons[v2652] = f418(327, 117, 0, [Δⵠ.ΔΔᐃΔᐃⵠⲆ, Δⵠ.ᐃΔΔⲆᐃⵠⲆ, Δⵠ.ⵠⲆᐃⲆⲆⲆⵠ], v2726, 0, function () {
      f482(v2680);
    }, 155, 70, v2720, v2729);
    this.buttons[v2652++].view = v2653;
    this.buttons[v2652] = f418(130, 129, 0, [Δⵠ.ⲆⲆⲆᐃⵠᐃⵠ, Δⵠ.ᐃΔⲆᐃᐃᐃⵠ, Δⵠ.ΔⵠⵠΔᐃⲆΔ], v2726, 0, function () {
      f481(v2661, v2728, "none");
      f482(v2657);
    }, 10, 40, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2661;
    this.buttons[v2652] = f418(130, 129, 0, [Δⵠ.ⲆⲆⲆᐃⵠᐃⵠ, Δⵠ.ᐃΔⲆᐃᐃᐃⵠ, Δⵠ.ΔⵠⵠΔᐃⲆΔ], v2726, 0, function () {
      f481(v2662, v2728, "none");
      f482(v2657);
    }, 10, 40, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2662;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 200, 140, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2677;
    this.buttons[v2652] = f418(524, 110, 0, [Δⵠ.ⲆⵠⲆΔᐃΔΔ, Δⵠ.ᐃᐃΔⲆᐃᐃⵠ, Δⵠ.ᐃⵠΔⲆᐃΔⲆ], v2726, 0, function () {
      f533("Atlanta");
    }, -265, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2677;
    this.buttons[v2652] = f418(523, 110, 0, [Δⵠ.ᐃᐃΔⵠΔⵠⲆ, Δⵠ.ⵠⲆᐃⲆΔΔᐃ, Δⵠ.ⵠᐃⵠⲆᐃΔⵠ], v2726, 0, function () {
      f533("LosAngeles");
    }, 5, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2677;
    this.buttons[v2652] = f418(344, 110, 0, [Δⵠ.ᐃⵠⵠΔⵠᐃⵠ, Δⵠ.ᐃⵠΔΔⲆΔⵠ, Δⵠ.ᐃⵠᐃᐃⵠⵠⵠ], v2726, 0, function () {
      f533("Frankfurt");
    }, -265, 365, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2677;
    this.buttons[v2652] = f418(344, 110, 0, [Δⵠ.ⲆΔⲆᐃⲆΔᐃ, Δⵠ.ᐃᐃΔΔⵠᐃⵠ, Δⵠ.ΔΔᐃᐃΔⲆΔ], v2726, 0, function () {
      f533("Osaka");
    }, 100, 365, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2677;
    this.buttons[v2652] = f418(344, 110, 0, [Δⵠ.ΔⲆᐃⵠⵠᐃⲆ, Δⵠ.ΔⲆⲆⲆΔⵠⲆ, Δⵠ.ⲆΔΔⲆⵠⵠⵠ], v2726, 0, function () {
      f533("Sydney");
    }, -86, 365, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2677;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2677);
    }, 224, 140, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2678;
    this.buttons[v2652] = f418(230, 352, 0, [Δⵠ.ⲆⲆΔⵠᐃᐃΔ, Δⵠ.ⵠⵠΔᐃⲆΔΔ, Δⵠ.ΔᐃᐃΔⲆⵠⲆ], v2726, 0, function () {
      f534(350);
    }, -280, 240, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2678;
    this.buttons[v2652] = f418(230, 352, 0, [Δⵠ.ⵠⵠⲆⲆᐃᐃᐃ, Δⵠ.ⵠⲆΔΔᐃⵠΔ, Δⵠ.ⵠⵠᐃⵠⵠⵠⵠ], v2726, 0, function () {
      f534(700);
    }, -130, 240, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2678;
    this.buttons[v2652] = f418(230, 352, 0, [Δⵠ.ᐃΔⲆΔⵠᐃΔ, Δⵠ.ΔⲆΔⵠⵠᐃⵠ, Δⵠ.ΔⵠΔΔᐃⲆᐃ], v2726, 0, function () {
      f534(1400);
    }, 20, 240, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2678;
    this.buttons[v2652] = f418(230, 352, 0, [Δⵠ.ⵠⵠⲆΔΔⵠⵠ, Δⵠ.ᐃᐃᐃⲆΔⵠΔ, Δⵠ.ⲆΔΔᐃᐃⲆΔ], v2726, 0, function () {
      f534(3000);
    }, 170, 240, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2678;
    this.buttons[v2652] = f418(105, 119, 0, [Δⵠ.ⲆΔᐃⲆᐃⲆᐃ, Δⵠ.ᐃⵠᐃᐃⲆΔⵠ, Δⵠ.ⵠⲆᐃⵠⲆΔΔ], v2726, 0, function () {
      const v2755 = document.getElementById("serverAddressInput").value.split(" : ");
      const v2756 = vWindow.document.createElement("textarea");
      v2756.value = v2266 + "?server=" + v2755[1] + "&region=" + v2755[0];
      vWindow.document.body.appendChild(v2756);
      v2756.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2756);
    }, 105, 310, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2679;
    this.buttons[v2652] = f418(105, 119, 0, [Δⵠ.ⲆΔᐃᐃⲆΔᐃ, Δⵠ.ᐃⲆⵠΔᐃⲆΔ, Δⵠ.ⵠᐃⵠⲆᐃᐃᐃ], v2726, 0, function () {
      (function () {
        var v2757 = new XMLHttpRequest();
        v2757.open("GET", v3050 + "rebootServer?token=" + vUndefined5 + "&userid=" + vVVUndefined19);
        v2757.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2757.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2757.responseText !== "0") {
            const v2758 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2266 + "?server=" + v2758[1] + "&region=" + v2758[0];
          }
        };
        v2757.send();
      })();
    }, 235, 310, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2679;
    this.buttons[v2652] = f418(105, 119, 0, [Δⵠ.ⲆᐃⵠⵠᐃⵠⲆ, Δⵠ.ⲆΔΔⵠΔⵠⲆ, Δⵠ.ΔⵠΔⲆᐃⲆⵠ], v2726, 0, function () {
      (function () {
        var v2759 = new XMLHttpRequest();
        v2759.open("GET", v3050 + "restartServer?token=" + vUndefined5 + "&userid=" + vVVUndefined19);
        v2759.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2759.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2759.responseText !== "0") {
            const v2760 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2266 + "?server=" + v2760[1] + "&region=" + v2760[0];
          }
        };
        v2759.send();
      })();
    }, 170, 310, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2679;
    this.buttons[v2652] = f418(204, 115, 0, [Δⵠ.ⵠᐃⵠⵠⵠⲆᐃ, Δⵠ.ⲆⲆΔⲆⵠⵠΔ, Δⵠ.ⵠⲆⲆΔⵠⵠⵠ], v2726, 0, function () {
      vWindow.open("./commands.html", "_blank");
    }, -265, 490, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2679;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ⲆΔΔⵠⵠⵠⲆ, Δⵠ.ᐃⲆᐃⵠⲆᐃⵠ, Δⵠ.ⵠⲆᐃⵠᐃΔⵠ], v2726, 0, function () {
      f482(v2663);
    }, -210, 170, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ⵠⵠΔⲆⵠΔᐃ, Δⵠ.ΔᐃΔΔᐃⲆΔ, Δⵠ.ⵠΔⵠᐃᐃᐃᐃ], v2726, 0, function () {
      f482(v2666);
    }, 70, 170, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ΔⲆᐃⵠⲆⲆⲆ, Δⵠ.ⵠⲆⵠⵠⲆⲆΔ, Δⵠ.ⲆΔⵠⵠⵠⲆᐃ], v2726, 0, function () {
      f482(v2664);
    }, 70, 204, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ᐃᐃⵠΔⵠᐃᐃ, Δⵠ.ⵠᐃΔⵠⲆⲆⵠ, Δⵠ.ᐃᐃᐃΔⲆᐃᐃ], v2726, 0, function () {
      f482(v2667);
    }, -210, 204, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ᐃᐃⵠΔⵠᐃᐃ, Δⵠ.ⵠᐃΔⵠⲆⲆⵠ, Δⵠ.ᐃᐃᐃΔⲆᐃᐃ], v2726, 0, function () {
      f482(v2668);
    }, 70, 238, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ᐃᐃⵠΔⵠᐃᐃ, Δⵠ.ⵠᐃΔⵠⲆⲆⵠ, Δⵠ.ᐃᐃᐃΔⲆᐃᐃ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f529(0, 300);
      } else {
        f482(v2655);
      }
    }, 307, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ᐃⵠⲆⲆΔⲆⲆ, Δⵠ.ᐃΔᐃⵠⲆᐃᐃ, Δⵠ.ⲆΔᐃⲆⵠᐃⲆ], v2726, 0, function () {
      f482(v2665);
    }, -210, 238, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(145, 69, 0, [Δⵠ.ᐃⵠⲆⲆΔⲆⲆ, Δⵠ.ᐃΔᐃⵠⲆᐃᐃ, Δⵠ.ⲆΔᐃⲆⵠᐃⲆ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f529(1, 600);
      } else {
        f482(v2655);
      }
    }, 307, 239, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    this.buttons[v2652] = f418(192, 101, 0, [Δⵠ.ⲆᐃᐃΔΔⵠⵠ, Δⵠ.ⵠⲆᐃⵠⵠᐃᐃ, Δⵠ.ᐃⲆⲆΔⲆⵠΔ], v2726, 0, function () {
      f526();
    }, -100, 250, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2676;
    this.buttons[v2652] = f418(192, 104, 0, [Δⵠ.ΔΔᐃᐃⲆᐃⵠ, Δⵠ.ΔΔΔᐃᐃΔᐃ, Δⵠ.ᐃⵠⲆΔᐃΔᐃ], v2726, 0, function () {
      f526();
    }, -100, 239, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2675;
    this.buttons[v2652] = f418(192, 101, 0, [Δⵠ.ⵠᐃΔⵠⵠⲆⵠ, Δⵠ.ⵠΔΔΔⲆΔᐃ, Δⵠ.ⲆⵠᐃΔΔⵠᐃ], v2726, 0, function () {
      f482(v2654);
    }, 10, 250, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2676;
    this.buttons[v2652] = f418(192, 104, 0, [Δⵠ.ΔΔᐃⵠᐃⵠⲆ, Δⵠ.ⲆᐃᐃⲆⵠⵠⲆ, Δⵠ.ΔⵠᐃⲆΔᐃΔ], v2726, 0, function () {
      f482(v2654);
    }, 10, 239, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2675;
    ⵠⵠᐃΔⲆ = [];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ᐃΔⵠᐃᐃ] = [Δⵠ.ⲆΔⲆⵠⲆⵠᐃ, Δⵠ.ⲆᐃᐃⵠⲆᐃⵠ, Δⵠ.ⵠΔᐃΔᐃΔⵠ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ᐃΔΔⵠ] = [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ΔΔⵠΔ] = [Δⵠ.ΔⵠΔⵠⵠΔᐃ, Δⵠ.ⵠⵠᐃⵠᐃⲆⲆ, Δⵠ.ⲆΔᐃⵠΔΔⲆ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ᐃΔᐃΔ] = [Δⵠ.ΔⵠᐃⵠⲆΔᐃ, Δⵠ.ΔⵠᐃΔⵠΔΔ, Δⵠ.ΔⲆⵠⲆⵠⲆⲆ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ⵠⲆᐃᐃ] = [Δⵠ.ⵠⵠΔΔⵠᐃⲆ, Δⵠ.ΔᐃΔⵠⲆⲆⲆ, Δⵠ.ⲆᐃⲆⵠⲆⲆⵠ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ⵠΔⲆⵠ] = [Δⵠ.ΔⲆⲆⲆΔΔⵠ, Δⵠ.ⵠⲆᐃⵠⲆⵠᐃ, Δⵠ.ΔᐃᐃⵠΔΔΔ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ⵠⲆᐃΔ] = [Δⵠ.ᐃΔᐃΔΔΔᐃ, Δⵠ.ᐃⵠⲆⲆᐃΔᐃ, Δⵠ.ⵠᐃΔΔⵠΔⵠ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ΔᐃΔⲆΔ] = [Δⵠ.ΔᐃᐃⵠⵠᐃⲆ, Δⵠ.Ⲇⵠᐃᐃⵠᐃᐃ, Δⵠ.ⵠⵠᐃⲆᐃⵠⲆ];
    ⵠⵠᐃΔⲆ[ⲆⲆⲆ.ⲆᐃⵠᐃᐃⵠΔ] = [Δⵠ.ΔⲆⲆᐃⲆΔᐃ, Δⵠ.ΔⵠΔⲆⵠΔΔ, Δⵠ.ᐃⲆᐃⵠⵠⵠᐃ];
    ⲆΔⵠⵠᐃⵠΔ = v2652;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVVUndefined117, -29, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVUndefined19, 65, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined202, 159, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⲆΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆᐃⲆᐃⲆ, Δⵠ.ⵠⵠⵠΔⲆΔⵠ], v2726, 0, vVVVUndefined20, -61, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⵠⲆⲆᐃΔⲆΔ, Δⵠ.ⲆᐃⲆⵠⵠⵠⲆ, Δⵠ.ⲆⲆΔⲆΔᐃⵠ], v2726, 0, undefined, 260, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2656);
    }, -320, 470, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2669;
    ⲆΔⲆΔⲆⵠᐃⵠᐃ = v2652;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVVUndefined20, -29, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⲆΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆᐃⲆᐃⲆ, Δⵠ.ⵠⵠⵠΔⲆΔⵠ], v2726, 0, undefined, -61, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⵠⲆⲆᐃΔⲆΔ, Δⵠ.ⲆᐃⲆⵠⵠⵠⲆ, Δⵠ.ⲆⲆΔⲆΔᐃⵠ], v2726, 0, undefined, 260, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2656);
    }, -320, 470, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2673;
    ᐃⵠΔΔⲆᐃⲆⲆΔ = v2652;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVVUndefined117, -29, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVVUndefined21, 65, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined202, 65, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined21, 159, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⲆΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆᐃⲆᐃⲆ, Δⵠ.ⵠⵠⵠΔⲆΔⵠ], v2726, 0, undefined, -61, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⵠⲆⲆᐃΔⲆΔ, Δⵠ.ⲆᐃⲆⵠⵠⵠⲆ, Δⵠ.ⲆⲆΔⲆΔᐃⵠ], v2726, 0, vVVVUndefined212, 260, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2656);
    }, -320, 470, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2674;
    ⲆΔⲆⵠᐃΔⵠⲆⵠ = v2652;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVUndefined212, -29, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVUndefined117, 65, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVUndefined21, 65, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVUndefined21, 65, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⲆΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆᐃⲆᐃⲆ, Δⵠ.ⵠⵠⵠΔⲆΔⵠ], v2726, 0, undefined, -61, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⵠⲆⲆᐃΔⲆΔ, Δⵠ.ⲆᐃⲆⵠⵠⵠⲆ, Δⵠ.ⲆⲆΔⲆΔᐃⵠ], v2726, 0, undefined, 260, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2656);
    }, -320, 470, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2671;
    ΔⵠΔΔⲆᐃⵠⵠⲆ = v2652;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVVUndefined117, -29, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVUndefined11, -29, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined212, 65, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVUndefined20, 65, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined21, 159, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVVVUndefined117, 159, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⲆΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆᐃⲆᐃⲆ, Δⵠ.ⵠⵠⵠΔⲆΔⵠ], v2726, 0, vVVVUndefined21, -61, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⵠⲆⲆᐃΔⲆΔ, Δⵠ.ⲆᐃⲆⵠⵠⵠⲆ, Δⵠ.ⲆⲆΔⲆΔᐃⵠ], v2726, 0, vVVUndefined21, 260, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2656);
    }, -320, 470, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2672;
    ⲆⲆⵠᐃⲆΔᐃⵠΔ = v2652;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, -29, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined117, 65, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 65, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, vVVUndefined212, 159, 205, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 300, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(178, 182, 0, [Δⵠ.ⲆΔⵠⵠ, Δⵠ.ᐃⵠⲆΔ, Δⵠ.ΔⵠⲆΔ], v2726, 0, undefined, 159, 395, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⲆΔΔᐃᐃΔⲆ, Δⵠ.ᐃⲆⲆᐃⲆᐃⲆ, Δⵠ.ⵠⵠⵠΔⲆΔⵠ], v2726, 0, undefined, -61, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(39, 122, 0, [Δⵠ.ⵠⲆⲆᐃΔⲆΔ, Δⵠ.ⲆᐃⲆⵠⵠⵠⲆ, Δⵠ.ⲆⲆΔⲆΔᐃⵠ], v2726, 0, vVUndefined11, 260, 315, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2656);
    }, -320, 470, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2670;
    this.buttons[v2652] = f418(260, 260, 0, [Δⵠ.ⲆᐃⲆⲆⵠⵠⲆ, Δⵠ.ⵠΔΔΔⲆΔⲆ, Δⵠ.ⲆⵠᐃⲆⲆⲆⲆ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f527(3, 50);
      } else {
        f482(v2655);
      }
    }, -65, 197, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2666;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 309, 180, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2666;
    this.buttons[v2652] = f418(260, 260, 0, [Δⵠ.ᐃⲆᐃᐃⵠᐃⵠ, Δⵠ.ᐃᐃⲆⲆⵠΔⵠ, Δⵠ.ⲆΔΔⲆⲆⲆΔ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f527(0, 100);
      } else {
        f482(v2655);
      }
    }, -65, 197, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2663;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 309, 180, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2663;
    this.buttons[v2652] = f418(260, 260, 0, [Δⵠ.ΔᐃⲆⵠⲆᐃⵠ, Δⵠ.ΔⵠΔΔᐃⵠⲆ, Δⵠ.ΔⵠⵠⵠⵠΔⵠ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f527(4, 150);
      } else {
        f482(v2655);
      }
    }, -65, 197, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2664;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 309, 180, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2664;
    this.buttons[v2652] = f418(260, 260, 0, [Δⵠ.ᐃⲆⵠⲆΔΔⵠ, Δⵠ.ᐃᐃΔⵠΔⵠΔ, Δⵠ.ΔᐃΔΔⲆΔᐃ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f527(1, 300);
      } else {
        f482(v2655);
      }
    }, -65, 197, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2667;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 309, 180, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2667;
    this.buttons[v2652] = f418(260, 260, 0, [Δⵠ.ⵠⵠⵠΔⲆⲆᐃ, Δⵠ.ΔⲆΔⲆΔΔΔ, Δⵠ.ΔⲆⲆᐃⲆⵠΔ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f527(2, 600);
      } else {
        f482(v2655);
      }
    }, -65, 197, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2665;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 309, 180, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2665;
    this.buttons[v2652] = f418(260, 260, 0, [Δⵠ.ᐃⲆⵠⲆΔΔⵠ, Δⵠ.ᐃᐃΔⵠΔⵠΔ, Δⵠ.ΔᐃΔΔⲆΔᐃ], v2726, 0, function () {
      if (vThis3.ᐃΔᐃᐃΔ()) {
        f527(5, 300);
      } else {
        f482(v2655);
      }
    }, -65, 197, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2668;
    this.buttons[v2652] = f418(115, 73, 0, [Δⵠ.ⵠᐃⵠⲆⲆ, Δⵠ.ΔⵠⲆⲆⲆ, Δⵠ.ᐃⲆⲆΔⲆ], v2726, 0, function () {
      f482(v2657);
    }, 309, 180, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2668;
    var vV2652 = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⵠⲆᐃΔᐃⵠᐃ, Δⵠ.ⵠⵠᐃΔⵠᐃⵠ, Δⵠ.ⵠⲆⲆⲆᐃᐃΔ], v2726, 0, function () {
      f487(vVUndefined11, 0);
    }, -305, 132, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26522 = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ΔⵠΔΔⲆᐃΔ, Δⵠ.ᐃᐃⵠⵠΔⵠΔ, Δⵠ.ᐃⵠΔⲆⲆΔⵠ], v2726, 0, function () {
      f487(vVVVUndefined117, 1);
    }, -273, 132, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26523 = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⵠΔᐃⵠᐃᐃⵠ, Δⵠ.ᐃΔᐃᐃⵠᐃⵠ, Δⵠ.ΔᐃΔᐃⵠⲆⲆ], v2726, 0, function () {
      f487(vVVVVUndefined117, 2);
    }, -241, 132, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26524 = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ᐃᐃⲆⵠΔᐃⲆ, Δⵠ.ⲆΔⲆΔⵠⵠⲆ, Δⵠ.ⲆⲆⵠᐃᐃⵠΔ], v2726, 0, function () {
      f487(vVVUndefined212, 3);
    }, -305, 165, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26525 = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ⲆⵠΔᐃΔΔⵠ, Δⵠ.ᐃᐃⵠⵠΔΔΔ, Δⵠ.ⲆᐃⲆⵠⵠⲆⲆ], v2726, 0, function () {
      f487(undefined, 4);
    }, -273, 165, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26526 = v2652;
    this.buttons[v2652] = f418(46, 51, 0, [Δⵠ.ᐃΔᐃⲆᐃᐃᐃ, Δⵠ.ᐃⵠΔⲆⲆΔΔ, Δⵠ.ΔΔᐃᐃⲆⵠⲆ], v2726, 0, function () {
      f487(vVUndefined22, 5);
    }, -241, 165, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26527 = v2652;
    this.buttons[v2652] = f418(460, 73, 0, [Δⵠ.ΔⲆᐃⲆᐃᐃΔ, Δⵠ.ᐃᐃᐃⲆΔⲆΔ, Δⵠ.ΔⲆᐃⵠᐃᐃⵠ], v2726, 0, function () {
      f487(-1);
    }, -180, 170, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26528 = v2652;
    this.buttons[v2652] = f418(222, 68, 0, [Δⵠ.ᐃᐃᐃⵠΔᐃΔ, Δⵠ.ΔΔⲆΔᐃᐃⲆ, Δⵠ.ᐃᐃⵠⵠⲆⲆⲆ], v2726, 0, function () {
      f487(0);
    }, -180, 215, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV26529 = v2652;
    this.buttons[v2652] = f418(222, 68, 0, [Δⵠ.ⵠⵠⵠⲆᐃΔΔ, Δⵠ.ⵠⲆⲆᐃⲆⲆᐃ, Δⵠ.ΔⲆⲆᐃΔᐃᐃ], v2726, 0, function () {
      f487(4);
    }, -180, 260, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV265210 = v2652;
    this.buttons[v2652] = f418(222, 68, 0, [Δⵠ.ΔΔⲆΔⲆⵠᐃ, Δⵠ.ᐃⲆⵠΔⵠΔⲆ, Δⵠ.ⲆⲆᐃᐃᐃΔⵠ], v2726, 0, function () {
      f487(2);
    }, -60, 215, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    var vV265211 = v2652;
    this.buttons[v2652] = f418(222, 68, 0, [Δⵠ.ⵠᐃᐃⲆΔΔΔ, Δⵠ.ᐃΔᐃⲆⵠⲆᐃ, Δⵠ.ⲆᐃΔⲆⵠⵠΔ], v2726, 0, function () {
      f487(3);
    }, -60, 260, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2654;
    this.ⵠⵠⲆΔⲆⵠΔ = v2652;
    this.buttons[v2652] = f418(143, 66, 0, [Δⵠ.ᐃᐃᐃⵠΔΔⵠ, Δⵠ.ⵠⵠᐃΔᐃᐃΔ, Δⵠ.ᐃⵠⲆΔⲆⲆΔ], v2726, 0, function () {
      f528(vVVVUndefined2022, v2811.ⵠⵠⲆΔⲆⵠΔ);
    }, -298, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ᐃⲆᐃⲆΔⲆΔ = v2652;
    this.buttons[v2652] = f418(104, 66, 0, [Δⵠ.ⲆΔⵠⵠΔΔⲆ, Δⵠ.ⵠᐃᐃᐃᐃΔⲆ, Δⵠ.ⲆⵠⲆᐃⲆⵠᐃ], v2726, 0, function () {
      f528(undefined, v2811.ᐃⲆᐃⲆΔⲆΔ);
    }, -223, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ᐃᐃⵠΔⲆⵠⲆ = v2652;
    this.buttons[v2652] = f418(110, 66, 0, [Δⵠ.ᐃΔⲆⵠᐃΔΔ, Δⵠ.ᐃⲆⵠΔⵠⵠⲆ, Δⵠ.ⵠⲆⲆⵠⲆⲆⲆ], v2726, 0, function () {
      f528(vVVVUndefined21, v2811.ᐃᐃⵠΔⲆⵠⲆ);
    }, -168, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ⵠⲆⲆΔΔᐃΔ = v2652;
    this.buttons[v2652] = f418(88, 66, 0, [Δⵠ.ⲆⵠᐃΔⵠⲆⵠ, Δⵠ.ΔΔⵠΔᐃⵠΔ, Δⵠ.ⲆⵠⲆⵠⵠΔⲆ], v2726, 0, function () {
      f528(vVVVUndefined117, v2811.ⵠⲆⲆΔΔᐃΔ);
    }, -110, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.ᐃᐃⲆᐃⲆⲆᐃ = v2652;
    this.buttons[v2652] = f418(88, 66, 0, [Δⵠ.ΔΔΔΔᐃⵠΔ, Δⵠ.ⵠᐃⵠⵠⲆⲆⲆ, Δⵠ.ΔⲆⵠⵠᐃⵠⲆ], v2726, 0, function () {
      f528(undefined, v2811.ᐃᐃⲆᐃⲆⲆᐃ);
    }, -63, 110, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2659;
    this.buttons[v2652] = f418(86, 44, 0, [Δⵠ.ⲆⵠⵠᐃⲆⵠΔ, Δⵠ.ᐃⲆᐃⲆᐃⵠⲆ, Δⵠ.ΔΔΔⵠⲆΔⵠ], v2726, 0, function () {
      vWindow.open("./terms.html", "_blank");
    }, 349, 290, v2724 | v2722, v2728);
    this.buttons[v2652++].view = v2657;
    var v2761 = new o(ⲆⵠᐃⲆ.ᐃⵠⲆΔⵠ, ⲆΔⵠⵠᐃⵠΔ, function (p1691) {
      v2811.ⲆᐃⵠⲆ = p1691;
      if (v2811.unlock.ⲆᐃⵠⲆ[p1691] === 1) {
        ᐃⵠΔΔ.set("starve_skin", "" + p1691, {
          expires: 30
        });
      }
    }, this.ⲆᐃⵠⲆ, this.unlock.ⲆᐃⵠⲆ);
    var v2762 = new o(ⲆⵠᐃⲆ.Δⵠⵠⵠ, ⲆΔⲆⵠᐃΔⵠⲆⵠ, function (p1692) {
      v2811.ΔΔⲆⵠⲆ = p1692;
      if (v2811.unlock.ΔΔⲆⵠⲆ[p1692] === 1) {
        ᐃⵠΔΔ.set("starve_bag", "" + p1692, {
          expires: 30
        });
      }
    }, this.ΔΔⲆⵠⲆ, this.unlock.ΔΔⲆⵠⲆ);
    var v2763 = new o(ⲆⵠᐃⲆ.ⵠⲆΔⲆⲆ, ΔⵠΔΔⲆᐃⵠⵠⲆ, function (p1693) {
      v2811.ⵠᐃΔⵠᐃ = p1693;
      if (v2811.unlock.ⵠᐃΔⵠᐃ[p1693] === 1) {
        ᐃⵠΔΔ.set("starve_book", "" + p1693, {
          expires: 30
        });
      }
    }, this.ⵠᐃΔⵠᐃ, this.unlock.ⵠᐃΔⵠᐃ);
    var v2764 = new o(ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ, ⲆⲆⵠᐃⲆΔᐃⵠΔ, function (p1694) {
      v2811.ΔΔᐃᐃΔ = p1694;
      if (v2811.unlock.ΔΔᐃᐃΔ[p1694] === 1) {
        ᐃⵠΔΔ.set("starve_dead", "" + p1694, {
          expires: 30
        });
      }
    }, this.ΔΔᐃᐃΔ, this.unlock.ΔΔᐃᐃΔ);
    var v2765 = new o(ⲆⵠᐃⲆ.ⲆⲆΔᐃᐃ, ᐃⵠΔΔⲆᐃⲆⲆΔ, function (p1695) {
      v2811.ⲆΔΔⲆᐃ = p1695;
      if (v2811.unlock.ⲆΔΔⲆᐃ[p1695] === 1) {
        ᐃⵠΔΔ.set("starve_crate", "" + p1695, {
          expires: 30
        });
      }
    }, this.ⲆΔΔⲆᐃ, this.unlock.ⲆΔΔⲆᐃ);
    var v2766 = new o(ⲆⵠᐃⲆ.ᐃΔᐃⵠⵠ, ⲆΔⲆΔⲆⵠᐃⵠᐃ, function (p1696) {
      v2811.ⵠΔΔⵠΔ = p1696;
      if (v2811.unlock.ⵠΔΔⵠΔ[p1696] === 1) {
        ᐃⵠΔΔ.set("starve_accessory", "" + p1696, {
          expires: 30
        });
      }
    }, this.ⵠΔΔⵠΔ, this.unlock.ⵠΔΔⵠΔ);
    this.ΔⲆΔΔΔᐃᐃ = function (p1697) {
      v3024.Δᐃᐃⵠ = f422(vThis3.ΔⲆ, p1697);
      for (var v2767 = 0; v2767 < vThis3.buttons.length; v2767++) {
        if (v2729 === vThis3.buttons[v2767].info.active) {
          vThis3.buttons[v2767].ⲆᐃΔⲆ(vThis3.ΔⲆ, v3024.Δᐃᐃⵠ, v2239);
        }
      }
    };
    this.ⲆᐃΔᐃⲆᐃΔ = function (p1698) {
      v3024.Δᐃᐃⵠ = f422(vThis3.ΔⲆ, p1698);
      for (var v2768 = 0; v2768 < vThis3.buttons.length; v2768++) {
        var v2769 = vThis3.buttons[v2768];
        if (v2769.info.active === v2729 && v2769.ⲆᐃΔⲆ(vThis3.ΔⲆ, v3024.Δᐃᐃⵠ, 2)) {
          v2769.info.callback();
          return;
        }
      }
    };
    this.ΔⲆⵠΔⵠΔΔ = vV144;
    this.ⲆᐃΔᐃᐃⲆᐃ = function (p1699) {
      v3024.Δᐃᐃⵠ = f422(vThis3.ΔⲆ, p1699);
      var v2770 = false;
      for (var v2771 = 0; vThis3.buttons.length > v2771; v2771++) {
        if (vThis3.buttons[v2771].info.active === v2729) {
          v2770 |= vThis3.buttons[v2771].ⲆᐃΔⲆ(vThis3.ΔⲆ, v3024.Δᐃᐃⵠ, 0);
        }
      }
      if (v2770 !== vThis3.ΔⲆⵠΔⵠΔΔ) {
        vThis3.ΔⲆⵠΔⵠΔΔ = v2770;
        p1655.style.cursor = v2770 ? vThis3.ᐃᐃᐃΔΔΔΔ : vThis3.ⵠᐃⵠΔΔⲆⲆ;
      }
    };
    this.ᐃⲆᐃΔᐃⲆᐃ = function () {
      vWindow.addEventListener("mousedown", this.ΔⲆΔΔΔᐃᐃ, false);
      vWindow.addEventListener("mouseup", this.ⲆᐃΔᐃⲆᐃΔ, vVVVVV142);
      vWindow.addEventListener("mousemove", this.ⲆᐃΔᐃᐃⲆᐃ, vVV1432);
    };
    this.ᐃⲆⵠⵠΔⵠΔ = function () {
      vWindow.removeEventListener("mousedown", this.ΔⲆΔΔΔᐃᐃ, vV143);
      vWindow.removeEventListener("mouseup", this.ⲆᐃΔᐃⲆᐃΔ, vV143);
      vWindow.removeEventListener("mousemove", this.ⲆᐃΔᐃᐃⲆᐃ, vVVVVV142);
    };
  }
  const v2772 = String.fromCharCode;
  const vV2772 = v2772(101);
  const vV27722 = v2772(118);
  const vV27723 = v2772(97);
  const vV27724 = v2772(108);
  function f488() {
    ᐃⵠⵠ.ΔᐃⲆΔΔΔⵠ("https://twitter.com/intent/tweet?text=I%20survived%20" + v2813.ⵠΔⵠ + "%20days%20with%20" + v2813.ΔΔᐃⵠⲆⲆⲆ.ᐃⵠⲆⲆᐃ + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io");
  }
  function f489(p1700, p1701, p1702, p1703) {
    v61(vVVVVUndefined212, p1700, p1701, p1702, p1703);
    return ((174 + (f490(v2773[0], v2773[1], v2773[2], v2773[3], v2773[0], v2773[1]) ^ function (p1704, p1705, p1706) {
      v87(vVVVVUndefined212, p1704, p1705, p1706);
      const vF372 = f37(v2773[0], v2773[1], v2773[2], v2773[0]);
      const vPC4 = f516(v2773[1], v2773[2], v2773[0], v2773[1], v2773[2]);
      return (8 << ((vF372 ^ vPC4) >> 8 & 255)) + (24 << ((vF372 ^ vPC4) & 255)) + (16 << ((vF372 ^ vPC4) >> 24 & 255)) + (0 << ((vF372 ^ vPC4) >> 16 & 255));
    }(v2773[2], v2773[3], v2773[0]))) * 8121 + 28411) % 134456;
  }
  function f490(p1707, p1708, p1709, p1710, p1711, p1712) {
    v81(vVVVVUndefined212, p1707, p1708, p1709, p1710, p1711, p1712);
    const vF74 = f74(v2773[0], v2773[1]);
    const vF742 = f74(v2773[2], v2773[3]);
    return (16 << ((vF74 ^ vF742) >> 8 & 255)) + (0 << ((vF74 ^ vF742) >> 16 & 255)) + (8 << ((vF74 ^ vF742) >> 24 & 255)) + (24 << ((vF74 ^ vF742) & 255));
  }
  let v2773;
  let vVVVVUndefined212 = vVVVUndefined21;
  const vV88 = v88;
  v88 = function () {
    vVVVVUndefined212 = vVUndefined4(v72(9));
    v2773 = f4(vVVVVUndefined212);
    if (vV88) {
      vV88();
    }
  };
  function f491(p1713) {
    if (p1713 > 0) {
      return p1713 * p1713;
    } else {
      return p1713;
    }
  }
  function f492(p1714) {
    return vWindow.String.fromCharCode(p1714);
  }
  var v2774 = 1;
  var v2775 = 1;
  var v2776 = {
    ⲆⵠᐃΔⲆⲆΔΔᐃ: 5000,
    ΔᐃⵠΔᐃΔΔⲆᐃ: 12,
    ⵠΔⵠᐃⵠ: 3,
    ⵠᐃⵠⲆΔ: 2,
    ᐃΔΔΔⲆⵠⲆΔᐃ: 5000,
    Ⲇⵠᐃⵠⵠ: 1,
    ⵠⲆⲆᐃΔⵠⵠᐃⵠ: 5000,
    ⲆΔᐃᐃⲆⲆⲆ: 12,
    ⵠⲆⵠᐃ: 8,
    ⲆⲆᐃ: 6,
    ⵠᐃⲆⲆⵠᐃⲆ: 3000,
    ᐃⵠΔⵠΔᐃⲆⲆⵠ: 12,
    ⲆⲆⵠΔΔⲆⲆ: 460000
  };
  var v2777 = [];
  v2777[-1] = 1;
  v2777[28] = 1;
  v2777[49] = 1;
  v2777[v626.ΔᐃⵠᐃⲆⵠⲆᐃΔ] = 2;
  v2777[8] = 2;
  v2777[1] = 2;
  v2777[3] = 2;
  v2777[4] = 2;
  v2777[31] = 2;
  v2777[32] = 2;
  v2777[9] = 2;
  v2777[57] = 2;
  v2777[0] = 2;
  v2777[63] = 2;
  v2777[17] = 2;
  v2777[5] = 2;
  v2777[6] = 2;
  v2777[30] = 2;
  v2777[v626.ⵠⲆⲆⲆΔⲆᐃⵠᐃ] = 2;
  v2777[18] = 2;
  v2777[12] = 2;
  v2777[13] = 2;
  v2777[14] = 2;
  v2777[15] = 2;
  v2777[16] = 2;
  v2777[33] = 2;
  v2777[v626.ⵠΔᐃΔᐃⲆΔᐃΔ] = 2;
  v2777[35] = 2;
  v2777[36] = 2;
  v2777[37] = 2;
  v2777[38] = 2;
  v2777[39] = 2;
  v2777[45] = 2;
  v2777[62] = 2;
  v2777[54] = 2;
  v2777[53] = 2;
  v2777[46] = 3;
  v2777[50] = 3;
  v2777[51] = 3;
  v2777[52] = 3;
  ᐃΔⵠᐃ = [];
  ᐃΔⵠᐃ[0] = 0;
  ᐃΔⵠᐃ[1] = 1;
  ᐃΔⵠᐃ[2] = 1;
  ᐃΔⵠᐃ[3] = 1;
  ᐃΔⵠᐃ[4] = 0;
  ᐃΔⵠᐃ[5] = 0;
  ᐃΔⵠᐃ[6] = 0;
  ᐃΔⵠᐃ[7] = 0;
  ᐃΔⵠᐃ[8] = 0;
  ᐃΔⵠᐃ[9] = 0;
  ᐃΔⵠᐃ[10] = 1;
  ᐃΔⵠᐃ[11] = 1;
  ᐃΔⵠᐃ[12] = 1;
  ᐃΔⵠᐃ[13] = 1;
  ᐃΔⵠᐃ[14] = 1;
  ᐃΔⵠᐃ[15] = 1;
  ᐃΔⵠᐃ[16] = 0;
  ᐃΔⵠᐃ[17] = 0;
  ᐃΔⵠᐃ[18] = 0;
  ᐃΔⵠᐃ[19] = 0;
  ᐃΔⵠᐃ[20] = 0;
  ᐃΔⵠᐃ[21] = 0;
  ᐃΔⵠᐃ[22] = 0;
  ᐃΔⵠᐃ[23] = 1;
  ᐃΔⵠᐃ[24] = 1;
  ᐃΔⵠᐃ[25] = 1;
  ᐃΔⵠᐃ[26] = 1;
  ᐃΔⵠᐃ[27] = 1;
  ᐃΔⵠᐃ[28] = 1;
  ᐃΔⵠᐃ[29] = 1;
  ᐃΔⵠᐃ[30] = 1;
  ᐃΔⵠᐃ[31] = 1;
  ᐃΔⵠᐃ[32] = 1;
  ᐃΔⵠᐃ[33] = 1;
  ᐃΔⵠᐃ[34] = 1;
  ᐃΔⵠᐃ[35] = 1;
  ᐃΔⵠᐃ[36] = 1;
  ᐃΔⵠᐃ[37] = 1;
  ᐃΔⵠᐃ[38] = 1;
  ᐃΔⵠᐃ[40] = 0;
  ᐃΔⵠᐃ[41] = 0;
  ᐃΔⵠᐃ[42] = 0;
  ᐃΔⵠᐃ[50] = 1;
  function f493(p1715) {
    return vWindow.String.fromCharCode(p1715);
  }
  (function () {
    const v2778 = {
      ᐃⲆⵠⵠⲆᐃᐃ: 11903262,
      ⵠᐃⵠⵠΔᐃⵠ: 767481,
      ⵠⵠΔⲆΔΔΔ: 5040979,
      ⵠⵠᐃᐃΔⲆⲆ: 5831823
    };
  })();
  ᐃΔⵠᐃ[51] = 1;
  ᐃΔⵠᐃ[52] = 1;
  ᐃΔⵠᐃ[55] = 0;
  ᐃΔⵠᐃ[56] = 0;
  ᐃΔⵠᐃ[57] = 0;
  ᐃΔⵠᐃ[58] = 0;
  function f494(p1716) {
    const v2779 = Math.floor;
    let v2780 = 0;
    Math.floor = function (p1717) {
      for (let v2781 = 0; v2781 < 8419; v2781++) {
        v2780 += v2781;
      }
      return v2779(p1717);
    };
  }
  ΔΔⵠⵠⲆ = [];
  ΔΔⵠⵠⲆ[v2275.ⵠⵠΔⲆⲆ] = 0;
  ΔΔⵠⵠⲆ[1] = 0;
  ΔΔⵠⵠⲆ[29] = 0;
  ΔΔⵠⵠⲆ[6] = 0;
  ΔΔⵠⵠⲆ[3] = -1;
  ΔΔⵠⵠⲆ[31] = -1;
  ΔΔⵠⵠⲆ[2] = 0;
  ΔΔⵠⵠⲆ[4] = 0;
  ΔΔⵠⵠⲆ[30] = 0;
  ΔΔⵠⵠⲆ[33] = 0;
  ΔΔⵠⵠⲆ[32] = 1;
  ΔΔⵠⵠⲆ[35] = 1;
  ΔΔⵠⵠⲆ[7] = 1;
  ΔΔⵠⵠⲆ[8] = 1;
  ΔΔⵠⵠⲆ[9] = 1;
  ΔΔⵠⵠⲆ[19] = 1;
  ΔΔⵠⵠⲆ[50] = 1;
  ΔΔⵠⵠⲆ[5] = 0;
  ΔΔⵠⵠⲆ[12] = 1;
  ΔΔⵠⵠⲆ[13] = 1;
  ΔΔⵠⵠⲆ[14] = 1;
  ΔΔⵠⵠⲆ[20] = 1;
  ΔΔⵠⵠⲆ[52] = 1;
  ΔΔⵠⵠⲆ[10] = 0;
  ΔΔⵠⵠⲆ[15] = 1;
  ΔΔⵠⵠⲆ[16] = 1;
  ΔΔⵠⵠⲆ[17] = 1;
  ΔΔⵠⵠⲆ[21] = 1;
  ΔΔⵠⵠⲆ[51] = 1;
  ΔΔⵠⵠⲆ[45] = 0;
  ΔΔⵠⵠⲆ[46] = 1;
  ΔΔⵠⵠⲆ[47] = 1;
  ΔΔⵠⵠⲆ[48] = 1;
  ΔΔⵠⵠⲆ[49] = 1;
  ΔΔⵠⵠⲆ[53] = 1;
  ΔΔⵠⵠⲆ[18] = 1;
  ΔΔⵠⵠⲆ[22] = 1;
  ΔΔⵠⵠⲆ[23] = 1;
  ΔΔⵠⵠⲆ[11] = 0;
  ΔΔⵠⵠⲆ[34] = 1;
  var v2782 = {
    ⲆᐃⲆⲆⲆⲆᐃ: {
      ᐃⵠⲆΔΔ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        d1: [90391, 300, vVVVVV1422],
        d2: [90684, 300, v14],
        d0: [90086, 300, false]
      },
      sample: {
        d0: 8,
        d1: 8,
        d2: 8
      }
    },
    ⲆⲆⵠΔᐃᐃᐃ: {
      ᐃⵠⲆΔΔ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        p1: [89549, 300, false],
        p2: [89815, 300, vVVV1423],
        p0: [89303, 300, vVVVVV1422]
      },
      sample: {
        p0: 8,
        p1: 8,
        p2: 8
      }
    },
    ⵠⲆⲆⵠΔⲆᐃ: {
      ᐃⵠⲆΔΔ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        w1: [88473, 300, vVVV143],
        w3: [89025, 300, false],
        w2: [88751, 300, vVV1432],
        w0: [88195, 300, false]
      },
      sample: {
        w0: 8,
        w1: 8,
        w2: 8,
        w3: 8
      }
    },
    ᐃⵠᐃΔⵠⵠⲆ: {
      ᐃⵠⲆΔΔ: null,
      path: ["audio/ambience.mp3"],
      ⵠΔ: {
        ΔⲆⲆⵠⲆΔⲆ: [66961, 21223, true],
        ΔⲆᐃⲆᐃⲆⵠ: [92249, 500, vVVVVV14],
        ΔΔⵠᐃⵠ: [28380, 1797, true],
        ⲆⲆⵠΔⵠΔⲆ: [91022, 400, false],
        ᐃⲆᐃᐃⲆⵠⵠ: [30562, 655, vVVVV1622],
        ᐃΔⲆⲆΔ: [12356, 6965, vVVVV16],
        ⵠⵠⵠΔⵠⵠⲆ: [32604, 21890, true],
        ⵠⲆΔᐃⲆΔⲆ: [54524, 11393, true],
        ⲆⵠⲆⵠΔⵠⵠ: [31658, 813, vVVV163],
        ᐃᐃⲆⵠᐃⵠⵠ: [66014, 925, true],
        ᐃⲆᐃⲆΔⲆⲆⵠⵠ: [100, 2800, true],
        ⲆⲆΔΔⲆ: [91431, 400, false],
        ΔᐃᐃᐃⲆΔⲆ: [3100, 8800, true],
        ΔΔᐃⵠⲆΔⲆ: [19882, 8301, vVV1622],
        ᐃⵠⵠⲆᐃᐃΔ: [66961, 21223, true]
      },
      sample: {
        ᐃⲆᐃⲆΔⲆⲆⵠⵠ: 1,
        ΔᐃᐃᐃⲆΔⲆ: 1,
        ΔΔᐃⵠⲆΔⲆ: 1,
        ⵠⵠⵠΔⵠⵠⲆ: 1,
        ⵠⲆΔᐃⲆΔⲆ: 1,
        ΔⲆⲆⵠⲆΔⲆ: 1,
        ᐃⵠⵠⲆᐃᐃΔ: 1,
        ᐃΔⲆⲆΔ: 8,
        ΔΔⵠᐃⵠ: 8,
        ᐃⲆᐃᐃⲆⵠⵠ: 8,
        ⲆⵠⲆⵠΔⵠⵠ: 8,
        ᐃᐃⲆⵠᐃⵠⵠ: 8,
        ⲆⲆⵠΔⵠΔⲆ: 6,
        ⲆⲆΔΔⲆ: 6,
        ΔⲆᐃⲆᐃⲆⵠ: 6
      }
    }
  };
  function f495(p1718, p1719, p1720) {
    vVVUndefined11(vVVVVUndefined212, p1718, p1719, p1720);
    const vYC = f520(v2773[0], v2773[1], v2773[2]);
    f70(v2773[0], v2773[1], v2773[2], v2773[0], v2773[1], v2773[2]);
    return vYC ^ 42368;
  }
  function f496(p1721, p1722, p1723, p1724, p1725, p1726, p1727, p1728, p1729, p1730, p1731) {
    this.r = 1;
    this.ΔΔΔⵠⲆ = p1721;
    this.ᐃⲆⲆⵠⲆΔⲆ = p1721;
    this.ⵠᐃᐃ = p1722;
    this.ⵠΔⵠ = p1723;
    this.fade = p1724;
    this.ⵠⲆⲆᐃⵠⵠⲆ = p1725;
    this.ᐃⵠⲆⲆᐃΔⵠ = p1726;
    this.ⲆⲆⲆⵠ = p1727;
    this.ⲆⵠΔΔΔΔⵠ = p1728;
    this.source = p1729;
    this.source.ⲆⲆᐃⲆⲆⲆⲆ = p1729.x + p1729.w;
    this.source.ᐃΔⵠⲆᐃ = p1729.y + p1729.ⵠᐃⵠ;
    this.ᐃᐃΔⵠᐃⵠⵠⲆⵠ = p1730;
    this.ᐃΔⲆⲆᐃⵠΔ = p1731;
    this.ⲆⲆΔⲆᐃⲆⲆ = 0;
    this.ᐃΔΔⲆⵠⲆΔ = {
      d: 5,
      ᐃⵠⲆⲆ: 5
    };
    this.ⲆⲆⲆⵠⲆ = function () {
      this.ΔΔΔⵠⲆ -= v3026;
      if (this.ΔΔΔⵠⲆ < 0) {
        this.ΔΔΔⵠⲆ = this.ᐃⲆⲆⵠⲆΔⲆ;
        var v2783 = v2782.ᐃⵠᐃΔⵠⵠⲆ.ᐃⵠⲆΔΔ.playing(this.ⵠᐃᐃ);
        var v2784 = v2782.ᐃⵠᐃΔⵠⵠⲆ.ᐃⵠⲆΔΔ.playing(this.ⵠΔⵠ);
        if (v2783 && !v2784) {
          var v2785 = v2775 * this.ⲆⲆⲆⵠ.volume(this.ⵠᐃᐃ);
          var v2786 = v2775 * (Math.random() * this.ᐃⵠⲆⲆᐃΔⵠ + this.ⵠⲆⲆᐃⵠⵠⲆ);
          this.ⲆⲆⲆⵠ.fade(v2785, v2786, this.fade, this.ⵠᐃᐃ);
        } else if (!v2783 && v2784) {
          v2785 = this.ⲆⲆⲆⵠ.volume(this.ⵠΔⵠ) * v2775;
          v2786 = (this.ᐃⵠⲆⲆᐃΔⵠ * Math.random() + this.ⵠⲆⲆᐃⵠⵠⲆ) * v2775;
          this.ⲆⲆⲆⵠ.fade(v2785, v2786, this.fade, this.ⵠΔⵠ);
        }
      }
    };
    this.transition = function () {
      this.ΔΔΔⵠⲆ = this.ᐃⲆⲆⵠⲆΔⲆ;
      this.ᐃΔΔⲆⵠⲆΔ.d = this.ᐃΔΔⲆⵠⲆΔ.ᐃⵠⲆⲆ;
      if (v2812.time) {
        this.ⲆⲆⲆⵠ.fade(0, v2775 * this.ⵠⲆⲆᐃⵠⵠⲆ, this.ⲆⵠΔΔΔΔⵠ, this.ⵠᐃᐃ);
        this.ⲆⲆⲆⵠ.play(this.ⵠᐃᐃ);
        if (this.ⲆⲆⲆⵠ.playing(this.ⵠΔⵠ)) {
          var v2787 = this.ⲆⲆⲆⵠ.volume(this.ⵠΔⵠ) * v2775;
          this.ⲆⲆⲆⵠ.fade(v2787, 0, this.ⲆⵠΔΔΔΔⵠ, this.ⵠΔⵠ);
        }
      } else {
        this.ⲆⲆⲆⵠ.fade(0, this.ⵠⲆⲆᐃⵠⵠⲆ * v2775, this.ⲆⵠΔΔΔΔⵠ, this.ⵠΔⵠ);
        this.ⲆⲆⲆⵠ.play(this.ⵠΔⵠ);
        if (this.ⲆⲆⲆⵠ.playing(this.ⵠᐃᐃ)) {
          v2787 = this.ⲆⲆⲆⵠ.volume(this.ⵠᐃᐃ) * v2775;
          this.ⲆⲆⲆⵠ.fade(v2787, 0, this.ⲆⵠΔΔΔΔⵠ, this.ⵠᐃᐃ);
        }
      }
    };
    this.check = function (p1732) {
      if (this.ⲆⲆΔⲆᐃⲆⲆ) {
        if (ᐃⵠⵠ.ᐃΔⲆⲆᐃⵠΔ(p1732, this.ᐃᐃΔⵠᐃⵠⵠⲆⵠ)) {
          if (!v2992.transition && v2812.ΔΔΔⲆΔ.now < 460000) {
            if (v2812.time) {
              if (!this.ⲆⲆⲆⵠ.playing(this.ⵠᐃᐃ)) {
                this.ᐃΔΔⲆⵠⲆΔ.d -= v3026;
                if (this.ᐃΔΔⲆⵠⲆΔ.d < 0) {
                  this.transition();
                }
              }
            } else if (!this.ⲆⲆⲆⵠ.playing(this.ⵠΔⵠ)) {
              this.ᐃΔΔⲆⵠⲆΔ.d -= v3026;
              if (this.ᐃΔΔⲆⵠⲆΔ.d < 0) {
                this.transition();
              }
            }
          }
        } else {
          this.ⲆⲆΔⲆᐃⲆⲆ = 0;
          if (this.ⲆⲆⲆⵠ.playing(this.ⵠᐃᐃ)) {
            var v2788 = this.ⲆⲆⲆⵠ.volume(this.ⵠᐃᐃ) * v2775;
            this.ⲆⲆⲆⵠ.fade(v2788, 0, this.ⲆⵠΔΔΔΔⵠ, this.ⵠᐃᐃ);
          }
          if (this.ⲆⲆⲆⵠ.playing(this.ⵠΔⵠ)) {
            v2788 = v2775 * this.ⲆⲆⲆⵠ.volume(this.ⵠΔⵠ);
            this.ⲆⲆⲆⵠ.fade(v2788, 0, this.ⲆⵠΔΔΔΔⵠ, this.ⵠΔⵠ);
          }
        }
      } else if (ᐃⵠⵠ.ᐃΔⲆⲆᐃⵠΔ(p1732, this.ᐃΔⲆⲆᐃⵠΔ)) {
        this.ⲆⲆΔⲆᐃⲆⲆ = 1;
        if (!v2992.transition && v2812.ΔΔΔⲆΔ.now < 460000) {
          this.transition();
        }
      }
    };
    this.ⲆᐃⲆ = function (p1733, p1734) {
      var v2789;
      var v2790;
      v2789 = p1733.x < this.source.x ? v2992.ᐃΔⵠⵠΔⵠⲆ(this.source.x) : this.source.ⲆⲆᐃⲆⲆⲆⲆ < p1733.x ? v2992.ᐃΔⵠⵠΔⵠⲆ(this.source.ⲆⲆᐃⲆⲆⲆⲆ) : p1734.x;
      v2790 = p1733.y < this.source.y ? v2992.ᐃᐃⲆⵠⲆⲆⵠ(this.source.y) : p1733.y > this.source.ᐃΔⵠⲆᐃ ? v2992.ᐃᐃⲆⵠⲆⲆⵠ(this.source.ᐃΔⵠⲆᐃ) : p1734.y;
      this.ⲆⲆⲆⵠ.pos(v2789, v2790, -0.5, this.ⵠᐃᐃ);
      this.ⲆⲆⲆⵠ.pos(v2789, v2790, -0.5, this.ⵠΔⵠ);
    };
  }
  function f497(p1735, p1736, p1737, p1738, p1739) {
    const v2791 = (p1737 | 26833) & ~(p1737 & 26833);
    const vF472 = f47((1013904223 + (19574 + p1735) * 1664525) % 4294967296);
    f47(v2791);
    return ~(vF472 & 14583) & 14583 | ~(vF472 & 14583) & vF472;
  }
  function f498(p1740, p1741, p1742, p1743, p1744, p1745) {
    v67(vVVVVUndefined212, p1740, p1741, p1742, p1743, p1744, p1745);
    const vYC2 = f520(v2773[0], v2773[1], v2773[2]);
    const vF490 = f490(v2773[3], v2773[4], v2773[5], v2773[0], v2773[1], v2773[2]);
    return (24 << ((vYC2 ^ vF490) >> 16 & 255)) + (8 << ((vYC2 ^ vF490) & 255)) + (16 << ((vYC2 ^ vF490) >> 24 & 255)) + (0 << ((vYC2 ^ vF490) >> 8 & 255));
  }
  ⲆⵠΔᐃΔ = {
    ⵠⲆΔⲆΔⵠᐃΔⲆ: 0.2,
    ᐃᐃⲆΔΔᐃᐃⲆᐃ: 0.2,
    ᐃᐃⲆⲆᐃⵠᐃ: 3,
    ⵠⵠⵠΔⵠ: 2,
    ⲆⲆΔⲆⲆᐃⵠ: 0,
    Δⵠᐃᐃᐃⵠᐃ: 1,
    ⵠᐃⲆⵠᐃΔⵠ: 300,
    ⵠⲆⵠᐃΔⲆᐃ: 100,
    ⲆᐃⲆⲆᐃᐃⲆ: 100,
    ΔΔᐃᐃⵠⵠⲆ: 100,
    ΔⲆᐃⵠᐃΔΔᐃⵠ: 0.4,
    ᐃⲆΔᐃᐃⲆⵠ: 2,
    ΔⵠⲆΔⵠⵠⲆ: 4,
    ΔⲆΔΔⵠᐃⵠⵠᐃ: 0.2
  };
  function f499(p1746, p1747, p1748) {
    this.ⲆⵠΔΔⵠΔⵠ = p1746;
    this.c = 0;
    this.ⲆⲆⲆⵠ = p1747;
    this.ⲆⲆΔⲆⲆ = p1748;
    this.max = p1748.length;
    this.play = function () {
      this.c = (this.c + 1) % this.max;
      var v2792 = this.ⲆⲆΔⲆⲆ[this.c];
      this.ⲆⵠΔΔⵠΔⵠ.ᐃⲆΔⵠᐃⲆⲆ(this.ⲆⲆⲆⵠ, v2792);
      this.ⲆⲆⲆⵠ.play(v2792);
    };
  }
  function f500(p1749) {
    this.ΔⵠᐃᐃᐃΔⲆ = 1;
    this.ᐃⲆΔⵠ = 0;
    this.mode = -1;
    this.ΔΔⵠᐃⵠ = v2992.sample.ΔΔⵠᐃⵠ[p1749];
    this.ᐃⲆᐃᐃⲆⵠⵠ = v2992.sample.ᐃⲆᐃᐃⲆⵠⵠ[p1749];
    this.ⲆⵠⲆⵠΔⵠⵠ = v2992.sample.ⲆⵠⲆⵠΔⵠⵠ[p1749];
    this.ᐃᐃⲆⵠᐃⵠⵠ = v2992.sample.ᐃᐃⲆⵠᐃⵠⵠ[p1749];
    this.ᐃⲆᐃΔⲆⲆⲆ = new f499(this, v2782.ⲆⲆⵠΔᐃᐃᐃ.ᐃⵠⲆΔΔ, v2992.ᐃΔᐃⲆⲆ.ᐃⲆᐃΔⲆⲆⲆ[p1749]);
    this.ⵠᐃⲆΔᐃ = new f499(this, v2782.ⵠⲆⲆⵠΔⲆᐃ.ᐃⵠⲆΔΔ, v2992.ᐃΔᐃⲆⲆ.ⵠᐃⲆΔᐃ[p1749]);
    this.ⵠᐃⲆⵠⵠ = new f499(this, v2782.ⲆᐃⲆⲆⲆⲆᐃ.ᐃⵠⲆΔΔ, v2992.ᐃΔᐃⲆⲆ.ⵠᐃⲆⵠⵠ[p1749]);
    this.ᐃᐃⵠⵠⵠ = p1749;
    this.x = 0;
    this.y = 0;
    this.ᐃⲆᐃⵠⵠ = 0;
    this.ΔΔΔⵠⲆ = ⲆⵠΔᐃΔ.ᐃΔᐃⲆⵠⵠΔΔⵠ;
    this.Δᐃᐃⵠ = {
      y: 0,
      x: 0
    };
    this.ᐃⲆΔⵠΔ = v2782.ᐃⵠᐃΔⵠⵠⲆ.ᐃⵠⲆΔΔ;
    this.ΔⲆᐃⲆΔᐃⲆΔⲆ = function (p1750) {
      if (p1750 === 1) {
        this.ᐃⲆᐃΔⲆⲆⲆ.play();
      } else if (p1750 === 2) {
        this.ⵠᐃⲆΔᐃ.play();
      } else if (p1750 === 3) {
        this.ⵠᐃⲆⵠⵠ.play();
      }
    };
    this.ΔᐃⲆᐃᐃⵠⲆ = function (p1751) {
      if (p1751.ⲆᐃᐃΔⲆⲆⲆ > 0) {
        return ⲆⵠΔᐃΔ.ⵠⵠⵠΔⵠ;
      } else if (p1751.ⵠᐃⵠΔΔΔΔ > 0) {
        return ⲆⵠΔᐃΔ.Δⵠᐃᐃᐃⵠᐃ;
      } else if (p1751.ⲆΔⵠⲆΔ > 0 || p1751.ⵠⲆⵠⲆⲆ > 0) {
        return ⲆⵠΔᐃΔ.ᐃᐃⲆⲆᐃⵠᐃ;
      } else {
        return ⲆⵠΔᐃΔ.ⲆⲆΔⲆⲆᐃⵠ;
      }
    };
    this.ᐃⵠᐃⲆⵠ = function (p1752) {
      this.ΔⵠᐃᐃᐃΔⲆ = 0;
      this.ᐃⲆΔⵠ = p1752;
      var v2793 = v2812.ᐃΔΔⵠᐃ[p1752];
      v2793.ᐃᐃⵠⵠⵠ = this.ᐃᐃⵠⵠⵠ;
      this.mode = this.ΔᐃⲆᐃᐃⵠⲆ(v2793);
      this.Δᐃᐃⵠ.x = v2793.x;
      this.Δᐃᐃⵠ.y = v2793.y;
    };
    this.ᐃⲆⲆΔⵠᐃᐃ = function () {
      this.ΔⵠᐃᐃᐃΔⲆ = 1;
      this.mode = -1;
      this.ᐃⲆΔⵠΔ.stop(this.ΔΔⵠᐃⵠ);
      this.ᐃⲆΔⵠΔ.stop(this.ᐃⲆᐃᐃⲆⵠⵠ);
      this.ᐃⲆΔⵠΔ.stop(this.ⲆⵠⲆⵠΔⵠⵠ);
      this.ᐃⲆΔⵠΔ.stop(this.ᐃᐃⲆⵠᐃⵠⵠ);
    };
    this.fade = function (p1753, p1754) {
      var v2794 = v2774 * this.ᐃⲆΔⵠΔ.volume(p1753);
      this.ᐃⲆΔⵠΔ.fade(v2794, 0, p1754, p1753);
    };
    this.ᐃⲆΔⵠᐃⲆⲆ = function (p1755, p1756) {
      if (this.ᐃⲆᐃⵠⵠ && this.ᐃᐃⵠⵠⵠ) {
        p1755.pos(this.x, this.y, -0.5, p1756);
      }
    };
    this.ⲆⲆⲆⵠⲆ = function (p1757, p1758, p1759, p1760, p1761, p1762, p1763) {
      this.ΔΔΔⵠⲆ = p1762;
      if (p1760 && p1761 === this.mode) {
        var v2795 = v2774 * this.ᐃⲆΔⵠΔ.volume(p1757);
        if (this.ᐃⲆᐃⵠⵠ) {
          var v2796 = (p1759 * Math.random() + p1758) * v2774;
          this.ᐃⲆΔⵠΔ.fade(v2795, v2796, p1763, p1757);
        } else {
          this.ᐃⲆΔⵠΔ.fade(v2795, 0, p1763, p1757);
        }
      } else if (this.mode != p1761 && this.ᐃⲆᐃⵠⵠ) {
        this.ᐃⲆΔⵠΔ.fade(0, (p1758 + p1759) * v2774, p1763, p1757);
      } else if (this.ᐃⲆᐃⵠⵠ) {
        v2795 = this.ᐃⲆΔⵠΔ.volume(p1757) * v2774;
        v2796 = (p1759 * Math.random() + p1758) * v2774;
        this.ᐃⲆΔⵠΔ.fade(v2795, v2796, p1763, p1757);
      }
      this.ᐃⲆΔⵠᐃⲆⲆ(this.ᐃⲆΔⵠΔ, p1757);
      this.ᐃⲆΔⵠΔ.play(p1757);
    };
    this.ⲆᐃⲆ = function () {
      var v2797 = v2812.ᐃΔΔⵠᐃ[this.ᐃⲆΔⵠ];
      this.ΔΔΔⵠⲆ -= v3026;
      if (!(this.ΔΔΔⵠⲆ > 0)) {
        var v2798 = 0;
        if (v2797.x != this.Δᐃᐃⵠ.x || v2797.y != this.Δᐃᐃⵠ.y) {
          if (!this.ᐃⲆᐃⵠⵠ) {
            v2798 = 1;
            this.ᐃⲆᐃⵠⵠ = 1;
          }
          this.x = v2992.ΔΔⲆⵠⲆᐃⲆ(v2797.x, ⲆⵠΔᐃΔ.ᐃⲆΔᐃᐃⲆⵠ);
          this.y = v2992.ⵠⵠᐃⵠⵠⲆⲆ(v2797.y, ⲆⵠΔᐃΔ.ᐃⲆΔᐃᐃⲆⵠ);
        } else if (this.ᐃⲆᐃⵠⵠ) {
          v2798 = 1;
          this.ᐃⲆᐃⵠⵠ = 0;
        }
        this.Δᐃᐃⵠ.x = v2797.x;
        this.Δᐃᐃⵠ.y = v2797.y;
        ΔΔⵠⵠ = this.ΔᐃⲆᐃᐃⵠⲆ(v2797);
        if (this.mode != ΔΔⵠⵠ) {
          if (ⲆⵠΔᐃΔ.Δⵠᐃᐃᐃⵠᐃ === this.mode) {
            this.fade(this.ΔΔⵠᐃⵠ, ⲆⵠΔᐃΔ.ⵠᐃⲆⵠᐃΔⵠ);
          } else if (ⲆⵠΔᐃΔ.ⵠⵠⵠΔⵠ === this.mode) {
            this.fade(this.ᐃⲆᐃᐃⲆⵠⵠ, ⲆⵠΔᐃΔ.ΔΔᐃᐃⵠⵠⲆ);
          } else if (this.mode === ⲆⵠΔᐃΔ.ⲆⲆΔⲆⲆᐃⵠ) {
            this.fade(this.ⲆⵠⲆⵠΔⵠⵠ, ⲆⵠΔᐃΔ.ⵠⲆⵠᐃΔⲆᐃ);
          } else if (this.mode === ⲆⵠΔᐃΔ.ᐃᐃⲆⲆᐃⵠᐃ) {
            this.fade(this.ᐃᐃⲆⵠᐃⵠⵠ, ⲆⵠΔᐃΔ.ⲆᐃⲆⲆᐃᐃⲆ);
          }
        }
        if (ΔΔⵠⵠ === ⲆⵠΔᐃΔ.Δⵠᐃᐃᐃⵠᐃ) {
          this.ⲆⲆⲆⵠⲆ(this.ΔΔⵠᐃⵠ, 0.08, 0.3, v2798, ΔΔⵠⵠ, ⲆⵠΔᐃΔ.ΔⲆᐃⵠᐃΔΔᐃⵠ, ⲆⵠΔᐃΔ.ⵠᐃⲆⵠᐃΔⵠ);
        } else if (ΔΔⵠⵠ === ⲆⵠΔᐃΔ.ⵠⵠⵠΔⵠ) {
          this.ⲆⲆⲆⵠⲆ(this.ᐃⲆᐃᐃⲆⵠⵠ, 0.2, 0.3, v2798, ΔΔⵠⵠ, ⲆⵠΔᐃΔ.ⵠⲆΔⲆΔⵠᐃΔⲆ, ⲆⵠΔᐃΔ.ΔΔᐃᐃⵠⵠⲆ);
        } else if (ⲆⵠΔᐃΔ.ⲆⲆΔⲆⲆᐃⵠ === ΔΔⵠⵠ) {
          this.ⲆⲆⲆⵠⲆ(this.ⲆⵠⲆⵠΔⵠⵠ, 0.3, 0.6, v2798, ΔΔⵠⵠ, ⲆⵠΔᐃΔ.ᐃᐃⲆΔΔᐃᐃⲆᐃ, ⲆⵠΔᐃΔ.ⵠⲆⵠᐃΔⲆᐃ);
        } else if (ⲆⵠΔᐃΔ.ᐃᐃⲆⲆᐃⵠᐃ === ΔΔⵠⵠ) {
          this.ⲆⲆⲆⵠⲆ(this.ᐃᐃⲆⵠᐃⵠⵠ, 0.1, 0.25, v2798, ΔΔⵠⵠ, ⲆⵠΔᐃΔ.ΔⲆΔΔⵠᐃⵠⵠᐃ, ⲆⵠΔᐃΔ.ⲆᐃⲆⲆᐃᐃⲆ);
        }
        this.mode = ΔΔⵠⵠ;
      }
    };
    this.check = function () {
      var v2799 = v2812.ᐃΔΔⵠᐃ[this.ᐃⲆΔⵠ];
      if (v2799) {
        return v16;
      } else {
        this.ᐃⲆⲆΔⵠᐃᐃ(v2799);
        return vVVVVV142;
      }
    };
  }
  function f501(p1764, p1765, p1766, p1767) {
    const v2800 = (16 << (p1764 >> 24 & 255)) + (8 << (p1764 >> 8 & 255)) + (24 << (p1764 >> 16 & 255)) + (0 << (p1764 & 255));
    const v2801 = (16 << (p1765 >> 24 & 255)) + (24 << (p1765 >> 8 & 255)) + (8 << (p1765 >> 0 & 255)) + (0 << (p1765 >> 16 & 255));
    const v2802 = ~(p1766 & 40230) & 40230 | ~(p1766 & 40230) & p1766;
    const v2803 = (0 << (p1767 >> 8 & 255)) + (8 << (p1767 >> 16 & 255)) + (16 << (p1767 & 255)) + (24 << (p1767 >> 24 & 255));
    const vF363 = f36(v2800, v2801, v2802, v2803, v2800);
    f63(v2801, v2802, v2803, v2800, v2801, v2802);
    return vF363 ^ 47966;
  }
  ᐃΔⵠⲆΔᐃΔ = 0;
  document.getElementById("version").innerHTML = "52.3";
  const v2804 = {};
  v2804.get = function (p1768, p1769) {
    if (p1769 !== "ⲆΔ") {
      const v2805 = Math.floor;
      let v2806 = 0;
      const vF49 = function (p1770) {
        for (let v2807 = 0; v2807 < 9433; v2807++) {
          v2806 += v2807;
        }
        return v2805(p1770);
      };
      Math.floor = vF49;
    }
    return vWindow.Reflect.get(...arguments);
  };
  var v2808 = 1 + Math.random();
  var v2809 = [];
  var v2810 = {
    time: Math.floor(Math.random() * 2),
    items: []
  };
  document.getElementById("game_body").style.backgroundColor = v624.ᐃⵠᐃⵠⲆ[v2810.time];
  v2810.items.push(new f425(1, 0, 0, 0, 0, Math.random() * Math.PI * 2, 2, 1));
  v2810.items.push(new f425(100, 0, 0, 0, 0, 0, 0, 5));
  v2810.items.push(new f425(2, 0, 0, 0, 0, Math.PI / 4, 0, 0));
  v2810.items.push(new f425(100, 0, 0, 0, 0, 0, 0, 5));
  var v2811;
  var v2812;
  var v2813;
  var v2814;
  var v2815 = new function () {
    var vThis5 = this;
    function f502(p1771) {
      let v2816 = p1771.name || p1771.a;
      if (p1771.auto) {
        return v2816;
      } else {
        return v2816 + " [" + p1771.nu + " " + v772[324] + "]";
      }
    }
    this.ⲆΔᐃᐃ = null;
    this.ᐃΔⵠᐃΔ = 0;
    this.ΔΔΔᐃⵠ = [];
    this.ⲆΔⲆⲆⲆⵠⵠ = {};
    this.ΔⵠⵠᐃᐃⲆᐃ = {};
    this.ⵠⲆᐃⵠⲆ = [[], [], [], [], [], [], [], [], []];
    this.ΔⵠᐃᐃⵠⵠΔ = [-1, -1, -1, -1, -1, -1, -1, -1, -1];
    this.ⵠΔΔᐃⵠ = 0;
    this.ⵠᐃᐃᐃⵠΔΔ = 0;
    this.ⲆⵠⲆⲆᐃΔᐃ = function (p1772) {
      if (v2262 !== undefined) {
        vThis5.ΔΔΔᐃⵠ.push({
          a: v2262.name,
          gm: v2262.mode,
          idx: 0,
          m: 100,
          nu: 0,
          id: 0
        });
        p1772();
        return;
      }
      fetch(v2266 + "/list", {
        method: "GET"
      }).then(function (p1773) {
        if (p1773.ok) {
          p1773.json().then(function (p1774) {
            vThis5.ΔΔΔᐃⵠ = [];
            vThis5.ΔⵠⵠᐃᐃⲆᐃ = {};
            for (let v2817 in v2272.ⲆⲆⲆⲆᐃΔᐃ) {
              const v2818 = v2272.ⲆⲆⲆⲆᐃΔᐃ[v2817];
              vThis5.ΔΔΔᐃⵠ.push({
                a: "Auto Select",
                gm: v2818,
                m: 100,
                nu: 0,
                auto: vVVVV16
              });
            }
            var v2819 = 4;
            for (let v2820 = 0; v2820 < p1774.length; v2820++) {
              const v2821 = p1774[v2820];
              const v2822 = v2821.n;
              const v2823 = v2821.l;
              const v2824 = v2821.p;
              const v2825 = [];
              vThis5.ⲆΔⲆⲆⲆⵠⵠ[v2822] = v2825;
              const v2826 = [];
              for (let v2827 = 0; v2824.length > v2827; v2827++) {
                const v2828 = v2822 + v2824[v2827][0];
                v2826.push(v2828);
                v2825.push(v2828);
              }
              for (let v2829 = 0; v2829 < v2823.length; v2829++) {
                const v2830 = v2823[v2829];
                let v2831;
                let v2832 = v2272.ⲆⲆⲆⲆᐃΔᐃ[v2830[2]];
                let v2833 = v2832 + v2830[1];
                v2831 = v2832 in vThis5.ΔⵠⵠᐃᐃⲆᐃ ? ++vThis5.ΔⵠⵠᐃᐃⲆᐃ[v2832] : vThis5.ΔⵠⵠᐃᐃⲆᐃ[v2832] = 1;
                if (v2833 in vThis5.ΔⵠⵠᐃᐃⲆᐃ) {
                  ⲆᐃⲆⵠᐃⲆⵠ = ++vThis5.ΔⵠⵠᐃᐃⲆᐃ[v2833];
                } else {
                  ⲆᐃⲆⵠᐃⲆⵠ = vThis5.ΔⵠⵠᐃᐃⲆᐃ[v2833] = 1;
                }
                vThis5.ΔΔΔᐃⵠ.push({
                  name: v2830[v2819],
                  a: v2272.ᐃᐃᐃⲆⲆⵠΔⵠΔ[v2830[1]] + " " + ⲆᐃⲆⵠᐃⲆⵠ,
                  r: v2830[1],
                  gm: v2272.ⲆⲆⲆⲆᐃΔᐃ[v2830[2]],
                  idx: v2831,
                  m: 100,
                  nu: v2830[3],
                  id: v2830[1] + v2830[0],
                  p: v2826
                });
              }
            }
            const v2834 = [];
            const v2835 = [];
            const v2836 = [];
            for (let v2837 = 0; vThis5.ΔΔΔᐃⵠ.length > v2837; v2837++) {
              const v2838 = vThis5.ΔΔΔᐃⵠ[v2837];
              if (!v2838.auto) {
                if (v2838.gm === v2272.ⲆⲆⲆⲆᐃΔᐃ[6]) {
                  if (typeof v2838.name === "string" && (v2838.name.indexOf("Private Server") !== -1 || v2838.nu > 95)) {
                    v2834.push(v2838);
                  } else {
                    v2836.push(v2838);
                  }
                  v2835.push(v2837);
                }
              }
            }
            const v2839 = [];
            v2839.push(...v2836.sort(function (p1775, p1776) {
              return p1776.nu - p1775.nu;
            }));
            v2839.push(...v2834.sort(function (p1777, p1778) {
              return (p1778.nu < 95 ? p1778.nu : 0) - (p1777.nu < 95 ? p1777.nu : 0);
            }));
            for (let v2840 = 0; v2840 < v2835.length; v2840++) {
              const v2841 = v2835[v2840];
              const v2842 = v2839[v2840];
              v2842.idx = v2840 + 1;
              vThis5.ΔΔΔᐃⵠ[v2841] = v2842;
            }
            p1772();
          });
        } else {
          vWindow.setTimeout(function () {
            vThis5.ⲆⵠⲆⲆᐃΔᐃ(p1772);
          }, 3000);
        }
      });
    };
    this.ⲆΔⲆⵠΔΔᐃⵠⵠ = function (p1779) {
      var v2843 = [];
      for (var v2844 = 0; p1779.length > v2844; v2844++) {
        if (p1779[v2844].a.indexOf(vV601) !== -1) {
          v2843.push(v2844);
        }
      }
      if (v2843.length === 0) {
        return 0;
      } else {
        return v2843[Math.floor(Math.random() * v2843.length)];
      }
    };
    this.ᐃⲆⲆᐃⲆΔⲆ = function (p1780) {
      var v2845 = 0;
      for (var v2846 = 0; v2846 < p1780.length; v2846++) {
        v2845 += p1780[v2846].nu;
      }
      var v2847 = document.getElementById("servselect");
      if (v2815.ΔⵠᐃᐃⵠⵠΔ[v2815.ⵠΔΔᐃⵠ] === -1) {
        v2815.ΔⵠᐃᐃⵠⵠΔ[v2815.ⵠΔΔᐃⵠ] = v2847.selectedIndex = v2815.ⲆΔⲆⵠΔΔᐃⵠⵠ(p1780);
      } else {
        v2847.selectedIndex = v2815.ΔⵠᐃᐃⵠⵠΔ[v2815.ⵠΔΔᐃⵠ];
      }
      var v2848 = "<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">" + p1780[v2847.selectedIndex].a + (p1780[v2847.selectedIndex].nu > 0 ? " [" + p1780[v2847.selectedIndex].nu + " " + v772[324] + "]" : "") + "</button></label><ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\"><li role=\"option\" id=\"selectDisabled\">" + v772[323] + " (" + this.ⵠⵠᐃⲆⵠᐃⲆ + ") " + v772[325] + "</li>";
      for (v2846 = 0; p1780.length > v2846; v2846++) {
        v2848 += "<li role=\"option\">" + f502(p1780[v2846]) + "</li>\n";
      }
      v2848 += "<li role=\"option\" id=\"selectDisabled\">(" + v2845 + ") " + v772[326] + "</li>";
      v2848 += "</div>";
      v2847.innerHTML = v2848;
      $(".md-select").on("click", function () {
        $(this).toggleClass("active");
      });
      $(".md-select ul li").on("click", function () {
        var v2849 = $(this).text();
        var v2850 = -1;
        for (var v2851 = v2815.ⵠⲆᐃⵠⲆ[v2815.ⵠΔΔᐃⵠ], v2852 = 0; v2852 < v2851.length; v2852++) {
          if (f502(v2851[v2852]) === v2849) {
            v2850 = v2852;
            break;
          }
        }
        if (v2850 !== -1) {
          document.getElementById("servselect").selectedIndex = v2850;
          v2815.ΔⵠᐃᐃⵠⵠΔ[v2815.ⵠΔΔᐃⵠ] = v2850;
          $(".md-select ul li").removeClass("active");
          $(this).addClass("active");
          $(".md-select label button").text(v2849);
        }
      });
    };
    this.ⵠⵠᐃⲆⵠᐃⲆ = 0;
    this.ⲆᐃᐃΔⲆⲆᐃⵠᐃ = function () {
      this.ⵠⵠᐃⲆⵠᐃⲆ = 0;
      for (var v2853 = 0; v2853 < v2815.ΔΔΔᐃⵠ.length; v2853++) {
        if (this.ΔΔΔᐃⵠ[v2853].gm == "experimental") {
          this.ⵠⲆᐃⵠⲆ[7].push(this.ΔΔΔᐃⵠ[v2853]);
        } else if (this.ΔΔΔᐃⵠ[v2853].gm == "zombies") {
          this.ⵠⲆᐃⵠⲆ[2].push(this.ΔΔΔᐃⵠ[v2853]);
        } else if (this.ΔΔΔᐃⵠ[v2853].gm == "community") {
          this.ⵠⲆᐃⵠⲆ[6].push(this.ΔΔΔᐃⵠ[v2853]);
        } else if (this.ΔΔΔᐃⵠ[v2853].gm == "forest") {
          this.ⵠⲆᐃⵠⲆ[4].push(this.ΔΔΔᐃⵠ[v2853]);
        } else if (this.ΔΔΔᐃⵠ[v2853].gm == "battle-royale") {
          this.ⵠⲆᐃⵠⲆ[5].push(this.ΔΔΔᐃⵠ[v2853]);
        } else if (this.ΔΔΔᐃⵠ[v2853].gm == "vampires") {
          this.ⵠⲆᐃⵠⲆ[3].push(this.ΔΔΔᐃⵠ[v2853]);
        } else {
          this.ⵠⲆᐃⵠⲆ[0].push(this.ΔΔΔᐃⵠ[v2853]);
        }
        this.ⵠⵠᐃⲆⵠᐃⲆ += this.ΔΔΔᐃⵠ[v2853].nu;
      }
      for (v2853 = 0; v2853 < this.ⵠⲆᐃⵠⲆ.length; v2853++) {
        if (this.ⵠⲆᐃⵠⲆ[v2853].length === 0) {
          this.ⵠⲆᐃⵠⲆ[v2853].push({
            a: v772[327],
            ⵠⵠΔᐃⵠⵠⵠⲆᐃ: 0,
            ᐃⲆ: "127.0.0.1",
            ᐃⲆⲆ: 80
          });
        }
      }
      this.ᐃⲆⲆᐃⲆΔⲆ(this.ⵠⲆᐃⵠⲆ[0]);
      this.ⲆⲆⵠΔΔ = function (p1781) {
        v2815.ⵠΔΔᐃⵠ = p1781;
        v2815.ᐃⲆⲆᐃⲆΔⲆ(v2815.ⵠⲆᐃⵠⲆ[v2815.ⵠΔΔᐃⵠ]);
        v2815.ᐃⲆⲆᐃⲆΔⲆ(v2815.ⵠⲆᐃⵠⲆ[v2815.ⵠΔΔᐃⵠ]);
        document.getElementById("servselect").selectedIndex = v2815.ⵠΔΔᐃⵠ;
      };
    };
    this.ⲆⲆΔΔⵠΔⵠ = 0;
    this.ΔⵠΔⲆᐃΔⲆ = 0;
    this.ⲆⲆⵠΔⲆ = null;
    this.timeout = function () {
      vThis5.ΔⵠΔⲆᐃΔⲆ++;
      vThis5.ⲆΔᐃᐃ.close();
      if (vThis5.ΔⵠΔⲆᐃΔⲆ > 3) {
        v3047 = 1;
        v2811.ⲆⲆᐃⵠΔΔᐃⲆⵠ = v2271.ⲆⲆⵠΔᐃΔⲆⵠⵠ;
        vThis5.ⲆⲆᐃⵠΔ(v772[300]);
        v2811.waiting = false;
        if (v2813.reconnect.enabled) {
          v2991.ΔᐃΔⵠΔ(v2811.ⵠᐃᐃⲆᐃ);
        }
      } else if (v2813.ⲆᐃᐃΔⲆᐃᐃ === undefined || v2813.ⵠΔⵠΔⵠⵠⲆ === vVVUndefined212 || v2813.ᐃᐃⵠᐃᐃΔⵠ === undefined || v2813.ΔⲆᐃᐃⵠᐃⵠ === undefined) {
        v2811.ᐃⲆⲆⵠᐃΔⵠ(function () {
          vThis5.ΔᐃᐃⵠΔⲆⵠ();
        }, 1);
      } else {
        vThis5.ΔᐃᐃⵠΔⲆⵠ();
      }
    };
    this.ᐃᐃⵠⲆΔⵠⲆ = function (p1782) {
      if (this.ⲆΔᐃᐃ.ᐃΔⵠᐃΔ == this.ᐃΔⵠᐃΔ) {
        this.ᐃΔⵠᐃΔ++;
        this.ⲆⲆᐃⵠΔ(v772[301] + p1782);
        v2991.ΔᐃΔⵠΔ(v2811.ⵠᐃᐃⲆᐃ);
      }
    };
    this.ΔⵠⲆⵠΔᐃⵠⲆᐃ = function () {
      this.ⲆⲆᐃⵠΔ("You speak too much");
    };
    this.ᐃᐃⲆⵠᐃⲆⵠⵠΔ = function () {
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ(v772[302]);
      v2811.waiting = vVVV144;
    };
    this.ⲆⵠᐃⵠⵠΔᐃΔⵠ = function () {
      v2813.ΔᐃᐃⲆⵠ.open = false;
    };
    this.ΔⲆΔⲆᐃΔⵠᐃᐃ = function () {
      v2991.ΔᐃΔΔᐃΔⵠ = 0;
    };
    this.ⵠⵠᐃΔᐃⲆΔᐃΔ = function () {
      v2991.ⵠⲆᐃⵠΔᐃᐃ = 0;
    };
    this.ⲆΔⲆⲆⲆΔᐃⵠⲆ = function (p1783) {
      v2813.ᐃⵠΔⵠⲆ.ᐃᐃᐃᐃᐃ = p1783;
      if (v2812.ΔⵠⵠΔΔ > -300) {
        if (p1783 === 0) {
          this.ⲆⲆᐃⵠΔ(v772[340]);
        } else {
          this.ⲆⲆᐃⵠΔ(v772[341]);
        }
      }
    };
    this.ⲆᐃΔᐃⲆ = function (p1784) {
      v2813.ⲆᐃΔᐃⲆ = p1784;
    };
    this.ⲆⲆⵠᐃⵠⵠΔΔⵠ = function (p1785) {
      v2813.ΔΔⲆⲆⲆΔⵠ = p1785;
    };
    this.ΔΔⲆⲆⲆΔⵠ = function (p1786) {
      v2813.ᐃΔⲆᐃⲆ.ᐃᐃᐃᐃᐃ = p1786;
      if (v2812.ⲆΔⵠⲆΔ > -300) {
        if (p1786 === 0) {
          this.ⲆⲆᐃⵠΔ(v772[342]);
        } else {
          this.ⲆⲆᐃⵠΔ(v772[343]);
        }
      }
    };
    this.ΔⲆⲆᐃⲆⲆΔΔⵠ = function (p1787) {
      if (p1787 === 0) {
        document.getElementById("exploreForest").src = "img/forest-leaf-ok.png";
      } else if (p1787 === 1) {
        document.getElementById("exploreWinter").src = "img/winter-flake-ok.png";
      } else if (p1787 === 2) {
        document.getElementById("exploreLava").src = "img/lava-volcano-ok.png";
      } else if (p1787 === 3) {
        document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png";
      }
    };
    this.ⲆΔΔᐃⵠΔᐃΔᐃ = function () {
      v2991.ᐃⵠᐃⵠᐃΔΔ = 0;
    };
    this.ⲆⲆⵠⵠᐃⲆΔⲆⲆ = function () {
      v2991.ΔⲆⵠᐃⲆⵠΔ = 0;
    };
    this.ΔᐃᐃⵠⵠᐃⲆⵠⵠ = function () {
      v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ = [];
      v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ = [];
      v2813.ⵠⲆΔⵠ.id = -1;
      v2813.ⵠⲆΔⵠ.ⲆⲆⲆⲆᐃⵠᐃ.stop();
      v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ = [];
      v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆⲆ = false;
      v2813.ⵠⲆᐃⲆ.ΔᐃᐃᐃⲆⲆⵠΔΔ = vVVVVV1422;
      v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
      v2813.ⵠⲆᐃⲆ.id = -1;
      v2813.ⵠⲆᐃⲆ.ⲆⲆᐃΔⲆ = false;
      v2813.ⵠⲆᐃⲆ.ⵠⲆⵠΔΔ = vVV143;
      v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆΔ = vVVV14;
      v2813.ⵠⲆᐃⲆ.ⲆⲆΔⵠⵠΔⲆ = false;
      v2813.ⵠⲆᐃⲆ.timeout = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV1432, 0, 1, 0, 1, 1);
    };
    this.ΔΔᐃΔⵠᐃⵠᐃᐃ = function () {
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ();
      v2811.waiting = vV144;
    };
    this.ⵠᐃⲆᐃⲆᐃᐃ = function (p1788) {
      for (var v2854 = 0; p1788.length > v2854; v2854++) {
        if (typeof p1788[v2854] === "string") {
          p1788[v2854] = ᐃⵠⵠ.ⵠᐃⲆᐃΔⲆᐃ(p1788[v2854]);
        }
      }
      v2813.Ⲇᐃⵠᐃⵠ.ΔΔᐃᐃᐃ(p1788[1], p1788[2], p1788[3], p1788[4]);
    };
    this.message = function (p1789) {
      this.ⲆⲆᐃⵠΔ(p1789);
    };
    this.ᐃᐃⵠⵠⲆᐃⵠⲆⲆ = function () {
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ(v772[339]);
      v2811.waiting = false;
    };
    this.ⲆΔⵠΔᐃⵠΔᐃⵠ = function () {
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ(v772[338]);
      v2811.waiting = false;
    };
    this.ⲆⲆᐃⵠⵠΔᐃⵠⵠ = function () {
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ(v772[304]);
      v2811.waiting = vVVV14;
    };
    this.ΔⵠΔᐃⵠⲆⵠΔⵠ = function () {
      v2813.ⵠⲆΔⵠ.ⵠⵠⵠⵠᐃⵠⲆ(1, 0);
      v2991.ΔⲆᐃⲆⵠⲆⵠ();
    };
    this.ⵠⲆⲆⵠᐃᐃⲆΔΔ = function (p1790) {
      var v2855 = p1790[1];
      var v2856 = v2812.ΔⵠΔⵠ[v2855];
      v2856.ⲆᐃⵠⲆ = p1790[2];
      v2856.ⵠΔΔⵠΔ = p1790[3];
      v2856.ΔΔⲆΔᐃⵠⵠ = p1790[4];
      v2856.ⵠᐃΔⵠᐃ = p1790[5];
      v2856.ⲆΔΔⲆᐃ = p1790[6];
      v2856.ΔΔᐃᐃΔ = p1790[7];
      v2856.level = p1790[8];
      var v2857 = v2812.ᐃΔΔⵠᐃ[v2855 * v2812.ᐃⵠⲆⵠΔΔⲆ];
      if (v2857) {
        v2857.ⲆᐃⵠⲆ = p1790[2];
        v2857.ⵠΔΔⵠΔ = p1790[3];
        v2857.ΔΔⲆΔᐃⵠⵠ = p1790[4];
        v2857.ⵠᐃΔⵠᐃ = p1790[5];
      }
    };
    this.ⵠᐃᐃᐃⲆΔΔΔᐃ = function (p1791) {
      if (p1791 === 29) {
        v2813.ⵠⲆΔⵠ.ⵠⵠⵠⵠᐃⵠⲆ(1, 0);
        v2991.ΔⲆᐃⲆⵠⲆⵠ();
      } else {
        this.ΔⵠΔⲆΔⵠⲆ([0, p1791, 1]);
      }
      v2813.ⵠⲆᐃⲆ.ΔⲆⵠᐃⵠⵠᐃ();
    };
    this.ΔΔⵠⲆᐃⲆᐃΔᐃ = function (p1792) {
      v2813.ⵠⵠⵠⲆΔ.ΔΔΔⵠⲆ = 0;
      v2813.ⵠⲆᐃⲆ.ⵠΔⵠΔᐃᐃᐃⲆΔ(p1792);
    };
    this.ⵠΔᐃⲆΔⲆΔⵠᐃ = function (p1793) {
      for (var v2858 = v732[p1793].r, v2859 = 0; v2859 < v2858.length; v2859++) {
        if (v2813.ⵠⲆΔⵠ.max > v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length || v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[v2858[v2859][0]] > 0) {
          var v2860 = Math.floor(v2858[v2859][1] * 0.8);
          if (!v2860) {
            continue;
          }
          this.ΔⵠΔⲆΔⵠⲆ([0, v2858[v2859][0], v2860]);
        }
      }
      v2813.ⵠⲆᐃⲆ.ΔⲆⵠᐃⵠⵠᐃ();
    };
    this.ΔΔΔᐃᐃᐃⲆⵠⲆ = function (p1794) {
      v2813.ⵠⵠⵠⲆΔ.ΔΔΔⵠⲆ = 0;
      v2813.ⵠⲆᐃⲆ.ᐃᐃⲆΔΔΔⲆΔⲆ(p1794);
    };
    this.ⲆⲆᐃⵠΔ = function (p1795) {
      if (v2813.alert.text) {
        if (p1795 !== v2813.alert.text && p1795 !== v2813.alert.list[v2813.alert.list.length - 1]) {
          v2813.alert.list.push(p1795);
        }
      } else {
        v2813.alert.text = p1795;
      }
    };
    this.ⵠᐃⲆΔᐃⵠᐃΔⵠ = function () {
      this.ⲆⲆᐃⵠΔ(v772[305]);
    };
    this.ⲆⲆᐃⲆⵠΔⵠⲆⲆ = function () {
      var v2861;
      v2861 = v2813.ⵠΔⵠ == 0 ? v772[306] : v772[307] + (v2813.ⵠΔⵠ + 1) + v772[308];
      this.ⲆⲆᐃⵠΔ(v2861);
      v2813.ⵠΔⵠ++;
    };
    this.ΔⵠΔⵠⲆΔᐃᐃⲆ = function () {
      clearTimeout(vThis5.ⲆⲆⵠΔⲆ);
      v2813.reconnect.enabled = vV142;
      v2813.ⲆⵠⵠΔᐃ = false;
      this.ⲆⲆᐃⵠΔ(v772[309]);
      v2991.ΔᐃΔⵠΔ(v2811.ⵠᐃᐃⲆᐃ);
      this.ⲆΔᐃᐃ.close();
    };
    this.ᐃΔᐃᐃⵠΔᐃⵠΔ = function () {
      v3047 = 1;
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ(v772[310]);
      v2811.waiting = vVVVV142;
    };
    this.ᐃⲆⵠⵠⲆⲆᐃᐃⵠ = function () {
      v3047 = 1;
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      this.ⲆⲆᐃⵠΔ(v772[311]);
      v2811.waiting = false;
    };
    this.ⵠΔⵠⵠⵠⲆⵠᐃΔ = function (p1796) {
      var v2862 = p1796[1];
      var v2863 = v2812.ΔⵠΔⵠ;
      v2863[v2862].ⵠᐃΔⵠΔ = p1796[2];
      v2863[v2862].ⲆᐃⵠⲆ = p1796[3];
      v2863[v2862].ⵠΔΔⵠΔ = p1796[4];
      v2863[v2862].ΔΔⲆΔᐃⵠⵠ = p1796[5];
      v2863[v2862].ⵠᐃΔⵠᐃ = p1796[6];
      v2863[v2862].ⲆΔΔⲆᐃ = p1796[7];
      v2863[v2862].ΔΔᐃᐃΔ = p1796[8];
      v2863[v2862].level = p1796[9];
      v2863[v2862].ᐃⵠⲆⲆᐃ = 0;
      v2863[v2862].ⵠⵠΔᐃᐃⵠᐃ = null;
      v2863[v2862].label = null;
      v2863[v2862].ΔΔᐃⲆᐃⲆΔ = null;
      v2863[v2862].ⲆⵠⵠΔᐃ = vVVVVV162;
      if (v2260 === 1) {
        v2863[v2862].ⵠᐃΔⵠΔ += "|" + v2862;
      }
    };
    this.ⵠⲆⵠⵠᐃⵠΔⵠⵠ = function () {
      this.ⲆΔᐃᐃ[v2259](vVWindow[v464].stringify([9]));
    };
    this.ⲆⲆΔΔⵠΔΔᐃⲆ = function () {
      this.ⲆⲆᐃⵠΔ(v772[312]);
    };
    this.ᐃᐃⲆΔᐃΔⲆ = function () {
      this.ⲆⲆᐃⵠΔ(v772[313]);
    };
    this.ΔⵠⵠⵠᐃⵠⵠⲆⵠ = function (p1797) {
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v490].stringify([38, p1797]));
      v2813.ΔᐃᐃⲆⵠ.open = vVV143;
    };
    this.ΔⵠᐃⵠᐃⲆᐃᐃᐃ = function (p1798) {
      for (var v2864 = v2268[p1798 - 1].items, v2865 = 0; v2864.length > v2865 && v2813.ⵠⲆΔⵠ.max > v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length; v2865++) {
        var v2866 = v2864[v2865][1];
        var v2867 = v2864[v2865][0];
        if (v2864[v2865][1] === 29) {
          v2813.ⵠⲆΔⵠ.ⵠⵠⵠⵠᐃⵠⲆ(1, 0);
        } else {
          this.ΔⵠΔⲆΔⵠⲆ([0, v2866, v2867]);
        }
      }
    };
    this.ΔⵠΔⲆΔⵠⲆ = function (p1799) {
      for (var v2868 = p1799.length, v2869 = v2813.ⵠⲆΔⵠ, v2870 = 1; v2870 < v2868; v2870 += 2) {
        var v2871 = p1799[v2870];
        var v2872 = p1799[v2870 + 1];
        for (var v2873 = 0; v2869.ᐃᐃΔΔΔ.length > v2873; v2873++) {
          if (v2871 == v2869.ᐃᐃΔΔΔ[v2873].id) {
            v2869.ⵠΔΔⲆ[v2871] += v2872;
            break;
          }
        }
        if (v2869.ᐃᐃΔΔΔ.length == v2873) {
          v2869.ⵠΔΔⲆ[v2871] = v2872;
          v2869.ᐃᐃΔΔΔ.push(v2991.ⵠⵠⲆ[v2871]);
          v2991.ΔⲆᐃⲆⵠⲆⵠ();
        }
      }
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ⲆᐃᐃΔ = function (p1800, p1801, p1802, p1803, p1804, p1805, p1806) {
      v2813.ⲆᐃᐃΔ.ⲆⲆⲆᐃ = p1800 / 100;
      v2813.ⲆᐃᐃΔ.ⵠᐃⵠ = p1801 / 100;
      v2813.ⲆᐃᐃΔ.c = p1802 / 100;
      v2813.ⲆᐃᐃΔ.ΔᐃΔ = p1803 / 100;
      v2813.ⲆᐃᐃΔ.ᐃΔⲆ = p1804 / 100;
      v2813.ⲆᐃᐃΔ.ᐃΔⲆⵠⵠⵠᐃ = p1805 / 100;
      v2813.ⲆᐃΔᐃⲆ = p1806;
    };
    this.ⵠⲆⲆⲆΔⵠⲆⲆᐃ = function (p1807) {
      v2991.ΔᐃΔΔ.modify(p1807, 2);
    };
    this.ⲆΔᐃΔⵠⵠᐃΔⵠ = function (p1808) {
      v2991.ΔᐃΔΔ.modify(p1808, 0);
    };
    this.ΔⵠⵠⲆⲆⵠᐃⲆⵠ = function (p1809) {
      v2991.ΔᐃΔΔ.modify(p1809, 3);
    };
    this.ⵠΔᐃⲆⲆᐃⲆΔΔ = function (p1810, p1811) {
      v2813.ⲆᐃᐃΔ.ⲆⲆⲆᐃ = p1810 / 100;
      v2813.ⲆᐃΔᐃⲆ = p1811;
    };
    this.ᐃᐃⲆᐃᐃΔⵠⵠⲆ = function (p1812) {
      v2813.ⲆᐃᐃΔ.ΔᐃΔ = p1812 / 100;
    };
    this.ⵠⲆΔⲆᐃᐃΔⵠᐃ = function (p1813) {
      v2813.ⲆᐃᐃΔ.ⵠᐃⵠ = p1813 / 100;
    };
    this.ᐃᐃᐃⵠⲆΔⲆⵠᐃ = function (p1814) {
      v2813.ⲆᐃᐃΔ.ᐃΔⲆⵠⵠⵠᐃ = p1814 / 100;
    };
    this.ᐃⲆΔΔᐃΔⲆⲆⲆ = function (p1815) {
      v2813.ⲆᐃᐃΔ.c = p1815 / 100;
    };
    this.ᐃᐃΔⲆⵠⵠΔⲆⵠ = function (p1816) {
      v2812.time = p1816;
      v2812.transition = true;
      v2992.transition = 1;
    };
    this.ⲆⵠⵠⵠᐃᐃᐃⲆᐃ = function () {
      document.getElementById("game_body").style.backgroundColor = v624.ᐃⵠᐃⵠⲆ[v2812.time];
    };
    this.ⲆⵠΔⲆΔⲆᐃᐃⲆ = function (p1817) {
      if (v2812.mode == 1 && v2812.ΔⵠΔⵠ[p1817].ⵠᐃΔⵠΔ !== "spectator") {
        this.ⲆⲆᐃⵠΔ(v2812.ΔⵠΔⵠ[p1817].ⵠᐃΔⵠΔ + v772[314]);
      }
      v2812.ΔⵠΔⵠ[p1817].ⲆⵠⵠΔᐃ = false;
    };
    this.ⵠᐃΔΔⵠΔᐃⵠⵠ = function (p1818) {
      var v2874 = new Uint16Array(p1818);
      ⲆⲆⲆⵠ.ΔⲆΔ.ᐃⲆΔΔΔ(v2874[1], v2874[2]);
    };
    this.ΔᐃⲆⵠⲆⵠⲆᐃΔ = function (p1819) {
      var v2875 = new Uint16Array(p1819);
      v2813.ΔⲆΔ.ᐃⲆΔΔΔ(v2875[1], v2875[2]);
    };
    this.ⲆᐃΔⵠΔⲆⵠⲆⵠ = function (p1820, p1821) {
      var v2876 = new Uint16Array(p1821);
      for (var v2877 = (p1820.length - 2) / 4, v2878 = 0; v2878 < v2877; v2878++) {
        var v2879 = v2876[1 + v2878 * 2];
        var v2880 = p1820[4 + v2878 * 4];
        var v2881 = Math.PI * ((p1820[5 + v2878 * 4] >> 1) / 127) * 2;
        var v2882 = v2812.ᐃΔΔⵠᐃ[v2880 * v2812.ᐃⵠⲆⵠΔΔⲆ + v2879];
        if (v2882 && v2882.ᐃⵠΔ) {
          if (v2992.loaded && v2992.ⵠᐃᐃⲆᐃ) {
            v2992.ᐃⵠΔ(p1820[5 + v2878 * 4] & 1, ΔΔⵠⵠⲆ[v2882.type], v2882.x, v2882.y);
          }
          v2882.ᐃⵠΔ.angle = v2881;
          v2882.ᐃⵠΔ.ⲆᐃⲆ = v2881;
        }
      }
    };
    this.ΔᐃΔᐃⲆⵠⲆⵠΔ = function (p1822) {
      var v2883 = new Uint16Array(p1822);
      for (var v2884 = (v2883.length - 1) / 4, v2885 = 0; v2884 > v2885; v2885++) {
        var v2886;
        var v2887 = v2885 * 4;
        var v2888 = v2883[1 + v2887];
        var v2889 = v2883[2 + v2887];
        var v2890 = (v2883[3 + v2887] >> 1) / 127 * Math.PI * 2;
        var v2891 = v2883[4 + v2887];
        var v2892 = v2809.ΔⵠΔⲆ[v2889][v2888];
        switch (v2891) {
          case 0:
            (v2886 = v2892.p[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 1:
            (v2886 = v2892.s[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV163;
            break;
          case 2:
            (v2886 = v2892.s[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 3:
            (v2886 = v2892.s[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 4:
            (v2886 = v2892.t[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV1622;
            break;
          case 5:
            (v2886 = v2892.t[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV16;
            break;
          case 6:
            (v2886 = v2892.t[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 7:
            (v2886 = v2892.t[3][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVV1622;
            break;
          case 8:
            (v2886 = v2892.t[4][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV1622;
            break;
          case 9:
            (v2886 = v2892.t[5][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vV16;
            break;
          case 10:
            (v2886 = v2892.g[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 11:
            (v2886 = v2892.g[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 12:
            (v2886 = v2892.g[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV162;
            break;
          case 13:
            (v2886 = v2892.d[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 14:
            (v2886 = v2892.d[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = v16;
            break;
          case 15:
            (v2886 = v2892.d[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV162;
            break;
          case 16:
            (v2886 = v2892.b[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 17:
            (v2886 = v2892.b[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 18:
            (v2886 = v2892.b[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV1622;
            break;
          case 19:
            (v2886 = v2892.b[3][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 20:
            (v2886 = v2892.f[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 21:
            (v2886 = v2892.f[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 22:
            (v2886 = v2892.f[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV162;
            break;
          case 23:
            (v2886 = v2892.sw[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 24:
            (v2886 = v2892.sw[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 25:
            (v2886 = v2892.sw[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 26:
            (v2886 = v2892.gw[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 27:
            (v2886 = v2892.gw[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV162;
            break;
          case 28:
            (v2886 = v2892.gw[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 29:
            (v2886 = v2892.dw[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVV163;
            break;
          case 30:
            (v2886 = v2892.dw[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVV163;
            break;
          case 31:
            (v2886 = v2892.dw[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV163;
            break;
          case 32:
            (v2886 = v2892.a[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 33:
            (v2886 = v2892.a[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV1622;
            break;
          case 34:
            (v2886 = v2892.a[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVVV1622;
            break;
          case 35:
            (v2886 = v2892.cs[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 36:
            (v2886 = v2892.cs[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 37:
            (v2886 = v2892.cs[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVV16;
            break;
          case 38:
            (v2886 = v2892.cs[3][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 40:
            (v2886 = v2892.plm[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV16;
            break;
          case 41:
            (v2886 = v2892.plm[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 42:
            (v2886 = v2892.plm[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV163;
            break;
          case 50:
            (v2886 = v2892.re[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVV163;
            break;
          case 51:
            (v2886 = v2892.re[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 52:
            (v2886 = v2892.re[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 55:
            (v2886 = v2892.c[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVVV16;
            break;
          case 56:
            (v2886 = v2892.m[0][0]).angle = v2890;
            v2886.ⲆᐃⲆ = true;
            break;
          case 57:
            (v2886 = v2892.m[1][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVVV16;
            break;
          case 58:
            (v2886 = v2892.m[2][0]).angle = v2890;
            v2886.ⲆᐃⲆ = vVV1622;
        }
        if (v2992.loaded && v2992.ⵠᐃᐃⲆᐃ && v2886) {
          v2992.ᐃⵠΔ(v2883[3 + v2887] & 1, ᐃΔⵠᐃ[v2891], v2886.x, v2886.y);
        }
      }
    };
    this.ⲆᐃᐃΔΔ = function () {
      this.ⲆΔᐃᐃ[v2259](vVVWindow[v462].stringify([35, v2813.ⲆᐃᐃΔΔ.ⵠⵠⵠᐃ, v2813.ⲆᐃᐃΔΔ.ⲆⲆⵠᐃⵠ]));
    };
    this.ΔⵠΔᐃⲆΔᐃⲆᐃ = function (p1823, p1824) {
      this.ⲆΔᐃᐃ[v2259](vVVWindow[v480].stringify([30, p1824, p1823.ⵠⵠⵠᐃ, p1823.ⲆⲆⵠᐃⵠ]));
    };
    this.ΔⵠⲆᐃᐃΔⵠ = function (p1825, p1826, p1827) {
      if (p1826) {
        this.ⲆΔᐃᐃ[v2259](vVVWindow[v480].stringify([14, p1826, p1825.ⵠⵠⵠᐃ, p1825.ⲆⲆⵠᐃⵠ]));
      } else {
        this.ⲆΔᐃᐃ[v2259](vVVWindow[v471].stringify([25, p1827, p1825.ⵠⵠⵠᐃ, p1825.ⲆⲆⵠᐃⵠ]));
      }
    };
    this.ΔⲆⲆⵠⵠᐃⲆⲆΔ = function (p1828) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([13, p1828.ⵠⵠⵠᐃ, p1828.ⲆⲆⵠᐃⵠ]));
    };
    this.ⵠᐃⵠΔΔⲆⵠᐃΔ = function (p1829) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v495].stringify([32, p1829]));
    };
    this.ΔⲆΔΔⲆΔᐃⲆᐃ = function (p1830) {
      this.ⲆΔᐃᐃ[v2259](vVVVVWindow[v462].stringify([29, p1830.ⵠⵠⵠᐃ, p1830.ⲆⲆⵠᐃⵠ]));
    };
    this.ᐃᐃᐃⵠⵠΔᐃΔᐃ = function (p1831, p1832) {
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v483].stringify([27, p1832, p1831.ⵠⵠⵠᐃ, p1831.ⲆⲆⵠᐃⵠ, p1831.type]));
    };
    this.ⵠΔⲆⲆΔᐃⲆΔᐃ = function (p1833, p1834) {
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v483].stringify([7, p1834, p1833.ⵠⵠⵠᐃ, p1833.ⲆⲆⵠᐃⵠ]));
    };
    this.ⲆⵠΔᐃⵠⵠⲆⵠᐃ = function (p1835, p1836, p1837) {
      this.ⲆΔᐃᐃ[v2259](vVVVVWindow[v480].stringify([1, p1836, p1837, p1835.ⵠⵠⵠᐃ, p1835.ⲆⲆⵠᐃⵠ]));
    };
    this.ⲆᐃⵠⵠΔΔⵠ = function (p1838) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([37, p1838.ⵠⵠⵠᐃ, p1838.ⲆⲆⵠᐃⵠ, p1838.type]));
    };
    this.ⲆΔᐃⲆᐃΔᐃΔⲆ = function (p1839) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([4, p1839.ⵠⵠⵠᐃ, p1839.ⲆⲆⵠᐃⵠ]));
    };
    this.ᐃⵠⲆᐃᐃᐃΔⵠⲆ = function (p1840) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([8, p1840.ⵠⵠⵠᐃ, p1840.ⲆⲆⵠᐃⵠ]));
    };
    this.ΔΔΔⵠΔⲆⲆⵠΔ = function (p1841) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVVWindow[v485].stringify([20, p1841.ⵠⵠⵠᐃ, p1841.ⲆⲆⵠᐃⵠ]));
    };
    this.ⲆᐃⲆᐃⲆⵠᐃΔΔ = function (p1842) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVVVWindow[v490].stringify([3, p1842.ⲆⲆⵠᐃⵠ]));
    };
    this.ⵠΔᐃⲆⵠΔΔ = function (p1843) {
      vThis5.ⲆΔᐃᐃ[v2259](vVVVVVVVVWindow[v495].stringify([23, v2813.ⵠⵠΔΔᐃ.id, v2813.ⲆᐃⲆΔᐃ[p1843]]));
    };
    this.ᐃΔⵠⵠⲆΔⵠⵠΔ = function () {
      vThis5.ⲆΔᐃᐃ[v2259](v504[v502].stringify([17, v2813.ⵠⵠΔΔᐃ.ⵠⵠⵠᐃ, v2813.ⵠⵠΔΔᐃ.id]));
    };
    this.ⵠΔⲆᐃⲆⲆⵠ = function () {
      vThis5.ⲆΔᐃᐃ[v2259](vV504[v503].stringify([12]));
    };
    this.ᐃᐃⵠⵠⲆⵠΔΔⵠ = function () {
      vThis5.ⲆΔᐃᐃ[v2259](vV504[v495].stringify([19, v2813.ⵠⵠΔΔᐃ.id]));
      if (document.getElementById("lock_team").innerHTML == "LOCK") {
        v2813.ⵠⵠΔΔᐃ.lock = 1;
        document.getElementById("lock_team").innerHTML = "UNLOCK";
      } else {
        v2813.ⵠⵠΔΔᐃ.lock = 0;
        document.getElementById("lock_team").innerHTML = "LOCK";
      }
    };
    this.ⲆⵠΔ = function (p1844, p1845, p1846) {
      var v2893 = new Uint16Array(p1844);
      if (p1846) {
        v2812.ᐃΔᐃΔᐃⵠⲆΔΔ();
      }
      for (var v2894 = (p1845.length - 2) / 18, v2895 = 0; v2895 < v2894; v2895++) {
        var v2896 = 2 + v2895 * 18;
        var v2897 = 1 + v2895 * 9;
        var v2898 = p1845[v2896];
        var v2899 = v2893[v2897 + 1];
        var v2900 = v2893[v2897 + 5];
        var v2901 = v2898 * v2812.ᐃⵠⲆⵠΔΔⲆ + v2900;
        if (v2899 & 1) {
          v2812.ⵠΔⵠⵠⵠⲆΔⵠᐃ(v2901);
        } else {
          var v2902 = v2893[v2897 + 2];
          var v2903 = v2893[v2897 + 3];
          var v2904 = v2893[v2897 + 4];
          var v2905 = v2893[v2897 + 6];
          var v2906 = v2893[v2897 + 7];
          var v2907 = v2893[v2897 + 8];
          var v2908 = p1845[v2896 + 1] / 255 * Math.PI * 2;
          if (v2812.ᐃΔΔⵠᐃ[v2901]) {
            var v2909 = v2812.ᐃΔΔⵠᐃ[v2901];
            v2909.r.x = v2903;
            v2909.r.y = v2904;
            if (v2898 != 0 && ᐃⵠⵠ.Ⲇᐃᐃᐃ(v2909, v2909.r) > 200) {
              v2909.x = v2903;
              v2909.y = v2904;
            }
            if (v2813.id !== v2909.id || v2898 === 0) {
              v2909.ᐃⵠΔΔⵠⲆⲆ = v2908;
            }
            v2909.action |= v2899;
            v2909.info = v2905;
            v2909.ⵠΔⵠⲆΔ = v2906;
            v2909.ⵠΔⲆⲆᐃ = v2907;
            if (v2909.ⲆᐃⲆ) {
              v2909.ⲆᐃⲆ(v2899);
            }
          } else {
            var v2910 = new f425(v2902, v2898, v2900, v2903, v2904, v2908, v2899, v2905, v2906, v2907);
            v2812.ᐃΔΔⵠᐃ[v2901] = v2910;
            v2812.ⲆⵠΔ[v2902].push(v2910);
          }
        }
      }
    };
    this.ⵠⵠΔⲆ = function (p1847) {
      this.ⲆⲆΔΔⵠΔⵠ = v3025;
      var v2911 = new Uint16Array(p1847);
      v2813.ⲆΔⲆᐃⲆ.ᐃⵠᐃⲆⵠ(v2911);
    };
    this.ᐃᐃᐃⵠⲆᐃⲆⲆⵠ = function (p1848) {
      if (vUndefined2 !== vVVUndefined212) {
        v732 = vUndefined2;
      }
      if (p1848.length > 0) {
        vUndefined2 = JSON.parse(JSON.stringify(v732));
        for (var v2912 = 0; p1848.length > v2912; v2912++) {
          var v2913 = p1848[v2912];
          var v2914 = v732[v2913.item];
          if (v2914 !== undefined) {
            v2914.r = v2913.recipe;
            v2914.w = v2913.workbench;
            v2914.f = v2913.fire;
            v2914.ᐃΔⲆ = v2913.water;
            v2914.e = v2913.well;
            v2914.time = 1 / v2913.time;
          }
        }
      }
    };
    this.ⵠᐃᐃΔᐃⲆⲆ = function (p1849) {
      if (p1849 && p1849.length !== 0) {
        v2813.ⵠᐃᐃΔᐃⲆⲆ.message = function (p1850) {
          var v2915 = document.createElement("canvas");
          var v2916 = v2915.getContext("2d");
          for (v2916.lineJoin = "round"; p1850.indexOf("\\n") !== -1;) {
            p1850 = p1850.replace("\\n", "\n");
          }
          p1850 = p1850.split("\n");
          ᐃⵠ = [];
          var v2917 = p1850.length * 18 + 10;
          var v2918 = 0;
          v2916.font = "14px Baloo Paaji";
          for (var v2919 = 0; v2919 < p1850.length; v2919++) {
            if (p1850[v2919].charAt(0) === "#") {
              ᐃⵠ[v2919] = p1850[v2919].substring(0, 7);
              p1850[v2919] = p1850[v2919].substring(8);
            } else {
              ᐃⵠ[v2919] = "#FFFFFF";
            }
            v2918 = Math.max(v2916.measureText(p1850[v2919]).width + 16, v2918);
          }
          v2915.height = v2917;
          v2915.width = v2918;
          v2919 = 0;
          for (; v2919 < p1850.length; v2919++) {
            var vF1623 = f162(1, p1850[v2919], 14, ᐃⵠ[v2919], null, null, null, null, null, "#000", 6);
            v2916.drawImage(vF1623, 8, v2919 * 18 + 5);
          }
          return v2915;
        }(p1849);
      } else {
        v2813.ⵠᐃᐃΔᐃⲆⲆ.message = undefined;
      }
    };
    this.ⲆⲆⲆⲆΔ = function (p1851) {
      var v2920 = v2812.ᐃΔΔⵠᐃ[p1851[1] * v2812.ᐃⵠⲆⵠΔΔⲆ];
      if (v2920) {
        if (v2812.mode === 2 && v2920.ⲆᐃⵠⲆ === 0) {
          if (v2813.ⵠΔᐃᐃⲆ) {
            if (Math.random() > 0.5) {
              v2920.text.push(p1851[2] + " ..." + Δⵠᐃⵠᐃ);
            } else {
              v2920.text.push(Δⵠᐃⵠᐃ + "... " + p1851[2]);
            }
          } else {
            v2920.text.push(ᐃⵠΔⵠᐃᐃⵠ[Math.floor(Math.random() * ᐃⵠΔⵠᐃᐃⵠ.length)]);
          }
        } else {
          v2920.text.push(p1851[2]);
        }
      }
    };
    this.ⲆⲆᐃⵠⲆᐃⲆᐃⵠ = function (p1852) {
      if (v2813.ⵠⲆΔⵠ.max !== v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ.length || v732[p1852].ⵠᐃⲆⵠ === 29 || v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(v732[p1852].ⵠᐃⲆⵠ) != -1 || v2813.ⵠⲆΔⵠ.ⲆΔΔΔⵠᐃᐃⵠⲆ(v732[p1852].r)) {
        this.ⲆΔᐃᐃ[v2259](vVWindow[v464].stringify([26, p1852]));
        return 1;
      } else {
        this.ᐃᐃⲆΔᐃΔⲆ();
        return 0;
      }
    };
    this.ⲆⲆᐃΔⲆ = function (p1853) {
      v2813.ⵠⲆᐃⲆ.ⵠⵠΔᐃⵠᐃⲆⵠⵠ(p1853);
    };
    this.ⵠⲆⵠΔΔ = function (p1854) {
      v2813.ⵠⲆᐃⲆ.ⵠⲆⵠΔΔ = p1854;
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ᐃΔⲆⲆΔ = function (p1855) {
      v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆΔ = p1855;
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ⲆⲆΔⵠⵠΔⲆ = function (p1856) {
      v2813.ⵠⲆᐃⲆ.ⲆⲆΔⵠⵠΔⲆ = p1856;
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ⵠⲆᐃᐃᐃᐃΔⵠᐃ = function (p1857) {
      this.ⲆⲆᐃⵠΔ(v772[315]);
    };
    this.ⵠᐃⲆⵠΔΔΔⲆⵠ = function () {
      v2813.ⵠⲆᐃⲆ.ΔⲆⵠᐃⵠⵠᐃ();
    };
    this.ΔⲆⲆⲆⲆ = function (p1858) {
      v2991.ΔⲆⲆⲆⲆ.ΔⵠΔⵠ = [];
      var v2921 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      var v2922 = 0;
      for (var v2923 = 1; v2923 < p1858.length; v2923 += 2) {
        var v2924 = {
          x: Math.floor(p1858[v2923] * v2812.w / 250),
          y: Math.floor(p1858[v2923 + 1] * v2812.ⵠᐃⵠ / 250)
        };
        if (v2921 && !v2922 && !v2813.ᐃᐃⲆⵠⲆΔᐃ && ᐃⵠⵠ.Ⲇᐃᐃᐃ(v2924, v2921) < 250) {
          v2922 += 1;
        } else {
          v2991.ΔⲆⲆⲆⲆ.ΔⵠΔⵠ.push(v2924);
        }
      }
    };
    this.ΔᐃΔΔⲆⵠΔⲆⵠ = function () {
      v2813.ⲆᐃᐃΔΔ.open = false;
      v2813.ΔⵠᐃⵠⲆ.enabled = false;
      v2813.ΔⵠᐃⵠⲆ.ΔΔΔⵠⲆ = -1;
      v2813.ΔⵠᐃⵠⲆ.label = null;
      v2813.ΔⵠᐃⵠⲆ.ᐃᐃΔⵠⵠⲆΔ = null;
      v2813.ΔⵠᐃⵠⲆ.now = -1;
    };
    this.ΔⵠᐃⵠⲆ = function (p1859) {
      v2272.ΔᐃⵠⵠⲆⲆⲆ = p1859;
      v2813.ΔⵠᐃⵠⲆ.enabled = vVV16;
      v2813.ΔⵠᐃⵠⲆ.ΔΔΔⵠⲆ = new Date().getTime();
      v2813.ΔⵠᐃⵠⲆ.label = null;
      v2813.ΔⵠᐃⵠⲆ.now = -1;
      for (var v2925 = [39, 45, 149, 57, 0, 5, 6, 30, 19, 62, 63, 9, 13, 12, 14, 15, 33, 34, 16, 17, 18, 94, 95, 96, 97, 98, 99, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 93, 8, 1, 3, 4, 31, 32, 55, 53, 54], v2926 = 0; v2925.length > v2926; v2926++) {
        var v2927 = v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(v2925[v2926]);
        if (v2927 != -1) {
          v2813.ⵠⲆΔⵠ.ⵠⲆΔⵠⵠⲆⵠ(v2925.length[v2926], v2927);
        }
      }
      v2813.ⵠⲆᐃⲆ.ΔⲆⵠᐃⵠⵠᐃ();
    };
    this.ⲆΔΔⲆⵠᐃΔΔⵠ = function (p1860, p1861, p1862) {
      this.ᐃⲆΔⲆΔⵠⲆ(p1860, p1861 * 256 + p1862);
    };
    this.ᐃⲆΔⲆΔⵠⲆ = function (p1863, p1864) {
      v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
      v2813.ⵠⲆΔⵠ.ΔᐃΔⵠⵠΔⲆ(p1863, p1864, v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(p1863));
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ⲆⵠⲆΔᐃⲆⲆⵠΔ = function (p1865) {
      v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
      v2813.ᐃⵠⵠⵠⵠ.wait = true;
      var v2928 = v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(p1865);
      v2813.ⵠⲆΔⵠ.ΔᐃΔⵠⵠΔⲆ(p1865, 1, v2928);
      if (v2928 >= 0 && !v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ[p1865]) {
        v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
      }
      if (p1865 == 159) {
        v2813.ⲆᐃⲆΔᐃ = [v2813.id];
      }
    };
    this.ΔⲆᐃⲆᐃⵠⲆⲆⲆ = function () {
      this.ⲆΔᐃᐃ[v2259](vVVWindow[v462].stringify([6]));
    };
    this.ⲆⲆⲆⲆᐃᐃΔΔⲆ = function (p1866) {
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v471].stringify([2, p1866.ᐃⲆᐃΔⲆ, p1866.id]));
    };
    this.ΔᐃᐃΔΔⲆΔⲆⲆ = function (p1867, p1868) {
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v483].stringify([10, p1867, p1868]));
    };
    this.ᐃΔⲆⲆᐃᐃᐃᐃΔ = function () {
      var v2929 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      if (v2929) {
        var v2930 = Math.PI * 2;
        this.ⲆΔᐃᐃ[v2259](vVVVWindow[v471].stringify([22, v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ, Math.floor((v2929.angle + v2930) % v2930 * 255 / v2930), v2813.ⵠⲆᐃⲆ.mode]));
      }
    };
    this.ᐃⲆⵠⲆΔ = function (p1869, p1870) {
      switch (p1869) {
        case 195:
        case 110:
        case 116:
        case 117:
        case 145:
        case 127:
        case 133:
        case 136:
        case 142:
        case 143:
        case 189:
        case 207:
        case 233:
        case 205:
        case 209:
        case 211:
        case 192:
        case 137:
        case 138:
        case 196:
        case 197:
        case 200:
        case 199:
          v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
          this.ⲆΔᐃᐃ[v2259](vVVVVWindow[v480].stringify([34, p1869]));
          break;
        case 114:
        case 160:
        case 115:
        case 132:
        case 188:
        case 206:
        case 204:
        case 191:
        case 193:
        case 208:
        case 210:
        case 113:
        case 162:
        case 163:
        case 164:
        case 165:
        case 118:
        case 167:
        case 151:
        case 152:
        case 166:
        case 171:
        case 172:
        case 173:
        case 124:
        case 218:
        case 212:
        case 213:
        case 214:
        case 215:
        case 216:
        case 220:
        case 168:
        case 169:
        case 170:
        case 119:
        case 122:
        case 123:
        case 217:
        case 219:
        case 125:
        case 190:
        case 141:
        case 135:
        case 153:
        case 154:
        case 155:
        case 156:
        case 157:
        case 198:
        case 201:
        case 182:
        case 183:
        case 144:
        case 159:
        case 221:
          if (!v2813.ⵠΔᐃᐃⲆ) {
            if (v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ === p1869) {
              v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
            } else {
              v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = p1869;
            }
          }
          break;
        case 0:
        case 57:
        case 5:
        case 6:
        case 30:
        case 19:
        case 9:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 92:
        case 93:
        case 12:
        case 13:
        case 14:
        case 15:
        case 33:
        case v626.ⵠΔᐃΔᐃⲆΔᐃΔ:
        case 16:
        case 17:
        case 34:
        case 18:
        case 94:
        case 95:
        case 96:
        case 97:
        case 98:
        case 99:
          if (!v2813.ⵠΔᐃᐃⲆ) {
            v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
            if ((v2931 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ]) && v2931.right === p1869) {
              this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([34, 7]));
            } else {
              v2813.ⵠᐃⲆΔᐃ.wait = vVV162;
              this.ⲆΔᐃᐃ[v2259](vVVVVVVWindow[v485].stringify([34, p1869]));
            }
          }
          break;
        case 1:
        case 8:
        case 3:
        case 4:
        case 35:
        case 36:
        case 37:
        case 28:
        case 38:
        case 39:
        case 31:
        case 32:
        case 45:
        case 46:
        case 50:
        case 51:
        case 52:
        case 55:
        case 56:
        case 53:
        case 54:
        case 89:
        case 49:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
          if (!v2813.ⵠΔᐃᐃⲆ) {
            v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
            if ((v2931 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ]) && p1869 === v2931.right) {
              this.ⲆΔᐃᐃ[v2259](vVVVVVVVWindow[v490].stringify([34, 7]));
            } else {
              this.ⲆΔᐃᐃ[v2259](vVVVVVVVVWindow[v495].stringify([34, p1869]));
            }
          }
          break;
        case 223:
        case 224:
        case 225:
        case 239:
        case 226:
        case 227:
        case 228:
        case 229:
        case 230:
        case 91:
          if (!v2813.ⵠΔᐃᐃⲆ) {
            v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
            var v2931 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
            this.ⲆΔᐃᐃ[v2259](vVVVVVVVVWindow[v495].stringify([34, p1869]));
          }
          break;
        case 77:
        case 78:
        case 79:
        case 58:
        case 25:
        case 26:
        case 27:
        case 43:
        case 44:
        case 20:
        case 21:
        case 22:
        case 59:
        case 60:
        case 90:
        case 61:
        case 47:
          if ((v2931 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ]) && p1869 !== v2931.Ⲇⵠⵠᐃⵠ) {
            v2813.ⵠⲆⵠᐃⲆ.wait = vVV1622;
          }
          this.ⲆΔᐃᐃ[v2259](vVVVVWindow[v483].stringify([34, p1869]));
          break;
        case 10:
        case 83:
        case 84:
        case 86:
        case 11:
        case 40:
        case 88:
        case 82:
        case 80:
        case 81:
        case 41:
        case 42:
        case 85:
        case 23:
        case 24:
        case 48:
          this.ⲆΔᐃᐃ[v2259](v504[v502].stringify([34, p1869]));
      }
    };
    this.ᐃᐃΔΔᐃᐃΔⵠΔ = function (p1871) {
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v464].stringify([31, p1871]));
    };
    this.ⲆΔᐃⲆⲆΔⵠⲆⵠ = function (p1872) {
      v2813.ᐃⵠⵠⵠⵠ.wait = true;
      var v2932 = v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(p1872);
      v2813.ⵠⲆΔⵠ.ⵠⲆΔⵠⵠⲆⵠ(p1872, v2932);
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ᐃΔΔᐃΔᐃΔΔΔ = function (p1873, p1874) {
      this.ⲆΔᐃᐃ[v2259](vVWindow[v490].stringify([18, p1873]));
    };
    this.ᐃΔⲆΔⵠΔᐃΔⲆ = function (p1875, p1876) {
      this.ⲆΔᐃᐃ[v2259](vVVWindow[v462].stringify([24, p1875]));
    };
    this.ΔΔᐃⵠΔᐃⲆΔΔ = function (p1877) {
      v2813.ᐃⵠⵠⵠⵠ.wait = vVVVVVV16;
      var v2933 = v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(p1877);
      v2813.ⵠⲆΔⵠ.ΔᐃΔⵠⵠΔⲆ(p1877, 1, v2933);
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ⵠΔΔⲆⵠⵠⲆΔⵠ = function (p1878) {
      var v2934 = p1878[1];
      var v2935 = p1878[2];
      v2813.ᐃⵠⵠⵠⵠ.wait = true;
      var v2936 = v2813.ⵠⲆΔⵠ.ⲆΔⵠⲆⵠ(v2934);
      v2813.ⵠⲆΔⵠ.ΔᐃΔⵠⵠΔⲆ(v2934, v2935, v2936);
      v2813.ⵠⲆᐃⲆ.ⲆᐃⲆ();
    };
    this.ΔΔΔⲆᐃⵠΔΔᐃ = function () {
      this.ⲆΔᐃᐃ[v2259](vVVWindow[v462].stringify([16]));
    };
    this.ⲆⲆⵠⲆΔⵠᐃⵠⲆ = function (p1879) {
      var v2937 = Math.PI * 2;
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v471].stringify([36, Math.floor((p1879 + v2937) % v2937 * 255 / v2937)]));
    };
    this.ΔᐃᐃⲆᐃⲆⵠⵠᐃ = function (p1880) {
      var v2938 = Math.PI * 2;
      this.ⲆΔᐃᐃ[v2259](vVVVWindow[v471].stringify([0, Math.floor((p1880 + v2938) % v2938 * 255 / v2938)]));
    };
    this.ⵠᐃⵠⵠᐃᐃᐃΔⵠ = function (p1881) {
      this.ⲆΔᐃᐃ[v2259](ΔΔᐃᐃⵠᐃⵠ[0].stringify([11, p1881]));
    };
    this.ⲆⲆⲆⲆΔΔⲆⵠΔ = function (p1882) {
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([33, p1882]));
    };
    this.ᐃⲆᐃᐃⲆⲆⵠⲆⲆ = function (p1883) {
      var v2939 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
      if (v2813.ⵠΔᐃᐃⲆ) {
        if (Math.random() > 0.5) {
          v2939.text.push(p1883.substring(0, 25) + " ..." + Δⵠᐃⵠᐃ);
        } else {
          v2939.text.push(Δⵠᐃⵠᐃ + "... " + p1883.substring(0, 25));
        }
      } else {
        v2939.text.push(p1883);
      }
      this.ⲆΔᐃᐃ[v2259](vVVVVVWindow[v483].stringify([15, p1883]));
    };
    this.ΔⲆΔΔⲆ = function (p1884) {
      var v2940 = ⲆⲆⲆⵠ.select.ⲆⵠΔ;
      if (v2940.length != 0) {
        var v2941 = [11];
        var v2942 = [];
        ᐃⵠⵠ.ΔⲆⵠⵠᐃⵠᐃ(p1884, {
          x: ⲆⲆⲆⵠ.ΔⲆΔ.rx,
          y: ⲆⲆⲆⵠ.ΔⲆΔ.ry
        });
        v2941.push(p1884.x);
        v2941.push(p1884.y);
        for (var v2943 = 0; v2943 < v2940.length; v2943++) {
          v2942.push(v2940[v2943].ΔᐃᐃⲆΔΔⵠᐃⵠ);
        }
        v2941.push(v2942);
        this.ⲆΔᐃᐃ[v2259](vVVVVVVWindow[v485].stringify(v2941));
      }
    };
    this.ⲆΔⵠⵠΔΔⵠ = 0;
    this.ⲆΔΔᐃᐃⵠΔ = {
      ⲆΔⲆ: 0,
      ᐃⲆ: 0
    };
    this.ΔᐃⵠᐃΔΔᐃⵠⵠ = function () {
      if (v3025 - this.ⲆΔⵠⵠΔΔⵠ > 50) {
        this.ⲆΔⵠⵠΔΔⵠ = v3025;
        var v2944 = v2813.ΔⲆΔ;
        var v2945 = Math.floor(v2944.x / 100);
        var v2946 = Math.floor(v2944.y / 100);
        if (this.ⲆΔΔᐃᐃⵠΔ.ᐃⲆ != v2945 || v2946 != this.ⲆΔΔᐃᐃⵠΔ.ⲆΔⲆ) {
          this.ⲆΔᐃᐃ[v2259](vVVVVVVVVWindow[v490].stringify([28, Math.floor(-v2944.x), Math.floor(-v2944.y)]));
          this.ⲆΔΔᐃᐃⵠΔ.ᐃⲆ = v2945;
          this.ⲆΔΔᐃᐃⵠΔ.ⲆΔⲆ = v2946;
        }
      }
    };
    this.ΔΔΔⵠⵠΔΔ = 0;
    this.ΔⵠⲆⲆⵠⲆⵠΔΔ = function () {
      if (v3025 - this.ΔΔΔⵠⵠΔΔ > 60000) {
        this.ΔΔΔⵠⵠΔΔ = v3025;
        this.ping();
      }
    };
    this.ΔΔᐃΔΔⲆⲆΔⵠ = function () {
      v2813.reconnect.enabled = vVVVVV162;
      if (vThis5.ⲆΔᐃᐃ.ᐃΔⵠᐃΔ == vThis5.ᐃΔⵠᐃΔ) {
        vThis5.ᐃΔⵠᐃΔ++;
        vThis5.ⲆΔᐃᐃ.close();
        v2815.connect();
      }
    };
    this.ⵠⲆⲆΔⲆⲆᐃⵠΔ = function (p1885) {
      this.ⲆⲆᐃⵠΔ(v772[316]);
      for (var v2947 = 1; p1885.length > v2947; v2947++) {
        v2813.ⲆᐃⲆΔᐃ.push(p1885[v2947]);
      }
    };
    this.ᐃᐃⵠⲆᐃⵠΔΔⵠ = function (p1886) {
      this.ⲆⲆᐃⵠΔ(v2812.ΔⵠΔⵠ[p1886].ⵠᐃΔⵠΔ + v772[318]);
      v2813.ⲆᐃⲆΔᐃ.push(p1886);
      var v2948 = document.getElementById("team_box");
      if (v2991.ΔΔᐃⵠⵠ != -1 && v2948.style.display == "inline-block") {
        v2991.ⲆⲆΔΔᐃ[v2991.ΔΔᐃⵠⵠ].action();
      }
    };
    this.ᐃⵠⲆΔⵠΔⲆᐃⵠ = function () {
      this.ⲆⲆᐃⵠΔ(v772[319]);
      v2813.ⵠⵠΔΔᐃ.wait = true;
      v2813.ⲆᐃⲆΔᐃ = [];
      document.getElementById("team_box").style.display = "none";
    };
    this.ᐃⵠΔⵠᐃΔⵠⲆΔ = function (p1887) {
      if (v2813.id == p1887) {
        this.ⲆⲆᐃⵠΔ(v772[320]);
        v2813.ⵠⵠΔΔᐃ.wait = vVVVV164;
        v2813.ⲆᐃⲆΔᐃ = [];
        document.getElementById("team_box").style.display = "none";
      } else {
        this.ⲆⲆᐃⵠΔ(v2812.ΔⵠΔⵠ[p1887].ⵠᐃΔⵠΔ + v772[321]);
        for (var v2949 = 0; v2813.ⲆᐃⲆΔᐃ.length > v2949; v2949++) {
          if (v2813.ⲆᐃⲆΔᐃ[v2949] == p1887) {
            v2813.ⲆᐃⲆΔᐃ.splice(v2949, 1);
            break;
          }
        }
        var v2950 = document.getElementById("team_box");
        if (v2991.ΔΔᐃⵠⵠ != -1 && v2950.style.display == "inline-block") {
          v2991.ⲆⲆΔΔᐃ[v2991.ΔΔᐃⵠⵠ].action();
        }
      }
    };
    this.ᐃⵠᐃⲆⲆᐃⵠᐃᐃ = function (p1888) {
      v2813.ⲆⵠⵠΔᐃ = false;
      this.ⲆⲆᐃⵠΔ(v772[322]);
      if (this.ᐃΔⵠᐃΔ == this.ⲆΔᐃᐃ.ᐃΔⵠᐃΔ) {
        this.ᐃΔⵠᐃΔ++;
        v2991.ΔᐃΔⵠΔ(v2811.ⵠᐃᐃⲆᐃ);
        this.ⲆΔᐃᐃ.close();
      }
    };
    this.ΔⲆᐃⵠΔᐃⲆΔΔ = function (p1889, p1890) {
      v2813.ⲆⵠⵠΔᐃ = vVV142;
      var v2951 = new Uint16Array(p1890);
      var v2952 = new Uint32Array(p1890);
      v2813.ΔΔᐃⵠⲆⲆⲆ.ΔⵠΔⵠⲆⵠⲆ = v774[p1889][Math.floor(Math.random() * v774[p1889].length)];
      v2813.ΔΔᐃⵠⲆⲆⲆ.ᐃⵠⲆⲆᐃ = ᐃⵠⵠ.ΔᐃΔⵠⵠΔΔ(v2812.ΔⵠΔⵠ[v2813.id].ᐃⵠⲆⲆᐃ);
      v2813.ΔΔᐃⵠⲆⲆⲆ.ᐃⲆᐃΔⵠᐃᐃ = ᐃⵠⵠ.ΔᐃΔⵠⵠΔΔ(v2952[1]);
      v2813.ΔΔᐃⵠⲆⲆⲆ.ΔᐃⵠⲆᐃ = v2951[1];
      this.ⲆⲆᐃⵠΔ(v772[317]);
      if (this.ᐃΔⵠᐃΔ == this.ⲆΔᐃᐃ.ᐃΔⵠᐃΔ) {
        this.ᐃΔⵠᐃΔ++;
        v2991.ΔᐃΔⵠΔ(v2814.ⵠᐃᐃⲆᐃ);
        this.ⲆΔᐃᐃ.close();
        try {
          vWindow.Widget.adsRefresh();
        } catch (e) {}
      }
    };
    this.ping = function () {
      this.ⲆΔᐃᐃ[v2259]("[21]");
    };
    this.ⲆᐃⵠΔΔⵠΔⵠΔ = function () {
      if (this.ⲆΔᐃᐃ.readyState == 3) {
        this.ⲆⲆΔΔⵠΔⵠ -= 600000;
      }
    };
    this.ᐃⲆΔⵠᐃΔᐃᐃⲆ = function () {
      if (v3026 > 5) {
        this.ⲆⲆΔΔⵠΔⵠ = v3025;
      }
      if (v3025 - this.ⲆⲆΔΔⵠΔⵠ > 600000) {
        this.ⲆⲆΔΔⵠΔⵠ = v3025;
        this.ΔΔᐃΔΔⲆⲆΔⵠ();
      }
    };
    this.ᐃΔⵠᐃᐃⵠΔΔΔ = function (p1891) {
      v3047++;
      clearTimeout(this.ⲆⲆⵠΔⲆ);
      document.getElementById("commandMainBoxName").innerHTML = this.ⵠⲆᐃⵠⲆ[this.ⵠΔΔᐃⵠ][this.ΔⵠᐃᐃⵠⵠΔ[this.ⵠΔΔᐃⵠ]].a;
      document.getElementById("exploreForest").src = "img/forest-leaf.png";
      document.getElementById("exploreWinter").src = "img/winter-flake.png";
      document.getElementById("exploreDesert").src = "img/desert-cactus.png";
      document.getElementById("exploreLava").src = "img/lava-volcano.png";
      this.ⲆⲆΔΔⵠΔⵠ = v3025;
      v2813.ⲆᐃᐃΔ.ⵠⲆⲆⵠΔ.ⲆⲆΔΔⵠ = v2813.ⲆᐃᐃΔ.ⵠⲆⲆⵠΔ.ᐃΔᐃⲆΔ;
      v2813.ⲆᐃᐃΔ.ΔΔᐃⲆᐃⵠⲆ.ⲆⲆΔΔⵠ = v2813.ⲆᐃᐃΔ.ΔΔᐃⲆᐃⵠⲆ.ᐃΔᐃⲆΔ;
      v2813.ⲆᐃᐃΔ.ⵠᐃⵠᐃⲆⲆⲆ.ⲆⲆΔΔⵠ = v2813.ⲆᐃᐃΔ.ⵠᐃⵠᐃⲆⲆⲆ.ᐃΔᐃⲆΔ;
      v2813.ⲆᐃᐃΔ.ΔᐃᐃΔΔᐃⲆ.ⲆⲆΔΔⵠ = v2813.ⲆᐃᐃΔ.ΔᐃᐃΔΔᐃⲆ.ᐃΔᐃⲆΔ;
      v2813.ⲆᐃᐃΔ.ⵠᐃⲆⵠᐃ.ⲆⲆΔΔⵠ = v2813.ⲆᐃᐃΔ.ⵠᐃⲆⵠᐃ.ᐃΔᐃⲆΔ;
      v2813.ⲆᐃᐃΔ.ⲆⲆⲆᐃ = 1;
      v2813.ⲆᐃᐃΔ.c = 1;
      v2813.ⲆᐃᐃΔ.ⵠᐃⵠ = 1;
      v2813.ⲆᐃᐃΔ.ΔᐃΔ = 1;
      v2813.ⲆᐃᐃΔ.ᐃΔⲆ = 1;
      v2813.ⲆᐃᐃΔ.ᐃΔⲆⵠⵠⵠᐃ = 1;
      v2813.ⵠⲆᐃᐃⲆᐃᐃ = vVVV143;
      v2991.ⲆⵠⲆⲆᐃ.display = 0;
      v2813.ⵠⲆΔⵠ.ᐃᐃΔΔΔ = [];
      v2813.ⵠⲆΔⵠ.ⵠΔΔⲆ = [];
      v2813.ⵠⲆΔⵠ.max = 10;
      v2813.ⵠⲆΔⵠ.ᐃⲆⲆΔΔᐃᐃ = 0;
      v2813.ⵠⲆΔⵠ.ΔΔⲆⵠⲆ = 0;
      v2813.ⵠⲆΔⵠ.id = -1;
      v2991.ΔᐃΔΔᐃΔⵠ = 1;
      v2991.ⵠⲆᐃⵠΔᐃᐃ = 1;
      v2991.ΔⲆⵠᐃⲆⵠΔ = 1;
      v2991.ᐃⵠᐃⵠᐃΔΔ = 1;
      v2813.ⲆⵠⵠΔᐃ = vVVV1622;
      v2813.ⵠⲆΔⵠ.ⲆⲆⲆⲆᐃⵠᐃ.stop();
      v2813.ⵠⲆᐃⲆ.ΔⵠΔΔᐃ = [];
      v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆⲆ = vV142;
      v2813.ⵠⲆᐃⲆ.ΔᐃᐃᐃⲆⲆⵠΔΔ = false;
      v2813.ⵠⲆᐃⲆ.Ⲇᐃⵠᐃ = -1;
      v2813.ⵠⲆᐃⲆ.id = -1;
      v2813.ⵠⲆᐃⲆ.ⲆⲆᐃΔⲆ = false;
      v2813.ⵠⲆᐃⲆ.ⵠⲆⵠΔΔ = false;
      v2813.ⵠⲆᐃⲆ.ᐃΔⲆⲆΔ = false;
      v2813.ⵠⲆᐃⲆ.ⲆⲆΔⵠⵠΔⲆ = false;
      v2813.ⵠⲆᐃⲆ.timeout = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV143, 0, 1, 0, 1, 1);
      v2813.ⵠᐃⲆΔᐃ.timeout = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV144, 0, 1, 0, 0.1, 1);
      v2813.ⵠᐃⲆΔᐃ.wait = false;
      v2813.ⵠⲆⵠᐃⲆ.timeout = new ᐃⵠⵠ.ⲆΔⵠᐃ(false, 0, 1, 0, 0.2, 1);
      v2813.ⵠⲆⵠᐃⲆ.wait = vVV143;
      v2813.ᐃⵠⵠⵠⵠ.timeout = new ᐃⵠⵠ.ⲆΔⵠᐃ(vVV14, 0, 1, 0, 1, 1);
      v2813.ᐃⵠⵠⵠⵠ.wait = false;
      v2813.ⵠⵠΔΔᐃ.id = -1;
      v2813.ⵠⵠΔΔᐃ.ⵠⵠⵠᐃ = -1;
      v2813.ⵠⵠΔΔᐃ.wait = vVVV1422;
      v2813.ⵠⵠΔΔᐃ.timeout = new ᐃⵠⵠ.ⲆΔⵠᐃ(vV143, 0, 1, 0, 1 / 30, 1);
      v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.x = -1;
      v2991.ΔⲆⲆⲆⲆ.ᐃΔⲆᐃⵠ.y = -1;
      v2991.ⵠᐃⲆᐃ.open = false;
      v2991.ΔⲆⲆⲆⲆ.ΔⵠΔⵠ = [];
      v2813.ΔⲆⲆⵠⲆ.enabled = false;
      v2812.mode = p1891[1];
      if (p1891[20] !== undefined && p1891[21] !== undefined) {
        v2812.ⲆΔᐃⵠⲆ = p1891[20];
        v2812.ⵠΔᐃΔⵠ = p1891[21];
        v2812.w = v2812.ⲆΔᐃⵠⲆ * v2812.ⲆΔᐃⵠⲆᐃⵠ;
        v2812.ⵠᐃⵠ = v2812.ⵠΔᐃΔⵠ * v2812.Ⲇⵠᐃⵠⵠᐃⵠ;
      }
      v2812.ⲆΔΔⵠⲆⲆⲆ = p1891[22];
      v2812.ⲆⵠΔⲆΔ = p1891[23];
      vThis5.ⵠᐃᐃΔᐃⲆⲆ(p1891[24]);
      vThis5.ᐃᐃᐃⵠⲆᐃⲆⲆⵠ(p1891[25]);
      v2813.ᐃⵠΔⵠⲆ.ᐃᐃᐃᐃᐃ = p1891[26];
      v2813.ΔΔⲆⲆⲆΔⵠ = 0;
      v2813.ᐃΔⲆᐃⲆ.ᐃᐃᐃᐃᐃ = p1891[27];
      v2812.ⵠⵠΔⲆᐃⵠΔᐃΔ(p1891[19]);
      v2812.time = p1891[5];
      v2812.ΔΔΔⲆΔ.ᐃᐃⲆⲆΔ = p1891[15];
      v2812.ΔΔΔⲆΔ.ᐃⵠᐃⲆⵠ = new Date().getTime();
      v2991.ΔᐃΔΔ.ⵠΔⲆⲆⲆΔᐃ = p1891[16];
      v2812.transition = false;
      v2813.ⵠΔⵠ = p1891[2];
      v2991.ΔᐃΔΔ.reset();
      v2813.ⲆᐃⲆΔᐃ = p1891[8];
      v2812.ⲆⵠΔ[0] = [];
      v2812.ⲆⵠΔ[100] = [];
      v2812.ⲆⵠΔ[2] = [];
      v2812.ⲆⵠΔ[1] = [];
      v2812.ⲆⵠΔ[6] = [];
      v2812.ⲆⵠΔ[3] = [];
      v2812.ⲆⵠΔ[31] = [];
      v2812.ⲆⵠΔ[37] = [];
      v2812.ⲆⵠΔ[43] = [];
      v2812.ⲆⵠΔ[44] = [];
      v2812.ⲆⵠΔ[39] = [];
      v2812.ⲆⵠΔ[40] = [];
      v2812.ⲆⵠΔ[54] = [];
      v2812.ⲆⵠΔ[55] = [];
      v2812.ⲆⵠΔ[4] = [];
      v2812.ⲆⵠΔ[7] = [];
      v2812.ⲆⵠΔ[8] = [];
      v2812.ⲆⵠΔ[9] = [];
      v2812.ⲆⵠΔ[10] = [];
      v2812.ⲆⵠΔ[15] = [];
      v2812.ⲆⵠΔ[16] = [];
      v2812.ⲆⵠΔ[17] = [];
      v2812.ⲆⵠΔ[45] = [];
      v2812.ⲆⵠΔ[46] = [];
      v2812.ⲆⵠΔ[47] = [];
      v2812.ⲆⵠΔ[48] = [];
      v2812.ⲆⵠΔ[49] = [];
      v2812.ⲆⵠΔ[53] = [];
      v2812.ⲆⵠΔ[11] = [];
      v2812.ⲆⵠΔ[22] = [];
      v2812.ⲆⵠΔ[23] = [];
      v2812.ⲆⵠΔ[5] = [];
      v2812.ⲆⵠΔ[12] = [];
      v2812.ⲆⵠΔ[13] = [];
      v2812.ⲆⵠΔ[14] = [];
      v2812.ⲆⵠΔ[60] = [];
      v2812.ⲆⵠΔ[70] = [];
      v2812.ⲆⵠΔ[71] = [];
      v2812.ⲆⵠΔ[72] = [];
      v2812.ⲆⵠΔ[73] = [];
      v2812.ⲆⵠΔ[74] = [];
      v2812.ⲆⵠΔ[81] = [];
      v2812.ⲆⵠΔ[82] = [];
      v2812.ⲆⵠΔ[87] = [];
      v2812.ⲆⵠΔ[86] = [];
      v2812.ⲆⵠΔ[34] = [];
      v2812.ⲆⵠΔ[65] = [];
      v2812.ⲆⵠΔ[66] = [];
      v2812.ⲆⵠΔ[67] = [];
      v2812.ⲆⵠΔ[62] = [];
      v2812.ⲆⵠΔ[63] = [];
      v2812.ⲆⵠΔ[78] = [];
      v2812.ⲆⵠΔ[77] = [];
      v2812.ⲆⵠΔ[75] = [];
      v2812.ⲆⵠΔ[76] = [];
      v2812.ⲆⵠΔ[64] = [];
      v2812.ⲆⵠΔ[69] = [];
      v2812.ⲆⵠΔ[68] = [];
      v2812.ⲆⵠΔ[79] = [];
      v2812.ⲆⵠΔ[89] = [];
      v2812.ⲆⵠΔ[83] = [];
      v2812.ⲆⵠΔ[84] = [];
      v2812.ⲆⵠΔ[85] = [];
      v2812.ⲆⵠΔ[80] = [];
      v2812.ⲆⵠΔ[88] = [];
      v2812.ⲆⵠΔ[91] = [];
      v2812.ⲆⵠΔ[90] = [];
      v2812.ⲆⵠΔ[61] = [];
      v2812.ⲆⵠΔ[18] = [];
      v2812.ⲆⵠΔ[19] = [];
      v2812.ⲆⵠΔ[20] = [];
      v2812.ⲆⵠΔ[21] = [];
      v2812.ⲆⵠΔ[50] = [];
      v2812.ⲆⵠΔ[52] = [];
      v2812.ⲆⵠΔ[51] = [];
      v2812.ⲆⵠΔ[29] = [];
      v2812.ⲆⵠΔ[56] = [];
      v2812.ⲆⵠΔ[30] = [];
      v2812.ⲆⵠΔ[38] = [];
      v2812.ⲆⵠΔ[33] = [];
      v2812.ⲆⵠΔ[32] = [];
      v2812.ⲆⵠΔ[24] = [];
      v2812.ⲆⵠΔ[25] = [];
      v2812.ⲆⵠΔ[26] = [];
      v2812.ⲆⵠΔ[27] = [];
      v2812.ⲆⵠΔ[28] = [];
      v2812.ⲆⵠΔ[42] = [];
      v2812.ⲆⵠΔ[41] = [];
      v2812.ⲆⵠΔ[35] = [];
      v2812.ⲆⵠΔ[36] = [];
      v2812.ᐃΔΔⵠᐃ = [];
      v2812.ᐃⵠⲆⵠΔΔⲆ = p1891[7];
      v2813.id = p1891[9];
      v2813.ᐃⲆΔⵠ = v2812.ᐃⵠⲆⵠΔΔⲆ * v2813.id;
      if (v2992.loaded) {
        v2992.ΔⵠΔⵠ[0].ᐃⲆΔⵠ = v2813.ᐃⲆΔⵠ;
        v2992.ΔⵠΔⵠ[0].ΔⵠᐃᐃᐃΔⲆ = 0;
      }
      v3020.ⲆΔⲆⵠⲆᐃⲆ();
      v2813.ΔⲆΔ.ᐃⲆΔΔΔ(p1891[3], p1891[10]);
      v2812.ΔⵠΔⵠ = [];
      var v2953 = v2812.ΔⵠΔⵠ;
      for (var v2954 = 0; v2954 < p1891[11]; v2954++) {
        v2953.push(new f445());
      }
      v2954 = 0;
      for (var v2955 = p1891[4]; v2955.length > v2954; v2954++) {
        var v2956 = v2953[v2955[v2954].i];
        v2956.ⵠᐃΔⵠΔ = v2955[v2954].n;
        v2956.ⲆᐃⵠⲆ = v2955[v2954].s;
        v2956.ⵠΔΔⵠΔ = v2955[v2954].a;
        v2956.ⲆΔΔⲆᐃ = v2955[v2954].c;
        v2956.ⵠᐃΔⵠᐃ = v2955[v2954].b;
        v2956.ΔΔᐃᐃΔ = v2955[v2954].d;
        v2956.ΔΔⲆΔᐃⵠⵠ = v2955[v2954].g;
        v2956.level = v2955[v2954].l;
        v2956.ᐃⵠⲆⲆᐃ = ᐃⵠⵠ.ΔⲆᐃΔⲆⲆⲆ(v2955[v2954].p);
        v2956.ⲆⵠⵠΔᐃ = true;
        if (v2260 === 1) {
          v2956.ⵠᐃΔⵠΔ += "|" + v2955[v2954].i;
        }
      }
      v2813.ⲆΔⲆᐃⲆ.sort();
      if (v2812.mode === 1 && v2812.ΔⵠΔⵠ[v2813.id].ⵠᐃΔⵠΔ === "spectator") {
        v2813.ᐃᐃⲆⵠⲆΔᐃ = true;
      } else {
        v2813.ᐃᐃⲆⵠⲆΔᐃ = vVVVVV142;
      }
      if (v2812.mode === 2 && v2812.ΔⵠΔⵠ[v2813.id].ⲆᐃⵠⲆ === 0) {
        v2813.ⵠΔᐃᐃⲆ = true;
      } else {
        v2813.ⵠΔᐃᐃⲆ = false;
      }
      if (v2812.mode === 3 && v2812.ΔⵠΔⵠ[v2813.id].ⲆᐃⵠⲆ === 0) {
        v2813.ᐃⵠΔᐃⵠⲆⵠ = true;
      } else {
        v2813.ᐃⵠΔᐃⵠⲆⵠ = v14;
      }
      ᐃⵠΔΔ.set("starve_token", v2813.ⲆΔⵠⲆⲆ);
      if (p1891[12] === 0) {
        v2813.ΔᐃᐃⲆⵠ.ΔΔΔⵠⲆ = 0;
        v2991.ΔᐃΔΔ.restore(p1891[17]);
        var v2957 = p1891[14];
        if (v2957[29]) {
          v2813.ⵠⲆΔⵠ.ⵠⵠⵠⵠᐃⵠⲆ(1, 0);
        }
        for (v2954 = 0; v2957.length > v2954; v2954++) {
          if (v2957[v2954]) {
            if (v2954 == 29) {
              continue;
            }
            if (v2954 == 7) {
              continue;
            }
            this.ΔⵠΔⲆΔⵠⲆ([0, v2954, v2957[v2954]]);
          }
        }
        v2813.ΔᐃᐃⲆⵠ.open = vV142;
      } else {
        if (v2812.mode === 4) {
          this.ΔⵠΔⲆΔⵠⲆ([0, 238, 1]);
        } else if (v2812.mode === 3) {
          if (v2813.ᐃⵠΔᐃⵠⲆⵠ) {
            this.ΔⵠΔⲆΔⵠⲆ([0, 190, 4]);
          } else {
            this.ΔⵠΔⲆΔⵠⲆ([0, 191, 3]);
          }
        }
        if (v2812.mode === 0 || v2812.mode === 3 || v2812.mode === 7 || v2812.mode === 4) {
          v2813.ΔᐃᐃⲆⵠ.ΔΔΔⵠⲆ = new Date().getTime();
          v2813.ΔᐃᐃⲆⵠ.open = vVVVVVV16;
          v2813.ΔᐃᐃⲆⵠ.value = p1891[13];
          v2991.ΔᐃᐃⲆⵠ.ᐃⵠᐃⲆⵠ();
        } else {
          v2813.ΔᐃᐃⲆⵠ.ΔΔΔⵠⲆ = 0;
          v2813.ΔᐃᐃⲆⵠ.open = false;
          v2813.ΔᐃᐃⲆⵠ.value = 0;
        }
        v2813.ᐃΔᐃᐃΔᐃⵠ = p1891[12].toString();
      }
      v2813.ΔⵠᐃⵠⲆ.enabled = p1891[6];
      v2813.ΔⵠᐃⵠⲆ.ΔΔΔⵠⲆ = -1;
      v2813.ΔⵠᐃⵠⲆ.label = null;
      v2813.ΔⵠᐃⵠⲆ.now = -1;
      ᐃⵠΔΔ.set("starve_token_id", v2813.ᐃΔᐃᐃΔᐃⵠ);
      if (v2813.reconnect.enabled) {
        v2813.reconnect.rotate = 0;
        v2813.reconnect.enabled = v14;
      } else {
        v2811.ΔᐃΔⵠΔ(v2991.ⵠᐃᐃⲆᐃ);
        if (ga) {
          ga("send", "event", "Game", "play", "S" + v2811.ⲆᐃⵠⲆ + "A" + v2811.ⵠΔΔⵠΔ);
        }
      }
    };
    this.connect = function () {
      vThis5.ΔⵠΔⲆᐃΔⲆ = 0;
      vThis5.ΔᐃᐃⵠΔⲆⵠ();
    };
    this.ⲆΔⲆⵠⲆΔⲆ = [];
    this.ΔᐃᐃⲆⵠⵠᐃᐃᐃ = function (p1892) {
      const v2958 = vThis5.ΔΔΔᐃⵠ.filter(p1893 => p1893.gm === p1892);
      const v2959 = {};
      for (let v2960 = 0; v2958.length > v2960; v2960++) {
        const v2961 = v2958[v2960];
        const v2962 = v2961.r;
        if (vVVVVUndefined117 !== v2962) {
          if (vVVVUndefined21 === v2959[v2962]) {
            v2959[v2962] = [];
          }
          v2959[v2962].push(v2961);
        }
      }
      function a(p1894) {
        vThis5.ⲆΔⲆⵠⲆΔⲆ[p1892] = p1894;
        const v2963 = v2959[p1894];
        const v2964 = v2963[Math.floor(Math.random() * v2963.length)];
        vThis5.ΔⲆᐃⲆΔⲆᐃ({
          domain: v2265,
          is_tls: 1,
          id: v2964.id,
          p: v2964.p
        });
      }
      if (vThis5.ⲆΔⲆⵠⲆΔⲆ[p1892] !== undefined) {
        a(vThis5.ⲆΔⲆⵠⲆΔⲆ[p1892]);
        return;
      }
      let v2965 = 1;
      function s(p1895) {
        const v2966 = new vWindow.XMLHttpRequest();
        const v2967 = p1895[0];
        const v2968 = v2967.p;
        const v2969 = v2967.r;
        const v2970 = v2968[Math.floor(Math.random() * v2968.length)];
        v2966.open("GET", "https://" + v2970 + "." + v2265 + "/", vV162);
        v2966.onreadystatechange = function () {
          if (v2966.readyState === 4) {
            if (v2965 === 0) {
              return;
            }
            v2965 = 0;
            a(v2969);
          }
        };
        v2966.send();
      }
      for (let v2971 in v2959) {
        s(v2959[v2971]);
      }
      vWindow.setTimeout(function () {
        if (v2965 === 0) {
          return;
        }
        v2965 = 0;
        const v2972 = vWindow.Object.keys(v2959);
        a(v2972[Math.floor(v2972.length * Math.random())]);
      }, 5000);
    };
    this.ⲆᐃΔΔᐃΔⵠᐃⵠ = function () {
      let v2973 = v2272.ⲆⲆⲆⲆᐃΔᐃ[vThis5.ⵠΔΔᐃⵠ];
      console.log(undefined, undefined, vVUndefined11);
      let v2974 = vThis5.ΔⵠᐃᐃⵠⵠΔ[vThis5.ⵠΔΔᐃⵠ];
      let v2975 = vThis5.ΔΔΔᐃⵠ.find(p1896 => p1896.gm == v2973 && p1896.idx == v2974);
      if (vVVVUndefined117 === v2975) {
        vThis5.ΔᐃᐃⲆⵠⵠᐃᐃᐃ(v2973);
      } else {
        vThis5.ΔⲆᐃⲆΔⲆᐃ({
          domain: v2265,
          is_tls: 1,
          id: v2975.id,
          p: v2975.p
        });
      }
    };
    this.ΔᐃᐃⵠΔⲆⵠ = function () {
      console.log(vVVUndefined21);
      if (vVVVUndefined117 !== v2263 && v2264 !== undefined) {
        console.log(vVVUndefined212, vVVUndefined21, undefined);
        vThis5.ΔⲆᐃⲆΔⲆᐃ({
          domain: v2265,
          is_tls: 1,
          id: v2264 + v2263,
          p: vThis5.ⲆΔⲆⲆⲆⵠⵠ[v2264]
        });
        return;
      }
      if (v2262 === vVUndefined11) {
        vThis5.ⲆᐃΔΔᐃΔⵠᐃⵠ();
      } else {
        vThis5.ΔⲆᐃⲆΔⲆᐃ({
          domain: v2262.domain,
          is_tls: v2262.ssl,
          id: v2262.id,
          p: [v2262.p]
        });
      }
    };
    this.ΔⲆᐃⲆΔⲆᐃ = function (p1897) {
      let v2976 = p1897.domain;
      let v2977 = p1897.is_tls;
      let v2978 = p1897.id;
      let v2979 = p1897.p;
      let v2980 = v2979[Math.floor(Math.random() * v2979.length)];
      let v2981 = v2977 ? "wss://" + v2980 + "." + v2976 + "/" + v2978 + "?" + v2813.ΔⲆᐃᐃⵠᐃⵠ : "ws://" + v2976;
      console.log(undefined, vVUndefined22);
      vThis5.ⲆΔᐃᐃ = new vWindow.WebSocket(v2981);
      vThis5.ⲆΔᐃᐃ.binaryType = "arraybuffer";
      vThis5.ⲆΔᐃᐃ.ᐃΔⵠᐃΔ = vThis5.ᐃΔⵠᐃΔ;
      vThis5.ⲆΔᐃᐃ.onmessage = function (p1898) {
        if (vThis5.ᐃΔⵠᐃΔ == vThis5.ᐃΔⵠᐃΔ) {
          if (typeof p1898.data == "string") {
            var v2982 = JSON.parse(p1898.data);
            switch (v2982[0]) {
              case 0:
                vThis5.ⲆⲆⲆⲆΔ(v2982);
                break;
              case 1:
                vThis5.ᐃᐃⵠⲆΔⵠⲆ(v2982[1]);
                break;
              case 2:
                vThis5.ⵠΔⵠⵠⵠⲆⵠᐃΔ(v2982);
                break;
              case 3:
                vThis5.ᐃΔⵠᐃᐃⵠΔΔΔ(v2982);
                break;
              case 4:
                vThis5.message(v2982[1]);
                break;
              case 5:
                vThis5.ⵠᐃⲆᐃⲆᐃᐃ(v2982);
                break;
              case 6:
                vThis5.ⵠᐃᐃΔᐃⲆⲆ(v2982[1]);
            }
          } else {
            var vF50 = function (p1899, p1900, p1901) {
              const v2983 = new Uint8Array(p1899);
              const v2984 = v2983.length;
              let v2985 = v2270[v2984];
              let vVVUndefined203 = vVUndefined20;
              let vVVVUndefined213 = vVVUndefined21;
              if (v2985 === vVVVUndefined21) {
                v2269 += v2984 * 2;
                if (v2269 < 65535) {
                  vVVUndefined203 = vVUndefined4(vVUndefined16(v2984));
                } else {
                  v2269 = v2984;
                  for (let v2986 = 0; v2986 < v2270.length; v2986++) {
                    if (v2270[v2986] !== undefined) {
                      const v2987 = v2270[v2986][0];
                      v2270[v2986] = undefined;
                      v39(v2987);
                    }
                  }
                  vVVUndefined203 = vVUndefined4(vVUndefined16(v2984));
                  v41();
                }
                vVVVUndefined213 = f4(vVVUndefined203);
                v2270[v2984] = [vVVUndefined203, vVVVUndefined213];
              } else {
                vVVUndefined203 = v2985[0];
                vVVVUndefined213 = v2985[1];
              }
              for (let v2988 = 0; v2983.length > v2988; v2988++) {
                vVVVUndefined213[v2988] = v2983[v2988];
              }
              v53(vVVUndefined203, p1900, p1901);
              for (let v2989 = 0; v2989 < v2983.length; v2989++) {
                v2983[v2989] = vVVVUndefined213[v2989];
              }
              return v2983;
            }(p1898.data, v2813.ΔⲆᐃⲆⵠΔⵠ, v2813.ⵠⵠΔᐃᐃᐃⵠΔΔ);
            var v2990 = vF50.buffer;
            switch (vF50[0]) {
              case 0:
                vThis5.ⲆⵠΔ(v2990, vF50, vVV1432);
                break;
              case 1:
                vThis5.ⲆⵠΔ(v2990, vF50, true);
                break;
              case 2:
                vThis5.ⵠᐃⲆⵠΔΔΔⲆⵠ();
                break;
              case 3:
                vThis5.ΔⵠΔⲆΔⵠⲆ(new Uint16Array(v2990));
                break;
              case 4:
                vThis5.ⲆⲆᐃⵠⵠΔᐃⵠⵠ();
                break;
              case 5:
                vThis5.ᐃⲆⵠⵠⲆⲆᐃᐃⵠ();
                break;
              case 6:
                vThis5.ⵠⲆᐃᐃᐃᐃΔⵠᐃ();
                break;
              case 7:
                vThis5.ΔᐃΔᐃⲆⵠⲆⵠΔ(v2990);
                break;
              case 8:
                vThis5.ⵠᐃᐃᐃⲆΔΔΔᐃ(vF50[1]);
                break;
              case 9:
                vThis5.ΔΔΔᐃᐃᐃⲆⵠⲆ(vF50[1]);
                break;
              case 10:
                vThis5.ᐃᐃⲆΔᐃΔⲆ();
                break;
              case 11:
                vThis5.ᐃⲆΔⲆΔⵠⲆ(vF50[1], vF50[2]);
                break;
              case 12:
                vThis5.ⲆⲆᐃΔⲆ(vF50[1]);
                break;
              case 13:
                vThis5.ⲆᐃΔⵠΔⲆⵠⲆⵠ(vF50, v2990);
                break;
              case 14:
                vThis5.ΔⵠⲆⵠΔᐃⵠⲆᐃ();
                break;
              case 15:
                vThis5.ⲆⵠΔⲆΔⲆᐃᐃⲆ(vF50[1]);
                break;
              case 16:
                vThis5.ⲆᐃᐃΔ(vF50[1], vF50[2], vF50[3], vF50[4], vF50[5], vF50[6], vF50[7]);
                break;
              case 17:
                vThis5.ΔᐃⲆⵠⲆⵠⲆᐃΔ(v2990);
                break;
              case 18:
                vThis5.ⲆⲆΔΔⵠΔΔᐃⲆ();
                break;
              case 19:
                vThis5.ᐃΔⲆⲆΔ(vF50[1]);
                break;
              case 20:
                vThis5.ⲆⲆᐃⲆⵠΔⵠⲆⲆ();
                break;
              case 21:
                vThis5.ⵠⵠΔⲆ(v2990);
                break;
              case 22:
                vThis5.ᐃᐃΔⲆⵠⵠΔⲆⵠ(vF50[1]);
                break;
              case 23:
                vThis5.ⵠᐃΔΔⵠΔᐃⵠⵠ(v2990);
                break;
              case 24:
                vThis5.ⲆⵠⲆΔᐃⲆⲆⵠΔ(vF50[1]);
                break;
              case 25:
                vThis5.ΔⲆᐃⵠΔᐃⲆΔΔ(vF50[1], v2990);
                break;
              case 26:
                vThis5.ΔⲆⲆⲆⲆ(vF50);
                break;
              case 27:
                vThis5.ΔⵠΔⵠⲆΔᐃᐃⲆ();
                break;
              case 28:
                vThis5.ΔⵠᐃⵠⲆ(vF50[1]);
                break;
              case 29:
                vThis5.ΔᐃΔΔⲆⵠΔⲆⵠ();
                break;
              case 30:
                vThis5.ᐃⵠᐃⲆⲆᐃⵠᐃᐃ();
                break;
              case 31:
                vThis5.ⵠⲆⲆΔⲆⲆᐃⵠΔ(vF50);
                break;
              case 32:
                vThis5.ᐃⵠΔⵠᐃΔⵠⲆΔ(vF50[1]);
                break;
              case 33:
                vThis5.ᐃᐃⵠⲆᐃⵠΔΔⵠ(vF50[1]);
                break;
              case 34:
                vThis5.ᐃⵠⲆΔⵠΔⲆᐃⵠ();
                break;
              case 35:
                vThis5.ΔⵠᐃⵠᐃⲆᐃᐃᐃ(vF50[1]);
                break;
              case 36:
                vThis5.ⲆⲆΔⵠⵠΔⲆ(vF50[1]);
                break;
              case 37:
                vThis5.ⵠΔᐃⲆⲆᐃⲆΔΔ(vF50[1], vF50[2]);
                break;
              case 38:
                vThis5.ⵠⲆΔⲆᐃᐃΔⵠᐃ(vF50[1]);
                break;
              case 39:
                vThis5.ᐃᐃⲆᐃᐃΔⵠⵠⲆ(vF50[1]);
                break;
              case 40:
                vThis5.ΔⵠΔᐃⵠⲆⵠΔⵠ();
                break;
              case 41:
                vThis5.ⵠⲆⲆⵠᐃᐃⲆΔΔ(vF50);
                break;
              case 42:
                vThis5.ⵠⲆⲆⲆΔⵠⲆⲆᐃ(vF50[1]);
                break;
              case 43:
                vThis5.ⲆΔᐃΔⵠⵠᐃΔⵠ(vF50[1]);
                break;
              case 44:
                vThis5.ΔⵠⵠⲆⲆⵠᐃⲆⵠ(vF50[1]);
                break;
              case 45:
                vThis5.ΔΔⵠⲆᐃⲆᐃΔᐃ(vF50[1]);
                break;
              case 46:
                vThis5.ⵠΔᐃⲆΔⲆΔⵠᐃ(vF50[1]);
                break;
              case 47:
                vThis5.ⵠⲆⵠΔΔ(vF50[1]);
                break;
              case 48:
                vThis5.ⵠᐃⲆΔᐃⵠᐃΔⵠ();
                break;
              case 50:
                vThis5.ⲆΔΔⲆⵠᐃΔΔⵠ(vF50[1], vF50[2], vF50[3]);
                break;
              case 51:
                vThis5.ᐃΔᐃᐃⵠΔᐃⵠΔ();
                break;
              case 52:
                vThis5.ⲆΔᐃⲆⲆΔⵠⲆⵠ(vF50[1]);
                break;
              case 53:
                vThis5.ΔΔᐃⵠΔᐃⲆΔΔ(vF50[1]);
                break;
              case 54:
                vThis5.ⲆⵠⲆᐃΔⵠΔⵠΔ();
                break;
              case 55:
                vThis5.ᐃᐃᐃⵠⲆΔⲆⵠᐃ(vF50[1]);
                break;
              case 56:
                vThis5.ᐃⲆΔΔᐃΔⲆⲆⲆ(vF50[1]);
                break;
              case 57:
                vThis5.ⲆΔⵠΔᐃⵠΔᐃⵠ();
                break;
              case 58:
                vThis5.ᐃᐃⵠⵠⲆᐃⵠⲆⲆ();
                break;
              case 59:
                vThis5.ΔᐃᐃⵠⵠᐃⲆⵠⵠ();
                break;
              case 60:
                vThis5.ⲆⵠᐃⵠⵠΔᐃΔⵠ();
                break;
              case 61:
                v2813.ΔⲆΔ.ᐃⵠΔᐃΔΔⵠ = 0.2;
                v2813.ΔⲆΔ.ΔΔΔⵠⲆ = 3;
                break;
              case 62:
                vThis5.ⵠΔΔⲆⵠⵠⲆΔⵠ(new Uint16Array(v2990));
                break;
              case 63:
                vThis5.ⵠⵠᐃΔᐃⲆΔᐃΔ();
                break;
              case 64:
                vThis5.ΔⲆΔⲆᐃΔⵠᐃᐃ();
                break;
              case 65:
                vThis5.ⲆⲆⵠⵠᐃⲆΔⲆⲆ();
                break;
              case 66:
                vThis5.ⲆΔΔᐃⵠΔᐃΔᐃ();
                break;
              case 67:
                vThis5.ΔⲆⲆᐃⲆⲆΔΔⵠ(vF50[1]);
                break;
              case 68:
                vThis5.ⲆΔⲆⲆⲆΔᐃⵠⲆ(vF50[1]);
                break;
              case 69:
                vThis5.ΔΔⲆⲆⲆΔⵠ(vF50[1]);
                break;
              case 70:
                vThis5.ⲆⲆⵠᐃⵠⵠΔΔⵠ(vF50[1]);
                break;
              case 71:
                vThis5.ⲆᐃΔᐃⲆ(vF50[1]);
            }
          }
        }
      };
      vThis5.ⲆΔᐃᐃ.onerror = function () {
        if (v2813.reconnect.enabled) {
          vWindow.setTimeout(vThis5.timeout, 2500);
        }
      };
      this.ⲆΔᐃᐃ.onopen = function () {
        clearTimeout(vThis5.ⲆⲆⵠΔⲆ);
        v2813.ⲆᐃᐃΔⲆᐃᐃ = v2813.ⲆᐃᐃΔⲆᐃᐃ || ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("token");
        ᐃⵠⵠ.ⲆⲆᐃΔⵠⵠⲆ().then(p1902 => {
          vThis5.ⲆΔᐃᐃ[v2259](vV504[v502].stringify([v2811.ⵠᐃΔⵠΔ.input.value, screen.width + 200, screen.height + 200, 52, v2813.ⲆΔⵠⲆⲆ, v2813.ᐃΔᐃᐃΔᐃⵠ, v2813.reconnect.enabled ? 1 : 0, v2811.ⲆᐃⵠⲆ, v2811.ⵠΔΔⵠΔ, v2811.ΔΔⲆⵠⲆ, v2811.ⵠᐃΔⵠᐃ, v2811.ⲆΔΔⲆᐃ, v2811.ΔΔᐃᐃΔ, vVVUndefined19 === vVVVUndefined2022 ? 0 : vVVUndefined19, vUndefined5 === vVUndefined19 ? 0 : vUndefined5.substring(vUndefined5.length - 50), v2261, v2813.ⲆᐃᐃΔⲆᐃᐃ, p1902, v2813.ⵠΔⵠΔⵠⵠⲆ, v2813.ᐃᐃⵠᐃᐃΔⵠ]));
          v2813.ⲆᐃᐃΔⲆᐃᐃ = undefined;
          v2813.ⵠΔⵠΔⵠⵠⲆ = vVVUndefined20;
          v2813.ᐃᐃⵠᐃᐃΔⵠ = vVVUndefined21;
          v2813.ΔⲆᐃᐃⵠᐃⵠ = vVVUndefined212;
          vThis5.ⲆⲆⵠΔⲆ = setTimeout(vThis5.timeout, 2000);
        });
      };
    };
  }();
  var v2991 = {
    ⵠⲆⵠᐃᐃ: false
  };
  var v2992 = new function () {
    this.ⵠᐃᐃⲆᐃ = 0;
    this.loaded = 0;
    this.transition = 0;
    this.ᐃΔⵠⵠΔⵠⲆ = function (p1903) {
      return p1903 / v2812.w * 100;
    };
    this.ᐃᐃⲆⵠⲆⲆⵠ = function (p1904) {
      return p1904 / v2812.ⵠᐃⵠ * 100;
    };
    this.ΔΔⲆⵠⲆᐃⲆ = function (p1905, p1906) {
      p1905 = this.ᐃΔⵠⵠΔⵠⲆ(p1905) - this.ᐃⲆⲆⲆⵠ.x;
      return this.ᐃⲆⲆⲆⵠ.x + p1906 * p1905;
    };
    this.ⵠⵠᐃⵠⵠⲆⲆ = function (p1907, p1908) {
      p1907 = Math.abs(this.ᐃᐃⲆⵠⲆⲆⵠ(p1907) - this.ᐃⲆⲆⲆⵠ.y);
      return this.ᐃⲆⲆⲆⵠ.y + p1908 * p1907;
    };
    this.sample = {};
    this.ᐃΔᐃⲆⲆ = {};
    this.ⲆⲆⲆⵠ = {};
    this.ᐃΔᐃᐃᐃΔⲆ = function (p1909, p1910, p1911, p1912) {
      for (var v2993 = 0; p1910.length > v2993; v2993++) {
        var v2994 = p1910[v2993];
        if (!p1909.playing(v2994)) {
          p1909.pos(p1911, p1912, -0.5, v2994);
          p1909.play(v2994);
          return vVVVV16;
        }
      }
      return vVV1432;
    };
    this.ᐃⵠΔ = function (p1913, p1914, p1915, p1916) {
      p1915 = this.ΔΔⲆⵠⲆᐃⲆ(p1915, ⲆⵠΔᐃΔ.ΔⵠⲆΔⵠⵠⲆ);
      p1916 = this.ⵠⵠᐃⵠⵠⲆⲆ(p1916, ⲆⵠΔᐃΔ.ΔⵠⲆΔⵠⵠⲆ);
      console.log("HIT", p1913, p1914, p1915, p1916, ⲆⵠΔᐃΔ.ΔⵠⲆΔⵠⵠⲆ);
      if (p1913) {
        if (p1914 === 1) {
          this.ᐃΔᐃᐃᐃΔⲆ(this.ⲆⲆⲆⵠ.ΔⲆᐃⲆᐃⲆⵠ, this.sample.ΔⲆᐃⲆᐃⲆⵠ, p1915, p1916);
        } else if (p1914 === 0) {
          this.ᐃΔᐃᐃᐃΔⲆ(this.ⲆⲆⲆⵠ.ⲆⲆⵠΔⵠΔⲆ, this.sample.ⲆⲆⵠΔⵠΔⲆ, p1915, p1916);
        }
      } else {
        this.ᐃΔᐃᐃᐃΔⲆ(this.ⲆⲆⲆⵠ.ⲆⲆΔΔⲆ, this.sample.ⲆⲆΔΔⲆ, p1915, p1916);
      }
    };
    this.ᐃⲆⲆⲆⵠ = {
      x: 0,
      y: 0
    };
    this.ⲆᐃⲆⵠⵠⲆᐃ = {
      y: 0,
      x: 0
    };
    this.ⲆⵠΔᐃⵠ = {};
    this.ΔⵠΔⵠ = [];
    this.ᐃⲆΔⵠΔ = function (p1917, p1918) {
      for (var v2995 in this.ⲆⵠΔᐃⵠ) {
        var v2996 = this.ⲆⵠΔᐃⵠ[v2995];
        v2996.check(p1917);
        if (v2996.ⲆⲆΔⲆᐃⲆⲆ) {
          if (v2812.ΔΔΔⲆΔ.now < 460000) {
            v2996.ⲆⲆⲆⵠⲆ();
          }
          if (p1918) {
            v2996.ⲆᐃⲆ(p1917, this.ᐃⲆⲆⲆⵠ);
          }
          if (this.transition) {
            v2996.transition();
          }
        }
      }
      this.transition &&= 0;
    };
    this.ⲆᐃⲆⲆΔⲆⵠᐃᐃ = function () {
      var v2997 = [];
      for (var v2998 = 0; v2998 < this.ΔⵠΔⵠ.length; v2998++) {
        if ((v3001 = this.ΔⵠΔⵠ[v2998]).ΔⵠᐃᐃᐃΔⲆ) {
          v2997.push(v2998);
        } else if (!v3001.ΔⵠᐃᐃᐃΔⲆ && !v2812.ᐃΔΔⵠᐃ[v3001.ᐃⲆΔⵠ]) {
          v3001.ᐃⲆⲆΔⵠᐃᐃ();
          v2997.push(v2998);
        }
      }
      var v2999 = v2812.ⲆⵠΔ[0];
      var v3000 = 0;
      for (v2998 = 0; v2998 < v2999.length && v3000 < v2997.length; v2998++) {
        var v3001 = v2999[v2998];
        if ((v2812.mode != 1 || v2812.ΔⵠΔⵠ[v3001.id].ⵠᐃΔⵠΔ !== "spectator") && v3001.ᐃᐃⵠⵠⵠ === -1 && v3001.ᐃⲆΔⵠ !== v2813.ᐃⲆΔⵠ) {
          this.ΔⵠΔⵠ[v2997[v3000]].ᐃⵠᐃⲆⵠ(v3001.ᐃⲆΔⵠ);
          v3000++;
        }
      }
    };
    this.ΔΔᐃⲆⵠⵠⲆⲆⵠ = function () {
      this.ⲆᐃⲆⲆΔⲆⵠᐃᐃ();
      for (var v3002 = 0; this.ΔⵠΔⵠ.length > v3002; v3002++) {
        var v3003 = this.ΔⵠΔⵠ[v3002];
        if (!v3003.ΔⵠᐃᐃᐃΔⲆ && v3003.check()) {
          v3003.ⲆᐃⲆ();
        }
      }
    };
    this.ΔⵠⵠⲆΔⲆⵠᐃΔ = function (p1919) {
      if (this.ⲆᐃⲆⵠⵠⲆᐃ.x === p1919.x && p1919.y === this.ⲆᐃⲆⵠⵠⲆᐃ.y) {
        return 0;
      } else {
        this.ⲆᐃⲆⵠⵠⲆᐃ.x = p1919.x;
        this.ⲆᐃⲆⵠⵠⲆᐃ.y = p1919.y;
        this.ᐃⲆⲆⲆⵠ.x = this.ᐃΔⵠⵠΔⵠⲆ(p1919.x);
        this.ᐃⲆⲆⲆⵠ.y = this.ᐃᐃⲆⵠⲆⲆⵠ(p1919.y);
        Howler.pos(this.ᐃⲆⲆⲆⵠ.x, this.ᐃⲆⲆⲆⵠ.y, 0);
        return 1;
      }
    };
    this.ⲆᐃⲆᐃⵠᐃᐃⲆⲆ = function () {
      if (this.ⵠᐃᐃⲆᐃ && this.loaded) {
        var v3004 = v2812.ᐃΔΔⵠᐃ[v2813.ᐃⲆΔⵠ];
        if (v3004) {
          v3004.ᐃᐃⵠⵠⵠ = 0;
          var v3005 = this.ΔⵠⵠⲆΔⲆⵠᐃΔ(v3004);
          if (v2812.mode !== 2 && v2812.mode !== 4 && v2812.mode !== 5) {
            this.ᐃⲆΔⵠΔ(v3004, v3005);
          }
          this.ΔΔᐃⲆⵠⵠⲆⲆⵠ();
        }
      }
    };
    this.ᐃⲆⵠᐃⲆᐃΔᐃΔ = function () {
      for (var v3006 in v2782) {
        var v3007 = v2782[v3006];
        if (typeof v3007 === "object" && v3007.path) {
          v3007.ᐃⵠⲆΔΔ = new Howl({
            src: v3007.path,
            volume: 0,
            sprite: v3007.ⵠΔ
          });
        }
        for (var v3008 in v3007.sample) {
          var v3009 = v3007.sample[v3008];
          var v3010 = [];
          console.log(undefined);
          for (var v3011 = 0; v3011 < v3009; v3011++) {
            var v3012 = v3007.ᐃⵠⲆΔΔ.play(v3008);
            v3007.ᐃⵠⲆΔΔ.stop(v3012);
            v3007.ᐃⵠⲆΔΔ.on("fade", function (p1920) {
              if (!this.volume(p1920)) {
                console.log(undefined, vVUndefined21);
                this.stop(p1920);
              }
            }, v3012);
            v3010.push(v3012);
          }
          if (v3010.length > 1) {
            v2992.sample[v3008] = v3010;
          } else {
            v2992.sample[v3008] = v3010[0];
          }
          v2992.ⲆⲆⲆⵠ[v3008] = v3007.ᐃⵠⲆΔΔ;
        }
      }
    };
    this.ⲆⵠᐃⲆⲆᐃΔ = function (p1921, p1922, p1923) {
      for (var v3013 = 0; v3013 < p1921.length; v3013++) {
        p1922.volume(p1923, p1921[v3013]);
      }
    };
    this.ΔᐃⵠΔⲆΔΔ = function (p1924, p1925, p1926, p1927, p1928, p1929) {
      var vP1924 = p1924;
      for (var v3014 = 0; p1926 > v3014; v3014++) {
        var v3015 = vP1924[v3014] = [];
        for (ⲆΔⲆ = 0; ⲆΔⲆ < p1927; ⲆΔⲆ++) {
          v3015[ⲆΔⲆ] = v2992.sample[p1928 + ⲆΔⲆ][v3014];
          p1925.ᐃⵠⲆΔΔ.volume(p1929, v3015[ⲆΔⲆ]);
        }
      }
    };
    this.ᐃⵠᐃⲆⵠ = function () {
      v2992.ᐃⲆⵠᐃⲆᐃΔᐃΔ();
      v2992.ᐃΔᐃⲆⲆ.ᐃⲆᐃΔⲆⲆⲆ = [];
      v2992.ᐃΔᐃⲆⲆ.ⵠᐃⲆΔᐃ = [];
      v2992.ᐃΔᐃⲆⲆ.ⵠᐃⲆⵠⵠ = [];
      v2992.ΔᐃⵠΔⲆΔΔ(v2992.ᐃΔᐃⲆⲆ.ᐃⲆᐃΔⲆⲆⲆ, v2782.ⲆⲆⵠΔᐃᐃᐃ, 8, 3, "p", 0.15);
      v2992.ΔᐃⵠΔⲆΔΔ(v2992.ᐃΔᐃⲆⲆ.ⵠᐃⲆΔᐃ, v2782.ⵠⲆⲆⵠΔⲆᐃ, 8, 4, "w", 0.15);
      v2992.ΔᐃⵠΔⲆΔΔ(v2992.ᐃΔᐃⲆⲆ.ⵠᐃⲆⵠⵠ, v2782.ⲆᐃⲆⲆⲆⲆᐃ, 8, 3, "d", 0.09);
      v2992.ⲆⵠᐃⲆⲆᐃΔ(v2992.sample.ⲆⲆΔΔⲆ, v2992.ⲆⲆⲆⵠ.ⲆⲆΔΔⲆ, 0.15);
      v2992.ⲆⵠᐃⲆⲆᐃΔ(v2992.sample.ⲆⲆⵠΔⵠΔⲆ, v2992.ⲆⲆⲆⵠ.ⲆⲆⵠΔⵠΔⲆ, 0.2);
      v2992.ⲆⵠᐃⲆⲆᐃΔ(v2992.sample.ΔⲆᐃⲆᐃⲆⵠ, v2992.ⲆⲆⲆⵠ.ΔⲆᐃⲆᐃⲆⵠ, 1);
      v2992.ⲆⵠΔᐃⵠ.ᐃΔⵠΔⵠΔⲆⵠⵠ = new f496(12, this.sample.ΔΔᐃⵠⲆΔⲆ, this.sample.ΔᐃᐃᐃⲆΔⲆ, 5000, 0.05, 0.4, v2782.ᐃⵠᐃΔⵠⵠⲆ.ᐃⵠⲆΔΔ, 3000, {
        x: v624.ⲆⲆⵠⲆⵠⲆⵠ,
        y: v624.ⵠⲆΔΔⵠⵠⲆ,
        w: v2812.w,
        ⵠᐃⵠ: v2812.ⵠᐃⵠ
      }, {
        x: v624.ⲆⲆⵠⲆⵠⲆⵠ - 2300,
        y: v624.ⵠⲆΔΔⵠⵠⲆ - 4000,
        w: v2812.w,
        ⵠᐃⵠ: v2812.ⵠᐃⵠ
      }, {
        x: v624.ⲆⲆⵠⲆⵠⲆⵠ - 1500,
        y: v624.ⵠⲆΔΔⵠⵠⲆ - 2000,
        w: v2812.w,
        ⵠᐃⵠ: v2812.ⵠᐃⵠ
      });
      v2992.ⲆⵠΔᐃⵠ.ΔᐃⲆⵠⲆΔΔⲆⲆ = new f496(12, this.sample.ⵠⲆΔᐃⲆΔⲆ, this.sample.ⵠⵠⵠΔⵠⵠⲆ, 5000, 0.03, 0.25, v2782.ᐃⵠᐃΔⵠⵠⲆ.ᐃⵠⲆΔΔ, 3000, {
        x: 0,
        y: v624.ⵠⲆΔΔⵠⵠⲆ + 800,
        w: v624.ⲆⲆⵠⲆⵠⲆⵠ - 2300,
        ⵠᐃⵠ: v2812.ⵠᐃⵠ
      }, {
        x: -100,
        y: v624.ⵠⲆΔΔⵠⵠⲆ - 300,
        w: v624.ⲆⲆⵠⲆⵠⲆⵠ - 100,
        ⵠᐃⵠ: v2812.ⵠᐃⵠ
      }, {
        x: -100,
        y: v624.ⵠⲆΔΔⵠⵠⲆ + 400,
        w: v624.ⲆⲆⵠⲆⵠⲆⵠ - 1400,
        ⵠᐃⵠ: v2812.ⵠᐃⵠ
      });
      v2992.ⲆⵠΔᐃⵠ.ᐃᐃⲆⵠᐃⵠⵠ = new f496(12, this.sample.ᐃⵠⵠⲆᐃᐃΔ, this.sample.ΔⲆⲆⵠⲆΔⲆ, 5000, 0.01, 0.22, v2782.ᐃⵠᐃΔⵠⵠⲆ.ᐃⵠⲆΔΔ, 3000, {
        x: -100,
        y: -100,
        w: v2812.w + 200,
        ⵠᐃⵠ: v624.ⵠⲆΔΔⵠⵠⲆ - 1000
      }, {
        x: -100,
        y: -100,
        w: v2812.w + 200,
        ⵠᐃⵠ: v624.ⵠⲆΔΔⵠⵠⲆ + 600
      }, {
        x: -100,
        y: -100,
        w: v2812.w + 200,
        ⵠᐃⵠ: v624.ⵠⲆΔΔⵠⵠⲆ + 100
      });
      for (var v3016 = 0; v3016 < 8; v3016++) {
        v2992.ΔⵠΔⵠ[v3016] = new f500(v3016);
      }
      v2992.ΔⵠΔⵠ[0].ᐃⵠᐃⲆⵠ(v2813.ᐃⲆΔⵠ);
      v2992.loaded = 1;
    };
    this.ΔⲆⵠᐃᐃⵠΔᐃⲆ = function () {
      if (!this.transition && v2812.ΔΔΔⲆΔ.now < 460000) {
        this.transition = 1;
      }
    };
    this.ΔᐃΔⵠΔ = function () {
      if (this.ⵠᐃᐃⲆᐃ && this.loaded) {
        for (var v3017 in v2992.sample) {
          var v3018 = v2992.sample[v3017];
          if (typeof v3018 === "object") {
            for (var v3019 = 0; v3019 < v3018.length; v3019++) {
              v2992.ⲆⲆⲆⵠ[v3017].stop(v3018[v3019]);
            }
          } else {
            v2992.ⲆⲆⲆⵠ[v3017].stop(v3018);
          }
        }
        for (v3019 = 0; v3019 < v2992.ΔⵠΔⵠ.length; v3019++) {
          v2992.ΔⵠΔⵠ[v3019].ᐃⲆⲆΔⵠᐃᐃ();
        }
      }
    };
    this.select = function () {
      if (v2992.ⵠᐃᐃⲆᐃ) {
        v2992.ΔᐃΔⵠΔ();
      } else {
        if (!v2992.loaded) {
          v2992.ᐃⵠᐃⲆⵠ();
        }
        v2992.ΔⵠΔⵠ[0].ᐃⲆΔⵠ = v2813.ᐃⲆΔⵠ;
        v2992.ΔⵠΔⵠ[0].ΔⵠᐃᐃᐃΔⲆ = 0;
        v2992.ΔⲆⵠᐃᐃⵠΔᐃⲆ();
      }
      v2992.ⵠᐃᐃⲆᐃ = !v2992.ⵠᐃᐃⲆᐃ;
    };
  }();
  var v3020 = new function () {
    this.ⵠΔⲆΔᐃᐃⲆ = function () {
      this.ᐃᐃᐃⲆⵠ = 81;
      this.ⵠᐃᐃⲆⵠ = 68;
      this.ᐃᐃⵠⲆᐃ = 90;
      this.ᐃⲆᐃⵠⲆΔΔ = 83;
    };
    this.ᐃⵠⲆΔⲆᐃⵠ = function () {
      this.ᐃᐃᐃⲆⵠ = 65;
      this.ⵠᐃᐃⲆⵠ = 68;
      this.ᐃᐃⵠⲆᐃ = 87;
      this.ⲆΔᐃᐃⲆ = 83;
    };
    this.ⲆΔⲆⵠΔ = 0;
    this.ᐃⲆᐃⵠⲆΔΔ = 1;
    this.ΔⲆᐃΔΔΔⵠ = 49;
    this.ΔⲆⲆΔΔⲆⵠ = 50;
    this.ΔᐃⲆⲆⲆΔⵠ = 51;
    this.ᐃᐃⵠⵠᐃΔⵠ = 52;
    this.ⲆⲆᐃⵠⲆⲆⵠΔⲆ = 53;
    this.ᐃᐃᐃᐃⲆⵠⵠ = 17;
    this.ᐃⲆⲆᐃΔΔᐃ = 37;
    this.ΔⵠⵠⲆⲆΔⵠ = 39;
    this.ᐃⲆⲆⵠᐃⵠⲆ = 38;
    this.ᐃⵠΔⲆΔⲆΔ = 40;
    this.ᐃᐃⲆⲆⵠᐃᐃ = 32;
    this.ⵠⵠⵠᐃⵠΔΔ = 82;
    this.ᐃⲆⲆⲆΔᐃⲆ = 71;
    this.ⵠⲆⲆⵠⵠⵠᐃ = 86;
    this.ᐃⲆⵠΔⵠⵠᐃ = 66;
    this.ᐃⵠⲆΔⲆᐃⵠ();
    this.keys = new Array(255);
    for (var v3021 = 0; v3021 < 255; v3021++) {
      this.keys[v3021] = this.ⲆΔⲆⵠΔ;
    }
    this.up = function (p1930) {
      var v3022 = Math.min(p1930.charCode || p1930.keyCode, 255);
      this.keys[v3022] = this.ⲆΔⲆⵠΔ;
    };
    this.down = function (p1931) {
      var v3023 = Math.min(p1931.charCode || p1931.keyCode, 255);
      if (v3023 == this.ᐃᐃᐃⲆⵠ || this.ᐃⲆⲆᐃΔΔᐃ == v3023) {
        this.ⵠⲆᐃᐃⲆⵠᐃ();
      } else if (this.ᐃᐃⵠⲆᐃ == v3023 || this.ᐃⲆⲆⵠᐃⵠⲆ == v3023) {
        this.ᐃⲆⵠⵠⵠΔⲆ();
      } else if (this.ᐃⲆᐃⵠⲆΔΔ == v3023 || this.ⵠⵠⵠⲆⵠᐃΔⲆⲆ == v3023) {
        this.ᐃⲆⲆΔⵠⲆⵠ();
      } else if (this.ⵠᐃᐃⲆⵠ == v3023 || v3023 == this.ΔⵠⵠⲆⲆΔⵠ) {
        this.ΔΔⵠⲆⵠΔᐃ();
      }
      this.keys[v3023] = this.ᐃⲆᐃⵠⲆΔΔ;
      return v3023;
    };
    this.ⵠⲆᐃᐃⲆⵠᐃ = function () {
      this.keys[this.ⵠᐃᐃⲆⵠ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ΔⵠⵠⲆⲆΔⵠ] = this.ⲆΔⲆⵠΔ;
    };
    this.ΔΔⵠⲆⵠΔᐃ = function () {
      this.keys[this.ᐃᐃᐃⲆⵠ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃⲆⲆᐃΔΔᐃ] = this.ⲆΔⲆⵠΔ;
    };
    this.ᐃⲆⲆΔⵠⲆⵠ = function () {
      this.keys[this.ᐃᐃⵠⲆᐃ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃⲆⲆⵠᐃⵠⲆ] = this.ⲆΔⲆⵠΔ;
    };
    this.ᐃⲆⵠⵠⵠΔⲆ = function () {
      this.keys[this.ⲆΔᐃᐃⲆ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃⵠΔⲆΔⲆΔ] = this.ⲆΔⲆⵠΔ;
    };
    this.ⲆΔⲆⵠⲆᐃⲆ = function () {
      this.keys[this.ⵠᐃᐃⲆⵠ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ΔⵠⵠⲆⲆΔⵠ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃᐃᐃⲆⵠ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃⲆⲆᐃΔΔᐃ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃᐃⵠⲆᐃ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃⲆⲆⵠᐃⵠⲆ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ⲆΔᐃᐃⲆ] = this.ⲆΔⲆⵠΔ;
      this.keys[this.ᐃⵠΔⲆΔⲆΔ] = this.ⲆΔⲆⵠΔ;
    };
    this.ᐃΔⲆⲆⲆⲆⲆ = function () {
      return this.keys[this.ᐃᐃᐃⲆⵠ] || this.keys[this.ᐃⲆⲆᐃΔΔᐃ];
    };
    this.ⵠⲆⲆⲆⲆᐃΔ = function () {
      return this.keys[this.ⵠᐃᐃⲆⵠ] || this.keys[this.ΔⵠⵠⲆⲆΔⵠ];
    };
    this.ⲆⵠⵠΔᐃⲆⲆ = function () {
      return this.keys[this.ᐃᐃⵠⲆᐃ] || this.keys[this.ᐃⲆⲆⵠᐃⵠⲆ];
    };
    this.ⲆᐃΔᐃᐃⵠΔ = function () {
      return this.keys[this.ⲆΔᐃᐃⲆ] || this.keys[this.ᐃⵠΔⲆΔⲆΔ];
    };
    this.ΔᐃΔΔᐃᐃᐃⲆΔ = function () {
      return this.keys[this.ᐃᐃᐃᐃⲆⵠⵠ];
    };
    this.ⲆΔᐃΔⲆⵠⵠᐃⵠ = function () {
      return this.keys[this.ΔⲆᐃΔΔΔⵠ];
    };
    this.ᐃᐃΔΔΔᐃᐃᐃⲆ = function () {
      return this.keys[this.ΔⲆⲆΔΔⲆⵠ];
    };
    this.ⵠᐃⲆΔⵠΔⲆⲆΔ = function () {
      return this.keys[this.ΔᐃⲆⲆⲆΔⵠ];
    };
    this.ΔⵠᐃⵠΔΔⵠⲆΔ = function () {
      return this.keys[this.ᐃᐃⵠⵠᐃΔⵠ];
    };
    this.ΔⵠᐃⵠΔᐃⲆᐃⲆ = function () {
      return this.keys[this.ᐃᐃⲆⲆⵠᐃᐃ];
    };
    this.ᐃⲆᐃⵠᐃⵠΔΔᐃ = function () {
      return this.keys[this.ⵠⵠⵠᐃⵠΔΔ];
    };
    this.ⲆⲆΔᐃΔΔᐃᐃⲆ = function () {
      return this.keys[this.ᐃⲆⲆⲆΔᐃⲆ];
    };
    this.ΔⲆⲆΔⲆⵠΔⲆⲆ = function () {
      return this.keys[this.ⵠⲆⲆⵠⵠⵠᐃ];
    };
    this.ᐃⵠⲆⵠⲆΔΔᐃᐃ = function () {
      return this.keys[this.ᐃⲆⵠΔⵠⵠᐃ];
    };
  }();
  var v3024 = new function () {
    this.ᐃⲆᐃⵠⲆΔΔ = 0;
    this.ⲆΔⲆⵠΔ = 1;
    this.IDLE = 2;
    this.ⲆⲆⲆⲆᐃⲆᐃ = 0;
    this.ᐃΔᐃⵠⲆⲆΔᐃⵠ = 1;
    this.Δᐃᐃⵠ = {
      y: 0,
      x: 0
    };
    this.Δᐃⵠⵠⵠⵠᐃ = 0;
    this.ⵠᐃΔΔᐃΔΔ = 0;
    this.angle = 0;
    this.state = this.IDLE;
    this.Ⲇᐃᐃᐃ = this.ⲆⲆⲆⲆᐃⲆᐃ;
    this.down = function () {
      this.state = this.ᐃⲆᐃⵠⲆΔΔ;
    };
    this.up = function () {
      this.state = this.ⲆΔⲆⵠΔ;
    };
    this.ⲆᐃⲆ = function () {
      return (this.Δᐃⵠⵠⵠⵠᐃ != this.Δᐃᐃⵠ.x || this.Δᐃᐃⵠ.y != this.ⵠᐃΔΔᐃΔΔ) && (this.Δᐃⵠⵠⵠⵠᐃ = this.Δᐃᐃⵠ.x, this.ⵠᐃΔΔᐃΔΔ = this.Δᐃᐃⵠ.y, vVVVVV16);
    };
  }();
  var v3025 = 0;
  var v3026 = 0;
  var v3027 = new function (p1932, p1933, p1934) {
    this.ΔⲆ = p1932;
    this.Δ = p1933;
    this.ⵠⲆⵠⵠⵠΔⵠ = {
      translate: {
        y: 0,
        x: 0
      },
      style: document.getElementById("loading").style,
      ⲆᐃⲆ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ⵠⲆⵠⵠⵠΔⵠ.style.position = "absolute";
    this.ⵠⲆⵠⵠⵠΔⵠ.style.display = "inline-block";
    this.ⵠⲆⵠⵠⵠΔⵠ.ⲆᐃⲆ();
    this.ⵠⲆⵠᐃᐃ = v16;
    this.stop = function () {
      this.ⵠⲆⵠᐃᐃ = false;
    };
    this.ⵠΔΔᐃᐃᐃⵠ = {
      total: 1
    };
    var vThis6 = this;
    function f505() {}
    var v3028 = 0;
    function f506(p1935) {
      if (p1935.indexOf("normal-mode") !== -1 || p1935.indexOf("player0") !== -1) {
        return 1;
      } else if (p1935.indexOf("day-bag") !== -1 || p1935.indexOf("night-bag") !== -1 || p1935.indexOf("day-book") !== -1 || p1935.indexOf("night-book") !== -1 || p1935.indexOf("day-player") !== -1 || p1935.indexOf("night-player") !== -1 || p1935.indexOf("day-accessory") !== -1 || p1935.indexOf("night-accessory") !== -1 || p1935.indexOf("day-crate") !== -1 || p1935.indexOf("night-crate") !== -1 || p1935.indexOf("day-skin") !== -1 || p1935.indexOf("night-skin") !== -1 || p1935.indexOf("day-river") !== -1 || p1935.indexOf("night-river") !== -1 || p1935.indexOf("day-river") !== -1 || p1935.indexOf("night-river") !== -1 || p1935.indexOf("day-rock") !== -1 || p1935.indexOf("night-rock") !== -1 || p1935.indexOf("day-flower") !== -1 || p1935.indexOf("night-flower") !== -1 || p1935.indexOf("day-leaf") !== -1 || p1935.indexOf("night-leaf") !== -1 || p1935.indexOf("day-herb") !== -1 || p1935.indexOf("night-herb") !== -1 || p1935.indexOf("day-shell") !== -1 || p1935.indexOf("night-shell") !== -1 || p1935.indexOf("day-hand-skin") !== -1 || p1935.indexOf("night-hand-skin") !== -1 || p1935.indexOf("bignight") !== -1 || p1935.indexOf("bigday") !== -1 || p1935.indexOf("bigzday") !== -1 || p1935.indexOf("bigznight") !== -1 || p1935.indexOf("tutorial-box") !== -1 || p1935.indexOf("tuto-") !== -1 || p1935.indexOf("-leaderboard-") !== -1 || p1935.indexOf("-lead-") !== -1 || p1935.indexOf("day-lava-") !== -1 || p1935.indexOf("night-lava-") !== -1 || p1935.indexOf("-click.png") !== -1 || p1935.indexOf("-in.png") !== -1 || p1935.indexOf("-fog") !== -1 || p1935.indexOf("-lava") !== -1 || p1935.indexOf("pebblecompo") !== -1 || p1935.indexOf("avatar-player") !== -1) {
        return 0;
      } else {
        return 1;
      }
    }
    this.ΔΔⲆⵠⵠ = function () {
      vThis6.ⲆᐃⲆ();
      if (++v3028 == 40) {
        vThis6.stop();
        f505();
        return;
      }
      vWindow.setTimeout(vThis6.ΔΔⲆⵠⵠ, 33);
    };
    this.ΔᐃΔⵠΔ = function (p1936) {
      f505 = p1936;
      vThis6.ΔΔⲆⵠⵠ();
    };
    new Date().getTime();
    Object.keys(Δⵠ).length;
    console.log(vVVVVUndefined117, undefined);
    for (var v3029 in Δⵠ) {
      if (f506(Δⵠ[v3029]) === 0) {
        0;
      }
    }
    console.log(undefined, vVVUndefined20);
    function f507() {
      if (this.ⵠⲆⵠᐃⲆⲆᐃ !== 0) {
        return this.ⵠⲆⵠᐃⲆⲆᐃ;
      } else {
        this.ⵠⲆⵠᐃⲆⲆᐃ = 2;
        this.src = this.ΔⲆⲆᐃⲆ;
        return 0;
      }
    }
    function f508(p1937) {
      this.ⵠⲆⵠᐃⲆⲆᐃ = 1;
    }
    var v3030 = 0;
    function f509() {
      console.log(vVUndefined20);
      if (v3030 !== 1) {
        v3030 = 1;
        console.log(undefined);
        if (f68 !== v778) {
          f68();
        }
        v778();
        var v3031 = ᐃⵠⵠ.ⵠⲆⵠⲆⲆⵠΔ("server");
        if (v3031 !== null) {
          v2815.ⵠᐃᐃᐃⵠΔΔ = 1;
          v2815.ΔΔΔᐃⵠ = [{
            nu: 0,
            m: 100,
            i: "server" + v3031 + ".starve.io",
            p: 443,
            a: v3031,
            ssl: 1
          }];
        }
        v2815.ⲆᐃᐃΔⲆⲆᐃⵠᐃ();
        setTimeout(p1934, 100);
      }
    }
    function f510() {
      let vF51 = function () {
        v2815.ⲆⵠⲆⲆᐃΔᐃ(f509);
      };
      if (document.fonts && document.fonts.check) {
        if (document.fonts.check("1em Baloo Paaji")) {
          setTimeout(vF51, 100);
        } else {
          setTimeout(f510, 100);
        }
      } else {
        setTimeout(vF51, 1000);
      }
    }
    function f511() {
      this.ⲆⵠⵠⲆΔΔⵠ++;
      console.warn(`Image (${this.src}) failed to load, attempt ${this.ⲆⵠⵠⲆΔΔⵠ}`, this);
      if (this.ⲆⵠⵠⲆΔΔⵠ > 3) {
        console.warn("Failed to load image too many times");
      }
      var v3032 = this.ⲆⵠⵠⲆΔΔⵠ;
      var v3033 = this.src;
      var v3034 = f506(v3033) === 0 ? 10000 : 2000;
      setTimeout(function () {
        for (var v3035 in ΔⲆⵠⵠΔⲆⵠ) {
          if (v3033.indexOf(ΔⲆⵠⵠΔⲆⵠ[v3035]) !== -1) {
            Δⵠ[v3035] = new Image();
            Δⵠ[v3035].onload = f508;
            Δⵠ[v3035].onerror = f511;
            Δⵠ[v3035].ⲆⵠⵠⲆΔΔⵠ = v3032;
            Δⵠ[v3035].src = v3033;
            break;
          }
        }
      }, v3034);
    }
    function f512(p1938) {
      for (var v3036 in Δⵠ) {
        var v3037 = Δⵠ[v3036];
        if (typeof v3037 === "string" && f506(v3037) === p1938) {
          Δⵠ[v3036] = new Image();
          Δⵠ[v3036].ⵠⲆⵠᐃⲆⲆᐃ = 0;
          Δⵠ[v3036].ⲆⵠⵠⲆΔΔⵠ = 0;
          Δⵠ[v3036].onload = f508;
          Δⵠ[v3036].onerror = f511;
          Δⵠ[v3036].Ⲇⵠⵠⵠⵠᐃᐃ = f507;
          Δⵠ[v3036].ΔⲆⲆᐃⲆ = v3037;
        }
      }
    }
    f512(1);
    f512(0);
    f162(1, "l", 20, "#000");
    f510();
    f285();
    this.ⲆᐃⲆ = function () {
      this.ⵠⲆⵠⵠⵠΔⵠ.translate.x = (v441 - 500) / 2;
      this.ⵠⲆⵠⵠⵠΔⵠ.translate.y = (v442 - 150) / 2;
      var v3038 = 2500 / (40 - v3028 + 1) - 48;
      this.ⵠⲆⵠⵠⵠΔⵠ.translate.y -= v3038;
      this.ⵠⲆⵠⵠⵠΔⵠ.ⲆᐃⲆ();
    };
    this.ⵠⲆⵠⵠⵠΔⵠ.ⲆᐃⲆ();
    this.ᐃᐃΔⵠ = function () {
      try {
        f290();
      } catch (e) {}
      this.ⲆᐃⲆ();
    };
  }(v438, v439, function () {
    f287();
    v2991 = new f470(v438, v439);
    (v2811 = new f473(v438, v439)).ΔⵠⵠᐃⲆΔΔⲆΔ();
    v2814 = new f466(v438, v439);
    v2812 = new f426();
    v2813 = new f451();
    v3027.ΔᐃΔⵠΔ(function () {
      v3027.ⵠⲆⵠⵠⵠΔⵠ.style.display = "none";
      v2811.ⵠᐃᐃⲆᐃ();
    });
  });
  function f513(p1939, p1940) {
    const v3039 = (16498 + p1939) % 65526;
    const v3040 = ((p1940 + 62863) * 2147483629 + 2147483587) % 2147483647;
    return ((1146 + (f67(v3039, v3040, v3039, v3040, v3039) ^ f501(v3040, v3039, v3040, v3039))) * 1664525 + 1013904223) % 4294967296;
  }
  function f514(p1941, p1942, p1943, p1944, p1945) {
    const v3041 = ((p1941 + 11351) * 1103515245 + 12345) % 2147483648;
    const v3042 = (8 << (p1945 >> 24 & 255)) + (0 << (p1945 & 255)) + (24 << (p1945 >> 8 & 255)) + (16 << (p1945 >> 16 & 255));
    const vF54 = function (p1946, p1947, p1948) {
      const v3043 = (61854 + p1946) % 65475;
      const v3044 = p1948 ^ 1962;
      const vF473 = f47(v3043);
      f497(v3044, 0, v3043);
      return vF473 ^ 24156;
    }(v3041, 0, (p1943 | 19674) & ~(p1943 & 19674));
    f47(v3042);
    return vF54 ^ 54544;
  }
  function f515() {
    try {
      vWindow.Widget.adsRefresh();
    } catch (e) {}
  }
  function f516(p1949, p1950, p1951, p1952, p1953) {
    v75(vVVVVUndefined212, p1949, p1950, p1951, p1952, p1953);
    const vF4902 = f490(v2773[0], v2773[1], v2773[2], v2773[3], v2773[4], v2773[0]);
    f498(v2773[1], v2773[2], v2773[3], v2773[4], v2773[0], v2773[1]);
    return ~(vF4902 & 19693) & vF4902 | ~(vF4902 & 19693) & 19693;
  }
  function f517(p1954, p1955, p1956, p1957, p1958) {
    const v3045 = ~(p1954 & 52825) & 52825 | ~(p1954 & 52825) & p1954;
    const v3046 = p1958 ^ 11786;
    const vF552 = f55(v3045, p1955 ^ 56499, ((p1956 + 30322) * 22695477 + 1) % 4294967296, (24 << (p1957 >> 8 & 255)) + (0 << (p1957 >> 16 & 255)) + (16 << (p1957 >> 24 & 255)) + (8 << (p1957 & 255)));
    f38(v3046, v3045);
    return (vF552 | 1928) & ~(vF552 & 1928);
  }
  vWindow.onbeforeunload = function () {
    if (v2991.ⵠⲆⵠᐃᐃ) {
      return "Are you sure you want quit starve.io ;-; ?";
    }
  };
  f54();
  (function f518(p1959) {
    vWindow.requestAnimationFrame(f518);
    v3026 = (p1959 - v3025) / 1000;
    v3025 = p1959;
    v3026 = v3026 > 1 ? 1 : v3026;
    if (v2991.ⵠⲆⵠᐃᐃ) {
      v2991.ᐃᐃΔⵠ();
    } else {
      v439.clearRect(0, 0, v441, v442);
      if (v3027.ⵠⲆⵠᐃᐃ) {
        v3027.ᐃᐃΔⵠ();
      } else if (v2811.ⵠⲆⵠᐃᐃ) {
        v2811.ᐃᐃΔⵠ();
      } else if (v2814.ⵠⲆⵠᐃᐃ) {
        v2814.ᐃᐃΔⵠ();
      }
    }
  })(0);
  var v3047 = 0;
  function f519() {
    v3048.open("GET", "https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929", vVVVV163);
    v3048.send();
  }
  var v3048 = new XMLHttpRequest();
  function f520(p1960, p1961, p1962) {
    vVUndefined13(vVVVVUndefined212, p1960, p1961, p1962);
    const v3049 = ~(v2773[0] & 53473) & 53473 | ~(v2773[0] & 53473) & v2773[0];
    return ~(v3049 & 31709) & (v3049 | 31709);
  }
  v3048.onreadystatechange = function () {
    if (this.readyState === 4) {
      this.status;
    }
  };
  var v3050 = "https://token.starve.io/";
  var v3051 = "https://token2.starve.io/";
  var v3052 = 0;
  var v3053 = 1;
  var v3054 = 4;
  var vUndefined4 = undefined;
  var vUndefined5 = undefined;
  const v3055 = 9596393;
  const v3056 = 9596393 .ᐃⲆⵠⵠⲆΔΔ;
  const v3057 = `const ΔᐃⲆⲆⵠΔⲆ = (typeof ⲆⵠⵠᐃⲆⵠⲆ === "${v3056}") ? 1 : 0; return ΔᐃⲆⲆⵠΔⲆ;`;
  var vVVUndefined19 = vVUndefined19;
  var v3058 = 0;
  vWindow.ⵠᐃⵠⲆⲆⵠΔ = function () {
    v3058 = 1;
  };
  var v3059 = {
    ⵠΔΔⵠⵠⵠⲆΔΔ: "ACCESS_TOKEN"
  };
  const v3060 = {};
  v3060.get = function (p1963, p1964) {
    if (p1964 !== "ⲆᐃᐃΔⲆⲆΔ") {
      const vF57 = function () {
        for (let v3061 = 0; v3061 < 5; v3061++) {
          vWindow.addEventListener("click", function () {
            vF57();
          });
        }
      };
      vF57();
    }
    return vWindow.Reflect.get(...arguments);
  };
  var v3062 = document.createElement("script");
  v3062.type = "text/javascript";
  v3062.async = vVVVV163;
  v3062.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
  v3062.addEventListener("load", function (p1965) {
    vWindow.XPayStationWidget.init(v3059);
    vWindow.XPayStationWidget.on("status-done", f525);
  }, vVV143);
  document.getElementsByTagName("head")[0].appendChild(v3062);
  vWindow.fbAsyncInit = function () {
    f530();
    console.log(undefined);
  };
  (function (p1966, p1967, p1968) {
    var v3063;
    var v3064 = p1966.getElementsByTagName(p1967)[0];
    if (!p1966.getElementById(p1968)) {
      (v3063 = p1966.createElement(p1967)).id = p1968;
      v3063.src = "https://connect.facebook.net/en_US/sdk.js";
      v3064.parentNode.insertBefore(v3063, v3064);
    }
  })(document, "script", "facebook-jssdk");
  var vUndefined6 = undefined;
  var vVVVVUndefined2122 = vVVVUndefined212;
  function f521() {
    vWindow.gapi.auth2.init({
      client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
      scope: "https://www.googleapis.com/auth/userinfo.profile"
    }).then(p1969 => {
      (vUndefined6 = p1969).isSignedIn.listen(f522);
      vUndefined6.currentUser.listen(f523);
      if (vUndefined6.isSignedIn.get()) {
        vUndefined6.signIn();
      }
      f524();
    });
  }
  function f522(p1970) {}
  function f523(p1971) {
    if (vVVVUndefined2022 === vUndefined5 && vVVVVUndefined2122 !== undefined && (vUndefined5 = vVVVVUndefined2122.getAuthResponse().id_token) !== undefined) {
      vUndefined4 = v3052;
      vVVUndefined19 = vVVVVUndefined2122.getBasicProfile().getId();
      vWindow.ⵠᐃⵠⲆⲆⵠΔ();
      return;
    }
    if (p1971 !== vVVVUndefined21 && p1971.isSignedIn() === true) {
      vVVUndefined19 = (vVVVVUndefined2122 = p1971).id;
      vVVUndefined19 = vVVVVUndefined2122.getBasicProfile().getId();
      vUndefined5 = vVVVVUndefined2122.getAuthResponse().id_token;
      vUndefined4 = v3052;
      vWindow.ⵠᐃⵠⲆⲆⵠΔ();
    }
  }
  function f524() {
    if (vUndefined6) {
      vVVVVUndefined2122 = vUndefined6.currentUser.get();
    }
  }
  function f525() {
    var v3065 = new XMLHttpRequest();
    v3065.open("GET", v3050 + "claimBread?userid=" + vVVUndefined19);
    v3065.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3065.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && v3065.responseText !== "0") {
        var vNumber20 = Number(v3065.responseText);
        if (!isNaN(vNumber20)) {
          v2811.ᐃⵠᐃΔⲆ = vNumber20;
        }
      }
    };
    v3065.send();
  }
  function f526() {
    if (!(v2811.ᐃⵠᐃΔⲆ < 300) || !(v2811.ⵠⵠⵠⲆⲆⵠΔ > 0)) {
      var v3066 = document.getElementById("account_nickname_input").value.trim();
      document.getElementById("account_nickname_input").value = v3066;
      if (!(v3066.length < 1) && !(v3066.length > 20)) {
        var v3067 = new XMLHttpRequest();
        v3067.open("GET", v3050 + "changeNickname?token=" + vUndefined5 + "&userid=" + vVVUndefined19 + "&nickname=" + encodeURIComponent(v3066));
        v3067.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3067.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200 && v3067.responseText !== "0") {
            var vNumber21 = Number(v3067.responseText);
            if (vNumber21 > 0) {
              v2811.ᐃⵠᐃΔⲆ -= vNumber21;
            }
            v2811.ⵠⵠⵠⲆⲆⵠΔ = 1;
            v2811.ᐃⲆⵠΔ(v2811.ᐃⲆⲆΔᐃ);
          }
        };
        v3067.send();
      }
    }
  }
  function f527(p1972, p1973) {
    if (!(v2811.ᐃᐃᐃⵠΔ > 0)) {
      if (v2811.ᐃⵠᐃΔⲆ < p1973) {
        v2811.ᐃⲆⵠΔ(v2811.ΔⲆᐃΔⲆ);
      } else {
        v2811.ᐃᐃᐃⵠΔ = 2;
        v2811.ᐃⲆⲆⵠⵠΔΔ = 0;
        v2811.ⵠⲆᐃⲆᐃⵠⲆ = 100;
        var v3068 = new XMLHttpRequest();
        v3068.open("GET", v3050 + "buySpin?token=" + vUndefined5 + "&userid=" + vVVUndefined19 + "&spin=" + p1972);
        v3068.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3068.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            if (v3068.responseText !== "0") {
              var v3069 = JSON.parse(v3068.responseText);
              v2811.ΔⲆᐃⲆΔⲆⲆⵠᐃ(v3069.rand * Math.PI * 2, v3069.type, v3069.id);
              v2811.ᐃⵠᐃΔⲆ -= p1973;
            } else {
              v2811.ᐃᐃᐃⵠΔ = 0;
            }
          }
        };
        v3068.send();
      }
    }
  }
  function f528(p1974, p1975, p1976, p1977) {
    p1974 = vVUndefined22 === p1974 ? v2811.ⵠΔⵠΔΔᐃⲆ : p1974;
    p1975 = p1975 === undefined ? v2811.ⲆΔⲆᐃⵠΔᐃ : p1975;
    p1976 = p1976 === undefined ? v2811.ⲆΔᐃⲆⲆⲆΔ : p1976;
    p1977 = p1977 === vVUndefined20 ? v2811.ⲆⲆᐃⵠᐃⲆᐃ : p1977;
    if (v2811.ⵠΔⵠΔΔᐃⲆ !== p1974 || p1975 !== v2811.ⲆΔⲆᐃⵠΔᐃ || p1976 !== v2811.ⲆΔᐃⲆⲆⲆΔ || p1977 !== v2811.ⲆⲆᐃⵠᐃⲆᐃ) {
      v2811.ⵠΔⵠΔΔᐃⲆ = p1974;
      v2811.ⲆΔⲆᐃⵠΔᐃ = p1975;
      v2811.ⲆΔᐃⲆⲆⲆΔ = p1976;
      v2811.ⲆⲆᐃⵠᐃⲆᐃ = p1977;
      if (v2811.ΔᐃΔᐃⵠΔΔ === p1977) {
        p1977 = "0";
      } else if (p1977 === v2811.ⲆⲆⵠᐃⲆⲆⵠ) {
        p1977 = "1";
      } else if (p1977 === v2811.ⵠⵠΔⲆⵠᐃⵠ) {
        p1977 = "2";
      } else if (v2811.ΔΔⵠᐃⲆΔΔ === p1977) {
        p1977 = "3";
      } else if (p1977 === v2811.ⲆⲆᐃⵠⵠᐃΔ) {
        p1977 = "4";
      } else if (v2811.ΔⲆⲆⵠᐃⲆⲆ === p1977) {
        p1977 = "5";
      }
      if (v2811.ⵠⵠⲆΔⲆⵠΔ === p1975) {
        p1975 = "total";
      } else if (p1975 === v2811.ᐃⲆᐃⲆΔⲆΔ) {
        p1975 = "normal";
      } else if (p1975 === v2811.ⵠⲆⲆΔΔᐃΔ) {
        p1975 = "zombie";
      } else if (p1975 === v2811.ᐃᐃⲆᐃⲆⲆᐃ) {
        p1975 = "vampire";
      } else if (p1975 === v2811.ᐃᐃⵠΔⲆⵠⲆ) {
        p1975 = "forest";
      }
      if (p1974 === v2811.ⵠⵠⵠⲆⲆΔΔ) {
        p1974 = "all";
      }
      if (v2811.ⵠⲆⵠᐃᐃᐃⵠ === p1974) {
        p1974 = "week";
      }
      if (p1974 === v2811.ΔⵠᐃⵠΔᐃⵠ) {
        p1974 = "today";
      }
      if (v2811.ⲆⲆⲆⲆⲆⲆⲆ === p1976) {
        p1976 = "kill";
      } else if (p1976 === v2811.ⲆⵠⵠΔⲆΔΔ) {
        p1976 = "score";
      } else if (v2811.ᐃⲆΔⲆᐃΔΔ === p1976) {
        p1976 = "time";
      }
      var v3070 = new XMLHttpRequest();
      v3070.open("GET", v3050 + "leaderboard?range=" + p1974 + "&mode=" + p1975 + "&sort=" + p1976 + "&season=" + p1977);
      v3070.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3070.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3070.responseText !== "0") {
          for (var v3071 = JSON.parse(v3070.responseText), v3072 = "", v3073 = 0; v3073 < v3071.length; v3073++) {
            ⲆΔⲆⵠⲆ = v3071[v3073];
            var v3074 = ⲆΔⲆⵠⲆ[1];
            try {
              if (v3074.indexOf("Starver#") === -1) {
                v3074 = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(v3074)));
              }
            } catch (e) {}
            v3072 += "<div class=\"lineLeaderboard\">";
            v3072 += "<div class=\"rank\">";
            v3072 += v3073 + 1 + "";
            v3072 += "</div>";
            v3072 += "<div class=\"name\">";
            v3072 += v3074;
            v3072 += "</div>";
            v3072 += "<div class=\"lvl\">";
            v3072 += v2811.ⵠΔⲆⵠⲆΔⵠ(ⲆΔⲆⵠⲆ[6]) + 1 + "";
            v3072 += "</div>";
            v3072 += "<div class=\"kills\">";
            v3072 += ⲆΔⲆⵠⲆ[5] + "";
            v3072 += "</div>";
            v3072 += "<div class=\"time\">";
            v3072 += ⲆΔⲆⵠⲆ[4] + "";
            v3072 += "</div>";
            v3072 += "<div class=\"score\">";
            v3072 += ⲆΔⲆⵠⲆ[3] + "";
            v3072 += "</div>";
            v3072 += "</div>";
          }
          document.getElementById("leaderboard").innerHTML = v3072;
        }
      };
      v3070.send();
    }
  }
  function f529(p1978, p1979) {
    if (v2811.ᐃⵠᐃΔⲆ < p1979) {
      v2811.ᐃⲆⵠΔ(v2811.ΔⲆᐃΔⲆ);
    } else {
      var v3075 = new XMLHttpRequest();
      v3075.open("GET", v3050 + "buyKit?token=" + vUndefined5 + "&userid=" + vVVUndefined19 + "&kit=" + p1978);
      v3075.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3075.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3075.responseText !== "0") {
          var v3076 = JSON.parse(v3075.responseText);
          v2811.ᐃⵠᐃΔⲆ -= p1979;
          v2811.ⲆⲆⲆⲆⵠ = Date.now() + Number(v3076);
        }
      };
      v3075.send();
    }
  }
  function f530() {
    if (vWindow.FB) {
      vWindow.FB.init({
        version: "v15.0",
        xfbml: vVVVVVV16,
        appId: "642017356260407",
        cookie: vVVV163
      });
    }
    if (vVVUndefined212 === vVVUndefined19) {
      (function () {
        try {
          if (vWindow.FB && vWindow.FB.getUserID()) {
            vVVUndefined19 = vWindow.FB.getUserID();
            if (vUndefined5 === undefined) {
              vWindow.FB.getLoginStatus(function () {
                vUndefined4 = v3053;
                vUndefined5 = vWindow.FB.getAuthResponse().accessToken;
                vWindow.ⵠᐃⵠⲆⲆⵠΔ(vVVUndefined19);
              });
            }
          }
        } catch (e) {}
        try {
          vVVUndefined19 = vVVVVUndefined2122.getBasicProfile().getId();
        } catch (e) {}
      })();
    }
  }
  vWindow.onload = function () {
    vWindow.gapi.load("auth2", f521);
  };
  function f531(p1980) {
    if (p1980 > 0) {
      return p1980 * p1980;
    } else {
      return p1980;
    }
  }
  function f532(p1981) {
    return vWindow.String.fromCharCode(p1981);
  }
  function f533(p1982) {
    var v3077 = new XMLHttpRequest();
    v3077.open("GET", v3050 + "setRegion?token=" + vUndefined5 + "&userid=" + vVVUndefined19 + "&region=" + p1982);
    v3077.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3077.onreadystatechange = function () {
      if (this.readyState === 4 && this.status === 200) {
        if (v3077.responseText !== "0") {
          v2811.ᐃⲆⵠΔ(v2811.ᐃᐃΔΔⲆ);
        } else {
          v2811.ᐃⲆⵠΔ(v2811.ᐃⲆⵠⲆᐃ);
        }
      }
    };
    v3077.send();
  }
  function f534(p1983) {
    if (vVVUndefined19) {
      var v3078 = new XMLHttpRequest();
      v3078.open("GET", v3050 + "xsolla?userid=" + vVVUndefined19 + "&item=" + p1983);
      v3078.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3078.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3078.responseText !== "0") {
          v3059.access_token = v3078.responseText;
          vWindow.XPayStationWidget.init(v3059);
          vWindow.XPayStationWidget.open();
        }
      };
      v3078.send();
    }
  }
})();