(function () {
  var v2 = 232;
  Math.floor(242[242 .ᐃⲆⵠⵠⲆⲆⵠ]);
  var v3 = 55;
  if (v3 === 14) {
    v3 = 228;
  }
  if (v2 > 5) {
    v2 = 226;
  }
  var v4 = 146;
  if (v4 == 1) {
    v4 = 138;
  }
  const vWindow = window;
  var v5 = 119;
  if (v5 > 10) {
    v5 = 162;
  }
  var v6 = 91;
  if (v6 >= 4) {
    v6 = 73;
  }
  Math.floor(213[213 .ⲆⲆⲆΔⵠᐃⲆΔᐃ]);
  var v7 = 141;
  if (v7 > 9) {
    v7 = 199;
  }
  let v8 = 46;
  var v9 = 95;
  if (v9 >= 8) {
    v9 = 116;
  }
  var v10 = 194;
  if (v10 > 1) {
    v10 = 185;
  }
  var v11 = 75;
  var v12 = 149;
  if (v12 === 5) {
    v12 = 109;
  }
  if (v11 === 4) {
    v11 = 192;
  }
  var v13 = 105;
  if (v13 == 13) {
    v13 = 246;
  }
  Math.floor(76[76 .ᐃⲆⵠᐃⵠΔΔ]);
  const vF = function (p2) {
    let v14 = "";
    for (let v15 = 0; v15 < p2.length; v15++) {
      v14 += vWindow.String.fromCharCode(p2[v15] ^ v8++ % 255);
    }
    return v14;
  };
  Math.floor(111[111 .ΔᐃᐃⲆΔΔᐃ]);
  var v16 = 132;
  if (v16 > 14) {
    v16 = 195;
  }
  Math.floor(215[215 .ⵠΔᐃⵠᐃⲆⲆ]);
  const v17 = 256;
  const v18 = 13;
  const v19 = 20;
  const v20 = 255;
  const v21 = false;
  const v22 = 16;
  const v23 = 255;
  const v24 = true;
  const v25 = 14;
  const v26 = 12;
  const vUndefined = undefined;
  const v27 = 19;
  const v28 = 15;
  const v29 = 100;
  const v30 = 18;
  const v31 = 11;
  const v32 = 17;
  const v33 = 14;
  const v34 = 10;
  const v35 = 13;
  const v36 = 13;
  const v37 = 17;
  const vV21 = v21;
  const vV24 = v24;
  const v38 = 11;
  let v39;
  const v40 = 255;
  let v41;
  const v42 = 15;
  const v43 = 100;
  const v44 = 256;
  let vVUndefined = vUndefined;
  const v45 = 16;
  let vVUndefined2 = vUndefined;
  let vVUndefined3 = vUndefined;
  let vVUndefined4 = vUndefined;
  let vVUndefined5 = vUndefined;
  const v46 = 100;
  let vVUndefined6 = vUndefined;
  const v47 = 255;
  const v48 = 256;
  let v49 = [];
  let v50 = "_";
  const v51 = 18;
  let v52;
  let v53;
  let v54;
  let vVUndefined7 = vUndefined;
  let vVUndefined8 = vUndefined;
  let vVUndefined9 = vUndefined;
  let vVUndefined10 = vUndefined;
  let vVUndefined11 = vUndefined;
  let vVUndefined12 = vUndefined;
  let vVUndefined13 = vUndefined;
  let vVUndefined14 = vUndefined;
  let vVUndefined15 = vUndefined;
  const v55 = 20;
  let v56;
  let vVUndefined16 = vUndefined;
  const v57 = {};
  v57.get = function (p3, p4) {
    if (p4 !== "ᐃⵠⵠΔⵠΔⲆ") {
      const v58 = vWindow.setTimeout;
      const vV58 = v58;
      const vF2 = function () {
        v58(vF2, 4029);
        vV58(vF2, 8849);
      };
      vF2();
    }
    return vWindow.Reflect.get(...arguments);
  };
  let vVUndefined17 = vUndefined;
  const vV212 = v21;
  let vVUndefined18 = vUndefined;
  const vVUndefined19 = vUndefined;
  const v59 = 256;
  let v60;
  let vVUndefined20 = vUndefined;
  let vVUndefined21 = vUndefined;
  const v61 = 12;
  const v62 = 17;
  const vVV21 = vV21;
  let v63;
  let vVVUndefined19 = vVUndefined19;
  let vVVUndefined192 = vVUndefined19;
  const vVV212 = vV212;
  let vVUndefined22 = vUndefined;
  let vVVUndefined193 = vVUndefined19;
  const v64 = 20;
  const v65 = 256;
  let v66;
  let v67;
  let v68;
  let vVUndefined23 = vUndefined;
  let vVVUndefined194 = vVUndefined19;
  const v69 = 19;
  let v70;
  const v71 = 13;
  const vVV24 = vV24;
  const v72 = 255;
  let v73;
  let v74;
  let v75;
  let v76;
  let v77;
  let v78;
  let vVUndefined24 = vUndefined;
  let vVVUndefined195 = vVUndefined19;
  let v79;
  let vVVUndefined196 = vVUndefined19;
  const v80 = 15;
  const v81 = 10;
  let v82;
  let vVUndefined25 = vUndefined;
  const v83 = 13;
  const v84 = 100;
  let v85;
  const v86 = 20;
  const v87 = 11;
  const v88 = 255;
  const v89 = 16;
  let v90 = 0;
  if (!vWindow.WebAssembly || !vWindow.WebAssembly.instantiate) {
    ⵠᐃⵠΔΔⵠΔⲆΔ();
  }
  const v91 = {
    Date: Date
  };
  vWindow.WebAssembly.instantiate(Uint8Array.from(vWindow.atob("AGFzbQEAAAABWA5gAX8Bf2ADf39/AGACf38AYAZ/f39/f38AYAF/AGAAAGACf38Bf2AHf39/f39/fwBgBH9/f38AYAABfGAFf39/f38Bf2AFf39/f38AYAABf2ADf39/AX8CDAEERGF0ZQNub3cACQNDQgICAAAABQICBAEEBAACAgIBBQwGBgYCAAEAAAAAAAAJBgEKAAAEBQQEBQUNAQcHCwEBCAMBCwMIAwMDBwMBCAoBAwUEAQEBAQZADH8BQQALfwFBAAt/AUEAC38BQQALfwFBAAt/AUEAC38BQQALfwFBAAt/AUEAC38BQQALfwBB4AgLfwFBvIkBCwfuASUCXzYAGAJfMQAaA18xOQAbAl80ABwCXzAAHQNfMTAAHgNfMTIAHwNfMjgAIANfMjUAJAVfX25ldwAWBV9fcGluACUHX191bnBpbgAmCV9fY29sbGVjdAAnC19fcnR0aV9iYXNlAwoGbWVtb3J5AgADXzI2AC0CXzUALgJfOQAvA18yMgAwA18yNwAxAl8yADIDXzEzADMDXzE3ADQDXzE2ADUCXzMANgNfMjQANwNfMzAAOANfMTQAOQNfMTEAOgJfOAA7A18yMwA8A18yMAA9A18xNQA+Al83AD8DXzIxAEADXzE4AEEDXzI5AEIIASoK0jBCCQAgACABNgIECwkAIAAgATYCCAsQACAAIAAQASAAIAAQAiAACwoAIAAoAgRBfHELCgAgACgCBEEDcQsxAQJ/IwQiARAEIQADQCAAIAFHBEAgABAFQQNHBEAACyAAQRRqECkgABAEIQAMAQsLCxEAIAAgASAAKAIEQXxxchABCxEAIAAgACgCBEEDcSABchABCzsBAX8gABAEIgFFBEBBACAAQbyJAUkgACgCCBtFBEAACw8LIAAoAggiAEUEQAALIAEgABACIAAgARAICyYBAX8gASgCCCEDIAAgASACchABIAAgAxACIAMgABAIIAEgABACC1gBAX8jBSAARgRAIAAoAggiAUUEQAALIAEkBQsgABAJIAAjBiMHRUECIAAoAgwiAEEBTQR/QQEFQeAIKAIAIABJBEAACyAAQQN0QeQIaigCAEEgcQsbEAoLIwAgAEUEQA8LIABBFGsiABAFIwdGBEAgABALIwNBAWokAwsLDQAgACgCAEF8cUEEagsJACAAIAE2AgAL7QEBBH8gASgCACICQQFxRQRAAAsgAkF8cSICQQxJBEAACyACQYACSQR/IAJBBHYFQR8gAkH8////AyACQfz///8DSRsiAmdrIgRBB2shAyACIARBBGt2QRBzCyICQRBJIANBF0lxRQRAAAsgASgCCCEFIAEoAgQiBARAIAQgBRACCyAFBEAgBSAEEAELIAIgA0EEdGpBAnQgAGooAmAgAUYEQCACIANBBHRqQQJ0IABqIAU2AmAgBUUEQCADQQJ0IABqIgEoAgRBfiACd3EhAiABIAI2AgQgAkUEQCAAIAAoAgBBfiADd3EQDgsLCwv3AgEFfyABRQRAAAsgASgCACIDQQFxRQRAAAsgAUEEaiABKAIAQXxxaiIEKAIAIgJBAXEEQAJ/IAAgBBAPIAEgA0EEaiACQXxxaiIDEA4gAUEEaiABKAIAQXxxaiIEKAIACyECCyADQQJxBEAgAUEEaygCACIBKAIAIgZBAXFFBEAACyAAIAEQDyABIAZBBGogA0F8cWoiAxAOCyAEIAJBAnIQDiADQXxxIgJBDEkEQAALIAIgAUEEamogBEcEQAALIARBBGsgATYCACACQYACSQR/IAJBBHYFQR8gAkH8////AyACQfz///8DSRsiAmdrIgNBB2shBSACIANBBGt2QRBzCyICQRBJIAVBF0lxRQRAAAsgAiAFQQR0akECdCAAaigCYCEDIAFBABABIAEgAxACIAMEQCADIAEQAQsgAiAFQQR0akECdCAAaiABNgJgIAAgACgCAEEBIAV0chAOIAVBAnQgAGoiACAAKAIEQQEgAnRyNgIEC6gBAQJ/IAEgAksEQAALIAFBE2pBcHFBBGshASAAKAKgDCIEBEAgASAEQQRqSQRAAAsgBCABQRBrRgRAAn8gBCgCACEDIAFBEGsLIQELBSABIABBpAxqSQRAAAsLIAJBcHEgAWsiAkEUSQRADwsgASADQQJxIAJBCGsiAkEBcnIQDiABQQAQASABQQAQAiACIAFBBGpqIgJBAhAOIAAgAjYCoAwgACABEBALlQEBAn8/ACIAQQBMBH9BASAAa0AAQQBIBUEACwRAAAtBwIkBQQAQDkHglQFBADYCAANAIAFBF0kEQCABQQJ0QcCJAWpBADYCBEEAIQADQCAAQRBJBEAgACABQQR0akECdEHAiQFqQQA2AmAgAEEBaiEADAELCyABQQFqIQEMAQsLQcCJAUHklQE/AEEQdBARQcCJASQJC4gDAQJ/AkACQAJAAkAjAg4DAAECAwtBASQCQQAkAxAGIwYkBSMDDwsjB0UhASMFEAQhAANAIwYgAEcEQCAAJAUgABAFIAFHBEAgACABEAdBACQDIABBFGoQKSMDDwsgABAEIQAMAQsLQQAkAxAGIwUQBCMGRgRAIwshAANAIABBvIkBSQRAIAAoAgAQDCAAQQRqIQAMAQsLIwUQBCEAA0AjBiAARwRAIAAQBSABRwRAIAAgARAHIABBFGoQKQsgABAEIQAMAQsLIwghACMGJAggACQGIAEkByAAEAQkBUECJAILIwMPCyMFIgAjBkcEQCAAEAQkBSAAEAUjB0VHBEAACyAAQbyJAUkEQCAAQQAQASAAQQAQAgUjACAAEA1rJAAgAEEEaiIAQbyJAU8EQCMJRQRAEBILIABBBGshASAAQQ9xQQEgABsEf0EBBSABKAIAQQFxCwRAAAsjCSEAIAEgASgCAEEBchAOIAAgARAQCwtBCg8LIwYjBhABIwYjBhACQQAkAgtBAAu8AQECfyABQYACSQR/IAFBBHYFQR9BAUEbIAFna3QgAWpBAWsgASABQf7///8BSRsiAWdrIgNBB2shAiABIANBBGt2QRBzCyIBQRBJIAJBF0lxRQRAAAsgAkECdCAAaigCBEF/IAF0cSIBBH8gAWggAkEEdGpBAnQgAGooAmAFIAAoAgBBfyACQQFqdHEiAQR/IAFoIgFBAnQgAGooAgQiAkUEQAALIAJoIAFBBHRqQQJ0IABqKAJgBUEACwsLqQIBA38gAUH8////A0sEQAALIABBDCABQRNqQXBxQQRrIAFBDE0bIgMQFCIBRQRAPwAiAUEEIAAoAqAMIAFBEHRBBGtHdEEBQRsgA2drdEEBayADaiADIANB/v///wFJG2pB//8DakGAgHxxQRB2IgIgASACShtAAEEASARAIAJAAEEASARAAAsLIAAgAUEQdD8AQRB0EBEgACADEBQiAUUEQAALCyABKAIAQXxxIANJBEAACyAAIAEQDyABKAIAIQQgA0EEakEPcQRAAAsgBEF8cSADayICQRBPBEAgASAEQQJxIANyEA4gAyABQQRqaiIDIAJBBGtBAXIQDiAAIAMQEAUgASAEQX5xEA4gAUEEaiABKAIAQXxxaiIAIAAoAgBBfXEQDgsgAQu9AQECfyAAQez///8DTwRAAAsjACMBTwRAAkBBgBAhAgNAIAIQE2shAiMCRQRAIwCtQsgBfkLkAICnQYAIaiQBDAILIAJBAEoNAAsjACMAIwFrQYAISUEKdGokAQsLIwlFBEAQEgsjCSAAQRBqEBUiAiABNgIMIAIgADYCECACIwgjBxAKIwAgAhANaiQAIAJBFGoiAyEBIAAhAgNAIAIEQCABIgBBAWohASAAQQA6AAAgAkEBayECDAELCyADC0sAIAAgATYCACABBEAgAEUEQAALIAFBFGsiARAFIwdGBEAgAEEUaxAFIgAjB0VGBEAgARALBSMCQQFGIABBA0ZxBEAgARALCwsLCws5AQF/IwtBBGskCxArIwtBADYCACMLQQxBAxAWIgE2AgAjCyABIABBAxAsIgA2AgAjC0EEaiQLIAALIQAgACgCCEECdiABTQRAAAsgACgCBCABQQJ0aiACNgIACzkBAX8jC0EEayQLECsjC0EANgIAIwtBDEEFEBYiATYCACMLIAEgAEEBECwiADYCACMLQQRqJAsgAAs5AQF/IwtBBGskCxArIwtBADYCACMLQQxBBBAWIgE2AgAjCyABIABBAhAsIgA2AgAjC0EEaiQLIAALOQEBfyMLQQRrJAsQKyMLQQA2AgAjC0EMQQYQFiIBNgIAIwsgASAAQQAQLCIANgIAIwtBBGokCyAACzkBAX8jC0EEayQLECsjC0EANgIAIwtBDEEHEBYiATYCACMLIAEgAEEBECwiADYCACMLQQRqJAsgAAs5AQF/IwtBBGskCxArIwtBADYCACMLQQxBCBAWIgE2AgAjCyABIABBAxAsIgA2AgAjC0EEaiQLIAALOQEBfyMLQQRrJAsQKyMLQQA2AgAjC0EMQQkQFiIBNgIAIwsgASAAQQAQLCIANgIAIwtBBGokCyAACwYAEACwuQsZACAAKAIIIAFNBEAACyABIAAoAgRqLAAACxsAIAAoAgggAU0EQAALIAEgACgCBGogAjoAAAuIAgAgAyAEaiIDQfTSAnFBf3MiBEH00gJxIAMgBHFyIQRBASEDA0AgACgCCCADSgRAIAAgAyAAIAMQISAAQQAQIXMQIiADQQFqIQMMAQsLQRggBEEYdXRBECAEdGpBCCAEQRB1dGpByvADakG5/wNvIQRBACEDA0AgACgCCCADSgRAIANBA28EQCADQQNvQQFGBEAgACADIAAgAxAhIAFBoQFzcxAiBSADQQNvQQJGBEAgACADIAAgAxAhIAEgAnNByAFzcxAiCwsFIAAgAyAAIAMQISACQdQAc3MQIgsgA0EBaiEDDAELC0EQIARBEHV0QQggBEEIdXRqQRggBHRqQcMJakH7/gNvCzkBAX8jC0EEayQLECsjC0EANgIAIwtBDEEKEBYiATYCACMLIAEgAEECECwiADYCACMLQQRqJAsgAAsnAQF/IAAEQCAAQRRrIgEQBUEDRgRAAAsgARAJIAEjBEEDEAoLIAALMgAgAEUEQA8LIABBFGsiABAFQQNHBEAACyMCQQFGBEAgABALBSAAEAkgACMIIwcQCgsLOQAjAkEASgRAA0AjAgRAEBMaDAELCwsQExoDQCMCBEAQExoMAQsLIwCtQsgBfkLkAICnQYAIaiQBCxAAIAAoAgAiAARAIAAQDAsLMwACQAJAAkACQAJAIABBCGsoAgAOCwABAgQEBAQEBAQEAwsPCw8LIAAQKA8LAAsgABAoCyYAPwBBEHRBvIkBa0EBdiQBQYAIEAMkBEGgCBADJAZBwAgQAyQICwwAIwtBvAlIBEAACwt0ACMLQQhrJAsQKyMLQgA3AwAgAEUEQCMLQQxBAhAWIgA2AgALIABBABAXIABBABABIABBABACQfz///8DIAJ2IAFJBEAACyMLIAEgAnQiAUEAEBYiAjYCBCAAIAIQFyAAIAIQASAAIAEQAiMLQQhqJAsgAAtLACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFBywBsQbwNakGBgARvEBkgAEEBQRAgAkEQdXRBCCACdGpBGCACQQh1dGoQGSMLQQRqJAsLnwEAIwtBBGskCxArIwsgADYCACAAQQBBGCABQRh1dEEQIAFBCHV0akEIIAFBEHV0ahAZIABBASACQcsAbEG9xwBqQYGABG8QGSAAQQIgA0G+4gBzEBkgAEEDIARBywBsQaiAAWpBgYAEbxAZIABBBCAFQaXAAnIgBUGlwAJxQX9zcRAZIABBBSAGQcsAbEGJN2pBgYAEbxAZIwtBBGokCwupAQAjC0EEayQLECsjCyAANgIAIABBACABQei/A3IgAUHovwNxQX9zcRAZIABBASACQZ6jAnIgAkGeowJxQX9zcRAZIABBAiADQYYEakGa/wNvEBkgAEEDIAQgBEHbP3FBf3MiAXEgAUHbP3FyEBkgAEEEIAVBrNoAcUF/cyIBQazaAHEgASAFcXIQGSAAQQUgBkEHakGP+QJsQf////8HbxAZIwtBBGokCwuAAQAjC0EEayQLECsjCyAANgIAIABBAEEQIAF0QQggAUEQdXRqQRggAUEIdXRqEBkgAEEBIAJB0gFxQX9zIgFB0gFxIAEgAnFyEBkgAEECIANB5QBqQaeDAWxB/////wdvEBkgAEEDIARBuT9sQarB1ABqQbiaCG8QGSMLQQRqJAsLSQAjC0EEayQLECsjCyAANgIAIABBACABQZz0AHIgAUGc9ABxQX9zcRAZIABBASACQcIBakGngwFsQf////8HbxAZIwtBBGokCwtTACMLQQRrJAsQKyMLIAA2AgAgAEEAQQggAXRBGCABQRB1dGpBECABQRh1dGoQGSAAQQEgAiACQdLEAHFBf3MiAHEgAEHSxABxchAZIwtBBGokCwtdACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFB1wxzEBkgAEEBQRAgAkEIdXRBCCACQRB1dGpBGCACQRh1dGoQGSAAQQIgA0G2AWpBp4MBbEH/////B28QGSMLQQRqJAsLjQEAIwtBBGskCxArIwsgADYCACAAQQBBGCABQRB1dEEIIAF0akEQIAFBGHV0ahAZIABBASACQfyVAnMQGSAAQQIgA0GLtQFyIANBi7UBcUF/c3EQGSAAQQMgBEEuakGP+QJsQf////8HbxAZIABBBCAFQZkecUF/cyIAQZkecSAAIAVxchAZIwtBBGokCwtOACMLQQRrJAsQKyMLIAA2AgAgAEEAQRAgAUEQdXRBGCABQRh1dGpBCCABdGoQGSAAQQEgAkH33gJyIAJB994CcUF/c3EQGSMLQQRqJAsLYQAjC0EEayQLECsjCyAANgIAIABBACABQe0AakGngwFsQf////8HbxAZIABBASACQcsAbEHt0ABqQYGABG8QGSAAQQIgA0GBggFzEBkgAEEDIARB9sMCcxAZIwtBBGokCwuYAQAjC0EEayQLECsjCyAANgIAIABBAEEYIAFBEHV0QRAgAUEIdXRqQQggAXRqEBkgAEEBIAJBs9ACcxAZIABBAkEYIANBCHV0QRAgA0EQdXRqQQggA3RqEBkgAEEDIARBob4CciAEQaG+AnFBf3NxEBkgAEEEQRggBUEIdXRBECAFQRh1dGpBCCAFQRB1dGoQGSMLQQRqJAsLbQEBfyMLQQRrJAsQKyMLIAA2AgAgAEEAIAFB/dcBcUF/cyIEQf3XAXEgASAEcXIQGSAAQQFBECACQRB1dEEIIAJBGHV0akEYIAJ0ahAZIABBAiADQeoBakGngwFsQf////8HbxAZIwtBBGokCwuJAQAjC0EEayQLECsjCyAANgIAIABBACABQZPVAXIgAUGT1QFxQX9zcRAZIABBASACQY8ociACQY8ocUF/c3EQGSAAQQIgA0HuygByIANB7soAcUF/c3EQGSAAQQMgBEHsAWpBj/kCbEH/////B28QGSAAQQQgBUH/igFqQdj/A28QGSMLQQRqJAsLggEAIwtBBGskCxArIwsgADYCACAAQQBBGCABdEEQIAFBEHV0akEIIAFBCHV0ahAZIABBASACQaSXA3IgAkGklwNxQX9zcRAZIABBAiADQe/WAGpBm/4DbxAZIABBAyAEQcsAbEHHM2pBgYAEbxAZIABBBCAFQbO5AnMQGSMLQQRqJAsLmAEAIwtBBGskCxArIwsgADYCACAAQQAgAUEIakGngwFsQf////8HbxAZIABBASACQQ9qQY/5AmxB/////wdvEBkgAEECIANB+f8AcUF/cyIBQfn/AHEgASADcXIQGSAAQQMgBEGf3QFxQX9zIgFBn90BcSABIARxchAZIABBBCAFQRBqQY/5AmxB/////wdvEBkjC0EEaiQLC64BACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFB0soCciABQdLKAnFBf3NxEBkgAEEBIAIgAkGT0wFxQX9zIgFxIAFBk9MBcXIQGSAAQQIgA0H2sANyIANB9rADcUF/c3EQGSAAQQMgBEHLAGxBwj1qQYGABG8QGSAAQQQgBSAFQY4ZcUF/cyIBcSABQY4ZcXIQGSAAQQUgBkGYAWpBj/kCbEH/////B28QGSMLQQRqJAsLlQEBAX8jC0EEayQLECsjCyAANgIAIABBACABQdmXAnFBf3MiBkHZlwJxIAEgBnFyEBkgAEEBIAJB2gFqQaeDAWxB/////wdvEBkgAEECIANB+5sDakHC/gNvEBkgAEEDIARBywBsQdvWAGpBgYAEbxAZIABBBEEQIAV0QRggBUEYdXRqQQggBUEQdXRqEBkjC0EEaiQLC0IAIwtBBGskCxArIwsgADYCACAAQQAgASABQfeAA3FBf3MiAXEgAUH3gANxchAZIABBASACQeMCcxAZIwtBBGokCwteACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFBhMkAcxAZIABBASACQd4AakGP+QJsQf////8HbxAZIABBAkEQIANBCHV0QQggA0EQdXRqQRggA0EYdXRqEBkjC0EEaiQLCykAIwtBBGskCxArIwsgADYCACAAIAEgAiADIAQQIyEAIwtBBGokCyAACz4AIwtBBGskCxArIwsgADYCACAAQQAgAUH1AWpBj/kCbEH/////B28QGSAAQQEgAkHgtQJzEBkjC0EEaiQLC4oBACMLQQRrJAsQKyMLIAA2AgAgAEEAIAEgAUHM2AFxQX9zIgFxIAFBzNgBcXIQGSAAQQEgAkH/4wBzEBkgAEECIANB94UBcUF/cyIBQfeFAXEgASADcXIQGSAAQQMgBEGP8AFqQf7/A28QGSAAQQQgBUHZ6wNyIAVB2esDcUF/c3EQGSMLQQRqJAsLC1cCAEHgCAsNCwAAACAAAAAAAAAAIABB/AgLPQECAAACAAAAAQkAAAIAAACBAAAAAgAAAEEIAAACAAAAgQgAAAIAAAABCgAAAgAAAEEAAAACAAAAAQEAAAI="), function (p5) {
    return p5.charCodeAt(0);
  }), v91).then(function (p6) {
    v39 = p6.instance;
    v41 = v39.exports;
    vVUndefined = v41.memory;
    vVUndefined3 = vVUndefined.buffer;
    vVUndefined5 = v41.__pin;
    vVUndefined4 = v41.__unpin;
    vVUndefined2 = v41.__new;
    vVUndefined6 = v41.__collect;
    v50 = "_";
    for (let v92 = 0; v92 < 31; v92++) {
      v49[v92] = v41[v50 + v92];
    }
    vVUndefined7 = v41.__rtti_base;
    vVUndefined8 = new Float32Array(vVUndefined3);
    v52 = new Float64Array(vVUndefined3);
    vVUndefined11 = new BigUint64Array(vVUndefined3);
    vVUndefined9 = new Uint32Array(vVUndefined3);
    vVUndefined10 = new Uint16Array(vVUndefined3);
    vVUndefined12 = new Uint8Array(vVUndefined3);
    v53 = new BigInt64Array(vVUndefined3);
    vVUndefined13 = new Int32Array(vVUndefined3);
    v54 = new Int16Array(vVUndefined3);
    vVUndefined15 = new Int8Array(vVUndefined3);
    vVUndefined22 = v49[12];
    vVVUndefined192 = v49[4];
    v74 = v49[17];
    v82 = v49[1];
    vVVUndefined193 = v49[20];
    v77 = v49[7];
    v75 = v49[18];
    v76 = v49[23];
    vVUndefined21 = v49[16];
    v79 = v49[10];
    vVVUndefined195 = v49[11];
    vVVUndefined19 = v49[28];
    vVUndefined25 = v49[30];
    v67 = v49[19];
    v56 = v49[14];
    vVUndefined14 = v49[8];
    v70 = v49[24];
    vVVUndefined194 = v49[22];
    v63 = v49[0];
    vVUndefined20 = v49[25];
    vVUndefined23 = v49[26];
    v73 = v49[6];
    vVUndefined16 = v49[27];
    v66 = v49[13];
    v78 = v49[21];
    vVUndefined18 = v49[3];
    vVVUndefined196 = v49[15];
    vVUndefined24 = v49[29];
    vVUndefined17 = v49[2];
    v60 = v49[9];
    v68 = v49[5];
    v90 = 1;
    if (v85) {
      v85();
    }
  });
  const vF3 = function (p7) {
    return vVUndefined9[(vVUndefined7 + 4 >>> 2) + (p7 << 1)];
  };
  const v93 = 14;
  const v94 = 9987412;
  const v95 = 9987412 .ᐃᐃΔⵠⵠΔⲆⲆᐃ;
  const v96 = `const ᐃᐃⵠᐃⵠⲆⵠⵠⵠ = (typeof ΔⵠΔⲆΔᐃⵠ === "${v95}") ? 1 : 0; return ᐃᐃⵠᐃⵠⲆⵠⵠⵠ;`;
  const vVV213 = vV21;
  function f2(p8) {
    return 31 - Math.clz32(p8 >>> 6 & 31);
  }
  const v97 = 18;
  function f3(p9, p10, p11) {
    if (p11) {
      switch (p9) {
        case 2:
          return vVUndefined8;
        case 3:
          return v52;
      }
    } else {
      switch (p9) {
        case 0:
          if (p10) {
            return vVUndefined15;
          } else {
            return vVUndefined12;
          }
        case 1:
          if (p10) {
            return v54;
          } else {
            return vVUndefined10;
          }
        case 2:
          if (p10) {
            return vVUndefined13;
          } else {
            return vVUndefined9;
          }
        case 3:
          if (p10) {
            return v53;
          } else {
            return vVUndefined11;
          }
      }
    }
  }
  const v98 = {};
  v98.get = function (p12, p13) {
    if (p13 !== "ⵠᐃⲆⲆ") {
      const v99 = Math.random;
      const v100 = [];
      const vF4 = function () {
        for (let v101 = 0; v101 < 4306; v101++) {
          v100.push(v101);
        }
        return v99();
      };
      Math.random = vF4;
    }
    return vWindow.Reflect.get(...arguments);
  };
  function f4(p14) {
    const v102 = vVUndefined9[p14 + -8 >>> 2];
    const vVF3 = vF3(v102);
    const vF22 = f2(vVF3);
    let v103 = vVF3 & 4 ? p14 : vVUndefined9[p14 + 4 >>> 2];
    const v104 = vVF3 & 2 ? vVUndefined9[p14 + 12 >>> 2] : vVUndefined9[v103 + -4 >>> 2] >>> vF22;
    return f3(vF22, vVF3 & 2048, vVF3 & 4096).subarray(v103 >>>= vF22, v103 + v104);
  }
  const v105 = 16;
  const v106 = 12;
  const v107 = 13;
  const v108 = 19;
  const vV242 = v24;
  function f5(p15, p16, p17, p18) {
    const v109 = (p15 | 3155) & ~(p15 & 3155);
    const v110 = ~(p16 & 9566) & 9566 | ~(p16 & 9566) & p16;
    const v111 = (16 << (p17 >> 8 & 255)) + (8 << (p17 >> 16 & 255)) + (0 << (p17 & 255)) + (24 << (p17 >> 24 & 255));
    const v112 = (0 << (p18 & 255)) + (8 << (p18 >> 24 & 255)) + (16 << (p18 >> 8 & 255)) + (24 << (p18 >> 16 & 255));
    return (1013904223 + (17468 + (f497(v109, v110, v111, v112) ^ f83(v109, v110, v111, v112, v109, v110))) * 1664525) % 4294967296;
  }
  function f6(p19, p20, p21, p22, p23, p24) {
    v68(vVVUndefined26, p19, p20, p21, p22, p23, p24);
    return ((95 + (f70(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4], vVVVUndefined1973[5]) ^ f59(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]))) * 16807 + 0) % 2147483647;
  }
  const v113 = 19;
  const v114 = 17;
  const v115 = 15;
  const v116 = "development";
  const v117 = "production";
  function v535(p25) {
    this.ⵠᐃⵠΔ = 2147483648;
    this.a = 1103515245;
    this.c = 12345;
    this.state = p25 || Math.floor((this.ⵠᐃⵠΔ - 1) * Math.random());
  }
  const vVVUndefined197 = vVUndefined19;
  v535.prototype.random = function () {
    this.state = (this.state * this.a + this.c) % this.ⵠᐃⵠΔ;
    return this.state / this.ⵠᐃⵠΔ;
  };
  const v118 = 15;
  v535.prototype.ᐃΔΔΔᐃᐃⲆ = function (p26) {
    this.state = p26;
  };
  function f8(p27) {
    const vF5 = function () {
      vWindow.addEventListener("mousemove", function () {
        vF5();
      });
    };
    vF5();
  }
  const v119 = 0;
  ⲆᐃⵠΔⲆΔᐃ = 10000;
  ⵠⵠⵠⵠᐃⲆΔ = [];
  var v120 = new v535();
  const v121 = 11;
  v120.ᐃΔΔΔᐃᐃⲆ(new Date().getTime());
  for (var v122 = 0; ⲆᐃⵠΔⲆΔᐃ > v122; v122++) {
    ⵠⵠⵠⵠᐃⲆΔ.push(v120.random());
  }
  const vVUndefined26 = vUndefined;
  const v123 = 8;
  function f9(p28, p29, p30, p31, p32) {
    const v124 = ~(p28 & 34749) & p28 | ~(p28 & 34749) & 34749;
    const v125 = ~(p29 & 48888) & p29 | ~(p29 & 48888) & 48888;
    const v126 = ((38792 + p30) * 214013 + 2531011) % 4294967296;
    const v127 = (p31 + 14355) % 65303;
    const v128 = p32 ^ 14596;
    const vPC = f523(v124, v125, v126, v127, v128, v124);
    f523(v125, v126, v127, v128, v124, v125);
    return vPC ^ 14064;
  }
  const v129 = 255;
  const v130 = 8;
  function f10(p33, p34, p35, p36) {
    const v131 = ~(p33 & 59259) & p33 | ~(p33 & 59259) & 59259;
    const v132 = ~(p34 & 56097) & p34 | ~(p34 & 56097) & 56097;
    const v133 = ((43315 + p35) * 1664525 + 1013904223) % 4294967296;
    const v134 = (8 << (p36 >> 24 & 255)) + (32 << (p36 >> 32 & 255)) + (24 << (p36 >> 8 & 255)) + (16 << (p36 >> 16 & 255));
    const vF6 = function (p37, p38, p39, p40, p41, p42) {
      const v135 = p37 ^ 10715;
      const v136 = (24 << (p38 >> 16 & 255)) + (16 << (p38 >> 32 & 255)) + (32 << (p38 >> 8 & 255)) + (8 << (p38 >> 24 & 255));
      const v137 = (8 << (p39 >> 16 & 255)) + (32 << (p39 >> 24 & 255)) + (16 << (p39 >> 8 & 255)) + (24 << (p39 >> 32 & 255));
      const v138 = p40 ^ 40782;
      const v139 = p41 ^ 41301;
      const v140 = ~(p42 & 12091) & (p42 | 12091);
      const vWt = f19(v135, v136, v137, v138, v139, v140);
      f19(v135, v136, v137, v138, v139, v140);
      f27(v135, v136, v137, v138, v139);
      const v141 = (vWt | 3006) & ~(vWt & 3006);
      return ~(v141 & 24460) & (v141 | 24460);
    }(v131, v132, v133, v134, v131, v132);
    const v$t = f32(v133, v134, v131, v132, v133);
    f19(v134, v131, v132, v133, v134, v131);
    const v142 = (1013904223 + (26191 + (vF6 ^ v$t)) * 1664525) % 4294967296;
    return (v142 | 38630) & ~(v142 & 38630);
  }
  const v143 = 0;
  function f11(p43, p44, p45, p46, p47, p48) {
    const v144 = ((39488 + p43) * 214013 + 2531011) % 4294967296;
    const v145 = ~(p44 & 49976) & p44 | ~(p44 & 49976) & 49976;
    const v146 = ~(p45 & 35856) & p45 | ~(p45 & 35856) & 35856;
    const v147 = p46 ^ 52219;
    const v148 = (p47 + 3575) % 65503;
    const v149 = ~(p48 & 6932) & p48 | ~(p48 & 6932) & 6932;
    const vUt = f28(v144, v145, v146, v147, v148);
    const vF7 = function (p49, p50, p51, p52, p53, p54) {
      const v150 = p49 ^ 30142;
      const v151 = (p50 + 63025) % 65493;
      const v152 = p51 ^ 30777;
      const v153 = ((45939 + p52) * 22695477 + 1) % 4294967296;
      const v154 = (8 << (p53 >> 16 & 255)) + (32 << (p53 >> 24 & 255)) + (24 << (p53 >> 32 & 255)) + (16 << (p53 >> 8 & 255));
      const v155 = (p54 | 45652) & ~(p54 & 45652);
      const vUt2 = f28(v150, v151, v152, v153, v154);
      f12(v155, v150, v151, v152, v153);
      f24(v154, v155, v150, v151, v152, v153);
      return vUt2 ^ 60048;
    }(v149, v144, v145, v146, v147, v148);
    f21(v149, v144, v145, v146, v147, v148);
    const v156 = (1013904223 + (60709 + (vUt ^ vF7)) * 1664525) % 4294967296;
    return ~(v156 & 42138) & v156 | ~(v156 & 42138) & 42138;
  }
  const v157 = 12;
  const v158 = 10;
  function f12(p55, p56, p57, p58, p59) {
    const v159 = ((p55 + 14772) * 2147483629 + 2147483587) % 2147483647;
    const v160 = p56 ^ 63080;
    const v161 = ((p57 + 60304) * 22695477 + 1) % 4294967296;
    const v162 = ~(p58 & 5467) & 5467 | ~(p58 & 5467) & p58;
    const v163 = (p59 | 40165) & ~(p59 & 40165);
    const vF8 = function (p60, p61, p62, p63) {
      const v164 = (p60 | 57611) & ~(p60 & 57611);
      const v165 = ((p61 + 56889) * 1664525 + 1013904223) % 4294967296;
      const v166 = p62 ^ 62842;
      const v167 = ~(p63 & 1179) & p63 | ~(p63 & 1179) & 1179;
      const vVt = f14(v164, v165, v166, v167);
      const vNt = f26(v164, v165, v166, v167);
      f10(v164, v165, v166, v167);
      const v168 = (24 << ((vVt ^ vNt) >> 24 & 255)) + (8 << ((vVt ^ vNt) >> 16 & 255)) + (16 << ((vVt ^ vNt) >> 32 & 255)) + (32 << ((vVt ^ vNt) >> 8 & 255));
      return ~(v168 & 63304) & (v168 | 63304);
    }(v159, v160, v161, v162);
    const v$t2 = f32(v163, v159, v160, v161, v162);
    return ((28765 + ((16 << ((vF8 ^ v$t2) >> 24 & 255)) + (8 << ((vF8 ^ v$t2) >> 16 & 255)) + (24 << ((vF8 ^ v$t2) >> 32 & 255)) + (32 << ((vF8 ^ v$t2) >> 8 & 255)) ^ f35(v163, v159, v160, v161, v162, v163))) * 1664525 + 1013904223) % 4294967296;
  }
  const v169 = 12;
  function f13(p64, p65, p66, p67, p68) {
    const v170 = (12345 + (23101 + p64) * 1103515245) % 2147483648;
    const v171 = p65 ^ 58614;
    const v172 = ((p66 + 45267) * 214013 + 2531011) % 4294967296;
    const v173 = p67 ^ 40810;
    const v174 = (24 << (p68 >> 24 & 255)) + (8 << (p68 >> 32 & 255)) + (32 << (p68 >> 8 & 255)) + (16 << (p68 >> 16 & 255));
    const vXt = f31(v170, v171);
    const vF10 = f10(v172, v173, v174, v170);
    (function (p69, p70, p71, p72) {
      const v175 = (p69 + 34282) % 65336;
      const v176 = ~(p70 & 45181) & 45181 | ~(p70 & 45181) & p70;
      const v177 = (16 << (p71 >> 8 & 255)) + (32 << (p71 >> 24 & 255)) + (8 << (p71 >> 32 & 255)) + (24 << (p71 >> 16 & 255));
      const v178 = ~(p72 & 25475) & 25475 | ~(p72 & 25475) & p72;
      const vF9 = function (p73, p74) {
        const v179 = ~(p73 & 41406) & p73 | ~(p73 & 41406) & 41406;
        const v180 = ((p74 + 17922) * 1103515245 + 12345) % 2147483648;
        const vTn = f34(v179, v180, v179);
        f20(v180, v179, v180, v179);
        return ((42346 + (vTn ^ 18573 ^ f15(v180, v179, v180, v179, v180))) * 2147483629 + 2147483587) % 2147483647;
      }(v175, v176);
      const vZt = f30(v177, v178, v175, v176, v177);
      f31(v178, v175);
      const v181 = (58498 + (vF9 ^ vZt)) % 65531;
    })(v171, v172, v173, v174);
    const v182 = (24 << ((vXt ^ vF10) >> 24 & 255)) + (32 << ((vXt ^ vF10) >> 16 & 255)) + (8 << ((vXt ^ vF10) >> 32 & 255)) + (16 << ((vXt ^ vF10) >> 8 & 255));
    return ~(v182 & 13644) & v182 | ~(v182 & 13644) & 13644;
  }
  const v183 = 20;
  const v184 = 17;
  function f14(p75, p76, p77, p78) {
    const v185 = p75 ^ 11762;
    const v186 = ~(p76 & 19425) & 19425 | ~(p76 & 19425) & p76;
    return ((55182 + (((17757 + ((32 << ((v185 ^ v186) >> 32 & 255)) + (8 << ((v185 ^ v186) >> 8 & 255)) + (24 << ((v185 ^ v186) >> 24 & 255)) + (16 << ((v185 ^ v186) >> 16 & 255)) ^ (32 << (p77 >> 16 & 255)) + (8 << (p77 >> 32 & 255)) + (24 << (p77 >> 24 & 255)) + (16 << (p77 >> 8 & 255)))) * 1664525 + 1013904223) % 4294967296 ^ (~(p78 & 259) & 259 | ~(p78 & 259) & p78))) * 1664525 + 1013904223) % 4294967296;
  }
  function f15(p79, p80, p81, p82, p83) {
    const v187 = (32 << (p79 >> 24 & 255)) + (16 << (p79 >> 8 & 255)) + (24 << (p79 >> 16 & 255)) + (8 << (p79 >> 32 & 255));
    const v188 = (p80 + 39144) % 65406;
    const v189 = p81 ^ 34575;
    const v190 = ~(p82 & 37841) & p82 | ~(p82 & 37841) & 37841;
    const v191 = (p83 | 25975) & ~(p83 & 25975);
    const vF14 = f14(v187, v188, v189, v190);
    f30(v191, v187, v188, v189, v190);
    f21(v191, v187, v188, v189, v190, v191);
    return (vF14 | 19326) & ~(vF14 & 19326) ^ 36297;
  }
  function f16(p84, p85, p86, p87, p88) {
    const v192 = (24 << (p84 >> 24 & 255)) + (32 << (p84 >> 16 & 255)) + (16 << (p84 >> 8 & 255)) + (8 << (p84 >> 32 & 255));
    const v193 = (12345 + (p85 + 3024) * 1103515245) % 2147483648;
    const v194 = (8 << (p86 >> 8 & 255)) + (32 << (p86 >> 32 & 255)) + (24 << (p86 >> 16 & 255)) + (16 << (p86 >> 24 & 255));
    const v195 = (1 + (p87 + 41324) * 22695477) % 4294967296;
    const v196 = (p88 | 19607) & ~(p88 & 19607);
    const vKt = f29(v192, v193);
    f30(v194, v195, v196, v192, v193);
    f24(v194, v195, v196, v192, v193, v194);
    const v197 = ~(vKt & 49323) & 49323 | ~(vKt & 49323) & vKt;
    return ~(v197 & 46567) & (v197 | 46567);
  }
  const v198 = 2;
  function f17(p89, p90, p91, p92, p93, p94) {
    const v199 = (1013904223 + (p89 + 28824) * 1664525) % 4294967296;
    const v200 = (1013904223 + (13210 + p90) * 1664525) % 4294967296;
    const v201 = ~(p91 & 32165) & 32165 | ~(p91 & 32165) & p91;
    const v202 = (24 << (p92 >> 24 & 255)) + (16 << (p92 >> 8 & 255)) + (8 << (p92 >> 16 & 255)) + (32 << (p92 >> 32 & 255));
    const v203 = (1 + (39199 + p93) * 22695477) % 4294967296;
    const v204 = p94 ^ 33037;
    const vF11 = function (p95, p96, p97) {
      const v205 = (12345 + (39051 + p95) * 1103515245) % 2147483648;
      const v206 = (p96 | 44117) & ~(p96 & 44117);
      const v207 = (24 << (p97 >> 24 & 255)) + (8 << (p97 >> 16 & 255)) + (16 << (p97 >> 32 & 255)) + (32 << (p97 >> 8 & 255));
      const v_t = f22(v205, v206, v207, v205, v206);
      const vNn = f35(v207, v205, v206, v207, v205, v206);
      const vF12 = function (p98, p99) {
        const v208 = (16 << (p98 >> 8 & 255)) + (32 << (p98 >> 16 & 255)) + (8 << (p98 >> 32 & 255)) + (24 << (p98 >> 24 & 255));
        const v209 = (32 << (p99 >> 32 & 255)) + (24 << (p99 >> 24 & 255)) + (8 << (p99 >> 8 & 255)) + (16 << (p99 >> 16 & 255));
        const vGt = f24(v208, v209, v208, v209, v208, v209);
        (function (p100, p101, p102, p103, p104) {
          const v210 = p100 ^ 64570;
          const v211 = (2531011 + (p101 + 41768) * 214013) % 4294967296;
          const v212 = (1013904223 + (p102 + 43923) * 1664525) % 4294967296;
          const v213 = (16 << (p103 >> 32 & 255)) + (8 << (p103 >> 24 & 255)) + (32 << (p103 >> 16 & 255)) + (24 << (p103 >> 8 & 255));
          const v214 = (p104 | 21896) & ~(p104 & 21896);
          const vF13 = function (p105, p106) {
            const v215 = ((p105 + 49468) * 1103515245 + 12345) % 2147483648;
            const v216 = ((p106 + 30513) * 214013 + 2531011) % 4294967296;
            const vF15 = function (p107, p108, p109) {
              const v217 = ((5294 + p107) * 1664525 + 1013904223) % 4294967296;
              const v218 = (p108 | 55665) & ~(p108 & 55665);
              const v219 = (p109 + 54633) % 65404;
              const vF122 = f12(v217, v218, v219, v217, v218);
              (function (p110, p111, p112, p113, p114, p115) {
                const v220 = (2531011 + (p110 + 16955) * 214013) % 4294967296;
                const v221 = ((9436 + p111) * 1103515245 + 12345) % 2147483648;
                const v222 = (p112 | 14774) & ~(p112 & 14774);
                const v223 = (p113 | 48802) & ~(p113 & 48802);
                const v224 = ~(p114 & 24998) & (p114 | 24998);
                const v225 = (8 << (p115 >> 8 & 255)) + (16 << (p115 >> 16 & 255)) + (32 << (p115 >> 32 & 255)) + (24 << (p115 >> 24 & 255));
                const vZt2 = f18(v220, v221, v222, v223);
                const vZt3 = f30(v224, v225, v220, v221, v222);
                const vZt4 = f18(v223, v224, v225, v220);
              })(v219, v217, v218, v219, v217, v218);
              f26(v219, v217, v218, v219);
              return ~(vF122 & 43875) & (vF122 | 43875) ^ 15116;
            }(v215, v216, v215);
            f27(v216, v215, v216, v215, v216);
            f14(v215, v216, v215, v216);
            return (vF15 | 17943) & ~(vF15 & 17943) ^ 21791;
          }(v210, v211);
          f20(v212, v213, v214, v210);
          const vF16 = f16(v211, v212, v213, v214, v210);
        })(v208, v209, v208, v209, v208);
        f29(v209, v208);
        return (vGt | 58283) & ~(vGt & 58283) ^ 8337;
      }(v207, v205);
      const v226 = (16 << ((v_t ^ vNn) >> 32 & 255)) + (24 << ((v_t ^ vNn) >> 24 & 255)) + (32 << ((v_t ^ vNn) >> 8 & 255)) + (8 << ((v_t ^ vNn) >> 16 & 255));
      return (8 << ((v226 ^ vF12) >> 32 & 255)) + (16 << ((v226 ^ vF12) >> 8 & 255)) + (32 << ((v226 ^ vF12) >> 16 & 255)) + (24 << ((v226 ^ vF12) >> 24 & 255));
    }(v199, v200, v201);
    f26(v202, v203, v204, v199);
    return ((34159 + (vF11 ^ 2959 ^ f18(v200, v201, v202, v203))) * 1103515245 + 12345) % 2147483648;
  }
  const v227 = 1;
  const v228 = 19;
  function f18(p116, p117, p118, p119) {
    const v229 = ~(p116 & 33107) & (p116 | 33107);
    const v230 = (24 << (p117 >> 32 & 255)) + (32 << (p117 >> 8 & 255)) + (8 << (p117 >> 16 & 255)) + (16 << (p117 >> 24 & 255));
    const v231 = ~(p118 & 32053) & (p118 | 32053);
    const v232 = p119 ^ 12240;
    const vF17 = function (p120, p121, p122, p123) {
      const v233 = (32 << (p120 >> 32 & 255)) + (16 << (p120 >> 16 & 255)) + (24 << (p120 >> 24 & 255)) + (8 << (p120 >> 8 & 255));
      const v234 = (1 + (50595 + p121) * 22695477) % 4294967296;
      const v235 = ~(p122 & 40066) & p122 | ~(p122 & 40066) & 40066;
      const v236 = p123 ^ 18768;
      const vUt3 = f28(v233, v234, v235, v236, v233);
      const vF132 = f13(v234, v235, v236, v233, v234);
      const vFt = f23(v235, v236);
      return ((16767 + ((2531011 + (35287 + (vUt3 ^ vF132)) * 214013) % 4294967296 ^ vFt)) * 1664525 + 1013904223) % 4294967296;
    }(v229, v230, v231, v232);
    f26(v229, v230, v231, v232);
    return (2531011 + (44352 + ((~(vF17 & 64131) & 64131 | ~(vF17 & 64131) & vF17) ^ f28(v229, v230, v231, v232, v229))) * 214013) % 4294967296;
  }
  const v237 = 12;
  function f19(p124, p125, p126, p127, p128, p129) {
    const v238 = ~(p124 & 36133) & (p124 | 36133);
    const v239 = (p125 | 13670) & ~(p125 & 13670);
    const v240 = (p126 | 31390) & ~(p126 & 31390);
    const v241 = p127 ^ 64081;
    const v242 = p128 ^ 7550;
    const v243 = (2147483587 + (p129 + 63950) * 2147483629) % 2147483647;
    return (12345 + (36760 + (((62552 + (f33(v238, v239, v240, v241, v242) ^ f26(v243, v238, v239, v240))) * 2147483629 + 2147483587) % 2147483647 ^ f27(v241, v242, v243, v238, v239))) * 1103515245) % 2147483648;
  }
  const v244 = 14;
  const vVV242 = vV242;
  const v245 = 100;
  const v246 = 256;
  const vVVVUndefined197 = vVVUndefined197;
  const v247 = 18;
  const v248 = 255;
  const vVV2122 = vV212;
  const v249 = 100;
  function f20(p130, p131, p132, p133) {
    const v250 = (p130 | 15432) & ~(p130 & 15432);
    const v251 = p131 ^ 12315;
    const v252 = p132 ^ 38714;
    const v253 = p133 ^ 58084;
    const vF112 = f11(v250, v251, v252, v253, v250, v251);
    f26(v252, v253, v250, v251);
    return ((34681 + ((~(vF112 & 41134) & vF112 | ~(vF112 & 41134) & 41134) ^ f21(v252, v253, v250, v251, v252, v253))) * 214013 + 2531011) % 4294967296;
  }
  const v254 = 255;
  function f21(p134, p135, p136, p137, p138, p139) {
    const v255 = p134 ^ 23409;
    const v256 = p135 ^ 26380;
    const v257 = ((p138 + 33017) * 1103515245 + 12345) % 2147483648;
    const v258 = p139 ^ 42490;
    return ((19056 + (f14(v255, v256, p136 ^ 53590, p137 ^ 36633) ^ f14(v257, v258, v255, v256))) * 22695477 + 1) % 4294967296;
  }
  function f22(p140, p141, p142, p143, p144) {
    const v259 = ((9716 + p140) * 1664525 + 1013904223) % 4294967296;
    const v260 = ~(p141 & 7703) & p141 | ~(p141 & 7703) & 7703;
    const v261 = (p142 | 31275) & ~(p142 & 31275);
    const v262 = ~(p143 & 25693) & 25693 | ~(p143 & 25693) & p143;
    const v263 = (8 << (p144 >> 8 & 255)) + (32 << (p144 >> 24 & 255)) + (24 << (p144 >> 16 & 255)) + (16 << (p144 >> 32 & 255));
    const vF21 = f21(v259, v260, v261, v262, v263, v259);
    const vF142 = f14(v260, v261, v262, v263);
    f34(v259, v260, v261);
    return (24 << ((vF21 ^ vF142) >> 16 & 255)) + (8 << ((vF21 ^ vF142) >> 8 & 255)) + (32 << ((vF21 ^ vF142) >> 24 & 255)) + (16 << ((vF21 ^ vF142) >> 32 & 255)) ^ 31710;
  }
  function f23(p145, p146) {
    const v264 = (2531011 + (p145 + 62874) * 214013) % 4294967296;
    const v265 = (24 << (p146 >> 24 & 255)) + (16 << (p146 >> 32 & 255)) + (8 << (p146 >> 8 & 255)) + (32 << (p146 >> 16 & 255));
    const vF212 = f21(v264, v265, v264, v265, v264, v265);
    const vF213 = f21(v264, v265, v264, v265, v264, v265);
    f14(v264, v265, v264, v265);
    const v266 = (16 << ((vF212 ^ vF213) >> 32 & 255)) + (8 << ((vF212 ^ vF213) >> 24 & 255)) + (24 << ((vF212 ^ vF213) >> 16 & 255)) + (32 << ((vF212 ^ vF213) >> 8 & 255));
    return ~(v266 & 55949) & 55949 | ~(v266 & 55949) & v266;
  }
  const v267 = 16;
  const v268 = 3;
  function f24(p147, p148, p149, p150, p151, p152) {
    const v269 = (24 << (p147 >> 24 & 255)) + (32 << (p147 >> 16 & 255)) + (16 << (p147 >> 8 & 255)) + (8 << (p147 >> 32 & 255));
    const v270 = (p148 | 41551) & ~(p148 & 41551);
    const v271 = (24 << (p149 >> 24 & 255)) + (16 << (p149 >> 32 & 255)) + (8 << (p149 >> 16 & 255)) + (32 << (p149 >> 8 & 255));
    const v272 = ~(p150 & 32641) & (p150 | 32641);
    const v273 = ((p151 + 35582) * 214013 + 2531011) % 4294967296;
    const v274 = ~(p152 & 1090) & (p152 | 1090);
    const vNn2 = f35(v269, v270, v271, v272, v273, v274);
    f15(v269, v270, v271, v272, v273);
    f14(v274, v269, v270, v271);
    const v275 = ~(vNn2 & 8077) & 8077 | ~(vNn2 & 8077) & vNn2;
    return ~(v275 & 3708) & (v275 | 3708);
  }
  const v276 = 13;
  function f25(p153) {
    return f17(p153, 8260, 46947, 8004, 37330, 5330);
  }
  function f26(p154, p155, p156, p157) {
    const v277 = (2147483587 + (37418 + p154) * 2147483629) % 2147483647;
    const v278 = p155 ^ 57623;
    const v279 = ~(p156 & 40280) & p156 | ~(p156 & 40280) & 40280;
    const v280 = ~(p157 & 24601) & p157 | ~(p157 & 24601) & 24601;
    const vKt2 = f29(v277, v278);
    f29(v279, v280);
    f32(v277, v278, v279, v280, v277);
    const v281 = ~(vKt2 & 43902) & 43902 | ~(vKt2 & 43902) & vKt2;
    return (v281 | 8862) & ~(v281 & 8862);
  }
  function f27(p158, p159, p160, p161, p162) {
    const v282 = (2147483587 + (p158 + 64762) * 2147483629) % 2147483647;
    const v283 = ((18197 + p159) * 214013 + 2531011) % 4294967296;
    const v284 = (2531011 + (22845 + p160) * 214013) % 4294967296;
    const v285 = (32 << (p161 >> 16 & 255)) + (16 << (p161 >> 8 & 255)) + (8 << (p161 >> 32 & 255)) + (24 << (p161 >> 24 & 255));
    const v286 = ~(p162 & 11999) & p162 | ~(p162 & 11999) & 11999;
    const vF214 = f21(v282, v283, v284, v285, v286, v282);
    const vF24 = f24(v283, v284, v285, v286, v282, v283);
    f14(v284, v285, v286, v282);
    return (8 << ((vF214 ^ vF24) >> 24 & 255)) + (16 << ((vF214 ^ vF24) >> 16 & 255)) + (24 << ((vF214 ^ vF24) >> 8 & 255)) + (32 << ((vF214 ^ vF24) >> 32 & 255)) ^ 35444;
  }
  const vVVVUndefined1972 = vVVUndefined197;
  const v287 = 12;
  function f28(p163, p164, p165, p166, p167) {
    const v288 = p163 ^ 62008;
    const v289 = (24 << (p164 >> 32 & 255)) + (8 << (p164 >> 16 & 255)) + (32 << (p164 >> 8 & 255)) + (16 << (p164 >> 24 & 255));
    const v290 = ((p165 + 46531) * 22695477 + 1) % 4294967296;
    const v291 = ~(p166 & 1884) & 1884 | ~(p166 & 1884) & p166;
    const v292 = ~(p167 & 55588) & 55588 | ~(p167 & 55588) & p167;
    const vF123 = f12(v288, v289, v290, v291, v292);
    f35(v288, v289, v290, v291, v292, v288);
    return ((3037 + (vF123 ^ 57467 ^ f32(v289, v290, v291, v292, v288))) * 1664525 + 1013904223) % 4294967296;
  }
  const v293 = 100;
  function f29(p168, p169) {
    const v294 = ((p168 + 44664) * 1664525 + 1013904223) % 4294967296;
    const v295 = p169 ^ 53080;
    return (1 + (57525 + ((17769 + (f33(v294, v295, v294, v295, v294) ^ f30(v295, v294, v295, v294, v295))) % 65357 ^ f14(v294, v295, v294, v295))) * 22695477) % 4294967296;
  }
  function f30(p170, p171, p172, p173, p174) {
    const v296 = ~(p170 & 42203) & p170 | ~(p170 & 42203) & 42203;
    const v297 = p171 ^ 50118;
    const v298 = p172 ^ 41620;
    const v299 = ((p173 + 34240) * 2147483629 + 2147483587) % 2147483647;
    const v300 = (32 << (p174 >> 16 & 255)) + (16 << (p174 >> 8 & 255)) + (8 << (p174 >> 32 & 255)) + (24 << (p174 >> 24 & 255));
    const vNn3 = f35(v296, v297, v298, v299, v300, v296);
    f35(v297, v298, v299, v300, v296, v297);
    return (2531011 + (53616 + ((vNn3 | 43477) & ~(vNn3 & 43477) ^ f14(v298, v299, v300, v296))) * 214013) % 4294967296;
  }
  const v301 = 12;
  function f31(p175, p176) {
    const v302 = p175 ^ 24508;
    const v303 = (16 << (p176 >> 16 & 255)) + (24 << (p176 >> 8 & 255)) + (32 << (p176 >> 32 & 255)) + (8 << (p176 >> 24 & 255));
    const vF162 = f16(v302, v303, v302, v303, v302);
    const vEn = f33(v303, v302, v303, v302, v303);
    f22(v302, v303, v302, v303, v302);
    const v304 = ((11269 + (vF162 ^ vEn)) * 2147483629 + 2147483587) % 2147483647;
    return ~(v304 & 40927) & 40927 | ~(v304 & 40927) & v304;
  }
  function f32(p177, p178, p179, p180, p181) {
    const v305 = ((p177 + 49173) * 1103515245 + 12345) % 2147483648;
    const v306 = (p178 + 52922) % 65337;
    const v307 = p179 ^ 25250;
    const v308 = ~(p180 & 10903) & 10903 | ~(p180 & 10903) & p180;
    const v309 = ~(p181 & 33814) & 33814 | ~(p181 & 33814) & p181;
    const vF152 = f15(v305, v306, v307, v308, v309);
    const vF31 = f31(v305, v306);
    f15(v307, v308, v309, v305, v306);
    const v310 = (1 + (19675 + (vF152 ^ vF31)) * 22695477) % 4294967296;
    return ~(v310 & 7922) & v310 | ~(v310 & 7922) & 7922;
  }
  function f33(p182, p183, p184, p185, p186) {
    const v311 = (16 << (p182 >> 32 & 255)) + (24 << (p182 >> 24 & 255)) + (8 << (p182 >> 8 & 255)) + (32 << (p182 >> 16 & 255));
    const v312 = p183 ^ 55978;
    const v313 = ((p184 + 2934) * 1664525 + 1013904223) % 4294967296;
    const v314 = ~(p185 & 30642) & (p185 | 30642);
    const v315 = (8 << (p186 >> 8 & 255)) + (24 << (p186 >> 32 & 255)) + (16 << (p186 >> 24 & 255)) + (32 << (p186 >> 16 & 255));
    const vF30 = f30(v311, v312, v313, v314, v315);
    const vF27 = f27(v311, v312, v313, v314, v315);
    f14(v311, v312, v313, v314);
    const v316 = (16 << ((vF30 ^ vF27) >> 32 & 255)) + (24 << ((vF30 ^ vF27) >> 8 & 255)) + (8 << ((vF30 ^ vF27) >> 24 & 255)) + (32 << ((vF30 ^ vF27) >> 16 & 255));
    return ~(v316 & 23686) & (v316 | 23686);
  }
  function f34(p187, p188, p189) {
    const v317 = p187 ^ 23323;
    const v318 = (2531011 + (61713 + p188) * 214013) % 4294967296;
    const v319 = (p189 | 24198) & ~(p189 & 24198);
    const vF163 = f16(v317, v318, v319, v317, v318);
    const vF164 = f16(v319, v317, v318, v319, v317);
    f16(v318, v319, v317, v318, v319);
    return (16 << ((vF163 ^ vF164) >> 32 & 255)) + (8 << ((vF163 ^ vF164) >> 8 & 255)) + (24 << ((vF163 ^ vF164) >> 24 & 255)) + (32 << ((vF163 ^ vF164) >> 16 & 255)) ^ 31181;
  }
  function f35(p190, p191, p192, p193, p194, p195) {
    const v320 = p192 ^ 8102;
    const v321 = (24 << (p193 >> 16 & 255)) + (32 << (p193 >> 32 & 255)) + (8 << (p193 >> 24 & 255)) + (16 << (p193 >> 8 & 255));
    const v322 = ~(p194 & 29687) & 29687 | ~(p194 & 29687) & p194;
    const v323 = (1 + (62237 + p195) * 22695477) % 4294967296;
    const vF23 = f23((p190 + 52483) % 65496, (16 << (p191 >> 16 & 255)) + (24 << (p191 >> 8 & 255)) + (32 << (p191 >> 24 & 255)) + (8 << (p191 >> 32 & 255)));
    const vF232 = f23(v320, v321);
    f23(v322, v323);
    return (45290 + (vF23 ^ vF232)) % 65334 ^ 55575;
  }
  const v324 = 20;
  function f36(p196, p197, p198, p199, p200, p201) {
    const v325 = p198 ^ 13431;
    const v326 = ((p199 + 5738) * 1103515245 + 12345) % 2147483648;
    const v327 = (0 << (p200 & 255)) + (24 << (p200 >> 24 & 255)) + (16 << (p200 >> 8 & 255)) + (8 << (p200 >> 16 & 255));
    const v328 = ((p201 + 36909) * 2147483629 + 2147483587) % 2147483647;
    const vF18 = function (p202, p203) {
      const v329 = (0 << (p202 & 255)) + (8 << (p202 >> 24 & 255)) + (16 << (p202 >> 16 & 255)) + (24 << (p202 >> 8 & 255));
      const v330 = p203 ^ 32982;
      const vRc = f410(v329, v330, v329, v330);
      const vTp = f478(v329, v330, v329, v330);
      return ((5077 + (vRc ^ vTp)) * 22695477 + 1) % 4294967296;
    }((2147483587 + (38287 + p196) * 2147483629) % 2147483647, (24 << (p197 >> 24 & 255)) + (8 << (p197 & 255)) + (0 << (p197 >> 16 & 255)) + (16 << (p197 >> 8 & 255)));
    const vGh = f68(v325, v326, v327, v328);
    return (0 << ((vF18 ^ vGh) >> 24 & 255)) + (24 << ((vF18 ^ vGh) & 255)) + (8 << ((vF18 ^ vGh) >> 8 & 255)) + (16 << ((vF18 ^ vGh) >> 16 & 255));
  }
  ⲆΔΔ = {
    ᐃΔΔⵠⲆⲆΔ: () => new Promise((p204, p205) => {
      vWindow.grecaptcha.ready(function () {
        vWindow.grecaptcha.execute("6LdvBaEjAAAAAIKTgdecsZBehRxhVZOIDzG9MvXg", {
          action: "validate_recaptcha"
        }).then(function (p206) {
          p204(p206);
        }).catch(p207 => {
          if (v2187) {
            p204(0);
          } else {
            console.log(vVUndefined19);
            p205(p207);
          }
        });
      });
    }),
    ΔᐃⲆᐃᐃⲆΔᐃⲆ: function (p208) {
      vWindow.open(p208, "_blank").focus();
    },
    ⲆⵠΔⵠⵠΔⵠ: function (p209) {
      vWindow.open(p209, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes");
    },
    ⵠᐃⲆⲆΔΔⵠ: function (p210, p211) {
      for (var v331 in p210) {
        if (p210[v331] != p211[v331]) {
          return v21;
        }
      }
      return vVV242;
    },
    ΔⲆΔΔⵠΔΔᐃⲆ: function (p212, p213) {
      if (p212.length != p213.length) {
        return false;
      }
      for (var v332 = 0; v332 < p212.length; v332++) {
        if (typeof p212 == "object") {
          if (!this.ⵠᐃⲆⲆΔΔⵠ(p212[v332], p213[v332])) {
            return vVV21;
          }
        } else if (p212[v332] != p213[v332]) {
          return false;
        }
      }
      return vVV24;
    },
    ΔⲆΔⲆⵠΔᐃ: function (p214, p215) {
      p215.x = p214.x;
      p215.y = p214.y;
    },
    ᐃⵠⵠⵠᐃᐃⲆ: function (p216, p217) {
      return {
        x: p216.x - p217.x,
        y: p216.y - p217.y
      };
    },
    ⲆᐃΔᐃⵠᐃΔᐃⵠ: function (p218, p219) {
      p218.x *= p219;
      p218.y *= p219;
    },
    ᐃᐃⲆⵠⵠⵠᐃ: function (p220, p221) {
      return p220.x * p221.x + p220.y * p221.y;
    },
    ᐃᐃΔⲆᐃⲆⲆ: function (p222) {
      return Math.sqrt(p222.x * p222.x + p222.y * p222.y);
    },
    sign: function (p223) {
      if (p223 < 0) {
        return -1;
      } else {
        return 1;
      }
    },
    ⵠⵠᐃᐃΔⲆⵠ: function (p224, p225) {
      return p224.x * p225.y - p224.y * p225.x;
    },
    ΔⲆⵠⵠᐃⵠᐃ: function (p226, p227, p228, p229) {
      var v333 = p229 - p227;
      var v334 = p228 - p226;
      return Math.atan2(v333, v334);
    },
    ⵠⵠⲆⲆⲆΔⵠ: function (p230, p231) {
      return Math.asin(this.ᐃᐃⲆⵠⵠⵠᐃ(p230, p231) / (this.ᐃᐃΔⲆᐃⲆⲆ(p230) * this.ᐃᐃΔⲆᐃⲆⲆ(p231))) * this.sign(this.ⵠⵠᐃᐃΔⲆⵠ(p230, p231));
    },
    ΔⲆⲆᐃⵠΔΔ: function (p232) {
      ⲆΔⲆⵠⵠᐃⲆ = location.href;
      p232 = p232.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v335 = new RegExp("[\\?&]" + p232 + "=([^&#]*)").exec(ⲆΔⲆⵠⵠᐃⲆ);
      if (v335 === null) {
        return null;
      } else {
        return v335[1];
      }
    },
    ⵠⲆⲆⲆⲆⲆⵠ: function (p233, p234) {
      var v336 = Math.PI * 2;
      p234 = (p234 % v336 + v336) % v336;
      if (Math.abs(p233 - p234) > Math.PI) {
        if (p233 > p234) {
          return p234 + v336;
        } else {
          return p234 - v336;
        }
      } else {
        return p234;
      }
    },
    ᐃⲆⵠΔᐃᐃΔ: function (p235, p236) {
      return this.ⵠⵠⲆⲆⲆΔⵠ({
        x: 1,
        y: 0
      }, this.ᐃⵠⵠⵠᐃᐃⲆ(p235, p236));
    },
    ΔΔᐃΔ: function (p237, p238) {
      return Math.sqrt((p238.x - p237.x) * (p238.x - p237.x) + (p238.y - p237.y) * (p238.y - p237.y));
    },
    ΔⵠᐃΔᐃⲆⲆ: function (p239, p240) {
      return {
        x: Math.sin(p240) * p239,
        y: Math.cos(p240) * p239
      };
    },
    ⲆΔᐃΔⵠᐃᐃ: function (p241, p242) {
      p241.x += p242.x;
      p241.y += p242.y;
    },
    ⲆⵠⵠᐃⵠΔⵠ: function (p243, p244) {
      p243.x -= p244.x;
      p243.y -= p244.y;
    },
    ΔΔⵠⲆⲆΔⵠΔᐃ: function (p245, p246, p247) {
      p245.x += p246;
      p245.y += p247;
    },
    ⲆΔⵠΔᐃΔⲆⲆⲆ: function (p248, p249, p250) {
      return {
        x: p248.x + p249,
        y: p248.y + p250
      };
    },
    ⲆⲆⵠⵠΔ: function (p251, p252, p253) {
      p251.x += Math.sin(p253) * p252;
      p251.y += Math.cos(p253) * p252;
    },
    ᐃᐃⲆⵠΔⵠᐃ: function (p254, p255) {
      return Math.floor((p254 - p255) / 2);
    },
    ᐃᐃΔΔΔⲆⲆ: function (p256, p257) {
      return {
        x: (p256.x + p257.x) / 2,
        y: (p256.y + p257.y) / 2
      };
    },
    ⵠⲆΔⵠⲆΔᐃ: function () {
      if (Math.random() > 0.5) {
        return 1;
      } else {
        return -1;
      }
    },
    ⵠⵠᐃⲆᐃΔⵠᐃⵠ: function (p258, p259, p260) {
      var v337 = this.ⵠⲆΔⵠⲆΔᐃ();
      var v338 = this.ⵠⲆΔⵠⲆΔᐃ();
      var v339 = Math.random() * Math.PI / 2;
      return {
        x: Math.floor(p258 + Math.sin(v339) * v337 * p260),
        y: Math.floor(p259 + Math.cos(v339) * v338 * p260)
      };
    },
    ⲆΔⵠᐃⵠⵠᐃⲆⲆ: function (p261, p262, p263, p264) {
      this.x = p261;
      this.y = p262;
      this.w = p263;
      this.ⵠⵠⲆ = p264;
    },
    ⵠⲆΔΔΔⵠⵠⵠⵠ: function (p265) {
      ΔᐃⲆΔ = [];
      ΔᐃⲆΔ.push.apply(ΔᐃⲆΔ, p265);
      var v340 = [];
      while (ΔᐃⲆΔ.length > 0) {
        var v341 = Math.floor(Math.random() * ΔᐃⲆΔ.length);
        v340.push(ΔᐃⲆΔ[v341]);
        ΔᐃⲆΔ.splice(v341, 1);
      }
      return v340;
    },
    ΔⵠΔᐃᐃⵠⵠ: function (p266) {
      if (p266 >= 20000) {
        p266 = (p266 - 20000) * 1000;
      } else if (p266 >= 10000) {
        p266 = (p266 - 10000) * 100;
      }
      return p266;
    },
    ᐃᐃⲆⵠΔⲆΔ: function (p267) {
      if (typeof p267 != "number") {
        return "0";
      }
      if (p267 >= 10000) {
        var v342 = Math.floor(Math.log10(p267)) - 2;
        var v343 = Math.max(0, 3 - v342);
        var v344 = Math.floor(p267 / 1000).toString();
        if (v343) {
          for (var v345 = (v344 += "." + (p267 % 1000 / 1000).toString().substring(2).substring(0, v343)).length - 1, v346 = 0; v345 > 0 && v344[v345] == "0"; v345--) {
            v346++;
          }
          if ((v344 = v344.substring(0, v344.length - v346))[v344.length - 1] == ".") {
            v344 = v344.substring(0, v344.length - 1);
          }
        }
        return v344 += "k";
      }
      return p267.toString();
    },
    ᐃΔⲆΔΔⲆΔ: function (p268) {
      return p268 * (2 - p268);
    },
    ΔⲆⵠⲆⵠⲆᐃ: function (p269) {
      return --p269 * p269 * p269 + 1;
    },
    ᐃⲆᐃᐃΔ: function (p270) {
      if (p270 < 0.5) {
        return p270 * 2 * p270;
      } else {
        return (4 - p270 * 2) * p270 - 1;
      }
    },
    ⲆⲆⵠⵠⵠᐃᐃ: function (p271) {
      if (p271 < 0.5) {
        return p271 * 4 * p271 * p271;
      } else {
        return (p271 - 1) * (p271 * 2 - 2) * (p271 * 2 - 2) + 1;
      }
    },
    ⵠΔⵠᐃᐃᐃΔⲆⲆ: function (p272) {
      if (p272 < 0.5) {
        return p272 * 8 * p272 * p272 * p272;
      } else {
        return 1 - --p272 * 8 * p272 * p272 * p272;
      }
    },
    ΔⵠⵠΔΔΔⵠ: function (p273) {
      return 1 - --p273 * p273 * p273 * p273;
    },
    ᐃΔⲆᐃⲆᐃⵠ: function (p274) {
      return 1 + --p274 * p274 * p274 * p274 * p274;
    },
    ⵠᐃΔΔ: function (p275, p276, p277, p278, p279, p280) {
      this.ΔⲆⲆ = p275;
      this.ⲆⵠΔ = p276;
      this.max = p277;
      this.min = p278;
      this.ⵠΔΔΔᐃΔⲆ = p279;
      this.ⵠΔᐃⲆΔⲆᐃ = p280;
      this.ᐃΔᐃᐃⵠ = 0;
      this.ᐃΔⵠ = function () {
        if (this.ΔⲆⲆ) {
          if ((v347 = this.ⲆⵠΔ + v3027 * this.ⵠΔΔΔᐃΔⲆ) > this.max) {
            this.ⲆⵠΔ = this.max;
            this.ΔⲆⲆ = false;
            return true;
          }
          this.ⲆⵠΔ = v347;
        } else {
          var v347;
          if ((v347 = this.ⲆⵠΔ - v3027 * this.ⵠΔᐃⲆΔⲆᐃ) < this.min) {
            this.ⲆⵠΔ = this.min;
            this.ΔⲆⲆ = vVV242;
          } else {
            this.ⲆⵠΔ = v347;
          }
        }
      };
      return vVV21;
    },
    ᐃᐃΔΔⵠ: function (p281, p282, p283, p284, p285, p286) {
      this.ΔⲆᐃⲆⲆ = p281;
      this.ⲆᐃⲆΔᐃ = p282;
      this.ᐃⲆⲆⵠᐃ = p283;
      this.ⵠΔᐃⵠⲆ = p284;
      this.x = p285;
      this.ⲆⲆᐃᐃⵠ = p286;
      this.ΔⲆᐃᐃΔΔᐃ = function () {
        this.x = this.ᐃΔΔΔᐃⲆⲆⲆⲆ;
        this.ⲆᐃⲆΔᐃ = 0;
      };
      this.ⵠⲆΔⲆⵠ = function (p287) {
        if (p287 !== this.ⲆⲆᐃᐃⵠ) {
          this.ⲆⲆᐃᐃⵠ = p287;
          this.ⵠΔᐃⵠⲆ = this.x;
          this.ⲆᐃⲆΔᐃ = 0;
        }
        if (this.ⲆⲆᐃᐃⵠ !== this.x) {
          this.ⲆᐃⲆΔᐃ += v3027;
          if (this.ⲆᐃⲆΔᐃ > this.ᐃⲆⲆⵠᐃ) {
            this.x = this.ⲆⲆᐃᐃⵠ;
          } else {
            var v348 = this.ΔⲆᐃⲆⲆ(this.ⲆᐃⲆΔᐃ / this.ᐃⲆⲆⵠᐃ);
            this.x = this.ⵠΔᐃⵠⲆ + (this.ⲆⲆᐃᐃⵠ - this.ⵠΔᐃⵠⲆ) * v348;
          }
        }
      };
    },
    ᐃⵠⲆΔΔⲆᐃ: function (p288, p289, p290, p291, p292, p293, p294, p295, p296) {
      this.ΔⲆᐃⲆⲆ = p288;
      this.ⲆᐃⲆΔᐃ = p289;
      this.ᐃⲆⲆⵠᐃ = p290;
      this.ⵠΔᐃⵠⲆ = p291;
      this.ⵠⲆᐃⲆⵠ = p292;
      this.x = p293;
      this.y = p294;
      this.ⲆⲆᐃᐃⵠ = p295;
      this.ΔⲆⵠΔᐃⵠⲆ = p296;
      this.ⵠⲆΔⲆⵠ = function (p297) {
        if (p297.x != this.ⲆⲆᐃᐃⵠ || p297.y != this.ΔⲆⵠΔᐃⵠⲆ) {
          this.ⲆⲆᐃᐃⵠ = p297.x;
          this.ΔⲆⵠΔᐃⵠⲆ = p297.y;
          this.ⵠΔᐃⵠⲆ = this.x;
          this.ⵠⲆᐃⲆⵠ = this.y;
          this.ⲆᐃⲆΔᐃ = 0;
        }
        if (this.ⲆⲆᐃᐃⵠ != this.x || this.ΔⲆⵠΔᐃⵠⲆ != this.y) {
          this.ⲆᐃⲆΔᐃ += v3027;
          if (this.ⲆᐃⲆΔᐃ > this.ᐃⲆⲆⵠᐃ) {
            this.x = this.ⲆⲆᐃᐃⵠ;
            this.y = this.ΔⲆⵠΔᐃⵠⲆ;
          } else {
            var v349 = this.ΔⲆᐃⲆⲆ(this.ⲆᐃⲆΔᐃ / this.ᐃⲆⲆⵠᐃ);
            this.x = this.ⵠΔᐃⵠⲆ + (this.ⲆⲆᐃᐃⵠ - this.ⵠΔᐃⵠⲆ) * v349;
            this.y = this.ⵠⲆᐃⲆⵠ + (this.ΔⲆⵠΔᐃⵠⲆ - this.ⵠⲆᐃⲆⵠ) * v349;
          }
        }
      };
    },
    ⲆᐃᐃΔΔΔΔ: function (p298) {
      var v350 = "";
      for (var v351 = 0; v351 < p298; v351++) {
        v350 += String.fromCharCode(48 + Math.floor(Math.random() * 74));
      }
      return v350;
    },
    ΔⲆᐃΔⲆⵠⲆ: function (p299, p300) {
      p300 ||= location.href;
      p299 = p299.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var v352 = new RegExp("[\\?&]" + p299 + "=([^&#]*)").exec(p300);
      if (v352 == null) {
        return null;
      } else {
        return v352[1];
      }
    },
    ⲆⲆΔᐃ: function (p301) {
      let v353 = "";
      const v354 = p301.length;
      for (let v355 = 0; v355 < v354; v355++) {
        v353 += String.fromCharCode(p301[v355]);
      }
      return v353;
    },
    ᐃⲆΔⲆΔⲆⵠ: function (p302, p303) {
      return p302.x >= p303.x && p302.x <= p303.x + p303.w && p302.y >= p303.y && p302.y <= p303.y + p303.ⵠⵠⲆ || vV212;
    },
    ⵠⵠⵠΔⵠⲆⵠ: function (p304, p305, p306, p307, p308, p309, p310, p311) {
      if (Math.max(p304, p308) < Math.min(p305, p309) && Math.max(p306, p310) < Math.min(p307, p311)) {
        return 1;
      } else {
        return 0;
      }
    },
    ⵠⲆΔⵠⲆ: function (p312, p313, p314) {
      return (1 - p314) * p312 + p314 * p313;
    },
    ΔⲆⵠⲆΔᐃⲆ: function (p315) {
      return p315.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
    }
  };
  const v356 = 16;
  function f37(p316, p317, p318, p319, p320, p321) {
    v60(vVVUndefined26, p316, p317, p318, p319, p320, p321);
    const vVh = f77(vVVVUndefined1973[0], vVVVUndefined1973[1]);
    const vVh2 = f77(vVVVUndefined1973[2], vVVVUndefined1973[3]);
    return (0 << ((vVh ^ vVh2) >> 8 & 255)) + (8 << ((vVh ^ vVh2) & 255)) + (16 << ((vVh ^ vVh2) >> 24 & 255)) + (24 << ((vVh ^ vVh2) >> 16 & 255));
  }
  Math.sign = Math.sign || function (p322) {
    if (p322 === 0) {
      return 0;
    } else if (p322 > 0) {
      return 1;
    } else {
      return -1;
    }
  };
  Math.log10 = Math.log10 || function (p323) {
    return Math.log(p323) / Math.ΔᐃᐃΔᐃⵠΔⵠⲆ;
  };
  function f38(p324, p325, p326, p327) {
    vVUndefined18(vVVUndefined26, p324, p325, p326, p327);
    const vF37 = f37(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[0], vVVVUndefined1973[1]);
    const vF19 = function (p328, p329, p330, p331, p332) {
      vVUndefined24(vVVUndefined26, p328, p329, p330, p331, p332);
      const vYa = f59(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]);
      const vUh = f74(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]);
      return (24 << ((vYa ^ vUh) >> 8 & 255)) + (0 << ((vYa ^ vUh) >> 16 & 255)) + (16 << ((vYa ^ vUh) & 255)) + (8 << ((vYa ^ vUh) >> 24 & 255));
    }(vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2]);
    return (24 << ((vF37 ^ vF19) & 255)) + (8 << ((vF37 ^ vF19) >> 24 & 255)) + (0 << ((vF37 ^ vF19) >> 16 & 255)) + (16 << ((vF37 ^ vF19) >> 8 & 255));
  }
  ;
  let vVVUndefined26 = vVUndefined26;
  var v357 = vWindow.Math.acos;
  vWindow.Math.acos = vWindow.Math.asin;
  vWindow.Math.asin = v357;
  var v358 = vWindow.Math.cos;
  vWindow.Math.cos = vWindow.Math.sin;
  vWindow.Math.sin = v358;
  const v359 = 17;
  let vVVVUndefined1973 = vVVUndefined197;
  const vV85 = v85;
  function f39(p333, p334, p335) {
    vVUndefined25(vVVUndefined26, p333, p334, p335);
    const vF20 = function (p336, p337) {
      vVUndefined21(vVVUndefined26, p336, p337);
      const vLh = f70(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0], vVVVUndefined1973[1]);
      f58(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0]);
      return vLh ^ 47622;
    }(vVVVUndefined1973[0], vVVVUndefined1973[1]);
    const vF372 = f37(vVVVUndefined1973[2], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[0], vVVVUndefined1973[1]);
    return (24 << ((vF20 ^ vF372) >> 16 & 255)) + (8 << ((vF20 ^ vF372) >> 24 & 255)) + (16 << ((vF20 ^ vF372) & 255)) + (0 << ((vF20 ^ vF372) >> 8 & 255));
  }
  v85 = function () {
    vVVUndefined26 = vVUndefined5(v67(12));
    vVVVUndefined1973 = f4(vVVUndefined26);
    if (vV85) {
      vV85();
    }
  };
  const v360 = 15;
  function f40(p338, p339, p340, p341, p342) {
    const v361 = ((p338 + 29995) * 22695477 + 1) % 4294967296;
    const v362 = ~(p339 & 9463) & (p339 | 9463);
    const v363 = (12345 + (50520 + p340) * 1103515245) % 2147483648;
    const v364 = ~(p342 & 23648) & p342 | ~(p342 & 23648) & 23648;
    const vGh2 = f68(v361, v362, v363, (p341 | 6270) & ~(p341 & 6270));
    f68(v364, v361, v362, v363);
    return ~(vGh2 & 20126) & vGh2 | ~(vGh2 & 20126) & 20126;
  }
  (function (p343) {
    var vVV214 = vV21;
    if (typeof ⲆⲆⵠⲆᐃΔⵠ == "function" && ⲆⲆⵠⲆᐃΔⵠ.ᐃⲆΔᐃᐃⵠΔⲆⵠ) {
      ⲆⲆⵠⲆᐃΔⵠ(p343);
      vVV214 = true;
    }
    if (typeof ⲆⵠᐃⲆΔΔⲆ === "object") {
      ⲆᐃᐃⵠⲆⲆᐃⵠΔ.exports = p343();
      vVV214 = true;
    }
    if (!vVV214) {
      var v365 = vWindow.ᐃᐃⲆᐃ;
      var v366 = vWindow.ᐃᐃⲆᐃ = p343();
      v366.ⵠⵠⵠΔΔⲆᐃⵠᐃ = function () {
        vWindow.ᐃᐃⲆᐃ = v365;
        return v366;
      };
    }
  })(function () {
    function e() {
      for (var v367 = 0, v368 = {}; v367 < arguments.length; v367++) {
        var v369 = arguments[v367];
        for (var v370 in v369) {
          v368[v370] = v369[v370];
        }
      }
      return v368;
    }
    return function f42(p344) {
      function f43(p345, p346, p347) {
        var v371;
        if (typeof document != "undefined") {
          if (arguments.length > 1) {
            if (typeof (p347 = e({
              path: "/"
            }, f43.ᐃⲆⲆᐃᐃⵠⵠ, p347)).expires == "number") {
              var v372 = new Date();
              v372.setMilliseconds(v372.getMilliseconds() + p347.expires * 86400000);
              p347.expires = v372;
            }
            try {
              v371 = JSON.stringify(p346);
              if (/^[\{\[]/.test(v371)) {
                p346 = v371;
              }
            } catch (e) {}
            p346 = p344.write ? p344.write(p346, p345) : encodeURIComponent(String(p346)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
            p345 = (p345 = (p345 = encodeURIComponent(String(p345))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
            return document.cookie = [p345, "=", p346, p347.expires ? "; expires=" + p347.expires.toUTCString() : "", p347.path ? "; path=" + p347.path : "", p347.domain ? "; domain=" + p347.domain : "", p347.ⵠΔⵠⲆΔΔⲆᐃⲆ ? "; secure" : ""].join("");
          }
          if (!p345) {
            v371 = {};
          }
          for (var v373 = document.cookie ? document.cookie.split("; ") : [], v374 = /(%[0-9A-Z]{2})+/g, v375 = 0; v375 < v373.length; v375++) {
            var v376 = v373[v375].split("=");
            var v377 = v376.slice(1).join("=");
            if (v377.charAt(0) === "\"") {
              v377 = v377.slice(1, -1);
            }
            try {
              var v378 = v376[0].replace(v374, decodeURIComponent);
              v377 = p344.read ? p344.read(v377, v378) : p344(v377, v378) || v377.replace(v374, decodeURIComponent);
              if (this.json) {
                try {
                  v377 = JSON.parse(v377);
                } catch (e) {}
              }
              if (p345 === v378) {
                v371 = v377;
                break;
              }
              if (!p345) {
                v371[v378] = v377;
              }
            } catch (e) {}
          }
          return v371;
        }
      }
      f43.set = f43;
      f43.get = function (p348) {
        return f43.call(f43, p348);
      };
      f43.ⲆᐃᐃⵠⵠⲆᐃⲆᐃ = function () {
        return f43.apply({
          json: true
        }, [].slice.call(arguments));
      };
      f43.ᐃⲆⲆᐃᐃⵠⵠ = {};
      f43.remove = function (p349, p350) {
        f43(p349, "", e(p350, {
          expires: -1
        }));
      };
      f43.ᐃᐃΔΔᐃⵠⲆⲆᐃ = f42;
      return f43;
    }(function () {});
  });
  const vVV243 = vV24;
  function f44(p351, p352, p353, p354) {
    vVVUndefined194(vVVUndefined26, p351, p352, p353, p354);
    return ((63 + (f37(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[0], vVVVUndefined1973[1]) ^ f77(vVVVUndefined1973[2], vVVVUndefined1973[3]))) * 48271 + 0) % 2147483647;
  }
  var v379 = document.getElementById("game_canvas");
  const vVV2123 = vV212;
  var v380 = v379.getContext("2d");
  var v381 = v379.width;
  var v382 = v379.height;
  const v383 = 15;
  var v384 = v379.width / 2;
  const v385 = 1;
  var v386 = v379.height / 2;
  var v387 = {
    x: v384,
    y: v386
  };
  const v388 = 100;
  const v389 = 10;
  const v390 = 14;
  const v391 = 0;
  const v392 = 19;
  var v393 = 1;
  var v394 = 1;
  var v395 = -1;
  const v396 = 256;
  var v397 = "J" + v433;
  var v398 = "S" + v444;
  const v399 = 18;
  var vVWindow = vWindow;
  const v400 = 14;
  const v401 = 8;
  var v402;
  const v403 = 11;
  const vVVVVUndefined197 = vVVVUndefined197;
  const v404 = 13;
  const v405 = 255;
  const v406 = 14;
  var v407 = (v413 = "O") + "N";
  var v408;
  const v409 = 256;
  var vVVWindow = vVWindow;
  const v410 = 18;
  var v411;
  v398 = "N";
  var v412 = "J";
  var v413 = "O" + v433;
  const v414 = 3;
  const v415 = 20;
  const v416 = 14;
  var vVVVWindow = vVVWindow;
  const v417 = 4;
  const v418 = 10;
  var v419;
  const v420 = 20;
  const v421 = 15;
  const vVVV242 = vVV242;
  var vVVVVWindow = vVVVWindow;
  const v422 = 12;
  const vVVV212 = vVV212;
  v407 = "N" + undefined;
  const v423 = 19;
  const v424 = 100;
  var v425;
  var vVVVVVWindow = vVVVVWindow;
  const v426 = 16;
  const v427 = 11;
  var v428;
  var vVVVVVVWindow = vVVVVVWindow;
  const v429 = 255;
  const v430 = 13;
  function f45(p355) {
    if (p355 > 0) {
      return p355 * p355;
    } else {
      return p355;
    }
  }
  function f46(p356) {
    return vWindow.String.fromCharCode(p356);
  }
  const v431 = 17;
  var v432;
  var v433;
  var vVVVVVVVWindow = vVVVVVVWindow;
  const v434 = 2;
  var v435;
  var vVVVVVVVVWindow = vVVVVVVVWindow;
  const v436 = 10;
  v412 = "O";
  const vVUndefined27 = vUndefined;
  const v437 = 16;
  const v438 = 1;
  function f47(p357) {
    return vWindow.String.fromCharCode(p357);
  }
  (function () {
    const v439 = {
      ΔⵠⲆⵠᐃΔΔ: 9647897,
      ᐃᐃⲆⵠᐃΔⲆ: 6742169,
      ΔᐃΔΔᐃΔⲆ: 10170850,
      ᐃᐃⲆⵠⲆΔᐃ: 11965561
    };
  })();
  var v440;
  const vVVVUndefined1974 = vVVUndefined197;
  var v441 = vVVVVVVVVWindow = vVVVVVVVWindow;
  const v442 = 12;
  var v443;
  var vV441 = v441;
  const vVVV24 = vVV24;
  var v444 = "J" + (v440 = "S");
  v379.oncontextmenu = function () {
    return vVV2123;
  };
  v397 = "J";
  const v445 = 10;
  const v446 = 100;
  function f48(p358) {
    var v447 = new Image();
    v447.src = p358.toDataURL("image/png");
    v447.width = p358.width;
    v447.height = p358.height;
    v447.ᐃⵠᐃⲆⲆᐃⵠ = 1;
    return v447;
  }
  const v448 = 11;
  const v449 = 18;
  v413 = v407;
  const vVVV21 = vVV21;
  v411 = v402 = v408 = v444 + (v412 += v397 = v398);
  function f49(p359) {
    if (p359 > 0) {
      return p359 * p359;
    } else {
      return p359;
    }
  }
  function f50(p360) {
    return vWindow.String.fromCharCode(p360);
  }
  v407 = v433;
  const v450 = 0;
  const vV243 = v24;
  v433 = v444;
  const v451 = 17;
  const v452 = 20;
  v413 = v444;
  v419 = v425 = v444 + v412;
  const v453 = 4;
  v398 = v412 + v397;
  v428 = v402;
  v413 = v444 + v412;
  const v454 = 1;
  v432 = v408;
  v407 = v444 + v412;
  const v455 = 100;
  v435 = v411;
  v412 = v433 = v444;
  v440 = v408;
  v443 = v402;
  v397 = v413;
  const v456 = 20;
  var v457 = vWindow.devicePixelRatio || 1;
  const v458 = 19;
  const v459 = 255;
  var v460 = v380.ᐃΔᐃΔΔᐃⲆⵠⵠ || v380.ⲆⲆᐃΔᐃᐃᐃⲆⲆ || v380.ᐃⲆⵠᐃΔⲆⵠΔΔ || v380.ⲆⲆΔⵠⲆⵠΔⵠⵠ || v380.ᐃⲆΔᐃΔᐃᐃⲆΔ || 1;
  function f51() {
    if (vWindow.innerWidth != v379.width) {
      v379.width = vWindow.innerWidth;
      v381 = v379.width;
      v384 = v379.width / 2;
    }
    if (vWindow.innerHeight != v379.height) {
      v379.height = vWindow.innerHeight;
      v382 = v379.height;
      v386 = v379.height / 2;
    }
    v387 = {
      x: v384,
      y: v386
    };
    var v461 = v379.width;
    var v462 = v379.height;
    v394 = v395 === -1 ? v457 / v460 : v395;
    v379.width = v461 * v394;
    v379.height = v462 * v394;
    v379.style.width = v461 + "px";
    v379.style.height = v462 + "px";
    v380.scale(v394, v394);
    if (v2814) {
      v2814.ᐃⲆⲆ.ΔᐃⲆΔΔⲆΔ = v461;
      v2814.ᐃⲆⲆ.ΔⵠⵠⵠⵠΔΔ = v462;
    }
    if (v3029.ⵠⲆⵠᐃⲆ) {
      v3029.ᐃΔⵠ();
    } else if (v2812.ⵠⲆⵠᐃⲆ) {
      v2812.ᐃΔⵠ();
    } else if (v2993.ⵠⲆⵠᐃⲆ) {
      v2993.ᐃΔⵠ();
    } else if (v2815.ⵠⲆⵠᐃⲆ) {
      v2815.ᐃΔⵠ();
    }
  }
  const vVVV243 = vVV24;
  const vVVVV212 = vVVV212;
  const v463 = 18;
  const v464 = 20;
  var v465 = document.getElementById("game_body");
  v465.ondragstart = function () {
    return vVV21;
  };
  const v466 = 15;
  const v467 = 11;
  v465.ondrop = function () {
    return vV212;
  };
  v465.onresize = f51;
  const v468 = 15;
  (function () {
    var v469 = 0;
    for (var v470 = ["ms", "moz", "webkit", "o"], v471 = 0; v471 < v470.length && !vWindow.requestAnimationFrame; ++v471) {
      vWindow.requestAnimationFrame = vWindow[v470[v471] + "RequestAnimationFrame"];
      vWindow.cancelAnimationFrame = vWindow[v470[v471] + "CancelAnimationFrame"] || vWindow[v470[v471] + "CancelRequestAnimationFrame"];
    }
    if (!vWindow.requestAnimationFrame) {
      vWindow.requestAnimationFrame = function (p361, p362) {
        var v472 = new Date().getTime();
        var v473 = Math.max(0, 16 - (v472 - v469));
        var v474 = vWindow.setTimeout(function () {
          p361(v472 + v473);
        }, v473);
        v469 = v472 + v473;
        return v474;
      };
    }
    if (!vWindow.cancelAnimationFrame) {
      vWindow.cancelAnimationFrame = function (p363) {
        clearTimeout(p363);
      };
    }
  })();
  const v475 = 14;
  const vV244 = v24;
  function f52(p364, p365) {
    v75(vVVUndefined26, p364, p365);
    return ((42 + (function (p366, p367) {
      vVUndefined17(vVVUndefined26, p366, p367);
      const vF25 = function (p368, p369, p370) {
        v77(vVVUndefined26, p368, p369, p370);
        const vF26 = function (p371, p372, p373, p374, p375) {
          vVUndefined14(vVVUndefined26, p371, p372, p373, p374, p375);
          const vSa = f58(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]);
          const vF28 = function (p376, p377, p378, p379, p380) {
            vVVUndefined193(vVVUndefined26, p376, p377, p378, p379, p380);
            const vYa2 = f59(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]);
            f39(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2]);
            return vYa2 ^ 29790;
          }(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]);
          return (8 << ((vSa ^ vF28) >> 16 & 255)) + (24 << ((vSa ^ vF28) >> 8 & 255)) + (0 << ((vSa ^ vF28) >> 24 & 255)) + (16 << ((vSa ^ vF28) & 255));
        }(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[0], vVVVUndefined1973[1]);
        f38(vVVVUndefined1973[2], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2]);
        return vF26 ^ 45495;
      }(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0]);
      const vF38 = f38(vVVVUndefined1973[1], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0]);
      return (30583 + (vF25 ^ vF38)) % 65443;
    }(vVVVUndefined1973[0], vVVVUndefined1973[1]) ^ f82(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0]))) * 16807 + 0) % 2147483647;
  }
  const vF29 = function () {
    let v476 = 0;
    let v477 = 0;
    let v478 = 0;
    const v479 = ⲆΔΔ.ⲆⲆΔᐃ([115, 116, 97, 99, 107]);
    const v480 = ⲆΔΔ.ⲆⲆΔᐃ([67, 97, 110, 118, 97, 115, 82, 101, 110, 100, 101, 114, 105, 110, 103, 67, 111, 110, 116, 101, 120, 116, 50, 68]);
    const v481 = ⲆΔΔ.ⲆⲆΔᐃ([112, 114, 111, 116, 111, 116, 121, 112, 101]);
    const v482 = ⲆΔΔ.ⲆⲆΔᐃ([100, 114, 97, 119, 73, 109, 97, 103, 101]);
    ⲆΔΔ.ⲆⲆΔᐃ([103, 108, 111, 98, 97, 108, 65, 108, 112, 104, 97]);
    const v483 = ⲆΔΔ.ⲆⲆΔᐃ([117, 115, 101, 114, 115, 99, 114, 105, 112, 116]);
    const v484 = ⲆΔΔ.ⲆⲆΔᐃ([105, 110, 100, 101, 120, 79, 102]);
    const v485 = ⲆΔΔ.ⲆⲆΔᐃ([77, 97, 116, 104]);
    const v486 = ⲆΔΔ.ⲆⲆΔᐃ([103, 101, 116]);
    const v487 = ⲆΔΔ.ⲆⲆΔᐃ([79, 98, 106, 101, 99, 116]);
    const v488 = ⲆΔΔ.ⲆⲆΔᐃ([104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121]);
    ⲆΔΔ.ⲆⲆΔᐃ([99, 101, 105, 108]);
    const v489 = ⲆΔΔ.ⲆⲆΔᐃ([102, 108, 111, 111, 114]);
    const v490 = ⲆΔΔ.ⲆⲆΔᐃ([87, 101, 98, 83, 111, 99, 107, 101, 116]);
    const v491 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 110, 100]);
    const v492 = ⲆΔΔ.ⲆⲆΔᐃ([115, 105, 103, 110]);
    const v493 = ⲆΔΔ.ⲆⲆΔᐃ([103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114]);
    const v494 = ⲆΔΔ.ⲆⲆΔᐃ([102, 105, 108, 108, 82, 101, 99, 116]);
    const v495 = ⲆΔΔ.ⲆⲆΔᐃ([103, 117, 105, 102, 121]);
    const v496 = ⲆΔΔ.ⲆⲆΔᐃ([101, 118, 97, 108]);
    const v497 = ⲆΔΔ.ⲆⲆΔᐃ([111, 112, 116, 105, 111, 110, 115]);
    const v498 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 88, 114, 97, 121]);
    const v499 = ⲆΔΔ.ⲆⲆΔᐃ([10]);
    const v500 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 67, 111, 108, 111, 114, 101, 100, 83, 112, 105, 107, 101, 115]);
    const v501 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 83, 112, 105, 107, 101]);
    const v502 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 70, 101, 101, 100]);
    const v503 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 67, 114, 97, 102, 116]);
    const v504 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 82, 101, 99, 121, 99, 108, 101]);
    const v505 = ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 84, 111, 116, 101, 109]);
    ⲆΔΔ.ⲆⲆΔᐃ([115, 101, 116, 116, 105, 110, 103, 115, 46, 69, 120, 116, 114, 97, 99, 116, 111, 114, 73, 110, 102, 111]);
    const v506 = ⲆΔΔ.ⲆⲆΔᐃ([83, 97, 110, 100, 115, 116, 111, 114, 109, 73, 109, 97, 103, 101]);
    const v507 = ⲆΔΔ.ⲆⲆΔᐃ([116, 111, 83, 116, 114, 105, 110, 103]);
    const v508 = ⲆΔΔ.ⲆⲆΔᐃ([66, 108, 105, 122, 122, 97, 114, 100, 73, 109, 97, 103, 101]);
    const v509 = ⲆΔΔ.ⲆⲆΔᐃ([73, 68, 76, 69]);
    const v510 = ⲆΔΔ.ⲆⲆΔᐃ([67, 66, 79]);
    const v511 = ⲆΔΔ.ⲆⲆΔᐃ([76, 69, 69, 84, 95, 83, 67, 82, 73, 80, 84, 95, 69, 88, 84, 69, 82, 78, 65, 76]);
    const v512 = ⲆΔΔ.ⲆⲆΔᐃ([82, 101, 105, 100, 105, 116, 101, 83, 112, 105, 107, 101, 65, 108, 108, 121]);
    const v513 = ⲆΔΔ.ⲆⲆΔᐃ([109, 97, 115, 116, 101, 114]);
    const v514 = ⲆΔΔ.ⲆⲆΔᐃ([100, 111, 119, 110]);
    const v515 = ⲆΔΔ.ⲆⲆΔᐃ([109, 111, 100, 101]);
    const v516 = ⲆΔΔ.ⲆⲆΔᐃ([119, 97, 105, 116, 105, 110, 103]);
    const v517 = ⲆΔΔ.ⲆⲆΔᐃ([104, 101, 105, 103, 104, 116]);
    const v518 = ⲆΔΔ.ⲆⲆΔᐃ([119, 105, 100, 116, 104]);
    const v519 = ⲆΔΔ.ⲆⲆΔᐃ([116, 105, 109, 101, 111, 117, 116]);
    const v520 = ⲆΔΔ.ⲆⲆΔᐃ([111, 112, 97, 99, 105, 116, 121]);
    const v521 = ⲆΔΔ.ⲆⲆΔᐃ([91, 99, 108, 97, 115, 115, 42, 61, 34, 103, 117, 105, 102, 121, 34, 93]);
    const v522 = ⲆΔΔ.ⲆⲆΔᐃ([100, 111, 99, 117, 109, 101, 110, 116]);
    const v523 = ⲆΔΔ.ⲆⲆΔᐃ([113, 117, 101, 114, 121, 83, 101, 108, 101, 99, 116, 111, 114, 65, 108, 108]);
    function f53(p381, p382) {
      try {
        if (vWindow[v487][v481][v488](p381)) {
          const v524 = vWindow[v487][v493](vWindow[v487][v481], p381);
          if (v524 && v524[v486] !== undefined) {
            if (v524[v486][v507]()[v484](p382) !== -1) {
              return 1;
            }
          }
        }
      } catch (e) {}
      return 0;
    }
    function f54(p383) {
      try {
        if (vWindow[v487][v481][v488](p383)) {
          return 1;
        }
      } catch (e) {}
      return 0;
    }
    function f55(p384) {
      try {
        new p384();
      } catch (e) {
        if (e[v479][v484](v483) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    function f56(p385) {
      try {
        p385();
      } catch (e) {
        if (e[v479][v484](v483) !== -1) {
          return 1;
        } else {
          return 0;
        }
      }
      return 0;
    }
    function f57(p386) {
      try {
        vWindow[v496](p386);
        return 1;
      } catch (e) {
        return 0;
      }
    }
    return {
      ΔⲆΔᐃΔᐃᐃ: function () {
        if (v476 > 10000) {
          f25(v476);
          f468(v476);
          f75(v476);
        }
        v477++;
        if (v477 > 1000) {
          v477 = 0;
          v478 = f56(vWindow[v480][v481][v482]) || v478;
          v478 = f56(vWindow[v480][v481][v494]) || v478;
          v478 = f56(vWindow[v490][v481][v491]) || v478;
          v478 = function (p387) {
            if (p387 && p387[v507]) {
              if (p387[v507]()[v484](v499) !== -1) {
                return 1;
              }
            }
            return 0;
          }(f55) || v478;
          v478 = f55(vWindow[v490]) || v478;
          v478 = f53(v497, v513) || v478;
          v478 = f53(v509, v513) || v478;
          v478 = f53(v514, v513) || v478;
          v478 = f53(v515, v513) || v478;
          v478 = f53(v518, v513) || v478;
          v478 = f53(v517, v513) || v478;
          v478 = f53(v519, v513) || v478;
          v478 = f53(v520, v513) || v478;
          v478 = function (p388) {
            try {
              const v525 = vWindow[v522][v523](p388);
              if (v525.length > 0) {
                return 1;
              } else {
                return 0;
              }
            } catch (e) {
              return 0;
            }
            return 0;
          }(v521) || v478;
          v478 = f54(v497) + f54(v509) + f54(v514) + f54(v516) + f54(v519) + f54(v520) + f54(v515) >= 3 ? 1 : v478;
          v478 = f57(v511) || v478;
          v478 = f57(v510) || v478;
          v478 = f57(v512) || v478;
          v478 = f57(v498) || v478;
          v478 = f57(v500) || v478;
          v478 = f57(v501) || v478;
          v478 = f57(v502) || v478;
          v478 = f57(v503) || v478;
          v478 = f57(v504) || v478;
          v478 = f57(v505) || v478;
          v478 = f57(v505) || v478;
          v478 = f57(v506) || v478;
          v478 = f57(v508) || v478;
          if (vVVVVUndefined197 !== vWindow[v495]) {
            v478 = 1;
          }
        }
        if (v478 === 1) {
          v476++;
          if (v476 > 10000) {
            vWindow[v485][v489] = vWindow[v485][v492];
            if (vWindow[v485][v489](v2809) !== 1) {
              v2993.ΔΔᐃΔⲆⲆⲆ();
            }
          }
        }
      },
      ⲆⲆᐃΔᐃΔΔ: function () {
        return v478;
      }
    };
  }();
  function f58(p389, p390, p391, p392, p393) {
    v56(vVVUndefined26, p389, p390, p391, p392, p393);
    const vF373 = f37(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4], vVVVUndefined1973[0]);
    (function (p394, p395) {
      vVVUndefined196(vVVUndefined26, p394, p395);
      const vYa3 = f59(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[0]);
      const vUg = f82(vVVVUndefined1973[1], vVVVUndefined1973[0], vVVVUndefined1973[1]);
    })(vVVVUndefined1973[1], vVVVUndefined1973[2]);
    return ~(vF373 & 20946) & 20946 | ~(vF373 & 20946) & vF373;
  }
  var v526 = navigator.language || navigator.userLanguage;
  var v527 = -new Date().getTimezoneOffset() / 60;
  const v528 = 10;
  var v529 = "Europe";
  const v530 = 18;
  const vVVV213 = vVV213;
  const v531 = 16;
  const v532 = 13;
  var v533 = "South America";
  const vVVUndefined27 = vVUndefined27;
  var vV529 = v529;
  const vVVVV21 = vVVV21;
  if (v527 >= -2 && v527 <= 2) {
    vV529 = v529;
  } else if (v527 > 2 && v527 <= 5) {
    vV529 = "Russia";
  } else if (v527 > 5 && v527 <= 9) {
    vV529 = "Asia";
  } else if (v527 > 9) {
    vV529 = "Australia";
  } else if (v527 >= -5 && v527 < -2) {
    vV529 = v526 === "pt-BR" || v526 === "pt-br" || v526 === "pt" || v526 === "pt-pt" ? v533 : "North America";
  } else if (v527 < -5) {
    vV529 = v526 === "pt-BR" || v526 === "pt-br" || v526 === "pt" || v526 === "pt-pt" ? v533 : "West America";
  }
  const v534 = 19;
  var v535 = {
    ΔΔΔᐃⵠⵠⵠ: function (p396) {
      var v536 = 2147483648;
      var v537 = p396 || Math.floor((v536 - 1) * Math.random());
      this.ⵠΔⵠⲆⲆ = function (p397) {
        v537 = p397 || Math.floor((v536 - 1) * Math.random());
      };
      this.get = function () {
        return (v537 = (v537 * 1103515245 + 12345) % v536) / v536;
      };
    }
  };
  function f59(p398, p399, p400, p401, p402) {
    v74(vVVUndefined26, p398, p399, p400, p401, p402);
    const vUh2 = f74(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4]);
    f44(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3]);
    return ~(vUh2 & 54708) & (vUh2 | 54708);
  }
  function f60(p403, p404, p405, p406, p407) {
    const v538 = (16 << (p403 >> 16 & 255)) + (0 << (p403 >> 24 & 255)) + (8 << (p403 & 255)) + (24 << (p403 >> 8 & 255));
    const v539 = (8 << (p404 >> 8 & 255)) + (24 << (p404 >> 24 & 255)) + (0 << (p404 >> 16 & 255)) + (16 << (p404 & 255));
    const v540 = (12345 + (49879 + p405) * 1103515245) % 2147483648;
    const v541 = ~(p406 & 13940) & (p406 | 13940);
    const v542 = ((2973 + p407) * 22695477 + 1) % 4294967296;
    const vF40 = f40(v538, v539, v540, v541, v542);
    f9(v538, v539, v540, v541, v542);
    return ~(vF40 & 4736) & (vF40 | 4736);
  }
  var v543 = [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]];
  const v544 = 12;
  const v545 = 2;
  function f61(p408, p409, p410, p411, p412) {
    const v546 = (1013904223 + (15472 + p408) * 1664525) % 4294967296;
    const v547 = ~(p409 & 9394) & p409 | ~(p409 & 9394) & 9394;
    const v548 = (2147483587 + (p411 + 40178) * 2147483629) % 2147483647;
    const v549 = p412 ^ 35299;
    return (2209 + (function (p413, p414, p415) {
      const v550 = ~(p413 & 55390) & p413 | ~(p413 & 55390) & 55390;
      const v551 = ((p414 + 64463) * 1103515245 + 12345) % 2147483648;
      const v552 = ((p415 + 18242) * 1664525 + 1013904223) % 4294967296;
      const vFp = f479(v550, v551, v552, v550);
      const vGg = f81(v551, v552, v550);
      return (25469 + (vFp ^ vGg)) % 65321;
    }(v546, v547, (1013904223 + (17616 + p410) * 1664525) % 4294967296) ^ f423(v548, v549, v546, v547))) % 65446;
  }
  var v553 = 0;
  let v554 = {
    ΔΔⵠΔⲆ: ["#133A2B", "#042b30"],
    ⵠⵠᐃⲆΔᐃᐃⵠⲆ: ["#EBF2F0", "#136167"],
    ᐃⲆΔᐃⵠΔⵠ: ["#4EB687", "#187484"],
    ΔⵠⵠⲆᐃΔⲆ: ["#664516", "#13474C"],
    ΔⵠᐃⵠⲆΔⵠ: ["#FCEFBB", "#0F4D48"],
    ⵠᐃᐃΔᐃⵠⵠ: ["#C1AA7E", "#0F423D"],
    ⲆΔᐃᐃⵠⵠᐃ: ["#594837", "#163A3A"],
    ᐃⵠᐃΔⲆᐃⲆ: ["#A5D6D6", "#539CA0"],
    ⲆᐃΔΔΔ: ["#0B6A84", "#09373F"],
    ΔᐃᐃⲆᐃᐃⵠ: ["#2A8B9B", "#0F464C"],
    ΔᐃⵠⵠΔⲆⲆ: ["#A9D6D3", "#115E60"],
    ⵠⲆᐃΔᐃⵠⵠ: ["#ECF7F9", "#539CA0"],
    ⵠⵠΔΔΔⲆⲆ: ["#FFF", "#FFF"],
    ⲆⲆⲆᐃᐃΔΔ: ["#FFF", "#FFF"],
    ΔᐃⵠΔⵠΔⲆ: ["#1C9BA4", "#00272F"],
    ⵠⲆΔⵠⵠ: ["#2D2017", "#031C1E"],
    ᐃⵠⵠ: 0,
    ΔⲆᐃ: 1,
    ΔⵠᐃⵠᐃⲆΔⵠᐃ: 2300,
    ⲆⲆᐃΔⵠᐃᐃⲆⵠ: 2290,
    ᐃΔⵠᐃⲆⵠⵠ: 34,
    ᐃᐃΔΔᐃⵠⵠ: 5,
    ⵠⲆⲆΔᐃΔΔ: 68,
    ΔᐃΔⵠᐃⲆΔ: 34,
    ⲆⵠΔᐃⵠΔⲆ: 5,
    ⲆΔⵠΔΔΔⵠ: 1,
    ⲆⵠⲆⲆⲆΔΔ: 0.6,
    ⵠΔⵠⲆΔⵠⵠ: 0.25,
    ⲆⵠⲆΔᐃΔΔ: 50,
    ⲆⵠᐃΔᐃᐃⵠ: 10,
    ᐃᐃΔⲆΔⲆΔ: 75,
    ᐃⵠⵠⲆᐃⲆⲆ: 20,
    ᐃᐃΔΔⵠⵠⵠ: 5,
    ⵠᐃᐃᐃⲆ: 0,
    ⲆᐃᐃⲆᐃ: 1,
    ᐃⵠᐃⲆⲆ: 2,
    ⵠᐃΔⵠΔ: 3,
    ΔⲆΔΔⲆ: 4,
    ᐃΔⵠΔᐃ: 5,
    ΔΔⲆᐃᐃ: 6,
    ᐃᐃΔᐃⵠ: 7,
    ᐃᐃᐃᐃⲆ: 8,
    ⵠⲆᐃΔΔ: 9,
    ΔⲆᐃⲆΔ: 10,
    ⲆⲆΔᐃⲆ: 11,
    ᐃⲆⵠΔⲆ: 12,
    ⲆⵠΔᐃⵠ: 13,
    ⲆΔⲆΔΔ: 14,
    ᐃᐃⵠⵠᐃ: 15,
    ⲆΔⲆⵠⲆ: 16,
    ⲆⲆΔⵠΔ: 17,
    ⲆⲆⵠⵠⵠ: 18,
    ⵠⵠⲆΔᐃ: 19,
    ⵠⲆᐃⲆΔ: 20,
    ⵠᐃᐃΔⲆ: 21,
    ᐃᐃᐃⵠⵠ: 22,
    ΔⵠⲆⵠᐃ: 23,
    ΔⲆΔⵠΔ: 24,
    ΔᐃΔⲆⵠ: 25,
    ⲆΔⵠᐃΔ: 26,
    ᐃⲆⵠΔΔ: 27,
    ᐃᐃΔⲆⵠ: 28,
    ⲆⵠⲆⲆ: 29,
    ΔⲆⲆᐃᐃ: 30,
    ᐃᐃΔᐃᐃ: 31,
    ⲆⵠᐃΔⲆ: 32,
    ΔᐃΔⵠΔ: 33,
    ⵠⲆΔᐃⵠ: 34,
    ⲆᐃⵠᐃⲆ: 35,
    ⵠⲆᐃⵠⲆ: 36,
    ΔΔᐃᐃΔ: 37,
    ᐃⲆΔⲆⲆ: 38,
    ᐃⲆᐃᐃᐃ: 39,
    ⵠᐃⵠⲆΔ: 40,
    ΔⲆⵠⵠᐃ: 41,
    ᐃΔⵠᐃᐃ: 42,
    ⵠΔΔⲆⲆ: 43,
    ⵠⲆΔΔΔ: 44,
    ⵠᐃⵠⵠⲆ: 45,
    ⲆⵠⲆΔᐃ: 46,
    ⲆⲆᐃⵠΔ: 47,
    ΔⵠⲆΔⵠ: 48,
    ᐃⵠⵠΔΔ: 49,
    ᐃΔⵠΔΔ: 50,
    ⲆΔⲆⵠΔ: 51,
    ΔⲆΔᐃⲆ: 52,
    ᐃᐃⲆᐃΔ: 53,
    ΔΔⲆᐃⲆ: 54,
    ⲆᐃⲆⵠΔ: 55,
    ᐃⲆⲆⲆⵠ: 56,
    ᐃⵠᐃᐃᐃ: 57,
    ΔⲆΔᐃᐃ: 58,
    ⲆᐃⲆⲆΔ: 59,
    ᐃⲆΔΔⵠ: 60,
    ⲆⲆⵠⲆⵠ: 61,
    ᐃΔᐃⲆΔ: 62,
    ⵠᐃᐃⵠⲆ: 63,
    ⲆᐃⵠⲆΔ: 64,
    ⲆΔΔⵠΔ: 65,
    ΔᐃⲆⲆⲆ: 66,
    ᐃⲆΔⲆᐃ: 67,
    ΔΔΔΔⵠ: 68,
    ⲆΔᐃᐃⵠ: 69,
    ⲆⲆᐃⲆⵠ: 70,
    ⵠⵠΔΔᐃ: 71,
    ⲆᐃⲆⵠⵠ: 72,
    ΔΔⵠᐃⵠ: 73,
    ⲆᐃⵠΔⲆ: 74,
    ᐃΔᐃᐃⲆ: 75,
    ⵠᐃᐃⵠⵠ: 76,
    ᐃⲆⲆⵠⵠ: 77,
    ᐃⵠᐃᐃⲆ: 78,
    ᐃⲆᐃᐃⲆ: 79,
    ⲆⵠⲆⲆⲆ: 80,
    ⵠⵠⵠᐃΔ: 81,
    ΔᐃᐃΔⵠ: 82,
    ᐃⲆΔⲆΔ: 83,
    ᐃⲆᐃⵠⵠ: 84,
    ᐃᐃⲆΔⲆ: 85,
    ⲆᐃΔΔⵠ: 86,
    ⵠⵠⲆΔΔ: 87,
    ⲆᐃⲆⲆⲆ: 88,
    ⲆΔⲆⵠⵠ: 89,
    ΔⲆΔⲆⵠ: 90,
    ⵠΔⵠΔΔ: 91,
    ⵠⵠⵠΔⵠ: 92,
    ⵠΔᐃΔΔ: 93,
    ⵠᐃⵠᐃΔ: 94,
    ΔΔⵠⵠᐃ: 95,
    ⲆᐃᐃΔΔ: 96,
    ΔⵠΔᐃΔ: 97,
    ᐃⲆⵠⵠΔ: 98,
    ᐃΔᐃⵠⲆ: 99,
    ΔΔᐃⲆⵠΔⵠΔΔ: 100,
    ᐃⲆⵠᐃⵠ: 101,
    ᐃᐃⲆΔᐃ: 102,
    ⵠΔⲆⲆᐃ: 103,
    ⵠⵠⲆⵠΔ: 104,
    ⲆᐃⲆⲆᐃ: 105,
    ΔΔⲆⲆⲆ: 106,
    ⵠΔⲆΔⵠ: 107,
    ⵠΔⲆᐃᐃ: 108,
    Ⲇⵠᐃⵠ: 109,
    ΔⲆᐃᐃΔ: 110,
    ᐃⵠᐃᐃ: 111,
    ⲆᐃⵠΔ: 112,
    ⲆⵠΔⲆⵠⵠⵠ: 113,
    ΔΔΔⲆΔ: 114,
    ΔᐃᐃΔΔᐃᐃ: 115,
    ᐃⲆΔΔᐃ: 116,
    ΔΔⵠΔᐃ: 117,
    ᐃⵠΔᐃΔⲆΔ: 118,
    ⲆⲆᐃᐃᐃᐃᐃ: 119,
    ⲆⵠⵠΔᐃ: 120,
    ⲆⲆⲆⵠ: 121,
    ⲆΔΔᐃⲆ: 122,
    ᐃᐃΔΔⲆ: 123,
    ⵠⲆⲆΔⲆⵠᐃ: 124,
    ⲆᐃⲆᐃᐃ: 125,
    ⵠⲆᐃⵠⵠ: 126,
    ⵠΔᐃⵠΔ: 127,
    ⲆⵠᐃⵠⲆ: 128,
    ⵠⲆⲆⵠⵠ: 129,
    ᐃΔΔⲆᐃ: 130,
    ⵠᐃΔΔᐃ: 131,
    ᐃⲆⲆΔⵠ: 132,
    ⲆΔΔΔⵠ: 133,
    ΔᐃⵠΔΔ: 134,
    ⲆΔⵠⵠΔ: 135,
    ᐃΔⵠⵠⲆ: 136,
    ⲆᐃΔⵠⵠ: 137,
    ᐃΔΔΔΔ: 138,
    ΔΔᐃΔΔ: 139,
    ⲆⵠΔᐃⵠᐃⲆ: 140,
    ᐃⲆⵠΔⵠ: 141,
    ⲆⵠⵠⵠⲆΔⵠ: 142,
    ᐃⲆΔⲆⵠⵠᐃ: 143,
    ⵠⵠΔᐃᐃᐃΔ: 144,
    ΔᐃΔᐃᐃᐃΔ: 145,
    ⲆⲆΔΔⲆ: 146,
    ᐃⲆⲆΔΔ: 147,
    ⵠⵠⵠⲆᐃ: 148,
    ⲆⲆΔΔΔ: 149,
    ΔΔᐃᐃⵠ: 150,
    ⲆⲆⲆΔⲆ: 151,
    ⵠⵠΔⲆⲆ: 152,
    ΔⲆⵠΔᐃ: 153,
    ⵠⲆΔΔⲆ: 154,
    ⲆⲆΔⲆⲆ: 155,
    ᐃⲆⵠⲆᐃ: 156,
    ᐃᐃⲆⵠⵠ: 157,
    ⵠΔⵠΔⲆ: 158,
    ΔΔⵠⵠΔ: 159,
    ⵠⲆⵠᐃⵠ: 160,
    ⲆⵠΔⲆΔ: 161,
    ᐃΔⲆⵠᐃ: 162,
    ΔⵠᐃⵠⲆ: 163,
    ᐃⵠⵠⲆⲆ: 164,
    ΔⵠΔΔⵠ: 165,
    ⵠⵠⵠΔⲆⲆᐃ: 166,
    ᐃⵠⲆⵠΔ: 167,
    ⵠΔΔⵠΔ: 168,
    ⵠⵠⲆⲆⵠ: 169,
    ᐃΔΔⵠᐃ: 170,
    ⲆⵠΔᐃⵠⵠⲆ: 171,
    ⵠⲆⵠⲆᐃᐃᐃ: 172,
    ᐃᐃΔⵠⲆᐃⲆ: 173,
    ⵠⵠⲆᐃΔ: 174,
    ⵠⵠΔⲆⵠΔΔ: 175,
    ⲆΔⲆⲆⲆΔᐃ: 176,
    ⵠⵠⲆΔⲆⵠΔ: 177,
    ⲆⲆⵠⵠⵠΔΔ: 178,
    ⲆⵠⵠᐃᐃⵠΔ: 179,
    ⲆⲆΔⲆΔⲆΔ: 180,
    ΔΔⲆΔΔΔⵠ: 181,
    ⵠΔⲆΔⲆⵠΔ: 182,
    ΔΔᐃⲆⲆ: 183,
    ΔΔΔΔⲆ: 184,
    ᐃⵠⵠⵠⲆ: 185,
    ⵠⲆᐃᐃⵠ: 186,
    ⵠⵠΔⵠⲆ: 187,
    ᐃⲆᐃΔΔΔΔ: 188,
    ⲆΔⵠᐃᐃ: 189,
    ⲆⲆⵠᐃΔ: 190,
    ⵠⵠⵠⲆⲆΔΔ: 191,
    ⵠⵠᐃⵠΔ: 192,
    ᐃⵠⵠⵠΔᐃⵠ: 193,
    ⵠΔⵠᐃᐃ: 194,
    ΔᐃⵠⲆⲆ: 195,
    ΔΔⵠⲆΔⲆⵠ: 196,
    ΔᐃⲆΔⲆΔⲆ: 197,
    ΔⵠΔⲆⵠ: 198,
    ΔⵠⵠⲆⲆ: 199,
    ΔΔⵠᐃᐃΔΔ: 200,
    ⲆⵠⵠⲆⵠ: 201,
    ⲆⵠᐃⲆ: 202,
    ᐃⵠΔⲆⵠ: 203,
    ⵠΔΔΔᐃⲆⵠ: 204,
    ⵠⵠᐃⲆΔ: 205,
    ⲆᐃⲆᐃᐃᐃⲆ: 206,
    ⲆⵠᐃⲆᐃ: 207,
    ⵠᐃⵠⵠΔⵠⵠ: 208,
    ⲆⲆᐃⵠⵠ: 209,
    ⵠᐃᐃΔΔⲆᐃ: 210,
    ⲆⵠⲆΔΔⲆᐃ: 211,
    ΔΔⵠⲆᐃ: 212,
    ᐃΔⵠᐃⵠ: 213,
    ΔᐃΔⲆⲆ: 214,
    ⵠⵠⲆᐃⵠ: 215,
    ΔⲆⵠⲆΔ: 216,
    ⵠᐃⵠⲆᐃ: 217,
    ᐃΔᐃⵠᐃ: 218,
    ᐃⵠΔΔΔ: 219,
    ᐃΔⲆᐃΔ: 220,
    ⲆΔⲆᐃⲆ: 221,
    ⲆⵠⲆᐃᐃ: 222,
    ⵠⵠᐃᐃᐃ: 223,
    ᐃᐃⲆⲆⵠ: 224,
    ⵠⵠⵠᐃΔΔⲆ: 225,
    ᐃⲆᐃΔΔⲆΔ: 226,
    ΔΔⵠⲆⵠ: 227,
    ΔᐃᐃᐃⵠⵠΔ: 228,
    ΔⵠΔᐃⵠ: 229,
    ᐃΔᐃᐃᐃ: 230,
    ΔΔᐃᐃᐃ: 231,
    ᐃⵠⲆⵠⲆ: 232,
    ⲆΔΔⲆⲆ: 233,
    ⲆⵠⵠⲆᐃΔⲆ: 234,
    ᐃᐃΔⲆⲆ: 235,
    ⵠⲆⲆⲆΔ: 236,
    ᐃᐃΔⲆᐃ: 237,
    ⵠⵠᐃⵠⵠ: 238,
    ⵠΔⲆⵠᐃ: 239,
    ᐃΔⲆΔⲆ: 240,
    ⲆᐃⲆΔⵠ: 241,
    ⲆⲆΔⲆΔ: 242,
    ⵠⵠⵠΔᐃⲆⵠ: 243,
    ᐃⲆⵠᐃᐃ: 244,
    ⲆⲆⵠⲆⲆ: 245,
    ⲆᐃᐃⵠΔⵠΔ: 246,
    ΔΔΔΔΔ: 247,
    ⲆⲆⵠⵠⲆ: 248,
    ⵠᐃⲆⲆᐃᐃⲆ: 249,
    ΔᐃⵠΔⲆ: 250,
    ⵠΔⵠᐃⵠ: 251,
    ΔⵠⵠᐃⵠⲆΔ: 252,
    ᐃⵠⲆⲆⵠⲆⵠ: 253,
    ᐃⲆΔΔΔΔΔ: 254,
    ᐃⲆΔᐃⵠ: 255,
    ΔⵠΔⲆΔⲆⵠ: 256,
    ΔΔᐃᐃΔⲆⵠ: 257,
    ΔᐃⵠᐃⵠΔᐃ: 258,
    ⲆΔⲆⵠⵠᐃⵠ: 259,
    ΔᐃⲆᐃΔ: 260,
    ⲆⲆᐃΔΔΔⵠ: 261,
    ⵠΔⵠⲆⲆⲆᐃ: 262,
    ΔΔΔᐃΔⲆⵠ: 263,
    ⵠᐃΔΔⲆ: 264,
    ᐃᐃᐃᐃⲆⵠⲆ: 265,
    ᐃⲆΔΔΔΔᐃ: 266,
    ⲆΔⲆⵠΔᐃⲆ: 267,
    ⵠⵠⲆⲆⵠⵠⵠ: 268,
    ᐃᐃΔΔⲆΔᐃ: 269,
    ⲆⵠᐃⵠΔⵠⵠ: 270,
    ᐃⵠᐃΔΔⵠⲆ: 271,
    ᐃΔⲆΔΔⵠΔ: 272,
    Ⲇⵠⵠⵠⵠⵠⵠ: 273,
    ⵠᐃΔΔⲆΔᐃ: 274,
    ⲆⵠΔᐃᐃᐃᐃ: 275,
    ᐃΔⲆⵠⲆΔᐃ: 276,
    ⲆᐃⲆⲆΔΔⲆ: 277,
    ⵠΔΔᐃᐃΔⵠ: 278,
    ⲆΔΔⲆ: 279,
    ΔⵠΔⵠᐃ: 280,
    ⲆⲆⵠⵠⲆⵠⵠ: 281,
    ⵠⵠΔᐃⵠᐃΔ: 282,
    ΔΔ: 283,
    ⵠᐃⵠⵠᐃΔⵠ: 284,
    ⲆΔΔΔⲆ: 285,
    ᐃⵠⵠΔᐃ: 286,
    ᐃΔᐃⲆⲆΔᐃ: 287,
    ΔᐃΔⲆΔ: 288,
    ⲆⲆᐃΔⵠᐃᐃ: 289,
    ⲆⲆⲆᐃⵠΔᐃ: 290,
    ⵠΔⵠᐃⵠⵠΔ: 291,
    ᐃⲆᐃⲆΔⵠⲆ: 292,
    ΔΔΔⵠⲆᐃΔ: 293,
    ΔᐃⲆΔΔ: 294,
    ⲆΔΔᐃᐃᐃⲆ: 295,
    ΔⲆΔᐃΔⲆⵠ: 296,
    ᐃⲆΔΔⵠᐃⵠ: 297,
    ⵠᐃⲆᐃⵠᐃⵠ: 298,
    ⲆᐃΔᐃᐃ: 299,
    ΔⵠᐃΔᐃⲆᐃ: 300,
    ᐃᐃᐃⲆⵠΔᐃ: 301,
    ⵠⲆⲆΔⲆⲆⵠ: 302,
    ΔᐃᐃⵠⲆᐃⲆ: 303,
    ᐃⵠΔⲆⵠᐃⲆ: 304,
    ⵠⵠⲆᐃⲆᐃΔ: 305,
    ᐃⵠΔⲆᐃⵠⲆ: 306,
    ΔⲆⵠΔⵠ: 307,
    ΔⲆⵠᐃᐃΔᐃ: 308,
    ⲆⵠᐃⲆΔᐃⲆ: 309,
    ⲆⲆᐃᐃⵠᐃⵠ: 310,
    ᐃᐃΔⲆΔΔΔ: 311,
    ⵠⵠⵠᐃᐃⵠΔ: 312,
    ⵠⲆᐃⲆΔΔᐃ: 313,
    ⲆⵠΔⲆᐃⲆᐃ: 314,
    ⲆᐃⵠⲆΔᐃⵠ: 315,
    ⵠⲆΔⲆⲆⲆⲆ: 316,
    ΔΔⵠⵠᐃᐃⵠ: 317,
    ᐃⲆᐃΔΔᐃᐃ: 318,
    ⵠⵠΔΔΔΔᐃ: 319,
    ᐃⵠⲆⲆᐃΔⲆ: 320,
    ΔⵠⵠΔⲆ: 321,
    ΔⵠΔⵠΔΔⵠ: 322,
    ⲆΔⲆᐃⵠⵠⲆ: 323,
    ⵠⲆᐃᐃⵠⵠᐃ: 324,
    ⵠᐃⲆⲆᐃⵠΔ: 325,
    ᐃΔᐃⲆΔΔᐃ: 326,
    ᐃⲆⲆΔⵠⵠᐃ: 327,
    ΔⲆΔᐃᐃⲆⵠ: 328,
    ᐃᐃⲆⵠⵠⵠⵠ: 329,
    ᐃΔᐃⵠⵠᐃΔ: 330,
    ᐃΔⲆⲆᐃᐃΔ: 331,
    ⵠⲆᐃⵠⲆⲆⵠ: 332,
    ⲆᐃⵠΔΔⵠΔ: 333,
    ⵠⵠΔⲆⲆⵠΔ: 334,
    ᐃⵠᐃᐃΔΔᐃ: 335,
    ᐃⵠΔΔΔΔΔ: 336,
    ⵠΔΔⵠᐃᐃⵠ: 337,
    ΔΔⵠᐃᐃⵠⲆ: 338,
    ᐃᐃⲆᐃᐃⲆⲆ: 339,
    ⵠᐃⲆΔⲆΔⲆ: 340,
    ⲆΔⲆⲆⲆᐃⵠ: 341,
    ΔⵠⵠⵠΔⵠⵠ: 342,
    ᐃⵠⵠⵠΔⵠⵠ: 343,
    ΔⲆⲆᐃⲆⵠⲆ: 344,
    ⵠⲆⲆᐃΔⵠΔ: 345,
    ⵠΔΔⵠΔⵠⵠ: 346,
    ΔⵠⵠⲆⵠⲆⵠΔⵠ: 347,
    ΔⲆⲆⵠᐃⵠⵠ: 348,
    ⲆΔᐃⲆⵠΔᐃ: 349,
    ᐃⲆᐃᐃⲆⲆⲆ: 350,
    ⲆΔΔⵠⵠΔⵠ: 351,
    ᐃᐃΔⵠᐃᐃΔ: 352,
    ⲆⲆⵠⲆΔᐃⲆ: 353,
    ⵠⲆⵠⲆΔⵠᐃ: 354,
    ᐃᐃⲆⵠᐃΔΔ: 355,
    ᐃⵠⵠⲆⵠΔⲆ: 356,
    ΔⲆⵠⲆⲆᐃⲆ: 357,
    ⵠᐃⵠΔⲆᐃⲆ: 358,
    ΔΔᐃⲆⵠⵠᐃ: 359,
    ᐃᐃⵠΔⲆⵠⲆ: 360,
    ᐃᐃⵠⲆⲆⲆΔ: 361,
    ᐃⲆⵠⲆⵠⵠᐃ: 362,
    ⵠΔᐃⵠᐃⲆⵠ: 363,
    ⵠⲆⲆΔΔⵠΔ: 364,
    Δᐃᐃⵠᐃᐃⵠ: 365,
    ΔΔΔⵠⵠⵠΔ: 366,
    ⵠⵠⵠΔΔⲆΔ: 367,
    ⲆΔᐃΔⲆⲆᐃ: 368,
    ⵠΔⲆⲆΔΔⵠ: 369,
    ⲆⵠⲆⵠⵠᐃΔ: 370,
    ⵠⵠΔᐃⲆᐃⵠ: 371,
    ⲆⲆⲆⲆⲆᐃⵠ: 372,
    ΔᐃᐃⵠⲆⲆΔ: 373,
    ΔᐃᐃᐃⵠΔⲆ: 374,
    ⵠⵠⵠᐃⲆΔᐃ: 375,
    ᐃⲆⲆⵠᐃⲆⲆ: 376,
    ⵠΔΔΔΔⵠᐃ: 377,
    ΔΔΔⲆΔᐃⵠ: 378,
    ⲆⵠᐃΔⵠᐃⵠ: 379,
    ⵠᐃΔᐃᐃᐃⵠ: 380,
    ⵠⲆⲆⵠⲆᐃⵠ: 381,
    ΔΔᐃΔⲆⵠⵠ: 382,
    ᐃᐃⵠΔᐃⵠΔ: 383,
    ⲆᐃᐃⲆⵠⲆΔ: 384,
    ⵠᐃΔΔΔΔⲆ: 385,
    ⵠᐃΔΔⵠⲆⲆ: 386,
    ΔΔΔⵠⲆⲆᐃ: 387,
    ⲆΔᐃΔᐃΔΔ: 388,
    ᐃᐃᐃᐃΔⲆⵠ: 389,
    ⲆⵠᐃⲆΔⵠΔ: 390,
    ΔΔᐃⵠᐃⵠΔ: 391,
    ⲆⵠⲆΔᐃΔⵠ: 392,
    ⲆⲆΔᐃⵠⵠⵠ: 393,
    ⲆᐃᐃⲆᐃᐃΔ: 394,
    ⵠΔΔⵠⵠⲆⵠ: 395,
    ⵠⵠⵠΔⲆⲆΔ: 396,
    ⲆᐃⲆᐃⲆᐃᐃ: 397,
    ⵠᐃⲆᐃⲆⲆⵠ: 398,
    ᐃᐃΔⲆⲆⲆⲆ: 399,
    ⲆᐃⵠΔⲆⲆⲆ: 400,
    ⲆᐃΔⲆΔⵠᐃ: 401,
    ⵠⲆᐃⲆᐃⵠⵠ: 402,
    ⲆΔⵠⵠᐃᐃΔ: 403,
    ᐃⲆⵠᐃᐃⲆΔ: 404,
    ⵠⲆⲆⲆᐃⵠⵠ: 405,
    ᐃⵠΔⲆⵠΔⵠ: 406,
    ⵠΔΔᐃΔⲆⲆ: 407,
    ΔᐃᐃⵠᐃΔΔ: 408,
    ⵠΔⵠΔⲆⲆᐃ: 409,
    ⵠⲆᐃᐃΔᐃⵠ: 410,
    ⲆⲆΔΔᐃⲆᐃ: 411,
    ⵠⵠΔᐃᐃΔⵠ: 412,
    ᐃᐃᐃᐃⵠ: 413,
    ⵠⵠⲆΔᐃᐃⲆⵠΔ: 414,
    ⲆᐃΔⵠΔ: 415,
    ΔⲆᐃΔⲆ: 416,
    ΔⲆᐃⵠⵠⲆΔᐃΔ: 417,
    ᐃΔΔⵠΔΔᐃ: 418,
    ᐃⵠⲆΔⵠ: 419,
    ⲆⵠΔⵠΔᐃΔ: 420,
    ᐃⲆⵠᐃⲆΔⵠ: 421,
    ΔᐃᐃΔⲆⲆⲆ: 422,
    ⲆᐃⵠΔⵠⲆⵠ: 423,
    ΔΔⵠⲆΔⲆᐃ: 424,
    ⵠⲆⲆⵠᐃⵠⲆ: 425,
    ΔΔⵠⲆΔⵠⲆ: 426,
    ΔΔΔⲆⲆΔΔ: 427,
    ᐃΔⲆᐃⲆⵠΔ: 428,
    ⵠⲆⲆⵠⲆⲆⲆ: 429,
    ⲆΔⲆⲆⵠᐃᐃ: 430,
    ᐃⲆΔⵠⲆⵠⲆ: 431,
    ⵠᐃΔⲆⲆⲆⲆ: 432,
    ΔᐃⵠΔᐃⵠᐃ: 433,
    ᐃⲆᐃⵠⵠᐃΔ: 434,
    ⲆⵠᐃᐃⲆΔΔ: 435,
    ⲆΔΔⲆᐃΔΔ: 436,
    ΔΔᐃΔⲆⲆⵠ: 437,
    ⲆⲆᐃᐃⵠⲆⲆ: 438,
    ⲆⲆΔⵠᐃⵠᐃ: 439,
    ΔⵠΔΔⵠᐃΔ: 440,
    ᐃΔⲆⲆⵠⲆΔ: 441,
    ⵠᐃⵠᐃΔΔⲆ: 442,
    ⵠⵠⲆΔᐃᐃᐃ: 443,
    ᐃΔΔΔΔΔᐃⵠⵠ: 444,
    ᐃⵠⵠᐃᐃ: 445,
    ᐃΔᐃΔⲆΔⲆ: 446,
    ᐃⵠᐃⲆᐃΔⲆ: 447,
    ᐃᐃᐃᐃⵠⲆΔΔⲆ: 448,
    ⵠΔᐃⲆΔ: 449,
    ΔΔᐃⲆᐃ: 450,
    ⲆΔΔⵠΔⵠⵠ: 451,
    ᐃⵠⵠⲆⲆⲆᐃ: 452,
    ᐃⲆᐃⵠⲆⲆⵠ: 453,
    ⵠᐃⲆⵠᐃΔᐃ: 454,
    ΔΔⲆⲆⲆᐃⲆ: 455,
    ΔⵠᐃⵠᐃⲆⵠ: 456,
    ᐃⲆΔⲆᐃⵠᐃ: 457,
    ⵠᐃᐃⵠᐃΔᐃ: 458,
    ΔᐃⲆᐃᐃᐃΔ: 459,
    ⲆⲆΔⲆΔᐃᐃ: 460,
    ⵠⲆΔᐃⲆᐃᐃ: 461,
    ⲆᐃⵠⲆⵠᐃⵠ: 462,
    ⲆⲆᐃⲆΔΔⵠ: 463,
    ⵠⲆᐃⲆⲆΔᐃ: 464,
    ᐃⵠⲆΔᐃⵠⵠ: 465,
    ⲆᐃᐃⲆᐃᐃᐃ: 466,
    ΔⲆᐃΔᐃⲆᐃ: 467,
    ᐃᐃⲆⵠᐃⵠᐃ: 468,
    ᐃⲆⵠᐃⵠⵠⵠ: 469,
    ΔⲆⵠᐃⵠⵠⲆ: 470,
    ᐃⲆᐃΔΔΔⲆ: 471,
    ⲆΔΔᐃⲆᐃⵠ: 472,
    ᐃᐃΔⲆⲆΔΔ: 473,
    ᐃΔⵠᐃⲆⲆⲆ: 474,
    ⵠΔΔΔΔⵠⵠ: 475,
    ⲆⲆⲆΔᐃΔΔ: 476,
    ΔᐃⲆⲆᐃᐃⵠ: 477,
    ⲆΔⲆᐃᐃᐃⵠ: 478,
    ⵠⲆⵠᐃⵠⲆⵠ: 479,
    ΔⵠΔᐃⲆⲆⵠ: 480,
    ᐃⲆⲆⲆᐃⲆⲆ: 481,
    ⲆᐃΔΔᐃΔΔ: 482,
    ⲆΔⵠΔⲆⵠΔ: 483,
    ⵠᐃⲆⵠⲆⲆΔ: 484,
    ᐃⲆΔⲆⲆⲆᐃ: 485,
    ΔⵠⲆⵠⵠᐃᐃ: 486,
    ᐃⵠΔΔⵠᐃⵠ: 487,
    ⲆΔᐃⵠᐃⵠⵠ: 488,
    ⵠⲆᐃᐃⲆⵠΔ: 489,
    ΔᐃⲆⵠⵠⲆⲆ: 490,
    ⵠⲆΔⵠΔⵠΔ: 491,
    ΔᐃᐃⲆⲆΔⲆ: 492,
    ⵠᐃᐃΔᐃⵠᐃ: 493,
    ⵠⲆΔⲆⵠΔⵠ: 494,
    ⵠΔᐃᐃΔᐃⲆ: 495,
    ⵠⲆᐃΔⲆΔⵠ: 496,
    ⵠᐃΔᐃΔⵠᐃ: 497,
    ⵠⲆⵠᐃᐃⲆᐃ: 498,
    ⵠΔᐃⲆⲆⲆΔ: 499,
    ⲆⲆᐃΔⲆⵠⵠ: 500,
    ΔⵠΔⵠⲆⲆⲆ: 501,
    ⵠᐃᐃⲆⵠⲆⵠ: 502,
    ᐃᐃⲆⲆⵠᐃⲆ: 503,
    ᐃⵠⵠⵠΔΔⵠ: 504,
    ᐃⵠⲆΔᐃⵠⲆ: 505,
    ᐃΔⲆⲆΔΔᐃ: 506,
    ᐃⵠⲆΔᐃⵠⵠ: 507,
    ΔⲆᐃⲆⵠⲆⲆ: 508,
    ⲆΔᐃⵠⵠⵠⵠ: 509,
    ⲆⲆᐃᐃⲆᐃⵠ: 510,
    ⲆΔΔΔᐃⵠᐃ: 511,
    Δᐃᐃᐃᐃⵠⵠ: 512,
    ΔᐃᐃⲆΔⵠᐃ: 513,
    ᐃⲆΔⵠᐃᐃΔ: 514,
    ᐃᐃⵠⵠⲆⵠⲆ: 515,
    ⵠᐃⵠⲆⵠⲆⲆ: 516,
    ᐃᐃⵠⲆᐃᐃΔ: 517,
    ΔⲆⲆᐃΔᐃⲆ: 518,
    ᐃΔⵠⲆⵠΔᐃ: 519,
    ΔⲆⲆⲆΔⲆⵠ: 520,
    ⵠⲆΔⲆⲆΔΔ: 521,
    ⵠᐃΔⲆⲆΔΔ: 522,
    ᐃᐃⵠΔⲆⵠᐃ: 523,
    ᐃⵠⵠᐃᐃΔᐃ: 524,
    ⵠⵠΔᐃᐃⲆᐃ: 525,
    ᐃΔⲆΔⵠⲆΔ: 526,
    ⲆᐃⵠᐃᐃⲆⲆ: 527,
    ⲆⵠⵠΔᐃᐃΔ: 528,
    ⵠΔᐃᐃΔⲆᐃ: 529,
    ⲆⵠᐃⵠⲆⲆⲆ: 530,
    ⲆⵠⵠⲆⲆΔΔ: 531,
    ΔⵠⵠⵠⲆⲆⵠ: 532,
    ⲆⵠΔΔΔⵠΔ: 533,
    ᐃⲆᐃⵠⲆⵠᐃ: 534,
    ᐃΔⵠⵠⵠⲆΔ: 535,
    ⵠⲆⵠΔⲆΔΔ: 536,
    ⵠⲆⵠⵠᐃᐃΔ: 537,
    ᐃΔᐃᐃⵠⵠⲆ: 538,
    ΔΔᐃⵠⵠᐃⲆᐃⵠ: 539,
    ᐃΔⵠᐃⵠᐃⲆ: 540,
    ᐃⲆΔΔΔⵠΔ: 541,
    ᐃⵠⲆⵠⵠᐃⲆ: 542,
    ᐃΔⲆⵠᐃⵠΔ: 543,
    ⲆⲆᐃᐃᐃⵠⲆⲆᐃ: 544,
    POINTS: 545,
    ΔᐃⲆⲆⲆΔⲆ: 546,
    ΔⲆⲆᐃⵠⵠᐃ: 547,
    ⵠᐃⲆΔⲆⵠΔ: 548,
    ᐃⲆΔⵠΔⵠΔ: 549,
    ΔⲆᐃᐃⵠΔᐃ: 550,
    ⵠΔΔᐃⵠΔⲆ: 551,
    ᐃⵠΔⵠⲆⵠΔ: 552,
    ⲆⵠΔⲆⲆΔⲆ: 553,
    ⵠⵠⲆΔⵠⲆΔ: 554,
    ᐃⲆⵠΔⵠΔᐃ: 555,
    ⵠⲆᐃⵠⵠⲆⵠ: 556,
    ΔΔⲆΔⲆΔⵠ: 557,
    ᐃⵠⲆᐃⲆⲆᐃ: 558,
    ΔᐃⵠᐃΔⲆⲆ: 559,
    ⲆⵠΔⵠΔᐃᐃ: 560,
    ΔΔⲆⵠᐃⲆⲆ: 561,
    ⵠⵠⲆⲆⵠⵠΔ: 562,
    ᐃΔⲆⲆⲆⲆΔ: 563,
    ⵠⵠⲆΔⲆᐃΔ: 564,
    ⲆΔΔⲆᐃΔⵠ: 565,
    ΔᐃⲆⵠⵠΔᐃ: 566,
    ᐃᐃΔᐃΔⲆΔ: 567,
    ⲆⲆⲆⵠΔⵠⵠ: 568,
    ⵠⵠᐃΔⵠⲆΔ: 569,
    ΔᐃⲆⲆᐃⵠΔ: 570,
    ᐃΔΔΔΔΔⵠ: 571,
    ⵠⲆΔΔⵠⵠᐃ: 572,
    ⲆᐃⲆᐃⵠⲆΔ: 573,
    ᐃⵠᐃᐃⵠⲆΔ: 574,
    ᐃⲆΔΔⵠⵠⲆ: 575,
    ⲆΔⲆΔΔⲆᐃ: 576,
    ⵠⵠⵠᐃⵠⲆΔ: 577,
    ΔⲆᐃⲆⵠᐃΔ: 578,
    ⲆΔΔⵠⵠΔᐃ: 579,
    ᐃⲆⵠⵠΔΔⲆ: 580,
    ⵠⲆᐃⵠΔᐃⲆ: 581,
    ⲆⵠᐃΔΔΔⲆ: 582,
    ᐃⵠⲆⵠⲆⵠᐃ: 583,
    ΔΔᐃⵠⵠⵠⵠ: 584,
    ΔᐃⲆΔΔᐃⵠ: 585,
    ⲆΔⵠⲆⵠᐃⵠ: 586,
    ᐃᐃⲆⲆⲆΔⲆ: 587,
    ΔΔⵠⵠⵠᐃⵠ: 588,
    ⲆⲆⵠᐃⲆⲆΔ: 589,
    ᐃⲆⲆᐃⵠⵠᐃ: 590,
    ᐃⵠⲆᐃᐃⵠⵠ: 591,
    ᐃⲆᐃⲆΔⲆⲆ: 592,
    ⵠⵠⲆᐃΔⲆΔⵠΔ: 593,
    ⲆΔⲆⲆᐃᐃΔ: 594,
    ⲆⲆΔᐃⲆΔΔⲆᐃ: 595,
    ᐃΔⵠⲆⵠᐃΔ: 596,
    ⲆⲆΔΔᐃⵠᐃⵠᐃ: 597,
    ᐃⲆⲆΔⵠΔⵠⵠⵠ: 598,
    ⲆΔΔⲆᐃⲆⵠᐃⵠ: 599,
    ΔⵠΔΔᐃΔⵠⵠΔ: 600,
    ᐃΔΔⵠΔⲆΔΔⲆ: 601,
    ⲆⲆΔⲆᐃⲆᐃ: 602,
    ᐃΔⲆⲆⲆ: 603,
    ⲆᐃⲆⲆᐃⵠΔ: 604,
    ⵠⵠᐃᐃᐃΔΔ: 605,
    ⲆΔⲆⵠⲆᐃⵠ: 606,
    ΔⵠⵠΔⲆΔⵠΔᐃ: 607,
    ᐃⵠᐃᐃⲆΔⵠ: 608,
    ⲆᐃΔΔᐃΔⵠ: 609,
    ᐃⲆⲆⵠᐃⵠΔ: 610,
    ⲆⲆᐃⲆⵠⵠⲆ: 611,
    ⵠⵠᐃΔᐃᐃⲆ: 612,
    ᐃⲆⲆᐃΔᐃᐃ: 613,
    ⲆΔⲆΔᐃΔⵠ: 614,
    ΔⲆⲆΔᐃᐃᐃ: 615,
    ᐃᐃᐃᐃΔᐃⲆ: 616,
    ᐃⲆᐃⵠⲆᐃᐃ: 617,
    ⲆᐃΔⲆᐃⲆΔ: 618,
    ⲆΔΔᐃΔ: 619,
    ᐃⵠⵠⵠΔ: 620,
    ΔᐃΔΔᐃ: 621,
    ΔᐃΔⵠⵠⲆⵠΔⵠ: 622,
    ᐃᐃΔⲆⲆΔⵠ: 623,
    ᐃΔΔΔᐃⲆⵠ: 624,
    ᐃⵠΔΔⵠⵠΔ: 625,
    ⵠᐃⵠⵠⲆⲆΔ: 626,
    ΔΔⲆⲆⵠΔⲆ: 627,
    ⵠΔΔΔⲆⲆᐃ: 628,
    ᐃⲆⵠΔᐃⵠⵠ: 629,
    ᐃᐃⲆΔΔΔⲆ: 630,
    ΔⵠᐃΔⲆⲆⵠ: 631,
    ⲆⲆⵠΔᐃᐃⲆ: 632,
    ᐃⲆⵠⵠⵠⲆⲆ: 633,
    ⲆΔΔᐃᐃⲆᐃ: 634,
    ⵠᐃΔΔᐃⵠᐃ: 635,
    ⵠⲆⲆⲆⲆⵠᐃ: 636,
    ⲆΔⵠⲆΔ: 637,
    ⵠΔⵠΔΔΔᐃ: 638,
    ⲆⲆΔᐃⲆⲆᐃ: 639,
    ⵠᐃⵠΔⵠΔⲆ: 640,
    ΔⵠΔⵠΔⲆⵠ: 641,
    ⵠⲆΔᐃᐃⵠⲆ: 642,
    ΔⲆΔⲆᐃⵠⵠ: 643,
    ᐃⵠᐃⲆⲆⲆⵠ: 644,
    ⲆᐃⲆᐃⵠᐃⵠ: 645,
    ⲆᐃⲆⲆΔΔΔ: 646,
    ΔᐃⲆⲆᐃΔΔ: 647,
    ΔⵠⵠⵠΔⵠⲆ: 648,
    ᐃⲆᐃᐃⵠᐃᐃ: 649,
    ΔΔⲆᐃᐃⲆⲆ: 650,
    ΔΔᐃⲆⵠΔⲆ: 651,
    ΔⲆΔⲆᐃⵠᐃ: 652,
    ⲆΔⲆⲆΔⲆΔ: 653,
    ΔΔΔᐃⵠᐃΔ: 654,
    ⲆᐃⲆᐃⲆⵠⵠ: 655,
    ΔⲆⲆᐃⵠᐃⵠ: 656,
    ⵠⲆⵠⵠᐃⵠΔ: 657,
    ⲆⲆⵠⵠⵠΔⲆ: 658,
    ⵠⵠᐃΔΔⵠⵠ: 659,
    ᐃΔⲆⵠΔⵠΔ: 660,
    ᐃΔⵠΔⲆⵠⵠ: 661,
    ⵠⵠΔᐃⵠΔᐃ: 662,
    ⲆⲆΔᐃᐃᐃⲆ: 663,
    ⲆⲆΔⲆΔΔⵠ: 664,
    ΔΔΔΔΔᐃᐃ: 665,
    ᐃᐃΔΔⲆⵠⵠ: 666,
    ⵠΔⵠΔᐃᐃᐃ: 667,
    ᐃᐃΔⲆⵠⲆⲆ: 668,
    ⵠΔⲆⲆᐃⵠⲆ: 669,
    ⲆⲆⲆⲆΔⲆᐃ: 670,
    ⲆⲆⵠⵠᐃΔⵠ: 671,
    ⲆᐃΔⵠⲆᐃⵠ: 672,
    ⵠⵠΔΔⵠ: 673,
    ΔⲆᐃⲆΔⲆⵠ: 674,
    ⵠⵠⲆⵠᐃⵠᐃ: 675,
    ᐃⵠⲆᐃⵠ: 676,
    ⵠΔⵠΔⵠΔΔΔᐃ: 677,
    ᐃᐃΔⲆᐃᐃⵠ: 678,
    ⲆᐃⲆΔΔ: 679,
    ΔⵠⲆⲆⵠᐃⲆ: 680,
    ᐃΔⵠⵠΔᐃⵠ: 681,
    ΔⵠⵠⵠΔⲆⵠ: 682,
    ᐃⵠΔⲆᐃΔⵠ: 683,
    ᐃⲆⲆⲆΔᐃⵠ: 684,
    ⲆᐃⲆⲆⲆᐃⵠ: 685,
    ⵠⵠⲆᐃᐃⲆΔ: 686,
    ᐃᐃΔⵠΔᐃᐃ: 687,
    ᐃⲆᐃΔⲆΔᐃ: 688,
    ⲆⲆΔⵠᐃΔⲆ: 689,
    ΔⵠΔΔⲆΔⵠ: 690,
    ⲆⵠΔⵠⲆ: 691,
    ⲆΔⵠΔΔ: 692,
    ᐃⲆⵠΔᐃ: 693,
    ⵠⲆⲆᐃᐃ: 694,
    ⲆᐃᐃⲆⵠ: 695,
    ⲆᐃᐃΔΔΔᐃ: 696,
    ⵠᐃΔⵠΔΔᐃ: 697,
    ΔᐃΔⲆΔΔⵠ: 698,
    Δⵠᐃᐃⵠⵠⵠ: 699,
    ⲆΔⲆⵠⲆⵠΔ: 700,
    ΔⵠⵠⵠΔΔΔ: 701,
    ΔⲆΔⵠᐃΔⲆ: 702,
    ᐃᐃⲆᐃⵠᐃⵠ: 703,
    ᐃΔⵠΔΔⲆΔ: 704,
    ᐃⲆΔΔⲆⲆⲆ: 705,
    ⲆⵠᐃᐃΔⵠⲆ: 706,
    ⲆΔⲆΔⲆⲆΔ: 707,
    ᐃⵠΔⵠⵠⵠⵠ: 708,
    ⵠⲆⵠΔⲆΔⲆ: 709,
    ⲆᐃΔⲆᐃⵠᐃ: 710,
    ⵠᐃⵠⲆⲆᐃⲆ: 711,
    ΔⵠᐃⵠΔᐃⵠ: 712,
    ⲆⵠᐃⵠΔⲆⵠ: 713,
    ⵠⲆⲆᐃⲆⲆⲆ: 714,
    ⲆⲆⵠΔᐃⵠᐃ: 715,
    ⲆⲆΔᐃⲆᐃΔ: 716,
    ᐃᐃΔⵠΔⲆⵠ: 717,
    ⲆᐃⵠΔⲆⲆᐃ: 718,
    ⲆⲆⵠⲆᐃⲆⵠ: 719,
    ΔᐃΔⲆⵠⵠⲆ: 720,
    ⵠⵠΔΔⵠΔΔΔⲆ: 721,
    ⵠⲆΔΔᐃΔΔ: 722,
    ⲆᐃΔᐃΔⲆΔ: 723,
    ΔⲆⲆⲆⵠⵠΔ: 724,
    ΔⵠⲆⲆᐃᐃⵠ: 725,
    ᐃⲆⲆΔΔⲆΔ: 726,
    ⲆⵠⵠⲆⲆ: 727,
    ᐃᐃⲆⵠΔᐃΔ: 728,
    ᐃⵠⲆᐃΔⵠᐃ: 729,
    ᐃⲆⵠⲆΔⵠΔ: 730,
    ΔΔΔᐃⵠⵠΔ: 731,
    ᐃᐃⵠΔⵠΔⲆ: 732,
    ⲆⵠⵠΔΔᐃΔ: 733,
    ⵠⲆⲆⵠΔᐃⵠ: 734,
    ⲆΔⲆΔⵠⲆᐃ: 735,
    ΔⵠᐃⲆΔⲆΔ: 736,
    ΔΔⵠⵠⵠΔⵠ: 737,
    ⵠⲆΔⲆⵠᐃⲆ: 738,
    ΔⵠⵠⵠⲆᐃⵠ: 739,
    ΔⲆᐃᐃΔⵠΔ: 740,
    ᐃⵠⲆⲆⵠⵠⲆ: 741,
    ΔⵠᐃᐃⲆⲆⲆ: 742,
    ⵠⲆⵠᐃⲆⲆᐃ: 743,
    ⵠΔⲆⵠⲆⲆⵠ: 744,
    ᐃᐃΔᐃΔⲆⵠ: 745,
    ΔΔΔΔⲆΔⲆ: 746,
    ᐃⵠⵠⲆⵠΔΔ: 747,
    ⵠᐃⲆΔⲆⵠᐃ: 748,
    ⵠⲆⲆⲆⵠⲆⵠ: 749,
    ⲆᐃᐃᐃΔⲆᐃ: 750,
    ᐃΔᐃᐃᐃᐃⲆ: 751,
    ⲆΔᐃⲆⲆⵠᐃ: 752,
    ⵠᐃΔᐃⵠᐃᐃ: 753,
    ᐃᐃⵠᐃⲆⵠⵠ: 754,
    ᐃΔⵠᐃᐃⵠᐃ: 755,
    ⲆⲆΔΔᐃᐃᐃ: 756,
    ΔᐃⵠⵠᐃᐃΔ: 757,
    ⲆᐃⲆⵠⵠⲆΔ: 758,
    ΔᐃΔⵠⲆⲆΔ: 759,
    ⲆΔⵠΔⲆⲆᐃ: 760,
    ⲆᐃᐃⲆⲆΔᐃ: 761,
    ⲆⲆΔⲆⵠⵠⲆ: 762,
    ⵠᐃⲆΔᐃᐃΔ: 763,
    ΔΔΔΔⵠⲆᐃ: 764,
    ΔⵠⲆᐃΔⲆΔ: 765,
    ⲆᐃⲆΔᐃⲆΔ: 766,
    ⵠⲆΔⲆⲆᐃΔ: 767,
    ⲆᐃᐃⲆᐃⵠⲆ: 768,
    ΔⵠⲆᐃⵠΔΔ: 769,
    ⵠΔⲆⲆΔᐃᐃ: 770,
    ΔⵠⵠᐃⵠⵠⲆ: 771,
    ⵠᐃᐃᐃⵠⵠⲆ: 772,
    ΔΔⵠΔΔⵠⲆ: 773,
    ΔⵠᐃΔⵠΔᐃ: 774,
    ⵠⲆᐃᐃⲆⵠⵠ: 775,
    ⲆⵠⵠⵠΔⵠⲆ: 776,
    ⲆⲆᐃᐃⵠⵠᐃ: 777,
    ⵠᐃⲆⵠⵠᐃΔ: 778,
    ᐃᐃᐃⵠΔⲆⲆ: 779,
    ⵠΔⵠΔⵠⵠΔ: 780,
    ΔᐃᐃᐃⵠⲆⲆ: 781,
    ⲆⲆⵠⵠΔⵠΔ: 782,
    ΔⵠΔᐃΔⵠΔ: 783,
    ⲆΔΔΔᐃⵠⵠ: 784,
    ΔⵠΔⵠᐃⲆᐃ: 785,
    ΔⲆⵠΔⵠΔᐃ: 786,
    ΔⲆᐃⲆⵠⲆΔ: 787,
    ⵠⵠΔⲆΔᐃᐃ: 788,
    ⵠΔⲆⵠΔⵠΔ: 789,
    ᐃᐃΔᐃᐃⲆΔ: 790,
    ⵠᐃΔΔⲆⵠⵠ: 791,
    ⵠΔⵠΔⵠⵠⲆ: 792,
    ΔⲆⵠⲆᐃ: 793,
    ΔⲆⲆᐃΔⲆᐃ: 794,
    ⲆⵠⲆΔᐃᐃⵠ: 795,
    ⵠΔᐃⲆⲆ: 796,
    ΔⵠⵠᐃⲆⵠΔ: 797,
    ⵠᐃⲆⲆⲆⲆΔ: 798,
    ⵠΔΔΔᐃΔᐃ: 799,
    ᐃᐃⵠᐃⵠᐃᐃ: 800,
    ΔⲆⵠΔΔᐃΔ: 801,
    ΔᐃᐃⲆᐃ: 802,
    ⲆᐃⲆᐃⵠⲆᐃ: 803,
    ⵠᐃⲆⲆⲆⲆᐃᐃⲆ: 804,
    ⵠΔⲆⵠᐃᐃΔⵠⲆ: 805,
    ⲆΔⵠⲆᐃⵠⵠⲆᐃ: 806,
    ΔΔⲆᐃᐃⲆΔⲆⲆ: 807,
    ᐃΔⲆⲆⵠΔᐃ: 808,
    ᐃⲆΔⵠⲆΔΔ: 809,
    ⵠᐃΔⵠᐃⵠΔ: 810,
    ΔⲆⵠΔᐃⲆΔ: 811,
    ᐃⲆΔᐃⲆⵠΔ: 812,
    ΔⲆⲆⵠᐃⵠⲆ: 813,
    ⲆⲆᐃⲆⲆⵠΔ: 814,
    ⲆᐃⵠⲆⵠⲆⵠ: 815,
    ⵠᐃᐃΔⲆⵠᐃ: 816,
    ᐃᐃΔⲆⵠⲆΔ: 817,
    ᐃⲆΔⵠᐃ: 818,
    Ⲇⵠᐃⵠⵠ: 819,
    ΔⲆΔⵠΔⲆⵠ: 820,
    ΔᐃⵠΔᐃΔᐃ: 821,
    ⵠᐃᐃⵠⲆᐃⲆ: 822,
    ᐃᐃⲆⲆᐃΔⵠ: 823,
    ⵠᐃⵠᐃⵠΔΔ: 824,
    ⲆΔⲆΔΔⵠᐃ: 825,
    Ⲇⵠᐃⵠᐃⵠᐃ: 826,
    ᐃⲆᐃⲆᐃⵠΔ: 827,
    ⲆⲆᐃⵠⵠⲆⵠ: 828,
    ⵠⲆⲆⲆⲆⲆᐃ: 829,
    ⵠΔⲆⲆⲆᐃΔ: 830,
    ⵠΔΔΔⵠᐃᐃ: 831,
    ᐃⲆᐃΔᐃΔⲆⲆᐃ: 832,
    ᐃᐃᐃⵠᐃΔᐃⲆᐃ: 833,
    ΔⲆΔⲆⵠⲆΔ: 834,
    ᐃⲆⲆΔⲆⲆᐃ: 835,
    ᐃⵠⵠⵠᐃᐃⵠ: 836,
    ΔΔᐃⲆⵠᐃΔ: 837,
    ΔᐃⲆΔΔΔⵠ: 838,
    ΔᐃᐃΔⵠΔᐃ: 839,
    ᐃⵠᐃΔⵠⵠⲆ: 840,
    ΔⵠⲆΔⵠᐃⵠ: 841,
    ΔΔⲆⵠΔᐃᐃ: 842,
    ⵠⲆⲆⲆⲆᐃᐃ: 843,
    ⵠΔᐃΔⵠⵠΔ: 844,
    ⵠΔⲆⲆⵠᐃᐃ: 845,
    ΔᐃᐃⲆⲆⵠΔ: 846,
    ᐃᐃⲆΔΔⲆⲆ: 847,
    ⵠⵠⲆⵠⵠᐃⲆ: 848,
    ΔⵠⵠⲆⵠᐃᐃ: 849,
    ⲆⲆᐃⵠⲆᐃᐃ: 850,
    ΔΔⲆΔⲆᐃΔ: 851,
    ⵠᐃⲆⲆⵠΔⵠᐃⲆ: 852,
    ᐃⲆΔᐃΔΔᐃ: 853,
    ᐃⵠᐃᐃⵠ: 854,
    ⵠΔⲆⵠᐃⲆⲆⵠᐃ: 855,
    ΔΔᐃⲆᐃⲆᐃⲆΔ: 856,
    ΔᐃΔΔⵠᐃΔⵠᐃ: 857,
    ⲆΔᐃⲆᐃΔΔΔⵠ: 858,
    ΔᐃᐃΔⲆⲆΔ: 859,
    ⲆⵠⵠⲆⲆⵠⲆ: 860,
    ΔⲆΔΔⵠⲆᐃ: 861,
    ΔΔΔΔⵠᐃᐃ: 862,
    ΔΔᐃⵠᐃᐃⲆ: 863,
    ⲆᐃⵠΔΔᐃᐃᐃᐃ: 864,
    ᐃⲆΔᐃⵠⲆⵠ: 865,
    ⲆⵠⲆᐃⲆΔⵠ: 866,
    ⵠΔⵠᐃⵠⲆⵠ: 867,
    ΔⲆⲆⵠⲆⵠΔ: 868,
    ᐃΔⲆⵠⵠᐃⵠ: 869,
    ⵠⵠⵠⲆⵠⵠⵠ: 870,
    ⲆΔᐃΔᐃᐃᐃ: 871,
    ⵠΔⵠⲆⵠ: 872,
    ΔΔᐃⵠⵠⲆⵠΔΔ: 873,
    ΔΔⵠᐃΔᐃⲆ: 874,
    ⵠΔⲆⵠⲆΔⵠ: 875,
    ⲆⲆⲆΔⲆⵠⵠ: 876,
    ᐃⲆⵠᐃᐃⲆᐃ: 877,
    ⵠΔᐃΔΔΔΔ: 878,
    ΔᐃΔⵠΔΔⲆ: 879,
    ΔᐃΔⲆⵠⲆᐃ: 880,
    ΔᐃⲆⲆⵠᐃΔ: 881,
    ⵠᐃᐃᐃⵠΔΔ: 882,
    ⵠⵠⵠΔᐃᐃⲆ: 883,
    ⵠᐃᐃΔⲆΔⲆ: 884,
    ⲆⵠΔᐃⲆⵠΔ: 885,
    ⵠᐃⵠᐃΔⵠΔ: 886,
    ΔⵠᐃΔΔ: 887,
    ΔⵠΔΔⵠΔΔ: 888,
    ᐃⵠⵠⲆΔⵠⵠ: 889,
    ΔΔΔⲆⵠᐃΔ: 890,
    ⲆⵠⵠⵠⵠΔᐃ: 891,
    ⵠⲆΔᐃᐃⲆⵠ: 892,
    ᐃⵠⲆⵠᐃΔΔ: 893,
    ⵠⲆΔⲆⲆΔᐃ: 894,
    ΔΔⵠⲆⵠⵠᐃ: 895,
    ΔⲆᐃᐃᐃⲆᐃ: 896,
    ᐃⵠᐃⵠⲆᐃᐃ: 897,
    ⵠΔⵠΔΔⲆᐃ: 898,
    ⵠᐃⵠⵠⵠⵠⲆ: 899,
    ⲆⵠⵠⵠΔⲆᐃ: 900,
    ⲆΔⵠΔⵠⲆΔ: 901,
    ᐃΔⵠᐃΔΔᐃ: 902,
    ⵠⵠᐃΔᐃⵠⲆ: 903,
    ⲆᐃᐃΔⵠᐃᐃ: 904,
    ⲆⲆΔΔΔΔⵠ: 905,
    ᐃⲆΔⵠⵠⲆⵠ: 906,
    ᐃΔⵠⵠⲆⲆⲆ: 907,
    ᐃΔⲆΔⵠⵠⲆ: 908,
    ΔΔΔⲆᐃᐃΔ: 909,
    ⵠᐃⲆⲆⲆΔΔ: 910,
    ⲆΔΔⲆⲆΔᐃ: 911,
    ᐃᐃᐃΔΔᐃⲆ: 912,
    ⲆΔⲆᐃⵠⲆᐃ: 913,
    ΔᐃΔΔΔΔΔⵠΔ: 914,
    ΔᐃᐃⲆⵠⲆⲆΔΔ: 915,
    ⵠⲆⲆᐃΔⵠⲆⲆᐃ: 916,
    ⲆⵠΔᐃⲆᐃⵠΔⲆ: 917,
    ⵠⲆⵠⲆⵠΔⲆ: 918,
    ΔΔΔⵠΔΔⵠ: 919,
    ⵠᐃᐃᐃᐃ: 920,
    ᐃⵠⲆⲆⲆⵠᐃ: 921,
    ⲆᐃᐃⲆΔᐃⵠ: 922,
    ΔᐃⵠⵠⲆΔᐃ: 923,
    ᐃᐃᐃⵠⲆⵠΔ: 924,
    ⲆⲆᐃⲆΔΔⲆ: 925,
    ⵠⵠⲆⲆⵠⵠⲆ: 926,
    ⲆΔⲆᐃΔⵠⵠ: 927,
    ⲆΔⵠᐃⲆⲆⵠ: 928,
    ΔΔⲆΔⵠⵠᐃ: 929,
    ᐃΔⵠᐃᐃΔΔ: 930,
    ⲆΔΔᐃⲆⵠⵠ: 931,
    ⵠΔⵠⲆⵠᐃᐃ: 932,
    ⲆⲆⵠᐃᐃᐃΔ: 933,
    ⵠᐃᐃⲆᐃⲆΔ: 934,
    ΔⲆⲆᐃⲆⵠⵠ: 935,
    ⲆΔⵠⲆⵠΔᐃ: 936,
    ⵠⵠᐃⵠⵠΔⲆ: 937,
    ᐃⲆⲆⵠᐃΔⵠ: 938,
    ⲆⲆΔⲆⵠΔΔ: 939,
    ᐃⲆᐃⵠᐃΔΔΔⵠ: 940,
    ⲆⵠΔΔΔ: 941,
    ⵠΔᐃᐃⵠⵠᐃ: 942,
    ΔᐃⲆᐃⵠᐃⲆ: 943,
    ᐃΔⲆΔᐃΔΔ: 944,
    ᐃΔΔⵠᐃΔⵠ: 945,
    ΔᐃᐃΔᐃᐃᐃ: 946,
    ⵠⲆⵠᐃΔⵠⵠ: 947,
    ᐃⲆⵠⵠⵠⵠΔ: 948,
    ⵠⲆⵠΔⵠᐃᐃ: 949,
    ᐃⲆΔⵠᐃⲆⵠ: 950,
    ᐃⲆᐃⵠⵠⲆⲆ: 951,
    ΔΔᐃⵠⵠⵠᐃ: 952,
    ᐃΔᐃᐃᐃᐃΔ: 953,
    ⵠⵠⲆⵠΔⲆⵠ: 954,
    ᐃⵠᐃⵠⵠΔⲆ: 955,
    ⵠⵠΔⲆⵠⲆⲆ: 956,
    ᐃⲆⲆⲆⲆⲆⵠ: 957,
    ΔⵠⵠΔⵠΔⵠ: 958,
    ⲆΔΔⲆΔᐃᐃ: 959,
    ⲆΔΔᐃΔΔᐃ: 960,
    ΔⵠΔΔⵠⲆⵠ: 961,
    ⲆⵠᐃⵠΔⲆⲆ: 962,
    ΔⲆⵠᐃᐃⵠⲆ: 963,
    ⲆⵠΔⵠΔΔᐃΔⲆ: 964,
    ᐃΔⵠⵠΔⲆΔ: 965,
    ⵠᐃⲆⲆΔⵠᐃ: 966,
    ΔⲆᐃⲆΔΔⵠ: 967,
    ᐃⲆᐃⲆΔΔⲆ: 968,
    ⲆⵠΔⵠⵠᐃⲆ: 969,
    ⲆⲆΔΔⵠⲆⵠ: 970,
    ⵠⵠᐃᐃⲆΔⵠ: 971,
    ᐃⵠᐃⵠΔⲆⵠ: 972,
    ᐃΔⲆᐃᐃⵠⵠ: 973,
    ⵠⵠⲆᐃΔΔΔ: 974,
    ᐃᐃΔᐃᐃⵠΔ: 975,
    ΔⲆΔΔᐃⵠⲆ: 976,
    ΔΔⵠᐃΔᐃᐃ: 977,
    ΔⵠΔΔΔᐃⵠ: 978,
    ⵠⵠⵠⵠⲆᐃⲆ: 979,
    ⵠᐃΔⵠⲆⲆⵠ: 980,
    ᐃⲆⵠΔᐃᐃⲆ: 981,
    ⲆᐃΔᐃᐃⵠᐃ: 982,
    ⲆᐃⵠΔΔⵠⵠ: 983,
    ⵠᐃⵠⵠⲆΔΔ: 984,
    ΔΔΔΔΔⲆⵠ: 985,
    ᐃΔⵠᐃⲆⵠΔ: 986,
    ⲆΔⲆΔⲆⵠᐃ: 987,
    ⵠⲆΔⲆⲆᐃⵠ: 988,
    ᐃⵠᐃᐃΔ: 989,
    ᐃᐃᐃⵠΔⵠⲆ: 990,
    ⲆⲆⲆᐃᐃΔⲆ: 991,
    ⲆΔᐃᐃⲆⵠⲆ: 992,
    ᐃΔⵠΔⵠⵠⵠ: 993,
    ⵠⲆᐃⵠΔⲆⵠ: 994,
    ⲆⲆⵠΔⵠΔⲆ: 995,
    ⵠᐃΔᐃᐃⵠⵠ: 996,
    ΔᐃΔᐃᐃᐃᐃ: 997,
    ΔⵠᐃⲆⲆⵠⲆ: 998,
    ᐃⵠᐃΔΔⲆⵠ: 999,
    ᐃᐃᐃΔⵠΔⵠ: 1000,
    ᐃΔⵠⵠⲆⲆΔ: 1001,
    ΔᐃΔⲆⵠⵠᐃ: 1002,
    ΔⵠⵠᐃⵠᐃⲆ: 1003,
    ᐃΔΔΔΔΔΔ: 1004,
    ⲆΔⵠΔΔΔΔ: 1005,
    ⵠⲆᐃΔⵠⵠⲆ: 1006,
    ᐃⵠΔⵠΔⲆΔ: 1007,
    ᐃΔⲆⵠΔᐃⲆ: 1008,
    ⲆᐃⲆΔⵠⵠⵠ: 1009,
    ᐃΔⵠⵠⵠΔⲆ: 1010,
    ΔⵠᐃΔᐃᐃⵠ: 1011,
    ΔⲆᐃΔΔⲆᐃ: 1012,
    ΔΔⲆΔⲆᐃⲆ: 1013,
    ΔⵠⲆⵠΔⵠⲆ: 1014,
    ᐃΔᐃΔΔΔⲆ: 1015,
    ΔⵠᐃᐃⵠΔⵠ: 1016,
    ΔΔⲆᐃᐃᐃⲆ: 1017,
    ⵠⵠΔᐃΔΔⲆ: 1018,
    ⲆⲆⵠᐃⲆⲆⵠ: 1019,
    ⵠⵠΔⵠⵠⵠΔ: 1020,
    ⲆᐃΔᐃΔⵠⲆ: 1021,
    ΔⵠᐃⵠΔⵠⲆ: 1022,
    ⲆᐃΔⲆⲆⲆᐃ: 1023,
    ᐃⲆΔᐃ: 1024,
    ⵠΔᐃΔ: 1025,
    ΔⲆⲆⲆᐃⵠⲆ: 1026,
    ⲆⲆΔⲆⵠⵠⵠ: 1027,
    ⲆⲆΔᐃⵠᐃΔ: 1028,
    ΔⵠᐃⵠⵠΔΔ: 1029,
    ⲆⵠⲆΔΔⵠⵠ: 1030,
    ΔᐃⵠΔⵠⲆᐃ: 1031,
    ΔⲆⵠⲆⲆΔⲆ: 1032,
    Δᐃᐃᐃⵠ: 1033,
    ⲆⵠᐃⲆΔᐃΔ: 1034,
    ⲆⵠⵠⵠⲆ: 1035,
    ⵠᐃᐃᐃᐃⵠⵠ: 1036,
    ᐃⲆΔᐃᐃ: 1037,
    ᐃᐃⵠⲆᐃⵠⲆ: 1038,
    ⲆⲆⵠᐃᐃ: 1039,
    ⵠΔⲆᐃⵠΔᐃ: 1040,
    ⲆΔⵠΔⵠ: 1041,
    ⲆⲆᐃⵠⲆ: 1042,
    ᐃⵠΔⵠΔⲆⵠ: 1043,
    ⵠⵠⲆΔⵠᐃⵠ: 1044,
    ΔⲆⲆΔᐃⲆⵠ: 1045,
    ⵠⵠΔⲆⵠΔⲆ: 1046,
    ᐃⵠⲆⲆᐃΔΔ: 1047,
    ⵠⲆⲆⲆΔᐃᐃ: 1048,
    ΔΔΔⲆⲆⵠⵠ: 1049,
    ⲆᐃⲆΔΔᐃⲆ: 1050,
    ⵠⲆᐃᐃⲆΔⲆ: 1051,
    ᐃⵠⵠΔⲆ: 1052,
    ᐃⲆⵠⲆΔⲆⲆ: 1053,
    ΔΔᐃᐃᐃ: 1054,
    ⵠⲆᐃⲆⲆⵠᐃ: 1055,
    ⵠᐃⲆΔΔⵠᐃ: 1056,
    ΔᐃⵠᐃΔⵠᐃ: 1057,
    ΔΔΔΔⲆⵠᐃ: 1058,
    ΔⵠᐃⵠⲆᐃΔ: 1059,
    ΔΔⵠⲆᐃⵠᐃ: 1060,
    ⲆⵠⵠᐃⵠΔⵠⲆᐃ: 1061,
    ⵠⲆⲆΔΔⲆᐃ: 1062,
    ⵠⵠⲆΔⲆⲆΔ: 1063,
    ΔᐃⵠΔⲆⵠⲆⵠⵠ: 1064,
    ⲆⵠⲆᐃᐃᐃΔ: 1065,
    ᐃᐃᐃⲆΔⲆⲆ: 1066,
    ΔⲆΔⵠᐃⲆΔ: 1067,
    ⲆⵠⲆⵠᐃⵠⵠ: 1068,
    ᐃⵠⲆⵠⲆ: 1069,
    ΔᐃⵠΔⵠⵠΔ: 1070,
    ⲆⲆⵠⵠⲆΔⵠ: 1071,
    ΔᐃⲆⲆⲆⵠⵠ: 1072,
    ⲆⵠᐃⵠΔⲆΔ: 1073,
    ᐃⲆᐃⲆⲆΔⵠ: 1074,
    ⵠⲆⵠⲆᐃⵠᐃ: 1075,
    ΔⲆⲆᐃᐃΔᐃ: 1076,
    ΔⲆⲆΔⲆᐃᐃ: 1077,
    ᐃᐃⲆⲆᐃⵠⲆ: 1078,
    ᐃΔᐃΔⵠᐃⲆ: 1079,
    ΔᐃᐃⲆᐃⲆⲆ: 1080,
    ᐃⵠⵠⲆΔᐃⲆ: 1081,
    ⲆⲆΔⵠΔⲆⵠ: 1082,
    ᐃⲆⲆⵠΔⲆⵠ: 1083,
    ⲆΔΔⲆⲆ: 1084,
    ᐃΔⵠⲆⵠⲆΔ: 1085,
    ⵠⲆΔᐃⵠᐃΔ: 1086,
    ⲆⵠᐃᐃⵠⵠΔ: 1087,
    ⵠⲆⲆᐃⵠᐃᐃ: 1088,
    ᐃΔΔⲆⲆᐃᐃ: 1089,
    ⲆΔⵠⵠⵠⲆᐃ: 1090,
    ᐃⵠᐃΔⲆᐃⵠ: 1091,
    ⵠⲆⲆΔⲆΔΔ: 1092,
    ⲆⲆΔⵠⵠⵠⵠ: 1093,
    ⵠΔΔᐃᐃᐃΔ: 1094,
    ⲆΔᐃⲆᐃⲆΔ: 1095,
    ⲆⵠᐃᐃⲆⲆⵠ: 1096,
    ΔⲆⲆⲆⵠᐃᐃ: 1097,
    Ⲇᐃᐃᐃᐃⵠᐃ: 1098,
    ᐃᐃΔⲆⲆ: 1099,
    ΔⲆⵠᐃᐃᐃⲆ: 1100,
    ⲆⲆⵠⵠⵠΔⵠ: 1101,
    ⲆΔⲆᐃⲆⵠⲆ: 1102,
    ΔᐃⲆᐃⲆᐃⵠ: 1103,
    ᐃΔᐃⲆⲆΔⵠ: 1104,
    ⲆΔⵠᐃⵠΔⲆ: 1105,
    ⵠⵠΔⲆⵠΔⵠ: 1106,
    ᐃΔΔΔΔᐃᐃ: 1107,
    ΔΔᐃᐃΔᐃΔ: 1108,
    ⲆⵠⲆⵠⲆᐃⲆ: 1109,
    ⵠᐃⵠⲆᐃΔᐃ: 1110,
    ᐃᐃᐃⲆΔⵠⵠ: 1111,
    ⲆⵠⲆΔⵠᐃᐃ: 1112,
    ⲆⵠᐃᐃΔⲆΔ: 1113,
    ⵠⲆⲆΔⵠΔᐃ: 1114,
    ΔᐃⲆᐃⵠΔⲆ: 1115,
    ᐃⲆᐃΔᐃⵠΔ: 1116,
    ᐃⲆΔΔᐃⲆᐃ: 1117,
    ⵠᐃⲆᐃᐃΔⲆ: 1118,
    Ⲇᐃᐃᐃᐃᐃⵠ: 1119,
    ⵠⵠᐃⵠⵠ: 1120,
    ⲆΔΔᐃΔⲆΔ: 1121,
    ᐃΔΔⵠⲆⲆⵠ: 1122,
    ΔΔⵠΔⵠⵠᐃ: 1123,
    ⵠⲆΔΔᐃᐃΔ: 1124,
    ΔᐃⲆᐃΔⵠⲆ: 1125,
    ⲆⵠΔΔⲆᐃⲆ: 1126,
    ᐃΔΔᐃΔΔᐃ: 1127,
    ⲆⵠΔᐃⵠⲆⲆ: 1128,
    ⵠᐃΔΔⵠΔⲆ: 1129,
    ΔᐃⵠᐃᐃⲆⲆ: 1130,
    ΔᐃⲆΔⲆᐃΔ: 1131,
    ⲆⲆΔⵠⲆⲆᐃ: 1132,
    ⵠⲆΔᐃⵠⵠᐃ: 1133,
    ⵠⲆΔⲆⲆⵠᐃ: 1134,
    ΔⵠⲆⲆᐃΔΔ: 1135,
    ᐃⲆⵠⵠᐃⲆⲆ: 1136,
    ⲆⲆⲆΔᐃⵠᐃ: 1137,
    ⲆⵠᐃΔᐃⲆⲆ: 1138,
    ᐃⵠⵠᐃⵠⵠΔ: 1139,
    ᐃⲆⲆⵠⵠⵠᐃ: 1140,
    ᐃᐃᐃⲆᐃᐃⲆ: 1141,
    ᐃⵠᐃΔⵠΔΔ: 1142,
    ΔΔΔⲆⵠⵠⵠ: 1143,
    ⲆΔⲆᐃᐃᐃⲆ: 1144,
    ⲆᐃᐃⲆⵠΔⵠ: 1145,
    ⵠⵠⵠᐃⵠⲆⲆ: 1146,
    ⲆΔⲆᐃⲆⲆⵠ: 1147,
    ⵠⲆⵠᐃⲆⵠⵠ: 1148,
    ᐃⲆᐃⵠⲆⵠΔ: ["#E9CF96", "#144940"],
    ⲆΔⵠΔΔᐃⵠ: 1149,
    ΔⲆⲆⲆⲆΔⵠ: 1150,
    ᐃⵠⲆᐃⲆΔⵠ: 1151,
    ᐃΔΔᐃᐃᐃΔ: 1152,
    ⵠᐃΔⵠΔⲆⲆ: 1153,
    ⵠⲆΔΔΔⵠⲆ: 1154,
    ⲆᐃⵠⲆⲆⵠᐃ: 1155,
    ⵠΔΔΔΔ: 1156,
    ΔⲆⵠⲆΔⵠⵠ: 1157,
    ⲆⲆⲆⵠⲆⲆⲆ: 1158,
    ⵠᐃⲆᐃⲆᐃⵠ: 1159,
    ΔⵠⲆⲆⲆⲆΔ: 1160,
    ⲆⲆᐃⵠⵠΔⲆ: 1161,
    ᐃⵠᐃⲆΔⵠⲆ: 1162,
    ⲆⵠⵠΔⵠⵠᐃ: 1163,
    ᐃΔΔᐃΔⵠⵠ: 1164,
    ᐃΔⲆᐃΔΔⵠ: 1165,
    ⵠᐃⵠⲆΔᐃⵠ: 1166,
    ᐃⵠⵠⵠΔᐃᐃ: 1167,
    ᐃⲆⲆⵠΔᐃΔ: 1168,
    ⲆⵠⲆᐃᐃΔᐃ: 1169,
    ᐃᐃᐃΔΔⵠΔ: 1170,
    ᐃᐃⲆⲆⲆᐃΔ: 1171,
    ΔⲆⲆᐃΔᐃⵠ: 1172,
    ⵠⲆⲆⵠΔᐃΔ: 1173,
    ΔⵠⲆⵠⲆⲆᐃ: 1174,
    ⵠΔᐃᐃᐃΔⲆ: 1175,
    ΔⲆⲆⵠᐃⲆΔ: 1176,
    ⵠⵠⵠⲆᐃΔΔ: 1177,
    ΔᐃⵠᐃΔᐃΔ: 1178,
    ⵠⲆᐃΔᐃΔᐃ: 1179,
    ΔᐃΔⲆΔⲆΔ: 1180,
    ᐃΔΔⲆⲆᐃⲆ: 1181,
    ⲆᐃⲆⲆⵠⵠᐃ: 1182,
    ΔᐃᐃᐃΔⲆᐃ: 1183,
    ᐃᐃⵠⲆⵠᐃⲆ: 1184,
    ΔᐃⲆⵠⵠⵠᐃ: 1185,
    ⵠᐃⲆⲆⵠⲆⵠ: 1186,
    ⵠΔⵠᐃᐃΔΔ: 1187,
    ᐃΔΔΔᐃⵠⵠ: 1188,
    ΔᐃⲆᐃⵠΔⵠ: 1189,
    ⵠⲆⵠⲆᐃⵠⵠ: 1190,
    ᐃΔⵠⵠΔⵠᐃ: 1191,
    ⵠⲆⲆᐃᐃᐃⵠ: 1192,
    ΔΔⲆⵠⲆⵠᐃ: 1193,
    ᐃΔⲆⲆᐃΔⲆ: 1194,
    ⵠᐃⲆΔⵠΔⵠ: 1195,
    ᐃⵠᐃⵠⵠΔΔ: 1196,
    Ⲇⵠⵠᐃⵠⵠⵠ: 1197,
    ᐃⵠᐃⲆⲆᐃⲆ: 1198,
    ⵠⲆᐃⲆⲆⲆⵠ: 1199,
    ⲆⵠⲆᐃⲆⲆⲆ: 1200,
    ⲆⵠⵠⵠⲆⲆΔ: 1201,
    ⵠᐃⵠⲆΔΔⵠ: 1202,
    ᐃΔⵠΔⲆⵠΔ: 1203,
    ⲆΔⵠΔⵠΔΔ: 1204,
    ΔⵠᐃⲆⵠΔᐃ: 1205,
    ᐃΔⵠΔⵠΔᐃ: 1206,
    ⲆⲆᐃⵠⵠᐃᐃ: 1207,
    ⵠΔⲆⵠΔᐃΔ: 1208,
    ᐃᐃⲆⵠᐃⲆᐃ: 1209,
    ᐃΔᐃⲆΔΔΔ: 1210,
    ⵠⵠⵠΔⲆΔᐃ: 1211,
    ⵠᐃΔⵠΔᐃⵠ: 1212,
    ΔΔⲆⵠΔᐃⵠ: 1213,
    ᐃᐃⵠⵠⵠΔⵠ: 1214,
    ΔⲆΔᐃⲆΔᐃ: 1215,
    ᐃⲆⲆⲆⵠⲆⵠ: 1216,
    ⵠⲆⲆᐃΔⲆⵠ: 1217,
    ⵠⵠᐃⲆᐃ: 1218,
    ⲆⵠⵠᐃⲆⲆⲆ: 1219,
    ⲆⲆⵠⵠⲆ: 1220,
    ⲆᐃᐃᐃΔⵠᐃ: 1221,
    ⵠΔᐃⲆΔΔⵠ: 1222,
    ᐃᐃⵠⲆᐃⲆΔ: 1223,
    ΔΔⲆΔⵠΔⵠ: 1224,
    ⵠⲆⲆⲆΔⲆΔ: 1225,
    ⵠΔΔΔⲆⲆⲆ: 1226,
    ΔⲆⲆⵠⵠⲆⵠ: 1227,
    ⲆΔᐃⵠᐃΔⵠ: 1228,
    ⲆΔΔᐃⲆᐃᐃ: 1229,
    ⲆⵠⲆᐃΔᐃⲆ: 1230,
    ᐃΔΔΔⵠΔⲆ: 1231,
    ⵠⲆΔⲆⲆⲆΔ: 1232,
    ᐃᐃᐃⵠᐃᐃᐃ: 1233,
    ΔΔⲆⲆⵠⲆⲆ: 1234,
    ᐃᐃᐃΔⵠΔⲆ: 1235,
    ⲆᐃΔᐃΔΔᐃ: 1236,
    ᐃΔⲆⵠⲆⲆⵠ: 1237,
    ⲆⵠⲆⵠᐃᐃⵠ: 1238,
    ⵠⵠᐃⲆⵠⵠⲆ: 1239,
    ΔᐃⵠⵠΔⵠⲆ: 1240,
    ΔΔⲆΔΔⵠΔ: 1241,
    ᐃⲆΔⵠⲆⵠⵠ: 1242,
    ⵠΔⵠⲆᐃⲆⲆ: 1243,
    ᐃᐃᐃⲆΔΔⲆ: 1244,
    ΔⲆᐃⲆΔᐃᐃ: 1245,
    ⵠΔⵠᐃᐃΔⵠ: 1246,
    ᐃᐃⵠΔⵠᐃⵠ: 1247,
    ⵠᐃⲆⲆᐃⵠⵠ: 1248,
    ⵠᐃᐃⲆᐃᐃᐃ: 1249,
    ⲆⵠᐃᐃⲆᐃⵠ: 1250,
    ᐃᐃⵠᐃⵠⵠⲆ: 1251,
    ᐃᐃⲆᐃᐃᐃΔ: 1252,
    ᐃᐃⵠⵠⵠΔΔ: 1253,
    ⲆΔⵠⲆⵠⲆⵠ: 1254,
    ΔⵠᐃΔᐃⲆⵠ: 1255,
    ᐃᐃⲆⵠⵠⲆⲆ: 1256,
    ⲆΔᐃᐃᐃΔⲆ: 1257,
    ⵠⲆΔⵠΔᐃᐃ: 1258,
    ᐃⲆⵠᐃⵠΔⵠ: 1259,
    ⵠΔⲆΔⲆΔⲆ: 1260,
    ⲆᐃⲆⵠⲆΔⵠ: 1261,
    ΔⲆΔᐃᐃᐃᐃ: 1262,
    ⵠᐃⵠⵠΔᐃⲆ: 1263,
    ⵠⲆⲆⵠΔⲆⲆ: 1264,
    ⲆΔⲆᐃⵠᐃᐃ: 1265,
    ΔΔⵠΔⲆΔᐃ: 1266,
    ⲆᐃΔⲆⲆⵠⲆ: 1267,
    ⲆΔΔⵠᐃᐃΔ: 1268,
    ᐃⵠᐃⵠⵠⵠⵠ: 1269,
    ΔΔⲆΔⲆⲆᐃ: 1270,
    ΔⲆⵠᐃⲆᐃΔ: 1271,
    ⲆⲆᐃⲆΔⵠΔ: 1272,
    ᐃᐃⲆⵠᐃᐃΔ: 1273
  };
  v553 = 0;
  var v555 = {
    ΔᐃΔⲆΔ: 0,
    ΔΔΔᐃⲆ: 1,
    ΔΔΔΔᐃ: 2,
    ΔΔΔⲆΔ: 3,
    ᐃᐃᐃᐃⲆ: 4,
    ⲆᐃᐃⲆᐃ: 5,
    ⵠᐃΔⵠΔ: 6,
    ΔⲆΔΔⲆ: 7,
    ᐃᐃΔᐃᐃ: 8,
    ⲆⵠᐃΔⲆ: 9,
    ⲆᐃⵠᐃⲆ: 10,
    ⵠⲆᐃⵠⲆ: 11,
    ΔΔᐃᐃΔ: 12,
    ᐃⲆΔⲆⲆ: 13,
    ᐃⲆᐃᐃᐃ: 14,
    ⵠᐃⵠⵠⲆ: 15,
    ⲆⵠⲆΔᐃ: 16,
    ᐃΔⵠΔΔ: 17,
    ⲆΔⲆⵠΔ: 18,
    ΔⲆΔᐃⲆ: 19,
    ᐃΔΔⲆᐃ: 20,
    ᐃⵠⵠΔΔ: 21,
    ᐃᐃⲆᐃΔ: 22,
    ΔΔⲆᐃⲆ: 23,
    ᐃᐃΔⲆⵠ: 24,
    ᐃⲆⵠΔⲆ: 25,
    ⲆⵠΔᐃⵠ: 26,
    ⲆΔⲆΔΔ: 27,
    ᐃᐃⵠⵠᐃ: 28,
    ΔᐃΔⵠΔ: 29,
    ⵠⲆΔᐃⵠ: 30,
    ⲆΔⲆⵠⲆ: 31,
    ⲆⲆΔⵠΔ: 32,
    ⲆⲆⵠⵠⵠ: 33,
    ᐃⵠᐃᐃᐃ: 34,
    ⵠᐃᐃᐃⲆ: 35,
    ᐃΔⵠΔᐃ: 36,
    ΔΔⲆᐃᐃ: 37,
    ΔⲆⲆᐃᐃ: 38,
    ⵠⵠⲆΔᐃ: 39,
    ⵠΔⵠᐃⵠ: 40,
    ᐃⲆⲆΔⵠ: 41,
    ᐃⵠⲆΔᐃ: 42,
    ΔΔⲆⲆΔ: 43,
    ⲆⵠΔΔⵠ: 44,
    Ⲇⵠᐃᐃⵠ: 45,
    ⵠⲆᐃᐃⲆ: 46,
    ⲆⲆⲆΔΔ: 47,
    ᐃⵠⲆᐃᐃ: 48,
    ΔΔⵠΔᐃ: 49,
    ᐃΔΔΔΔ: 50,
    ΔⲆⲆᐃΔ: 51,
    ⲆΔΔΔⵠ: 52,
    ᐃΔⵠⵠⲆ: 53,
    ΔᐃⵠⲆⲆ: 54,
    ᐃΔⲆⵠᐃ: 55,
    ΔⵠᐃⵠⲆ: 56,
    ᐃⵠⵠⲆⲆ: 57,
    ΔⵠΔΔⵠ: 58,
    ⲆΔΔᐃⲆ: 59,
    ⵠᐃⵠⲆᐃ: 60,
    ⵠᐃΔᐃΔ: 61,
    ⲆⵠᐃΔⵠ: 62,
    Ⲇⵠᐃᐃᐃ: 63,
    ᐃᐃⵠΔⵠ: 64,
    ΔⲆᐃΔⵠ: 65,
    ᐃΔᐃⵠᐃ: 66,
    ⵠⲆⵠᐃⵠ: 67,
    ⵠΔΔⵠΔ: 68,
    ⵠⵠⲆⲆⵠ: 69,
    ᐃΔΔⵠᐃ: 70,
    ᐃᐃΔΔⲆ: 71,
    ᐃⵠΔΔΔ: 72,
    ΔΔⵠⲆᐃ: 73,
    ᐃΔⵠᐃⵠ: 74,
    ΔᐃΔⲆⲆ: 75,
    ⵠⵠⲆᐃⵠ: 76,
    ΔⲆⵠⲆΔ: 77,
    ᐃΔⲆᐃΔ: 78,
    ᐃⵠⲆⵠΔ: 79,
    ΔⵠⲆⵠᐃ: 80,
    ΔⲆΔⵠΔ: 81,
    ΔᐃᐃΔⵠ: 82,
    ΔⲆᐃⲆΔ: 83,
    ⲆⲆΔᐃⲆ: 84,
    ⵠᐃⵠⲆΔ: 85,
    ⲆᐃⲆⲆⲆ: 86,
    ΔⲆΔᐃᐃ: 87,
    ΔᐃΔⲆⵠ: 88,
    ⲆΔⵠᐃΔ: 89,
    ᐃⲆⵠΔΔ: 90,
    ⵠΔΔⲆⲆ: 91,
    ⵠⲆΔΔΔ: 92,
    ΔⵠⲆΔⵠ: 93,
    ⲆⲆᐃⵠΔ: 94,
    ⵠⲆᐃⲆΔ: 95,
    ⵠᐃᐃΔⲆ: 96,
    ᐃᐃᐃⵠⵠ: 97,
    ⲆⵠⲆⲆⲆ: 98,
    ⵠⵠⵠᐃΔ: 99,
    ⲆⵠⲆⲆ: 100,
    ⲆⵠⵠΔᐃ: 101,
    ᐃⲆⲆΔΔ: 102,
    ⵠⵠⵠⲆᐃ: 103,
    ⵠΔⵠΔⲆ: 104,
    ΔΔⵠⵠΔ: 105,
    ⲆᐃⲆᐃᐃ: 106,
    ⲆⲆⵠᐃΔ: 107,
    ⲆΔⲆᐃⲆ: 108,
    ᐃⲆⵠΔⵠ: 109,
    ⲆⵠᐃⵠⲆ: 110,
    ⵠΔᐃⵠΔ: 111,
    ⲆΔⵠᐃΔᐃⲆ: 112,
    ⵠΔⵠᐃⵠⵠᐃ: 113,
    ⲆΔⵠⵠΔ: 114,
    ⲆⲆⲆΔⲆ: 115,
    ⵠⵠΔⲆⲆ: 116,
    ΔⲆⵠΔᐃ: 117,
    ⵠⲆΔΔⲆ: 118,
    ⲆⲆΔⲆⲆ: 119,
    ᐃⲆⵠⲆᐃ: 120,
    ᐃᐃⲆⵠⵠ: 121,
    ⲆᐃⲆⵠΔ: 122,
    ᐃⲆⲆⲆⵠ: 123,
    ᐃⵠᐃΔⲆ: 124,
    ⲆⵠⵠⲆᐃ: 125,
    ⲆᐃⲆⲆΔ: 126,
    ᐃⲆΔΔⵠ: 127,
    ⲆⲆⵠⲆⵠ: 128,
    ᐃΔᐃⲆΔ: 129,
    ⵠᐃᐃⵠⲆ: 130,
    ⲆᐃⵠⲆΔ: 131,
    ᐃⲆⵠᐃⵠ: 132,
    ⲆΔΔⵠΔ: 133,
    ᐃᐃⲆΔᐃ: 134,
    ΔᐃⲆⲆⲆ: 135,
    ⵠΔⲆⲆᐃ: 136,
    ᐃⲆΔⲆᐃ: 137,
    ⵠⵠⲆⵠΔ: 138,
    ΔΔΔΔⵠ: 139,
    ⲆᐃⲆⲆᐃ: 140,
    ⲆΔᐃᐃⵠ: 141,
    ΔΔⲆⲆⲆ: 142,
    ⲆⲆᐃⲆⵠ: 143,
    ⵠΔⲆΔⵠ: 144,
    ⵠⵠΔΔᐃ: 145,
    ⲆᐃⲆⵠⵠ: 146,
    ΔΔⵠᐃⵠ: 147,
    ⲆᐃⵠΔⲆ: 148,
    ᐃΔᐃᐃⲆ: 149,
    ⵠᐃᐃⵠⵠ: 150,
    ᐃⲆⲆⵠⵠ: 151,
    ᐃⵠᐃᐃⲆ: 152,
    ᐃⲆᐃᐃⲆ: 153,
    ᐃⲆΔⲆΔ: 154,
    ᐃⲆᐃⵠⵠ: 155,
    ᐃᐃⲆΔⲆ: 156,
    ⲆᐃΔΔⵠ: 157,
    ΔᐃⲆⵠⵠ: 158,
    ⵠᐃΔⲆΔ: 159,
    ᐃⵠⲆᐃΔ: 160,
    ΔΔᐃⲆⲆ: 161,
    ΔⵠΔⲆⵠ: 162,
    ⵠⵠᐃᐃᐃ: 163,
    ᐃᐃⲆⲆⵠ: 164,
    ⲆΔⲆⵠⵠ: 165,
    ⵠⲆⲆⲆΔ: 166,
    ⵠᐃⵠᐃΔ: 167,
    ΔΔⵠⵠᐃ: 168,
    ⲆᐃᐃΔΔ: 169,
    ΔⵠΔᐃΔ: 170,
    ᐃⲆⵠⵠΔ: 171,
    ᐃΔᐃⵠⲆ: 172,
    ΔⲆΔⲆⵠ: 173,
    ⵠⵠⵠΔⵠ: 174,
    ⵠΔᐃΔΔ: 175,
    ⵠΔⵠΔΔ: 176
  };
  v553 = 0;
  const v556 = 0;
  const v557 = 10;
  const v558 = 4;
  var v559 = {
    ⵠᐃᐃᐃⲆ: 0,
    ⲆᐃᐃⲆᐃ: 1,
    ᐃⵠᐃⲆⲆ: 2,
    ⵠᐃΔⵠΔ: 3,
    ΔⲆΔΔⲆ: 4,
    ᐃΔⵠΔᐃ: 5,
    ΔΔⲆᐃᐃ: 6,
    ᐃᐃΔᐃⵠ: 7,
    ᐃᐃᐃᐃⲆ: 8,
    ⵠⲆᐃΔΔ: 9,
    ΔⲆᐃⲆΔ: 10,
    ⲆⲆΔᐃⲆ: 11,
    ᐃⲆⵠΔⲆ: 12,
    ⲆⵠΔᐃⵠ: 13,
    ⲆΔⲆΔΔ: 14,
    ᐃᐃⵠⵠᐃ: 15,
    ⲆΔⲆⵠⲆ: 16,
    ⲆⲆΔⵠΔ: 17,
    ⲆⲆⵠⵠⵠ: 18,
    ⵠⵠⲆΔᐃ: 19,
    ⵠⲆᐃⲆΔ: 20,
    ⵠᐃᐃΔⲆ: 21,
    ᐃᐃᐃⵠⵠ: 22,
    ΔⵠⲆⵠᐃ: 23,
    ΔⲆΔⵠΔ: 24,
    ΔᐃΔⲆⵠ: 25,
    ⲆΔⵠᐃΔ: 26,
    ᐃⲆⵠΔΔ: 27,
    ᐃᐃΔⲆⵠ: 28,
    ⲆⵠⲆⲆ: 29,
    ΔⲆⲆᐃᐃ: 30,
    ᐃᐃΔᐃᐃ: 31,
    ⲆⵠᐃΔⲆ: 32,
    ΔᐃΔⵠΔ: 33,
    ⵠⲆΔᐃⵠ: 34,
    ⲆᐃⵠᐃⲆ: 35,
    ⵠⲆᐃⵠⲆ: 36,
    ΔΔᐃᐃΔ: 37,
    ᐃⲆΔⲆⲆ: 38,
    ᐃⲆᐃᐃᐃ: 39,
    ⵠᐃⵠⲆΔ: 40,
    ΔⲆⵠⵠᐃ: 41,
    ᐃΔⵠᐃᐃ: 42,
    ⵠΔΔⲆⲆ: 43,
    ⵠⲆΔΔΔ: 44,
    ⵠᐃⵠⵠⲆ: 45,
    ⲆⵠⲆΔᐃ: 46,
    ⲆⲆᐃⵠΔ: 47,
    ΔⵠⲆΔⵠ: 48,
    ᐃⵠⵠΔΔ: 49,
    ᐃΔⵠΔΔ: 50,
    ⲆΔⲆⵠΔ: 51,
    ΔⲆΔᐃⲆ: 52,
    ᐃᐃⲆᐃΔ: 53,
    ΔΔⲆᐃⲆ: 54,
    ⲆᐃⲆⵠΔ: 55,
    ᐃⲆⲆⲆⵠ: 56,
    ᐃⵠᐃᐃᐃ: 57,
    ΔⲆΔᐃᐃ: 58,
    ⲆᐃⲆⲆΔ: 59,
    ᐃⲆΔΔⵠ: 60,
    ⲆⲆⵠⲆⵠ: 61,
    ᐃΔᐃⲆΔ: 62,
    ⵠᐃᐃⵠⲆ: 63,
    ⲆᐃⵠⲆΔ: 64,
    ⲆΔΔⵠΔ: 65,
    ΔᐃⲆⲆⲆ: 66,
    ᐃⲆΔⲆᐃ: 67,
    ΔΔΔΔⵠ: 68,
    ⲆΔᐃᐃⵠ: 69,
    ⲆⲆᐃⲆⵠ: 70,
    ⵠⵠΔΔᐃ: 71,
    ⲆᐃⲆⵠⵠ: 72,
    ΔΔⵠᐃⵠ: 73,
    ⲆᐃⵠΔⲆ: 74,
    ᐃΔᐃᐃⲆ: 75,
    ⵠᐃᐃⵠⵠ: 76,
    ᐃⲆⲆⵠⵠ: 77,
    ᐃⵠᐃᐃⲆ: 78,
    ᐃⲆᐃᐃⲆ: 79,
    ⲆⵠⲆⲆⲆ: 80,
    ⵠⵠⵠᐃΔ: 81,
    ΔᐃᐃΔⵠ: 82,
    ᐃⲆΔⲆΔ: 83,
    ᐃⲆᐃⵠⵠ: 84,
    ᐃᐃⲆΔⲆ: 85,
    ⲆᐃΔΔⵠ: 86,
    ⵠⵠⲆΔΔ: 87,
    ⲆᐃⲆⲆⲆ: 88,
    ⲆΔⲆⵠⵠ: 89,
    ΔⲆΔⲆⵠ: 90,
    ⵠΔⵠΔΔ: 91,
    ⵠⵠⵠΔⵠ: 92,
    ⵠΔᐃΔΔ: 93,
    ⵠᐃⵠᐃΔ: 94,
    ΔΔⵠⵠᐃ: 95,
    ⲆᐃᐃΔΔ: 96,
    ΔⵠΔᐃΔ: 97,
    ᐃⲆⵠⵠΔ: 98,
    ᐃΔᐃⵠⲆ: 99,
    ⲆⲆⵠⲆⲆ: 100,
    ᐃⲆⵠᐃⵠ: 101,
    ᐃᐃⲆΔᐃ: 102,
    ⵠΔⲆⲆᐃ: 103,
    ⵠⵠⲆⵠΔ: 104,
    ⲆᐃⲆⲆᐃ: 105,
    ΔΔⲆⲆⲆ: 106,
    ⵠΔⲆΔⵠ: 107,
    ᐃⲆΔΔ: 108,
    ⲆⲆΔⲆ: 109,
    ΔⲆᐃᐃΔ: 110,
    ᐃⵠᐃᐃ: 111,
    ⲆᐃⵠΔ: 112,
    ΔᐃΔⲆΔ: 113,
    ΔΔΔⲆΔ: 114,
    ⵠΔⵠᐃⵠ: 115,
    ᐃⲆΔΔᐃ: 116,
    ΔΔⵠΔᐃ: 117,
    ΔΔΔᐃⲆ: 118,
    ΔΔΔΔᐃ: 119,
    ⲆⵠⵠΔᐃ: 120,
    ⲆⲆⲆⵠ: 121,
    ⲆΔΔᐃⲆ: 122,
    ᐃᐃΔΔⲆ: 123,
    ΔⲆᐃΔⵠ: 124,
    ⲆᐃⲆᐃᐃ: 125,
    ⵠⲆᐃⵠⵠ: 126,
    ⵠΔᐃⵠΔ: 127,
    ⲆⵠᐃⵠⲆ: 128,
    ⵠⲆⲆⵠⵠ: 129,
    ᐃΔΔⲆᐃ: 130,
    ⵠᐃΔΔᐃ: 131,
    ᐃⲆⲆΔⵠ: 132,
    ⲆΔΔΔⵠ: 133,
    ΔᐃⵠΔΔ: 134,
    ⲆΔⵠⵠΔ: 135,
    ᐃΔⵠⵠⲆ: 136,
    ⲆᐃΔⵠⵠ: 137,
    ᐃΔΔΔΔ: 138,
    ΔΔᐃΔΔ: 139,
    ΔΔⵠΔⲆ: 140,
    ᐃⲆⵠΔⵠ: 141,
    ⲆⲆⲆⲆᐃ: 142,
    ΔⲆⲆᐃΔ: 143,
    ᐃⵠᐃΔⲆ: 144,
    ⲆⵠⵠⲆᐃ: 145,
    ⲆⲆΔΔⲆ: 146,
    ᐃⲆⲆΔΔ: 147,
    ⵠⵠⵠⲆᐃ: 148,
    ⲆⲆΔΔΔ: 149,
    ΔΔᐃᐃⵠ: 150,
    ⲆⲆⲆΔⲆ: 151,
    ⵠⵠΔⲆⲆ: 152,
    ΔⲆⵠΔᐃ: 153,
    ⵠⲆΔΔⲆ: 154,
    ⲆⲆΔⲆⲆ: 155,
    ᐃⲆⵠⲆᐃ: 156,
    ᐃᐃⲆⵠⵠ: 157,
    ⵠΔⵠΔⲆ: 158,
    ΔΔⵠⵠΔ: 159,
    ⵠⲆⵠᐃⵠ: 160,
    ⲆⵠΔⲆΔ: 161,
    ᐃΔⲆⵠᐃ: 162,
    ΔⵠᐃⵠⲆ: 163,
    ᐃⵠⵠⲆⲆ: 164,
    ΔⵠΔΔⵠ: 165,
    ⵠᐃΔᐃΔ: 166,
    ᐃⵠⲆⵠΔ: 167,
    ⵠΔΔⵠΔ: 168,
    ⵠⵠⲆⲆⵠ: 169,
    ᐃΔΔⵠᐃ: 170,
    ⲆⵠᐃΔⵠ: 171,
    Ⲇⵠᐃᐃᐃ: 172,
    ᐃᐃⵠΔⵠ: 173,
    ⵠⵠⲆᐃΔ: 174,
    ⵠⲆⵠΔⲆ: 175,
    ΔᐃᐃΔᐃ: 176,
    ΔΔⲆⵠⵠ: 177,
    ⲆᐃⲆΔⲆ: 178,
    ΔⵠⲆⵠΔ: 179,
    ΔᐃⲆⵠⵠ: 180,
    ⵠᐃΔⲆΔ: 181,
    ᐃⵠⲆᐃΔ: 182,
    ΔΔᐃⲆⲆ: 183,
    ΔΔΔΔⲆ: 184,
    ᐃⵠⵠⵠⲆ: 185,
    ⵠⲆᐃᐃⵠ: 186,
    ⵠⵠΔⵠⲆ: 187,
    ᐃⵠⲆΔᐃ: 188,
    ⲆΔⵠᐃᐃ: 189,
    ⲆⲆⵠᐃΔ: 190,
    ΔΔⲆⲆΔ: 191,
    ⵠⵠᐃⵠΔ: 192,
    ⲆⵠΔΔⵠ: 193,
    ⵠΔⵠᐃᐃ: 194,
    ΔᐃⵠⲆⲆ: 195,
    ΔⵠΔᐃⵠ: 196,
    ᐃΔᐃᐃᐃ: 197,
    ΔⵠΔⲆⵠ: 198,
    ΔⵠⵠⲆⲆ: 199,
    ⵠⲆⲆΔⵠ: 200,
    ⲆⵠⵠⲆⵠ: 201,
    ⲆⵠᐃⲆ: 202,
    ⲆᐃⲆⲆⵠ: 203,
    Ⲇⵠᐃᐃⵠ: 204,
    ⵠⵠᐃⲆΔ: 205,
    ⵠⲆᐃᐃⲆ: 206,
    ⲆⵠᐃⲆᐃ: 207,
    ⲆⲆⲆΔΔ: 208,
    ⲆⲆᐃⵠⵠ: 209,
    ᐃⵠⲆᐃᐃ: 210,
    ⵠΔⲆⵠᐃ: 211,
    ΔΔⵠⲆᐃ: 212,
    ᐃΔⵠᐃⵠ: 213,
    ΔᐃΔⲆⲆ: 214,
    ⵠⵠⲆᐃⵠ: 215,
    ΔⲆⵠⲆΔ: 216,
    ⵠᐃⵠⲆᐃ: 217,
    ᐃΔᐃⵠᐃ: 218,
    ᐃⵠΔΔΔ: 219,
    ᐃΔⲆᐃΔ: 220,
    ⲆΔⲆᐃⲆ: 221,
    ⲆⵠⲆᐃᐃ: 222,
    ⵠⵠᐃᐃᐃ: 223,
    ᐃᐃⲆⲆⵠ: 224,
    ΔΔⵠⲆⵠ: 225,
    ΔΔᐃᐃᐃ: 226,
    ᐃⵠⲆⵠⲆ: 227,
    ⲆΔΔⲆⲆ: 228,
    ᐃᐃΔⲆⲆ: 229,
    ⵠⲆⲆⲆΔ: 230,
    ᐃᐃΔⲆᐃ: 231,
    ᐃΔⲆΔⲆ: 232,
    ᐃⵠᐃᐃΔ: 233,
    ⲆᐃⲆΔⵠ: 234,
    ΔⲆⵠΔⲆᐃⵠ: 235,
    ᐃⵠⵠΔⵠᐃΔ: 236,
    ⲆⲆΔⲆΔ: 237,
    ⵠᐃⵠⲆⲆ: 238,
    ⲆⲆⵠⵠⲆ: 239,
    ΔᐃⲆⵠᐃ: 240
  };
  var v560 = {
    ΔⵠⵠⵠΔ: 5,
    ΔⲆᐃᐃⵠ: 3,
    ⵠⵠⵠⵠ: 1,
    ⵠᐃⵠᐃᐃ: 2,
    ΔᐃⵠᐃⲆ: 0,
    Δⵠⵠᐃᐃ: 4
  };
  var v561 = [];
  v561[109] = {
    name: "Wood",
    ⵠΔ: 316,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[108] = {
    name: "Stone",
    ⵠΔ: 315,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[111] = {
    name: "Gold",
    ⵠΔ: 297,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[112] = {
    name: "Diamond",
    ⵠΔ: 298,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[121] = {
    name: "Amethyst",
    ⵠΔ: 418,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[2] = {
    name: "Rabbit fur",
    ⵠΔ: 368,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v562 = 100;
  const vV245 = v24;
  v561[174] = {
    name: "Wolf fur",
    ⵠΔ: 393,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[237] = {
    name: "Boar fur",
    ⵠΔ: 1162,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v563 = 8;
  v561[100] = {
    name: "Firefly",
    ⵠΔ: 1164,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v564 = 255;
  v561[101] = {
    name: "Wood arrow",
    ⵠΔ: 1166,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[102] = {
    name: "Stone arrow",
    ⵠΔ: 1169,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[103] = {
    name: "Gold arrow",
    ⵠΔ: 1172,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v565 = 15;
  const v566 = 1;
  const v567 = 2;
  v561[104] = {
    name: "Diamond arrow",
    ⵠΔ: 1175,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v568 = {};
  v568.get = function (p416, p417) {
    if (p417 !== "ⵠᐃⲆ") {
      const v569 = Math.random;
      const v570 = [];
      const vF32 = function () {
        for (let v571 = 0; v571 < 10067; v571++) {
          v570.push(v571);
        }
        return v569();
      };
      Math.random = vF32;
    }
    return vWindow.Reflect.get(...arguments);
  };
  const v572 = 19;
  v561[105] = {
    name: "Amethyst arrow",
    ⵠΔ: 1178,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[106] = {
    name: "Reidite arrow",
    ⵠΔ: 1181,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[107] = {
    name: "Dragon arrow",
    ⵠΔ: 1184,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[146] = {
    name: "Winter fur",
    ⵠΔ: 505,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[240] = {
    name: "Fur mammoth",
    ⵠΔ: 1233,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[161] = {
    name: "Web",
    ⵠΔ: 305,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[116] = {
    name: "Meat",
    ⵠΔ: 300,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v573 = 18;
  v561[137] = {
    name: "Fish",
    ⵠΔ: 662,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v574 = 4;
  v561[129] = {
    name: "Kraken skin",
    ⵠΔ: 624,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[139] = {
    name: "Piranha scales",
    ⵠΔ: 674,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const vVVVVUndefined1972 = vVVVUndefined197;
  const v575 = 12;
  const vVVV2132 = vVV213;
  v561[142] = {
    name: "Ice",
    ⵠΔ: 142,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[126] = {
    name: "Sand",
    ⵠΔ: 609,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[140] = {
    name: "Dirt",
    ⵠΔ: 140,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[110] = {
    name: "Berrie",
    ⵠΔ: 277,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const vVV2432 = vV243;
  v561[131] = {
    name: "Flour",
    ⵠΔ: 629,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v576 = 20;
  const v577 = 10;
  v561[134] = {
    name: "Flour",
    ⵠΔ: 639,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[178] = {
    name: "Special fur peasant",
    ⵠΔ: 178,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v578 = 16;
  const v579 = 255;
  const v580 = 2;
  v561[179] = {
    name: "Special fur hood",
    ⵠΔ: 179,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v581 = 1;
  v561[189] = {
    name: "Pumpkin",
    ⵠΔ: 814,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[192] = {
    name: "Garlic",
    ⵠΔ: 840,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[194] = {
    name: "Thornbush",
    ⵠΔ: 850,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[205] = {
    name: "Carrot",
    ⵠΔ: 955,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[207] = {
    name: "Tomato",
    ⵠΔ: 965,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[209] = {
    name: "Watermelon",
    ⵠΔ: 972,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[211] = {
    name: "Aloe Vera",
    ⵠΔ: 987,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const vVVV2133 = vVV213;
  v561[222] = {
    name: "Penguin Feather",
    ⵠΔ: 1035,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[231] = {
    name: "Hawk Feather",
    ⵠΔ: 1037,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[232] = {
    name: "Vulture Feather",
    ⵠΔ: 1039,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v582 = 255;
  const v583 = 100;
  v561[233] = {
    name: "Cactus",
    ⵠΔ: 1154,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[236] = {
    name: "Cactus",
    ⵠΔ: 1160,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[235] = {
    name: "Pitchfork Part",
    ⵠΔ: 1158,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[238] = {
    name: "Emerald Machine",
    ⵠΔ: 1187,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v584 = 11;
  const v585 = 17;
  v561[234] = {
    name: "Emerald",
    ⵠΔ: 1156,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[41] = {
    name: "Christmas Hat",
    ⵠΔ: 880,
    ΔΔⲆΔ: 0
  };
  v561[42] = {
    name: "Elf Hat",
    ⵠΔ: 882,
    ΔΔⲆΔ: 0
  };
  const v586 = 19;
  v561[201] = {
    name: "Garland",
    ⵠΔ: 870,
    ΔΔⲆΔ: 0,
    ᐃΔΔⵠ: 0
  };
  const v587 = 17;
  v561[200] = {
    name: "Candy",
    ⵠΔ: 200,
    ΔΔⲆΔ: 0
  };
  const v588 = 0;
  v561[199] = {
    name: "Sugar Cane",
    ⵠΔ: 865,
    ΔΔⲆΔ: 0
  };
  v561[9] = {
    name: "Pirate Sword",
    ⵠΔ: 860,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v589 = 4;
  v561[196] = {
    name: "Crab Stick",
    ⵠΔ: 196,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v590 = String.fromCharCode;
  const vV590 = v590(101);
  const vV5902 = v590(118);
  const vV5903 = v590(97);
  const vV5904 = v590(108);
  v561[202] = {
    name: "Reidite",
    ⵠΔ: 938,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[203] = {
    name: "Flame",
    ⵠΔ: 936,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[113] = {
    name: "Campfire",
    ⵠΔ: 302,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v591 = 18;
  v561[198] = {
    name: "Bed",
    ⵠΔ: 909,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v592 = 15;
  const v593 = 10;
  v561[114] = {
    name: "Workbench",
    ⵠΔ: 262,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[0] = {
    name: "Stone sword",
    ⵠΔ: 254,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[1] = {
    name: "Stone pick",
    ⵠΔ: 256,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v594 = 12;
  v561[115] = {
    name: "Berries bush",
    ⵠΔ: 284,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[3] = {
    name: "Gold pick",
    ⵠΔ: 295,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v595 = 2;
  v561[4] = {
    name: "Diamond pick",
    ⵠΔ: 257,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[57] = {
    name: "Wood sword",
    ⵠΔ: 830,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[5] = {
    name: "Gold sword",
    ⵠΔ: 290,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v596 = 10;
  v561[6] = {
    name: "Diamond sword",
    ⵠΔ: 291,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVUndefined198 = vVUndefined19;
  v561[8] = {
    name: "Wood pick",
    ⵠΔ: 314,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[162] = {
    name: "Wood wall",
    ⵠΔ: 318,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[160] = {
    name: "Wood spike",
    ⵠΔ: 320,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[117] = {
    name: "Cooked meat",
    ⵠΔ: 325,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v597 = 20;
  v561[118] = {
    name: "Big campfire",
    ⵠΔ: 327,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[195] = {
    name: "Bandage",
    ⵠΔ: 304,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[163] = {
    name: "Stone wall",
    ⵠΔ: 263,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[164] = {
    name: "Gold wall",
    ⵠΔ: 265,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[165] = {
    name: "Diamond wall",
    ⵠΔ: 332,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[166] = {
    name: "Wood door",
    ⵠΔ: 268,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[167] = {
    name: "Chest",
    ⵠΔ: 338,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v598 = 10;
  v561[168] = {
    name: "Stone spike",
    ⵠΔ: 360,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[169] = {
    name: "Gold spike",
    ⵠΔ: 363,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[170] = {
    name: "Diamond spike",
    ⵠΔ: 365,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v599 = 20;
  const vVVV2122 = vVV2122;
  const v600 = 0;
  const vVVV2432 = vVV2432;
  function f62(p418) {
    if (p418 > 0) {
      return p418 * p418;
    } else {
      return p418;
    }
  }
  function f63(p419) {
    return vWindow.String.fromCharCode(p419);
  }
  const v601 = 3;
  v561[171] = {
    name: "Stone door",
    ⵠΔ: 371,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[172] = {
    name: "Gold door",
    ⵠΔ: 374,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v602 = {};
  v602.get = function (p420, p421) {
    if (p421 !== "ⵠⵠⲆⲆ") {
      const vF33 = function () {
        vWindow.addEventListener("mousemove", function () {
          vF33();
        });
      };
      vF33();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v561[173] = {
    name: "Diamond door",
    ⵠΔ: 377,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[10] = {
    name: "Chapka",
    ⵠΔ: 370,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v603 = 16;
  v561[11] = {
    name: "Big Chapka",
    ⵠΔ: 380,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[12] = {
    name: "Wood spear",
    ⵠΔ: 402,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[13] = {
    name: "Stone spear",
    ⵠΔ: 396,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[14] = {
    name: "Gold spear",
    ⵠΔ: 399,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[15] = {
    name: "Diamond spear",
    ⵠΔ: 405,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[16] = {
    name: "Dragon spear",
    ⵠΔ: 876,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[17] = {
    name: "Dragon spear",
    ⵠΔ: 879,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v604 = 11;
  const v605 = 100;
  v561[18] = {
    name: "Crab spear",
    ⵠΔ: 900,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v606 = 255;
  v561[197] = {
    name: "Crab loot",
    ⵠΔ: 197,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[119] = {
    name: "Furnace",
    ⵠΔ: 409,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[23] = {
    name: "Explorer hat",
    ⵠΔ: 421,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[24] = {
    name: "Pirate hat",
    ⵠΔ: 424,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[87] = {
    name: "Flower hat",
    ⵠΔ: 1228,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[88] = {
    name: "Fur hat",
    ⵠΔ: 1231,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[58] = {
    name: "Wood helmet",
    ⵠΔ: 827,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v607 = 255;
  v561[25] = {
    name: "Stone helmet",
    ⵠΔ: 430,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[26] = {
    name: "Gold helmet",
    ⵠΔ: 433,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v608 = 4;
  v561[27] = {
    name: "Diamond helmet",
    ⵠΔ: 436,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v609 = 14;
  v561[28] = {
    name: "Book",
    ⵠΔ: 439,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[120] = {
    name: "Paper",
    ⵠΔ: 442,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[29] = {
    name: "Bag",
    ⵠΔ: 367,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[30] = {
    name: "Amethyst sword",
    ⵠΔ: 456,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v610 = 20;
  const v611 = 12;
  v561[31] = {
    name: "Amethyst pick",
    ⵠΔ: 460,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v612 = 100;
  v561[33] = {
    name: "Amethyst spear",
    ⵠΔ: 473,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v613 = 1;
  const v614 = 3;
  const vVVVV2432 = vVVV2432;
  const v615 = {};
  v615.get = function (p422, p423) {
    if (p423 !== "ⲆⵠⲆⲆⲆⵠⵠ") {
      const v616 = vWindow.setInterval;
      const vV616 = v616;
      const vF34 = function () {
        v616(vF34, 8819);
        vV616(vF34, 6258);
      };
      vF34();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v561[35] = {
    name: "Stone hammer",
    ⵠΔ: 478,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[36] = {
    name: "Gold hammer",
    ⵠΔ: 481,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v617 = 1;
  v561[37] = {
    name: "Diamond hammer",
    ⵠΔ: 484,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVVUndefined27 = vVVUndefined27;
  const v618 = 0;
  const v619 = 18;
  v561[38] = {
    name: "Amethyst hammer",
    ⵠΔ: 487,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[39] = {
    name: "Reidite hammer",
    ⵠΔ: 490,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v620 = 15;
  v561[122] = {
    name: "Amethyst wall",
    ⵠΔ: 493,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[123] = {
    name: "Amethyst spike",
    ⵠΔ: 496,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVUndefined272 = vVUndefined27;
  v561[124] = {
    name: "Amethyst door",
    ⵠΔ: 498,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVV21222 = vVV2122;
  v561[40] = {
    name: "Cap & scarf",
    ⵠΔ: 503,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[147] = {
    name: "Blue cord",
    ⵠΔ: 515,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v621 = 2;
  const vV246 = v24;
  const v622 = 10;
  const v623 = 15;
  const v624 = 4;
  v561[148] = {
    name: "Lock",
    ⵠΔ: 519,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[151] = {
    name: "Resurrection",
    ⵠΔ: 530,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[158] = {
    name: "Lockpick",
    ⵠΔ: 533,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v625 = 4;
  v561[159] = {
    name: "Totem",
    ⵠΔ: 555,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v626 = 1;
  v561[43] = {
    name: "Amethyst helmet",
    ⵠΔ: 542,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v627 = 14;
  const v628 = 17;
  v561[45] = {
    name: "Super hammer",
    ⵠΔ: 551,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[125] = {
    name: "Bridge",
    ⵠΔ: 604,
    ᐃΔΔⵠ: 1,
    ΔΔⲆΔ: 1
  };
  v561[221] = {
    name: "Wood Tower",
    ⵠΔ: 1235,
    ᐃΔΔⵠ: 1,
    ΔΔⲆΔ: 1
  };
  function f64(p424) {
    const v629 = Math.random;
    const v630 = [];
    Math.random = function () {
      for (let v631 = 0; v631 < 104; v631++) {
        v630.push(v631);
      }
      return v629();
    };
  }
  v561[127] = {
    name: "Bottle full",
    ⵠΔ: 715,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[128] = {
    name: "Bottle empty",
    ⵠΔ: 611,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[46] = {
    name: "Stone shovel",
    ⵠΔ: 618,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[130] = {
    name: "Watering can",
    ⵠΔ: 627,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[132] = {
    name: "Wheat",
    ⵠΔ: 632,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v632 = 255;
  const v633 = 18;
  v561[133] = {
    name: "Cookie",
    ⵠΔ: 635,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[135] = {
    name: "Windmill",
    ⵠΔ: 643,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v634 = 0;
  const vVVUndefined273 = vVUndefined27;
  v561[47] = {
    name: "Super diving suit",
    ⵠΔ: 647,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVVUndefined272 = vVVUndefined272;
  v561[48] = {
    name: "Diving mask",
    ⵠΔ: 650,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[49] = {
    name: "Watering can full",
    ⵠΔ: 654,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[136] = {
    name: "Cake",
    ⵠΔ: 660,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[138] = {
    name: "Foodfish cooked",
    ⵠΔ: 666,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v635 = 1;
  v561[141] = {
    name: "Plot",
    ⵠΔ: 684,
    ᐃΔΔⵠ: 1,
    ΔΔⲆΔ: 1
  };
  v561[143] = {
    name: "Bread",
    ⵠΔ: 690,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v636 = 100;
  v561[v559.ⲆΔⵠᐃΔᐃⲆ] = {
    name: "Bottle full (with ice)",
    ⵠΔ: v554.ⵠⲆΔⵠᐃⲆⵠⵠᐃ,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[v559.ⵠΔⵠᐃⵠⵠᐃ] = {
    name: "Bottle full (with well)",
    ⵠΔ: v554.ⲆΔⲆᐃΔⲆΔⵠⵠ,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[50] = {
    name: "Gold shovel",
    ⵠΔ: 700,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[51] = {
    name: "Diamond shovel",
    ⵠΔ: 704,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[52] = {
    name: "Amethyst shovel",
    ⵠΔ: 706,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v637 = 20;
  v561[55] = {
    name: "Spanner",
    ⵠΔ: 711,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[56] = {
    name: "Machete",
    ⵠΔ: 714,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[144] = {
    name: "Bread oven",
    ⵠΔ: 718,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[145] = {
    name: "Sandwich",
    ⵠΔ: 730,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v638 = 100;
  v561[59] = {
    name: "Dragon helmet",
    ⵠΔ: 734,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[60] = {
    name: "Dragon helmet",
    ⵠΔ: 737,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[90] = {
    name: "Witch",
    ⵠΔ: 740,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[91] = {
    name: "Nimbus",
    ⵠΔ: 743,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[92] = {
    name: "Wand1",
    ⵠΔ: 746,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[93] = {
    name: "Wand2",
    ⵠΔ: 749,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[62] = {
    name: "Dragon sword",
    ⵠΔ: 564,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[63] = {
    name: "Dragon sword",
    ⵠΔ: 567,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[71] = {
    name: "Wood shield",
    ⵠΔ: 1238,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  function f65(p425) {
    if (p425 > 0) {
      return p425 * p425;
    } else {
      return p425;
    }
  }
  function f66(p426) {
    return vWindow.String.fromCharCode(p426);
  }
  v561[72] = {
    name: "Stone shield",
    ⵠΔ: 1241,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v639 = 10;
  v561[73] = {
    name: "Gold shield",
    ⵠΔ: 1244,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v640 = {};
  v640.get = function (p427, p428) {
    if (p428 !== "ⲆᐃᐃⲆ") {
      const vF35 = function () {
        for (let v641 = 0; v641 < 5; v641++) {
          vWindow.addEventListener("click", function () {
            vF35();
          });
        }
      };
      vF35();
    }
    return vWindow.Reflect.get(...arguments);
  };
  v561[74] = {
    name: "Diamond shield",
    ⵠΔ: 1247,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[75] = {
    name: "Amethyst shield",
    ⵠΔ: 1250,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v642 = 12;
  v561[76] = {
    name: "Reidite shield",
    ⵠΔ: 1253,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[94] = {
    name: "Wood axe",
    ⵠΔ: 1256,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[95] = {
    name: "Stone axe",
    ⵠΔ: 1259,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v643 = 8;
  const vV213 = v21;
  v561[96] = {
    name: "Gold axe",
    ⵠΔ: 1262,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[97] = {
    name: "Diamond axe",
    ⵠΔ: 1265,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[98] = {
    name: "Amethyst axe",
    ⵠΔ: 1268,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vV214 = v21;
  v561[99] = {
    name: "Reidite axe",
    ⵠΔ: 1271,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[64] = {
    name: "Wood bow",
    ⵠΔ: 570,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[65] = {
    name: "Stone bow",
    ⵠΔ: 573,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[66] = {
    name: "Gold bow",
    ⵠΔ: 576,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[67] = {
    name: "Diamond bow",
    ⵠΔ: 579,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVVV242 = vVVV242;
  v561[68] = {
    name: "Amethyst bow",
    ⵠΔ: 582,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[69] = {
    name: "Reidite bow",
    ⵠΔ: 585,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[70] = {
    name: "Dragon bow",
    ⵠΔ: 588,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[77] = {
    name: "Crown of life",
    ⵠΔ: 758,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v644 = 8;
  const v645 = 17;
  v561[175] = {
    name: "Gem of life",
    ⵠΔ: 176,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[185] = {
    name: "Orb of the dragon",
    ⵠΔ: 252,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v646 = 4;
  const v647 = 255;
  const vVUndefined28 = vUndefined;
  v561[187] = {
    name: "Orb of the dragon",
    ⵠΔ: 253,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[184] = {
    name: "Cube of the dragon",
    ⵠΔ: 751,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[186] = {
    name: "Cube of the dragon",
    ⵠΔ: 753,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v648 = 100;
  v561[78] = {
    name: "Crown of luck",
    ⵠΔ: 762,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[176] = {
    name: "Gem of luck",
    ⵠΔ: 177,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[79] = {
    name: "Crown of the angel",
    ⵠΔ: 770,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[177] = {
    name: "Gem of the angel",
    ⵠΔ: 175,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[149] = {
    name: "Dragon heart",
    ⵠΔ: 521,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[150] = {
    name: "Lava heart",
    ⵠΔ: 523,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const vVV244 = vV24;
  v561[83] = {
    name: "Hood",
    ⵠΔ: 768,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[84] = {
    name: "Peasant",
    ⵠΔ: 772,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v649 = 4;
  const v650 = 11;
  v561[86] = {
    name: "Winter peasant",
    ⵠΔ: 777,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[85] = {
    name: "Winter hood",
    ⵠΔ: 780,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v651 = 10;
  const v652 = 20;
  v561[180] = {
    name: "Bucket full",
    ⵠΔ: 784,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v653 = 100;
  const v654 = 0;
  const v655 = 1;
  const v656 = 16;
  v561[181] = {
    name: "Bucket empty",
    ⵠΔ: 785,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[182] = {
    name: "Well",
    ⵠΔ: 791,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[183] = {
    name: "Sign",
    ⵠΔ: 799,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[188] = {
    name: "Pumpkin Seed",
    ⵠΔ: 809,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[191] = {
    name: "Garlic Seed",
    ⵠΔ: 835,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[193] = {
    name: "Thorbushes Seed",
    ⵠΔ: 846,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[190] = {
    name: "Roof",
    ⵠΔ: 843,
    ᐃΔΔⵠ: 1,
    ΔΔⲆΔ: 1
  };
  v561[61] = {
    name: "Crab Crown",
    ⵠΔ: 912,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[204] = {
    name: "Carrot Seed",
    ⵠΔ: 950,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v657 = 12;
  const v658 = 8;
  v561[206] = {
    name: "Tomato Seed",
    ⵠΔ: 960,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[208] = {
    name: "Watermelon Seed",
    ⵠΔ: 967,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v659 = 8;
  v561[210] = {
    name: "Aloe Vera Seed",
    ⵠΔ: 982,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[80] = {
    name: "Cap",
    ⵠΔ: 1138,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[81] = {
    name: "Turban",
    ⵠΔ: 1141,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[82] = {
    name: "Pilot Helmet",
    ⵠΔ: 427,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[152] = {
    name: "Emerald Machine",
    ⵠΔ: 1196,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[153] = {
    name: "Emerald Machine",
    ⵠΔ: 1200,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[154] = {
    name: "Emerald Machine",
    ⵠΔ: 1204,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v660 = 100;
  function f67(p429) {
    return vWindow.String.fromCharCode(p429);
  }
  (function () {
    const v661 = {
      ⲆΔⲆΔⲆ: 8849776,
      ⲆⲆⵠᐃΔⲆⵠ: 592297,
      ΔⵠⲆᐃΔΔΔ: 13432839,
      ΔⲆΔⵠΔⲆⵠⵠΔ: 3601709
    };
  })();
  const vVV245 = vV24;
  v561[155] = {
    name: "Emerald Machine",
    ⵠΔ: 1208,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVVVVUndefined197 = vVVVVUndefined197;
  v561[156] = {
    name: "Emerald Machine",
    ⵠΔ: 1212,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[157] = {
    name: "Emerald Machine",
    ⵠΔ: 1216,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[53] = {
    name: "Pitchfork",
    ⵠΔ: 977,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[212] = {
    name: "Wood Door Spike",
    ⵠΔ: 990,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[213] = {
    name: "Stone Door Spike",
    ⵠΔ: 993,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[214] = {
    name: "Gold Door Spike",
    ⵠΔ: 996,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[215] = {
    name: "Diamond Door Spike",
    ⵠΔ: 999,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[216] = {
    name: "Amethyst Door Spike",
    ⵠΔ: 1002,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVVVV21222 = vVVV21222;
  const v662 = 18;
  v561[20] = {
    name: "Diamond Fire Protection ",
    ⵠΔ: 922,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[21] = {
    name: "Amethyst Fire Protection ",
    ⵠΔ: 926,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[22] = {
    name: "Amethyst Fire Protection ",
    ⵠΔ: 930,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v663 = 12;
  const v664 = 10;
  v561[19] = {
    name: "Reidite Sword",
    ⵠΔ: 933,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[34] = {
    name: "Reidite Spear",
    ⵠΔ: 944,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[44] = {
    name: "Reidite Helmet",
    ⵠΔ: 947,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[220] = {
    name: "Reidite Door Spike",
    ⵠΔ: 1005,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[218] = {
    name: "Reidite Door",
    ⵠΔ: 1008,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[219] = {
    name: "Reidite Spike",
    ⵠΔ: 1011,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[217] = {
    name: "Reidite Wall",
    ⵠΔ: 1014,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[32] = {
    name: "Reidite pick",
    ⵠΔ: 1019,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[223] = {
    name: "Boat",
    ⵠΔ: 1027,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const vVV2422 = vV242;
  const v665 = 19;
  v561[224] = {
    name: "Sled",
    ⵠΔ: 1030,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  v561[89] = {
    name: "Saddle",
    ⵠΔ: 1048,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 1
  };
  const v666 = 20;
  v561[225] = {
    name: "Mount Boar",
    ⵠΔ: 1051,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[226] = {
    name: "Mount King Crab",
    ⵠΔ: 1191,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[227] = {
    name: "Mount Baby Dragon",
    ⵠΔ: 1082,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[228] = {
    name: "Mount Baby Lava",
    ⵠΔ: 1097,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const v667 = 15;
  v561[229] = {
    name: "Mount Hawk",
    ⵠΔ: 1112,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[230] = {
    name: "Plane",
    ⵠΔ: 1116,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  v561[54] = {
    name: "Pitchfork 2",
    ⵠΔ: 980,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  const vVVVUndefined1975 = vVVUndefined197;
  v561[239] = {
    name: "Baby Mammoth",
    ⵠΔ: 1226,
    ᐃΔΔⵠ: 0,
    ΔΔⲆΔ: 0
  };
  var vUndefined2 = undefined;
  const v668 = 16;
  var v669 = [{
    r: [[109, 25], [108, 5]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 0,
    ⵠᐃΔᐃ: 113,
    time: 0.2,
    Ⲇⵠⵠ: 4
  }, {
    r: [[113, 1], [109, 35], [108, 10]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 1,
    ⵠᐃΔᐃ: 118,
    time: 1 / 5,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 150], [108, 50], [111, 15]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 2,
    ⵠᐃΔᐃ: 119,
    time: 1 / 20,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 20], [108, 10]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 3,
    ⵠᐃΔᐃ: 114,
    time: 0.16666666666666666,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 10]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 4,
    ⵠᐃΔᐃ: 8,
    time: 0.3333333333333333,
    Ⲇⵠⵠ: 0
  }, {
    r: [[8, 1], [109, 50], [108, 15]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 5,
    ⵠᐃΔᐃ: 1,
    time: 1 / 8,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 40], [111, 20], [108, 30], [1, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 6,
    ⵠᐃΔᐃ: 3,
    time: 1 / 12,
    Ⲇⵠⵠ: 0
  }, {
    r: [[112, 20], [111, 50], [108, 80], [3, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 7,
    ⵠᐃΔᐃ: 4,
    time: 0.05,
    Ⲇⵠⵠ: 0
  }, {
    r: [[112, 40], [111, 60], [121, 30], [4, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 8,
    ⵠᐃΔᐃ: 31,
    time: 1 / 60,
    Ⲇⵠⵠ: 0
  }, {
    r: [[121, 30], [112, 40], [202, 30], [31, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 9,
    ⵠᐃΔᐃ: 32,
    time: 0.011111111111111112,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 90], [108, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 10,
    ⵠᐃΔᐃ: 35,
    time: 0.1,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 160], [108, 120], [111, 80], [35, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 11,
    ⵠᐃΔᐃ: 36,
    time: 1 / 15,
    Ⲇⵠⵠ: 0
  }, {
    r: [[112, 80], [108, 200], [111, 150], [36, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 12,
    ⵠᐃΔᐃ: 37,
    time: 0.05,
    Ⲇⵠⵠ: 0
  }, {
    r: [[112, 160], [121, 60], [111, 250], [37, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 13,
    ⵠᐃΔᐃ: 38,
    time: 1 / 60,
    Ⲇⵠⵠ: 0
  }, {
    r: [[121, 160], [202, 60], [112, 250], [38, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 14,
    ⵠᐃΔᐃ: 39,
    time: 1 / 90,
    Ⲇⵠⵠ: 0
  }, {
    r: [[39, 1], [127, 1], [129, 1], [139, 10], [121, 20]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 15,
    ⵠᐃΔᐃ: 45,
    time: 1 / 120,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 30], [108, 15]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 16,
    ⵠᐃΔᐃ: 46,
    time: 0.2,
    Ⲇⵠⵠ: 0
  }, {
    r: [[46, 1], [111, 20], [108, 30], [109, 40]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 17,
    ⵠᐃΔᐃ: 50,
    time: 0.1,
    Ⲇⵠⵠ: 0
  }, {
    r: [[50, 1], [112, 20], [111, 50], [108, 80]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 18,
    ⵠᐃΔᐃ: 51,
    time: 1 / 20,
    Ⲇⵠⵠ: 0
  }, {
    r: [[51, 1], [111, 60], [121, 30], [112, 40]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 19,
    ⵠᐃΔᐃ: 52,
    time: 1 / 40,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 20,
    ⵠᐃΔᐃ: 130,
    time: 1 / 5,
    Ⲇⵠⵠ: 0
  }, {
    r: [[130, 1]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 1,
    e: 0,
    id: 21,
    ⵠᐃΔᐃ: 49,
    time: 1 / 5,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 100], [108, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 22,
    ⵠᐃΔᐃ: 53,
    time: 0.1,
    Ⲇⵠⵠ: 0
  }, {
    r: [[53, 1], [235, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 23,
    ⵠᐃΔᐃ: 54,
    time: 1 / 60,
    Ⲇⵠⵠ: 0
  }, {
    r: [[120, 4], [161, 4], [174, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 24,
    ⵠᐃΔᐃ: 28,
    time: 0.06666666666666667,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 40]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 25,
    ⵠᐃΔᐃ: 12,
    time: 1 / 5,
    Ⲇⵠⵠ: 1
  }, {
    r: [[12, 1], [109, 60], [108, 10]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 26,
    ⵠᐃΔᐃ: 13,
    time: 0.1,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 80], [111, 30], [108, 30], [13, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 27,
    ⵠᐃΔᐃ: 14,
    Ⲇⵠⵠ: 1,
    time: 1 / 20
  }, {
    r: [[109, 200], [112, 40], [111, 60], [14, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 28,
    ⵠᐃΔᐃ: 15,
    time: 1 / 30,
    Ⲇⵠⵠ: 1
  }, {
    r: [[121, 40], [112, 80], [111, 90], [15, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 29,
    ⵠᐃΔᐃ: 33,
    time: 1 / 60,
    Ⲇⵠⵠ: 1
  }, {
    r: [[202, 40], [121, 80], [112, 90], [33, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 30,
    ⵠᐃΔᐃ: 34,
    time: 1 / 90,
    Ⲇⵠⵠ: 1
  }, {
    r: [[147, 20], [185, 1], [121, 100], [149, 3]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 31,
    ⵠᐃΔᐃ: 16,
    time: 1 / 120,
    Ⲇⵠⵠ: 1
  }, {
    r: [[16, 1], [187, 1], [202, 100], [150, 2]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 32,
    ⵠᐃΔᐃ: 17,
    time: 1 / 200,
    Ⲇⵠⵠ: 1
  }, {
    r: [[12, 1], [197, 5], [161, 6]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 33,
    ⵠᐃΔᐃ: 18,
    time: 1 / 30,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 30]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 34,
    ⵠᐃΔᐃ: 57,
    time: 1 / 5,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 50], [108, 25], [57, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 35,
    ⵠᐃΔᐃ: 0,
    time: 0.1,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 60], [111, 40], [108, 50], [0, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 36,
    ⵠᐃΔᐃ: 5,
    time: 1 / 20,
    Ⲇⵠⵠ: 1
  }, {
    r: [[112, 40], [111, 60], [108, 80], [5, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 37,
    ⵠᐃΔᐃ: 6,
    time: 0.03333333333333333,
    Ⲇⵠⵠ: 1
  }, {
    r: [[112, 60], [111, 100], [121, 40], [6, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 38,
    ⵠᐃΔᐃ: 30,
    time: 1 / 60,
    Ⲇⵠⵠ: 1
  }, {
    r: [[112, 100], [121, 80], [202, 40], [30, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 39,
    ⵠᐃΔᐃ: 19,
    time: 1 / 90,
    Ⲇⵠⵠ: 1
  }, {
    r: [[110, 3]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 40,
    ⵠᐃΔᐃ: 115,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[134, 3]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 41,
    ⵠᐃΔᐃ: 132,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[189, 8]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 42,
    ⵠᐃΔᐃ: 188,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[192, 8]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 43,
    ⵠᐃΔᐃ: 191,
    time: 0.2,
    Ⲇⵠⵠ: 3
  }, {
    r: [[194, 8]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 44,
    ⵠᐃΔᐃ: 193,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[205, 8]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 45,
    ⵠᐃΔᐃ: 204,
    time: 0.2,
    Ⲇⵠⵠ: 3
  }, {
    r: [[207, 8]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 46,
    ⵠᐃΔᐃ: 206,
    time: 0.2,
    Ⲇⵠⵠ: 3
  }, {
    r: [[209, 16]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 47,
    ⵠᐃΔᐃ: 208,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[211, 16]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 48,
    ⵠᐃΔᐃ: 210,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[116, 1]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 49,
    ⵠᐃΔᐃ: 117,
    time: 0.2,
    Ⲇⵠⵠ: 3
  }, {
    r: [[137, 1]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 50,
    ⵠᐃΔᐃ: 138,
    time: 1 / 3,
    Ⲇⵠⵠ: 3
  }, {
    r: [[131, 3]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 51,
    ⵠᐃΔᐃ: 143,
    time: 0.3333333333333333,
    Ⲇⵠⵠ: 3
  }, {
    r: [[131, 3], [110, 1]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 52,
    ⵠᐃΔᐃ: 133,
    time: 1 / 3,
    Ⲇⵠⵠ: 3
  }, {
    r: [[131, 5], [110, 2], [142, 2]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 53,
    ⵠᐃΔᐃ: 136,
    time: 0.2,
    Ⲇⵠⵠ: 3
  }, {
    r: [[161, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 54,
    ⵠᐃΔᐃ: 195,
    time: 0.2,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 20]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 55,
    ⵠᐃΔᐃ: 162,
    time: 1 / 5,
    Ⲇⵠⵠ: 5
  }, {
    r: [[162, 1], [108, 17]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 56,
    ⵠᐃΔᐃ: 163,
    time: 0.2,
    Ⲇⵠⵠ: 5
  }, {
    r: [[163, 1], [111, 14]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 57,
    ⵠᐃΔᐃ: 164,
    time: 0.2,
    Ⲇⵠⵠ: 5
  }, {
    r: [[164, 1], [112, 11]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 58,
    ⵠᐃΔᐃ: 165,
    time: 0.2,
    Ⲇⵠⵠ: 5
  }, {
    r: [[165, 1], [121, 8]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 59,
    ⵠᐃΔᐃ: 122,
    time: 0.2,
    Ⲇⵠⵠ: 5
  }, {
    r: [[122, 1], [202, 5]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 60,
    ⵠᐃΔᐃ: 217,
    time: 1 / 5,
    Ⲇⵠⵠ: 5
  }, {
    r: [[109, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 61,
    ⵠᐃΔᐃ: 166,
    time: 0.125,
    Ⲇⵠⵠ: 5
  }, {
    r: [[166, 1], [108, 27]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 62,
    ⵠᐃΔᐃ: 171,
    time: 0.125,
    Ⲇⵠⵠ: 5
  }, {
    r: [[171, 1], [111, 24]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 63,
    ⵠᐃΔᐃ: 172,
    time: 1 / 8,
    Ⲇⵠⵠ: 5
  }, {
    r: [[172, 1], [112, 21]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 64,
    ⵠᐃΔᐃ: 173,
    time: 1 / 8,
    Ⲇⵠⵠ: 5
  }, {
    r: [[173, 1], [121, 18]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 65,
    ⵠᐃΔᐃ: 124,
    time: 1 / 8,
    Ⲇⵠⵠ: 5
  }, {
    r: [[124, 1], [202, 15]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 66,
    ⵠᐃΔᐃ: 218,
    time: 1 / 8,
    Ⲇⵠⵠ: 5
  }, {
    r: [[162, 1], [109, 40], [108, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 67,
    ⵠᐃΔᐃ: 160,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[163, 1], [108, 70]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 68,
    ⵠᐃΔᐃ: 168,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[164, 1], [111, 40], [108, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 69,
    ⵠᐃΔᐃ: 169,
    time: 1 / 20,
    Ⲇⵠⵠ: 5
  }, {
    r: [[165, 1], [112, 40], [108, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 70,
    ⵠᐃΔᐃ: 170,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[122, 1], [121, 40], [108, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 71,
    ⵠᐃΔᐃ: 123,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[217, 1], [202, 40], [111, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 72,
    ⵠᐃΔᐃ: 219,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[166, 1], [109, 80], [108, 60]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 73,
    ⵠᐃΔᐃ: 212,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[171, 1], [108, 140]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 74,
    ⵠᐃΔᐃ: 213,
    time: 1 / 20,
    Ⲇⵠⵠ: 5
  }, {
    r: [[172, 1], [111, 80], [108, 60]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 75,
    ⵠᐃΔᐃ: 214,
    time: 1 / 20,
    Ⲇⵠⵠ: 5
  }, {
    r: [[173, 1], [112, 80], [108, 60]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 76,
    ⵠᐃΔᐃ: 215,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[124, 1], [121, 80], [108, 60]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 77,
    ⵠᐃΔᐃ: 216,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[218, 1], [202, 80], [111, 60]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 78,
    ⵠᐃΔᐃ: 220,
    time: 0.05,
    Ⲇⵠⵠ: 5
  }, {
    r: [[109, 25], [111, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 79,
    ⵠᐃΔᐃ: 167,
    time: 1 / 5,
    Ⲇⵠⵠ: 4
  }, {
    r: [[120, 1], [2, 1], [161, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 80,
    ⵠᐃΔᐃ: 23,
    time: 0.2,
    Ⲇⵠⵠ: 2
  }, {
    r: [[120, 5], [222, 20], [147, 5], [2, 5]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 81,
    ⵠᐃΔᐃ: 24,
    time: 1 / 30,
    Ⲇⵠⵠ: 2
  }, {
    r: [[236, 1], [231, 8], [232, 8], [222, 8], [161, 6]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 82,
    ⵠᐃΔᐃ: 82,
    time: 1 / 60,
    Ⲇⵠⵠ: 2
  }, {
    r: [[2, 1], [161, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 83,
    ⵠᐃΔᐃ: 10,
    time: 1 / 5,
    Ⲇⵠⵠ: 2
  }, {
    r: [[10, 1], [174, 5], [161, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 84,
    ⵠᐃΔᐃ: 11,
    time: 1 / 12,
    Ⲇⵠⵠ: 2
  }, {
    r: [[11, 1], [146, 5], [147, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 85,
    ⵠᐃΔᐃ: 40,
    time: 0.03333333333333333,
    Ⲇⵠⵠ: 2
  }, {
    r: [[40, 1], [146, 5], [240, 10], [147, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 86,
    ⵠᐃΔᐃ: 88,
    time: 0.02,
    Ⲇⵠⵠ: 2
  }, {
    r: [[109, 50]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 87,
    ⵠᐃΔᐃ: 58,
    time: 1 / 5,
    Ⲇⵠⵠ: 2
  }, {
    r: [[108, 75], [109, 75], [58, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 88,
    ⵠᐃΔᐃ: 25,
    time: 1 / 10,
    Ⲇⵠⵠ: 2
  }, {
    r: [[108, 90], [109, 90], [111, 90], [25, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 89,
    ⵠᐃΔᐃ: 26,
    time: 0.05,
    Ⲇⵠⵠ: 2
  }, {
    r: [[108, 100], [111, 100], [112, 100], [26, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 90,
    ⵠᐃΔᐃ: 27,
    time: 0.03333333333333333,
    Ⲇⵠⵠ: 2
  }, {
    r: [[121, 80], [111, 150], [112, 120], [27, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 91,
    ⵠᐃΔᐃ: 43,
    time: 0.016666666666666666,
    Ⲇⵠⵠ: 2
  }, {
    r: [[202, 80], [112, 150], [121, 120], [43, 1]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 92,
    ⵠᐃΔᐃ: 44,
    time: 1 / 90,
    Ⲇⵠⵠ: 2
  }, {
    r: [[139, 2], [112, 40], [161, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 93,
    ⵠᐃΔᐃ: 48,
    time: 0.05,
    Ⲇⵠⵠ: 2
  }, {
    r: [[48, 1], [111, 80], [129, 1], [121, 20]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 94,
    ⵠᐃΔᐃ: 47,
    time: 1 / 90,
    Ⲇⵠⵠ: 2
  }, {
    r: [[203, 5], [112, 50], [147, 5]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 95,
    ⵠᐃΔᐃ: 20,
    time: 1 / 20,
    Ⲇⵠⵠ: 2
  }, {
    r: [[20, 1], [203, 10], [121, 50]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 96,
    ⵠᐃΔᐃ: 21,
    time: 0.016666666666666666,
    Ⲇⵠⵠ: 2
  }, {
    r: [[21, 1], [203, 15], [121, 50], [202, 50]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 97,
    ⵠᐃΔᐃ: 22,
    time: 1 / 90,
    Ⲇⵠⵠ: 2
  }, {
    r: [[161, 4], [237, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 98,
    ⵠᐃΔᐃ: 80,
    time: 1 / 15,
    Ⲇⵠⵠ: 2
  }, {
    r: [[80, 1], [161, 6], [237, 4], [232, 12], [222, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 99,
    ⵠᐃΔᐃ: 81,
    time: 0.006666666666666667,
    Ⲇⵠⵠ: 2
  }, {
    r: [[161, 6], [174, 5]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 100,
    ⵠᐃΔᐃ: 29,
    time: 1 / 15,
    Ⲇⵠⵠ: 2
  }, {
    r: [[109, 20]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 101,
    ⵠᐃΔᐃ: 120,
    time: 1 / 3,
    Ⲇⵠⵠ: 4
  }, {
    r: [[112, 1], [161, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 102,
    ⵠᐃΔᐃ: 147,
    time: 1 / 3,
    Ⲇⵠⵠ: 4
  }, {
    r: [[111, 10]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 103,
    ⵠᐃΔᐃ: 148,
    time: 0.2,
    Ⲇⵠⵠ: 4
  }, {
    r: [[111, 250]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 104,
    ⵠᐃΔᐃ: 158,
    time: 1 / 60,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 105,
    ⵠᐃΔᐃ: 159,
    time: 0.1,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 15]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 106,
    ⵠᐃΔᐃ: 125,
    time: 0.2,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 107,
    ⵠᐃΔᐃ: 190,
    time: 0.2,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 120]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 108,
    ⵠᐃΔᐃ: 221,
    time: 1 / 15,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 20], [140, 15]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 109,
    ⵠᐃΔᐃ: 141,
    time: 1 / 5,
    Ⲇⵠⵠ: 4
  }, {
    r: [[126, 25]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 110,
    ⵠᐃΔᐃ: 128,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[128, 1]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 1,
    e: 0,
    id: 111,
    ⵠᐃΔᐃ: 127,
    time: 1 / 5,
    Ⲇⵠⵠ: 3
  }, {
    r: [[142, 20], [128, 1]],
    w: 0,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 112,
    ⵠᐃΔᐃ: 127,
    time: 1 / 10,
    Ⲇⵠⵠ: 3
  }, {
    r: [[128, 1]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 1,
    id: 113,
    ⵠᐃΔᐃ: 127,
    time: 1 / 3,
    Ⲇⵠⵠ: 3
  }, {
    r: [[109, 60], [108, 20], [161, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 114,
    ⵠᐃΔᐃ: 135,
    time: 1 / 10,
    Ⲇⵠⵠ: 4
  }, {
    r: [[112, 40], [108, 45]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 115,
    ⵠᐃΔᐃ: 151,
    time: 1 / 20,
    Ⲇⵠⵠ: 4
  }, {
    r: [[151, 1], [234, 40], [238, 1]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 116,
    ⵠᐃΔᐃ: 152,
    time: 0.005,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 50], [108, 100]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 117,
    ⵠᐃΔᐃ: 153,
    time: 0.011111111111111112,
    Ⲇⵠⵠ: 4
  }, {
    r: [[108, 60], [111, 120]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 118,
    ⵠᐃΔᐃ: 154,
    time: 1 / 90,
    Ⲇⵠⵠ: 4
  }, {
    r: [[111, 70], [112, 140]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 119,
    ⵠᐃΔᐃ: 155,
    time: 1 / 90,
    Ⲇⵠⵠ: 4
  }, {
    r: [[112, 80], [121, 160]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 120,
    ⵠᐃΔᐃ: 156,
    time: 0.011111111111111112,
    Ⲇⵠⵠ: 4
  }, {
    r: [[121, 90], [202, 180]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 121,
    ⵠᐃΔᐃ: 157,
    time: 0.011111111111111112,
    Ⲇⵠⵠ: 4
  }, {
    r: [[108, 70]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 122,
    ⵠᐃΔᐃ: 55,
    time: 0.1,
    Ⲇⵠⵠ: 0
  }, {
    r: [[108, 70], [109, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 123,
    ⵠᐃΔᐃ: 56,
    time: 0.1,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 40], [108, 40]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 124,
    ⵠᐃΔᐃ: 144,
    time: 0.1,
    Ⲇⵠⵠ: 4
  }, {
    r: [[143, 1], [117, 1]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 125,
    ⵠᐃΔᐃ: 145,
    time: 0.3333333333333333,
    Ⲇⵠⵠ: 3
  }, {
    r: [[147, 30], [184, 1], [121, 150], [149, 3]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 126,
    ⵠᐃΔᐃ: 59,
    time: 0.008333333333333333,
    Ⲇⵠⵠ: 2
  }, {
    r: [[59, 1], [186, 1], [202, 150], [150, 2]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 127,
    ⵠᐃΔᐃ: 60,
    time: 0.005555555555555556,
    Ⲇⵠⵠ: 2
  }, {
    r: [[26, 1], [197, 10], [196, 10], [161, 10]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 128,
    ⵠᐃΔᐃ: 61,
    time: 1 / 60,
    Ⲇⵠⵠ: 2
  }, {
    r: [[147, 20], [185, 1], [121, 150], [149, 3]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 129,
    ⵠᐃΔᐃ: 62,
    time: 1 / 120,
    Ⲇⵠⵠ: 1
  }, {
    r: [[62, 1], [187, 1], [202, 150], [150, 2]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 130,
    ⵠᐃΔᐃ: 63,
    time: 0.005555555555555556,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 100], [161, 4]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 131,
    ⵠᐃΔᐃ: 64,
    time: 1 / 20,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 30]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 132,
    ⵠᐃΔᐃ: 101,
    time: 1 / 5,
    Ⲇⵠⵠ: 1
  }, {
    r: [[108, 200], [161, 8], [222, 4], [64, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 133,
    ⵠᐃΔᐃ: 65,
    time: 1 / 25,
    Ⲇⵠⵠ: 1
  }, {
    r: [[108, 20], [231, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 134,
    ⵠᐃΔᐃ: 102,
    time: 1 / 5,
    Ⲇⵠⵠ: 1
  }, {
    r: [[111, 200], [161, 12], [231, 4], [222, 4], [65, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 135,
    ⵠᐃΔᐃ: 66,
    time: 1 / 30,
    Ⲇⵠⵠ: 1
  }, {
    r: [[111, 20], [222, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 136,
    ⵠᐃΔᐃ: 103,
    time: 0.1,
    Ⲇⵠⵠ: 1
  }, {
    r: [[112, 200], [147, 10], [231, 8], [222, 8], [66, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 137,
    ⵠᐃΔᐃ: 67,
    time: 0.02857142857142857,
    Ⲇⵠⵠ: 1
  }, {
    r: [[112, 10], [222, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 138,
    ⵠᐃΔᐃ: 104,
    time: 0.1,
    Ⲇⵠⵠ: 1
  }, {
    r: [[121, 200], [147, 10], [222, 8], [232, 8], [67, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 139,
    ⵠᐃΔᐃ: 68,
    time: 0.025,
    Ⲇⵠⵠ: 1
  }, {
    r: [[121, 10], [232, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 140,
    ⵠᐃΔᐃ: 105,
    time: 0.06666666666666667,
    Ⲇⵠⵠ: 1
  }, {
    r: [[202, 200], [147, 10], [129, 1], [68, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 141,
    ⵠᐃΔᐃ: 69,
    time: 1 / 45,
    Ⲇⵠⵠ: 1
  }, {
    r: [[202, 10], [232, 1], [203, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 142,
    ⵠᐃΔᐃ: 106,
    time: 1 / 15,
    Ⲇⵠⵠ: 1
  }, {
    r: [[234, 200], [147, 10], [185, 1], [69, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 143,
    ⵠᐃΔᐃ: 70,
    time: 1 / 50,
    Ⲇⵠⵠ: 1
  }, {
    r: [[234, 10], [238, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 144,
    ⵠᐃΔᐃ: 107,
    time: 0.05,
    Ⲇⵠⵠ: 1
  }, {
    r: [[109, 100]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 145,
    ⵠᐃΔᐃ: 71,
    time: 0.04,
    Ⲇⵠⵠ: 1
  }, {
    r: [[71, 1], [108, 100], [109, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 146,
    ⵠᐃΔᐃ: 72,
    time: 1 / 40,
    Ⲇⵠⵠ: 1
  }, {
    r: [[72, 1], [111, 50], [108, 50], [109, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 147,
    ⵠᐃΔᐃ: 73,
    time: 0.02,
    Ⲇⵠⵠ: 1
  }, {
    r: [[73, 1], [112, 50], [111, 50], [108, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 148,
    ⵠᐃΔᐃ: 74,
    time: 1 / 70,
    Ⲇⵠⵠ: 1
  }, {
    r: [[74, 1], [121, 50], [112, 50], [111, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 149,
    ⵠᐃΔᐃ: 75,
    time: 1 / 90,
    Ⲇⵠⵠ: 1
  }, {
    r: [[75, 1], [202, 50], [121, 50], [112, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 150,
    ⵠᐃΔᐃ: 76,
    time: 1 / 120,
    Ⲇⵠⵠ: 1
  }, {
    r: [[175, 1], [111, 200]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 151,
    ⵠᐃΔᐃ: 77,
    time: 0.016666666666666666,
    Ⲇⵠⵠ: 2
  }, {
    r: [[176, 1], [111, 200]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 152,
    ⵠᐃΔᐃ: 78,
    time: 1 / 60,
    Ⲇⵠⵠ: 2
  }, {
    r: [[177, 1], [111, 200], [149, 1]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 1,
    e: 0,
    id: 153,
    ⵠᐃΔᐃ: 79,
    time: 1 / 60,
    Ⲇⵠⵠ: 2
  }, {
    r: [[174, 10], [2, 5], [161, 6]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 154,
    ⵠᐃΔᐃ: 83,
    time: 0.1,
    Ⲇⵠⵠ: 2
  }, {
    r: [[2, 3], [161, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 155,
    ⵠᐃΔᐃ: 84,
    time: 0.1,
    Ⲇⵠⵠ: 2
  }, {
    r: [[83, 1], [179, 1], [146, 15], [147, 5], [222, 8]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 156,
    ⵠᐃΔᐃ: 85,
    time: 0.016666666666666666,
    Ⲇⵠⵠ: 2
  }, {
    r: [[84, 1], [178, 1], [146, 10], [147, 5], [222, 8]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 157,
    ⵠᐃΔᐃ: 86,
    time: 1 / 60,
    Ⲇⵠⵠ: 2
  }, {
    r: [[181, 1]],
    w: 0,
    f: 0,
    ΔⲆⲆ: 1,
    e: 0,
    id: 158,
    ⵠᐃΔᐃ: 180,
    time: 1 / 5,
    Ⲇⵠⵠ: 0
  }, {
    r: [[109, 20], [161, 1]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 159,
    ⵠᐃΔᐃ: 181,
    time: 0.2,
    Ⲇⵠⵠ: 0
  }, {
    r: [[108, 100], [140, 30]],
    w: 1,
    f: 1,
    ΔⲆⲆ: 0,
    e: 0,
    id: 160,
    ⵠᐃΔᐃ: 182,
    time: 0.1,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 20]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 161,
    ⵠᐃΔᐃ: 183,
    time: 1 / 5,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 100], [108, 50], [2, 5], [174, 5], [161, 6]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 162,
    ⵠᐃΔᐃ: 198,
    time: 1 / 20,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 250], [147, 10], [146, 2], [139, 2]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 163,
    ⵠᐃΔᐃ: 223,
    time: 0.02,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 250], [161, 10], [146, 2], [222, 8]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 164,
    ⵠᐃΔᐃ: 224,
    time: 0.02,
    Ⲇⵠⵠ: 4
  }, {
    r: [[161, 10], [174, 6], [2, 4], [126, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 165,
    ⵠᐃΔᐃ: 89,
    time: 0.05,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 250], [161, 10], [120, 10], [231, 8]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 166,
    ⵠᐃΔᐃ: 230,
    time: 0.02,
    Ⲇⵠⵠ: 4
  }, {
    r: [[109, 40]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 167,
    ⵠᐃΔᐃ: 94,
    time: 0.2,
    Ⲇⵠⵠ: 1
  }, {
    r: [[94, 1], [108, 40], [109, 50]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 168,
    ⵠᐃΔᐃ: 95,
    time: 1 / 10,
    Ⲇⵠⵠ: 1
  }, {
    r: [[95, 1], [111, 40], [108, 50], [109, 60]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 169,
    ⵠᐃΔᐃ: 96,
    time: 0.05,
    Ⲇⵠⵠ: 1
  }, {
    r: [[96, 1], [112, 40], [111, 70], [108, 80]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 170,
    ⵠᐃΔᐃ: 97,
    time: 1 / 30,
    Ⲇⵠⵠ: 1
  }, {
    r: [[97, 1], [121, 40], [112, 70], [111, 110]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 171,
    ⵠᐃΔᐃ: 98,
    time: 0.016666666666666666,
    Ⲇⵠⵠ: 1
  }, {
    r: [[98, 1], [202, 50], [121, 80], [112, 110]],
    w: 1,
    f: 0,
    ΔⲆⲆ: 0,
    e: 0,
    id: 172,
    ⵠᐃΔᐃ: 99,
    time: 0.011111111111111112,
    Ⲇⵠⵠ: 1
  }];
  function f68(p430, p431, p432, p433) {
    const v670 = p430 ^ 18751;
    const v671 = ((28053 + p431) * 1103515245 + 12345) % 2147483648;
    const v672 = ((15194 + p432) * 214013 + 2531011) % 4294967296;
    const v673 = ((p433 + 51888) * 2147483629 + 2147483587) % 2147483647;
    const vF52 = f5(v670, v671, v672, v673);
    f9(v670, v671, v672, v673, v670);
    return ~(vF52 & 39367) & 39367 | ~(vF52 & 39367) & vF52;
  }
  v553 = 300;
  ᐃΔⲆ = {
    ⲆᐃΔⵠΔⲆΔ: 300,
    ΔᐃᐃⲆΔⵠⲆ: 301,
    ⵠᐃΔⲆΔⲆⲆ: 302,
    ΔⲆⲆⵠᐃᐃᐃ: 303,
    ΔΔⵠⵠⵠΔⲆ: 304,
    ᐃⲆΔⲆⵠᐃⵠ: 305,
    ΔⵠⵠⵠⲆΔΔ: 306,
    ᐃΔⲆⵠⲆⵠⲆ: 307,
    ⵠⵠⵠᐃⲆⵠᐃ: 308,
    ΔᐃΔΔᐃᐃⵠ: 309,
    ΔⵠⵠⲆⵠΔⵠ: 310,
    ⲆⵠⵠΔΔΔⲆ: 311,
    EMPTY: 312,
    ΔⵠⲆⲆᐃⵠⵠ: 313,
    ⵠⲆΔⲆᐃⲆΔ: 314,
    ᐃⵠᐃΔΔᐃΔ: 315,
    ᐃⵠⲆᐃΔⲆⵠ: 316,
    ᐃⲆⲆⵠⲆᐃΔ: 317,
    ⵠⲆᐃⵠⵠⲆΔ: 318,
    ᐃⲆΔᐃΔⵠᐃ: 319,
    ΔᐃΔⲆⵠⲆΔ: 320,
    ⲆΔⲆⵠΔΔΔ: 321,
    ⲆⵠⲆⵠⲆ: 322,
    ⵠᐃᐃΔⲆᐃΔ: 323,
    ΔᐃΔᐃ: 324,
    ⵠΔᐃΔⲆⲆᐃ: 325,
    ᐃⵠⲆⲆⲆⵠⵠ: 326,
    ⵠⵠⵠᐃⲆΔΔ: 327,
    ⵠⲆⵠⲆⲆΔⲆ: 328,
    ⵠⵠΔⲆᐃᐃΔ: 329,
    ᐃⲆᐃᐃΔⵠⵠ: 330,
    ⵠⵠⲆⲆᐃⵠᐃ: 331,
    POINTS: 332,
    ⲆΔΔᐃΔⲆⲆ: 333,
    ΔΔΔⲆⲆᐃΔ: 334,
    ΔᐃⲆⲆⲆⵠΔ: 335,
    ᐃⵠΔⲆΔᐃⲆ: 336,
    ⵠⵠⲆⵠᐃΔᐃ: 337,
    ⵠⵠᐃⲆⲆΔᐃ: 338,
    ⵠⵠⵠⲆⲆᐃᐃ: 339,
    ⵠᐃΔᐃⲆⵠⲆ: 340,
    ᐃⵠⲆⵠᐃⲆⵠ: 341,
    ⵠⲆⲆᐃⲆⲆⵠ: 342,
    ᐃⵠΔᐃᐃⵠⵠ: 343
  };
  function f69() {
    v702[99] = ["Reidite Axe", "Legendary and lethal", "Damage: 33", "Shield Penetration: 6"];
    v702[98] = ["Amethyst Axe", "Purple and powerful", "Damage: 30", "Shield Penetration: 5"];
    v702[97] = ["Diamond Axe", "Sparkle and slice", "Damage: 27", "Shield Penetration: 4"];
    v702[96] = ["Gold Axe", "Chop 'til it drops!", "Damage: 24", "Shield Penetration: 3"];
    v702[95] = ["Stone Axe", "Rock your logs", "Damage: 21", "Shield Penetration: 2"];
    v702[94] = ["Wood Axe", "Eco-friendly deforestation!", "Damage: 14", "Shield Penetration: 1"];
    v702[153] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"];
    v702[154] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"];
    v702[155] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"];
    v702[156] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"];
    v702[157] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"];
    v702[76] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"];
    v702[75] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"];
    v702[74] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"];
    v702[73] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"];
    v702[72] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"];
    v702[71] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"];
    v702[56] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
    v702[221] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
    v702[107] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
    v702[70] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
    v702[106] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
    v702[69] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
    v702[105] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
    v702[68] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
    v702[104] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"];
    v702[67] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
    v702[103] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
    v702[66] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"];
    v702[102] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"];
    v702[65] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
    v702[101] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
    v702[64] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
    v702[152] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."];
    v702[237] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
    v702[240] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
    v702[232] = ["Vulture Feather", "From a deadly vulture"];
    v702[234] = ["Emerald", "How many golden breads can you get from it?"];
    v702[238] = ["Sand Worm Juice", "I don't want to know how you got this."];
    v702[80] = ["Turban", "Useful to survive in the desert."];
    v702[81] = ["Ninja outfit", "Essential to survive in the desert"];
    v702[82] = ["Pilot Hat", "Take off and land with flying objects much faster."];
    v702[236] = ["Pilot Glasses"];
    v702[225] = ["Tamed Boar", "Fast on lands and slow on water."];
    v702[239] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
    v702[226] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
    v702[227] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"];
    v702[228] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"];
    v702[229] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"];
    v702[89] = ["Saddle", "Hit a boar with it to tame it."];
    v702[90] = ["Witch Hat", "You're a wizard Starvy!"];
    v702[91] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."];
    v702[92] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
    v702[93] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
    v702[100] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
    v702[24] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"];
    v702[224] = ["Sled", "You are faster with it in the snow"];
    v702[223] = ["Boat", "You are faster with it in the water"];
    v702[230] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"];
    v702[39] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 70"];
    v702[222] = ["Penguin Feather", "From a deadly cute penguin."];
    v702[231] = ["Hawk Feather", "From a deadly hawk."];
    v702[233] = ["Cactus", "Food : 20", "Water : 10"];
    v702[211] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
    v702[210] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
    v702[209] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
    v702[208] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    v702[218] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"];
    v702[217] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
    v702[219] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
    v702[220] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"];
    v702[32] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"];
    v702[212] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"];
    v702[213] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
    v702[214] = ["Gold Door Spike", "Are you rebuilding the \"el dorado?\"", "Damage: 15", "On-Hit Damage: 2", "Durability: 400"];
    v702[215] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"];
    v702[216] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"];
    v702[205] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
    v702[207] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
    v702[204] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v702[206] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v702[53] = ["Pitchfork", "Perfect for gathering"];
    v702[54] = ["Golden Pitchfork", "Essential for a real farmer."];
    v702[235] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."];
    v702[v559.ᐃⵠᐃᐃᐃᐃᐃ] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"];
    v702[v559.ᐃᐃⵠΔᐃΔΔ] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"];
    v702[v559.ⲆⵠΔᐃᐃΔⵠ] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"];
    v702[v559.ΔⲆΔΔᐃᐃⵠ] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"];
    v702[v559.ΔⵠⵠⵠⲆⵠⲆ] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"];
    v702[186] = ["Lava Cube", "You feel an immense power emanating from this cube"];
    v702[187] = ["Lava Orb", "You feel an immense power emanating from this orb"];
    v702[63] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"];
    v702[17] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"];
    v702[150] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
    v702[60] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
    v702[34] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
    v702[19] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"];
    v702[203] = ["Flame", "It's hot!"];
    v702[20] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
    v702[21] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
    v702[22] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
    v702[202] = ["Reidite", "The ultimate ore"];
    v702[184] = ["Dragon Cube", "You feel a great power emanating from this cube"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v706[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."];
    v706[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
    v706[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."];
    v706[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
    v706[27] = ["You were trampled by that boar. From now on, your new nickname is \"the doormat\"."];
    v706[28] = ["With a force of 3300 newtons, the shock wave from the closing of the crab king's claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\""];
    v706[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
    v706[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."];
    v706[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
    v706[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
    v706[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
    v706[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
    v706[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
    v706[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
    v706[37] = ["You hear \"Avada Kedavra!\" before you turn to ashes."];
    v706[38] = ["You died crushed by an angry baby mammoth."];
    v706[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
    v706[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[341] = "A sandstorm is approaching in a few seconds.";
    v702[340] = "The sandstorm will soon stop.";
    v702[343] = "A blizzard is approaching in a few seconds.";
    v702[342] = "The blizzard will soon stop.";
    v702[328] = " BACK TO THE GAME";
    v702[329] = " Share on Twitter";
    v702[330] = " Share on Facebook";
    v702[331] = "You can buy items on the shop in the next game with your points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Kill";
    v702[335] = "Days survived";
    v702[336] = "Building method: Free. Press G to change";
    v702[337] = "Building method: Grid. Press G to change";
    v702[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v702[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"];
    v702[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v674 = 0; v674 < 7; v674++) {
      document.getElementById("claim_reward_" + v674).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v702[7] = ["Hand"];
    v702[140] = ["Dirt", "Dirty!"];
    v702[126] = ["Sand", "I got it in my eyes!"];
    v702[109] = ["Wood", "You can't get enough of it!"];
    v702[108] = ["Stone", "Also called a rock"];
    v702[111] = ["Gold", "Be generous, give it to others"];
    v702[112] = ["Diamond", "What will you make with it?"];
    v702[121] = ["Amethyst", "It's Mauve like Lapa"];
    v702[131] = ["Flour", "Used in cooking"];
    v702[133] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"];
    v702[136] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
    v702[116] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
    v702[117] = ["Cooked meat", "A rare steak, please", "Food: 35"];
    v702[137] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"];
    v702[138] = ["Cooked fish", "With lemon it's perfect", "Food: 35"];
    v702[143] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"];
    v702[145] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"];
    v702[200] = ["Candies", "Only for children!", "Food: 20"];
    v702[199] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"];
    v702[201] = ["Garland", "Perfect decoration for roofs"];
    v702[115] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", "Durability: 700", "Lifetime: 8 days"];
    v702[110] = ["Berry", "Berry tasty!", "Food: 10"];
    v702[132] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v702[134] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
    v702[188] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    v702[189] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
    v702[191] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    v702[192] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
    v702[193] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need water: 3min", "Durability: 1000", "Lifetime: 8 days"];
    v702[194] = ["Thorn bush", "It stings!"];
    v702[141] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"];
    v702[142] = ["Ice", "Useful for making cakes and water"];
    v702[55] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"];
    v702[174] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
    v702[2] = ["Rabbit Fur", "That rabbit was so cute..."];
    v702[178] = ["Pure Fur", "You're a bread factory"];
    v702[179] = ["Dark Fur", "You get ready to do something wrong"];
    v702[146] = ["Winter Fur", "These animals just wanted a hug..."];
    v702[139] = ["Scales", "It smells like fish!"];
    v702[129] = ["Kraken Skin", "Weren't you too scared?"];
    v702[113] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
    v702[118] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"];
    v702[114] = ["Workbench", "Very useful to craft all kinds of objects"];
    v702[161] = ["Cord", "Used in crafting Hats and Bag"];
    v702[147] = ["Diamond Cord", "Used in crafting Special Hats"];
    v702[167] = ["Chest", "Allows you to store items", "Durability: 500"];
    v702[57] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"];
    v702[0] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
    v702[5] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
    v702[6] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"];
    v702[9] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"];
    v702[30] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
    v702[62] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"];
    v702[16] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
    v702[8] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"];
    v702[1] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"];
    v702[3] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"];
    v702[4] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"];
    v702[31] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"];
    v702[35] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"];
    v702[36] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work well on amethyst", "Damage: 3", "Building Damage: 30"];
    v702[37] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"];
    v702[38] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"];
    v702[45] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 95"];
    v702[12] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
    v702[13] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"];
    v702[14] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
    v702[15] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
    v702[33] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
    v702[46] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"];
    v702[50] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"];
    v702[51] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"];
    v702[52] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    v702[58] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
    v702[25] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
    v702[26] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"];
    v702[27] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"];
    v702[43] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
    v702[44] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
    v702[59] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
    v702[23] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"];
    v702[41] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"];
    v702[42] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside water and in winter"];
    v702[83] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside water and in winter"];
    v702[10] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"];
    v702[11] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"];
    v702[40] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
    v702[88] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
    v702[84] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v702[85] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside water and in winter"];
    v702[86] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    v702[48] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
    v702[47] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"];
    v702[185] = ["Dragon Orb", "You feel a great power emanating from this orb"];
    v702[149] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
    v702[175] = ["Green Gemstone", "You didn't cheat, promise?"];
    v702[176] = ["Orange Gemstone", "Only a real pirate can find it!"];
    v702[177] = ["Blue Gemstone", "For too kind people"];
    v702[77] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"];
    v702[78] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"];
    v702[79] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"];
    v702[180] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
    v702[181] = ["Empty Bucket", "You need to fill this bucket near a water source"];
    v702[127] = ["Bottle", "Allows you to drink water anywhere", "Water: 50"];
    v702[128] = ["Empty Bottle", "You can fill this bottle near a water source"];
    v702[130] = ["Empty Watering Can", "You must fill it with a water source to use it"];
    v702[49] = ["Watering Can", "Allows watering of plants", "Damage: 1"];
    v702[29] = ["Bag", "More space for your items!"];
    v702[120] = ["Paper", "Used in book-crafting"];
    v702[28] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"];
    v702[195] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
    v702[148] = ["Lock", "Allow you to lock your chest"];
    v702[158] = ["Lock-pick", "Allows you to unlock one chest"];
    v702[159] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"];
    v702[125] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
    v702[183] = ["Sign", "Leave a message to others", "Durability: 200"];
    v702[190] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
    v702[182] = ["Well", "Allows bottle filling", "Durability: 1000"];
    v702[162] = ["Wood Wall", "It's just a wall", "Durability: 1000"];
    v702[163] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"];
    v702[164] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"];
    v702[165] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
    v702[122] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
    v702[160] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
    v702[168] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"];
    v702[169] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"];
    v702[170] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
    v702[123] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
    v702[166] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"];
    v702[171] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
    v702[172] = ["Gold Door", "Are you rebuilding the \"el dorado?\"", "Durability: 2000"];
    v702[173] = ["Diamond Door", "For a shining house", "Durability: 2500"];
    v702[124] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
    v702[119] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"];
    v702[135] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"];
    v702[144] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"];
    v702[151] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"];
    v702[300] = "You cannot join this server";
    v702[301] = "Kicked: ";
    v702[302] = "Your key is already used by someone else";
    v702[303] = "Your key is wrong";
    v702[304] = "You have an old version, you need to clear your cache";
    v702[338] = "Your client version is too recent for this server. The server is being updated";
    v702[339] = "Wrong password! To enter a password: https://starve.io/?password=...";
    v702[305] = "There are no more new resources";
    v702[306] = "You survived 1 day";
    v702[307] = "You survived ";
    v702[308] = " days";
    v702[309] = "You are dead ;-;";
    v702[310] = "Server cannot find spawn location! Spam the play button!";
    v702[311] = "Server is full! Spam the play button!";
    v702[312] = "Resource is empty";
    v702[313] = "Inventory is full (right-click to empty items)";
    v702[314] = " is dead";
    v702[315] = "This is not the right tool";
    v702[316] = "You joined a team";
    v702[317] = "You are dead";
    v702[318] = " joined the team";
    v702[319] = "Your team was destroyed";
    v702[320] = "You left the team";
    v702[321] = " left the team";
    v702[322] = "Someone stole your token :>";
    v702[323] = "Choose a server";
    v702[324] = "players";
    v702[325] = "total players";
    v702[326] = "players on this mode";
    v702[327] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Nickname";
    v706[0] = ["You were killed for no reason"];
    v706[1] = ["You starved to death, as the name of the game implies"];
    v706[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
    v706[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."];
    v706[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
    v706[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."];
    v706[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."];
    v706[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
    v706[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."];
    v706[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
    v706[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
    v706[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
    v706[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
    v706[13] = ["You died of thirst. Better drink your own piss."];
    v706[14] = ["Did you know starver's mouths are always below water when swimming? Now you know."];
    v706[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
    v706[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
    v706[17] = ["Your skin's falling apart, the sun killed you."];
    v706[18] = ["Garlic stored in your pockets boiled your brain."];
    v706[19] = ["As a vampire, don't stand near the garlic cloves."];
    v706[20] = ["You ate garlic as a vampire, what did you expect?"];
    v706[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", "Uuunnnggg...", "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"];
  }
  function f70(p434, p435, p436, p437, p438, p439) {
    v76(vVVUndefined26, p434, p435, p436, p437, p438, p439);
    const vVh3 = f77(vVVVUndefined1973[0], vVVVUndefined1973[1]);
    f38(vVVVUndefined1973[2], vVVVUndefined1973[3], vVVVUndefined1973[4], vVVVUndefined1973[5]);
    return vVh3 ^ 32111;
  }
  function f71() {
    v702[184] = ["You feel a great power emanating from this orb"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[328] = " BACK TO THE GAME";
    v702[329] = " Share on Twitter";
    v702[330] = " Share on Facebook";
    v702[331] = "You can buy items on the shop in the next game with your points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Kill";
    v702[335] = "Days survived";
    v702[336] = "Building method: Free. Press G to change";
    v702[337] = "Building method: Grid. Press G to change";
    v702[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v702[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v702[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v675 = 0; v675 < 7; v675++) {
      document.getElementById("claim_reward_" + v675).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v702[7] = ["Рука"];
    v702[140] = ["Земля", "Грязно!"];
    v702[126] = ["Песок", "Он в моих глазах!"];
    v702[109] = ["Дерево", "Постоянно нужно больше!"];
    v702[108] = ["Камень", "Твердый"];
    v702[111] = ["Золото", "Будьте щедры, давайте его другим"];
    v702[112] = ["Алмаз", "Что вы создадите с помощью него?"];
    v702[121] = ["Аметист", "Он сиреневый, как Lapa"];
    v702[131] = ["Мука", "Используется в готовке"];
    v702[133] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
    v702[136] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
    v702[116] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
    v702[117] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
    v702[137] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
    v702[138] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
    v702[143] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
    v702[145] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
    v702[200] = ["Конфеты", "Только для детей!", "Еда: 20"];
    v702[199] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
    v702[201] = ["Гирлянда", "Прекрасная декорация для крыши"];
    v702[115] = ["Семя Ягоды", "Вырастает в ягоды", "Рождение: 2мин", "Рост: 55сек", "Нужна вода: 3мин 20сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v702[110] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
    v702[132] = ["Пшеничное Семя", "Вырастает в пшеницу", "Рождение: 2мин", "Рост: 16сек", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v702[134] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
    v702[188] = ["Семена Тыквы", "Вырастает в тыкву", "Рождение: 2мин 40сек", "Рост: 2мин", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    v702[189] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
    v702[191] = ["Семена Чеснока", "Очень опасно для вампиров", "Урон: 20", "Рождение: 4мин", "Рост: 4 мин", "Нужна вода: 1мин 40сек", "Прочность: 700", "Продолжительность: 8 дней"];
    v702[192] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
    v702[193] = ["Семена Колючего Куста", "Может нанести урон врагам", "Урон: 20", "Рождение: 4мин", "Рост: 15сек", "Нужна вода: 3мин", "Прочность: 1000", "Продолжительность: 8 дней"];
    v702[194] = ["Колючий Куст", "Это больно!"];
    v702[141] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", "Прочность: 2000"];
    v702[142] = ["Лёд", "Используется для изготовления тортов и воды"];
    v702[55] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", "Урон: 2"];
    v702[174] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
    v702[2] = ["Шкура Зайца", "Этот кролик был таким милым..."];
    v702[178] = ["Чистая Шкура", "Вы - фабрика хлеба"];
    v702[179] = ["Чёрная Шкура", "Вы готовы делать зло."];
    v702[146] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
    v702[139] = ["Чешуя", "Она пахнет рыбой!"];
    v702[129] = ["Шкура Кракена", "Вы не испугались?"];
    v702[113] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
    v702[118] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
    v702[114] = ["Верстак", "Необходим для создания многих предметов"];
    v702[161] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
    v702[147] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
    v702[167] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
    v702[57] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
    v702[0] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
    v702[5] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
    v702[6] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
    v702[9] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
    v702[30] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
    v702[62] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
    v702[16] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
    v702[8] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
    v702[1] = ["Каменная Кирка", "Может добывать дерево, камень и золото", "Урон: 2"];
    v702[3] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", "Урон по строениям: 1"];
    v702[4] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", "Урон по строениям: 1"];
    v702[31] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", "Урон по строениям: 1"];
    v702[35] = ["Каменный молот", "Используется для разрушения зданий", "Плохо разрушает алмазные и аметистовые здания", "Урон: 2", "Урон по строениям: 20"];
    v702[36] = ["Золотой Молот", "Используется для разрушения зданий", "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
    v702[37] = ["Алмазный Молот", "Используется для разрушения зданий", "Урон: 4", "Урон по строениям: 40"];
    v702[38] = ["Аметистовый Молот", "Используется для разрушения зданий", "Урон: 5", "Урон по строениям: 50"];
    v702[45] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
    v702[12] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
    v702[13] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
    v702[14] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
    v702[15] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
    v702[33] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
    v702[46] = ["Каменная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 2"];
    v702[50] = ["Золотая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 3", "Урон по строениям: 1"];
    v702[51] = ["Алмазная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 4", "Урон по строениям: 1"];
    v702[52] = ["Аметистовая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 5", "Урон по стреониям: 1"];
    v702[58] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
    v702[25] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
    v702[26] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
    v702[27] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
    v702[43] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
    v702[59] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
    v702[23] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", "Защищает от холода вне воды."];
    v702[41] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", "Защищает от холода вне воды."];
    v702[42] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", "Защищает от холода вне воды."];
    v702[83] = ["Капюшон", "Вы разбойник", "Вы можете украсть что-то, если", "1) Ночь", "2) Вы ничего не носите", "3)Если вас не тронули в течение восьми секунд", "4) Вы не рядом с огнём", "5) Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v702[10] = ["Теплые Наушники", "Какая-то маленькая шапка.", "Защищает от холода вне воды."];
    v702[11] = ["Шапка", "Так же называется пальтом.", "Защищает от холода вне воды."];
    v702[40] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
    v702[84] = ["Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v702[85] = ["Зимний Капюшон", "Вы можете украсть что-то, если", "- Ночь", "- Вы ничего не носите", "- Если вас не тронули в течение четырёх секунд", "- Вы не рядом с огнём", "- Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    v702[86] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    v702[48] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
    v702[47] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 4, Защита от животных: 16"];
    v702[185] = ["Шар Дракона", "Даётся за квест"];
    v702[149] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
    v702[175] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
    v702[176] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
    v702[177] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
    v702[77] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", "Защита от игроков: 4, Защита от животных: 16"];
    v702[78] = ["Оранжевая Корона", "Вам очень повезло", "Защита от игроков: 4, Защита от животных: 16"];
    v702[79] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", "Защита от игроков: 4, Защита от животных: 16"];
    v702[180] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
    v702[181] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
    v702[127] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
    v702[128] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
    v702[130] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
    v702[49] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
    v702[29] = ["Рюкзак", "Больше места для ваших предметов!"];
    v702[120] = ["Бумага", "Используется при создании книги"];
    v702[28] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
    v702[195] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
    v702[148] = ["Замок", "Позволяет вам закрыть ваш сундук"];
    v702[158] = ["Ключ", "Даёт вам открыть один запертый сундук"];
    v702[159] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
    v702[125] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
    v702[183] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
    v702[190] = ["Крыша", "Немного скрывает вас и согревает!"];
    v702[182] = ["Колодец", "Позволяет заполнить бутылку", "Прочность: 1000"];
    v702[162] = ["Деревянная Стена", "Это просто стена", "Прочность: 1000"];
    v702[163] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
    v702[164] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", "Прочность: 2000"];
    v702[165] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
    v702[122] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
    v702[160] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
    v702[168] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
    v702[169] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
    v702[170] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
    v702[123] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
    v702[166] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", "Прочность: 1000"];
    v702[171] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
    v702[172] = ["Золотая Дверь", "Вы перестраиваете \"Эль Дорадо?\"", "Прочность: 2000"];
    v702[173] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
    v702[124] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
    v702[119] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", "Прочность: 1000"];
    v702[135] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", "Прочность: 2000"];
    v702[144] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", "Прочность: 2000"];
    v702[151] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
    v702[300] = "Вы не можете зайти на этот сервер";
    v702[301] = "Выгнаны: ";
    v702[302] = "Ваш ключ уже используется кем-то";
    v702[303] = "Ваш ключ неправильный";
    v702[304] = "У вас старая версия, вам нужно очистить кеш";
    v702[305] = "Ресурсов больше нет";
    v702[306] = "Вы выжили 1 день";
    v702[307] = "Вы выжили ";
    v702[308] = " дней";
    v702[309] = "Вы умерли ;-;";
    v702[310] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
    v702[311] = "Сервер заполнен! Спамьте кнопку играть!";
    v702[312] = "Ресурсы закончились";
    v702[313] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
    v702[314] = " умер";
    v702[315] = "Это не тот инструмент";
    v702[316] = "Вы вошли в команду";
    v702[317] = "Вы умерли";
    v702[318] = " вошёл в команду";
    v702[319] = "Ваша команда была разрушена";
    v702[320] = "Вы покинули команду";
    v702[321] = " покинул команду";
    v702[322] = "Кто-то использует ваш токен :>";
    v702[323] = "Выберите сервер";
    v702[324] = "игроков";
    v702[325] = "игроков всего";
    v702[326] = "игроков в этом режиме";
    v702[327] = "Скоро...";
    document.getElementById("nickname_input").placeholder = "Имя";
    v706[0] = ["Вы были убиты без причины"];
    v706[1] = ["Вы умерли от голода, как название игры подразумевает это"];
    v706[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
    v706[3] = ["Игрок убил тебя и сказал 'стань лучше.'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
    v706[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
    v706[5] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
    v706[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
    v706[7] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
    v706[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
    v706[9] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
    v706[10] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
    v706[11] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
    v706[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
    v706[13] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
    v706[14] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
    v706[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
    v706[16] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
    v706[17] = ["Твоя кожа разваливается, солнце убило тебя"];
    v706[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
    v706[19] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
    v706[20] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
    v706[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg... Я голоден", "Нужны твои мозги Uuunnnggg...", "Свежее мясо здесь... Uuunnnggg", "Uuunnnggg... Ты вкусный", "Uuunnnggg...", "Еда… Uuunnnggg...", "Я чувствую запах крови... Uuunnnggg"];
  }
  function f72() {
    v702[184] = ["You feel a great power emanating from this orb"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[328] = " BACK TO THE GAME";
    v702[329] = " Share on Twitter";
    v702[330] = " Share on Facebook";
    v702[331] = "You can buy items on the shop in the next game with your points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Kill";
    v702[335] = "Days survived";
    v702[336] = "Building method: Free. Press G to change";
    v702[337] = "Building method: Grid. Press G to change";
    v702[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v702[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v702[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v676 = 0; v676 < 7; v676++) {
      document.getElementById("claim_reward_" + v676).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v702[7] = ["mão"];
    v702[140] = ["terra", "está sujo!"];
    v702[126] = ["areia", "entrou nos meus olhos!"];
    v702[109] = ["madeira", "você não pode pegar o suficiente disso!"];
    v702[108] = ["pedra", "também chamado rocha"];
    v702[111] = ["ouro", "seja generoso, dê para outros"];
    v702[112] = ["diamante", "o que você irá fazer com isso?"];
    v702[121] = ["ametista", "é mauve como lapa"];
    v702[131] = ["farinha", "usada na cozinha"];
    v702[133] = ["biscoito", "biscoito da vovó", "comida: 50"];
    v702[136] = ["bolo", "bolo dos sonhos para gourmets", "comida: 100"];
    v702[116] = ["carne crua", "você pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"];
    v702[117] = ["carne assada", "um mal passado, por favor", "comida: 35"];
    v702[137] = ["peixe cru", "eu acho que ainda está vivo", "causa envenenamento por comida: 10", "comida: 18"];
    v702[138] = ["peixe assado", "com limão é perfeito", "comida: 35"];
    v702[143] = ["pão", "um excelente pão francês", "é a moeda do mercado", "comida: 15"];
    v702[145] = ["sanduíche", "saboroso com rissol de krabby", "comida: 100"];
    v702[200] = ["doces", "apenas para crianças!", "comida: 100"];
    v702[199] = ["cana-de-açúcar", "prove, é delicioso!", "comida: 100"];
    v702[201] = ["pisca-pisca", "decoração perfeita de telhado"];
    v702[115] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de água em: 3min 20s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v702[110] = ["berry", "Berry saborosa!", "comida: 10"];
    v702[132] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 days"];
    v702[134] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"];
    v702[188] = ["semente de abóbora", "cresce como abóbora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 dias"];
    v702[189] = ["abóbora", "é a lembrança do halloween", "comida: 30"];
    v702[191] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de água em: 1min 40s", "durabilidade: 700", "tempo de vida: 8 dias"];
    v702[192] = ["alho", "cura você e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"];
    v702[193] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de água em: 3min", "durabilidade: 1000", "tempo de vida: 8 days"];
    v702[194] = ["mato de espinhos", "pica!"];
    v702[141] = ["pote", "sério, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rápido e com menos água", "durabilidade: 2000"];
    v702[142] = ["gelo", "útil para fazer bolo e água"];
    v702[55] = ["chave inglesa", "para reparar portas, muros e muros com espinho", "dano: 2"];
    v702[174] = ["pele de lobo", "cachorro? mas onde está o cachorro?!"];
    v702[2] = ["pele de coelho", "o coelho era tão fofo..."];
    v702[178] = ["pele pura", "você é uma fábrica de pão"];
    v702[179] = ["pele negra", "você está pronto para fazer algo errado"];
    v702[146] = ["pele de inverno", "ele só queria um abraço"];
    v702[139] = ["escala", "é pequeno como peixe!"];
    v702[129] = ["pele do kraken", "você não está com medo?"];
    v702[113] = ["fogueira", "esquenta você!", "durabilidade: 150", "tempo de vida: 2min"];
    v702[118] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"];
    v702[114] = ["mesa de trabalho", "muito útil para fazer todos os objetos"];
    v702[161] = ["linha", "usada para fazer chapéus e mochila"];
    v702[147] = ["linha de diamante", "usada para fazer chapéus especiais"];
    v702[167] = ["baú", "permite que você guarde itens", "durabilidade: 500"];
    v702[57] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construções: 4"];
    v702[0] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construções: 6"];
    v702[5] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construções: 7"];
    v702[6] = ["espada de diamante", "você pode sentir o poder", "dano: 24", "dano em construções: 8"];
    v702[9] = ["espada de pirata", "AYYYYY!", "alcança mais distância que a espada normal", "dano: 24", "dano em construções: 8"];
    v702[30] = ["espada de ametista", "mauve é a cor mais bonita do mundo", "dano: 27", "dano em construções: 9"];
    v702[62] = ["espada do dragão", "sem piedade!", "dano: 30", "dano em construções: 10"];
    v702[16] = ["lança do dragão", "mate todos eles!", "dano: 22", "dano em construções: 6"];
    v702[8] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"];
    v702[v559.ⲆⵠⵠⵠΔᐃⵠⲆΔ] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", "dano: 2"];
    v702[3] = ["picareta de ouro", "pode coletar diamante", "dano: 3", "dano em construções: 1"];
    v702[4] = ["picareta de diamante", "pode coletar tudo", "dano: 4", "dano em construções: 1"];
    v702[31] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", "dano em construções: 1"];
    v702[35] = ["martelo de pedra", "útil para destruir construções", "não funciona bem no diamante e na ametista", "dano: 2", "dano em construções: 20"];
    v702[36] = ["martelo de ouro", "útil para destruir construções", "não funciona bem na ametista", "dano: 3", "dano em construções: 30"];
    v702[37] = ["martelo de diamante", "útil para destruir construções", "dano: 4", "dano em construções: 40"];
    v702[38] = ["martelo de ametista", "útil para destruir construções", "dano: 5", "dano em construções: 50"];
    v702[45] = ["super martelo", "você planeja destruir o mundo?", "dano: 12", "dano em construções: 70"];
    v702[12] = ["lança de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construções: 2"];
    v702[13] = ["lança de pedra", "o começo da evolução!", "dano: 14", "dano em construções: 4"];
    v702[14] = ["lança de ouro", "cuidado, pica!", "dano: 15", "dano em construções: 5"];
    v702[15] = ["lança de diamante", "você está pronto para matar um dragão", "Dano: 17", "dano em construções: 5"];
    v702[33] = ["lança de ametista", "dragões não te amedrontam", "Dano: 18", "dano em construções: 6"];
    v702[46] = ["pá de pedral", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 2"];
    v702[50] = ["pá de ouro", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 3", "dano em construções: 1"];
    v702[51] = ["pá de diamante", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 4", "dano em construções: 1"];
    v702[52] = ["pá de ametista", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 5", "dano em construções: 1"];
    v702[58] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"];
    v702[25] = ["capacete de pedra", "você está pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"];
    v702[26] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"];
    v702[27] = ["capacete de diamante", "não se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"];
    v702[43] = ["capacete de ametista", "você não tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"];
    v702[59] = ["capacete do dragão", "você vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"];
    v702[23] = ["chapéu de explorador", "animais não vão te atacar", "mas não faça barulho!", "quente fora da água"];
    v702[41] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da água e neve"];
    v702[42] = ["chapéu de elfo", "não deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da água e neve"];
    v702[83] = ["capuz", "você é um trapaceiro", "você pode roubar alguém apenas se", "1) é de noite", "2)você não está segurando nada", "3) se você n foi tocado por 5 segundos", "4) você não está perto de uma fogueira", "5) seu alvo não está com equipamento camponês", "quente fora da água e na neve"];
    v702[10] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da água e neve"];
    v702[11] = ["Chapka", "também chamado de casaco.", "esquenta fora da água e na neve", "muito quente"];
    v702[40] = ["Chapéu de inverno", "Muito confortável", "Muito quente"];
    v702[84] = ["túnica", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v702[85] = ["capuz de inferno", "você só pode roubar alguém se", "é de noite", "-você não está segurando nada", "- se você não foi tocado por 4 segundos", "- você não está perto de uma fogueira", "-seu alvo não está com equipamento de camponês de inverno", "esquenta fora da água e na neve"];
    v702[86] = ["camponês de inverno", "suas plantas crescem rápido", "quente fora da água e na neve"];
    v702[48] = ["máscara de mergulho", "você é rápido na água", "quente na água", "defesa de jogadores: 2, defesa de animais: 8"];
    v702[47] = ["super máscara de mergulho", "você é muito rápido na água", "quente na água", "defesa de jogadores: 4, defesa de animais: 16"];
    v702[185] = ["esfera do dragão", "dado na questt"];
    v702[149] = ["coração de dragão", "torna você num fantasmas na morte!", "você é um fantasma por 60 segundos", "ache uma pedra da ressurreição"];
    v702[175] = ["pedra verde", "você não vai trapacear, promete?"];
    v702[176] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"];
    v702[177] = ["pedra azul", "para pessoas muito gentis"];
    v702[77] = ["coroa verde", "você se regenera muito rápido", "regenera ao longo do tempo: 40", "defesa de jogadores: 4, defesa de animais: 16"];
    v702[78] = ["coroa laranja", "de repente você se sente muito sortudo", "defesa de jogadores: 4, defesa de animais: 16"];
    v702[79] = ["coroa azul", "quando você morrer, você vira um fantasma", "você perderá sua arma", "defesa de jogadores: 4, defesa de animais: 16"];
    v702[180] = ["balde", "útil para encher um poço", "um balde equivale a doze garrafas"];
    v702[181] = ["balde vazio", "você precisa encher esse balde perto de uma fonte de água"];
    v702[127] = ["garrafa", "permite que você beba água em qualquer lugar", "água: 50"];
    v702[128] = ["garrafa vazia", "você pode encher essa garrafa perto de uma fonte de água"];
    v702[130] = ["regador vazio", "você deve enche-lo com uma fonte de água para usa-lo"];
    v702[49] = ["regador", "permite regar as plantas", "dano: 1"];
    v702[29] = ["mochila", "mais espaço para seus itens!"];
    v702[120] = ["papel", "usado para fazer o livro"];
    v702[28] = ["livro", "permite reduzir consideradamente o tempo de construções", "mas precisa está equipado para fucionar", "dano: 1"];
    v702[195] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"];
    v702[148] = ["fechadura", "permite você trancar seu baú"];
    v702[158] = ["chave", "permite destrancar um baú"];
    v702[159] = ["Totem", "permite você criar um time", "compartilha portas e baús", "edifício prejudicial não quer machucar seu amigo"];
    v702[125] = ["ponte", "muito útil na água", "permite você beber sem se afogar", "anda rápido na água"];
    v702[183] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"];
    v702[190] = ["telhado", "esconde você um pouco e te esquenta!"];
    v702[182] = ["poço", "permite encher garrafas", "durabilidade: 1000"];
    v702[162] = ["muro de madeira", "você sabia que o muro dança?", "durabilidade: 1000"];
    v702[163] = ["muro de pedra", "é um pocu mais sério.", "durabilidade: 1500"];
    v702[164] = ["muro de ouro", "ouro nos seus muros? é muito chamativo.", "durabilidade: 2000"];
    v702[165] = ["muro de diamante", "tão brilhoso, veja seus olhos", "durabilidade: 2500"];
    v702[122] = ["muro de ametista", "você está muito assustado de sair!", "durabilidade: 3000"];
    v702[160] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"];
    v702[168] = ["espiga de pedra", "eu não quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"];
    v702[169] = ["espiga de ouro", "você é tão cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"];
    v702[170] = ["espiga de diamante", "você não gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"];
    v702[123] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para você?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"];
    v702[166] = ["porta de madeira", "pode ser aberta ou fechada por você ou seus amigos", "durabilidade: 1000"];
    v702[171] = ["porta de pedra", "uma porta mais forte é mais sério", "durabilidade: 1500"];
    v702[172] = ["porta de ouro", "você está re-construindo o el dorado?", "durabilidade: 2000"];
    v702[173] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"];
    v702[124] = ["porta de ametista", "é a sua casa um lugar trancado seguro?", "durabilidade: 3500"];
    v702[119] = ["fornalha", "esquenta você", "consumi madeira em todo 5 segundos", "durabilidade: 1000"];
    v702[135] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v702[144] = ["forno de pão", "permite fazer pão feito de farinha", "demora 10 segundos para fazer pão", "dá pontos ao trabalhar", "durabilidade: 2000"];
    v702[151] = ["pedra da ressurreição", "é mágico", "te ressuscita se você for um fantasmas", "você vai perder sua arma", "durabilidade 200: 200"];
    v702[300] = "você não pode entrar no servidor";
    v702[301] = "kickado: ";
    v702[302] = "sua chave está em uso por outra pessoa";
    v702[303] = "sua chave está errada";
    v702[304] = "você tem uma versão velha, limpe seu cache";
    v702[305] = "não tem mais recursos";
    v702[306] = "você sobreviveu 1 dia";
    v702[307] = "você sobreviveu ";
    v702[308] = " dias";
    v702[309] = "você está morto ;-;";
    v702[310] = "servidor não pôde achar um local de spawn! spam o botão de play!";
    v702[311] = "servidor está cheio! spam o botão de play!";
    v702[312] = "não tem recursos";
    v702[313] = "inventário está cheio (botão direito para deletar itens)";
    v702[314] = " está morto";
    v702[315] = "essa não é a ferramenta certa";
    v702[316] = "você entrou no time";
    v702[317] = "você está morto";
    v702[318] = "entrou no time";
    v702[319] = "seu time foi destruido";
    v702[320] = "você saiu do time";
    v702[321] = " saiu do time";
    v702[322] = "alguém roubou sua ficha :>";
    v702[323] = "escolha um servidor";
    v702[324] = "jogadores";
    v702[325] = "jogadores totais";
    v702[326] = "jogadores nesse modo";
    v702[327] = "Coming soon...";
    document.getElementById("nickname_input").placeholder = "Apelido";
    v706[0] = ["você morreu sem motivo"];
    v706[1] = ["você morreu de fome, como o jogo diz"];
    v706[2] = ["você morreu de frio. tão triste", "você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso."];
    v706[3] = ["um jogador te matou dizendo a você para matar..'", "você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente."];
    v706[4] = ["você ficou muito perto de uma fogueira e queimou até a morte. má ideia.", "você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso."];
    v706[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos não era um coelho."];
    v706[6] = ["o lobo não vão morrer de fome depois te te comer", "eles não são cachorros. lobos não gostam de ser que nem animais de estimação."];
    v706[7] = ["a raposa era muito rápida para você", "a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?"];
    v706[8] = ["o urso só queria um abraço.", " o urso era muito nu. eu não sinto muito."];
    v706[9] = ["você foi queimado por um dragão. tão triste..", "você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer."];
    v706[10] = ["você pulou em um muro com espinhos. não é uma boa ideia...", "você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas."];
    v706[11] = ["até fantasmas podem morrer.", "você falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."];
    v706[12] = ["uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.", "você matou a carne crua. a carne crua te matou também."];
    v706[13] = ["você morreu de sede. melhor beber sua própria urina."];
    v706[14] = ["você sabia que você morre afogado? agora você sabe."];
    v706[15] = ["não se preocupe, as piranhas acham você saboroso.", "fato engraçado: Piranhas comem pessoas. incluindo você."];
    v706[16] = ["LapaMauve não planeja você matar o kraken", "um kraken comeu seu esqueleto."];
    v706[17] = ["sua pele caindo aos pedaços, o sol te matou."];
    v706[18] = ["o alho amarzenado em seus bolsos ferveu seu cérebro."];
    v706[19] = ["como vampiro, não chegue perto do alho."];
    v706[20] = ["você comeu alho como vampiro, o que você esperava?"];
    v706[21] = ["seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerébro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... você parece saboroso", "Uuunnnggg...", "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"];
  }
  function f73() {
    v702[184] = ["You feel a great power emanating from this orb"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[328] = " BACK TO THE GAME";
    v702[329] = " Share on Twitter";
    v702[330] = " Share on Facebook";
    v702[331] = "You can buy items on the shop in the next game with your points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Kill";
    v702[335] = "Days survived";
    v702[336] = "Building method: Free. Press G to change";
    v702[337] = "Building method: Grid. Press G to change";
    v702[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v702[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v702[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v677 = 0; v677 < 7; v677++) {
      document.getElementById("claim_reward_" + v677).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v702[7] = ["Mano"];
    v702[140] = ["Tierra", "¡Tan limpia como mis manos!"];
    v702[126] = ["Arena", "¡Tengo arena en mis ojos!"];
    v702[109] = ["Madera", "¡Nunca hay suficiente!"];
    v702[108] = ["Piedra", "También llamada roca."];
    v702[111] = ["Oro", "Sé generoso, compártelo con los otros"];
    v702[112] = ["Diamante", "¿Que vas a hacer con él?"];
    v702[121] = ["Amatista", "Es Mauve como Lapa"];
    v702[131] = ["Harina", "Usada para cocinar."];
    v702[133] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"];
    v702[136] = ["Tarta", "¡Cumpleaños Feliz!", "Comida: 100"];
    v702[116] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"];
    v702[117] = ["Carne Cocinada", "es la supervivencia del más fuerte :'(", "Comida: 35"];
    v702[137] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"];
    v702[138] = ["Pescado Cocinado", "Con limón sería perfecto", "Comida: 35"];
    v702[143] = ["Pan", "¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"];
    v702[145] = ["Bocadillo", "Sabe como un Krabby Patty", "Comida: 100"];
    v702[200] = ["Caramelos", "¡Solo para niños/as!", "Comida: 100"];
    v702[199] = ["Caña de Azúcar", "Pruébala, es deliciosa", "Comida: 100"];
    v702[201] = ["Guirnalda", "Perfecta para decorar el techo"];
    v702[115] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v702[110] = ["Baya", "No es venenosa.", "Comida: 10"];
    v702[132] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v702[134] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"];
    v702[188] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    v702[189] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"];
    v702[191] = ["Semilla de Ajo", "Muy peligroso para vampiros", "Daño: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", "Durabilidad: 700", "Tiempo de Vida: 8 Días"];
    v702[192] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanación con eliempo: 30", "Efecto: 1"];
    v702[193] = ["Semilla de Planta de Espinas", "Puede dañar a tus enemigos", "Daño por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", "Durabilidad: 1000", "Tiempo de Vida: 8 Días"];
    v702[194] = ["Planta de Espinas", "¡Te daña!"];
    v702[141] = ["Parcela", "En serio, úsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerán muy rápido y necesitarán menos agua", "Durabilidad: 2000"];
    v702[142] = ["Hielo", "Bueno para hacer tartas y agua"];
    v702[55] = ["Llave de Reparación", "Puede reparar paredes, puertas y pinchos", "Daño: 2"];
    v702[174] = ["Pelaje de Lobo", "¿Perrito? ¡¿Donde esta el perrito?!"];
    v702[2] = ["Pelaje de Conejo", "El Conejo era muy lindo..."];
    v702[178] = ["Pelaje Puro", "¡Eres una maquina de pan!"];
    v702[179] = ["Pelaje Oscuro", "¿Estás listo para hacer algo malo?"];
    v702[146] = ["Pelaje de Invierno", "Esos animales solo querían un abrazo..."];
    v702[139] = ["Escamas", "¡Huele a pescado!"];
    v702[129] = ["Piel del Kraken", "¡¿No tienes mucho miedo?!"];
    v702[113] = ["Fogata", "¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"];
    v702[118] = ["Fogata Grande", "¡Te calienta por más tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"];
    v702[114] = ["Mesa de Trabajo", "¡Te sirve mucho para crear cosas de todos tipos!"];
    v702[161] = ["Hilo", "Usado para craftear ropa y mochila"];
    v702[147] = ["Hilo de Diamante", "Usado para craftear ropa especial"];
    v702[167] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"];
    v702[57] = ["Espada de Madera", "¿Eso funciona?", "Daño: 12", "Daño para estructuras: 4"];
    v702[0] = ["Espada de Piedra", "Sé bueno con los otros", "Daño: 19", "Daño para estructuras: 6"];
    v702[5] = ["Espada de Oro", "¡Rey de la selva!", "Daño: 22", "Daño para estructuras: 7"];
    v702[6] = ["Espada de Diamante", "Puedes sentir el poder", "Daño: 24", "Daño para estructuras: 8"];
    v702[9] = ["Espada de Pirata", "Arrrrr!", "¡Mejor distancia que una espada normal", "Daño: 24", "Daño para estructuras: 8"];
    v702[30] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "Daño: 27", "Daño para estructuras: 9"];
    v702[62] = ["Espada del Dragón", "¡Tienes el poder de un Dragón!", "Daño: 30", "Daño para estructuras: 10"];
    v702[16] = ["Lanza del Dragón", "¡Mátalos a todos!", "Daño: 22", "Daño para estructuras: 6"];
    v702[8] = ["Pico de Madera", "Solo puede minar madera y piedra", "Daño: 1"];
    v702[1] = ["Pico de Piedra", "Puede minar hasta oro", "Daño: 2"];
    v702[3] = ["Pico de Oro", "Puede minar hasta Diamante", "Daño: 3", "Daño para estructuras: 1"];
    v702[4] = ["Pico de Diamante", "¡Puede minarlo todo!", "Daño: 4", "Daño para estructuras: 1"];
    v702[31] = ["Pico de Amatista", "¡Puede minarlo todo, parece fantastico!", "Daño: 5", "Daño para estructuras: 1"];
    v702[35] = ["Martillo de Piedra", "Bueno para destruir estructuras", "No funciona bien con diamante y amatista", "Daño: 2", "Daño para estructuras: 20"];
    v702[36] = ["Martillo de Oro", "Bueno para destruir estructuras", "No funciona bien con amatista ", "Daño: 3", "Daño para estructuras: 30"];
    v702[37] = ["Martillo de Diamante", "Bueno para destruir estructuras", "Daño: 4", "Daño para estructuras: 40"];
    v702[38] = ["Martillo de Amatista", "Bueno para destruir estructuras", "Daño: 5", "Daño para estructuras: 50"];
    v702[45] = ["Super Martillo", "¿Has planeado destruir el mundo?", "Daño: 12", "Daño para estructuras: 70"];
    v702[12] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "Daño: 10", "Daño para estructuras: 2"];
    v702[13] = ["Lanza de Piedra", "¡El comienzo de la evolución!", "Daño: 14", "Daño para estructuras: 4"];
    v702[14] = ["Lanza de Oro", "¡Cuidado, te hace mucho daño!", "Daño: 15", "Daño para estructuras: 5"];
    v702[15] = ["Lanza de Diamante", "¡Estas preparado para matar al Dragon!", "Daño: 17", "Daño para estructuras: 5"];
    v702[33] = ["Lanza de Amatista", "Los dragones te tienen miedo", "Daño: 18", "Daño para estructuras: 6"];
    v702[46] = ["Pala de Piedra", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 2"];
    v702[50] = ["Pala de Oro", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 3", "Daño para estructuras: 1"];
    v702[51] = ["Pala de Diamante", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 4", "Daño para estructuras: 1"];
    v702[52] = ["Pala de Amatista", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 5", "Daño para estructuras: 1"];
    v702[58] = ["Casco de Madera", "¡Mejor que nada!", "Protección contra jugadores: 1", "Protección contra animales: 4"];
    v702[25] = ["Casco de Piedra", "¡Estas listo para la batalla!", "Protección contra jugadores: 2", "Protección contra animales: 8"];
    v702[26] = ["Casco de Oro", "AKA el casco de los salvajes", "Protección contra jugadores: 4", "Protección contra animales: 13"];
    v702[27] = ["Casco de Diamante", "No ataques tanto", "Protección de jugadores: 5", "Protección contra animales: 19"];
    v702[43] = ["Casco de Amatista", "¡No tienes miedo de nada!", "Protección contra jugadores: 6", "Protección contra animales: 23"];
    v702[59] = ["Casco del Dragón", "¡Vas a dominar el mundo!", "Protección contra jugadores: 8", "Protección contra animales: 27"];
    v702[23] = ["Gorro del Explorador", "Los animales no te atacarán", "¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"];
    v702[41] = ["Gorro de Navidad", "¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"];
    v702[42] = ["Gorro del Duende", "¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"];
    v702[83] = ["Capucha", "¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", "Te calienta en invierno y fuera del agua"];
    v702[10] = ["Orejeras", "Como un abrigo pequeño.", "Te calienta en invierno y fuera del agua"];
    v702[11] = ["Chapka", "También llamado abrigo.", "Te calienta en el invierno y fuera del agua"];
    v702[40] = ["Gorro y Bufanda ", "Muy cómodo, muy caliente"];
    v702[84] = ["Gorra de Campesino", "Tus plantas crecen mas rápido", "Te Calienta en el invierno y fuera del agua"];
    v702[85] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", "Te calienta en invierno y fuera del agua"];
    v702[86] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aún más rápido", "Te calienta en invierno y fuera del agua"];
    v702[48] = ["Máscara de Buceo", "Eres un tiburón en el agua", "Calienta en el agua", "Protección contra jugadores: 2, Protección contra animales: 8"];
    v702[47] = ["Súper Máscara de Buceo", "Eres muy rápido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"];
    v702[185] = ["Esfera del Dragón", "Dada en la misión"];
    v702[149] = ["Corazón del Dragón", "¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreción"];
    v702[175] = ["Gema Verde", "¿¿No has hecho trampas, verdad??"];
    v702[176] = ["Gema Naranja", "¡Solo un pirata verdadero lo puede encontrar!"];
    v702[177] = ["Gema Azul", "Para gente muy amable"];
    v702[77] = ["Corona Verde", "Te sanas muy rápido", "Sanación con el tiempo: 40", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v702[78] = ["Corona Naranja", "Ahora tienes much suerte", "Protección contra jugadores: 4, Protección contra animales: 16"];
    v702[79] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderás tu alma", "Protección contra jugador: 4, Protección contra animales: 16"];
    v702[180] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"];
    v702[181] = ["Cubo Vacío", "Tienes que llenar este cubo con agua"];
    v702[127] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"];
    v702[128] = ["Botella Vacia", "La puedes llenar de agua"];
    v702[130] = ["Regadera Vacía", "La tienes que llenar de agua"];
    v702[49] = ["Regadera", "Te permite regar las plantas", "Daño: 1"];
    v702[29] = ["Mochila", "¡Mas espacio para tus cosas!"];
    v702[120] = ["Hoja", "Usada para hacer un libro"];
    v702[28] = ["Libro", "Reduce el tiempo de elaboración", "Lo tienes que tener en la mano para que funcione", "Daño: 1"];
    v702[195] = ["Vendaje", "Recuperas vida mas rapido", "Sanación tiempo: 30", "Efecto: 5"];
    v702[148] = ["Cerradura", "Te permite cerrar tu cofre"];
    v702[158] = ["Llave", "Te permite abrir un cofre cerrado"];
    v702[159] = ["Tótem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no dañan al resto tu equipo"];
    v702[125] = ["Puente", "Muy útil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar más rápido encima del agua"];
    v702[183] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"];
    v702[190] = ["Techo", "Te esconde un poco y te protege del frío"];
    v702[182] = ["Fuente", "Permite rellenar botellas", "Durabilidad: 1000"];
    v702[162] = ["Pared de Madera", "Es solo una pared.", "Durabilidad: 1000"];
    v702[163] = ["Pared de Piedra", "Es un poco más serio", "Durabilidad: 1500"];
    v702[164] = ["Pared de Oro", "¿Oro en de tus paredes? Eres rico", "Durabilidad: 2000"];
    v702[165] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"];
    v702[122] = ["Pared de Amatista", "¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"];
    v702[160] = ["Pincho de Madera", "Puede dañar a tus enemigos", "Daño: 10, Daño por golpe: 2", "Durabilidad: 150"];
    v702[168] = ["Pincho de Piedra", "No querría ser tu enemigo.", "Daño: 20", "Daño por contacto: 3", "Durabilidad: 300"];
    v702[169] = ["Pincho de Oro", "¡Eres tan cruel!", "Daño: 30", "Daño por golpe: 3", "Durabilidad: 600"];
    v702[170] = ["Pincho de Diamante", "No te gusta tener compañía.", "Daño: 40", "Daño por contacto: 4", "Durabilidad: 1200"];
    v702[123] = ["Pincho de Amatista", "¡¿Que demonios te hicieron tus vecinos?!", "Daño: 50", "Daño por contacto: 4", "Durabilidad: 2400"];
    v702[166] = ["Puerta de Madera", "Puedes abrir y cerrarla ", "Durabilidad: 1000"];
    v702[171] = ["Puerta de Piedra", "Una puerta más buena es más seria", "Durabilidad: 1500"];
    v702[172] = ["Puerta de Oro", "¿Estas reconstruyendo El Dorado?", "Durabilidad: 2000"];
    v702[173] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"];
    v702[124] = ["Puerta de Amatista", "¿Tu casa es una caja fuerte?", "Durabilidad: 3500"];
    v702[119] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", "Durabilidad: 1000"];
    v702[135] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v702[144] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    v702[151] = ["Piedra de Resurreción", "¡Es magia!", "Te resucitacuando eres una fantasma", "Perderás tu arma", "Durabilidad: 200"];
    v702[300] = "No puedes unirte a este servidor";
    v702[301] = "Expulsado: ";
    v702[302] = "Tu llave ya está usada";
    v702[303] = "Tu llave está mal";
    v702[304] = "Tienes una versión antigua, limpia tu cache";
    v702[305] = "No hay mas recursos";
    v702[306] = "Has sobrevivido 1 día";
    v702[307] = "Has sobrevivido ";
    v702[308] = " días";
    v702[309] = "Estás muerto ;-;";
    v702[310] = "No se encuentra un lugar para unirse, ¡spamea el botón de jugar!";
    v702[311] = "El servidor esta lleno, ¡spamea el botón de jugar!";
    v702[312] = "Recurso vacio";
    v702[313] = "¡Inventario lleno!(Haz click derecho para borrar cosas) ";
    v702[314] = " está muerto";
    v702[315] = "Esta no es la herramienta correcta";
    v702[316] = "Te has unido a un equipo";
    v702[317] = "Estás muerto";
    v702[318] = " se unió al equipo";
    v702[319] = "Tu equipo ha sido destruido";
    v702[320] = "Has dejado el equipo";
    v702[321] = " dejo el equipo ";
    v702[322] = "Alguien te robó tu token :>";
    v702[323] = "Elige un servidor";
    v702[324] = "jugadores";
    v702[325] = "total de jugadores";
    v702[326] = "Jugadores en este modo de juego";
    v702[327] = "Próximamente...";
    document.getElementById("nickname_input").placeholder = "Apodo";
    v706[0] = ["Has muerto por ninguna razón"];
    v706[1] = ["Has muerto de hambre, como implica el nombre del juego dice"];
    v706[2] = ["Te has congelado hasta morir, qué triste", "Moriste por hipotermia. La próxima quédate cerca de  una fogata."];
    v706[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente."];
    v706[4] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."];
    v706[5] = ["Tu cuerpo será un buen nido para los huevos de la arañas", "Una araña te ha matado, al menos no fué un conejo."];
    v706[6] = ["El lobo no tendrá hambre después de comerte.", "No son perros, no les gusta ser acariciados."];
    v706[7] = ["El zorro era demasiado rápido para ti.", "El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?"];
    v706[8] = ["El oso solo quería un abrazo", "El oso era demasiado para ti. Lo siento."];
    v706[9] = ["El dragón te quemó vivo.", "El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."];
    v706[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."];
    v706[11] = ["Un fantasma también puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."];
    v706[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.", "Has matado a la carne cruda. Ella también te ha matado a ti.."];
    v706[13] = ["Has muerto de sed, mejor bebe tu propia orina."];
    v706[14] = ["¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes."];
    v706[15] = ["No te preocupes, a la piraña le pareciste delicioso.", "Las pirañas comen a personas, incluyendote a ti también."];
    v706[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partió el kra-neo."];
    v706[17] = ["Tu piel se cayó, el sol te quemó."];
    v706[18] = ["El ajo guardado en tu bolsillo te quemó el cerebro."];
    v706[19] = ["Eres un vampiro, no te quedes cerca del ajo."];
    v706[20] = ["Has comido un ajo siendo  vampiro,¿que esperabas?"];
    v706[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", "Uuunnnggg...", "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"];
  }
  const v678 = 2;
  function f74(p440, p441, p442, p443, p444) {
    vVVUndefined195(vVVUndefined26, p440, p441, p442, p443, p444);
    return ((87 + (f44(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[3]) ^ f77(vVVVUndefined1973[4], vVVVUndefined1973[0]))) * 75 + 74) % 65537;
  }
  function f75(p445) {
    return function (p446, p447) {
      vVUndefined23(vVVUndefined26, p446, p447);
      const vVh4 = f77(vVVVUndefined1973[0], vVVVUndefined1973[1]);
      v680 = vVVVUndefined1973[0];
      v681 = vVVVUndefined1973[1];
      v682 = vVVVUndefined1973[0];
      v683 = vVVVUndefined1973[1];
      v684 = vVVVUndefined1973[0];
      v70(vVVUndefined26, v680, v681, v682, v683, v684);
      const v679 = ((118 + (f52(vVVVUndefined1973[0], vVVVUndefined1973[1]) ^ f52(vVVVUndefined1973[2], vVVVUndefined1973[3]))) * 48271 + 0) % 2147483647;
      var v680;
      var v681;
      var v682;
      var v683;
      var v684;
      return ((44 + (vVh4 ^ v679)) * 16807 + 0) % 2147483647;
    }(p445, 15357);
  }
  function f76() {
    v702[184] = ["You feel a great power emanating from this orb"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[328] = " BACK TO THE GAME";
    v702[329] = " Share on Twitter";
    v702[330] = " Share on Facebook";
    v702[331] = "You can buy items on the shop in the next game with your points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Kill";
    v702[335] = "Days survived";
    v702[336] = "Building method: Free. Press G to change";
    v702[337] = "Building method: Grid. Press G to change";
    v702[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v702[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v702[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v685 = 0; v685 < 7; v685++) {
      document.getElementById("claim_reward_" + v685).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v702[7] = ["Hand"];
    v702[140] = ["Boden", "Dreckig!"];
    v702[126] = ["Sand", "Ich habe es in meine Augen bekommen!"];
    v702[109] = ["Holz", "Du kannst niemals zu viel haben!"];
    v702[108] = ["Stein", "Auch Fels gennant"];
    v702[111] = ["Gold", "Sei großzügig, gib anderen etwas ab "];
    v702[112] = ["Diamant", "Was wirst du daraus machen?"];
    v702[121] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"];
    v702[131] = ["Mehl", "wird fürs Backen gebraucht"];
    v702[133] = ["Keks", "Ein prächtiger Keks von Großmutter", "Essen: 50"];
    v702[136] = ["Ein Kuchen", "Perfekter Kuchen für Gourmets", "Essen: 100"];
    v702[116] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"];
    v702[117] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"];
    v702[137] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"];
    v702[138] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"];
    v702[143] = ["Brot", "Ein vorzügliches französiches Brot", "Es wird als Währung im Markt benutzt", "Essen: 15"];
    v702[145] = ["Sandwich", "Schmeckt wie Krabbenburger", "Essen: 100"];
    v702[200] = ["Süßigkeiten", "Nur für Kinder!", "Essen: 100"];
    v702[199] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", "Essen: 100"];
    v702[201] = ["Girlande", "perfekter Schmuck für Dächer"];
    v702[115] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v702[110] = ["Beere", "Beeren lecker!", "Essen: 10"];
    v702[132] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v702[134] = ["Wildes Weizen", "Wenn es in eine Windmühle platziert wird, wird es zu Mehl"];
    v702[188] = ["Kürbis Saatgut", "Wird zu Kürbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v702[189] = ["Kürbis", "Es erinnert mich an Halloween", "Essen: 30"];
    v702[191] = ["Knoblauch Saatgut", "Sehr gefährlich für Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    v702[192] = ["Knoblauch", "Heilt dich und hält die Kälte fern", "Essen: 14", "Heilung über Zeit: 30", "Effekt: 1"];
    v702[193] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufügen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", "Haltbarkeit: 1000", "Lebenszeit: 8 Tage"];
    v702[194] = ["Dornenbusch", "Es sticht!"];
    v702[141] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dünger deine Pflanzen", "lässt sie schneller wachsen und reduziert den Wasserverbrauch", "Haltbarkeit: 2000"];
    v702[142] = ["Eis", "Nützlich um Kuchen und Wasser herzustellen"];
    v702[55] = ["Schraubenschlüssel", "Es kann Wände, Türen und Stacheln reparieren", "Schaden: 2"];
    v702[174] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"];
    v702[2] = ["Hasenfell", "Der Hase war so süß..."];
    v702[178] = ["Klares Fell", "Du bist eine Brotfabrik"];
    v702[179] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollführen"];
    v702[146] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."];
    v702[139] = ["Schuppen", "Es riecht wie Fisch!"];
    v702[129] = ["Kraken Haut", "Warst du nicht zu ängstlich?"];
    v702[113] = ["Lagerfeuer", "Wärmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"];
    v702[118] = ["Großes Lagerfeuer", "Wärmt dich länger!", "Haltbarkeit: 400", "Lebensdauer: 6min"];
    v702[114] = ["Werkbank", "Sehr nützlich um allerlei Sachen herzustellen"];
    v702[161] = ["Faden", "Wird benötigt um Mützen und Rucksäcke herzustellen  "];
    v702[147] = ["Diamant Faden", "Wird für spezielle Mützen gebraucht"];
    v702[167] = ["Truhe", "Damit kannst du Gegenstände lagern", "Haltbarkeit: 500"];
    v702[57] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an Gebäuden: 4"];
    v702[0] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an Gebäuden: 6"];
    v702[5] = ["Goldschwert", "König des Waldes", "Schaden: 22", "Schaden an Gebäuden: 7"];
    v702[6] = ["Diamantschwert", "Du kannst die Kraft spüren", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v702[9] = ["Piratenschwert", "Ayyyyy!", "Hat eine höhere Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an Gebäuden: 8"];
    v702[30] = ["Amethystschwert", "Mauve ist die schönste Farbe der Welt", "Schaden: 27", "Schaden an Gebäuden: 9"];
    v702[62] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an Gebäuden: 10"];
    v702[16] = ["Drachenspeer", "Töte sie alle!", "Schaden: 22", "Schaden an Gebäuden: 6"];
    v702[8] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"];
    v702[1] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", "Schaden: 2"];
    v702[3] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v702[4] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v702[31] = ["Amethystspitzhacke", "Kann alles abbauen, sieht außerdem gut aus!", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v702[35] = ["Steinhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Diamant oder Amethyst", "Schaden: 2", "Schaden an Gebäuden: 20"];
    v702[36] = ["Goldhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an Gebäuden: 30"];
    v702[37] = ["Diamanthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 4", "Schaden an Gebäuden: 40"];
    v702[38] = ["Amethysthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 5", "Schaden an Gebäuden: 50"];
    v702[45] = ["Superhammer", "Willst du die Welt zerstören?", "Schaden: 12", "Schaden an Gebäuden: 70"];
    v702[12] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an Gebäuden: 2"];
    v702[13] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an Gebäuden: 4"];
    v702[14] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an Gebäuden: 5"];
    v702[15] = ["Diamantspeer", "Du bist bereit einen Drachen zu töten", "Schaden: 17", "Schaden an Gebäuden: 5"];
    v702[33] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an Gebäuden: 6"];
    v702[46] = ["Steinschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 2"];
    v702[50] = ["Goldschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    v702[51] = ["Diamantschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    v702[52] = ["Amethystschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 5", "Schaden an Gebäuden: 1"];
    v702[58] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"];
    v702[25] = ["Steinhelm", "Du bist bereit zu kämpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"];
    v702[26] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"];
    v702[27] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"];
    v702[43] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"];
    v702[59] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"];
    v702[23] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine Geräusche!", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[41] = ["Weihnachtshut", "Oh, oh, oh, fröhliche Weihnachten", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[42] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[83] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für acht Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[10] = ["Ohrwärmer", "Eine Art kleiner chapka.", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[11] = ["Chapka", "Auch Mantel genannt.", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[40] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"];
    v702[84] = ["Bauer", "Deine Pflanzen wachsen schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[85] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für vier Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[86] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    v702[48] = ["Tauchermaske", "Du bist schneller im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"];
    v702[47] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v702[185] = ["Drachenkugel", "Erhalten bei abschließung der Quest"];
    v702[149] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist für 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."];
    v702[175] = ["Grüner Edelstein", "Du hast nicht gemogelt, versprochen?"];
    v702[176] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"];
    v702[177] = ["Blauer Edelstein", "Für sehr nette Leute"];
    v702[77] = ["Grüne Krone", "Du heilst dich selbst sehr schnell", "Heilung über Zeit: 40", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v702[78] = ["Orangene Krone", "Du fühlst dich plötzlich als hättest du mehr Glück", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v702[79] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    v702[180] = ["Eimer", "Nützlich um einen Brunnen zu füllen", "Ein Eimer ist vergleichbar mit zwölf Flaschen"];
    v702[181] = ["Leerer Eimer", "Du musst den Eimer in der Nähe einer Wasserquelle füllen"];
    v702[127] = ["Flasche", "Erlaubt dir überall Wasser zu trinken", "Wasser: 50"];
    v702[128] = ["Leere Flasche", "Du musst die Flasche in der Nähe einer Wasserquelle füllen"];
    v702[130] = ["Leere Gießkanne", "Du musst es mit einer Wasserquelle füllen"];
    v702[49] = ["Gießkanne", "Erlaubt das wässern von Pflanzen", "Schaden: 1"];
    v702[29] = ["Rucksack", "Mehr Platz im Inventar!"];
    v702[120] = ["Papier", "Wird fürs Büchermachen verwendet"];
    v702[28] = ["Buch", "Reduziert die benötigte Zeit beim herstellen von Gegenständen", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"];
    v702[195] = ["Verband", "Heile dich schneller", "Heilung über Zeit: 30", "Effekt: 5"];
    v702[148] = ["Schloss", "Erlaubt dir deine Truhe zu verschließen"];
    v702[158] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu öffnen"];
    v702[159] = ["Totem", "Erlaubt dir ein Team zu gründen", "Teile Türen und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"];
    v702[125] = ["Brücke", "Sehr nützlich über Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lässt dich schneller auf dem Wasser laufen"];
    v702[183] = ["Schild", "Hinterlasse eine Nachricht für andere hier", "Haltbarkeit: 200"];
    v702[190] = ["Dach", "Versteckt dich ein wenig und hält warm dabei!"];
    v702[182] = ["Brunnen", "Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle", "Haltbarkeit: 1000"];
    v702[162] = ["Holzwand", "Kennst du den Wandtanz?", "Haltbarkeit: 1000"];
    v702[163] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"];
    v702[164] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", "Haltbarkeit: 2000"];
    v702[165] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"];
    v702[122] = ["Amethystwand", "Du musst dich wirklich fürchten raus zu gehen!", "Haltbarkeit: 3000"];
    v702[160] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"];
    v702[168] = ["Steinstacheln", "Ich würde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"];
    v702[169] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"];
    v702[170] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"];
    v702[123] = ["Amethyststacheln", "Was zur Hölle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"];
    v702[166] = ["Holztür", "Kann von dir oder deinen Freunden geöffnet werden", "Haltbarkeit: 1000"];
    v702[171] = ["Steintür", "Eine stärkere Tür ist ernsthafter", "Haltbarkeit: 1500"];
    v702[172] = ["Goldtür", "Baust du el dorado?", "Haltbarkeit: 2000"];
    v702[173] = ["Diamanttür", "Für ein scheinendes Haus", "Haltbarkeit: 2500"];
    v702[124] = ["Amethysttür", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"];
    v702[119] = ["Ofen", "Wärmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", "Haltbarkeit: 1000"];
    v702[135] = ["Windmühle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v702[144] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    v702[151] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"];
    v702[300] = "Du kannst diesem Server nicht beitreten";
    v702[301] = "Gekickt: ";
    v702[302] = "Dein Schlüssel wurde bereits von jemand anderem benutzt";
    v702[303] = "Dein Schlüssel ist falsch";
    v702[304] = "Deine Version ist veraltet, säubere dein Cache";
    v702[305] = "Es gibt keine neuen Ressourcen";
    v702[306] = "Du hast einen Tag überlebt";
    v702[307] = "Du hast überlebt ";
    v702[308] = " Tage";
    v702[309] = "Du bist gestorben ;-;";
    v702[310] = "Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!";
    v702[311] = "Server ist voll! Drücke immer wieder auf spielen!";
    v702[312] = "Ressource ist leer";
    v702[313] = "Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)";
    v702[314] = " ist gestorben";
    v702[315] = "Das ist nicht das richtige Werkzeug";
    v702[316] = "Du bist einem Team beigetreten";
    v702[317] = "Du bist gestorben";
    v702[318] = " ist dem Team beigetreten";
    v702[319] = "Dein Team wurde zerstört";
    v702[320] = "Du hast das Team verlassen";
    v702[321] = " hat das Team verlassen";
    v702[322] = "Jemand hat dein Token gestohlen :>";
    v702[323] = "Suche dir ein Server aus";
    v702[324] = "Spieler";
    v702[325] = "alle Spieler";
    v702[326] = "Spieler in diesem Modus";
    v702[327] = "Bald verfügbar...";
    document.getElementById("nickname_input").placeholder = "Spitzname";
    v706[0] = ["Du wurdest ohne Grund getötet"];
    v706[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"];
    v706[2] = ["Du bist erfroren. Zu schade", "Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen ."];
    v706[3] = ["Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."];
    v706[4] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber."];
    v706[5] = ["Dein Körper wird zu einem Spinnennest", "Eine Spinne hat dich getötet. Zumindest war es kein Hase."];
    v706[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden."];
    v706[7] = ["Der Fuchs war zu schnell für dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?"];
    v706[8] = ["Der Bär wollte nur eine Umarmung.", "Der Bär war zu viel zu ertragen. Es tut mir nicht leid."];
    v706[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."];
    v706[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."];
    v706[11] = ["Sogar Geister können sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."];
    v706[12] = ["Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet."];
    v706[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."];
    v706[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es."];
    v706[15] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."];
    v706[16] = ["LapaMauve plant nicht, dass du den Kraken töten kannst", "Ein Kraken hat deinen Schädel zertrümmert."];
    v706[17] = ["Deine Haut fällt auseinander, die Sonne hat dich umgebracht."];
    v706[18] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "];
    v706[19] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."];
    v706[20] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"];
    v706[21] = ["Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", "Uuunnnggg...", "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"];
  }
  const v686 = 12;
  function f77(p448, p449) {
    vVUndefined16(vVVUndefined26, p448, p449);
    return (24 << ((vVVVUndefined1973[0] ^ vVVVUndefined1973[1]) >> 8 & 255)) + (16 << ((vVVVUndefined1973[0] ^ vVVVUndefined1973[1]) & 255)) + (8 << ((vVVVUndefined1973[0] ^ vVVVUndefined1973[1]) >> 16 & 255)) + (0 << ((vVVVUndefined1973[0] ^ vVVVUndefined1973[1]) >> 24 & 255));
  }
  function f78() {
    v702[184] = ["You feel a great power emanating from this orb"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[328] = " BACK TO THE GAME";
    v702[329] = " Share on Twitter";
    v702[330] = " Share on Facebook";
    v702[331] = "You can buy items on the shop in the next game with your points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Kill";
    v702[335] = "Days survived";
    v702[336] = "Building method: Free. Press G to change";
    v702[337] = "Building method: Grid. Press G to change";
    v702[197] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    v702[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    v702[198] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quests";
    document.getElementById("timeremainingquest").innerHTML = "Time Remaining";
    document.getElementById("constraintquest").innerHTML = " Constraints";
    document.getElementById("claim_rewards").innerHTML = " Claim rewards";
    document.getElementById("rewardquest").innerHTML = " Reward";
    document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst";
    document.getElementById("survive20min_3").innerHTML = "Survive without losing life";
    document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document.getElementById("dont_hit_5").innerHTML = " Be peaceful";
    document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var v687 = 0; v687 < 7; v687++) {
      document.getElementById("claim_reward_" + v687).innerHTML = "CLAIM REWARD!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUIT";
    v702[7] = ["Ręka"];
    v702[140] = ["Ziemia", "Brudna!"];
    v702[126] = ["Piasek", "Mam go w oczach!"];
    v702[109] = ["Drewno", "Nie możesz mieć go wystarczająco!"];
    v702[108] = ["Kamień", "Także nazywany skałą"];
    v702[111] = ["Złoto", "Bądź hojny, daj trochę innym"];
    v702[112] = ["Diament", "Co z nim zrobisz?"];
    v702[121] = ["Ametyst", "Jest Fiołkowy jak Lapa"];
    v702[131] = ["Mąka", "Używana w gotowaniu"];
    v702[133] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"];
    v702[136] = ["Ciasto", "Raj dla smakoszy", "Jedzenie: 100"];
    v702[116] = ["Surowe mięso", "Możesz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"];
    v702[117] = ["Pieczone mięso", "Krwisty stek, proszę", "Jedzenie: 35"];
    v702[137] = ["Surowa ryba", "Myślę, że nadal jest żywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"];
    v702[138] = ["Pieczona ryba", "Z cytryną jest idealna", " Jedzenie: 35"];
    v702[143] = ["Chleb", "Świetny Francuski chleb", "Jest walutą używaną w markecie", "Jedzenie: 15"];
    v702[145] = ["Kanapka", "Smakuje jak kraboburger", "Jedzenie: 100"];
    v702[200] = ["Cukierki", "Tylko dla dzieci!", "Jedzenie: 100"];
    v702[199] = ["Laska cukrowa", "Spróbuj, jest przepyszna", "Jedzenie: 100"];
    v702[201] = ["Girlanda", "Idealna do dekorowania dachów"];
    v702[115] = ["Nasionko jagody", "Wyrośnie w jagody", "Narodziny: 2min", "Rośnięcie: 55s", "Podlewanie: 3min 20s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v702[110] = ["Jagody", "Jagody są pyszne!", "Jedzenie: 10"];
    v702[132] = ["Nasiono pszenicy", "Wyrośnie w pszenicę", "Narodziny: 2min", "Rośnięcie: 16s", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v702[134] = ["Pszenica", "Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka"];
    v702[188] = ["Nasiono dyni", "Wyrośnie w dynię", "Narodziny: 2min 40s", "Rośnięcie: 2min", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v702[189] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"];
    v702[191] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 1min 10s", "Podlewanie: 1min 40s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    v702[192] = ["Czosnek", "Leczy cię i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"];
    v702[193] = ["Nasiono kolczastego krzewu", "Może zranić twoich wrogów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 15s", "Podlewanie: 3min", "Wytrzymałość: 1000", "Czas życia: 8 dni"];
    v702[194] = ["Kolczasty krzew", "Kłuje!"];
    v702[141] = ["Donica", "Naprawdę, użyj jej", "Z tym genetycznie modyfikowanym nawozem, twoje rośliny", "będą rosły znacznie szybciej i będą potrzebować mniej wody", "Wytrzymałość: 2000"];
    v702[142] = ["Lód", "Użyteczny do robienia ciast i wody"];
    v702[55] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolców", "Uszkodzenie: 2"];
    v702[174] = ["Wilcza skóra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"];
    v702[2] = ["Skóra królika", "Ten królik był taki słodziutki..."];
    v702[178] = ["Skóra", "Jesteś fabryką chleba"];
    v702[179] = ["Ciemna skóra", "Byłeś gotowy zrobić coś złego"];
    v702[146] = ["Zimowa skóra", "Te zwierzęta chciały się tylko przytulić..."];
    v702[139] = ["Łuski", "Pachnie jak ryba!"];
    v702[129] = ["Skóra krakena", "Nie byłeś zbyt przestraszony?"];
    v702[113] = ["Ognisko", "Ociepli cię!", "Wytrzymałość: 150", "Czas życia: 2min"];
    v702[118] = ["Duże ognisko", "Ociepli cię na dłużej!", "Wytrzymałość: 400", "Czas życia: 6min"];
    v702[114] = ["Stół rzemieślniczy", "Użyteczny do stwarzania przedmiotów"];
    v702[161] = ["Nić", "Używany w tworzeniu czapek i plecaków"];
    v702[147] = ["Diamentowa nić", "Używana w tworzeniu specjalnych czapek"];
    v702[167] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotów", "Wytrzymałość: 500"];
    v702[57] = ["Drewniany miecz", "To coś działa?", "Obrażenia: 12", "Obrażenia do budowli: 4"];
    v702[0] = ["Kamienny miecz", "Bądź miły dla innych", "Obrażenia: 19", "Obrażenia do budowli: 6"];
    v702[5] = ["Złoty miecz", "Król lasu", "Obrażenia: 22", "Obrażenia do budowli: 7"];
    v702[6] = ["Diamentowy miecz", "Możesz poczuć moc", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v702[9] = ["Piracki miecz", "Ayyyyy!", "Dłuższy niż zwykły miecz", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    v702[30] = ["Ametystowy miecz", "fiołkowy to najpiękniejszy kolor na świecie", "Damage: 27", "Obrażenia do budowli: 9"];
    v702[62] = ["Smoczy miecz", "Bez litości!", "Obrażenia: 30", "Obrażenia do budowli: 10"];
    v702[16] = ["Smocza włócznia", "Zabij ich wszystkich!", "Obrażenia: 22", "Obrażenia do budowli: 6"];
    v702[8] = ["Drewniany kilof", "Może wydobywać tylko kamienie i drewno", "Obrażenia: 1"];
    v702[1] = ["Kamienny kilof", "Może wydobywać drewno, kamienie i złoto", "Obrażenia: 2"];
    v702[3] = ["Złoty kilof", "Może także wydobywać diamenty", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v702[4] = ["Diamentowy kilof", "Może wydobywać wszystko", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v702[31] = ["Ametystowy kilof", "Może wydobywać wszystko. Wygląda fantastycznie!", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v702[35] = ["Kamienny młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 2", "Obrażenia do budowli: 20"];
    v702[36] = ["Złoty młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 3", "Obrażenia do budowli: 30"];
    v702[37] = ["Diamentowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 4", "Obrażenia do budowli: 40"];
    v702[38] = ["Ametystowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 5", "Obrażenia do budowli: 50"];
    v702[45] = ["Super młot", "Miałeś kiedyś plan zniszczenia świata?", "Obrażenia: 12", "Obrażenia do budowli: 70"];
    v702[12] = ["Drewniana włócznia", "Jak patyk, ale kłuje.", "Obrażenia: 10", "Obrażenia do budowli: 2"];
    v702[13] = ["Kamienna włócznia", "Początek ewolucji!", "Obrażenia: 14", "Obrażenia do budowli: 4"];
    v702[14] = ["Złota włócznia", "Uważaj, kłuje!", "Obrażenia: 15", "Obrażenia do budowli: 5"];
    v702[15] = ["Diamentowa włócznia", "Jesteś gotowy, aby zabić smoka", "Obrażenia: 17", "Obrażenia do budowli: 5"];
    v702[33] = ["Ametystowa włócznia", "Smoki już nie są dla ciebie zagrożeniem", "Obrażenia: 18", "Obrażenia do budowli: 6"];
    v702[46] = ["Kamienna łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 2"];
    v702[50] = ["Złota łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    v702[51] = ["Diamentowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    v702[52] = ["Ametystowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    v702[58] = ["Drewniany hełm", "Lepsze niż nic", "Obrona przed graczami: 1", "Obrona przed zwierzętami: 4"];
    v702[25] = ["Kamienny hełm", "Jesteś gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzętami: 8"];
    v702[26] = ["Złoty hełm", "Zwany także hełmem barbarzyńców", "Obrona przed graczami: 4", "Obrona przed zwierzętami: 13"];
    v702[27] = ["Diamentowy hełm", "Nie przechwalaj się za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzętami: 19"];
    v702[43] = ["Ametystowy hełm", "Nie boisz się już niczego", "Obrona przed graczami: 6", "Obrona przed zwierzętami: 23"];
    v702[59] = ["Smoczy hełm", "Zmierzysz się z całym światem", "Obrona przed graczami: 8", "Obrona przed zwierzętami: 27"];
    v702[23] = ["Czapka odkrywcy", "Zwierzęta nie będą zwracały na ciebie uwagi", "ale nie rób hałasu!", "Ciepło w i poza zimą"];
    v702[41] = ["świąteczna czapka", "Oh, oh, oh, Wesołych Świąt", "Ciepło w i poza zimą"];
    v702[42] = ["Czapka elfa", "Nie pozwól się być wykorzystywanym, mały śnieżny elfie!", "Ciepło w i poza zimą"];
    v702[83] = ["Kaptur", "Jesteś łobuzem", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w chłopską tunikę", "Jest ciepło w i poza zimą"];
    v702[10] = ["Nauszniki", "Jakiś inny rodzaj małej czapki.", "Ciepło w i poza zimą"];
    v702[11] = ["Czapka", "Także nazywana płaszczem.", "Ciepła w i poza zimą"];
    v702[40] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepła"];
    v702[84] = ["Chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepła w i poza zimą"];
    v702[85] = ["Zimowy kaptur", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w tunikę zimowego chłopa", "Jest ciepło w i poza zimą"];
    v702[86] = ["Zimowa chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepło w i poza zimą"];
    v702[48] = ["Maska do nurkowania", "Jesteś szybki w wodzie", "Ciepło", "Obrona przed graczami: 2, Obrona przed zwierzętami: 8"];
    v702[47] = ["Strój głębinowy", "Jesteś bardzo szybki w wodzie", "Ciepło ci w wodzie", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v702[185] = ["Smocza kula", "Zdobyta podczas zadania"];
    v702[149] = ["Smocze serce", "Zamienia cię w ducha po śmierci!", "Jesteś duchem na 60 sekund", "Znajdź kamień rezurekcyjny"];
    v702[175] = ["Zielony kryształ", "Nie oszukiwałeś, przysięgasz?"];
    v702[176] = ["Pomarańczowy kryształ", "Tylko prawdziwy pirat może go znaleźć!"];
    v702[177] = ["Niebieski kryształ", "Dla zbyt miłych ludzi"];
    v702[77] = ["Zielona korona", "Szybko się leczysz", "Uzdrawia z biegiem czasu: 40", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v702[78] = ["Pomarańczowa korona", "Nagle poczułeś smak szczęścia", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v702[79] = ["Niebieska korona", "Gdy już będziesz martwy, zamienisz się w ducha", "Przy okazji stracisz swoją broń i kilof", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    v702[180] = ["Wiadro", "Również przydatne do napełnienia studni", "Jedno wiadro jest jak dwanaście butelek"];
    v702[181] = ["Puste wiadro", "Musisz napełnić to wiadro wodą"];
    v702[127] = ["Butelka", "Pozwala pić wodę wszędzie", "Woda: 50"];
    v702[128] = ["Pusta butelka", "Możesz napełnić tą butelkę blisko źródła wody"];
    v702[130] = ["Pusta konewka", "Musisz ją napełnić w źródle wody, aby ją użyć"];
    v702[49] = ["Konewka", "Pozwala podlewać rośliny", "Obrażenia: 1"];
    v702[29] = ["Plecak", "Więcej miejsca na twoje przedmioty!"];
    v702[120] = ["Papier", "Używany w tworzeniu książki"];
    v702[28] = ["Książka", "Pozwala znacznie skrócić wytwarzanie", "Musisz ją nosić by zadziałała", "Uszkodzenie 1"];
    v702[195] = ["Bandaż", "Szybciej zregeneruj życie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"];
    v702[148] = ["Zamek", "Pozwala ci zamknąć skrzynię"];
    v702[158] = ["Wytrych", "Pozwala ci odblokować jedną skrzynię"];
    v702[159] = ["Totem", "Pozwala ci stworzyć drużynę", "Dziel się drzwiami i zamkniętymi skrzyniami", "Szkodliwe budynki nie zranią twoich przyjaciół"];
    v702[125] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci pić bez utonięcia", "Chodzisz szybciej w wodzie"];
    v702[183] = ["Tabliczka", "Zostaw wiadomość dla innych", "Wytrzymałość: 200"];
    v702[190] = ["Dach", "Trochę cie ogrzewa i chowa!"];
    v702[182] = ["Studnia", "Umożliwia napełnienie butelki", "Wytrzymałość: 1000"];
    v702[162] = ["Drewniany mur", "Znasz taniec ścian?", "Wytrzymałość: 1000"];
    v702[163] = ["Kamienny mur", "Jest to trochę bardziej poważniejsze.", "Wytrzymałość: 1500"];
    v702[164] = [" Złoty mur", "Złoto na twoich murach? To trochę krzykliwe.", "Wytrzymałość: 2000"];
    v702[165] = ["Diamentowy mur", "Jaki błyszczący, uważaj na oczy", "Wytrzymałość: 2500"];
    v702[122] = ["Ametystowy mur", "Musisz bardzo się bać, aby wyjść!", "Wytrzymałość: 3000"];
    v702[160] = ["Drewniany kolczasty mur", "Może uszkodzić wrogów", "Obrażenia: 10, Obrażenia po uszkodzeniu: 2", "Wytrzymałość: 150"];
    v702[168] = ["Kamienny kolczasty mur", "Nie chciałbym być twoim wrogiem.", "Obrażenia: 20", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 300"];
    v702[169] = ["Złoty kolczasty mur", "Jesteśtaki okrutny.", "Obrażenia: 30", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 600"];
    v702[170] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "Obrażenia: 40", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 1200"];
    v702[123] = ["Ametystowy kolczasty mur", "Co ci sąsiedzi ci zrobili?", "Obrażenia: 50", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 2400"];
    v702[166] = ["Drewniane drzwi", "Może być otwarte przez ciebie lub przyjaciół", "Wytrzymałość: 1000"];
    v702[171] = ["Kamienne drzwi", "Solidne drzwi są bardziej poważne ", "Wytrzymałość: 1500"];
    v702[172] = ["Złote drzwi", "Czy odbudowujesz El Dorado?", "Wytrzymałość: 2000"];
    v702[173] = ["Diamentowe drzwi", "Dla błyszczącego domu", "Wytrzymałość: 2500"];
    v702[124] = ["Ametystowe drzwi", "Czy twój dom to zamknięty sejf?", "Wytrzymałość: 3000"];
    v702[119] = ["Piec", "Ogrzewa cię", "Zużywa drewno co 5 sekund", "Wytrzymałość: 1000"];
    v702[135] = ["Młyn", "Może produkować mąkę z pszenicy", "Przygotowanie mąki zajmuje 5 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v702[144] = ["Piec do chleba", "Pozwala na wypiek chleba z mąki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    v702[151] = ["Kamień rezurekcyjny", "To magia", "Wskrzesi cię jeśli jesteś duchem", "Stracisz swoja broń i kilof", "Wytrzymałość: 200"];
    v702[300] = "Nie możesz dołączyć do tego serwera";
    v702[301] = "Wyrzucony: ";
    v702[302] = "Twój klucz jest aktualnie używany przez innego gracza";
    v702[303] = "Twój klucz jest nieprawidłowy";
    v702[304] = "Posiadasz starszą wersję, musisz wyczyścić swoją pamięć";
    v702[305] = "Nie ma nowych minerałów, zwierząt, i jedzenia";
    v702[306] = "Przeżyłeś 1 dzień";
    v702[307] = "Przeżyłeś ";
    v702[308] = " dni";
    v702[309] = "Jesteś martwy ;-;";
    v702[310] = "Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...";
    v702[311] = "Serwer jest pełny! Spamuj przycisk zagraj!";
    v702[312] = "Źródło jest puste";
    v702[313] = "Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)";
    v702[314] = " jest martwy";
    v702[315] = "To nie jest właściwe narzędzie";
    v702[316] = "Dołączyłeś do drużyny";
    v702[317] = "Jesteś martwy";
    v702[318] = " dołączył do drużyny";
    v702[319] = "Twoja drużyna została zniszczona";
    v702[320] = " Opuściłeś drużynę";
    v702[321] = " opuścił drużynę";
    v702[322] = "Ktoś ukradł twój żeton :>";
    v702[323] = "Wybierz serwer";
    v702[324] = "graczy";
    v702[325] = "wszystkich graczy";
    v702[326] = "graczy w tym trybie";
    v702[327] = "Już wkrótce...";
    document.getElementById("nickname_input").placeholder = "Przydomek";
    v706[0] = ["Zostałeś zabity bez powodu"];
    v706[1] = ["Umarłeś z głodu, jak nazwa gry wskazuje"];
    v706[2] = ["Zamarzłeś na śmierć. Ale smutne", "Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska."];
    v706[3] = ["Gracz zabił cię, mówiąc ci 'git gud.' ", "Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie."];
    v706[4] = ["Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.", "Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię."];
    v706[5] = ["Twoje ciało stało się gniazdem dla pajęczych jaj", "Pająk cię zabił. Przynajmniej to nie był królik."];
    v706[6] = ["Wilk już nie będzie głodował po zjedzeniu cię", "To nie są pieski.Wilki nie lubią jak się je głaszcze."];
    v706[7] = ["Lis był dla ciebie za szybki", "Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?"];
    v706[8] = ["Niedźwiedź chciał się tylko przytulić.", "Niedźwiedź był biedny. Nie jest mi przykro."];
    v706[9] = ["Zostałeś spalony na popiół przez smoka. Jakie to smutne.", "Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć."];
    v706[10] = ["Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...", "Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy."];
    v706[11] = ["Nawet duch potrafi umrzeć.", "Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc..."];
    v706[12] = ["Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.", "Ty zabiłeś surowe mięso. Ono zabiło ciebię."];
    v706[13] = ["Zginąłeś z pragnienia. Lepiej pić własny mocz."];
    v706[14] = ["Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz."];
    v706[15] = ["Nie martw się, zasmakowałeś pirani.", "Zabawny fakt: Piranie jedzą ludzi, włączając ciebie."];
    v706[16] = ["LapaMauve nie planuje abyś mógł zabić krakena", "Kraken rozwalił twoją czaszkę."];
    v706[17] = ["Twoja skóra odpada, słońce cię zabija."];
    v706[18] = ["Czosnek w twoich kieszeniach  ugotował ci mózg."];
    v706[19] = ["Jako wampir, nie stałbym blisko ząbków czosnku."];
    v706[20] = ["Zjadłeś czosnek jako wampir, czego oczekiwałeś?"];
    v706[21] = ["Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg... Głoduję", "Potrzebuję twojego mózgu Uuunnnggg...", "Świeże mięso tutaj.. Uuunnnggg", "Uuunnnggg... Jesteś pyszny", "Uuunnnggg...", "Jeść... uuunnnggg...", "Czuję krew... Uuunnnggg"];
  }
  function f79() {
    v702[184] = ["You feel a great power emanating from this orb"];
    v706[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    v702[196] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    v702[328] = " RETOUR AU JEU";
    v702[329] = " Partage sur Twitter";
    v702[330] = " Partage sur Facebook";
    v702[331] = "Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points";
    v702[332] = "points";
    v702[333] = "Score";
    v702[334] = "Tués";
    v702[335] = "Jours survécus";
    v702[336] = "Mode de construction: Libre. Appuie sur G pour changer";
    v702[337] = "Mode de construction: Grille. Appuie sur G pour changer";
    v702[197] = ["Pince de crabe", "Les pinces de crabes peuvent aussi être mangées", "Food: 10"];
    v702[18] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portée", "avec un casque un crabe sur un Crab King", "Damage: 14", "Building Damage: 4"];
    v702[61] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", "Players Defense: 4", "Animals Defense: 13"];
    v702[198] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te régénères plus vite", "Durability: 400"];
    document.getElementById("typequest").innerHTML = "Chrono Quêtes";
    document.getElementById("timeremainingquest").innerHTML = "Temps Restant";
    document.getElementById("constraintquest").innerHTML = " Contraintes";
    document.getElementById("claim_rewards").innerHTML = " Résultat";
    document.getElementById("rewardquest").innerHTML = " Récompenses";
    document.getElementById("killdragon_1").innerHTML = " Collecte 1 Cœur de dragon dans la cave";
    document.getElementById("amethyst_2").innerHTML = " Récolte 1 améthyste";
    document.getElementById("survive20min_3").innerHTML = "Survis sans perdre de vie";
    document.getElementById("treasure_chest_4").innerHTML = " Ouvre 5 coffres au trésor";
    document.getElementById("dont_hit_5").innerHTML = " Sois pacifique";
    document.getElementById("bread_6").innerHTML = " Cuisine 100 pains en hiver, seul et sans retour en arrière";
    document.getElementById("winter_7").innerHTML = " Après 1 jour, survis en hiver";
    for (var v688 = 0; v688 < 7; v688++) {
      document.getElementById("claim_reward_" + v688).innerHTML = "RÉCOMPENSE!";
    }
    document.getElementById("quit_chronoquest").innerHTML = " QUITTER";
    v702[7] = ["Main"];
    v702[140] = ["Terre", "C'est sale!"];
    v702[126] = ["Sable", "J'en ai dans les yeux"];
    v702[109] = ["Bois", "Tu n'en auras jamais trop!"];
    v702[108] = ["Pierre", "Aussi appelée roche"];
    v702[111] = ["Or", "Sois généreux, donne en aux autres"];
    v702[112] = ["Diamant", "Comme tes yeux! wesh"];
    v702[121] = ["Améthyste", "C'est Mauve comme Lapa"];
    v702[131] = ["Farine", "Utile pour la cuisine"];
    v702[133] = ["Cookie", "Un somptueux cookie de Grand-Mère", "Nourriture: 50"];
    v702[136] = ["Gâteau", "Pour les fins gourmets", "Nourriture: 100"];
    v702[116] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"];
    v702[117] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"];
    v702[137] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"];
    v702[138] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"];
    v702[143] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marché", "Nourriture: 15"];
    v702[145] = ["Sandwich", "Le Jambon Beurre vaincra", "Nourriture: 100"];
    v702[200] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"];
    v702[199] = ["Canne à sucre", "Sans sucre de canne", "Nourriture: 20"];
    v702[201] = ["Guirlandes", "Utilisable sur les toits"];
    v702[115] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v702[110] = ["Baies", "Peu nourrissant", "Nourriture: 10"];
    v702[132] = ["Graines de blé", "Deviennent du blé", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v702[134] = ["Blé", "Peut être transformé en farine dans les moulins"];
    v702[188] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    v702[189] = ["Citrouille", "Ça me rappelle Halloween", "Nourriture: 30"];
    v702[191] = ["Graines d'ail", "Très dangereux pour les vampires", "Dégâts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", "Durabilité: 700", "Durée de vie: 8 jours"];
    v702[192] = ["Ail", "Soigne et réduit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"];
    v702[193] = ["Graines de ronces", "Peuvent blesser vos ennemis", "Dégâts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", "Durabilité: 1000", "Durée de vie: 8 jours"];
    v702[194] = ["Ronces", "Ça pique!"];
    v702[141] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", "Durabilité: 2000"];
    v702[142] = ["Glace", "Pratique pour faire de l'eau et des gâteaux"];
    v702[55] = ["Clé à molette", "Pour réparer les portes, les murs et les piques", "Dégâts: 2"];
    v702[174] = ["Peau de loup", "Il était où le gentil ti Youki?"];
    v702[2] = ["Peau de lapin", "Vous êtes un monstre"];
    v702[178] = ["Fourrure blanche", "Tu es une usine à pain"];
    v702[179] = ["Fourrure noire", "Tu te sens prêt à faire quelque chose de mal"];
    v702[146] = ["Fourrure d'hiver", "Il voulait juste un calin"];
    v702[139] = ["Écailles", "Ça sent le poisson!"];
    v702[129] = ["Peau du kraken", "Tu n'as pas eu trop peur?"];
    v702[113] = ["Feu de camp", "Réchauffe", "Durabilité: 150", "Durée de vie: 2min"];
    v702[118] = ["Grand feu de camp", "Réchauffe plus longtemps", "Durabilité: 400", "Durée de vie: 6min"];
    v702[114] = ["Établi", "Utile pour fabriquer toute sorte d'objets"];
    v702[161] = ["Fil", "Utile pour faire des chapeaux et un sac"];
    v702[147] = ["Fil de diamant", "Utile pour faire des chapeaux"];
    v702[167] = ["Coffre", "Permet de ranger des objets", "Durabilité: 500"];
    v702[57] = ["Épée en bois", "C'est pour les enfants", "Dégâts: 12", "Démolition: 4"];
    v702[0] = ["Épée en pierre", "Sois gentil avec les autres", "Dégâts: 19", "Démolition: 6"];
    v702[5] = ["Épée en or", "Roi de la forêt", "Dégâts: 22", "Démolition: 7"];
    v702[6] = ["Épée en diamant", "Tu te sens puissant", "Dégâts: 24", "Démolition: 8"];
    v702[9] = ["Épée de pirate", "Marin d'eau douce!", "Meilleure portée qu'une épée normale", "Dégâts: 24", "Démolition: 8"];
    v702[30] = ["Épée en améthyste", "Mauve est la plus belle couleur du monde", "Dégâts: 27", "Démolition: 9"];
    v702[62] = ["Épée du Dragon", "Pas de pitié!", "Dégâts: 30", "Démolition: 10"];
    v702[16] = ["Lance du Dragon", "Tuez-les tous!", "Dégâts: 22", "Démolition: 6"];
    v702[8] = ["Pioche en bois", "Peut récolter du bois et de la pierre", "Dégâts: 1"];
    v702[1] = ["Pioche en pierre", "Peut aussi récolter de l'or", "Dégâts: 2"];
    v702[3] = ["Pioche en or", "Peut aussi récolter du diamant", "Dégâts: 3", "Démolition: 1"];
    v702[4] = ["Pioche en diamant", "Peut tout récolter", "Dégâts: 4", "Démolition: 1"];
    v702[31] = ["Pioche en améthyste", "Peut tout récolter", "Dégâts: 5", "Démolition: 1"];
    v702[35] = ["Marteau en pierre", "Utile pour détruire les bâtiments", "Ne marche pas bien sur du diamant et améthyste", "Dégâts: 2", "Démolition: 20"];
    v702[36] = ["Marteau en or", "Utile pour détruire les bâtiments", "Ne marche pas bien sur l'améthyste", "Dégâts: 3", "Démolition: 30"];
    v702[37] = ["Marteau en diamant", "Utile pour détruire les bâtiments", "Dégâts: 4", "Démolition: 40"];
    v702[38] = ["Marteau en améthyste", "Utile pour détruire les bâtiments", "Dégâts: 5", "Démolition: 50"];
    v702[45] = ["Super Marteau", "As-tu prévu de détruire le monde?", "Dégâts: 12", "Démolition: 70"];
    v702[12] = ["Lance en bois", "Plus de peur que de mal", "Dégâts: 10", "Démolition: 2"];
    v702[13] = ["Lance en pierre", "C'est le début de l'évolution", "Dégâts: 14", "Démolition: 4"];
    v702[14] = ["Lance en or", "Attention, ça pique!", "Dégâts: 15", "Buildings Dégâts: 5"];
    v702[15] = ["Lance en diamant", "Tu es prêt à tuer les dragons", "Dégâts: 17", "Buildings Dégâts: 5"];
    v702[33] = ["Lance en améthyste", "Les dragons ne te font plus peur", "Dégâts: 18", "Buildings Dégâts: 6"];
    v702[46] = ["Pelle en pierre", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 2"];
    v702[50] = ["Pelle en or", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 3", "Buildings Dégâts: 1"];
    v702[51] = ["Pelle en diamant", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 4", "Buildings Dégâts: 1"];
    v702[52] = ["Pelle en améthyste", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 5", "Buildings Dégâts: 1"];
    v702[58] = ["Casque en bois", "Mieux que rien", "Défense: 1", "Défense contre animaux: 4"];
    v702[25] = ["Casque en pierre", "Prêt pour la bataille", "Défense: 2", "Défense contre animaux: 8"];
    v702[26] = ["Casque en or", "Alias le casque des sauvages", "Défense: 4", "Défense contre animaux: 13"];
    v702[27] = ["Casque en diamant", "Ne te vante pas trop", "Défense: 5", "Défense contre animaux: 19"];
    v702[43] = ["Casque en améthyste", "Tu n'as plus peur de rien", "Défense: 6", "Défense contre animaux: 23"];
    v702[59] = ["Casque du Dragon", "Tu vas conquérir le monde", "Défense: 8", "Défense contre animaux: 27"];
    v702[23] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[41] = ["Chapeau du Père Noël", "Oh, oh, oh, Joyeux Nöel!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[42] = ["Chapeau du lutin de Nöel", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[83] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[10] = ["Cache-oreilles", "Une sorte de petite chapka.", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[11] = ["Chapka", "Comment ça va, camarade?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[40] = ["Bonnet d'hiver", "Très confortable", "Très chaud"];
    v702[84] = ["Tunique", "Les plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[85] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[86] = ["Tunique d'hiver", "Tes plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    v702[48] = ["Masque de plongée", "Tu es rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 2, Défense contre animaux: 8"];
    v702[47] = ["Scaphandre", "Tu es très rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 4, Défense contre animaux: 16"];
    v702[185] = ["Orbe du Dragon", "Donné en Quête"];
    v702[149] = ["Coeur de Dragon", "Te change en fantôme!", "Tu es un fantôme pendant 1 min", "Trouve une pierre de résurrection"];
    v702[175] = ["Gemme verte", "Tu n'as pas triché, promis?"];
    v702[176] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"];
    v702[177] = ["Gemme bleue", "Pour les gens trop gentils"];
    v702[77] = ["Couronne verte", "Te soigne très rapidement", "Soigne sur le temps: 40", "Défense: 4, Défense contre animaux: 16"];
    v702[78] = ["Couronne orange", "Tu te sens soudainement très chanceux", "Défense: 4, Défense contre animaux: 16"];
    v702[79] = ["Couronne bleue", "Une fois mort, tu deviens un fantôme", "Tu perdras toutes tes arguments", "Défense: 4, Défense contre animaux: 16"];
    v702[180] = ["Seau", "Utile pour remplir un puit", "Un sceau est équivalent à 20 bouteilles"];
    v702[181] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"];
    v702[127] = ["Bouteille", "Te permet de boire n'importe où", "Eau: 50"];
    v702[128] = ["Bouteille vide", "Tu peux remplir cette bouteille près d'une source d'eau"];
    v702[130] = ["Arrosoir vide", "Doit être rempli près d'une source d'eau"];
    v702[49] = ["Arrosoir", "Permet d'arroser les plantes", "Dégâts: 1"];
    v702[29] = ["Sac", "Plus de place dans ton inventaire!"];
    v702[120] = ["Papier", "Pour fabriquer toute sorte d'objets"];
    v702[28] = ["Livre", "Réduit considérablement le temps de fabrication", "Doit être porté pour fonctionner", "Dégâts: 1"];
    v702[195] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"];
    v702[148] = ["Cadenas", "Pour verrouiller un coffre"];
    v702[158] = ["Clé", "Pour déverrouiller un coffre"];
    v702[159] = ["Totem", "Te permet de créer une équipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"];
    v702[125] = ["Pont", "Très utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"];
    v702[183] = ["Pancarte", "Laisse un message aux autres", "Durabilité: 200"];
    v702[190] = ["Toit", "Te cache un peu et te réchauffe"];
    v702[182] = ["Puit", "Permet de remplir des bouteilles", "Durabilité: 1000"];
    v702[162] = ["Mur en bois", "Tu connais la danse des murs?", "Durabilité: 1000"];
    v702[163] = ["Mur en pierre", "Ça fait un peu plus sérieux", "Durabilité: 1500"];
    v702[164] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", "Durabilité: 2000"];
    v702[165] = ["Mur en diamant", "Très brillant, cache tes yeux", "Durabilité: 2500"];
    v702[122] = ["Mur en améthyste", "Tu dois avoir très peur de sortir dehors!", "Durabilité: 3500"];
    v702[160] = ["Piques en bois", "Peut blesser tes ennemis", "Dégâts: 10, Dégâts par coup: 2", "Durabilité: 150"];
    v702[168] = ["Pique en pierre", "Je ne voudrais pas être ton ennemi", "Dégâts: 20", "Dégâts par coup: 3", "Durabilité: 300"];
    v702[169] = ["Pique en or", "Tu es si cruel", "Dégâts: 30", "Dégâts par coup: 3", "Durabilité: 600"];
    v702[170] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "Dégâts: 40", "Dégâts par coup: 4", "Durabilité: 1200"];
    v702[123] = ["Pique en améthyste", "Mais qu'est ce que ton voisin t'a fait?", "Dégâts: 50", "Dégâts par coup: 4", "Durabilité: 2400"];
    v702[166] = ["Porte en bois", "Peut être ouvert ou fermé par toi ou tes amis", "Durabilité: 1000"];
    v702[171] = ["Porte en pierre", "Tu connais les trois petits cochons?", "Durabilité: 1500"];
    v702[172] = ["Porte en or", "Tu reconstruis l'el dorado?", "Durabilité: 2000"];
    v702[173] = ["Porte en diamant", "Pour une maison éclatante", "Durabilité: 2500"];
    v702[124] = ["Porte en améthyste", "Est-ce que ta maison est un coffre-fort?", "Durabilité: 3000"];
    v702[119] = ["Chaudière", "Réchauffe", "Consume du bois toutes les 5 sec", "Durabilité: 1000"];
    v702[135] = ["Moulin", "Peut produire de la farine à partir du blé", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v702[144] = ["Four à pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    v702[151] = ["Pierre de résurrection", "Magie magie!", "Te ressuscite si tu es un fantôme", "Tu perds toutes tes armes", "Durabilité: 200"];
    v702[300] = "Tu ne peux pas rejoindre le serveur";
    v702[301] = "Expulsé: ";
    v702[302] = "Ta clé est déjà utilisée par quelqu'un d'autre";
    v702[303] = "Ta clé est fausse";
    v702[304] = "Tu as une vieille version, rafraichis tes caches";
    v702[305] = "Il n'y a plus de nouvelles ressources";
    v702[306] = "Tu as survécu 1 jour";
    v702[307] = "Tu as survécu ";
    v702[308] = " jours";
    v702[309] = "Tu es mort ;-;";
    v702[310] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!";
    v702[311] = "Le serveur est complet! Spam le bouton jouer";
    v702[312] = "Cette ressource est vide";
    v702[313] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)";
    v702[314] = " est mort";
    v702[315] = "Ce n'est pas le bon outil";
    v702[316] = "Tu as rejoins une équipe";
    v702[317] = "Tu es mort";
    v702[318] = " a rejoint l'équipe";
    v702[319] = "Ton équipe a été détruite";
    v702[320] = "Tu as quitté l'équipe";
    v702[321] = " a quitté l'équipe";
    v702[322] = "Quelqu'un a volé ton token :>";
    v702[323] = "Choisis un serveur";
    v702[324] = "joueurs";
    v702[325] = "joueurs";
    v702[326] = "joueurs dans ce mode";
    v702[327] = "Bientôt...";
    document.getElementById("nickname_input").placeholder = "Surnom";
    v706[0] = ["Tu as été tué sans raison particulière, juste comme ça"];
    v706[1] = ["Tu es mort de faim, c'est plutôt ironique, non?"];
    v706[2] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste près d'un feu"];
    v706[3] = ["Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tué, avec un peu de chance il mourra aussi"];
    v706[4] = ["Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"];
    v706[5] = ["Ton corps deviendra un nid pour les oeufs d'araignées."];
    v706[6] = ["Ce loup n'aura plus faim après t'avoir mangé", "Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués."];
    v706[7] = ["Ce renard était trop rapide pour toi", "Ce renard t'a transformé en boîte"];
    v706[8] = ["Cet ours voulait juste un câlin."];
    v706[9] = ["Tu as été brûlé par un dragon. Quel gâchis", "Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir..."];
    v706[10] = ["Tu as sauté sur des piques, c'était pas une bonne idée...", "Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues"];
    v706[11] = ["Même les fantômes peuvent mourir", "Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc..."];
    v706[12] = ["Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.", "Tu as tué l'animal, sa viande t'a tué."];
    v706[13] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"];
    v706[14] = ["Tu t'es noyé. Essaye de construire un pont la prochaine fois"];
    v706[15] = ["Ne t'inquiète pas, le piranha t'a trouvé appétissant."];
    v706[16] = ["Un kraken a 'kraké' tes os."];
    v706[17] = ["Ta peau tombe en lambeau, le soleil t'a brûlé."];
    v706[18] = ["L'ail dans ta poche a fait bouillir ton cerveau."];
    v706[19] = ["En tant que vampire, ne reste pas à côté des gousses d'ail."];
    v706[20] = ["Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?"];
    v706[21] = ["Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime."];
    ⲆⲆᐃⲆΔ = "Uuunnnggg";
    ⵠᐃⵠⵠΔⲆⵠ = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraîche ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", "Uuunnnggg...", "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"];
  }
  function f80(p450, p451, p452) {
    const v689 = ~(p450 & 46994) & (p450 | 46994);
    const v690 = p451 ^ 56137;
    const v691 = ((p452 + 60188) * 2147483629 + 2147483587) % 2147483647;
    const vFp2 = f479(v689, v690, v691, v689);
    const vF36 = function (p453, p454, p455, p456, p457) {
      const v692 = (2531011 + (p453 + 54623) * 214013) % 4294967296;
      const v693 = (8 << (p454 >> 16 & 255)) + (0 << (p454 >> 8 & 255)) + (16 << (p454 >> 0 & 255)) + (24 << (p454 >> 24 & 255));
      const v694 = (12345 + (p455 + 59240) * 1103515245) % 2147483648;
      const v695 = p456 ^ 34695;
      const v696 = ~(p457 & 51451) & p457 | ~(p457 & 51451) & 51451;
      const vSC = f520(v692, v693);
      const vF39 = function (p458, p459, p460, p461, p462) {
        const v697 = (8 << (p460 >> 24 & 255)) + (24 << (p460 >> 8 & 255)) + (16 << (p460 >> 16 & 255)) + (0 << (p460 & 255));
        const v698 = (24 << (p461 >> 16 & 255)) + (0 << (p461 >> 8 & 255)) + (8 << (p461 & 255)) + (16 << (p461 >> 24 & 255));
        const v699 = p462 ^ 43604;
        const vF41 = function (p463, p464) {
          const v700 = (8 << (p463 >> 24 & 255)) + (16 << (p463 >> 8 & 255)) + (0 << (p463 >> 16 & 255)) + (24 << (p463 & 255));
          const v701 = (16 << (p464 >> 8 & 255)) + (24 << (p464 >> 24 & 255)) + (8 << (p464 >> 16 & 255)) + (0 << (p464 & 255));
          return (45901 + (f61(v700, v701, v700, v701, v700) ^ f61(v701, v700, v701, v700, v701))) % 65370;
        }(p458 ^ 14298, (p459 | 2365) & ~(p459 & 2365));
        const vMp = f474(v697, v698, v699);
        return ((46523 + (vF41 ^ vMp)) * 214013 + 2531011) % 4294967296;
      }(v694, v695, v696, v692, v693);
      return (0 << ((vSC ^ vF39) >> 8 & 255)) + (16 << ((vSC ^ vF39) & 255)) + (24 << ((vSC ^ vF39) >> 24 & 255)) + (8 << ((vSC ^ vF39) >> 16 & 255));
    }(v690, v691, v689, v690, v691);
    return (0 << ((vFp2 ^ vF36) & 255)) + (24 << ((vFp2 ^ vF36) >> 8 & 255)) + (16 << ((vFp2 ^ vF36) >> 16 & 255)) + (8 << ((vFp2 ^ vF36) >> 24 & 255));
  }
  var v702 = [];
  const v703 = 18;
  const v704 = 1;
  for (var v717 = 0; v717 < 344; v717++) {
    v702[v717] = "";
  }
  var v706 = [];
  $(".md-languages").on("click", function () {
    $(this).toggleClass("active");
  });
  const v707 = 20;
  $(".md-languages ul li").on("click", function () {
    var v708 = $(this).text();
    if (v708 === "English") {
      f69();
    } else if (v708 === "Français") {
      f79();
    } else if (v708 === "Deutsch") {
      f76();
    } else if (v708 === "Español") {
      f73();
    } else if (v708 === "Português") {
      f72();
    } else if (v708 === "Русский") {
      f71();
    } else if (v708 === "Polski") {
      f78();
    }
    ⵠⲆΔᐃᐃ = [];
    v2814.ⲆΔⵠΔ.label = [];
    $(".md-languages ul li").removeClass("active");
    $(this).addClass("active");
    $(".md-languages label button").text(v708);
  });
  v526 = "EN";
  const v709 = 10;
  var v710;
  switch (navigator.language || navigator.userLanguage) {
    case "ru":
      v526 = "RU";
      break;
    case "en":
      v526 = "EN";
      break;
    case "es":
      v526 = "SP";
      break;
    case "fr":
      v526 = "FR";
      break;
    case "pl":
      v526 = "PL";
      break;
    case "de":
      v526 = "DE";
      break;
    case "pt":
      v526 = "PT";
  }
  function f81(p465, p466, p467) {
    const v711 = (0 << (p465 >> 24 & 255)) + (16 << (p465 >> 8 & 255)) + (24 << (p465 >> 16 & 255)) + (8 << (p465 & 255));
    const v712 = p466 ^ 19719;
    const v713 = (8 << (p467 >> 24 & 255)) + (24 << (p467 >> 16 & 255)) + (16 << (p467 & 255)) + (0 << (p467 >> 8 & 255));
    return (1013904223 + (22833 + (f477(v711, v712) ^ f410(v713, v711, v712, v713))) * 1664525) % 4294967296;
  }
  if (v526 === "FR") {
    $(".md-languages label button").text("Français");
    v710 = f79;
  } else if (v526 === "PL") {
    $(".md-languages label button").text("Polski");
    v710 = f78;
  } else if (v526 === "PT") {
    $(".md-languages label button").text("Português");
    v710 = f72;
  } else if (v526 === "SP") {
    $(".md-languages label button").text("Español");
    v710 = f73;
  } else if (v526 === "RU") {
    $(".md-languages label button").text("Русский");
    v710 = f71;
  } else if (v526 === "DE") {
    $(".md-languages label button").text("Deutsch");
    v710 = f76;
  } else {
    $(".md-languages label button").text("English");
    v710 = f69;
  }
  ᐃⲆ = {
    ⵠⲆᐃⵠᐃᐃΔⵠΔ: "img/logo.png",
    ᐃⵠΔⲆΔΔᐃ: "img/mapday.png",
    ᐃᐃⵠᐃⲆⲆᐃ: "img/mapnight.png",
    ΔᐃΔⵠᐃᐃΔⲆΔ: "img/bigzday.png",
    ⲆᐃΔΔΔΔⲆΔⵠ: "img/bigznight.png",
    ΔⵠᐃΔΔᐃᐃ: "img/bigday-river1.png",
    ΔΔⲆⵠⲆⲆⵠᐃΔ: "img/bigday-lake.png",
    ΔⲆⵠᐃΔΔⵠ: "img/bigday-berry.png",
    Ⲇⵠⵠⵠⵠⵠᐃ: "img/bigday-stone1.png",
    ᐃⲆΔⲆᐃΔΔ: "img/bigday-stone2.png",
    ⵠⵠΔΔⵠᐃⲆ: "img/bigday-gold1.png",
    ᐃⲆΔⵠⵠⵠΔ: "img/bigday-gold2.png",
    ⲆΔⵠΔᐃⲆΔ: "img/bigday-emerald1.png",
    ⵠⲆΔΔΔΔⵠ: "img/bigday-emerald2.png",
    ⵠⵠΔⵠΔᐃⵠ: "img/bigday-amethyst.png",
    ΔΔΔⵠⵠΔⲆ: "img/bigday-bear.png",
    ΔΔⵠⵠΔᐃⵠ: "img/bigday-cave.png",
    ⵠᐃᐃⲆⵠΔᐃ: "img/bigday-diamond.png",
    ᐃᐃⵠᐃⵠⵠΔ: "img/bigday-island.png",
    ⵠᐃΔⲆⲆᐃᐃ: "img/bigday-reidite.png",
    ⲆⵠΔᐃⵠⲆⵠ: "img/bigday-spider.png",
    ΔΔΔᐃΔΔΔ: "img/bigday-wolf.png",
    ⵠⲆΔᐃΔᐃΔ: "img/bigday-fir-tree.png",
    ᐃⵠᐃⵠΔᐃⵠ: "img/bigday-fox.png",
    ᐃΔⵠΔⲆⵠᐃ: "img/bigday-kraken.png",
    ⵠᐃⵠⵠⲆΔⵠ: "img/bigday-piranha.png",
    ᐃⵠⲆⵠⵠⵠᐃ: "img/bigday-cactus.png",
    ΔⵠⲆΔⲆᐃΔ: "img/bigday-magma.png",
    ΔⲆᐃᐃⲆⲆⲆ: "img/bigday-river1.png",
    ⵠⲆⵠⲆⵠΔᐃⲆⵠ: "img/bignight-lake.png",
    ⵠΔⵠΔΔΔⵠΔⵠ: "img/bignight-berry.png",
    ⲆⲆᐃⵠΔⲆⵠ: "img/bignight-stone1.png",
    ᐃᐃΔⵠᐃⵠΔ: "img/bignight-stone2.png",
    ΔⲆΔⲆⲆⵠⲆ: "img/bignight-gold1.png",
    ⵠᐃⲆⵠⲆⵠᐃ: "img/bignight-gold2.png",
    ΔᐃⵠᐃⵠᐃⲆ: "img/bignight-emerald1.png",
    ᐃΔⵠⲆⲆΔⵠ: "img/bignight-emerald2.png",
    ΔⵠⲆⵠᐃΔᐃ: "img/bignight-amethyst.png",
    ⲆⲆⲆᐃᐃⲆΔ: "img/bignight-bear.png",
    ⲆⲆⲆⵠⵠΔΔ: "img/bignight-cave.png",
    ᐃⲆΔⵠⲆΔⵠ: "img/bignight-diamond.png",
    ΔⲆⲆΔⵠΔⵠ: "img/bignight-island.png",
    ⲆⵠⲆᐃⲆⲆᐃ: "img/bignight-reidite.png",
    ᐃᐃᐃⵠΔᐃⲆ: "img/bignight-spider.png",
    ⵠⵠⲆⵠⵠⵠΔ: "img/bignight-wolf.png",
    ⵠΔⵠᐃⲆΔᐃ: "img/bignight-fir-tree.png",
    ⵠΔᐃΔΔⵠΔ: "img/bignight-fox.png",
    ᐃΔⵠΔᐃΔΔ: "img/bignight-kraken.png",
    ⵠⵠᐃⵠⵠⲆΔ: "img/bignight-piranha.png",
    ΔⵠΔⵠⵠΔᐃ: "img/bignight-cactus.png",
    ᐃΔⲆᐃᐃᐃΔ: "img/bignight-magma.png",
    ⵠⲆΔᐃⵠᐃᐃ: "img/bigday-desert.png",
    ᐃⵠᐃᐃⵠⲆⵠ: "img/bigday-winter.png",
    ᐃⵠⵠᐃⵠᐃΔ: "img/bigday-lava.png",
    ᐃᐃⵠⲆⲆΔΔ: "img/bigday-forest.png",
    ᐃⲆΔᐃⵠᐃΔ: "img/bignight-desert.png",
    ⵠⲆΔⵠⵠᐃⲆ: "img/bignight-winter.png",
    ΔⲆⵠⵠⵠΔΔ: "img/bignight-lava.png",
    ΔᐃⵠⲆⵠᐃΔ: "img/bignight-forest.png",
    ᐃᐃⲆΔᐃⵠⵠ: "img/day-river-wave.png",
    ⵠᐃⵠⲆᐃⵠⵠ: "img/night-river-wave.png",
    ⲆⵠⵠⲆᐃⲆⵠ: "img/day-fog0.png",
    ⵠΔⲆⵠⲆΔΔ: "img/day-fog1.png",
    ⵠⲆⲆᐃⲆⵠΔ: "img/day-fog2.png",
    ⲆΔⵠⲆⲆⵠᐃ: "img/night-fog0.png",
    ΔΔⲆⲆⲆⵠᐃ: "img/night-fog1.png",
    ⲆⵠᐃΔΔΔᐃ: "img/night-fog2.png",
    ⵠⵠΔᐃΔⲆⲆ: "img/day-fogdesert0.png",
    ᐃΔΔᐃΔⲆⲆ: "img/day-fogdesert1.png",
    ᐃⲆⵠᐃⵠᐃⵠ: "img/day-fogdesert2.png",
    ⲆᐃᐃᐃⲆⲆⵠ: "img/night-fogdesert0.png",
    ᐃΔⵠⲆᐃΔⵠ: "img/night-fogdesert1.png",
    ⵠⵠⲆⵠⲆᐃᐃ: "img/night-fogdesert2.png",
    ⵠΔᐃⲆᐃⲆⵠ: "img/day-cross-server.png",
    ⲆⲆΔΔΔᐃⵠ: "img/day-here-server.png",
    ᐃⵠⵠⵠⲆⲆⲆ: "img/day-finish-server.png",
    ⵠᐃΔⵠΔⵠΔ: "img/day-item-server.png",
    ᐃⲆΔΔⲆᐃⲆ: "img/day-skull-server.png",
    ⵠⲆⵠⲆⲆⵠⵠ: "img/night-cross-server.png",
    ΔⲆⲆⵠⵠⵠⵠ: "img/night-here-server.png",
    ⲆⵠΔᐃΔⵠⲆ: "img/night-finish-server.png",
    ⲆΔᐃⲆⲆᐃⵠ: "img/night-item-server.png",
    ⲆΔᐃⵠⵠΔⲆ: "img/night-skull-server.png",
    ⵠⵠᐃΔᐃΔᐃ: "img/day-reidite0.png",
    ΔⲆⵠΔⵠⲆⲆ: "img/night-reidite0.png",
    ⲆⲆⲆΔᐃᐃⵠ: "img/day-reidite1.png",
    ⵠⲆᐃᐃᐃⵠⵠ: "img/night-reidite1.png",
    ⲆⲆⵠΔⵠⵠⲆ: "img/day-reidite2.png",
    ΔⵠⵠΔΔⲆᐃ: "img/night-reidite2.png",
    ΔᐃⲆΔⲆⲆⲆ: "img/day-lava1.png",
    ΔΔΔⲆⲆⵠᐃ: "img/night-lava1.png",
    ⵠⵠⲆΔΔᐃⲆ: "img/day-lava2.png",
    ⵠⲆⲆⲆᐃᐃΔ: "img/night-lava2.png",
    ᐃᐃⵠⵠᐃⲆΔ: "img/day-lava3.png",
    ΔᐃⵠⵠΔΔᐃ: "img/night-lava3.png",
    ΔᐃⵠⲆⵠⵠⵠ: "img/day-lava4.png",
    ⲆΔΔⵠᐃⵠᐃ: "img/night-lava4.png",
    ⵠᐃᐃᐃⵠⲆⵠ: "img/day-lava5.png",
    ⲆᐃᐃᐃΔΔΔ: "img/night-lava5.png",
    ⲆⵠΔⲆⲆᐃⵠ: "img/day-lava6.png",
    ⲆⵠΔⵠⵠⲆΔ: "img/night-lava6.png",
    ΔⲆⵠⲆΔⲆⲆ: "img/day-lava-ground1.png",
    ΔᐃᐃΔΔⵠⲆ: "img/night-lava-ground1.png",
    ᐃᐃΔᐃⲆᐃⵠ: "img/day-lava-ground2.png",
    ⲆⵠⲆΔⲆⵠΔ: "img/night-lava-ground2.png",
    ⲆᐃᐃΔᐃΔⲆ: "img/day-lava-ground3.png",
    ΔⲆⲆᐃΔΔΔ: "img/night-lava-ground3.png",
    ⵠΔⵠⵠΔΔⵠ: "img/day-lava-ground4.png",
    ⵠΔⵠᐃᐃⲆΔ: "img/night-lava-ground4.png",
    ⵠΔⵠᐃⲆⵠΔ: "img/day-lava-ground5.png",
    ⵠⵠΔᐃᐃⲆΔ: "img/night-lava-ground5.png",
    ᐃΔᐃΔⵠΔⵠ: "img/day-lava-ground6.png",
    ⵠⵠᐃΔᐃⲆⵠ: "img/night-lava-ground6.png",
    ΔᐃΔΔᐃⵠΔ: "img/day-fire-mob.png",
    Δᐃᐃⵠᐃᐃᐃ: "img/night-fire-mob.png",
    ΔᐃᐃᐃⲆⵠΔ: "img/hurt-fire-mob.png",
    ΔⲆⵠᐃΔᐃΔ: "img/day-diamond-protection.png",
    ⲆᐃⲆᐃⲆⵠᐃ: "img/night-diamond-protection.png",
    ⵠΔᐃΔᐃⲆⵠ: "img/day-hand-diamond-protection.png",
    ΔᐃⵠᐃⲆⲆⲆ: "img/night-hand-diamond-protection.png",
    ΔᐃⵠᐃⵠΔΔ: "img/inv-diamond-protection-out.png",
    ⲆⵠⲆⵠⵠⵠΔ: "img/inv-diamond-protection-in.png",
    ⵠⵠⲆⲆΔΔᐃ: "img/inv-diamond-protection-click.png",
    ⵠᐃΔⲆⵠⵠⲆ: "img/day-amethyst-protection.png",
    ⲆⵠⲆΔⵠⵠⲆ: "img/night-amethyst-protection.png",
    ⵠⵠⲆΔᐃⵠᐃΔⵠ: "img/day-hand-amethyst-protection.png",
    ᐃΔⲆⵠΔⲆⵠⵠⲆ: "img/night-hand-amethyst-protection.png",
    ⵠᐃΔⵠⵠᐃⵠ: "img/inv-amethyst-protection-out.png",
    ᐃⵠⵠⲆΔⲆᐃ: "img/inv-amethyst-protection-in.png",
    ⵠᐃᐃΔΔⲆⵠ: "img/inv-amethyst-protection-click.png",
    ΔⲆᐃᐃΔⲆⵠ: "img/day-reidite-sword.png",
    ᐃΔⲆᐃⲆⲆΔ: "img/night-reidite-sword.png",
    ⲆⲆⲆᐃⲆⲆΔ: "img/inv-reidite-sword-out.png",
    ⵠᐃⲆᐃᐃᐃⲆ: "img/inv-reidite-sword-in.png",
    ᐃᐃⵠⵠⲆⲆⲆ: "img/inv-reidite-sword-click.png",
    ⵠΔⲆⵠⵠⲆⲆ: "img/inv-reidite-out.png",
    ⵠⲆⵠⵠΔᐃΔ: "img/inv-reidite-in.png",
    ᐃⲆΔᐃΔᐃᐃ: "img/inv-reidite-click.png",
    ΔⲆⲆΔΔⲆΔ: "img/inv-flame-out.png",
    ΔΔⵠⵠⵠᐃⲆ: "img/inv-flame-in.png",
    ⲆⵠⲆΔᐃΔⲆ: "img/inv-flame-click.png",
    ᐃΔΔΔᐃΔⲆ: "img/day-magma-buble0.png",
    ⵠᐃⲆⵠⲆᐃⵠ: "img/night-magma-buble0.png",
    ΔᐃΔΔΔΔᐃ: "img/day-magma-buble1.png",
    ⲆⵠⲆᐃᐃΔΔ: "img/night-magma-buble1.png",
    ⲆⵠⲆΔⲆⵠⵠ: "img/day-magma-buble2.png",
    ΔⵠΔⵠⲆᐃΔ: "img/night-magma-buble2.png",
    ⵠᐃⵠⲆᐃᐃΔ: "img/day-lava-dragon.png",
    ⲆΔⲆⵠⵠⲆΔ: "img/night-lava-dragon.png",
    ΔΔⲆΔΔⵠⲆᐃⵠ: "img/day-fire-dragon.png",
    ΔᐃΔⲆΔⲆΔⲆⲆ: "img/night-fire-dragon.png",
    ⵠⲆᐃⲆⲆΔᐃ: "img/hurt-lava-dragon.png",
    ΔΔΔⲆΔⵠᐃ: "img/day-lava-wing-left.png",
    ⲆⵠᐃΔΔⵠΔ: "img/night-lava-wing-left.png",
    ᐃΔΔΔⵠⲆⲆ: "img/day-lava-wing-right.png",
    ᐃⵠⲆΔᐃᐃⵠ: "img/night-lava-wing-right.png",
    ᐃᐃⲆⵠᐃⵠᐃ: "img/hurt-lava-wing-left.png",
    ᐃⲆⵠᐃⵠⵠⵠ: "img/hurt-lava-wing-right.png",
    ⵠⲆΔᐃⵠΔⵠ: "img/day-reidite-spear.png",
    ⵠΔΔⲆΔⵠΔ: "img/night-reidite-spear.png",
    ΔΔⲆΔΔⲆΔ: "img/inv-reidite-spear-out.png",
    ᐃⲆᐃΔᐃΔᐃ: "img/inv-reidite-spear-in.png",
    ᐃᐃΔⲆΔⵠΔ: "img/inv-reidite-spear-click.png",
    ⵠᐃⵠⵠⵠⲆⵠ: "img/day-reidite-helmet.png",
    ᐃⲆΔΔⵠᐃⲆ: "img/night-reidite-helmet.png",
    ⲆⲆΔⵠΔᐃΔ: "img/inv-reidite-helmet-out.png",
    ⵠᐃᐃΔⲆᐃⲆ: "img/inv-reidite-helmet-in.png",
    ΔⲆⵠⵠΔᐃⵠ: "img/inv-reidite-helmet-click.png",
    ⲆⲆⲆΔⲆΔᐃ: "img/day-hand-reidite-protection.png",
    ΔᐃⲆⲆⵠⵠⲆ: "img/night-hand-reidite-protection.png",
    ΔᐃⵠⲆᐃⵠΔ: "img/day-reidite-protection.png",
    ΔΔᐃⲆⲆΔΔ: "img/night-reidite-protection.png",
    ⵠⲆᐃⲆⵠⵠΔ: "img/inv-reidite-protection-out.png",
    ΔΔΔΔΔⵠⲆ: "img/inv-reidite-protection-in.png",
    ᐃⵠᐃᐃΔᐃⲆ: "img/inv-reidite-protection-click.png",
    ΔΔΔⵠⵠᐃᐃ: "img/day-lava-dragon-sword.png",
    ⵠᐃᐃΔᐃᐃΔ: "img/night-lava-dragon-sword.png",
    ᐃⵠⲆΔΔⵠΔ: "img/inv-lava-dragon-sword-out.png",
    ᐃΔⵠᐃΔᐃⲆ: "img/inv-lava-dragon-sword-in.png",
    ⵠⵠⲆᐃᐃᐃΔ: "img/inv-lava-dragon-sword-click.png",
    Δᐃᐃᐃⵠⵠⵠ: "img/day-lava-spear.png",
    ⲆⵠΔᐃΔⵠⵠ: "img/night-lava-spear.png",
    ⲆᐃⵠΔΔᐃᐃ: "img/inv-lava-spear-out.png",
    Δᐃⵠᐃᐃᐃᐃ: "img/inv-lava-spear-in.png",
    ⵠᐃⲆᐃΔᐃΔ: "img/inv-lava-spear-click.png",
    ᐃᐃᐃⲆⵠΔⲆ: "img/day-lava-helmet.png",
    ⵠᐃⵠⲆΔᐃΔ: "img/night-lava-helmet.png",
    ⲆⲆⵠⲆΔᐃⵠ: "img/inv-lava-helmet-out.png",
    ⵠΔᐃᐃᐃⵠΔ: "img/inv-lava-helmet-in.png",
    ⵠΔᐃᐃⵠⲆᐃ: "img/inv-lava-helmet-click.png",
    ⵠⵠᐃⲆΔᐃᐃ: "img/day-witch-hat.png",
    ᐃΔᐃⲆᐃⲆⲆ: "img/night-witch-hat.png",
    ᐃⲆⲆⵠΔⵠⵠ: "img/inv-witch-hat-out.png",
    ⵠⲆᐃΔᐃᐃΔ: "img/inv-witch-hat-in.png",
    ⲆⵠⲆⵠⲆⲆⲆ: "img/inv-witch-hat-click.png",
    ΔΔⵠⲆⲆⲆᐃ: "img/day-nimbus2000.png",
    ᐃⲆΔΔⵠⲆΔ: "img/night-nimbus2000.png",
    ᐃⲆᐃᐃᐃᐃΔ: "img/inv-nimbus2000-out.png",
    ΔⵠΔⲆΔᐃᐃ: "img/inv-nimbus2000-in.png",
    ᐃⲆΔⲆⲆΔΔ: "img/inv-nimbus2000-click.png",
    ᐃΔᐃⲆⲆΔΔ: "img/day-accessory1-pacques.png",
    ⲆⲆⲆⲆⵠⵠΔ: "img/night-accessory1-pacques.png",
    ⲆΔᐃᐃᐃⵠⵠ: "img/day-accessory2-pacques.png",
    ⵠΔⵠΔⲆΔⲆ: "img/night-accessory2-pacques.png",
    ΔΔΔᐃⲆⵠⲆ: "img/day-accessory3-pacques.png",
    ΔⲆⵠΔⵠⲆΔ: "img/night-accessory3-pacques.png",
    ⲆΔᐃⲆⲆⵠⲆ: "img/day-accessory5-pacques.png",
    ΔΔⲆΔⲆᐃⵠ: "img/night-accessory5-pacques.png",
    ᐃΔΔⵠᐃᐃᐃ: "img/day-accessory6-pacques.png",
    ΔⲆᐃᐃⵠᐃᐃ: "img/night-accessory6-pacques.png",
    ⵠΔⲆΔᐃΔΔ: "img/day-accessory7-pacques.png",
    ΔⵠⵠᐃᐃΔⵠ: "img/night-accessory7-pacques.png",
    ⲆᐃᐃΔΔᐃⵠ: "img/day-accessory8-pacques.png",
    ⵠΔΔᐃⵠᐃⵠ: "img/night-accessory8-pacques.png",
    ⵠᐃᐃⲆᐃΔᐃ: "img/day-bag-pacques.png",
    ΔⲆⵠⲆⵠΔᐃ: "img/night-bag-pacques.png",
    ⵠΔᐃᐃⵠⵠΔ: "img/day-carrot.png",
    ᐃⲆⲆᐃⵠᐃⲆ: "img/night-carrot.png",
    ᐃⲆᐃⲆⵠᐃⲆ: "img/day-carrot-dried.png",
    ⵠΔⵠᐃΔⲆⲆ: "img/night-carrot-dried.png",
    ΔΔΔⵠⵠΔᐃ: "img/day-tomato-herb.png",
    ᐃᐃⵠⲆΔᐃΔ: "img/night-tomato-herb.png",
    ᐃⲆⵠΔΔⲆⲆ: "img/day-tomato-herb-dried.png",
    ΔⵠⵠⲆΔΔΔ: "img/night-tomato-herb-dried.png",
    ᐃⵠⲆΔⲆⵠΔ: "img/day-tomato.png",
    ΔΔⲆᐃᐃᐃⵠ: "img/night-tomato.png",
    ΔΔᐃᐃⲆᐃΔ: "img/inv-carrot-out.png",
    ᐃΔⲆⵠⲆⵠⵠ: "img/inv-carrot-in.png",
    ⵠΔⲆΔⵠⵠΔ: "img/inv-carrot-click.png",
    ⵠⵠⵠΔⲆᐃΔ: "img/inv-tomato-out.png",
    ᐃᐃⲆΔⲆᐃΔ: "img/inv-tomato-in.png",
    ᐃⵠⲆᐃᐃΔᐃ: "img/inv-tomato-click.png",
    ΔⵠᐃⵠⲆΔⲆ: "img/day-player0.png",
    ⵠⵠΔΔⲆⲆΔ: "img/night-player0.png",
    ᐃⲆᐃᐃΔⲆⲆ: "img/day-player1.png",
    ΔᐃΔⲆΔⵠⵠ: "img/night-player1.png",
    ΔⵠⲆⵠⲆᐃΔ: "img/day-player2.png",
    ⵠΔΔⵠⵠⵠᐃ: "img/night-player22.png",
    ᐃᐃᐃΔᐃΔⲆ: "img/day-player3.png",
    ⲆᐃΔᐃⵠⲆⵠ: "img/night-player33.png",
    ⵠΔⵠⲆΔΔⲆ: "img/day-player4.png",
    ⲆᐃⵠΔΔⲆᐃ: "img/night-player4.png",
    ᐃΔⵠⵠΔᐃᐃ: "img/day-player5.png",
    ΔⲆᐃⲆⲆᐃΔ: "img/night-player5.png",
    ΔⲆΔⵠⲆⵠᐃ: "img/day-player6.png",
    ⵠᐃᐃⲆⵠΔΔ: "img/night-player6.png",
    ΔᐃᐃΔᐃⵠᐃ: "img/day-player7.png",
    ΔⵠⵠᐃⵠᐃΔ: "img/night-player7.png",
    ᐃⵠᐃΔᐃⲆⵠ: "img/day-player8.png",
    ΔⲆᐃΔⲆⲆΔ: "img/night-player8.png",
    ⲆⵠΔⵠΔⲆΔ: "img/day-player9.png",
    ⵠᐃⵠⵠⲆⲆⵠ: "img/night-player9.png",
    ᐃⵠᐃΔΔΔᐃ: "img/day-player10.png",
    ΔᐃⲆⵠⲆΔᐃ: "img/night-player10.png",
    ⲆΔⵠⵠⵠⲆⲆ: "img/day-player11.png",
    ⲆⲆⵠⲆⵠⵠΔ: "img/night-player11.png",
    ⲆⲆⵠⵠΔΔⵠ: "img/day-player12.png",
    ⵠⵠΔᐃᐃΔᐃ: "img/night-player12.png",
    ΔⲆΔᐃᐃΔⲆ: "img/day-player13.png",
    ⲆᐃΔⲆⲆᐃᐃ: "img/night-player13.png",
    ⵠⵠⵠⲆΔΔⵠ: "img/day-player14.png",
    ΔⲆΔᐃᐃⵠⲆ: "img/night-player14.png",
    ⲆⵠⲆⲆⲆΔᐃ: "img/day-player15.png",
    ⲆⲆΔᐃⵠΔⲆ: "img/night-player15.png",
    ΔⲆⲆⵠⵠⵠᐃ: "img/day-player16.png",
    ᐃΔΔⵠⵠΔᐃ: "img/night-player16.png",
    ᐃΔᐃⲆΔᐃᐃ: "img/day-player17.png",
    ⲆΔᐃⲆⵠΔΔ: "img/night-player17.png",
    ᐃⲆⲆⵠΔᐃᐃ: "img/day-player18.png",
    ΔᐃⵠⵠⵠΔΔ: "img/night-player18.png",
    ΔⵠΔⲆᐃⲆⲆ: "img/day-player19.png",
    ⲆⲆΔΔⲆᐃⵠ: "img/night-player19.png",
    ⵠⵠᐃᐃΔⵠⲆ: "img/day-hand-player0.png",
    ᐃⲆΔΔΔΔⲆ: "img/night-hand-player0.png",
    ⲆⲆⵠΔΔⲆΔ: "img/day-hand-player1.png",
    ᐃⲆΔⵠⵠΔⵠ: "img/night-hand-player1.png",
    ᐃᐃᐃΔᐃⲆⲆ: "img/day-hand-player2.png",
    ⵠΔⵠᐃⵠΔᐃ: "img/night-hand-player22.png",
    ΔⲆᐃΔⵠⵠᐃ: "img/day-hand-player3.png",
    ΔⲆᐃᐃⲆΔᐃ: "img/night-hand-player33.png",
    ⵠⲆΔΔⲆⵠᐃ: "img/day-hand-player4.png",
    ᐃΔᐃΔΔΔᐃ: "img/night-hand-player4.png",
    ⵠⵠⵠᐃᐃⵠⵠ: "img/day-hand-player5.png",
    ΔΔⲆΔⲆⵠΔ: "img/night-hand-player5.png",
    ⲆᐃⲆⵠⵠΔⲆ: "img/day-hand-player6.png",
    ⲆΔᐃⵠⲆⲆᐃ: "img/night-hand-player6.png",
    ⲆΔⲆΔᐃΔᐃ: "img/day-hand-player7.png",
    ⵠΔⲆⲆΔⵠᐃ: "img/night-hand-player7.png",
    ⵠΔⲆΔΔᐃᐃ: "img/day-hand-player8.png",
    ᐃᐃⵠⵠⲆⲆᐃ: "img/night-hand-player8.png",
    ΔⵠⲆⵠΔⵠⵠ: "img/day-hand-player9.png",
    ⵠᐃⲆⵠⵠΔΔ: "img/night-hand-player9.png",
    ⲆⲆᐃⲆΔⵠᐃ: "img/day-hand-player10.png",
    ΔⵠⵠΔⲆⲆᐃ: "img/night-hand-player10.png",
    ΔΔΔⵠᐃⲆᐃ: "img/day-hand-player11.png",
    ⲆᐃⵠᐃⲆᐃⲆ: "img/night-hand-player11.png",
    ΔΔⵠᐃᐃΔⲆ: "img/day-hand-player12.png",
    ΔᐃⵠᐃᐃⲆⵠ: "img/night-hand-player12.png",
    ⵠᐃⵠᐃⵠⲆΔ: "img/day-hand-player13.png",
    ΔΔⲆΔᐃᐃᐃ: "img/night-hand-player13.png",
    ⲆⲆΔᐃⵠΔΔ: "img/day-hand-player14.png",
    ΔᐃⵠᐃⲆΔΔ: "img/night-hand-player14.png",
    ᐃΔⲆΔᐃᐃΔ: "img/day-hand-player15.png",
    ΔΔⵠᐃⵠΔⵠ: "img/night-hand-player15.png",
    ᐃΔᐃⲆⵠΔⵠ: "img/day-hand-player16.png",
    ᐃΔⵠΔⵠΔⵠ: "img/night-hand-player16.png",
    ΔΔⲆᐃᐃΔⲆ: "img/day-hand-player17.png",
    ⵠⵠᐃⵠΔⲆΔ: "img/night-hand-player17.png",
    ΔΔⵠⲆᐃⲆⵠ: "img/day-hand-player18.png",
    ΔⲆΔΔⵠᐃⲆ: "img/night-hand-player18.png",
    ⵠⲆΔⵠⵠᐃᐃ: "img/day-hand-player19.png",
    ⵠⵠⲆⵠΔⲆᐃ: "img/night-hand-player19.png",
    ᐃⲆᐃᐃⵠⲆⵠ: "img/day-accessory4.png",
    ⵠΔⵠᐃΔΔⲆ: "img/night-accessory4.png",
    ⲆⲆᐃⲆⲆⵠⲆ: "img/day-accessory9.png",
    ⵠⲆΔᐃⲆⲆⲆ: "img/night-accessory9.png",
    ᐃⵠᐃⵠⵠⲆⵠ: "img/day-accessory10.png",
    ᐃⵠΔⲆΔⵠⵠ: "img/night-accessory10.png",
    ᐃⲆΔΔΔⲆⵠ: "img/day-accessory11.png",
    ΔⲆᐃⵠⵠᐃⵠ: "img/night-accessory11.png",
    ᐃΔⵠΔⲆⲆᐃ: "img/day-accessory12.png",
    ⵠⲆΔⲆⵠΔΔ: "img/night-accessory12.png",
    ΔⲆⵠᐃᐃᐃᐃ: "img/day-bag.png",
    ⵠᐃΔᐃᐃΔᐃ: "img/night-bag.png",
    ⲆᐃⲆⵠᐃᐃΔ: "img/inv-bag-out.png",
    ⵠᐃΔΔⵠΔΔ: "img/inv-bag-in.png",
    ᐃⲆⲆᐃⵠΔΔ: "img/inv-bag-click.png",
    ⵠⵠⵠⵠᐃᐃⲆ: "img/day-pitchfork.png",
    ⲆΔⲆΔⲆⵠΔ: "img/night-pitchfork.png",
    ᐃΔΔᐃⵠⵠᐃ: "img/inv-pitchfork-out.png",
    ᐃⵠⲆΔⲆⵠᐃ: "img/inv-pitchfork-in.png",
    ⲆᐃⲆΔΔΔⵠ: "img/inv-pitchfork-click.png",
    ⵠΔⵠⲆΔⲆⵠ: "img/inv-wood-spike-door-out.png",
    ᐃⲆᐃⵠᐃΔΔ: "img/inv-wood-spike-door-in.png",
    ᐃᐃΔΔᐃⵠⲆ: "img/inv-wood-spike-door-click.png",
    ⵠⵠᐃⵠⲆΔᐃ: "img/inv-stone-spike-door-out.png",
    ΔᐃⵠΔᐃᐃⵠ: "img/inv-stone-spike-door-in.png",
    ᐃᐃⲆⲆᐃⲆᐃ: "img/inv-stone-spike-door-click.png",
    ⵠⲆΔᐃⵠⲆᐃ: "img/inv-gold-spike-door-out.png",
    ⵠⲆⲆᐃᐃⵠⲆ: "img/inv-gold-spike-door-in.png",
    ΔᐃΔⲆᐃⵠᐃ: "img/inv-gold-spike-door-click.png",
    ⵠΔⲆⲆᐃΔᐃ: "img/inv-diamond-spike-door-out.png",
    ΔΔᐃᐃⵠⲆⵠ: "img/inv-diamond-spike-door-in.png",
    ⲆⲆⵠᐃⲆⵠΔ: "img/inv-diamond-spike-door-click.png",
    ⵠⲆΔⵠΔᐃⲆ: "img/inv-amethyst-spike-door-out.png",
    ᐃΔⲆⵠⲆⵠΔ: "img/inv-amethyst-spike-door-in.png",
    ⲆⲆⲆⲆⵠΔᐃ: "img/inv-amethyst-spike-door-click.png",
    ⵠⵠⲆⵠΔⵠΔ: "img/day-wood-spike-door.png",
    ⲆΔΔᐃΔΔΔ: "img/night-wood-spike-door.png",
    ΔΔⵠⲆⵠᐃⲆ: "img/day-stone-spike-door.png",
    ΔⲆⵠΔⲆᐃᐃ: "img/night-stone-spike-door.png",
    ᐃⲆΔᐃΔΔΔ: "img/day-gold-spike-door.png",
    ΔⲆⵠⲆᐃΔᐃ: "img/night-gold-spike-door.png",
    ᐃᐃΔΔⵠΔΔ: "img/day-diamond-spike-door.png",
    ⲆⲆΔⲆⵠΔᐃ: "img/night-diamond-spike-door.png",
    ᐃᐃᐃⲆΔΔᐃ: "img/day-amethyst-spike-door.png",
    ⲆΔᐃᐃⵠⵠⲆ: "img/night-amethyst-spike-door.png",
    ΔΔⵠᐃⲆⲆⵠ: "img/inv-reidite-spike-door-out.png",
    ⵠⲆΔΔΔⲆⵠ: "img/inv-reidite-spike-door-in.png",
    ᐃΔⲆΔⵠⵠΔ: "img/inv-reidite-spike-door-click.png",
    ⵠᐃⲆΔⵠᐃΔ: "img/inv-reidite-door-out.png",
    ⵠⲆᐃΔⲆⲆΔ: "img/inv-reidite-door-in.png",
    ⵠΔⵠⲆᐃⵠΔ: "img/inv-reidite-door-click.png",
    ΔⲆᐃᐃⵠⵠᐃ: "img/inv-reidite-spike-out.png",
    ⵠᐃⲆᐃᐃⵠᐃ: "img/inv-reidite-spike-in.png",
    ⵠⲆΔⵠΔⲆᐃ: "img/inv-reidite-spike-click.png",
    ⵠΔΔⵠᐃᐃΔ: "img/inv-reidite-wall-out.png",
    ᐃᐃΔⲆᐃⵠΔ: "img/inv-reidite-wall-in.png",
    ᐃⵠⵠⲆⲆΔΔ: "img/inv-reidite-wall-click.png",
    ΔⲆΔⲆᐃΔᐃ: "img/day-reidite-wall.png",
    ⲆⲆⵠⲆΔⲆⲆ: "img/night-reidite-wall.png",
    ⲆⲆⵠⲆᐃⵠΔ: "img/day-reidite-door.png",
    ⵠⲆⵠΔᐃΔᐃ: "img/night-reidite-door.png",
    ⵠⲆⲆᐃⲆⵠⵠ: "img/day-reidite-spike.png",
    ⵠⵠⵠΔΔΔᐃ: "img/night-reidite-spike.png",
    ⵠⵠΔΔᐃΔⵠ: "img/day-reidite-spike-door.png",
    ⲆⲆⲆᐃⲆᐃΔ: "img/night-reidite-spike-door.png",
    ΔᐃᐃΔⵠᐃⲆ: "img/inv-reidite-pickaxe-out.png",
    ⵠᐃᐃᐃⵠⲆⲆ: "img/inv-reidite-pickaxe-in.png",
    ⵠⲆⵠⲆΔⵠⲆ: "img/inv-reidite-pickaxe-click.png",
    ΔⲆᐃΔⵠᐃΔ: "img/day-reidite-pickaxe.png",
    ΔⲆⵠⲆⲆⵠΔ: "img/night-reidite-pickaxe.png",
    ⲆΔⵠΔⲆⲆⲆ: "img/inv-reidite-hammer-out.png",
    ⵠΔΔΔⲆⲆΔ: "img/inv-reidite-hammer-in.png",
    ⵠⲆⵠⲆⲆⲆᐃ: "img/inv-reidite-hammer-click.png",
    ΔⲆⲆⲆΔⵠⲆ: "img/day-reidite-hammer.png",
    ΔⵠⲆΔⲆΔⲆ: "img/night-reidite-hammer.png",
    ᐃⵠⵠᐃⲆᐃⵠ: "img/day-watermelon1.png",
    ⵠⵠⵠΔᐃⵠΔ: "img/night-watermelon1.png",
    ⲆⵠᐃⵠᐃⲆⲆ: "img/day-watermelon-dried1.png",
    ΔΔⵠᐃᐃΔᐃ: "img/night-watermelon-dried1.png",
    ⵠΔΔⲆⲆᐃΔ: "img/inv-watermelon-out.png",
    ΔᐃΔΔⲆᐃⲆ: "img/inv-watermelon-in.png",
    ⵠᐃⲆⵠᐃΔⵠ: "img/inv-watermelon-click.png",
    ΔⵠⵠᐃΔᐃⵠ: "img/day-boat.png",
    ᐃⵠⲆᐃᐃⲆᐃ: "img/night-boat.png",
    ΔⵠᐃΔᐃⵠⲆ: "img/day-boat-wave.png",
    ᐃᐃΔᐃⵠⵠᐃ: "img/night-boat-wave.png",
    ᐃᐃⲆⲆⲆᐃⲆ: "img/inv-boat-out.png",
    ᐃΔⲆⵠΔᐃᐃ: "img/inv-boat-in.png",
    ΔⲆⵠⲆⲆⵠⵠ: "img/inv-boat-click.png",
    ⲆⵠᐃΔⵠΔΔ: "img/day-plane.png",
    ⲆⲆΔᐃᐃᐃΔ: "img/night-plane.png",
    ⲆⵠΔᐃⲆᐃⵠ: "img/inv-plane-out.png",
    ΔⲆᐃΔⲆⵠΔ: "img/inv-plane-in.png",
    ⵠⵠⲆⵠⵠⵠⲆ: "img/inv-plane-click.png",
    ⲆᐃⵠⵠΔⲆⲆ: "img/day-sled.png",
    ⵠᐃⲆⲆⲆΔⲆ: "img/night-sled.png",
    ⵠΔⵠᐃᐃⲆⲆ: "img/day-sled-wave.png",
    ᐃⵠⵠΔΔΔᐃ: "img/night-sled-wave.png",
    ᐃⵠᐃᐃΔⵠⵠ: "img/inv-sled-out.png",
    ΔⲆⲆⵠᐃΔⵠ: "img/inv-sled-in.png",
    ⵠᐃⲆⵠΔⵠᐃ: "img/inv-sled-click.png",
    ΔⵠᐃⵠⵠⵠΔ: "img/day-pirate-hat.png",
    ⵠⵠᐃΔΔⲆⵠ: "img/night-pirate-hat.png",
    ⵠᐃⲆⵠⲆΔΔ: "img/inv-pirate-hat-out.png",
    ᐃⵠᐃΔΔΔΔ: "img/inv-pirate-hat-in.png",
    ⲆᐃᐃΔᐃⲆⲆ: "img/inv-pirate-hat-click.png",
    ΔΔⵠⵠΔⵠⲆ: "img/day-penguin.png",
    ⵠᐃᐃⵠⲆⵠⵠ: "img/night-penguin.png",
    ⲆⵠᐃⲆΔᐃΔ: "img/hurt-penguin.png",
    ⲆⵠⵠⵠⲆ: "img/inv-penguin-feather-click.png",
    ᐃⲆΔᐃᐃ: "img/inv-hawk-feather-click.png",
    ⵠᐃᐃⲆⵠΔⲆ: "img/day-boar1.png",
    ΔⲆⵠⵠΔᐃΔ: "img/day-boar1-tamed.png",
    ⲆΔⲆΔΔΔⵠ: "img/day-boar1-angry.png",
    ⵠⲆᐃᐃⵠⲆΔ: "img/night-boar1.png",
    ⲆΔᐃΔⲆᐃⵠ: "img/night-boar1-tamed.png",
    ⵠⵠⵠᐃⵠΔᐃ: "img/night-boar1-angry.png",
    ⵠⲆⵠᐃᐃⲆⲆ: "img/inv-mount-boar-out.png",
    ⲆᐃᐃⲆⲆᐃⵠ: "img/inv-mount-boar-in.png",
    ⵠΔⵠᐃᐃⵠᐃ: "img/inv-mount-boar-click.png",
    ΔⲆⲆΔᐃⲆⵠ: "img/day-hurt-boar1.png",
    ΔᐃᐃᐃⵠⵠΔ: "img/boar1-step.png",
    ⲆΔⵠΔᐃᐃⵠ: "img/day-saddle1.png",
    ⵠⲆⲆⵠᐃⲆΔ: "img/night-saddle1.png",
    ΔΔⲆΔᐃⲆᐃ: "img/inv-saddle-out.png",
    ΔᐃΔΔⲆⲆΔ: "img/inv-saddle-in.png",
    ⵠⲆΔᐃΔΔⵠ: "img/inv-saddle-click.png",
    ᐃⲆΔⲆᐃⵠΔ: "img/day-magic-wand0.png",
    ΔᐃⲆΔⲆⲆⵠ: "img/night-magic-wand0.png",
    ΔⲆⲆΔᐃΔΔ: "img/day-light-wand1.png",
    ⵠⵠΔΔᐃΔⲆ: "img/night-light-wand1.png",
    ⵠⵠΔⲆᐃⵠΔ: "img/inv-magic-wand0-out.png",
    ΔⲆⲆΔᐃⲆΔ: "img/inv-magic-wand0-in.png",
    ⵠⲆᐃⲆΔᐃⵠ: "img/inv-magic-wand0-click.png",
    ΔᐃΔⵠΔⲆΔ: "img/day-magic-wand1.png",
    ⵠⲆΔᐃⲆΔΔ: "img/night-magic-wand1.png",
    ⵠⲆⵠⵠΔΔΔ: "img/day-light-wand0.png",
    ⲆⲆⵠⲆᐃᐃⲆ: "img/night-light-wand0.png",
    ᐃⵠᐃⲆⵠⲆⵠ: "img/inv-magic-wand1-out.png",
    ᐃᐃⲆⲆᐃΔᐃ: "img/inv-magic-wand1-in.png",
    ⲆⵠΔᐃΔᐃᐃ: "img/inv-magic-wand1-click.png",
    ⵠΔᐃⲆⲆⲆⲆ: "img/day-firefly.png",
    ⵠΔΔⲆΔᐃΔ: "img/night-firefly.png",
    ⲆᐃᐃⵠΔⵠΔ: "img/hurt-firefly.png",
    ⵠⲆⵠΔⵠᐃⲆ: "img/inv-firefly-out.png",
    ΔⲆΔΔⵠᐃⵠ: "img/inv-firefly-in.png",
    ΔΔⵠΔΔᐃⵠ: "img/inv-firefly-click.png",
    ΔΔⲆⵠⵠⵠΔ: "img/day-baby-dragon.png",
    ΔΔⵠⲆᐃΔⵠ: "img/night-baby-dragon.png",
    ⲆⲆⵠⵠᐃⲆᐃ: "img/day-baby-dragon-angry.png",
    ΔⵠΔΔΔᐃΔ: "img/night-baby-dragon-angry.png",
    ΔⵠⵠΔⵠⲆΔ: "img/day-baby-dragon-tamed.png",
    ⵠΔΔᐃⲆⵠΔ: "img/night-baby-dragon-tamed.png",
    ΔⵠⲆⵠΔⵠᐃ: "img/day-wing-dragon-left-angry.png",
    ΔⲆᐃⲆΔᐃΔ: "img/night-dragon-wing-left-angry.png",
    ⵠᐃΔᐃⲆⵠᐃ: "img/day-wing-dragon-right-angry.png",
    ⵠⲆⵠᐃᐃΔΔ: "img/night-dragon-wing-right-angry.png",
    ⲆᐃⲆⲆᐃᐃΔ: "img/day-wing-dragon-left-tamed.png",
    ΔⵠΔᐃᐃΔΔ: "img/night-dragon-wing-left-tamed.png",
    ⵠⵠⲆⲆⲆⵠᐃ: "img/day-wing-dragon-right-tamed.png",
    ⵠᐃᐃⵠᐃⲆᐃ: "img/night-wing-dragon-right-tamed.png",
    ⲆᐃΔⵠⲆⲆΔ: "img/day-wing-dragon-left.png",
    ΔΔᐃᐃⲆⵠⲆ: "img/night-dragon-wing-left.png",
    ΔΔᐃΔⵠΔΔ: "img/day-wing-dragon-right.png",
    ⲆᐃⲆⵠΔⵠᐃ: "img/night-wing-dragon-right.png",
    ΔⲆⲆΔⲆᐃᐃ: "img/hurt-baby-dragon.png",
    ᐃᐃⲆⲆᐃⵠⲆ: "img/hurt-baby-dragon-wing-left.png",
    ᐃΔᐃΔⵠᐃⲆ: "img/hurt-baby-dragon-wing-right.png",
    ⵠⵠᐃⵠᐃΔⵠ: "img/inv-baby-dragon-out.png",
    ⵠⲆⵠⲆᐃⲆΔ: "img/inv-baby-dragon-in.png",
    ⲆΔⲆⵠᐃⵠⵠ: "img/inv-baby-dragon-click.png",
    ⲆⲆᐃⲆⵠΔᐃ: "img/day-baby-lava.png",
    ⵠᐃⵠᐃᐃᐃᐃ: "img/night-baby-lava.png",
    ⲆⵠΔⲆΔᐃⵠ: "img/day-baby-lava-angry.png",
    ⲆᐃⵠⲆΔΔᐃ: "img/night-baby-lava-angry.png",
    ⵠⵠΔⲆΔⲆΔ: "img/day-baby-lava-tamed.png",
    ⵠΔᐃⵠᐃᐃⲆ: "img/night-baby-lava-tamed.png",
    ⲆⵠᐃⵠᐃⵠΔ: "img/day-wing-lava-left-angry.png",
    ⵠΔΔⲆΔⲆⵠ: "img/night-wing-lava-left-angry.png",
    ΔⲆⵠⲆⵠⲆⵠ: "img/day-wing-lava-right-angry.png",
    ΔΔΔΔⵠⵠΔ: "img/night-wing-lava-right-angry.png",
    ⵠⲆⵠᐃⲆⵠᐃ: "img/day-wing-lava-left-tamed.png",
    ᐃΔᐃᐃΔⲆᐃ: "img/night-wing-lava-left-tamed.png",
    ⲆⵠⲆⵠΔⵠⲆ: "img/day-wing-lava-right-tamed.png",
    ᐃⲆⲆᐃΔⲆᐃ: "img/night-wing-lava-right-tamed.png",
    ΔⵠΔⵠΔᐃⲆ: "img/day-wing-lava-left.png",
    ΔΔⵠΔⲆΔⲆ: "img/night-wing-lava-left.png",
    ⲆᐃΔⵠΔⵠⵠ: "img/day-wing-lava-right.png",
    ⲆⲆⲆᐃΔⲆⵠ: "img/night-wing-lava-right.png",
    ⵠⲆⲆΔⲆΔΔ: "img/hurt-baby-lava.png",
    ⲆⲆΔⵠⵠⵠⵠ: "img/hurt-baby-lava-wing-left.png",
    ⵠΔΔᐃᐃᐃΔ: "img/hurt-baby-lava-wing-right.png",
    ΔⲆᐃΔⵠΔⵠ: "img/inv-baby-lava-out.png",
    ⲆᐃᐃⵠΔᐃᐃ: "img/inv-baby-lava-in.png",
    ⵠⲆⲆΔⵠᐃⲆ: "img/inv-baby-lava-click.png",
    ᐃᐃᐃⵠᐃⲆᐃ: "img/day-falcon.png",
    ᐃΔⵠⵠⵠⲆⵠ: "img/night-falcon.png",
    ⵠΔⲆⲆⲆᐃᐃ: "img/day-falcon-angry.png",
    ⵠⲆᐃⵠⲆⲆᐃ: "img/night-falcon-angry.png",
    ᐃΔᐃΔⲆⵠΔ: "img/day-falcon-ground.png",
    ⲆⲆⵠⵠⵠⲆⲆ: "img/night-falcon-ground.png",
    ᐃⵠᐃᐃᐃΔᐃ: "img/day-falcon-ground-angry.png",
    ΔᐃⵠΔᐃⵠⲆ: "img/night-falcon-ground-angry.png",
    ᐃΔⲆΔⲆΔΔ: "img/day-falcon-wings-left.png",
    ΔΔΔΔᐃⵠⲆ: "img/night-falcon-wings-left.png",
    ΔᐃⲆᐃⲆᐃⲆ: "img/day-falcon-wings-right.png",
    Δᐃᐃⵠⵠⵠᐃ: "img/night-falcon-wings-right.png",
    ΔᐃΔΔΔᐃⲆ: "img/day-falcon-angry-wings-left.png",
    ⲆᐃᐃⵠΔⵠⲆ: "img/night-falcon-angry-wings-left.png",
    ᐃΔΔⲆᐃⵠⵠ: "img/day-falcon-angry-wings-right.png",
    ⲆᐃΔΔⲆⵠΔ: "img/night-falcon-angry-wings-right.png",
    ⲆΔⲆᐃᐃⲆⲆ: "img/day-falcon-wings-left-tamed.png",
    ⲆᐃᐃᐃΔⲆⵠ: "img/night-falcon-wings-left-tamed.png",
    ᐃⵠΔᐃΔⲆⲆ: "img/day-falcon-wings-right-tamed.png",
    ΔⲆᐃᐃᐃⵠΔ: "img/night-falcon-wings-right-tamed.png",
    ⲆᐃᐃⵠᐃⲆⵠ: "img/day-falcon-tamed.png",
    ⲆⲆΔⵠⵠΔⲆ: "img/night-falcon-tamed.png",
    ΔᐃⲆᐃⵠΔⲆ: "img/hurt-falcon-ground.png",
    ᐃΔΔΔΔᐃᐃ: "img/hurt-falcon.png",
    ΔΔᐃᐃΔᐃΔ: "img/hurt-falcon-wings-left.png",
    ⲆⵠⲆⵠⲆᐃⲆ: "img/hurt-falcon-wings-right.png",
    ᐃⵠⵠⲆᐃⵠⲆ: "img/inv-falcon-out.png",
    ⵠΔΔᐃⵠΔⵠ: "img/inv-falcon-in.png",
    ⲆⵠᐃΔᐃⲆΔ: "img/inv-falcon-click.png",
    ᐃⵠᐃⲆΔΔΔ: "img/day-crab-boss.png",
    ⵠⵠΔᐃᐃᐃⵠ: "img/night-crab-boss.png",
    ᐃⵠᐃⵠⲆⲆⲆ: "img/day-crab-boss-angry.png",
    ᐃΔΔⵠⵠⵠΔ: "img/night-crab-boss-angry.png",
    ΔᐃⵠᐃᐃⲆΔ: "img/day-crab-boss-tamed.png",
    ΔⵠⵠⵠᐃᐃΔ: "img/night-crab-boss-tamed.png",
    ΔⲆⵠᐃⲆΔᐃ: "img/day-crab-boss-claw-left-attack.png",
    ⲆΔΔΔΔⵠⲆ: "img/night-crab-boss-claw-left-attack.png",
    ⵠΔΔⵠΔΔⵠ: "img/day-crab-boss-claw-right-attack.png",
    ΔⵠⵠΔΔΔᐃ: "img/night-crab-boss-claw-right-attack.png",
    ᐃⲆⵠⵠᐃⲆΔΔΔ: "img/day-crab-boss-claw-left-tamed.png",
    ΔᐃᐃⲆⵠᐃⲆⵠΔ: "img/night-crab-boss-claw-left-tamed.png",
    ⲆΔⲆⲆⲆᐃᐃⲆⵠ: "img/day-crab-boss-claw-right-tamed.png",
    ⲆⵠΔⵠⵠⵠⲆΔΔ: "img/night-crab-boss-claw-right-tamed.png",
    ᐃⲆⲆⲆᐃⵠⵠ: "img/day-crab-boss-claw-left.png",
    ⲆⲆᐃⲆΔⵠⲆ: "img/night-crab-boss-claw-left.png",
    ᐃΔᐃΔᐃᐃⵠ: "img/day-crab-boss-claw-right.png",
    ΔᐃⲆⲆᐃᐃᐃ: "img/night-crab-boss-claw-right.png",
    ⵠᐃⲆΔΔⵠᐃ: "img/hurt-crab-boss.png",
    ΔᐃⵠᐃΔⵠᐃ: "img/hurt-crab-boss-claw-left.png",
    ΔΔΔΔⲆⵠᐃ: "img/hurt-crab-boss-claw-right.png",
    ⲆⵠⲆᐃᐃᐃΔ: "img/heal-crab-boss.png",
    ᐃᐃᐃⲆΔⲆⲆ: "img/heal-crab-boss-claw-left.png",
    ΔⲆΔⵠᐃⲆΔ: "img/heal-crab-boss-claw-right.png",
    ⲆⵠⵠⲆᐃΔⲆ: "img/crab-step.png",
    ΔⲆⵠᐃⲆΔΔ: "img/inv-crab-boss-out.png",
    ΔΔⲆⵠᐃⵠⲆ: "img/inv-crab-boss-in.png",
    ⲆᐃΔⲆⵠⲆᐃ: "img/inv-crab-boss-click.png",
    ᐃᐃⲆΔᐃⲆΔ: "img/day-cactus10.png",
    ΔⲆΔΔΔⲆⵠ: "img/night-cactus10.png",
    ⲆᐃⵠⵠⲆⲆⲆ: "img/inv-cactus-out.png",
    ΔᐃⲆᐃΔⲆⵠ: "img/inv-cactus-in.png",
    ⲆᐃᐃⵠⵠΔⵠ: "img/inv-cactus-click.png",
    ⵠⵠⵠᐃΔⵠΔ: "img/day-scorpion.png",
    ⵠᐃᐃΔⵠΔⵠ: "img/night-scorpion.png",
    ᐃⲆⵠⵠᐃⲆᐃ: "img/day-scorpion-hand-left.png",
    ᐃᐃⵠⵠⵠⲆⲆ: "img/night-scorpion-hand-left.png",
    ⵠⵠΔⵠᐃΔⵠ: "img/day-scorpion-hand-right.png",
    ΔⲆⲆΔᐃⲆᐃ: "img/night-scorpion-hand-right.png",
    ⲆΔⲆᐃᐃᐃⲆ: "img/hurt-scorpion.png",
    ⲆΔⲆᐃⲆⲆⵠ: "img/hurt-scorpion-hand-left.png",
    ⵠⲆⵠᐃⲆⵠⵠ: "img/hurt-scorpion-hand-right.png",
    ⲆΔⵠⲆⲆΔⲆ: "img/day-vulture.png",
    ⲆΔⵠⲆΔΔᐃ: "img/night-vulture.png",
    ΔⲆΔⲆⲆΔΔ: "img/day-vulture-angry.png",
    ⲆⵠΔⵠΔᐃⵠ: "img/night-vulture-angry.png",
    ⵠⲆᐃⵠⵠᐃᐃ: "img/day-vulture-ground.png",
    ᐃⲆΔⲆΔⲆᐃ: "img/night-vulture-ground.png",
    ⵠΔⲆⲆⵠⵠΔ: "img/day-vulture-ground-angry.png",
    ΔⲆⵠᐃⵠᐃᐃ: "img/night-vulture-ground-angry.png",
    ΔΔΔⲆⵠⵠΔ: "img/day-vulture-wings-left.png",
    ⵠΔⵠⵠΔⲆΔ: "img/night-vulture-wings-left.png",
    ᐃⵠⵠᐃΔᐃⲆ: "img/day-vulture-wings-right.png",
    ᐃᐃⲆⵠⲆⲆᐃ: "img/night-vulture-wings-right.png",
    ⲆⵠⵠⵠⲆΔᐃ: "img/day-vulture-angry-wings-left.png",
    ᐃⲆΔΔΔⲆⲆ: "img/night-vulture-angry-wings-left.png",
    ΔΔⲆⵠᐃᐃⵠ: "img/day-vulture-angry-wings-right.png",
    ⵠⲆᐃΔΔⲆᐃ: "img/night-vulture-angry-wings-right.png",
    ⲆⲆᐃⵠᐃⵠⵠ: "img/day-vulture-wings-left-tamed.png",
    ⲆⲆᐃΔⲆᐃⲆ: "img/night-vulture-wings-left-tamed.png",
    ⲆⵠⵠΔΔⵠⵠ: "img/day-vulture-wings-right-tamed.png",
    ᐃⵠⵠⲆⵠᐃⵠ: "img/night-vulture-wings-right-tamed.png",
    ⵠᐃⵠⲆᐃᐃⲆ: "img/day-vulture-tamed.png",
    ᐃᐃⲆΔⵠⵠΔ: "img/night-vulture-tamed.png",
    ᐃⲆⵠⵠᐃⲆⲆ: "img/hurt-vulture-ground.png",
    ⲆⵠΔᐃⵠⲆⲆ: "img/hurt-vulture.png",
    ⵠᐃΔΔⵠΔⲆ: "img/hurt-vulture-wings-left.png",
    ΔᐃⵠᐃᐃⲆⲆ: "img/hurt-vulture-wings-right.png",
    ΔᐃⵠᐃⵠⵠⲆ: "img/day-aloe-vera.png",
    ⵠᐃⲆⵠΔⲆΔ: "img/night-aloe-vera.png",
    ΔⲆⵠΔᐃⵠᐃ: "img/inv-aloe-vera-out.png",
    ⵠᐃΔᐃΔⲆⲆ: "img/inv-aloe-vera-in.png",
    ⵠᐃΔᐃᐃᐃᐃ: "img/inv-aloe-vera-click.png",
    ⲆⵠΔⵠⵠᐃΔ: "img/day-aloe-vera-grown.png",
    ⵠΔⲆⲆⵠΔΔ: "img/night-aloe-vera-grown.png",
    ⲆⵠⵠⵠᐃᐃⲆ: "img/day-aloe-vera-dried.png",
    ⵠΔⲆⲆⵠⲆⵠ: "img/night-aloe-vera-dried.png",
    ᐃᐃᐃᐃᐃᐃⲆ: "img/day-turban1.png",
    ᐃᐃᐃⵠΔΔⵠ: "img/night-turban1.png",
    ⵠᐃⵠⵠᐃᐃⲆ: "img/day-turban2.png",
    ᐃᐃⵠⵠⲆΔⵠ: "img/night-turban2.png",
    ⲆⵠᐃⵠⲆΔⵠ: "img/inv-turban2-out.png",
    ΔᐃΔⲆΔⵠᐃ: "img/inv-turban2-in.png",
    ΔⲆΔⲆⵠᐃΔ: "img/inv-turban2-click.png",
    ⲆⲆᐃᐃΔᐃΔ: "img/inv-turban1-out.png",
    ⵠⲆⲆᐃᐃᐃⲆ: "img/inv-turban1-in.png",
    ⲆᐃᐃᐃᐃⲆᐃ: "img/inv-turban1-click.png",
    ⲆⵠⵠⲆⲆⲆᐃ: "img/day-pitchfork2.png",
    ᐃⵠΔᐃⲆΔⲆ: "img/night-pitchfork2.png",
    ΔⲆᐃᐃⵠⲆⲆ: "img/inv-pitchfork2-out.png",
    ⵠⲆⵠᐃⲆⵠⲆ: "img/inv-pitchfork2-in.png",
    ΔΔⵠⵠᐃⲆΔ: "img/inv-pitchfork2-click.png",
    ⲆⲆΔⲆⲆᐃⲆ: "img/inv-gold-fork-click.png",
    ΔΔΔⲆΔⵠⲆ: "img/inv-pilot-glasses-click.png",
    ᐃⲆᐃⲆΔᐃᐃ: "img/day-pilot-helmet.png",
    ᐃⵠᐃⵠⲆⵠᐃ: "img/night-pilot-helmet.png",
    ΔᐃⲆᐃΔΔᐃ: "img/inv-pilot-helmet-out.png",
    ΔⲆΔⲆⲆⲆⲆ: "img/inv-pilot-helmet-in.png",
    ⲆΔⲆⵠⵠⵠΔ: "img/inv-pilot-helmet-click.png",
    ⵠⵠⲆⵠᐃⵠᐃΔⲆ: "img/day-sandworm0.png",
    ΔⵠΔΔⵠⲆΔ: "img/day-sandworm1.png",
    ⲆᐃᐃⲆⲆᐃⲆ: "img/day-sandworm2.png",
    ⲆⲆⲆⵠⲆⲆΔⵠΔ: "img/night-sandworm0.png",
    ᐃⵠΔⵠⵠⲆⵠ: "img/night-sandworm1.png",
    ⵠᐃⵠⵠⲆⵠⵠ: "img/night-sandworm2.png",
    ⲆΔⵠΔΔᐃⵠ: "img/hurt-sandworm0.png",
    ᐃⵠⲆᐃⲆΔⵠ: "img/hurt-sandworm1.png",
    ⵠᐃΔⵠΔⲆⲆ: "img/hurt-sandworm2.png",
    ⲆⲆⵠᐃᐃ: "img/inv-vulture-feather-click.png",
    Ⲇⵠᐃⵠᐃⵠⵠ: "img/day-emerald0.png",
    ᐃΔᐃΔⲆⵠⲆ: "img/night-emerald0.png",
    ⵠⲆⲆᐃⵠⵠⵠ: "img/day-emerald1.png",
    ᐃᐃΔΔΔΔᐃ: "img/night-emerald1.png",
    ⵠⵠⵠⲆⵠᐃΔ: "img/day-emerald2.png",
    ⵠⵠⲆᐃⲆΔᐃ: "img/night-emerald2.png",
    ⵠΔΔΔΔ: "img/inv-emerald-click.png",
    ᐃΔᐃᐃᐃⵠⵠ: "img/inv-sworm-juice-out.png",
    ΔⵠᐃᐃⲆΔᐃ: "img/inv-sworm-juice-in.png",
    ⵠⵠᐃⲆΔᐃⵠ: "img/inv-sworm-juice-click.png",
    ⵠⲆΔᐃΔⲆⵠ: "img/day-point-machine.png",
    ΔΔⵠΔⲆⲆⲆ: "img/night-point-machine.png",
    ᐃⵠⵠΔΔΔⲆ: "img/day-point-machine-hole.png",
    ⲆᐃᐃⵠⵠΔᐃ: "img/night-point-machine-hole.png",
    ⲆΔΔΔΔⲆΔ: "img/day-point-machine-ground.png",
    ΔᐃⵠⵠⲆᐃⲆ: "img/night-point-machine-ground.png",
    ⲆⲆᐃΔⵠᐃΔ: "img/day-point-machine-rotate.png",
    ΔⵠΔⲆᐃⵠΔ: "img/night-point-machine-rotate.png",
    ⲆᐃⵠⵠⵠΔⲆ: "img/inv-point-machine-out.png",
    ᐃⲆⵠΔⲆΔⲆ: "img/inv-point-machine-in.png",
    ⵠᐃΔΔⲆⲆⵠ: "img/inv-point-machine-click.png",
    ΔⲆⵠᐃᐃᐃΔ: "img/day-extractor-machine0-stone.png",
    ᐃΔⲆᐃΔⵠΔ: "img/night-extractor-machine0-stone.png",
    ⲆᐃⵠⲆΔᐃⲆ: "img/day-extractor-machine-stone.png",
    ⵠᐃⲆΔⵠⵠⵠ: "img/night-extractor-machine-stone.png",
    ⲆⲆⲆΔⵠᐃⲆ: "img/inv-extractor-machine-stone-out.png",
    ᐃᐃⲆΔᐃⲆᐃ: "img/inv-extractor-machine-stone-in.png",
    ΔΔᐃⲆⲆⵠⲆ: "img/inv-extractor-machine-stone-click.png",
    ᐃⲆⵠⵠΔΔⵠ: "img/day-extractor-machine0-gold.png",
    ᐃⲆⲆΔⲆΔΔ: "img/night-extractor-machine0-gold.png",
    ⲆⵠᐃᐃⲆᐃᐃ: "img/day-extractor-machine-gold.png",
    ᐃⲆΔᐃᐃⵠᐃ: "img/night-extractor-machine-gold.png",
    ⲆᐃⵠᐃΔᐃⵠ: "img/inv-extractor-machine-gold-out.png",
    ΔᐃᐃⲆⵠΔⲆ: "img/inv-extractor-machine-gold-in.png",
    ⵠⲆΔΔᐃⵠⲆ: "img/inv-extractor-machine-gold-click.png",
    ΔᐃⵠⵠΔⲆΔ: "img/day-extractor-machine0-diamond.png",
    ΔⲆⲆⵠⵠᐃΔ: "img/night-extractor-machine0-diamond.png",
    ⵠⵠⵠⵠΔⵠΔ: "img/day-extractor-machine-diamond.png",
    ⲆⵠⲆᐃᐃⲆᐃ: "img/night-extractor-machine-diamond.png",
    ΔⵠⲆⵠⵠⲆΔ: "img/inv-extractor-machine-diamond-out.png",
    ⵠΔⵠⵠᐃⵠΔ: "img/inv-extractor-machine-diamond-in.png",
    ᐃⵠᐃⵠⲆⵠΔ: "img/inv-extractor-machine-diamond-click.png",
    ⲆΔⲆᐃⵠⵠⵠ: "img/day-extractor-machine0-amethyst.png",
    ⲆΔΔⵠΔⵠΔ: "img/night-extractor-machine0-amethyst.png",
    ΔⵠᐃᐃᐃⲆΔ: "img/day-extractor-machine-amethyst.png",
    ⵠΔⵠⲆᐃΔᐃ: "img/night-extractor-machine-amethyst.png",
    ΔⵠΔⵠⲆᐃⲆ: "img/inv-extractor-machine-amethyst-out.png",
    ᐃⵠΔⵠⵠΔⵠ: "img/inv-extractor-machine-amethyst-in.png",
    ⵠⲆᐃⲆᐃⲆⵠ: "img/inv-extractor-machine-amethyst-click.png",
    ⲆᐃⲆᐃᐃⵠⵠ: "img/day-extractor-machine0-reidite.png",
    ΔᐃⲆᐃᐃᐃⵠ: "img/night-extractor-machine0-reidite.png",
    ⲆΔᐃᐃᐃΔΔ: "img/day-extractor-machine-reidite.png",
    ᐃΔᐃⵠⵠⲆⲆ: "img/night-extractor-machine-reidite.png",
    ᐃⲆΔⵠⵠⵠⵠ: "img/inv-extractor-machine-reidite-out.png",
    ⲆⵠⵠⵠᐃΔᐃ: "img/inv-extractor-machine-reidite-in.png",
    ⲆᐃⵠΔΔⵠᐃ: "img/inv-extractor-machine-reidite-click.png",
    ΔⲆⲆᐃⵠᐃⵠ: "img/extractor-cases.png",
    ⵠⵠⵠⲆΔⵠᐃ: "img/day-golden-hen.png",
    ⵠΔⲆⲆᐃᐃΔ: "img/night-golden-hen.png",
    ᐃⵠⲆᐃΔᐃⵠ: "img/day-golden-chicken.png",
    ⵠΔⵠⵠⵠᐃᐃ: "img/night-golden-chicken.png",
    ΔⵠᐃⵠΔⵠⲆ: "img/hurt-golden-hen.png",
    ⲆᐃΔⲆⲆⲆᐃ: "img/hurt-golden-chicken.png",
    ⵠⵠⲆⵠⲆⲆⲆ: "img/logo-interface.png",
    ΔᐃⵠⲆΔⲆⵠ: "img/forest-mode-hover.png",
    ᐃⵠΔΔⲆΔⲆ: "img/normal-mode-hover.png",
    ⵠⲆⲆⵠⵠⵠΔ: "img/vampire-mode-hover.png",
    ⵠᐃⵠΔΔⲆᐃ: "img/zombie-mode-hover.png",
    ⵠᐃΔⲆⲆⵠⵠ: "img/community-mode-hover2.png",
    ⲆⲆⵠⲆᐃᐃΔ: "img/experimental-mode-hover.png",
    ᐃⵠᐃᐃⵠΔΔ: "img/zombie-mode-out.png",
    ΔᐃΔⵠΔⵠⲆ: "img/zombie-mode-in.png",
    ⲆᐃΔᐃⵠⵠⲆ: "img/zombie-mode-click.png",
    ΔⲆⵠⵠᐃⲆⵠ: "img/vampire-mode-out.png",
    ΔⲆᐃᐃΔᐃΔ: "img/vampire-mode-in.png",
    ΔΔΔΔⲆᐃΔ: "img/vampire-mode-click.png",
    ᐃΔΔΔⵠᐃᐃ: "img/normal-mode-out.png",
    ⵠᐃⲆᐃΔⵠΔ: "img/normal-mode-in.png",
    ⲆⵠΔⲆⲆⵠΔ: "img/normal-mode-click.png",
    ⲆⲆⵠᐃᐃⲆΔ: "img/forest-mode-out.png",
    ⵠⵠΔⵠⵠᐃⲆ: "img/forest-mode-in.png",
    ᐃⲆⲆⲆⲆΔᐃ: "img/forest-mode-click.png",
    ᐃⵠⲆⵠⲆⲆΔ: "img/community-mode-out.png",
    ᐃᐃⵠΔⲆΔⵠ: "img/community-mode-in.png",
    ⵠΔⲆⵠᐃⵠᐃ: "img/community-mode-click.png",
    ⵠⵠⲆⵠⲆⵠⵠ: "img/experimental-modes-out.png",
    ⵠΔᐃᐃᐃᐃΔ: "img/experimental-modes-in.png",
    ⲆΔⵠΔᐃⵠᐃ: "img/experimental-modes-click.png",
    ΔΔᐃⵠⲆᐃΔ: "img/youtube-button-out.png",
    ΔⵠⲆⲆᐃⲆⲆ: "img/youtube-button-in.png",
    ΔΔΔⵠΔᐃΔ: "img/youtube-button-click.png",
    ⵠⵠΔΔΔᐃΔ: "img/wiki-button-out.png",
    ⵠⲆΔᐃⵠⵠΔ: "img/wiki-button-in.png",
    ΔΔⲆΔᐃⲆΔ: "img/wiki-button-click.png",
    ⲆⲆⲆⵠᐃᐃΔ: "img/twitter-button-out.png",
    ⵠⲆΔᐃᐃΔⵠ: "img/twitter-button-in.png",
    ⵠⲆᐃΔᐃᐃⲆ: "img/twitter-button-click.png",
    ᐃⲆᐃⵠⵠⵠⵠ: "img/facebook-button-out.png",
    ΔᐃΔᐃΔᐃⵠ: "img/facebook-button-in.png",
    ⲆⲆΔⵠⲆⲆⲆ: "img/facebook-button-click.png",
    ᐃΔⲆⲆᐃⵠⲆ: "img/reddit-button-out.png",
    ⵠᐃⵠⲆᐃⵠⲆ: "img/reddit-button-in.png",
    ΔΔⵠⲆⲆⲆΔ: "img/reddit-button-click.png",
    ΔᐃⵠⵠⵠᐃⲆ: "img/discord-button-out.png",
    ⵠᐃⲆⲆⲆΔᐃ: "img/discord-button-in.png",
    ⵠΔⲆᐃⵠⲆΔ: "img/discord-button-click.png",
    ⵠᐃᐃⲆᐃⲆᐃ: "img/merch-button-out.png",
    ⲆⲆⲆⵠΔᐃⲆ: "img/merch-button-in.png",
    ⵠⵠᐃⲆⲆᐃⲆ: "img/merch-button-click.png",
    ⵠⵠᐃⲆΔᐃᐃᐃⲆ: "img/terminal-button-out.png",
    ⲆᐃᐃᐃᐃᐃⲆΔⲆ: "img/terminal-button-in.png",
    ⵠⲆᐃΔⵠⵠⵠᐃΔ: "img/terminal-button-click.png",
    ⵠⵠⲆΔⵠⵠᐃ: "img/restart-out.png",
    ΔⵠⵠΔΔᐃⵠ: "img/restart-in.png",
    ᐃⵠᐃΔⲆᐃΔ: "img/restart-click.png",
    ΔⵠΔΔᐃΔⲆ: "img/reboot-out.png",
    ᐃⲆᐃⵠⲆⵠⲆ: "img/reboot-in.png",
    ⵠⲆⵠⲆᐃⲆⲆ: "img/reboot-click.png",
    ᐃΔᐃⲆⵠᐃⲆ: "img/guide-out.png",
    ΔⲆΔⲆΔᐃΔ: "img/guide-in.png",
    ᐃΔᐃⲆᐃⲆᐃ: "img/guide-click.png",
    ⵠⵠⲆΔⵠⲆⵠ: "img/copy-paste-out.png",
    ΔⵠⵠⲆⵠᐃⲆ: "img/copy-paste-in.png",
    ⵠΔᐃᐃⵠⵠⵠ: "img/copy-paste-click.png",
    ⵠΔⲆΔΔΔᐃ: "img/link-buttons-bg.png",
    ⵠᐃⲆⲆⵠΔⵠ: "img/changelog-box2.png",
    ΔΔⵠᐃΔⵠⲆ: "img/changelog_31.png",
    ⵠⵠΔᐃⵠⲆⲆ: "img/banner-taming.png",
    ΔΔΔᐃⵠⲆⵠ: "img/profile-button-out.png",
    ⵠⵠⲆⵠⲆⲆΔ: "img/profile-button-in.png",
    ⲆⲆᐃⲆⵠⲆᐃ: "img/profile-button-click.png",
    ᐃᐃⲆᐃΔᐃΔ: "img/login-button-out.png",
    ⵠΔᐃⲆⲆΔᐃ: "img/login-button-in.png",
    ⵠⵠΔⵠᐃᐃΔ: "img/login-button-click.png",
    ᐃΔΔⵠⲆᐃΔ: "img/login-google-out.png",
    ᐃΔⵠΔⲆΔᐃ: "img/login-google-in.png",
    ᐃⵠᐃΔᐃΔⲆ: "img/login-google-click.png",
    ⵠⲆⵠᐃⲆΔΔ: "img/login-facebook-out.png",
    ΔⲆΔᐃⵠΔᐃ: "img/login-facebook-in.png",
    ΔⵠᐃᐃⲆⵠⵠ: "img/login-facebook-click.png",
    ⵠⲆⲆⲆⵠⲆᐃ: "img/account-box.png",
    ᐃᐃᐃᐃᐃⵠⲆΔⵠ: "img/account-under-maintenance.png",
    ᐃⵠᐃΔⲆⲆᐃ: "img/close-button-account-out.png",
    ⲆΔΔⵠΔᐃᐃ: "img/close-button-account-in.png",
    ⲆⲆᐃⵠΔΔⵠ: "img/close-button-account-click.png",
    ⲆᐃⵠᐃⲆⲆΔ: "img/play-button-out.png",
    ⲆⵠΔⲆᐃⲆⲆ: "img/play-button-in.png",
    ΔⵠⵠⵠⲆⲆΔ: "img/play-button-click.png",
    ᐃⲆⲆⵠⵠΔᐃⲆⵠ: "img/app-store-badge.png",
    ᐃⲆⲆⵠⵠⲆᐃΔᐃ: "img/play-store-badge.png",
    ᐃⲆΔⵠⲆᐃᐃᐃⵠ: "img/mobile-boxad.png",
    ⲆⲆᐃᐃⲆΔᐃ: "img/modify-name-out.png",
    ⵠᐃⵠᐃᐃⲆΔ: "img/modify-name-in.png",
    ᐃᐃⲆᐃⵠⵠⵠ: "img/modify-name-click.png",
    ⵠⲆⵠⲆⲆᐃⵠ: "img/copy-id-button-out.png",
    ⲆⲆᐃⵠⵠⵠΔ: "img/copy-id-button-hover.png",
    ΔⵠⲆΔΔⲆⲆ: "img/copy-id-button-active.png",
    ΔⲆᐃⲆᐃⲆⵠ: "img/yes-button-out.png",
    ⲆᐃΔⲆⲆᐃⵠ: "img/yes-button-in.png",
    ΔΔⵠⲆΔΔⲆ: "img/yes-button-click.png",
    ⲆᐃᐃᐃⲆΔⵠ: "img/yes-300-button-out.png",
    ᐃᐃⵠⵠΔΔΔ: "img/yes-300-button-in.png",
    ⵠΔⲆΔΔⲆᐃ: "img/yes-300-button-click.png",
    ⲆᐃᐃⵠⵠΔΔ: "img/no-button-out.png",
    ⵠΔᐃⲆᐃΔᐃ: "img/no-button-in.png",
    ΔᐃⵠΔᐃΔⵠ: "img/no-button-click.png",
    ⵠᐃⵠⵠⲆᐃᐃ: "img/no-thanks-button-out.png",
    ᐃⵠΔΔⲆΔⵠ: "img/no-thanks-button-in.png",
    ⲆᐃΔΔⲆⵠⲆ: "img/no-thanks-button-click.png",
    ΔᐃᐃΔⵠΔⵠ: "img/shop-button-out.png",
    ΔⲆⵠⵠⵠᐃⵠ: "img/shop-button-in.png",
    ΔΔᐃⵠΔᐃΔ: "img/shop-button-click.png",
    ⵠᐃⵠᐃⲆⲆⲆ: "img/logout-out.png",
    ᐃⵠⵠⲆⵠⵠᐃ: "img/logout-in.png",
    ⵠⵠΔᐃⵠⵠⵠ: "img/logout-click.png",
    ⲆⲆⵠⵠⵠⲆⵠ: "img/terms-button-out.png",
    ⲆⵠⲆᐃΔⲆΔ: "img/terms-button-in.png",
    ᐃΔⵠΔⲆΔⵠ: "img/terms-button-click.png",
    ⲆᐃΔΔⵠⲆⵠ: "img/tutorial-icon.png",
    ⵠⲆᐃΔΔⵠⵠ: "img/skins-icon.png",
    ⲆᐃⵠⵠΔΔⵠ: "img/shop-icon.png",
    ⲆⵠⵠⵠⲆΔΔᐃⲆ: "img/paint-icon.png",
    ᐃⵠⲆᐃⵠⲆΔ: "img/leaderboard-icon.png",
    ⲆΔⵠᐃΔⲆΔ: "img/start-icon.png",
    ⲆⲆⵠᐃΔⵠΔ: "img/profile-icon.png",
    ⲆᐃΔⲆⵠΔⲆ: "img/server-access-icon2.png",
    ᐃΔⵠⵠᐃⵠⲆ: "img/button-homepage-bg-out.png",
    ᐃⲆⵠΔⵠⵠᐃ: "img/button-homepage-bg-in.png",
    ΔⵠᐃⵠΔⵠΔ: "img/button-homepage-bg-click.png",
    ⵠΔᐃΔⵠΔᐃ: "img/button-bottom-homepage-bg-out.png",
    ΔⵠᐃΔᐃⲆΔ: "img/button-bottom-homepage-bg-in.png",
    ⵠᐃᐃⵠⲆᐃΔ: "img/button-bottom-homepage-bg-click.png",
    Δᐃⵠⵠᐃⵠᐃ: "img/lvl-player.png",
    ᐃⵠΔᐃΔⵠⲆ: "img/avatar-player.png",
    ⲆᐃΔⵠⲆΔⲆ: "img/avatar-player1.png",
    ΔⵠᐃΔᐃΔΔ: "img/avatar-player2.png",
    ⵠΔⵠᐃⲆΔⲆ: "img/avatar-player3.png",
    ⵠⲆⲆΔⵠⲆⵠ: "img/avatar-player4.png",
    ⲆΔⵠΔᐃΔᐃ: "img/avatar-player5.png",
    ᐃⵠⲆΔⵠᐃⵠ: "img/avatar-player6.png",
    ΔᐃⵠⵠⲆᐃⵠ: "img/avatar-player7.png",
    ᐃΔⲆⵠΔⵠᐃ: "img/avatar-player8.png",
    ᐃᐃΔΔⲆᐃᐃ: "img/avatar-player9.png",
    ⵠⵠΔⵠΔᐃΔ: "img/avatar-player10.png",
    ΔΔⲆᐃⲆⲆⵠ: "img/avatar-player11.png",
    ⲆΔᐃⵠᐃᐃᐃ: "img/avatar-player12.png",
    ⵠⵠⲆᐃΔⲆⲆ: "img/avatar-player13.png",
    Ⲇⵠᐃⵠⵠⵠⵠ: "img/avatar-player14.png",
    ΔⵠΔΔⲆⲆⵠ: "img/avatar-player14.png",
    ⵠⵠⲆⵠᐃᐃⵠ: "img/avatar-player14.png",
    ⵠⵠΔⵠⲆⵠΔ: "img/avatar-player14.png",
    ΔᐃⲆᐃᐃΔΔΔΔ: "img/golden-bread.png",
    ⲆⲆⲆⲆΔⵠᐃ: "img/buy-bread-out.png",
    ΔᐃΔᐃΔΔᐃ: "img/buy-bread-in.png",
    ᐃᐃᐃⵠⵠΔⵠ: "img/buy-bread-click.png",
    ᐃᐃΔⵠⲆΔⲆ: "img/gauge.png",
    ⵠⵠⵠΔᐃΔΔΔΔ: "img/season-4-out.png",
    ᐃⵠⵠⲆΔⵠᐃⲆᐃ: "img/season-4-in.png",
    ΔⲆΔⵠᐃⲆΔⵠΔ: "img/season-4-click.png",
    ⲆⲆᐃΔⵠΔᐃⲆⵠ: "img/season4-box.png",
    ⵠᐃᐃᐃᐃⲆᐃⲆᐃ: "img/season-5-out.png",
    ⲆᐃᐃⵠᐃΔΔⵠΔ: "img/season-5-in.png",
    ΔᐃⲆᐃᐃᐃᐃᐃᐃ: "img/season-5-click.png",
    ᐃⲆⵠⲆᐃᐃΔⵠᐃ: "img/season5-box.png",
    ᐃΔΔΔᐃⵠⲆ: "img/season-6-out.png",
    ᐃⵠⲆⵠΔⲆᐃ: "img/season-6-in.png",
    ᐃⵠΔᐃⵠⲆⲆ: "img/season-6-click.png",
    ⵠⲆⲆᐃΔΔᐃ: "img/season6-box.png",
    ⵠⵠⲆᐃᐃⵠΔ: "img/profile3-box.png",
    ΔΔΔⵠᐃⵠⲆ: "img/skins-box.png",
    ⲆⲆⲆᐃⲆΔⲆ: "img/shop-box.png",
    ⵠⵠⵠᐃⵠⵠⲆΔⵠ: "img/private-server-box.png",
    ⲆΔⲆᐃᐃᐃΔ: "img/location-box.png",
    ⵠⲆⲆⵠΔΔⲆ: "img/server-duration-box.png",
    ΔΔΔⲆⲆᐃⵠ: "img/tutorial-box.png",
    ᐃᐃΔᐃⵠΔⵠ: "img/leaderboard2-box.png",
    ⵠⲆⵠΔΔⵠᐃ: "img/buy-breads-box.png",
    ⲆⲆΔⲆΔⵠᐃ: "img/bag-box.png",
    ⵠΔⲆΔΔⲆⲆ: "img/deadbox-box.png",
    ⵠᐃᐃⲆⲆΔΔ: "img/book-box.png",
    ⵠᐃⵠⲆᐃΔⵠ: "img/accessories-box.png",
    ᐃΔᐃᐃΔⲆⵠ: "img/customskin-box.png",
    ⲆⵠΔΔᐃᐃΔ: "img/bag-lasts.png",
    ⵠⵠⲆⵠΔᐃΔ: "img/server-lasts.png",
    ⵠᐃⵠᐃⲆΔᐃ: "img/server-access-box3.png",
    ⵠᐃⲆⲆᐃⲆⵠ: "img/lootbox-box.png",
    ΔⵠᐃΔⵠΔΔ: "img/change-nickname0.png",
    ᐃⵠⲆᐃⵠΔⲆ: "img/change-nickname1.png",
    ⲆΔⲆΔΔⲆΔ: "img/cheating-box.png",
    ΔᐃᐃΔᐃⵠⲆΔΔ: "img/daily-quest-box.png",
    ᐃⲆⲆⲆΔⲆⵠᐃᐃ: "img/daily-5-bread.png",
    ᐃⵠⵠΔᐃΔΔᐃⵠ: "img/daily-10-bread.png",
    ᐃⵠⵠΔⵠᐃⲆΔᐃ: "img/daily-valid.png",
    ⵠΔⲆⲆᐃⵠᐃ: "img/normal-profile-out.png",
    ΔᐃⲆⵠⲆⲆⲆ: "img/normal-profile-in.png",
    ⵠⵠᐃΔΔⵠᐃ: "img/normal-profile-click.png",
    ⲆᐃᐃΔΔΔⲆ: "img/forest-profile-out.png",
    ᐃⵠⲆⵠⲆΔΔ: "img/forest-profile-in.png",
    ⵠΔᐃᐃΔΔΔ: "img/forest-profile-click.png",
    ⲆⲆⲆⵠⵠⲆᐃ: "img/zombie-profile-out.png",
    ΔⲆΔⲆΔⵠⵠ: "img/zombie-profile-in.png",
    ⵠᐃⵠΔΔΔⲆ: "img/zombie-profile-click.png",
    ᐃΔⵠᐃⵠⵠᐃ: "img/vampire-profile-out.png",
    ᐃᐃⵠΔᐃᐃⲆ: "img/vampire-profile-in.png",
    ᐃᐃⵠⵠⵠⲆᐃ: "img/vampire-profile-click.png",
    ᐃᐃⵠⵠᐃᐃⲆ: "img/total-profile-out.png",
    ᐃⲆΔⵠⲆΔᐃ: "img/total-profile-in.png",
    ΔⲆⵠΔᐃΔᐃ: "img/total-profile-click.png",
    ᐃⲆⵠⵠⲆⵠⲆ: "img/season1-out.png",
    ᐃΔᐃⲆΔΔⲆ: "img/season1-in.png",
    ⵠΔΔᐃⲆⲆⲆ: "img/season1-click.png",
    ⵠⲆⵠⵠⵠⲆᐃ: "img/season2-out.png",
    ⵠΔᐃᐃⲆᐃΔ: "img/season2-in.png",
    ΔᐃΔⵠΔᐃΔ: "img/season2-click.png",
    ⵠΔᐃⲆΔΔΔ: "img/season3-out.png",
    ᐃⵠᐃᐃⲆᐃⲆ: "img/season3-in.png",
    ΔΔⵠⵠΔᐃⲆ: "img/season3-click.png",
    ⲆᐃⵠᐃᐃⵠΔ: "img/season4-out.png",
    ΔᐃᐃⵠΔᐃⲆ: "img/season4-in.png",
    ⲆΔⲆⵠⵠᐃΔ: "img/season4-click.png",
    ⲆΔΔⵠⲆᐃⲆ: "img/season5-out.png",
    ΔⵠᐃⲆΔⲆᐃ: "img/season5-in.png",
    ⵠΔⲆΔᐃⵠⲆ: "img/season5-click.png",
    ᐃΔᐃⲆΔⵠᐃ: "img/season6-out.png",
    ᐃⲆΔΔⵠΔⵠ: "img/season6-in.png",
    ᐃΔⵠⵠΔΔΔ: "img/season6-click.png",
    ⵠⵠⵠⵠⵠΔⲆ: "img/locked-skin-alert.png",
    ΔⲆᐃⵠᐃⲆΔ: "img/locked-custom-alert.png",
    ᐃⵠⲆᐃⵠⵠΔ: "img/bg-red-locked.png",
    ᐃⲆⲆⵠᐃᐃⵠ: "img/skin-button-out.png",
    ᐃⵠⲆⲆⲆᐃⲆ: "img/skin-button-in.png",
    ⵠⵠᐃⵠⲆⲆΔ: "img/skin-button-click.png",
    ⵠΔᐃⲆⵠᐃⵠ: "img/accessory-button-out.png",
    ⵠⲆΔⲆᐃΔΔ: "img/accessory-button-in.png",
    ⵠⲆⵠⲆⵠᐃⵠ: "img/accessory-button-click.png",
    ⲆᐃΔΔᐃⲆΔ: "img/bag-button-out.png",
    ⲆΔᐃΔⲆᐃⲆ: "img/bag-button-in.png",
    ⵠᐃᐃΔΔᐃⵠ: "img/bag-button-click.png",
    ΔᐃᐃᐃΔⲆΔ: "img/book-button-out.png",
    ΔᐃᐃⲆΔΔⵠ: "img/book-button-in.png",
    ΔⵠⵠΔΔΔⲆ: "img/book-button-click.png",
    ᐃⲆᐃⵠᐃᐃⲆ: "img/deadbox-button-out.png",
    ᐃᐃⲆᐃⵠⲆⵠ: "img/deadbox-button-in.png",
    ΔⵠⲆΔΔᐃᐃ: "img/deadbox-button-click.png",
    ⲆⲆᐃᐃⲆⲆᐃ: "img/loot-button-out.png",
    ⲆΔΔΔⲆⵠΔ: "img/loot-button-in.png",
    ⲆᐃⲆⵠⵠΔᐃ: "img/loot-button-click.png",
    ΔⵠⲆⲆⵠⵠΔ: "img/free-item-out.png",
    ᐃΔΔⲆⵠⲆΔ: "img/free-item-in.png",
    ΔⵠⲆΔⲆⵠⲆ: "img/free-item-click.png",
    ⲆᐃⲆᐃ: "img/wood-item-out.png",
    ⵠᐃⲆΔ: "img/wood-item-in.png",
    ΔᐃⲆᐃ: "img/wood-item-click.png",
    ᐃΔΔᐃᐃⵠᐃ: "img/stone-item.png",
    ᐃⵠᐃΔᐃⲆᐃ: "img/stone-item-in.png",
    ᐃⵠΔⵠᐃⲆΔ: "img/stone-item-click.png",
    ΔᐃᐃⵠⲆⲆᐃ: "img/gold-item.png",
    ⲆⲆᐃᐃΔᐃᐃ: "img/gold-item-in.png",
    ⵠΔΔⵠⲆᐃᐃ: "img/gold-item-click.png",
    ⲆⲆⲆⲆⵠⵠⲆ: "img/diamond-item.png",
    ΔⲆⲆΔⲆΔᐃ: "img/diamond-item-in.png",
    ⵠⵠΔⵠᐃⲆᐃ: "img/diamond-item-click.png",
    ᐃᐃⵠⵠⲆⲆΔ: "img/amethyst-item.png",
    ⲆⲆΔⲆⲆᐃΔ: "img/amethyst-item-in.png",
    ⲆⵠᐃᐃⵠⲆⲆ: "img/amethyst-item-click.png",
    ᐃⵠΔⲆΔⵠᐃ: "img/reidite-item.png",
    ⵠΔᐃⲆⵠⵠⲆ: "img/reidite-item-in.png",
    ⵠⵠΔⲆᐃᐃⵠ: "img/reidite-item-click.png",
    ΔᐃⵠΔⲆⲆⲆ: "img/special-item-out.png",
    ⵠⵠᐃᐃⲆⲆⵠ: "img/special-item-in.png",
    ⵠᐃᐃⵠⵠⲆⵠ: "img/special-item-click.png",
    ⲆⵠΔΔⲆⵠⲆ: "img/level-item-out.png",
    ⵠⵠⲆⲆᐃᐃⵠ: "img/level-item-in.png",
    ΔⲆⲆⲆᐃⲆΔ: "img/level-item-click.png",
    ΔⲆᐃⲆᐃⵠᐃ: "img/skin-previous-out.png",
    ᐃⲆⲆΔΔΔΔ: "img/skin-previous-in.png",
    ΔⵠΔΔΔΔⵠ: "img/skin-previous-click.png",
    ⵠᐃⵠⲆⲆᐃⵠ: "img/skin-next-out.png",
    ΔⲆⵠⵠΔⲆᐃ: "img/skin-next-in.png",
    ⵠᐃⲆΔⵠΔΔ: "img/skin-next-click.png",
    ⲆⵠᐃΔᐃ: "img/back-button-out.png",
    ᐃΔΔⲆΔ: "img/back-button-in.png",
    ⲆᐃΔⲆⲆ: "img/back-button-click.png",
    ᐃᐃᐃΔΔⲆⲆ: "img/get-more-button-out.png",
    ᐃⲆⵠΔⵠⲆΔ: "img/get-more-button-in.png",
    ⵠⲆᐃⵠᐃⵠᐃ: "img/get-more-button-click.png",
    ΔΔᐃΔⵠᐃᐃ: "img/currency1-out.png",
    ΔᐃΔⵠⵠⲆᐃ: "img/currency1-in.png",
    ⲆⲆᐃⲆΔΔΔ: "img/currency1-click.png",
    ⵠΔⲆⵠΔᐃⵠ: "img/currency2-out.png",
    ᐃᐃⲆᐃΔⲆΔ: "img/currency2-in.png",
    ΔᐃᐃᐃΔⲆⲆ: "img/currency2-click.png",
    ᐃᐃⲆⲆΔⲆⲆ: "img/currency3-out.png",
    ⲆᐃⵠⲆⲆⲆⲆ: "img/currency3-in.png",
    ⲆⲆᐃΔⲆⲆⵠ: "img/currency3-click.png",
    ⲆᐃⵠΔΔⵠⲆ: "img/currency4-out.png",
    ⵠⵠΔⲆΔᐃⵠ: "img/currency4-in.png",
    ⲆⵠⵠⵠⵠᐃⲆ: "img/currency4-click.png",
    ΔΔⵠⲆΔᐃΔ: "img/currency5-out.png",
    ᐃⲆⵠⵠΔⵠΔ: "img/currency5-in.png",
    ᐃⲆᐃⵠⵠⲆᐃ: "img/currency5-click.png",
    ΔΔᐃΔⲆΔΔ: "img/price1-out.png",
    ⵠΔΔΔⵠᐃⵠ: "img/price1-in.png",
    ⲆΔⵠⵠᐃⲆⲆ: "img/price1-click.png",
    ᐃΔᐃⲆᐃᐃⲆ: "img/price2-out.png",
    ⲆⵠⲆⲆΔᐃⲆ: "img/price2-in.png",
    ⲆᐃᐃΔⵠΔⲆ: "img/price2-click.png",
    ᐃᐃΔⲆⵠΔⵠ: "img/price3-out.png",
    ⲆⵠΔΔᐃΔⵠ: "img/price3-in.png",
    ᐃⵠΔᐃᐃⲆⵠ: "img/price3-click.png",
    ᐃⲆᐃΔᐃᐃⲆ: "img/price4-out.png",
    ᐃᐃⲆΔⵠⲆⵠ: "img/price4-in.png",
    ᐃⲆᐃⵠⵠᐃᐃ: "img/price4-click.png",
    ⲆⲆΔΔⲆΔⲆ: "img/price5-out.png",
    ⵠⵠᐃΔⲆⵠⵠ: "img/price5-in.png",
    Ⲇⵠᐃᐃⵠᐃⵠ: "img/price5-click.png",
    ⵠⵠⲆᐃⵠᐃΔⲆⲆ: "img/buy-private-server-out.png",
    ⵠⲆᐃΔΔⲆΔⵠΔ: "img/buy-private-server-in.png",
    ᐃᐃⵠΔⵠⵠⲆⵠⲆ: "img/buy-private-server-click.png",
    ⲆᐃᐃⵠⲆⲆⲆ: "img/atlanta-button-out.png",
    ᐃⲆΔΔⲆⵠⵠ: "img/atlanta-button-in.png",
    ΔᐃⲆΔΔᐃΔ: "img/atlanta-button-click.png",
    ΔⲆᐃⵠΔⲆⲆ: "img/los-angeles-button-out.png",
    ⲆᐃⲆΔᐃⲆᐃ: "img/los-angeles-button-in.png",
    ᐃᐃᐃⲆⵠΔⵠ: "img/los-angeles-button-click.png",
    ⵠΔⵠⵠΔⵠᐃ: "img/sydney-button-out.png",
    ⵠⵠΔᐃⲆⲆᐃ: "img/sydney-button-in.png",
    ⲆⲆⲆⵠᐃΔⵠ: "img/sydney-button-click.png",
    ⲆΔⵠᐃⲆΔⵠ: "img/frankfurt-button-out.png",
    ⵠⲆⲆΔΔΔⲆ: "img/frankfurt-button-in.png",
    ᐃⲆⲆΔⲆⵠΔ: "img/frankfurt-button-click.png",
    ΔⵠⵠΔⵠΔᐃ: "img/osaka-button-out.png",
    ᐃᐃⵠΔⲆⵠⵠ: "img/osaka-button-in.png",
    ⲆΔⵠⲆΔⵠⵠ: "img/osaka-button-click.png",
    ⲆΔⲆⲆΔⵠΔᐃᐃ: "img/yes-location-out.png",
    ⲆΔᐃⲆᐃⵠⵠᐃⲆ: "img/yes-location-in.png",
    ΔΔⲆΔⵠΔᐃⲆΔ: "img/yes-location-click.png",
    ΔⲆⵠΔᐃⲆⲆ: "img/3days-button-out.png",
    ΔⵠΔΔΔⵠⲆ: "img/3days-button-in.png",
    ΔᐃᐃⲆᐃΔᐃ: "img/3days-button-click.png",
    ⵠⵠΔⵠⵠⵠⵠ: "img/7days-button-out.png",
    ⵠⵠΔΔⲆⵠΔ: "img/7days-button-in.png",
    ⲆⲆΔΔⲆⵠⲆ: "img/7days-button-click.png",
    ⲆΔⲆⲆᐃⵠΔ: "img/30days-button-out.png",
    ᐃᐃΔΔⵠᐃⵠ: "img/30days-button-in.png",
    ⲆⲆⲆⵠⲆⵠⵠ: "img/30days-button-click.png",
    ΔΔⵠⵠᐃᐃᐃ: "img/90days-button-out.png",
    ΔΔⵠᐃΔᐃⵠ: "img/90days-button-in.png",
    ᐃΔⲆᐃᐃᐃᐃ: "img/90days-button-click.png",
    ᐃⲆⵠⲆᐃⲆⵠ: "img/spin1.png",
    ⵠᐃⲆⲆΔⲆᐃ: "img/spin2.png",
    ⵠⵠⵠⵠⲆΔΔ: "img/spin3.png",
    ⲆᐃᐃⲆⲆⲆΔ: "img/spin4.png",
    ᐃⵠᐃⲆⲆⵠⲆ: "img/spin5.png",
    ΔᐃⲆⲆᐃᐃΔ: "img/spin6.png",
    ᐃⵠⲆᐃⲆⵠᐃ: "img/arrow-spin.png",
    ᐃΔⵠⵠᐃⵠⵠ: "img/spin-button-1-out.png",
    ⵠᐃⲆΔᐃᐃⵠ: "img/spin-button-1-in.png",
    ᐃΔⲆᐃᐃⵠᐃ: "img/spin-button-1-click.png",
    ⵠⲆⵠΔᐃⵠⵠ: "img/spin-button-2-out.png",
    ⲆⵠΔᐃΔΔⵠ: "img/spin-button-2-in.png",
    ᐃΔᐃⵠⲆΔⵠ: "img/spin-button-2-click.png",
    ΔΔⵠᐃᐃⲆⵠ: "img/spin-button-3-out.png",
    ᐃᐃⵠⵠⵠᐃⲆ: "img/spin-button-3-in.png",
    ⵠΔᐃᐃⲆⲆΔ: "img/spin-button-3-click.png",
    ⲆΔⵠⲆᐃⲆⵠ: "img/spin-button-4-out.png",
    ⵠΔⲆⵠᐃⵠⵠ: "img/spin-button-4-in.png",
    ⲆᐃⵠᐃΔⵠᐃ: "img/spin-button-4-click.png",
    ⲆᐃⲆᐃᐃⲆᐃ: "img/spin-button-5-out.png",
    ⲆΔΔⲆⲆⲆΔ: "img/spin-button-5-in.png",
    ⲆⲆⲆⲆⵠΔⵠ: "img/spin-button-5-click.png",
    ᐃⵠᐃΔᐃⵠⲆ: "img/spin-light.png",
    ⵠᐃᐃⵠⲆⵠᐃ: "img/tuto-wiki-out.png",
    ΔⲆᐃⲆⲆΔᐃ: "img/tuto-wiki-in.png",
    ⵠΔⲆⵠᐃᐃΔ: "img/tuto-wiki-click.png",
    ⲆΔⵠΔⵠⵠΔ: "img/tuto-previous-out.png",
    ⵠᐃⵠΔᐃᐃⲆ: "img/tuto-previous-in.png",
    ⵠΔⲆⲆΔΔᐃ: "img/tuto-previous-click.png",
    ᐃᐃᐃⲆᐃⲆΔ: "img/tuto-next-out.png",
    ⲆᐃΔⵠⵠᐃᐃ: "img/tuto-next-in.png",
    ᐃⵠΔᐃᐃⵠⲆ: "img/tuto-next-click.png",
    ⵠⵠᐃᐃⲆⲆⲆ: "img/time-leaderboard-out.png",
    ⵠⵠΔⲆΔⵠᐃ: "img/time-leaderboard-in.png",
    ᐃⵠⲆⲆΔΔΔ: "img/time-leaderboard-click.png",
    ⲆᐃⵠⵠΔⲆΔ: "img/score-leaderboard-out.png",
    ⵠⲆΔⲆΔᐃΔ: "img/score-leaderboard-in.png",
    ⲆⲆΔᐃⲆⵠΔ: "img/score-leaderboard-click.png",
    ᐃᐃᐃⲆΔⵠⲆ: "img/lvl-leaderboard-out.png",
    ᐃΔⲆΔΔΔΔ: "img/lvl-leaderboard-in.png",
    ⵠΔⵠⵠΔᐃⲆ: "img/lvl-leaderboard-click.png",
    ⲆⵠΔⲆⵠⲆΔ: "img/kill-leaderboard-out.png",
    ⵠⲆⵠⲆⵠⲆᐃ: "img/kill-leaderboard-in.png",
    ᐃΔᐃⲆΔⵠΔ: "img/kill-leaderboard-click.png",
    ΔΔΔΔⵠᐃΔ: "img/all-leaderboard-out.png",
    ΔⲆΔΔᐃⲆΔ: "img/all-leaderboard-in.png",
    ⲆⵠⵠᐃᐃⵠⲆ: "img/all-leaderboard-click.png",
    ⲆⵠⲆⵠⲆⲆⵠ: "img/today-leaderboard-out.png",
    ⲆⵠΔᐃᐃΔΔ: "img/today-leaderboard-in.png",
    ᐃᐃΔᐃⲆᐃᐃ: "img/today-leaderboard-click.png",
    ᐃⵠΔⵠⲆᐃΔ: "img/week-leaderboard-out.png",
    ⵠΔⵠΔⲆⵠⲆ: "img/week-leaderboard-in.png",
    ⲆⲆΔⲆΔᐃΔ: "img/week-leaderboard-click.png",
    Ⲇⵠᐃᐃⵠⵠᐃ: "img/season1-out.png",
    ⵠΔⲆΔᐃⲆΔ: "img/season1-in.png",
    ΔΔᐃᐃΔⲆΔ: "img/season1-click.png",
    ΔⲆΔᐃⵠⵠᐃ: "img/season2-out.png",
    ⲆΔᐃΔⵠⵠΔ: "img/season2-in.png",
    ᐃⵠΔΔⲆᐃⲆ: "img/season2-click.png",
    ᐃⲆⵠᐃⲆⲆⲆ: "img/season3-out.png",
    ᐃⲆⲆᐃⲆᐃⵠ: "img/season3-in.png",
    ΔΔᐃⲆⵠᐃⲆ: "img/season3-click.png",
    ᐃᐃⲆᐃⲆⵠⲆ: "img/season4-out.png",
    ⵠᐃᐃΔᐃᐃⲆ: "img/season4-in.png",
    ᐃΔΔⵠᐃⲆᐃ: "img/season4-click.png",
    ⵠⲆⲆⲆΔΔᐃ: "img/season5-out.png",
    ⲆⲆⲆᐃΔⵠⵠ: "img/season5-in.png",
    ⵠⲆᐃΔΔᐃⵠ: "img/season5-click.png",
    ΔⲆⵠⵠⵠⵠⵠ: "img/season6-out.png",
    ΔⲆⵠΔⵠⵠΔ: "img/season6-in.png",
    Δᐃᐃᐃⵠⵠᐃ: "img/season6-click.png",
    ΔᐃᐃΔΔⲆᐃ: "img/total-lead-out.png",
    ΔΔΔᐃΔΔⲆ: "img/total-lead-in.png",
    ⲆⵠΔⲆᐃᐃⲆ: "img/total-lead-click.png",
    ᐃᐃΔᐃᐃΔᐃ: "img/normal-lead-out.png",
    ⵠⵠΔΔⲆΔΔ: "img/normal-lead-in.png",
    ᐃⲆᐃⵠΔΔⵠ: "img/normal-lead-click.png",
    ᐃΔΔᐃΔⵠΔ: "img/forest-lead-out.png",
    ⵠΔⲆⲆⲆⵠⲆ: "img/forest-lead-in.png",
    ᐃⵠⲆᐃⲆᐃⵠ: "img/forest-lead-click.png",
    ⵠᐃᐃᐃⲆΔⵠ: "img/vampire-lead-out.png",
    ⲆΔΔΔⲆΔᐃ: "img/vampire-lead-in.png",
    ΔᐃⲆⲆⲆⲆⵠ: "img/vampire-lead-click.png",
    ⲆⵠΔⵠⲆᐃΔ: "img/zombie-lead-out.png",
    ΔⲆᐃΔᐃΔⲆ: "img/zombie-lead-in.png",
    ⵠΔΔⵠⲆⵠⵠ: "img/zombie-lead-click.png",
    ⲆⲆⵠᐃⲆⲆᐃ: "img/day-level5.png",
    ⲆⵠΔⵠⵠⵠᐃ: "img/night-level5.png",
    ⲆⲆΔⵠⲆΔᐃ: "img/day-level10.png",
    ᐃⵠⵠᐃᐃⲆΔ: "img/night-level10.png",
    ⲆᐃΔᐃΔⲆⵠ: "img/day-level15.png",
    ⲆⲆᐃⲆⵠᐃⵠ: "img/night-level15.png",
    ΔⲆⵠᐃΔⵠⲆ: "img/day-level20.png",
    ⲆᐃᐃΔⵠⵠⲆ: "img/night-level20.png",
    ⲆΔᐃⵠⵠΔᐃ: "img/day-level25.png",
    ᐃΔⵠᐃⵠⲆⵠ: "img/night-level25.png",
    ⵠⲆⲆᐃΔᐃΔ: "img/day-level30.png",
    ΔⵠⵠΔᐃⵠΔ: "img/night-level30.png",
    ΔⲆᐃᐃⵠΔⲆ: "img/day-level35.png",
    ΔⵠΔᐃΔᐃᐃ: "img/night-level35.png",
    ΔᐃⲆⲆⲆⵠᐃ: "img/day-level40.png",
    ᐃⵠⵠΔⲆΔΔ: "img/night-level40.png",
    ⵠⵠⲆⵠᐃΔⲆ: "img/day-level45.png",
    ⲆⲆⵠᐃⲆᐃᐃ: "img/night-level45.png",
    ΔⵠⵠⲆΔΔⵠ: "img/day-level50.png",
    ⲆⲆᐃⵠⵠⲆⲆ: "img/night-level50.png",
    ᐃᐃΔⲆΔⵠⵠ: "img/day-level55.png",
    ΔᐃΔᐃⲆΔᐃ: "img/night-level55.png",
    ΔᐃⲆΔᐃᐃⵠ: "img/day-level60.png",
    ΔᐃⵠᐃⵠΔⵠ: "img/night-level60.png",
    ᐃΔⲆᐃᐃΔⵠ: "img/day-skin-devast0.png",
    Ⲇᐃⵠⵠⵠⵠᐃ: "img/night-skin-devast0.png",
    ⵠΔⵠᐃᐃⵠΔ: "img/day-hand-devaster.png",
    ⵠᐃⵠᐃⲆΔⲆ: "img/night-hand-devaster.png",
    ⲆΔΔⲆΔΔᐃ: "img/day-skin-star0.png",
    ᐃᐃⲆΔᐃΔΔ: "img/night-skin-star0.png",
    ΔᐃⲆⲆᐃⵠⵠ: "img/day-hand-star0.png",
    ΔΔⵠⲆⲆᐃᐃ: "img/night-hand-star0.png",
    ⵠΔⵠᐃⵠⲆᐃ: "img/day-vampire.png",
    ᐃⲆᐃⵠⵠᐃⲆ: "img/night-vampire.png",
    ΔⵠⲆⲆⵠΔΔ: "img/day-hand-vampire.png",
    ⵠΔⵠⵠᐃⵠᐃ: "img/night-hand-vampire.png",
    ΔΔⲆⲆⵠΔᐃ: "img/day-zombie.png",
    ΔΔⵠⵠᐃΔᐃ: "img/night-zombie.png",
    ΔⵠⵠⲆⵠⵠⵠ: "img/day-hand-zombie.png",
    ΔⵠΔⲆᐃⲆΔ: "img/night-hand-zombie.png",
    ⲆⲆⵠΔΔⵠᐃ: "img/day-skin113.png",
    ΔΔΔᐃⲆⲆΔ: "img/night-skin113.png",
    ΔⵠΔⲆⲆᐃⵠ: "img/day-hand-skin113.png",
    ⲆΔᐃΔⵠⲆⵠ: "img/night-hand-skin113.png",
    ⵠⲆᐃᐃᐃᐃⵠ: "img/day-skin0.png",
    ᐃⲆⲆⵠⵠᐃΔ: "img/night-skin0.png",
    ⲆⵠⵠᐃΔᐃΔ: "img/day-skin1.png",
    ⵠⵠΔⲆⲆⲆⲆ: "img/night-skin1.png",
    ΔⲆⲆⲆⲆⵠΔ: "img/day-skin2.png",
    ⵠΔᐃⵠΔᐃⲆ: "img/night-skin2.png",
    ⵠⲆΔⵠⵠᐃⵠ: "img/day-skin3.png",
    ΔⵠⲆⲆⵠⲆΔ: "img/night-skin3.png",
    ⲆᐃⵠᐃⲆᐃΔ: "img/day-skin4.png",
    ΔᐃⲆΔᐃⲆΔ: "img/night-skin4.png",
    ⲆΔⲆⲆⲆⵠΔ: "img/day-skin5.png",
    ⲆⵠΔΔⵠⵠᐃ: "img/night-skin5.png",
    ᐃⲆⲆΔΔᐃⲆ: "img/day-skin6.png",
    ⲆΔΔᐃⲆⲆⵠ: "img/night-skin6.png",
    ᐃΔᐃΔⲆⲆⲆ: "img/day-skin7.png",
    ⲆⲆⵠⲆⲆᐃⲆ: "img/night-skin7.png",
    ⵠᐃᐃᐃⲆΔⲆ: "img/day-skin8.png",
    ΔΔⵠⲆⲆᐃΔ: "img/night-skin8.png",
    ΔᐃᐃⲆΔᐃⲆ: "img/day-skin9.png",
    ΔᐃᐃΔⲆΔᐃ: "img/night-skin9.png",
    ⲆᐃⲆΔΔᐃΔ: "img/day-skin10.png",
    ⲆΔⲆⲆΔⵠΔ: "img/night-skin10.png",
    ᐃΔⵠᐃᐃⲆⲆ: "img/day-skin11.png",
    ⵠΔᐃΔΔⲆⵠ: "img/night-skin11.png",
    ᐃᐃⲆⵠᐃⵠⲆ: "img/day-skin12.png",
    ΔΔᐃΔⵠⲆΔ: "img/night-skin12.png",
    ⵠᐃΔΔΔⲆᐃ: "img/day-skin13.png",
    ⲆΔⵠᐃᐃⵠΔ: "img/night-skin13.png",
    ΔᐃᐃΔⲆΔΔ: "img/day-skin14.png",
    ⲆΔᐃΔΔⲆⲆ: "img/night-skin14.png",
    ᐃⲆᐃΔⲆⲆᐃ: "img/day-skin15.png",
    ΔᐃΔΔᐃⲆᐃ: "img/night-skin15.png",
    ΔᐃᐃⲆⵠⵠⵠ: "img/day-skin16.png",
    ᐃⲆΔΔᐃⲆⲆ: "img/night-skin16.png",
    ⵠᐃⵠⲆⵠᐃΔ: "img/day-skin17.png",
    ⵠⵠⲆΔⲆⵠⲆ: "img/night-skin17.png",
    ⲆᐃⵠⲆᐃⲆⵠ: "img/day-skin18.png",
    ᐃⵠᐃⵠⲆⲆΔ: "img/night-skin18.png",
    ⲆᐃᐃⵠⲆⵠⲆ: "img/day-skin19.png",
    ⵠⲆᐃⲆΔⲆⵠ: "img/night-skin19.png",
    ⵠⲆⵠᐃᐃᐃᐃ: "img/day-skin20.png",
    ⵠΔⲆⲆⲆⲆⵠ: "img/night-skin20.png",
    ΔⵠΔΔⲆⲆᐃ: "img/day-skin21.png",
    ⲆⲆΔⵠⵠⲆᐃ: "img/night-skin21.png",
    ⵠⲆⲆᐃΔᐃⲆ: "img/day-skin22.png",
    ΔΔⲆⲆΔᐃⵠ: "img/night-skin22.png",
    ⵠⵠᐃⲆᐃᐃΔ: "img/day-skin23.png",
    ⲆᐃΔΔⲆⵠⵠ: "img/night-skin23.png",
    ⲆᐃⵠⵠΔⵠᐃ: "img/day-skin24.png",
    ⵠⲆΔⲆᐃΔᐃ: "img/night-skin24.png",
    ⲆΔⵠΔⵠΔᐃ: "img/day-skin25.png",
    ⲆⲆΔⲆΔⵠⲆ: "img/night-skin25.png",
    ΔΔᐃⵠΔΔⲆ: "img/day-skin26.png",
    ΔⵠΔⵠⵠⵠⵠ: "img/night-skin26.png",
    ⵠᐃⲆⵠⲆΔⵠ: "img/day-skin27.png",
    ⲆⵠⲆⵠΔⲆⵠ: "img/night-skin27.png",
    ⲆΔⲆᐃΔΔᐃ: "img/day-skin28.png",
    ⲆⲆⵠᐃΔΔΔ: "img/night-skin28.png",
    ΔΔⵠΔⵠᐃᐃ: "img/day-skin29.png",
    ⵠΔΔⲆⲆⲆⲆ: "img/night-skin29.png",
    ⵠᐃⲆⲆⲆΔⵠ: "img/day-skin30.png",
    ⵠΔⲆᐃⵠᐃΔ: "img/night-skin30.png",
    ᐃΔⲆᐃⵠᐃⲆ: "img/day-skin31.png",
    ⲆⲆⲆᐃⵠᐃΔ: "img/night-skin31.png",
    ⲆᐃΔᐃⲆⵠⵠ: "img/day-skin32.png",
    ⲆΔⲆᐃΔⲆⲆ: "img/night-skin32.png",
    ΔⲆΔⲆᐃⲆΔ: "img/day-skin33.png",
    ⵠⵠᐃΔⵠΔᐃ: "img/night-skin33.png",
    ⲆΔⲆΔΔⵠⲆ: "img/day-skin34.png",
    ⵠᐃΔᐃⵠΔⵠ: "img/night-skin34.png",
    ⵠΔΔᐃⵠᐃᐃ: "img/day-skin35.png",
    ΔⲆΔΔΔΔΔ: "img/night-skin35.png",
    ΔⲆᐃᐃⲆΔⵠ: "img/day-skin36.png",
    ⵠᐃΔᐃⵠⲆΔ: "img/night-skin36.png",
    ⲆⲆᐃⲆΔᐃⲆ: "img/day-skin37.png",
    ⵠᐃΔᐃΔⵠΔ: "img/night-skin37.png",
    ⲆᐃⲆⵠΔᐃΔ: "img/day-skin38.png",
    ⲆⵠⵠᐃⲆΔⲆ: "img/night-skin38.png",
    ⵠΔⲆⲆᐃᐃᐃ: "img/day-skin39.png",
    ⵠΔⵠᐃᐃᐃΔ: "img/night-skin39.png",
    ΔΔᐃᐃΔⲆᐃ: "img/day-skin40.png",
    ΔΔΔⵠᐃⵠⵠ: "img/night-skin40.png",
    ⵠⵠⵠΔΔᐃⲆ: "img/day-skin41.png",
    ⵠⲆⲆΔΔⵠⲆ: "img/night-skin41.png",
    ⵠΔΔᐃⲆΔᐃ: "img/day-skin42.png",
    ΔⵠⵠⵠΔΔⵠ: "img/night-skin42.png",
    ΔⲆⲆⲆᐃⵠᐃ: "img/day-skin43.png",
    ⲆⲆⲆΔⲆⵠⲆ: "img/night-skin43.png",
    ⲆⵠⲆⵠΔᐃⲆ: "img/day-skin44.png",
    ⲆⲆⲆⵠⵠⵠⲆ: "img/night-skin44.png",
    ᐃΔΔⲆⲆⲆᐃ: "img/day-skin45.png",
    ⲆΔⲆⵠᐃⲆΔ: "img/night-skin45.png",
    ᐃⲆⵠⲆΔⲆᐃ: "img/day-skin46.png",
    ΔΔⵠⲆⵠⲆⵠ: "img/night-skin46.png",
    ᐃⲆᐃⵠᐃⵠᐃ: "img/day-skin47.png",
    ΔⲆᐃⵠⲆᐃⵠ: "img/night-skin47.png",
    ᐃᐃΔᐃⲆⲆᐃ: "img/day-skin48.png",
    ᐃΔΔⲆΔᐃⲆ: "img/night-skin48.png",
    ΔᐃⲆⲆⲆⲆⲆ: "img/day-skin49.png",
    ᐃⵠⵠⵠⵠⵠΔ: "img/night-skin49.png",
    ΔⲆΔᐃΔⵠΔ: "img/day-skin50.png",
    ᐃΔⵠⲆⲆⲆⲆ: "img/night-skin50.png",
    ᐃᐃΔⲆⵠᐃⵠ: "img/day-skin51.png",
    ΔᐃᐃⵠⵠⲆΔ: "img/night-skin51.png",
    ⲆᐃᐃᐃΔᐃⲆ: "img/day-skin52.png",
    ᐃᐃΔⲆⵠᐃⲆ: "img/night-skin52.png",
    ⵠⵠᐃΔᐃⲆΔ: "img/day-skin53.png",
    ΔΔⲆΔᐃΔⲆ: "img/night-skin53.png",
    ᐃΔⵠⵠⵠΔⵠ: "img/day-skin54.png",
    ⲆⵠΔᐃᐃⵠⲆ: "img/night-skin54.png",
    ᐃⵠΔᐃΔⲆⵠ: "img/day-skin55.png",
    ΔⲆΔΔⲆΔⵠ: "img/night-skin55.png",
    ΔⲆΔΔᐃᐃⲆ: "img/day-skin56.png",
    ᐃⲆⲆⲆᐃⵠᐃ: "img/night-skin56.png",
    ᐃⲆᐃⲆⵠΔⲆ: "img/day-skin57.png",
    ⲆᐃᐃⵠᐃᐃΔ: "img/night-skin57.png",
    ΔⲆⲆᐃᐃⲆⲆ: "img/day-skin58.png",
    ⵠⵠⵠᐃⲆⵠⲆ: "img/night-skin58.png",
    ΔΔⵠⲆᐃᐃⵠ: "img/day-skin59.png",
    ᐃᐃⵠΔⲆⵠΔ: "img/night-skin59.png",
    ᐃⵠΔⵠᐃᐃᐃ: "img/day-skin60.png",
    ⲆⵠΔΔΔΔⵠ: "img/night-skin60.png",
    ΔᐃΔᐃΔⲆΔ: "img/day-skin61.png",
    ⲆⲆΔⵠᐃΔΔ: "img/night-skin61.png",
    ᐃΔⲆⲆᐃⲆᐃ: "img/day-skin62.png",
    ⲆⲆⵠΔⲆⲆᐃ: "img/night-skin62.png",
    ⵠⵠⵠⵠᐃⲆᐃ: "img/day-skin63.png",
    ⲆⲆᐃΔⲆⲆⲆ: "img/night-skin63.png",
    ⲆⵠΔⲆⲆᐃᐃ: "img/day-skin64.png",
    ⲆΔⲆⲆᐃΔᐃ: "img/night-skin64.png",
    ᐃⵠᐃⵠⵠⲆⲆ: "img/day-skin65.png",
    ⵠᐃᐃⲆΔΔⵠ: "img/night-skin65.png",
    ⵠⵠΔⲆΔⵠⵠ: "img/day-skin66.png",
    ⵠⵠⲆⵠᐃᐃᐃ: "img/night-skin66.png",
    ⲆΔⵠⵠⲆᐃΔ: "img/day-skin67.png",
    ΔⲆᐃΔⵠⵠⵠ: "img/night-skin67.png",
    ΔΔⲆᐃⵠᐃΔ: "img/day-skin68.png",
    ⲆⲆⵠⲆΔΔⲆ: "img/night-skin68.png",
    ΔΔΔⵠΔΔᐃ: "img/day-skin69.png",
    ᐃⲆΔᐃⲆᐃᐃ: "img/night-skin69.png",
    ⵠⲆⵠΔΔⲆⲆ: "img/day-skin70.png",
    ⲆΔᐃΔⵠΔⲆ: "img/night-skin70.png",
    ⵠⵠⲆⲆⲆⲆᐃ: "img/day-skin71.png",
    ᐃⲆⲆΔΔⵠⲆ: "img/night-skin71.png",
    ΔⲆⵠΔᐃⲆᐃ: "img/day-skin72.png",
    ⲆᐃⲆⵠΔⵠⵠ: "img/night-skin72.png",
    ᐃᐃᐃᐃⵠⲆⵠ: "img/day-skin73.png",
    ⲆⵠΔᐃⵠᐃⵠ: "img/night-skin73.png",
    ⲆΔᐃⵠⵠᐃⵠ: "img/day-skin74.png",
    ⲆΔⵠⵠⵠΔᐃ: "img/night-skin74.png",
    ⲆⲆᐃⲆᐃⵠⵠ: "img/day-skin75.png",
    ΔΔⲆⲆᐃΔᐃ: "img/night-skin75.png",
    ΔΔᐃⲆᐃᐃΔ: "img/day-skin76.png",
    ⲆⵠⲆⵠᐃⲆⲆ: "img/night-skin76.png",
    ⵠⵠⵠⲆⲆⵠⵠ: "img/day-skin77.png",
    ᐃᐃΔⵠᐃᐃⲆ: "img/night-skin77.png",
    ᐃⵠⵠᐃΔⵠᐃ: "img/day-skin78.png",
    ⲆᐃᐃⲆΔⲆΔ: "img/night-skin78.png",
    ⲆΔᐃⵠΔⵠᐃ: "img/day-skin79.png",
    ⵠᐃⲆΔΔⲆΔ: "img/night-skin79.png",
    ⲆⲆᐃᐃⲆⲆⵠ: "img/day-skin80.png",
    ΔᐃΔᐃΔᐃᐃ: "img/night-skin80.png",
    ⵠᐃⵠᐃΔᐃᐃ: "img/day-skin81.png",
    ⲆⲆⲆⲆⲆⵠΔ: "img/night-skin81.png",
    ᐃᐃΔⲆⵠΔⲆ: "img/day-skin82.png",
    ⵠⵠⲆⲆⲆⲆⵠ: "img/night-skin82.png",
    ⲆⵠΔΔⲆⲆⵠ: "img/day-skin83.png",
    ᐃΔⲆΔΔⵠᐃ: "img/night-skin83.png",
    ᐃⵠΔⲆᐃᐃⲆ: "img/day-skin84.png",
    ᐃⲆᐃΔᐃⲆⵠ: "img/night-skin84.png",
    ᐃᐃⲆᐃᐃᐃᐃ: "img/day-skin85.png",
    ⲆⵠΔᐃⲆⲆⵠ: "img/night-skin85.png",
    ΔΔᐃΔⵠΔⲆ: "img/day-skin86.png",
    ⵠⲆⵠⵠΔᐃᐃ: "img/night-skin86.png",
    ⵠΔᐃⲆⵠⵠⵠ: "img/day-skin87.png",
    ⲆΔᐃⵠⲆⵠⵠ: "img/night-skin87.png",
    ⵠⵠⲆⲆⲆⵠⲆ: "img/day-skin88.png",
    ᐃᐃⵠΔⵠⲆⵠ: "img/night-skin88.png",
    ᐃΔΔΔⵠⵠᐃ: "img/day-skin89.png",
    ⵠΔΔⲆⲆΔⲆ: "img/night-skin89.png",
    ⲆΔᐃᐃⵠᐃⲆ: "img/day-skin90.png",
    ⲆⲆⲆⲆΔΔΔ: "img/night-skin90.png",
    ᐃⲆᐃΔⵠᐃΔ: "img/day-skin91.png",
    ⵠⲆⲆᐃⵠⲆⵠ: "img/night-skin91.png",
    ⲆᐃⲆᐃⵠⵠΔ: "img/day-skin92.png",
    ⲆⵠⵠΔᐃᐃᐃ: "img/night-skin92.png",
    ᐃᐃΔΔⵠⲆⵠ: "img/day-skin93.png",
    ΔⲆᐃⵠΔᐃᐃ: "img/night-skin93.png",
    ΔⵠᐃⲆⲆⲆΔ: "img/day-skin94.png",
    ΔᐃΔᐃⲆⵠΔ: "img/night-skin94.png",
    ΔΔⲆᐃⲆⵠⵠ: "img/day-skin95.png",
    ⲆᐃⵠᐃⲆᐃⵠ: "img/night-skin95.png",
    ᐃⵠⲆΔᐃⵠΔ: "img/day-skin96.png",
    ΔⵠⲆⵠΔΔⵠ: "img/night-skin96.png",
    ⵠⲆᐃⵠᐃᐃⵠ: "img/day-skin97.png",
    ⲆⲆⵠⲆⵠⲆΔ: "img/night-skin97.png",
    ⲆᐃⲆⵠΔΔⵠ: "img/day-skin98.png",
    ⲆⲆᐃⵠⵠᐃΔ: "img/night-skin98.png",
    ΔΔᐃⲆΔᐃᐃ: "img/day-skin99.png",
    ᐃⲆⵠΔᐃⲆᐃ: "img/night-skin99.png",
    ΔΔⵠᐃⲆΔᐃ: "img/day-skin100.png",
    ⵠⵠⲆⵠⲆⵠᐃ: "img/night-skin100.png",
    ΔᐃᐃⵠΔⲆᐃ: "img/day-skin101.png",
    ᐃⵠⲆⵠⵠᐃΔ: "img/night-skin101.png",
    ΔᐃᐃⲆⵠⲆⲆ: "img/day-skin102.png",
    ⲆⲆⵠⵠⵠⲆᐃ: "img/night-skin102.png",
    ⵠᐃΔⵠᐃⲆⵠ: "img/day-skin103.png",
    ⲆⵠᐃⲆᐃⲆⵠ: "img/night-skin103.png",
    ⲆᐃⲆⲆΔᐃⲆ: "img/day-skin104.png",
    ⵠΔᐃᐃᐃⲆⵠ: "img/night-skin104.png",
    ⲆⲆᐃΔΔⲆᐃ: "img/day-skin105.png",
    ᐃⲆⲆΔᐃⲆⲆ: "img/night-skin105.png",
    ⵠⲆᐃⵠΔⲆⲆ: "img/day-skin106.png",
    ΔᐃⲆΔⵠⵠᐃ: "img/night-skin106.png",
    ᐃᐃⲆⲆⵠⲆⵠ: "img/day-skin107.png",
    ⵠⵠΔΔⲆⲆⵠ: "img/night-skin107.png",
    Δᐃⵠᐃⵠⵠᐃ: "img/day-skin108.png",
    ᐃⵠⵠΔⵠⲆᐃ: "img/night-skin108.png",
    ⲆΔⲆΔⵠⲆⲆ: "img/day-skin109.png",
    ⲆⵠⲆΔⵠⲆⵠ: "img/night-skin109.png",
    ΔⲆⲆⲆᐃΔⵠ: "img/day-skin110.png",
    ᐃⲆⲆⲆᐃᐃᐃ: "img/night-skin110.png",
    ΔΔΔⵠᐃΔΔ: "img/day-skin111.png",
    ᐃΔⲆⵠⵠᐃΔ: "img/night-skin111.png",
    ⵠⵠⵠⵠΔΔΔ: "img/day-skin112.png",
    ΔΔΔⲆᐃⲆⵠ: "img/night-skin112.png",
    ΔᐃⵠⲆᐃΔΔⵠΔ: "img/day-skin113.png",
    ⵠⲆⲆⵠⵠⲆⵠᐃⲆ: "img/night-skin113.png",
    ᐃᐃⵠⲆᐃⵠⵠ: "img/day-skin114.png",
    ⲆᐃⲆᐃⵠⵠⵠ: "img/night-skin114.png",
    ΔⲆᐃⲆᐃΔΔ: "img/day-skin115.png",
    ⲆⲆⵠΔΔⲆᐃ: "img/night-skin115.png",
    ᐃⵠⲆΔⲆΔᐃ: "img/day-skin116.png",
    ᐃᐃⲆΔᐃⲆⵠ: "img/night-skin116.png",
    ᐃᐃⵠᐃΔΔⲆ: "img/day-skin117.png",
    ⵠᐃⵠⵠⵠⵠᐃ: "img/night-skin117.png",
    ⵠⵠⵠⵠΔᐃⵠ: "img/day-skin118.png",
    ΔΔⲆᐃⵠΔⲆ: "img/night-skin118.png",
    ⲆᐃⵠⲆⵠΔᐃ: "img/day-skin119.png",
    ⲆᐃⵠⲆᐃᐃΔ: "img/night-skin119.png",
    ⲆⵠᐃᐃⵠΔᐃ: "img/day-skin120.png",
    ⲆⲆᐃⲆᐃⵠᐃ: "img/night-skin120.png",
    ⲆⲆΔᐃΔⲆᐃ: "img/day-skin121.png",
    ⲆⲆⲆⲆⲆᐃᐃ: "img/night-skin121.png",
    ᐃᐃΔⲆⲆᐃΔ: "img/day-skin122.png",
    ᐃⵠⲆᐃⲆᐃⲆ: "img/night-skin122.png",
    ᐃᐃΔⲆⵠⵠⵠ: "img/day-skin123.png",
    ΔⵠᐃⲆΔᐃⲆ: "img/night-skin123.png",
    ᐃᐃᐃᐃΔⵠᐃ: "img/day-skin124.png",
    ⲆⲆⲆⲆΔΔⵠ: "img/night-skin124.png",
    ⲆⲆᐃⲆⲆⲆᐃ: "img/day-skin125.png",
    ⲆⲆᐃⲆⵠⲆⲆ: "img/night-skin125.png",
    ΔⲆⵠΔΔΔᐃ: "img/day-skin126.png",
    ΔⵠΔⲆⵠⵠⲆ: "img/night-skin126.png",
    ⲆⵠⲆΔⵠⲆᐃ: "img/day-skin127.png",
    ᐃⵠᐃⵠᐃⲆᐃ: "img/night-skin127.png",
    ⵠᐃⵠᐃⵠⵠᐃ: "img/day-skin128.png",
    ᐃΔᐃⵠᐃΔⵠ: "img/night-skin128.png",
    ΔΔᐃⵠⵠⲆᐃ: "img/day-skin129.png",
    ᐃⲆⵠⲆⲆⵠΔ: "img/night-skin129.png",
    ⵠΔᐃΔᐃⵠⵠ: "img/day-skin130-1.png",
    ⵠⵠⲆⲆⵠΔΔ: "img/night-skin130-1.png",
    ΔΔⲆΔᐃΔᐃ: "img/day-skin131.png",
    ⵠΔⵠⵠΔⲆⲆ: "img/night-skin131.png",
    ΔᐃΔΔⵠᐃⵠ: "img/day-skin132.png",
    ΔⵠΔⵠΔⲆΔ: "img/night-skin132.png",
    ⲆᐃᐃᐃᐃᐃΔ: "img/day-skin133.png",
    ΔᐃΔΔⲆΔⲆ: "img/night-skin133.png",
    ⲆᐃⲆⲆⲆΔⲆ: "img/day-skin134.png",
    ΔΔⵠⵠⵠⲆᐃ: "img/night-skin134.png",
    ⵠΔⲆΔⲆⵠⲆ: "img/day-skin135.png",
    ⲆᐃⲆⵠⵠᐃⲆ: "img/night-skin135.png",
    ᐃⵠⲆᐃⵠᐃⵠ: "img/day-skin136.png",
    ⲆᐃᐃⵠΔⲆΔ: "img/night-skin136.png",
    ᐃᐃⲆΔⲆⵠΔ: "img/day-skin137.png",
    ⵠΔΔⲆΔᐃᐃ: "img/night-skin137.png",
    ᐃⵠΔⵠⲆⵠᐃ: "img/day-skin138.png",
    ⵠⲆΔⵠᐃⵠⵠ: "img/night-skin138.png",
    ⲆⲆΔⵠⲆⵠⵠ: "img/day-skin139.png",
    ᐃⲆΔᐃᐃᐃⲆ: "img/night-skin139.png",
    ⲆᐃΔⵠᐃΔΔ: "img/day-skin140.png",
    ⵠΔⲆⲆⵠⲆᐃ: "img/night-skin140.png",
    ⵠⵠⵠᐃⲆᐃⵠ: "img/day-skin141.png",
    ⲆᐃⲆⵠΔⲆᐃ: "img/night-skin141.png",
    ᐃᐃᐃⲆⵠⲆΔ: "img/day-skin142.png",
    ⲆⵠᐃⲆⵠΔⵠ: "img/night-skin142.png",
    ⲆΔᐃΔᐃⵠᐃ: "img/day-skin143.png",
    ⲆΔⲆᐃᐃⵠⲆ: "img/night-skin143.png",
    ⲆᐃⲆΔⵠⵠΔ: "img/day-skin144.png",
    ΔᐃΔᐃΔⲆᐃ: "img/night-skin144.png",
    ᐃⲆⲆΔⲆⲆΔ: "img/day-skin145.png",
    ᐃⵠⵠΔᐃⵠΔ: "img/night-skin145.png",
    ⵠⵠⵠⵠΔⵠᐃ: "img/day-skin146.png",
    ⲆⲆⲆⵠΔΔⵠ: "img/night-skin146.png",
    ᐃⲆⵠΔᐃⵠᐃ: "img/day-skin147.png",
    ΔⵠⲆΔⵠⵠᐃ: "img/night-skin147.png",
    ᐃⵠⲆⵠᐃΔⵠ: "img/day-skin148.png",
    ⲆⲆΔⵠᐃΔⵠ: "img/night-skin148.png",
    ᐃⵠⲆΔᐃⲆⵠ: "img/day-skin149.png",
    ᐃⵠⲆⵠⵠⵠΔ: "img/night-skin149.png",
    ⵠⲆΔⵠⵠΔⵠ: "img/day-skin150.png",
    ⵠᐃΔΔᐃᐃⲆ: "img/night-skin150.png",
    ᐃᐃⲆⵠⵠᐃⵠ: "img/day-skin151.png",
    ᐃᐃⲆΔΔⲆᐃ: "img/night-skin151.png",
    ⲆᐃΔΔⵠⵠᐃ: "img/day-skin152.png",
    ᐃⵠᐃⲆᐃⵠⲆ: "img/night-skin152.png",
    ⵠⵠⵠᐃᐃᐃⵠ: "img/day-skin153.png",
    ⲆⲆⵠΔⵠᐃⲆ: "img/night-skin153.png",
    ΔΔᐃⲆⵠᐃⵠ: "img/day-skin154.png",
    ΔⲆΔⲆᐃΔⵠ: "img/night-skin154.png",
    ⲆΔⲆΔⵠⵠΔ: "img/day-skin155.png",
    ᐃⲆᐃᐃΔⵠᐃ: "img/night-skin155.png",
    ᐃᐃⵠⲆᐃΔⲆ: "img/day-skin156.png",
    ΔΔⵠΔΔⲆΔ: "img/night-skin156.png",
    ⲆⵠΔⲆΔⵠⵠ: "img/day-skin157.png",
    ⵠᐃΔᐃᐃᐃⲆ: "img/night-skin157.png",
    ⵠΔΔⲆⵠⵠⲆ: "img/day-skin158.png",
    ᐃⲆⲆⵠΔΔᐃ: "img/night-skin158.png",
    ⵠᐃᐃᐃⵠᐃⲆ: "img/day-skin159.png",
    ⲆᐃΔⵠⵠⲆΔ: "img/night-skin159.png",
    ⲆᐃΔΔⲆᐃⵠ: "img/day-skin160.png",
    ⲆᐃⵠΔᐃⲆⵠ: "img/night-skin160.png",
    ᐃⲆᐃᐃⲆⲆᐃ: "img/day-skin161.png",
    ᐃΔΔⲆⵠⲆⲆ: "img/night-skin161.png",
    ⵠⵠⲆΔⲆᐃᐃ: "img/day-skin162.png",
    ⲆⲆΔΔΔΔⲆ: "img/night-skin162.png",
    ⵠᐃⵠΔⲆΔΔ: "img/day-skin163.png",
    ⵠΔᐃΔⵠᐃΔ: "img/night-skin163.png",
    ᐃⵠΔΔⲆᐃⵠ: "img/day-skin164.png",
    ΔⲆᐃⲆⲆⵠᐃ: "img/night-skin164.png",
    ⲆⲆⲆⵠᐃᐃⵠ: "img/day-skin165.png",
    ᐃⲆⵠⲆΔⲆⵠ: "img/night-skin165.png",
    ⲆᐃⲆⲆⲆⲆⵠ: "img/day-skin166.png",
    ⲆⲆⵠΔΔⲆⲆ: "img/night-skin166.png",
    ΔⲆⲆᐃⲆᐃᐃ: "img/day-skin167.png",
    ᐃᐃⵠⲆⲆⲆⲆ: "img/night-skin167.png",
    ⲆᐃⲆⲆⵠⲆᐃ: "img/day-skin168.png",
    ΔᐃⲆⵠⵠΔⲆ: "img/night-skin168.png",
    ⵠΔⲆⲆⲆⲆᐃ: "img/day-skin169.png",
    ⵠⲆⵠᐃᐃⵠⲆ: "img/night-skin169.png",
    ⲆⵠᐃΔΔⲆⲆ: "img/day-skin170.png",
    ⲆΔΔᐃᐃⵠⵠ: "img/night-skin170.png",
    ΔᐃⵠⵠᐃⲆⵠ: "img/day-skin171.png",
    ΔᐃΔⲆⲆᐃᐃ: "img/night-skin171.png",
    ⲆⲆᐃΔⲆΔⵠ: "img/day-skin172.png",
    ⵠⲆⵠⵠⲆᐃΔ: "img/night-skin172.png",
    ᐃⲆᐃᐃΔⲆⵠ: "img/day-skin173.png",
    ⵠⲆᐃⵠΔⲆᐃ: "img/night-skin173.png",
    ᐃΔⲆⵠᐃⲆⲆ: "img/day-skin174.png",
    ⲆⲆᐃⵠⵠⵠⲆ: "img/night-skin174.png",
    ⵠΔΔΔⲆⲆⵠ: "img/day-skin175.png",
    ΔΔᐃⲆⵠⵠΔ: "img/night-skin175.png",
    ᐃⲆᐃⵠΔⲆΔ: "img/day-skin176.png",
    ᐃΔᐃⲆᐃᐃᐃ: "img/night-skin176.png",
    ᐃⲆⵠᐃⵠⲆⵠ: "img/day-skin177.png",
    ⵠΔⵠⵠⵠⵠΔ: "img/night-skin177.png",
    ⲆⵠΔⵠⵠⵠⵠ: "img/day-skin178.png",
    ⵠΔᐃⵠᐃⵠⵠ: "img/night-skin178.png",
    ⲆⵠⵠᐃⵠΔᐃ: "img/day-skin179.png",
    ᐃΔⵠⲆᐃΔᐃ: "img/night-skin179.png",
    ⵠⵠⵠᐃⵠⵠⲆ: "img/day-skin180.png",
    ᐃⲆⲆΔᐃΔⲆ: "img/night-skin180.png",
    ᐃⵠΔΔᐃᐃᐃ: "img/day-skin181.png",
    ⵠⲆⲆⲆⵠᐃΔ: "img/night-skin181.png",
    ΔΔⲆⲆΔᐃΔ: "img/day-skin182.png",
    ⲆⲆⲆⵠᐃⲆⲆ: "img/night-skin182.png",
    ΔᐃᐃᐃⲆⲆᐃ: "img/day-skin183.png",
    ΔΔⵠⲆⵠⲆΔ: "img/night-skin183.png",
    ΔⵠΔⵠⲆⵠⵠ: "img/day-skin184.png",
    ⵠⵠⵠΔᐃΔᐃ: "img/night-skin184.png",
    ᐃΔΔΔⵠⲆᐃ: "img/day-skin185.png",
    ᐃᐃⲆᐃⲆⵠⵠ: "img/night-skin185.png",
    ᐃᐃⵠᐃᐃⵠᐃ: "img/day-skin186.png",
    ⲆᐃΔⵠΔΔⵠ: "img/night-skin186.png",
    ᐃⵠΔⲆΔΔΔ: "img/day-skin187.png",
    ⲆⲆᐃⲆΔⲆⲆ: "img/night-skin187.png",
    ΔⲆⲆⲆⲆⵠⲆ: "img/day-skin188.png",
    ⵠⵠⲆⵠΔΔΔ: "img/night-skin188.png",
    ⵠΔⲆⲆΔⵠⵠ: "img/day-skin189.png",
    ⵠᐃᐃⲆⲆⵠⵠ: "img/night-skin189.png",
    ⵠᐃᐃⵠΔⵠⵠ: "img/day-skin190.png",
    ⵠᐃΔⲆΔᐃΔ: "img/night-skin190.png",
    ⵠΔΔⲆΔΔᐃ: "img/day-skin191.png",
    ⲆΔⲆⲆⵠⲆⲆ: "img/night-skin191.png",
    ⵠΔⵠⲆΔⲆᐃ: "img/day-skin192.png",
    ΔⵠⵠⲆⵠᐃⵠ: "img/night-skin192.png",
    ⵠⲆᐃᐃᐃΔⵠ: "img/day-skin193.png",
    ⲆⵠΔⲆⵠᐃΔ: "img/night-skin193.png",
    ⲆΔΔⲆΔⵠⲆ: "img/day-skin194.png",
    ᐃⲆⵠΔΔᐃⲆ: "img/night-skin194.png",
    ΔⲆⵠΔⲆⵠⵠ: "img/day-skin195.png",
    ⲆⲆⲆΔⲆⲆΔ: "img/night-skin195.png",
    ΔΔΔⲆⵠⲆⲆ: "img/day-skin196.png",
    Ⲇⵠᐃⵠᐃᐃᐃ: "img/night-skin196.png",
    ᐃⵠΔΔΔⵠⲆ: "img/day-skin197.png",
    ΔⲆᐃΔⵠΔΔ: "img/night-skin197.png",
    ⲆⵠⵠΔⲆᐃⵠ: "img/day-skin198.png",
    ΔΔⲆΔΔᐃⵠ: "img/night-skin198.png",
    ΔⲆⵠᐃⵠⵠⵠ: "img/day-skin199.png",
    ⵠΔᐃΔⲆᐃⵠ: "img/night-skin199.png",
    ⵠⵠⵠᐃⵠᐃΔ: "img/day-skin200.png",
    ΔⵠⲆⵠΔΔΔ: "img/night-skin200.png",
    ᐃᐃᐃⲆΔᐃᐃ: "img/day-skin201.png",
    ΔᐃᐃⲆᐃⵠΔ: "img/night-skin201.png",
    ᐃⵠΔⵠΔⵠᐃ: "img/day-skin202.png",
    ΔΔΔΔⲆⵠⲆ: "img/night-skin202.png",
    ᐃΔᐃⵠΔⵠⵠ: "img/day-skin203.png",
    ⲆᐃᐃⵠΔΔᐃ: "img/night-skin203.png",
    ΔⵠΔᐃⲆⲆⲆ: "img/day-skin204.png",
    ⵠⲆⵠᐃΔⵠΔ: "img/night-skin204.png",
    ⵠΔⵠⲆⵠⲆᐃ: "img/day-skin205.png",
    ⲆᐃΔᐃΔⲆᐃ: "img/night-skin205.png",
    ᐃⲆᐃᐃᐃⲆΔ: "img/day-skin206.png",
    ⵠΔΔⵠⲆⲆᐃ: "img/night-skin206.png",
    ΔᐃⵠⲆⲆⵠⲆ: "img/day-skin207.png",
    ⵠⵠΔⲆⲆΔΔ: "img/night-skin207.png",
    ᐃⲆᐃⵠᐃᐃⵠ: "img/day-skin208.png",
    ΔΔⲆⲆΔⵠᐃ: "img/night-skin208.png",
    ΔΔΔΔⵠⵠᐃ: "img/day-skin209.png",
    ᐃⲆⵠⵠⲆᐃᐃ: "img/night-skin209.png",
    ᐃⲆⵠⲆΔΔᐃ: "img/day-skin210.png",
    ⲆⵠⲆᐃᐃⲆⵠ: "img/night-skin210.png",
    ⵠΔⵠΔⲆᐃⵠ: "img/day-skin211.png",
    ΔΔⵠⵠⵠⵠⵠ: "img/night-skin211.png",
    ΔⲆⵠᐃⲆΔⵠ: "img/day-skin212.png",
    ᐃΔΔⵠᐃᐃΔ: "img/night-skin212.png",
    ᐃⲆⵠΔᐃΔᐃ: "img/day-skin213.png",
    ⲆⵠΔⵠᐃⲆᐃ: "img/night-skin213.png",
    ⲆⵠᐃΔΔⵠⲆ: "img/day-skin214.png",
    ᐃⲆΔⵠΔᐃᐃ: "img/night-skin214.png",
    ⲆⵠᐃⲆⲆΔΔ: "img/day-hand-skin0.png",
    ⵠΔⲆᐃᐃⲆᐃ: "img/night-hand-skin0.png",
    ᐃᐃΔⵠⲆΔⵠ: "img/day-hand-skin1.png",
    ⵠⵠⲆⲆⵠⲆᐃ: "img/night-hand-skin1.png",
    ΔⵠⲆⵠⲆⲆΔ: "img/day-hand-skin2.png",
    ⵠⲆⲆⵠΔᐃᐃ: "img/night-hand-skin2.png",
    ΔᐃΔⲆΔⲆᐃ: "img/day-hand-skin3.png",
    ᐃⲆⲆΔᐃⲆΔ: "img/night-hand-skin3.png",
    ⲆⵠⲆⲆⵠⲆΔ: "img/day-hand-skin4.png",
    ΔΔⵠΔⵠⵠΔ: "img/night-hand-skin4.png",
    ⲆΔᐃΔᐃΔⵠ: "img/day-hand-skin5.png",
    ⲆΔⲆⲆᐃΔⲆ: "img/night-hand-skin5.png",
    ᐃⵠⲆᐃΔⲆᐃ: "img/day-hand-skin6.png",
    ⵠⵠΔᐃΔᐃⲆⲆΔ: "img/night-hand-skin6.png",
    ⵠΔΔⵠⵠⵠⲆ: "img/day-hand-skin6.png",
    ᐃⲆⲆⵠΔΔⵠ: "img/night-hand-skin6.png",
    ᐃΔΔᐃᐃⲆᐃ: "img/day-hand-skin8.png",
    ⵠⵠⲆᐃᐃΔⵠ: "img/night-hand-skin8.png",
    ᐃⵠⲆⲆⵠⵠΔ: "img/day-hand-skin9.png",
    ᐃΔᐃΔΔⵠⲆ: "img/night-hand-skin9.png",
    ΔⵠᐃⲆⲆᐃⲆ: "img/day-hand-skin10.png",
    ⲆⲆᐃⲆⲆᐃᐃ: "img/night-hand-skin10.png",
    ᐃΔΔⲆᐃΔΔ: "img/day-hand-skin11.png",
    ⲆᐃᐃΔΔⵠⲆ: "img/night-hand-skin11.png",
    ᐃⲆⲆⲆⲆΔΔ: "img/day-hand-skin12.png",
    ⵠⵠⵠⵠⵠⲆⲆ: "img/night-hand-skin12.png",
    ⲆΔⲆΔⵠⵠⵠ: "img/day-hand-skin13.png",
    ⵠⲆΔΔᐃᐃⵠ: "img/night-hand-skin13.png",
    ⵠⵠΔᐃⵠⵠᐃ: "img/day-hand-skin14.png",
    ⲆᐃΔⲆⲆⵠⵠ: "img/night-hand-skin14.png",
    ΔⲆΔΔᐃⲆⲆ: "img/day-hand-skin15.png",
    ⵠⵠΔᐃΔᐃΔ: "img/night-hand-skin15.png",
    ᐃᐃⲆⵠΔᐃᐃ: "img/day-hand-skin16.png",
    ᐃΔⵠⵠΔⲆⲆ: "img/night-hand-skin16.png",
    ⲆΔΔΔΔΔΔ: "img/day-hand-skin17.png",
    ⵠⵠᐃⲆᐃⲆⵠ: "img/night-hand-skin17.png",
    ᐃᐃᐃⲆⲆᐃⵠ: "img/day-hand-skin18.png",
    ⲆΔⵠΔΔⵠⵠ: "img/night-hand-skin18.png",
    ⲆⵠⲆⵠΔᐃᐃ: "img/day-hand-skin19.png",
    ⵠⵠΔⲆⵠᐃᐃ: "img/night-hand-skin19.png",
    ᐃⵠⲆⲆΔⲆⵠ: "img/day-hand-skin20.png",
    ΔΔᐃⵠᐃⵠⲆ: "img/night-hand-skin20.png",
    ΔΔᐃᐃⵠᐃᐃ: "img/day-hand-skin21.png",
    ⲆⲆᐃⵠΔΔᐃ: "img/night-hand-skin21.png",
    ΔΔⲆⵠⲆⵠⵠ: "img/day-hand-skin22.png",
    ⵠΔΔⵠᐃⵠΔ: "img/night-hand-skin22.png",
    ⲆᐃⲆΔⲆᐃΔ: "img/day-hand-skin23.png",
    ᐃⵠΔⵠΔᐃⲆ: "img/night-hand-skin23.png",
    ⵠⲆⲆⲆᐃΔᐃ: "img/day-hand-skin24.png",
    ⵠΔᐃΔⲆΔⵠ: "img/night-hand-skin24.png",
    ᐃⵠᐃᐃΔⵠⲆ: "img/day-hand-skin25.png",
    ΔⵠΔΔᐃᐃⲆ: "img/night-hand-skin25.png",
    ΔΔⲆΔⵠⵠΔ: "img/day-hand-skin26.png",
    ᐃⲆⵠⵠᐃΔᐃ: "img/night-hand-skin26.png",
    ⵠΔⵠⲆΔΔⵠ: "img/day-hand-skin27.png",
    ΔᐃᐃⲆΔΔΔ: "img/night-hand-skin27.png",
    ⵠⵠΔΔⵠⵠᐃ: "img/day-hand-skin28.png",
    ⲆᐃᐃΔᐃΔⵠ: "img/night-hand-skin28.png",
    ΔⲆΔΔⵠⵠΔ: "img/day-hand-skin29.png",
    ᐃΔᐃᐃΔᐃⲆ: "img/night-hand-skin29.png",
    ᐃᐃᐃⲆⲆΔᐃ: "img/day-hand-skin30.png",
    ⲆᐃⵠⵠᐃᐃⲆ: "img/night-hand-skin30.png",
    ΔⲆΔⲆᐃᐃᐃ: "img/day-hand-skin31.png",
    ᐃⵠᐃⵠⵠᐃⲆ: "img/night-hand-skin31.png",
    ⲆⵠΔᐃΔⵠΔ: "img/day-hand-skin32.png",
    ᐃᐃᐃⲆⵠᐃⵠ: "img/night-hand-skin32.png",
    ᐃΔⵠᐃⲆᐃⵠ: "img/day-hand-skin33.png",
    ΔⵠⵠⲆᐃᐃⲆ: "img/night-hand-skin33.png",
    ⲆΔΔⲆᐃΔᐃ: "img/day-hand-skin34.png",
    ᐃΔΔⲆᐃⵠΔ: "img/night-hand-skin34.png",
    ⲆⲆⲆⵠⲆⲆᐃ: "img/day-hand-skin35.png",
    ΔⵠᐃⵠⲆⲆⲆ: "img/night-hand-skin35.png",
    ⵠᐃΔᐃⲆⲆⲆ: "img/day-hand-skin36.png",
    ᐃᐃΔᐃⵠⲆΔ: "img/night-hand-skin36.png",
    ⲆⵠΔⵠᐃᐃⲆ: "img/day-hand-skin37.png",
    ᐃⲆᐃⲆΔⵠΔ: "img/night-hand-skin37.png",
    ⲆΔΔᐃⵠⲆΔ: "img/day-hand-skin38.png",
    ᐃⵠⲆⵠΔΔᐃ: "img/night-hand-skin38.png",
    ΔⵠᐃΔΔᐃⲆ: "img/day-hand-skin39.png",
    ΔᐃⵠᐃⵠⲆᐃ: "img/night-hand-skin39.png",
    ᐃΔΔⲆᐃᐃⵠ: "img/day-hand-skin40.png",
    ⵠΔⵠΔΔᐃΔ: "img/night-hand-skin40.png",
    ⲆᐃΔⵠᐃᐃΔ: "img/day-hand-skin41.png",
    ⵠΔᐃΔᐃᐃⲆ: "img/night-hand-skin41.png",
    ᐃΔⵠΔΔΔᐃ: "img/day-hand-skin42.png",
    ⵠΔⲆⲆᐃΔⵠ: "img/night-hand-skin42.png",
    ΔⲆⵠᐃⵠⵠΔ: "img/day-hand-skin43.png",
    ΔΔⵠⵠΔⲆΔ: "img/night-hand-skin43.png",
    ⵠᐃⵠΔⲆⲆΔ: "img/day-hand-skin16.png",
    ΔⵠⲆⲆΔᐃΔ: "img/night-hand-skin16.png",
    ⵠⲆᐃΔΔᐃᐃ: "img/day-hand-skin45.png",
    ΔⲆᐃⵠᐃΔⲆ: "img/night-hand-skin45.png",
    ⲆⵠΔⲆΔᐃᐃ: "img/day-hand-skin46.png",
    ⵠΔᐃⲆΔᐃᐃ: "img/night-hand-skin46.png",
    ⲆⲆⵠΔⲆⵠⲆ: "img/day-hand-skin47.png",
    ⲆⲆᐃΔⵠⲆΔ: "img/night-hand-skin47.png",
    ᐃΔΔⲆΔⲆⵠ: "img/day-hand-skin48.png",
    ⵠⵠⲆⲆᐃᐃΔ: "img/night-hand-skin48.png",
    ⲆΔΔᐃⵠⵠΔ: "img/day-hand-skin49.png",
    ⵠⵠⲆⲆΔΔⲆ: "img/night-hand-skin49.png",
    ᐃΔΔⵠᐃΔⲆ: "img/day-hand-skin49.png",
    ᐃⵠⲆⵠΔⵠΔ: "img/night-hand-skin49.png",
    ΔᐃΔⲆᐃΔΔ: "img/day-hand-skin51.png",
    ⵠⵠⲆᐃⵠⵠᐃ: "img/night-hand-skin51.png",
    ΔΔⵠΔᐃⲆΔ: "img/day-hand-skin52.png",
    ᐃᐃⵠⲆΔⲆⲆ: "img/night-hand-skin52.png",
    ᐃᐃⲆⲆᐃⲆⵠ: "img/day-hand-skin53.png",
    ⲆᐃΔΔᐃⵠⲆ: "img/night-hand-skin53.png",
    ⵠⲆⵠⵠⵠᐃⲆ: "img/day-hand-skin53.png",
    ᐃᐃⲆᐃⵠΔⲆ: "img/night-hand-skin53.png",
    ⲆⵠⲆᐃⵠⵠᐃ: "img/day-hand-skin55.png",
    ᐃⵠᐃᐃⲆΔΔ: "img/night-hand-skin55.png",
    ⵠⲆΔⲆΔⵠΔ: "img/day-hand-skin56.png",
    ᐃⲆΔⵠΔⲆⵠ: "img/night-hand-skin56.png",
    ΔⵠΔⵠⵠⲆⵠ: "img/day-hand-skin57.png",
    ⵠΔⲆΔⲆⲆᐃ: "img/night-hand-skin57.png",
    ⵠⲆΔⲆⲆΔⵠ: "img/day-hand-skin58.png",
    ⵠⲆⵠΔΔⵠΔ: "img/night-hand-skin58.png",
    ⵠᐃᐃⵠⵠᐃⵠ: "img/day-hand-skin59.png",
    ᐃⲆⵠⵠⲆᐃⵠ: "img/night-hand-skin59.png",
    ⵠᐃⵠⲆΔⲆⵠ: "img/day-hand-skin61.png",
    ᐃⵠⲆⲆⲆᐃΔ: "img/night-hand-skin61.png",
    ᐃΔᐃⵠΔᐃΔ: "img/day-hand-skin61.png",
    ᐃᐃΔᐃᐃⲆᐃ: "img/night-hand-skin61.png",
    ⵠΔᐃᐃΔᐃᐃ: "img/day-hand-skin62.png",
    ᐃⲆⵠⲆⲆⲆᐃ: "img/night-hand-skin62.png",
    ⲆᐃΔⲆⵠᐃⵠ: "img/day-hand-skin63.png",
    ΔⲆⵠΔΔⲆⲆ: "img/night-hand-skin63.png",
    ⲆΔᐃⲆⲆⲆⵠ: "img/day-hand-skin64.png",
    ⵠΔᐃΔⲆᐃΔ: "img/night-hand-skin64.png",
    ⵠⵠᐃΔⵠΔⲆ: "img/day-hand-skin65.png",
    ΔⲆΔⵠᐃΔⵠ: "img/night-hand-skin65.png",
    ⲆⵠⵠⵠⲆⲆⵠ: "img/day-hand-skin66.png",
    ⵠⵠΔᐃᐃⵠⵠ: "img/night-hand-skin66.png",
    ⲆᐃΔΔᐃⵠᐃ: "img/day-hand-skin67.png",
    ⵠⲆⵠΔⵠⲆⲆ: "img/night-hand-skin67.png",
    ⲆⵠⵠΔⵠⵠⲆ: "img/day-hand-skin68.png",
    ⲆᐃΔΔΔΔⲆ: "img/night-hand-skin68.png",
    ⵠⲆΔⲆᐃⲆⵠ: "img/day-hand-skin69.png",
    ⵠᐃᐃⲆΔᐃⵠ: "img/night-hand-skin69.png",
    ᐃΔΔⵠΔᐃⲆ: "img/day-hand-skin70.png",
    ⲆⵠⲆᐃΔᐃⵠ: "img/night-hand-skin70.png",
    ΔᐃⲆⲆΔΔΔ: "img/day-hand-skin71.png",
    ΔⲆⲆⲆⵠᐃΔ: "img/night-hand-skin71.png",
    ⲆᐃⲆⵠⲆⵠΔ: "img/day-hand-skin72.png",
    ᐃⵠΔⵠΔⵠⵠ: "img/night-hand-skin72.png",
    ᐃΔᐃⵠᐃⲆᐃ: "img/day-hand-skin73.png",
    ᐃⲆⲆᐃⵠⵠⵠ: "img/night-hand-skin73.png",
    ⵠᐃΔⲆⵠᐃⵠ: "img/day-hand-skin74.png",
    ⵠⵠᐃⵠΔⵠᐃ: "img/night-hand-skin74.png",
    ᐃⵠⲆⲆΔᐃⵠ: "img/day-hand-skin75.png",
    ΔⲆΔⵠⵠΔⲆ: "img/night-hand-skin75.png",
    ᐃᐃᐃⲆⵠᐃⲆ: "img/day-hand-skin76.png",
    ⵠΔᐃᐃⲆⲆᐃ: "img/night-hand-skin76.png",
    ⵠⵠⵠΔⲆⵠⵠ: "img/day-hand-skin77.png",
    ⵠᐃⵠᐃΔᐃⵠ: "img/night-hand-skin77.png",
    ⲆⲆᐃⵠⲆΔᐃ: "img/day-hand-skin78.png",
    ΔⲆⲆΔⲆⲆⵠ: "img/night-hand-skin78.png",
    ᐃⵠΔⲆⲆⵠᐃ: "img/day-hand-skin79.png",
    ᐃⵠⵠⲆᐃⲆΔ: "img/night-hand-skin79.png",
    ᐃᐃᐃᐃᐃⵠᐃ: "img/day-hand-skin80.png",
    ΔΔⵠⲆΔΔᐃ: "img/night-hand-skin80.png",
    ΔΔᐃΔᐃΔⵠ: "img/day-hand-skin81.png",
    ᐃΔΔⲆᐃᐃᐃ: "img/night-hand-skin81.png",
    ΔⵠⵠⵠⵠⲆⵠ: "img/day-hand-skin82.png",
    ᐃᐃΔⵠⵠⵠᐃ: "img/night-hand-skin82.png",
    ᐃⵠᐃⵠᐃⵠΔ: "img/day-hand-skin83.png",
    ⲆⲆᐃⵠⲆⵠⲆ: "img/night-hand-skin83.png",
    ⵠⵠⲆΔⲆΔᐃ: "img/day-hand-skin84.png",
    ΔᐃΔⵠΔᐃⲆ: "img/night-hand-skin84.png",
    ⵠⲆⲆΔΔᐃᐃ: "img/day-hand-skin85.png",
    ⵠᐃΔΔΔⲆⵠ: "img/night-hand-skin85.png",
    ⲆΔⵠⲆⲆᐃⲆ: "img/day-hand-skin86.png",
    ΔΔΔⲆⵠᐃⲆ: "img/night-hand-skin86.png",
    ⵠⵠΔᐃⲆΔᐃ: "img/day-hand-skin87.png",
    ΔⲆᐃᐃᐃΔᐃ: "img/night-hand-skin87.png",
    ᐃⲆⲆᐃᐃΔⲆ: "img/day-hand-skin88.png",
    ⵠⲆⲆΔᐃᐃΔ: "img/night-hand-skin88.png",
    ⲆΔⵠΔᐃΔΔ: "img/day-hand-skin89.png",
    ᐃᐃⵠᐃΔᐃⵠ: "img/night-hand-skin89.png",
    ⲆᐃΔᐃⲆᐃⲆ: "img/day-hand-skin90.png",
    ΔᐃᐃΔⵠᐃΔ: "img/night-hand-skin90.png",
    ⲆⲆᐃΔⵠⵠⵠ: "img/day-hand-skin91.png",
    ⵠᐃᐃΔⵠⲆᐃ: "img/night-hand-skin91.png",
    ΔⲆΔΔⵠⵠᐃ: "img/day-hand-skin92.png",
    ⵠᐃⲆⲆΔⵠⵠ: "img/night-hand-skin92.png",
    ⵠΔⲆΔⲆᐃΔ: "img/day-hand-skin93.png",
    ΔΔᐃᐃΔΔᐃ: "img/night-hand-skin93.png",
    ΔⲆⵠΔⵠΔⵠ: "img/day-hand-skin94.png",
    ⵠⵠⵠᐃⲆⵠⵠ: "img/night-hand-skin94.png",
    ᐃⵠΔΔⵠⲆΔ: "img/day-hand-skin95.png",
    ⵠⲆΔᐃⵠⲆⵠ: "img/night-hand-skin95.png",
    ⲆᐃΔⵠⲆⲆⲆ: "img/day-hand-skin96.png",
    ⵠᐃΔⲆᐃᐃⵠ: "img/night-hand-skin96.png",
    ΔᐃᐃΔᐃⵠΔ: "img/day-hand-skin97.png",
    ᐃΔΔⲆᐃⵠᐃ: "img/night-hand-skin97.png",
    ΔᐃᐃᐃᐃⲆᐃ: "img/day-hand-skin98.png",
    ⲆⵠᐃⵠᐃⲆΔ: "img/night-hand-skin98.png",
    ⲆΔᐃⵠⵠⲆΔ: "img/day-hand-skin99.png",
    ⲆⵠⵠΔⲆΔΔ: "img/night-hand-skin99.png",
    ⵠᐃⵠⲆⵠΔⵠ: "img/day-hand-skin100.png",
    ⵠᐃΔΔⲆⵠΔ: "img/night-hand-skin100.png",
    ⲆΔΔⵠⵠᐃⲆ: "img/day-hand-skin101.png",
    ᐃᐃⵠᐃⲆΔᐃ: "img/night-hand-skin101.png",
    ΔΔΔⵠⲆⲆⵠ: "img/day-hand-skin102.png",
    ΔⵠΔⲆⵠⵠⵠ: "img/night-hand-skin102.png",
    ΔⵠΔⵠⵠⲆΔ: "img/day-hand-skin103.png",
    ⲆⵠΔᐃᐃⵠᐃ: "img/night-hand-skin103.png",
    ΔⵠⲆΔⲆΔΔ: "img/day-hand-skin104.png",
    ᐃⲆΔⲆⲆᐃⲆ: "img/night-hand-skin104.png",
    ⵠᐃⲆⲆⲆᐃΔ: "img/day-hand-skin105.png",
    ᐃⵠⲆΔⲆᐃⲆ: "img/night-hand-skin105.png",
    ⵠΔᐃⵠΔⲆⵠ: "img/day-hand-skin106.png",
    ⲆⵠᐃⲆᐃᐃⲆ: "img/night-hand-skin106.png",
    ᐃΔᐃⵠⵠⵠΔ: "img/day-hand-skin107.png",
    ΔΔΔⵠⵠⲆΔ: "img/night-hand-skin107.png",
    ΔⲆᐃᐃⵠΔΔ: "img/day-hand-skin108.png",
    ΔⵠⵠⵠⲆᐃΔ: "img/night-hand-skin108.png",
    ⲆⵠΔⵠᐃΔΔ: "img/day-hand-skin109.png",
    ⲆⲆΔⵠⲆᐃⵠ: "img/night-hand-skin109.png",
    ⲆⲆᐃⲆⵠΔⵠ: "img/day-hand-skin110.png",
    ⵠⵠᐃᐃΔⲆΔ: "img/night-hand-skin110.png",
    ⲆΔΔΔᐃᐃᐃ: "img/day-hand-skin111.png",
    ⲆΔΔΔΔⲆᐃ: "img/night-hand-skin111.png",
    ᐃΔⵠⲆⵠΔⵠ: "img/day-hand-skin112.png",
    ⵠⵠⲆΔⵠᐃᐃ: "img/night-hand-skin112.png",
    ᐃⲆᐃⲆⵠΔᐃⵠⲆ: "img/day-hand-skin113.png",
    ᐃᐃᐃᐃᐃⲆⵠⲆⵠ: "img/night-hand-skin113.png",
    ⲆΔᐃⵠⵠᐃⲆ: "img/day-hand-skin114.png",
    ᐃΔⵠΔⲆΔΔ: "img/night-hand-skin114.png",
    ⵠⵠΔᐃⲆᐃⲆ: "img/day-hand-skin115.png",
    ⵠⵠⲆᐃΔΔⲆ: "img/night-hand-skin115.png",
    ⲆΔΔⲆⲆⵠⵠ: "img/day-hand-skin116.png",
    ⵠᐃⲆᐃᐃΔΔ: "img/night-hand-skin116.png",
    ⵠⲆᐃⲆⵠⵠⲆ: "img/day-hand-skin117.png",
    ᐃⲆⵠΔⵠΔⵠ: "img/night-hand-skin117.png",
    ⵠᐃⵠⲆΔⵠⲆ: "img/day-hand-skin118.png",
    ᐃⲆᐃΔΔⵠᐃ: "img/night-hand-skin118.png",
    ⲆΔⲆⲆⲆΔⲆ: "img/day-hand-skin119.png",
    ⵠΔⵠⲆᐃⲆᐃ: "img/night-hand-skin119.png",
    ᐃᐃⵠⵠⵠⵠⵠ: "img/day-hand-skin120.png",
    ᐃᐃⲆⲆΔⵠᐃ: "img/night-hand-skin120.png",
    ⵠⵠᐃᐃⵠⵠΔ: "img/day-hand-skin122.png",
    ΔⲆⲆⵠᐃᐃΔ: "img/night-hand-skin122.png",
    ᐃⵠⵠΔΔᐃⲆ: "img/day-hand-skin122.png",
    ΔⵠⵠⲆᐃΔⵠ: "img/night-hand-skin122.png",
    ᐃⵠⵠΔᐃᐃⵠ: "img/day-hand-skin122.png",
    ᐃΔΔⵠΔⲆΔ: "img/night-hand-skin122.png",
    ⲆᐃⵠⲆⵠⲆᐃ: "img/day-hand-skin124.png",
    ⵠⵠΔΔΔⵠΔ: "img/night-hand-skin124.png",
    ΔⲆΔⲆΔⲆΔ: "img/day-hand-skin125.png",
    ᐃⵠⲆΔⲆΔⵠ: "img/night-hand-skin125.png",
    ᐃⲆⲆᐃⵠⲆᐃ: "img/day-hand-skin126.png",
    ⲆΔⲆΔᐃⵠⲆ: "img/night-hand-skin126.png",
    ⵠΔⵠⵠⵠᐃΔ: "img/day-hand-skin127.png",
    ᐃΔⵠΔΔⲆᐃ: "img/night-hand-skin127.png",
    ⵠⲆⲆΔᐃᐃⵠ: "img/day-hand-skin128.png",
    ⲆⵠΔⵠⵠⲆⵠ: "img/night-hand-skin128.png",
    ᐃⵠᐃΔⵠᐃⲆ: "img/day-hand-skin129.png",
    ᐃᐃᐃᐃⵠⵠⵠ: "img/night-hand-skin129.png",
    ᐃⵠⲆΔᐃΔⲆ: "img/day-hand-skin130.png",
    ΔⵠΔⲆᐃᐃΔ: "img/night-hand-skin130.png",
    ⲆᐃⵠᐃⲆΔΔ: "img/day-hand-skin131.png",
    ΔΔⲆΔⲆⲆⲆ: "img/night-hand-skin131.png",
    ΔΔΔⵠᐃⲆⵠ: "img/day-hand-skin130.png",
    Δⵠᐃᐃⵠᐃⵠ: "img/night-hand-skin130.png",
    ΔⲆⵠⵠⲆΔⵠ: "img/day-hand-skin133.png",
    ⲆⵠΔΔⲆⲆᐃ: "img/night-hand-skin133.png",
    ᐃΔⵠⲆⵠⲆᐃ: "img/day-hand-skin134.png",
    ᐃⵠⵠⲆⲆᐃⵠ: "img/night-hand-skin134.png",
    ⵠⵠⲆΔᐃⲆᐃ: "img/day-hand-skin135.png",
    ΔⲆΔᐃᐃⵠⵠ: "img/night-hand-skin135.png",
    ⲆⵠⵠΔⲆⵠΔ: "img/day-hand-skin136.png",
    ⵠᐃᐃⵠⵠΔᐃ: "img/night-hand-skin136.png",
    ⵠⵠⵠⵠᐃⵠΔ: "img/day-hand-skin137.png",
    ᐃΔⲆΔⲆⵠᐃ: "img/night-hand-skin137.png",
    ΔⲆᐃⵠⲆΔⵠ: "img/day-hand-skin138.png",
    ⲆⲆᐃᐃᐃΔᐃ: "img/night-hand-skin138.png",
    ⵠᐃⲆⲆⵠⲆΔ: "img/day-hand-skin139.png",
    ⲆᐃⵠⵠΔᐃⵠ: "img/night-hand-skin139.png",
    ⵠⲆⲆⵠΔⲆΔ: "img/day-hand-skin140.png",
    ᐃⵠⲆⲆⲆⵠⲆ: "img/night-hand-skin140.png",
    ⲆΔᐃᐃⲆⲆⲆ: "img/day-hand-skin141.png",
    ᐃΔΔⵠΔⵠᐃ: "img/night-hand-skin141.png",
    ᐃⵠᐃⲆᐃΔⵠ: "img/day-hand-skin142.png",
    ⵠⲆⲆⵠΔΔⵠ: "img/night-hand-skin142.png",
    ⲆⵠⲆⵠⲆᐃᐃ: "img/day-hand-skin143.png",
    ΔΔΔᐃᐃᐃΔ: "img/night-hand-skin143.png",
    ΔⲆⲆᐃᐃΔΔ: "img/day-hand-skin144.png",
    ᐃΔᐃΔΔⲆᐃ: "img/night-hand-skin144.png",
    ᐃΔΔⲆΔⲆᐃ: "img/day-hand-skin145.png",
    ⲆΔΔⵠⵠⵠⵠ: "img/night-hand-skin145.png",
    ⵠⵠΔᐃΔᐃᐃ: "img/day-hand-skin146.png",
    ⲆⲆΔⲆΔⲆⲆ: "img/night-hand-skin146.png",
    ΔⵠⵠΔⵠⵠⵠ: "img/day-hand-skin147.png",
    ⲆᐃΔΔᐃᐃⵠ: "img/night-hand-skin147.png",
    ᐃⲆΔⵠⵠⲆⲆ: "img/day-hand-skin148.png",
    ΔΔⵠⵠᐃⵠⲆ: "img/night-hand-skin148.png",
    ⲆΔⲆⵠΔΔⲆ: "img/day-hand-skin149.png",
    ᐃⲆⲆΔⵠⵠΔ: "img/night-hand-skin149.png",
    ⵠᐃΔᐃΔΔΔ: "img/day-hand-skin150.png",
    ⵠΔⲆᐃᐃᐃⵠ: "img/night-hand-skin150.png",
    ⵠⲆΔⵠᐃᐃⵠ: "img/day-hand-skin151.png",
    ⲆⵠΔⲆΔⵠᐃ: "img/night-hand-skin151.png",
    ⲆᐃⵠⵠⲆᐃⲆ: "img/day-hand-skin152.png",
    ΔᐃΔᐃΔᐃΔ: "img/night-hand-skin152.png",
    ΔᐃⲆᐃⵠᐃΔ: "img/day-hand-skin153.png",
    ΔⵠᐃⲆⵠᐃⵠ: "img/night-hand-skin153.png",
    ᐃᐃΔᐃᐃⲆⲆ: "img/day-hand-skin154.png",
    ᐃᐃⵠⲆⵠⲆΔ: "img/night-hand-skin154.png",
    ⲆⲆᐃΔΔΔᐃ: "img/day-hand-skin155.png",
    ᐃⲆΔΔΔΔⵠ: "img/night-hand-skin155.png",
    ⵠΔⲆᐃΔⵠᐃ: "img/day-hand-skin156.png",
    ΔΔᐃⵠⵠⵠΔ: "img/night-hand-skin156.png",
    ⵠⲆΔⵠᐃⲆᐃ: "img/day-hand-skin157.png",
    ⵠⲆΔⲆⵠᐃΔ: "img/night-hand-skin157.png",
    ⲆⲆⵠᐃⲆⵠⲆ: "img/day-hand-skin158.png",
    ᐃΔⲆᐃΔⵠᐃ: "img/night-hand-skin158.png",
    ᐃⲆΔᐃᐃⲆⵠ: "img/day-hand-skin159.png",
    ⲆΔᐃΔⵠΔⵠ: "img/night-hand-skin159.png",
    ᐃΔᐃᐃΔᐃᐃ: "img/day-hand-skin160.png",
    ᐃⲆᐃⲆⵠΔⵠ: "img/night-hand-skin160.png",
    ΔⵠΔⲆΔⲆⲆ: "img/day-hand-skin161.png",
    ⲆⵠΔⵠᐃⲆⲆ: "img/night-hand-skin161.png",
    ⲆΔⲆⲆΔΔⵠ: "img/day-hand-skin162.png",
    ⲆᐃΔΔΔⲆᐃ: "img/night-hand-skin162.png",
    ⵠⲆⵠΔⵠΔⲆ: "img/day-hand-skin163.png",
    ΔᐃΔⲆᐃⵠⵠ: "img/night-hand-skin163.png",
    ⵠⵠⲆᐃⵠΔⵠ: "img/day-hand-skin164.png",
    ᐃᐃⵠΔΔΔᐃ: "img/night-hand-skin164.png",
    ⵠᐃⵠⲆΔᐃᐃ: "img/day-hand-skin165.png",
    ⵠⲆⵠΔᐃᐃⲆ: "img/night-hand-skin165.png",
    ⵠⵠΔⵠⵠΔⵠ: "img/day-hand-skin166.png",
    ᐃᐃΔΔⲆᐃΔ: "img/night-hand-skin166.png",
    ΔⲆΔᐃⲆᐃΔ: "img/day-hand-skin167.png",
    ΔᐃⲆⵠⵠᐃᐃ: "img/night-hand-skin167.png",
    ΔⲆⵠΔΔᐃᐃ: "img/day-hand-skin168.png",
    ΔΔⵠᐃⵠⲆΔ: "img/night-hand-skin168.png",
    ⵠⲆⲆⲆΔΔΔ: "img/day-hand-skin169.png",
    ᐃⵠⲆΔΔⵠⵠ: "img/night-hand-skin169.png",
    ⵠΔⲆⵠᐃⲆⵠ: "img/day-hand-skin170.png",
    ⵠᐃⵠᐃⵠⵠⵠ: "img/night-hand-skin170.png",
    ΔⲆΔᐃⲆⵠΔ: "img/day-hand-skin171.png",
    ΔⲆΔᐃΔΔΔ: "img/night-hand-skin171.png",
    ΔΔΔⵠᐃᐃᐃ: "img/day-hand-skin172.png",
    ⵠΔᐃⲆⵠⵠΔ: "img/night-hand-skin172.png",
    ΔᐃⲆⲆᐃⲆⵠ: "img/day-hand-skin173.png",
    ΔᐃⲆⲆⲆᐃⲆ: "img/night-hand-skin173.png",
    ⵠⲆⲆⵠⵠⲆᐃ: "img/day-hand-skin174.png",
    ᐃⲆΔⲆΔᐃᐃ: "img/night-hand-skin174.png",
    ΔᐃⲆⵠᐃΔΔ: "img/day-hand-skin175.png",
    ᐃⵠⲆⲆⵠᐃⵠ: "img/night-hand-skin175.png",
    ⵠΔᐃⵠⲆΔⲆ: "img/day-hand-skin176.png",
    ᐃⲆⲆᐃᐃᐃⵠ: "img/night-hand-skin176.png",
    ⲆⵠⵠⲆⲆⲆⵠ: "img/day-hand-skin177.png",
    ᐃᐃⵠⵠΔᐃᐃ: "img/night-hand-skin177.png",
    ᐃΔᐃᐃᐃΔΔ: "img/day-hand-skin178.png",
    ᐃΔⲆⲆᐃⵠⵠ: "img/night-hand-skin178.png",
    ⲆⵠⵠⵠⲆᐃⵠ: "img/day-hand-skin179.png",
    ⵠᐃᐃⵠᐃᐃⲆ: "img/night-hand-skin179.png",
    ⵠⵠΔⲆⵠⵠΔ: "img/day-hand-skin180.png",
    ΔΔⵠᐃΔⲆᐃ: "img/night-hand-skin180.png",
    ⲆⵠᐃᐃᐃΔⵠ: "img/day-hand-skin181.png",
    ᐃⲆΔᐃᐃⵠΔ: "img/night-hand-skin181.png",
    ⲆΔΔⵠⵠᐃⵠ: "img/day-hand-skin182.png",
    ⵠᐃᐃⵠⵠⲆⲆ: "img/night-hand-skin182.png",
    ⵠⵠᐃᐃᐃⲆⲆ: "img/day-hand-skin183.png",
    ΔⵠᐃⲆⵠΔⲆ: "img/night-hand-skin183.png",
    ⵠᐃⵠΔⲆⲆⲆ: "img/day-hand-skin184.png",
    ΔⲆⲆⲆⵠΔⲆ: "img/night-hand-skin184.png",
    ᐃΔᐃΔᐃⵠΔ: "img/day-hand-skin185.png",
    ⲆⲆⲆⵠᐃⲆⵠ: "img/night-hand-skin185.png",
    ᐃⵠᐃⲆⵠⲆΔ: "img/day-hand-skin186.png",
    ⲆΔΔⲆΔᐃⵠ: "img/night-hand-skin186.png",
    ᐃⲆᐃΔΔⲆⵠ: "img/day-hand-skin187.png",
    ᐃⵠᐃⵠⵠⲆΔ: "img/night-hand-skin187.png",
    ΔᐃⵠⵠᐃⲆΔ: "img/day-hand-skin188.png",
    ⵠᐃⵠΔⲆⲆⵠ: "img/night-hand-skin188.png",
    ᐃᐃⵠⲆⵠΔᐃ: "img/day-hand-skin189.png",
    ᐃⲆΔⵠⵠⲆᐃ: "img/night-hand-skin189.png",
    ᐃⵠΔᐃⵠΔᐃ: "img/day-hand-skin190.png",
    ⵠΔⵠΔΔⵠΔ: "img/night-hand-skin190.png",
    ᐃⲆΔΔⵠΔΔ: "img/day-hand-skin191.png",
    ᐃΔᐃΔⲆⲆΔ: "img/night-hand-skin191.png",
    ΔᐃΔⵠΔᐃᐃ: "img/day-hand-skin192.png",
    ⵠⵠΔΔⵠΔⲆ: "img/night-hand-skin192.png",
    ⵠᐃⲆΔⲆᐃᐃ: "img/day-hand-skin193.png",
    ⵠⲆΔⲆΔᐃᐃ: "img/night-hand-skin193.png",
    ⲆΔⲆᐃⲆⵠΔ: "img/day-hand-skin194.png",
    ΔᐃΔⵠΔΔⵠ: "img/night-hand-skin194.png",
    ΔᐃⵠᐃΔΔⵠ: "img/day-hand-skin195.png",
    ΔⲆⲆΔⵠⲆⵠ: "img/night-hand-skin195.png",
    ᐃⵠᐃΔⲆⲆⲆ: "img/day-hand-skin196.png",
    ⵠⲆⲆⵠⵠⵠⵠ: "img/night-hand-skin196.png",
    ᐃᐃΔᐃΔᐃⵠ: "img/day-hand-skin197.png",
    ΔΔⲆⲆΔⲆⲆ: "img/night-hand-skin197.png",
    ΔⲆⲆⲆⲆᐃⵠ: "img/day-hand-skin198.png",
    ΔⵠΔΔᐃΔᐃ: "img/night-hand-skin198.png",
    ᐃΔⵠΔⲆᐃⲆ: "img/day-hand-skin199.png",
    ⲆⵠⲆΔⵠᐃⲆ: "img/night-hand-skin199.png",
    ⵠⵠⵠⵠΔⲆⲆ: "img/day-hand-skin200.png",
    ΔΔᐃΔⲆᐃᐃ: "img/night-hand-skin200.png",
    ⲆⲆⲆⲆΔᐃΔ: "img/day-hand-skin201.png",
    ᐃⵠΔⵠⲆⵠⵠ: "img/night-hand-skin201.png",
    ΔⲆᐃⲆΔᐃⵠ: "img/day-hand-skin202.png",
    ΔΔΔⲆΔΔᐃ: "img/night-hand-skin202.png",
    ΔⵠΔⲆΔΔⵠ: "img/day-hand-skin203.png",
    ᐃⵠⵠⲆΔⲆⲆ: "img/night-hand-skin203.png",
    ᐃⵠⲆᐃΔᐃᐃ: "img/day-hand-skin204.png",
    ΔᐃⲆᐃⲆΔⵠ: "img/night-hand-skin204.png",
    ΔⲆⵠⵠⲆⲆΔ: "img/day-hand-skin205.png",
    ᐃⲆΔΔᐃᐃᐃ: "img/night-hand-skin205.png",
    ⵠⲆΔⵠΔΔΔ: "img/day-hand-skin206.png",
    ΔΔⵠΔᐃᐃⵠ: "img/night-hand-skin206.png",
    ⲆᐃⲆᐃΔⲆⲆ: "img/day-hand-skin207.png",
    ⵠᐃᐃΔⵠⲆΔ: "img/night-hand-skin207.png",
    ᐃᐃⲆⵠΔᐃⵠ: "img/day-hand-skin208.png",
    ⵠⵠΔⵠⲆᐃⲆ: "img/night-hand-skin208.png",
    ⵠᐃⵠΔΔᐃΔ: "img/day-hand-skin209.png",
    ΔⵠⵠᐃᐃΔᐃ: "img/night-hand-skin209.png",
    ⵠΔⵠⵠⲆⲆⵠ: "img/day-hand-skin210.png",
    ⲆΔᐃⲆⲆⲆⲆ: "img/night-hand-skin210.png",
    ΔΔᐃᐃᐃⲆΔ: "img/day-hand-skin211.png",
    ᐃⵠᐃᐃⲆⲆⲆ: "img/night-hand-skin211.png",
    ΔᐃⲆⲆⵠⵠΔ: "img/day-hand-skin212.png",
    ⲆᐃΔⵠᐃΔᐃ: "img/night-hand-skin212.png",
    ΔΔᐃⲆⲆⲆⲆ: "img/day-hand-skin213.png",
    ΔⲆΔⵠΔᐃᐃ: "img/night-hand-skin213.png",
    ᐃᐃᐃⵠᐃᐃΔ: "img/day-hand-skin214.png",
    ᐃⵠⵠⵠᐃᐃΔ: "img/night-hand-skin214.png",
    ΔⲆᐃⲆⵠⵠⲆ: "img/day-bag-star0.png",
    ⲆⲆⵠΔⲆΔⲆ: "img/night-bag-star0.png",
    ⲆΔⲆᐃᐃⵠΔ: "img/day-bag0.png",
    ΔᐃⲆⲆᐃᐃⲆ: "img/night-bag0.png",
    ⲆᐃᐃΔᐃⵠᐃ: "img/day-bag1.png",
    ᐃΔⵠⵠΔⵠⲆ: "img/night-bag1.png",
    ΔⲆᐃΔⵠⲆⵠ: "img/day-bag2.png",
    ᐃΔⵠΔᐃⲆⵠ: "img/night-bag2.png",
    ᐃⵠᐃⵠΔⵠⲆ: "img/day-bag3.png",
    ᐃⲆⵠᐃⲆᐃΔ: "img/night-bag3.png",
    ΔⵠᐃᐃΔⲆᐃ: "img/day-bag4.png",
    ⲆᐃΔⲆᐃⲆⲆ: "img/night-bag4.png",
    ⵠⵠᐃⲆⵠⵠⵠ: "img/day-bag5.png",
    ΔⵠΔⲆΔⵠⵠ: "img/night-bag5.png",
    ⵠⲆΔⲆᐃⲆⲆ: "img/day-bag6.png",
    ⲆⲆΔΔᐃᐃⵠ: "img/night-bag6.png",
    ⵠᐃⲆⲆⵠⵠⵠ: "img/day-bag7.png",
    ⵠΔΔⵠΔΔⲆ: "img/night-bag7.png",
    ⲆᐃᐃᐃᐃⲆΔ: "img/day-bag8.png",
    ⲆⲆΔⵠΔᐃⲆ: "img/night-bag8.png",
    ᐃΔⲆⲆⲆᐃᐃ: "img/day-bag9.png",
    ΔᐃⲆᐃᐃⵠⲆ: "img/night-bag9.png",
    ⲆⵠΔΔΔⲆᐃ: "img/day-bag10.png",
    ⵠᐃⵠΔᐃⵠⵠ: "img/night-bag10.png",
    ⲆᐃᐃⵠᐃΔᐃ: "img/day-bag11.png",
    ⲆᐃⵠΔΔΔⵠ: "img/night-bag11.png",
    ΔⵠⲆⲆⵠⲆᐃ: "img/day-bag13.png",
    ᐃⵠΔΔΔⲆⵠ: "img/night-bag13.png",
    ⵠⵠⲆⵠⵠΔⵠ: "img/day-bag14.png",
    ⵠΔⵠΔⲆⵠⵠ: "img/night-bag14.png",
    ΔᐃⲆⵠⵠⵠⵠ: "img/day-bag16.png",
    ΔᐃΔⲆⲆⲆⲆ: "img/night-bag16.png",
    ᐃΔΔⲆⵠᐃⵠ: "img/day-bag17.png",
    ⲆⲆⵠⲆΔⵠⲆ: "img/night-bag17.png",
    ᐃⲆⲆΔΔⵠⵠ: "img/day-bag18.png",
    ⲆᐃⵠⵠΔⲆᐃ: "img/night-bag18.png",
    ΔᐃⲆⵠΔⵠΔ: "img/day-bag19.png",
    ⵠᐃⵠᐃᐃⵠΔ: "img/night-bag19.png",
    ΔⲆᐃΔΔᐃᐃ: "img/day-bag20.png",
    ΔⲆⵠⲆⵠⲆⲆ: "img/night-bag20.png",
    ΔΔⲆⲆⵠⲆΔ: "img/day-bag21.png",
    ᐃᐃᐃᐃᐃⲆⵠ: "img/night-bag21.png",
    ᐃᐃⵠⲆᐃᐃⵠ: "img/day-bag22.png",
    ᐃⲆᐃᐃΔⵠΔ: "img/night-bag22.png",
    ᐃᐃⵠᐃⵠΔⲆ: "img/day-bag23.png",
    ΔⲆΔΔᐃΔⲆ: "img/night-bag23.png",
    ⵠΔⵠΔⵠΔⲆ: "img/day-bag24.png",
    ΔΔⵠΔᐃᐃΔ: "img/night-bag24.png",
    ⵠᐃΔΔⵠΔⵠ: "img/day-bag25.png",
    ᐃⲆᐃΔⵠΔᐃ: "img/night-bag25.png",
    ⵠⵠⲆⵠⵠⲆᐃ: "img/day-bag26.png",
    ᐃᐃΔⵠᐃΔⲆ: "img/night-bag26.png",
    ᐃΔΔⲆⵠΔΔ: "img/day-bag27.png",
    ⲆΔᐃⵠⲆᐃΔ: "img/night-bag27.png",
    ⲆⵠΔⵠᐃΔⵠ: "img/day-bag28.png",
    ΔⲆⲆⲆᐃⲆⵠ: "img/night-bag28.png",
    ΔᐃⲆΔⲆΔⵠ: "img/day-bag29.png",
    ⵠⲆᐃⵠⲆᐃⵠ: "img/night-bag29.png",
    ΔᐃⵠⲆΔᐃⲆ: "img/day-bag30.png",
    ᐃΔⵠⵠⵠᐃⵠ: "img/night-bag30.png",
    ᐃᐃⲆⵠⲆⵠᐃ: "img/day-bag31.png",
    ᐃⲆⵠᐃΔⵠⲆ: "img/night-bag31.png",
    ΔⲆⲆⲆⵠΔΔ: "img/day-bag32.png",
    ᐃⲆⵠΔⲆⵠΔ: "img/night-bag32.png",
    ΔⵠⲆΔⲆᐃᐃ: "img/day-bag33.png",
    ᐃᐃⵠᐃᐃⲆΔ: "img/night-bag33.png",
    ⵠⲆⵠⵠΔΔᐃ: "img/day-bag34.png",
    ΔⲆⲆⵠⲆᐃⵠ: "img/night-bag34.png",
    ⵠᐃⵠⲆⲆⵠⲆ: "img/day-bag35.png",
    ⲆΔᐃᐃⵠᐃᐃ: "img/night-bag35.png",
    ᐃΔⵠⲆⲆⲆⵠ: "img/day-bag36.png",
    ΔᐃΔⲆᐃᐃΔ: "img/night-bag36.png",
    ΔᐃⲆⵠΔⲆⵠ: "img/day-bag37.png",
    ⵠᐃⵠⵠᐃⲆⵠ: "img/night-bag37.png",
    ᐃⲆⵠᐃΔΔⵠ: "img/day-bag38.png",
    ⵠᐃⲆⲆⵠⵠΔ: "img/night-bag38.png",
    ⵠΔᐃΔᐃᐃᐃ: "img/day-bag39.png",
    Δᐃⵠⵠⵠⵠⵠ: "img/night-bag39.png",
    ΔᐃᐃⵠᐃⲆᐃ: "img/day-bag40.png",
    ΔᐃⵠᐃΔᐃⲆ: "img/night-bag40.png",
    ᐃⲆⲆᐃᐃⵠᐃ: "img/day-bag41.png",
    ΔᐃⵠΔⲆⲆⵠ: "img/night-bag41.png",
    ⲆΔΔᐃⵠⵠᐃ: "img/day-bag42.png",
    ᐃᐃⲆᐃⵠΔᐃ: "img/night-bag42.png",
    ΔΔⲆᐃⲆΔΔ: "img/day-bag43.png",
    ΔΔᐃⵠᐃᐃᐃ: "img/night-bag43.png",
    ⲆⲆⵠⵠⲆᐃᐃ: "img/day-bag44.png",
    ΔᐃΔΔⵠⲆᐃ: "img/night-bag44.png",
    ⲆⲆⲆΔᐃⲆⲆ: "img/day-bag45.png",
    ᐃⵠΔᐃΔΔΔ: "img/night-bag45.png",
    ⲆⵠⲆⲆΔΔⵠ: "img/day-bag46.png",
    ΔⲆᐃᐃᐃⵠⲆ: "img/night-bag46.png",
    ΔΔΔΔⵠⲆΔ: "img/day-bag47.png",
    ⲆΔΔⵠΔΔⲆ: "img/night-bag47.png",
    ⵠⲆᐃⲆΔⲆΔ: "img/day-bag48.png",
    ΔΔΔⵠᐃΔⵠ: "img/night-bag48.png",
    ⲆΔⲆᐃⵠⵠᐃ: "img/day-bag49.png",
    ⲆΔⲆΔⲆⲆⵠ: "img/night-bag49.png",
    ΔⵠⲆⲆΔΔⲆ: "img/day-bag50.png",
    ⵠΔⵠⵠⲆⲆᐃ: "img/night-bag50.png",
    ⵠΔᐃᐃΔⲆΔ: "img/day-bag51.png",
    ᐃᐃΔᐃⵠⵠⵠ: "img/night-bag51.png",
    ⵠⲆⲆᐃᐃⵠᐃ: "img/day-bag52.png",
    ⵠᐃⲆⵠⲆΔⲆ: "img/night-bag52.png",
    ΔΔⵠΔΔΔⲆ: "img/day-bag53.png",
    ⲆᐃΔⵠΔⲆⲆ: "img/night-bag53.png",
    ⲆⵠⲆᐃⵠⵠΔ: "img/day-bag54.png",
    ΔᐃⵠΔⲆᐃᐃ: "img/night-bag54.png",
    ΔⲆᐃᐃⲆⲆᐃ: "img/day-bag55.png",
    ᐃⵠⵠᐃⵠⵠⵠ: "img/night-bag55.png",
    ΔᐃⲆᐃΔⵠᐃ: "img/day-bag56.png",
    ΔΔⵠⵠⵠⵠΔ: "img/night-bag56.png",
    Ⲇᐃⵠᐃᐃⵠⵠ: "img/day-bag57.png",
    ⲆⲆⲆΔᐃΔⲆ: "img/night-bag57.png",
    ΔⵠΔᐃⵠⲆᐃ: "img/day-bag58.png",
    ΔⲆΔᐃⲆⵠⵠ: "img/night-bag58.png",
    ᐃΔΔᐃⵠΔⲆ: "img/day-bag59.png",
    ⵠᐃᐃΔᐃᐃⵠ: "img/night-bag59.png",
    ᐃΔⵠⲆΔᐃⲆ: "img/day-bag60.png",
    ΔᐃⲆᐃᐃⵠⵠ: "img/night-bag60.png",
    ⵠⵠⵠᐃⲆⲆⲆ: "img/day-bag61.png",
    ΔⲆΔⲆⲆᐃⲆ: "img/night-bag61.png",
    ⵠⵠⲆⵠΔᐃᐃ: "img/day-bag62.png",
    ΔⵠᐃᐃΔΔⵠ: "img/night-bag62.png",
    ΔⲆΔΔΔⵠᐃ: "img/day-bag63.png",
    ⵠⵠⵠⵠⲆⲆᐃ: "img/night-bag63.png",
    ΔΔⵠΔᐃⵠⵠ: "img/day-bag64.png",
    ⵠᐃⵠⲆⲆᐃΔ: "img/night-bag64.png",
    ΔᐃⲆΔΔⵠΔ: "img/day-bag65.png",
    ᐃⲆⲆⲆᐃᐃⲆ: "img/night-bag65.png",
    ⲆΔⵠᐃΔⵠⵠ: "img/day-bag66.png",
    ⲆΔΔΔⲆⲆⲆ: "img/night-bag66.png",
    ΔⲆⵠᐃⵠᐃΔ: "img/day-bag67.png",
    ⲆᐃⲆᐃⵠⲆⲆ: "img/night-bag67.png",
    ⲆᐃΔᐃΔᐃⲆ: "img/day-bag68.png",
    ⵠᐃⲆᐃᐃᐃⵠ: "img/night-bag68.png",
    ᐃⵠⵠⲆᐃⵠⵠ: "img/day-bag69.png",
    ΔⵠΔⵠⵠᐃΔ: "img/night-bag69.png",
    ⲆᐃⲆⲆΔΔⵠ: "img/day-bag70.png",
    ᐃΔⵠᐃᐃⵠⲆ: "img/night-bag70.png",
    ⲆⵠᐃⵠᐃⲆᐃ: "img/day-bag71.png",
    Δᐃᐃⵠⵠᐃⵠ: "img/night-bag71.png",
    ᐃⵠⲆΔΔᐃⵠ: "img/day-bag72.png",
    ᐃΔᐃΔᐃΔⲆ: "img/night-bag72.png",
    ᐃᐃΔⲆⵠⲆᐃ: "img/day-bag73.png",
    ⲆⵠⵠⲆⲆΔⲆ: "img/night-bag73.png",
    ᐃᐃⵠᐃⵠΔⵠ: "img/day-bag74.png",
    ᐃΔΔⲆΔⲆΔ: "img/night-bag74.png",
    ΔᐃⲆⵠᐃⵠΔ: "img/day-bag75.png",
    ᐃⵠᐃⲆΔⲆΔ: "img/night-bag75.png",
    ⲆΔⵠΔΔΔⲆ: "img/day-bag76.png",
    ᐃⵠⵠᐃⵠⲆⲆ: "img/night-bag76.png",
    ᐃⵠᐃᐃⲆⲆΔ: "img/day-bag77.png",
    ΔΔⵠᐃⲆΔⵠ: "img/night-bag77.png",
    ⵠⵠΔⵠᐃⵠΔ: "img/day-bag78.png",
    ⵠᐃᐃᐃⵠⲆᐃ: "img/night-bag78.png",
    ⲆⲆΔᐃⵠᐃᐃ: "img/day-bag79.png",
    ᐃΔⵠᐃⲆⵠᐃ: "img/night-bag79.png",
    ΔⲆⲆΔⵠⲆⲆ: "img/day-bag80.png",
    ᐃⵠΔⵠΔΔⵠ: "img/night-bag80.png",
    ᐃⵠⲆᐃⲆⵠⲆ: "img/day-accessory0.png",
    ᐃΔᐃⲆᐃⲆⵠ: "img/day-accessory0-pacques.png",
    ᐃΔⵠⲆⲆⵠᐃ: "img/night-accessory0-pacques.png",
    ΔⲆⵠⵠⵠⲆⲆ: "img/day-accessory13.png",
    ΔΔΔⵠⲆᐃᐃ: "img/night-accessory13.png",
    ΔᐃⵠⵠⲆⲆⵠ: "img/day-accessory14.png",
    ΔΔⲆⲆⲆⲆⵠ: "img/night-accessory14.png",
    ᐃᐃⵠᐃⲆⵠΔ: "img/day-accessory15.png",
    ⲆΔᐃⲆⵠⵠⲆ: "img/night-accessory15.png",
    ᐃᐃᐃΔᐃΔⵠ: "img/day-accessory16.png",
    ΔΔΔⲆᐃᐃⵠ: "img/night-accessory16.png",
    ⲆⲆᐃᐃⲆΔⵠ: "img/day-accessory17.png",
    ᐃᐃⵠⵠᐃⲆⲆ: "img/day-accessory17.png",
    ⵠⲆⵠⲆᐃᐃΔ: "img/day-accessory19.png",
    ᐃΔⵠΔⵠᐃᐃ: "img/night-accessory19.png",
    ⲆⵠⵠⵠⲆⵠⲆ: "img/day-accessory20.png",
    ⲆⵠⵠⲆΔⲆᐃ: "img/night-accessory20.png",
    ΔⵠⲆⵠⲆᐃⲆ: "img/day-accessory21.png",
    ΔⲆⲆⲆΔΔᐃ: "img/night-accessory21.png",
    ⵠᐃΔⵠⲆΔᐃ: "img/day-accessory22.png",
    ΔⲆⵠᐃΔⲆⵠ: "img/night-accessory22.png",
    ΔΔᐃΔΔⵠⲆ: "img/day-accessory23.png",
    ᐃᐃⲆΔΔⲆΔ: "img/night-accessory23.png",
    ⵠᐃΔⲆⲆⲆΔ: "img/day-accessory24.png",
    ΔⲆⲆΔⲆΔⵠ: "img/night-accessory24.png",
    ⲆⵠᐃⲆⵠᐃⵠ: "img/day-accessory25.png",
    ⲆⲆᐃΔⲆⵠΔ: "img/night-accessory25.png",
    ᐃᐃΔΔⵠⲆⲆ: "img/day-accessory26.png",
    ᐃⲆⲆᐃⲆⵠⵠ: "img/night-accessory26.png",
    ᐃⵠⵠⲆⵠⲆⲆ: "img/day-accessory27.png",
    ΔΔⲆⵠⵠᐃᐃ: "img/night-accessory27.png",
    ᐃᐃΔⲆᐃΔⵠ: "img/day-accessory18.png",
    ⵠⲆⲆΔⲆⵠⵠ: "img/night-accessory18.png",
    ⵠΔⲆΔᐃⵠⵠ: "img/day-accessory29.png",
    ⲆᐃᐃΔᐃⵠⲆ: "img/night-accessory29.png",
    ⲆⵠΔΔΔΔΔ: "img/day-accessory30.png",
    ⲆᐃⲆⲆᐃΔΔ: "img/night-accessory30.png",
    ⵠⲆⲆⲆⵠΔΔ: "img/day-accessory31.png",
    ⵠΔΔᐃΔᐃΔ: "img/night-accessory31.png",
    ᐃⵠᐃⵠⲆᐃΔ: "img/day-accessory32.png",
    ⵠⵠⵠⲆⵠΔⲆ: "img/night-accessory32.png",
    ΔᐃΔᐃⵠΔⵠ: "img/day-accessory33.png",
    ᐃⵠΔᐃᐃΔⵠ: "img/night-accessory33.png",
    ⲆⲆΔⵠᐃⵠΔ: "img/day-accessory34.png",
    ΔΔⵠⲆⵠΔⵠ: "img/night-accessory34.png",
    ᐃΔᐃΔᐃⲆΔ: "img/day-accessory35.png",
    ⵠΔᐃⲆⲆⵠΔ: "img/night-accessory35.png",
    ⵠᐃⲆⵠⵠᐃᐃ: "img/day-accessory28.png",
    ⵠᐃⲆⲆᐃΔⵠ: "img/night-accessory28.png",
    ᐃⲆᐃΔⲆⵠΔ: "img/day-accessory36.png",
    ᐃΔⵠᐃᐃⵠΔ: "img/night-accessory36.png",
    ᐃᐃᐃⵠΔⲆΔ: "img/day-accessory37.png",
    ⵠⲆⵠⲆⲆⵠΔ: "img/night-accessory37.png",
    ᐃΔⲆⲆᐃΔΔ: "img/day-accessory39.png",
    Ⲇⵠⵠᐃⵠᐃᐃ: "img/night-accessory39.png",
    ⲆⵠⵠᐃⲆΔΔ: "img/day-accessory40.png",
    ΔⲆⵠᐃⲆⲆᐃ: "img/night-accessory40.png",
    ΔᐃⵠⲆᐃⵠⵠ: "img/day-accessory41.png",
    ᐃΔⵠΔᐃⵠⲆ: "img/night-accessory41.png",
    ⲆⲆⲆⵠⵠⲆⵠ: "img/day-accessory42.png",
    ⲆΔⵠⵠΔΔⵠ: "img/night-accessory42.png",
    ΔⲆⵠᐃᐃⵠⵠ: "img/day-accessory43.png",
    ᐃᐃΔⵠΔⵠΔ: "img/night-accessory43.png",
    ΔΔΔⵠⲆΔⵠ: "img/day-accessory44.png",
    ⲆᐃⲆᐃᐃⲆⲆ: "img/night-accessory44.png",
    ᐃⵠⵠᐃΔⲆΔ: "img/day-accessory38.png",
    ᐃΔΔⲆΔⵠΔ: "img/night-accessory38.png",
    ⲆⵠᐃⲆΔΔΔ: "img/day-accessory46.png",
    ⲆΔⵠⵠΔⲆΔ: "img/night-accessory46.png",
    ΔᐃΔⲆΔΔΔ: "img/day-accessory47.png",
    ⵠⲆᐃΔΔⲆⵠ: "img/night-accessory47.png",
    ⵠΔⲆⲆΔᐃⲆ: "img/day-accessory48.png",
    ⲆⵠᐃᐃⲆⲆᐃ: "img/night-accessory48.png",
    ᐃΔΔΔⵠⵠⵠ: "img/day-accessory49.png",
    ⵠΔΔⵠΔⲆᐃ: "img/night-accessory49.png",
    ⵠⲆⵠⵠΔⲆΔ: "img/day-accessory45.png",
    ᐃΔΔⵠΔΔΔ: "img/night-accessory45.png",
    ⵠΔᐃᐃᐃⲆΔ: "img/day-accessory50.png",
    ᐃⵠⵠⲆⵠΔᐃ: "img/night-accessory50.png",
    ⲆᐃⵠⵠⵠΔⵠ: "img/day-accessory51.png",
    ⵠⵠⲆΔᐃⲆⵠ: "img/night-accessory51.png",
    ⵠⲆᐃⲆⲆᐃᐃ: "img/day-accessory52.png",
    ⲆⲆΔⲆᐃⲆⵠ: "img/night-accessory52.png",
    ᐃᐃⵠⵠΔᐃⲆ: "img/day-accessory53.png",
    ⲆⵠⵠⵠΔᐃΔ: "img/night-accessory53.png",
    ᐃᐃⵠᐃⵠᐃΔ: "img/day-accessory54.png",
    ⵠᐃⲆᐃΔⲆΔ: "img/night-accessory54.png",
    ⵠᐃⵠΔⵠᐃⲆ: "img/day-accessory55.png",
    ᐃⵠⵠΔⵠΔᐃ: "img/night-accessory55.png",
    ᐃⲆᐃΔᐃᐃᐃ: "img/day-accessory56.png",
    ⲆΔᐃΔⵠΔᐃ: "img/night-accessory56.png",
    ΔⵠΔⲆⵠᐃΔ: "img/day-accessory57.png",
    ΔᐃΔᐃⲆᐃⵠ: "img/night-accessory57.png",
    ΔᐃⵠⲆᐃⵠⲆ: "img/day-accessory58.png",
    ⲆᐃΔⵠΔⲆᐃ: "img/night-accessory58.png",
    ⵠⲆⵠⵠⵠⲆⵠ: "img/day-accessory59.png",
    ⵠΔⵠⵠⲆⲆΔ: "img/night-accessory59.png",
    ⵠⲆΔⲆⵠΔᐃ: "img/day-accessory60.png",
    ⲆⲆΔΔⲆΔⵠ: "img/night-accessory60.png",
    ΔⵠⲆΔⲆᐃⲆ: "img/day-accessory61.png",
    ⵠΔⲆᐃⲆⲆⲆ: "img/night-accessory61.png",
    ⲆⵠΔΔⲆᐃᐃ: "img/day-accessory62.png",
    ΔⲆᐃᐃᐃⲆⵠ: "img/night-accessory62.png",
    ΔᐃⵠⲆᐃⲆⲆ: "img/day-accessory63.png",
    ⲆⲆΔⲆⵠΔⵠ: "img/night-accessory63.png",
    ᐃᐃⲆⲆⵠⵠᐃ: "img/day-accessory64.png",
    ΔⲆᐃⲆⵠⵠᐃ: "img/night-accessory64.png",
    ΔᐃΔᐃᐃⲆΔ: "img/day-accessory65.png",
    ΔΔⲆᐃΔᐃΔ: "img/night-accessory65.png",
    ΔΔⲆⲆΔᐃᐃ: "img/day-accessory66.png",
    ΔⲆⲆⵠⵠⵠΔ: "img/night-accessory66.png",
    Ⲇⵠⵠⵠᐃᐃⵠ: "img/day-accessory67.png",
    ⲆᐃⲆᐃΔᐃⵠ: "img/night-accessory67.png",
    ⵠⲆⲆⵠⵠⵠᐃ: "img/day-accessory68.png",
    ⵠᐃΔᐃⲆⲆᐃ: "img/night-accessory68.png",
    ΔⲆⵠⲆⵠᐃΔ: "img/day-accessory69.png",
    ᐃⲆⵠΔᐃΔΔ: "img/night-accessory69.png",
    ⵠΔᐃᐃⲆᐃᐃ: "img/day-accessory70.png",
    ᐃⲆⲆⵠᐃᐃΔ: "img/night-accessory70.png",
    ΔΔⵠᐃⲆⲆΔ: "img/day-accessory71.png",
    ΔⲆⵠⵠⵠⵠᐃ: "img/night-accessory71.png",
    ⲆᐃⲆⲆᐃⲆΔ: "img/day-accessory72.png",
    ΔⵠᐃᐃⲆⲆᐃ: "img/night-accessory72.png",
    ᐃⲆΔΔᐃⵠⲆ: "img/day-accessory73.png",
    ⵠⲆΔᐃᐃᐃⵠ: "img/night-accessory73.png",
    ᐃᐃⵠᐃⲆᐃⲆ: "img/day-accessory74.png",
    ᐃᐃⲆⵠⵠᐃᐃ: "img/night-accessory74.png",
    ΔⲆΔᐃⵠᐃⵠ: "img/day-accessory75.png",
    ΔᐃⲆᐃⲆⵠⵠ: "img/night-accessory75.png",
    ⲆⲆⵠⵠᐃⵠⵠ: "img/day-accessory76.png",
    ᐃⵠΔΔⵠΔⲆ: "img/night-accessory76.png",
    ᐃⵠΔⵠΔᐃΔ: "img/day-accessory77.png",
    ΔᐃᐃⵠⲆΔᐃ: "img/night-accessory77.png",
    ΔΔⲆⵠᐃᐃⲆ: "img/day-accessory78.png",
    ⲆΔⵠᐃᐃᐃⲆ: "img/night-accessory78.png",
    ᐃⵠᐃΔⵠᐃⵠ: "img/day-accessory79.png",
    ⵠⵠΔᐃⵠΔⵠ: "img/night-accessory79.png",
    ⲆⵠΔⵠᐃΔⲆ: "img/day-accessory80.png",
    ΔⵠⲆⵠⵠⲆⲆ: "img/night-accessory80.png",
    ⵠⲆⵠΔΔΔⵠ: "img/day-accessory81.png",
    ⲆᐃᐃΔⲆⲆⲆ: "img/night-accessory81.png",
    ΔΔⵠⲆᐃΔⲆ: "img/day-accessory83.png",
    ᐃⲆⵠΔⲆΔⵠ: "img/night-accessory83.png",
    ⵠⵠⲆΔⵠΔⵠ: "img/day-accessory84.png",
    ΔⲆⲆⵠᐃⲆⲆ: "img/night-accessory84.png",
    ᐃᐃⲆΔᐃᐃΔ: "img/day-accessory85.png",
    ⵠΔᐃⲆⲆⲆᐃ: "img/night-accessory85.png",
    ⲆⲆΔⵠⵠᐃⵠ: "img/day-accessory86.png",
    ⲆΔⵠⲆᐃΔΔ: "img/night-accessory86.png",
    ⵠⲆΔⵠΔⵠⵠ: "img/day-accessory87.png",
    ᐃⵠⵠᐃᐃᐃᐃ: "img/night-accessory87.png",
    ⵠⲆᐃⵠⵠΔⲆ: "img/day-accessory88.png",
    ᐃᐃᐃΔⲆⵠΔ: "img/night-accessory88.png",
    ᐃⲆⵠⵠⵠⲆᐃ: "img/day-accessory89.png",
    ᐃΔⲆⲆⵠΔΔ: "img/night-accessory89.png",
    ᐃⲆΔⲆᐃⲆⲆ: "img/day-accessory90.png",
    ⵠᐃⲆᐃᐃⲆⵠ: "img/night-accessory90.png",
    ᐃⵠΔⲆΔΔⲆ: "img/day-accessory91.png",
    ⲆⵠᐃᐃⵠΔⵠ: "img/night-accessory91.png",
    ⵠⵠΔΔᐃⲆⵠ: "img/day-accessory92.png",
    ΔⵠⵠΔⵠΔⲆ: "img/night-accessory92.png",
    ⵠⵠΔΔⵠⲆΔ: "img/day-accessory93.png",
    ⵠᐃⵠⲆⲆⲆⲆ: "img/night-accessory93.png",
    ⲆⲆⲆⲆⲆⲆⲆ: "img/day-accessory94.png",
    ⵠⲆΔΔⲆΔⵠ: "img/night-accessory94.png",
    ΔᐃⲆⲆⵠⵠⵠ: "img/day-accessory95.png",
    ᐃⵠᐃⵠᐃⲆⵠ: "img/night-accessory95.png",
    ⲆⲆⵠᐃⵠⲆⲆ: "img/day-accessory96.png",
    ⵠⵠⵠΔᐃⲆᐃ: "img/night-accessory96.png",
    ᐃⵠΔⲆΔᐃΔ: "img/day-accessory97.png",
    ᐃΔⲆⲆⵠⵠᐃ: "img/night-accessory97.png",
    ᐃΔᐃΔᐃⵠⲆ: "img/day-accessory98.png",
    ⵠΔⲆⲆᐃᐃⲆ: "img/night-accessory98.png",
    ⲆⲆⲆᐃΔⵠΔ: "img/day-accessory99.png",
    ⵠΔⵠΔΔΔⵠ: "img/night-accessory99.png",
    ΔΔⲆᐃᐃⵠᐃ: "img/day-accessory100.png",
    ΔⲆⵠΔⲆⲆⵠ: "img/night-accessory100.png",
    ⵠΔΔⲆᐃΔⲆ: "img/day-accessory101.png",
    ⲆⵠΔⵠΔΔᐃ: "img/night-accessory101.png",
    ᐃᐃⲆⵠⲆⲆΔ: "img/day-accessory102.png",
    ᐃⲆΔⵠⵠΔᐃ: "img/night-accessory102.png",
    ΔᐃⵠⵠΔⵠᐃ: "img/day-accessory103.png",
    ΔⵠⲆⲆⲆⲆᐃ: "img/night-accessory103.png",
    ΔΔᐃⵠⲆΔᐃ: "img/day-accessory104.png",
    ᐃⲆᐃⲆⲆⵠΔ: "img/night-accessory104.png",
    ⲆΔⵠⲆΔⲆᐃ: "img/day-accessory105.png",
    ⵠⵠᐃⲆᐃᐃⵠ: "img/night-accessory105.png",
    ᐃᐃⵠⲆᐃᐃⵠⵠᐃ: "img/day-accessory106.png",
    ⵠⵠΔᐃⲆⲆⵠⲆⲆ: "img/night-accessory106.png",
    ⵠΔⲆᐃⲆⲆΔᐃᐃ: "img/day-accessory107.png",
    ΔⲆΔΔⵠⲆΔⲆᐃ: "img/night-accessory107.png",
    ⲆΔⲆΔᐃᐃᐃ: "img/day-accessory82.png",
    ᐃⵠⲆⲆᐃᐃᐃ: "img/night-accessory82.png",
    ᐃΔΔⵠⵠⲆΔ: "img/day-book0.png",
    ⲆⲆᐃⵠⵠΔᐃ: "img/night-book0.png",
    ⲆΔⵠⲆΔⲆⲆ: "img/day-book1.png",
    ⵠΔⵠΔⲆΔΔ: "img/night-book1.png",
    ⵠⲆⵠⵠⵠΔᐃ: "img/day-book2.png",
    ᐃⲆᐃⵠΔΔᐃ: "img/night-book2.png",
    ΔᐃⵠⲆᐃΔⵠ: "img/day-book3.png",
    ⵠᐃⲆᐃⵠᐃΔ: "img/night-book3.png",
    ⵠⵠⲆΔᐃᐃⲆ: "img/day-book4.png",
    ⲆⲆΔⵠⵠⲆⵠ: "img/night-book4.png",
    ⲆⵠⵠⵠⵠⲆⵠ: "img/day-book5.png",
    ⲆΔⵠⵠⲆⲆⲆ: "img/night-book5.png",
    ΔᐃⲆⵠΔᐃΔ: "img/day-book6.png",
    ⲆⲆⲆⵠⲆⵠΔ: "img/night-book6.png",
    ⵠΔᐃᐃⲆᐃⲆ: "img/day-book7.png",
    ΔᐃⲆΔᐃΔⲆ: "img/night-book7.png",
    ⵠⲆΔΔΔΔΔ: "img/day-book8.png",
    ⵠⵠᐃⲆⲆᐃΔ: "img/night-book8.png",
    ⵠⵠᐃᐃⵠΔΔ: "img/day-book9.png",
    ᐃⵠΔⲆΔⲆᐃ: "img/night-book9.png",
    ⲆᐃΔⲆΔⵠΔ: "img/day-book10.png",
    ⲆᐃᐃⲆΔⵠⵠ: "img/night-book10.png",
    ⲆⲆᐃⵠⵠΔⵠ: "img/day-book11.png",
    ⵠⲆⵠⵠⲆΔᐃ: "img/night-book11.png",
    ⲆΔΔΔᐃΔΔ: "img/day-book12.png",
    ΔⲆΔⵠⲆΔⲆ: "img/night-book12.png",
    ᐃᐃⵠΔΔⲆΔ: "img/day-book13.png",
    ⵠΔⲆⲆⲆⵠΔ: "img/night-book13.png",
    ΔᐃⲆⲆᐃⲆⲆ: "img/day-book14.png",
    ᐃⲆΔΔⵠⵠᐃ: "img/night-book14.png",
    ⲆⵠⵠⲆⵠΔⵠ: "img/day-book15.png",
    ⵠⲆᐃⵠᐃᐃΔ: "img/night-book15.png",
    ᐃᐃᐃᐃⲆᐃⲆ: "img/day-book16.png",
    ⲆⲆᐃᐃᐃᐃΔ: "img/night-book16.png",
    ⲆᐃⲆⵠᐃΔᐃ: "img/day-book17.png",
    ᐃᐃᐃⲆⵠΔΔ: "img/night-book17.png",
    ⲆΔᐃⲆΔⵠⵠ: "img/day-book18.png",
    ᐃᐃⲆⵠⵠΔΔ: "img/night-book18.png",
    ⵠⵠΔΔⲆᐃⵠ: "img/day-book19.png",
    ᐃⲆᐃᐃᐃᐃⵠ: "img/night-book19.png",
    ⲆΔΔΔⵠⲆᐃ: "img/day-book20.png",
    ᐃⵠⲆⲆᐃⲆⵠ: "img/night-book20.png",
    Δⵠⵠⵠᐃⵠⵠ: "img/day-book21.png",
    ΔⵠⵠⲆⵠΔⲆ: "img/night-book21.png",
    ᐃⲆΔΔᐃⲆⵠ: "img/day-book22.png",
    ⲆΔᐃΔⵠᐃⲆ: "img/night-book22.png",
    ⵠⲆⲆⵠΔᐃⲆ: "img/day-book23.png",
    ᐃⵠⲆᐃΔΔᐃ: "img/night-book23.png",
    ⵠΔΔⲆΔⲆΔ: "img/day-book24.png",
    ⲆᐃΔⵠᐃᐃᐃ: "img/night-book24.png",
    ⵠⵠᐃᐃᐃⵠΔ: "img/day-book25.png",
    ⲆⲆΔⲆΔΔΔ: "img/night-book25.png",
    ΔΔⲆΔⲆΔΔ: "img/day-book26.png",
    ᐃⲆⲆⵠΔΔΔ: "img/night-book26.png",
    ⵠᐃⲆⵠᐃⲆᐃ: "img/day-book27.png",
    ⲆⵠΔⵠⲆⲆⵠ: "img/night-book27.png",
    ⲆⲆΔⲆⵠᐃΔ: "img/day-book28.png",
    ΔᐃᐃⲆᐃᐃᐃ: "img/night-book28.png",
    ⲆⵠᐃΔⵠⵠᐃ: "img/day-book29.png",
    ᐃⵠⲆⲆΔⵠⲆ: "img/night-book29.png",
    ⵠΔᐃⲆⵠΔⲆ: "img/day-book30.png",
    ΔᐃᐃᐃΔᐃⵠ: "img/night-book30.png",
    ⵠⵠᐃᐃᐃΔⵠ: "img/day-book31.png",
    ᐃⵠΔᐃⵠΔⲆ: "img/night-book31.png",
    ⲆΔΔⵠᐃᐃᐃ: "img/day-book32.png",
    ᐃⲆⵠᐃᐃⵠΔ: "img/night-book32.png",
    ΔⵠⵠᐃᐃⵠΔ: "img/day-book33.png",
    ᐃᐃᐃΔᐃⵠⲆ: "img/night-book33.png",
    ⲆⵠΔⲆⲆⵠⲆ: "img/day-book34.png",
    ⵠΔⵠⵠⲆⵠᐃ: "img/night-book34.png",
    ⲆⲆⵠΔⲆⲆⲆ: "img/day-book35.png",
    ⵠⵠᐃⲆΔⵠⵠ: "img/night-book35.png",
    ⵠΔΔⲆⵠΔⲆ: "img/day-book36.png",
    ᐃⲆⵠᐃⲆΔᐃ: "img/night-book36.png",
    ⲆᐃⲆⵠᐃΔΔΔᐃ: "img/day-book37.png",
    ᐃⲆᐃⵠΔⲆΔⲆⲆ: "img/night-book37.png",
    ⵠⵠΔⵠⵠⲆⵠ: "img/day-book38.png",
    ᐃⵠΔᐃᐃⲆᐃ: "img/night-book38.png",
    ⲆⲆᐃⲆᐃⵠΔ: "img/day-book39.png",
    ⵠΔᐃΔᐃⵠΔ: "img/night-book39.png",
    ⵠΔΔⲆⲆⲆᐃ: "img/day-book40.png",
    ⲆⵠᐃΔⵠᐃⲆ: "img/night-book40.png",
    ᐃⵠⵠᐃΔⵠⲆ: "img/day-book41.png",
    ⲆⵠⵠⲆⵠⲆⲆ: "img/night-book41.png",
    ᐃⵠΔⲆⲆᐃᐃ: "img/day-book42.png",
    ᐃⲆΔΔⲆⲆΔ: "img/night-book42.png",
    ᐃⵠⲆᐃⵠⵠᐃ: "img/day-book43.png",
    ⵠⵠᐃᐃᐃⵠⲆ: "img/night-book43.png",
    ᐃⵠⵠΔᐃΔᐃ: "img/day-book44.png",
    ΔΔⵠΔⲆᐃᐃ: "img/night-book44.png",
    ᐃⵠⵠΔᐃⵠᐃ: "img/day-book45.png",
    ΔΔⵠⲆⵠΔⲆ: "img/night-book45.png",
    ⵠΔΔⲆⲆᐃᐃ: "img/day-book46.png",
    ΔⵠΔΔΔΔⲆ: "img/night-book46.png",
    ᐃΔᐃⲆⲆᐃⲆ: "img/day-book47.png",
    ⲆⵠΔᐃᐃΔᐃ: "img/night-book47.png",
    ⲆⵠⵠᐃⲆⲆⵠ: "img/day-book48.png",
    ᐃᐃⵠⲆⲆⲆᐃ: "img/night-book48.png",
    ᐃΔΔΔΔⲆⵠ: "img/day-book49.png",
    ⵠⵠᐃⵠⵠᐃⵠ: "img/night-book49.png",
    ⲆΔΔⲆⵠᐃΔ: "img/day-book50.png",
    ⵠⵠⵠΔⵠⵠⲆ: "img/night-book50.png",
    ⲆⵠⵠΔⵠᐃΔ: "img/day-crate1.png",
    ᐃⵠΔⲆⲆᐃⵠ: "img/night-crate1.png",
    ⲆᐃΔⵠᐃΔⵠ: "img/day-crate2.png",
    ⲆᐃᐃᐃᐃᐃⲆ: "img/night-crate2.png",
    ⵠΔᐃⲆⵠⲆⲆ: "img/day-crate3.png",
    ⵠᐃⲆⲆⵠⵠᐃ: "img/night-crate3.png",
    ᐃΔⲆⵠΔΔⲆ: "img/day-crate4.png",
    ⲆⵠⲆⲆⵠⲆⵠ: "img/night-crate4.png",
    ⲆΔⲆⵠᐃⲆᐃ: "img/day-crate5.png",
    ᐃⲆΔⲆⵠⲆᐃ: "img/night-crate5.png",
    ΔⲆᐃⲆⲆΔⲆ: "img/day-crate6.png",
    ΔⲆΔⲆⲆⲆᐃ: "img/night-crate6.png",
    ⵠᐃⲆᐃⲆⵠΔ: "img/day-crate7.png",
    ᐃᐃⵠⲆⲆΔᐃ: "img/night-crate7.png",
    ΔⲆΔⵠΔᐃⲆ: "img/day-crate8.png",
    ᐃⲆΔⲆⵠΔⲆ: "img/night-crate8.png",
    ⵠⵠⵠΔⵠⵠΔ: "img/day-crate9.png",
    ᐃᐃⲆΔΔᐃⲆ: "img/night-crate9.png",
    ⵠⲆⵠΔΔⲆΔ: "img/day-crate10.png",
    ΔⵠⵠᐃΔⵠⲆ: "img/night-crate10.png",
    ⲆⲆⲆᐃⵠⵠᐃ: "img/day-crate11.png",
    ᐃΔΔᐃΔΔⵠ: "img/night-crate11.png",
    ΔᐃΔⵠⵠᐃⲆ: "img/day-crate12.png",
    ᐃᐃⲆᐃⲆΔᐃ: "img/night-crate12.png",
    ΔΔᐃᐃΔΔⲆ: "img/day-crate13.png",
    ΔΔⲆᐃⵠⵠᐃ: "img/night-crate13.png",
    ᐃΔⲆᐃΔⲆΔ: "img/day-crate14.png",
    ᐃᐃⲆᐃΔᐃⵠ: "img/night-crate14.png",
    ⵠⵠᐃᐃⵠΔⲆ: "img/day-crate15.png",
    ⲆΔΔⲆᐃⲆⵠ: "img/night-crate15.png",
    ᐃⲆⲆΔⲆⲆⲆ: "img/day-crate16.png",
    ⵠᐃⵠⵠⵠΔΔ: "img/night-crate16.png",
    ⵠⲆⵠⵠᐃⲆⵠ: "img/day-crate17.png",
    ⲆᐃⵠⲆⲆⵠⵠ: "img/night-crate17.png",
    ᐃⵠΔⵠⵠΔⲆ: "img/day-crate18.png",
    ⲆⵠⵠᐃⵠⲆΔ: "img/night-crate18.png",
    ΔΔΔΔⵠΔΔ: "img/day-crate19.png",
    ⲆΔΔⵠᐃᐃⵠ: "img/night-crate19.png",
    ⵠⵠⵠΔⵠΔᐃ: "img/day-crate20.png",
    ⲆΔⲆⲆᐃⵠⲆ: "img/night-crate20.png",
    ⵠᐃⵠⵠⵠⲆⲆ: "img/day-crate21.png",
    ΔⵠΔᐃΔⲆⲆ: "img/night-crate21.png",
    ⲆΔⵠᐃΔᐃΔ: "img/day-crate22.png",
    ᐃΔⲆⵠᐃΔⲆ: "img/night-crate22.png",
    ⵠᐃᐃⲆΔⲆⵠ: "img/day-crate23.png",
    ⲆᐃⲆᐃΔᐃΔ: "img/night-crate23.png",
    ΔΔΔᐃⵠΔᐃ: "img/day-crate24.png",
    ⵠᐃⵠⲆᐃⲆⵠ: "img/night-crate24.png",
    ⲆⲆᐃΔᐃⵠⲆ: "img/day-crate25.png",
    ᐃⲆΔⲆⲆⵠⵠ: "img/night-crate25.png",
    ΔᐃᐃⵠⲆᐃΔ: "img/day-crate26.png",
    ⲆⲆΔᐃⲆⵠᐃ: "img/night-crate26.png",
    ⲆᐃⵠⲆΔΔⵠ: "img/day-crate27.png",
    ⵠΔΔⲆⵠⲆⲆ: "img/night-crate27.png",
    ᐃΔⵠⵠⵠᐃⲆ: "img/day-crate28.png",
    ⵠⲆᐃΔΔΔᐃ: "img/night-crate28.png",
    ᐃᐃᐃᐃⵠᐃⵠ: "img/day-crate29.png",
    ⲆΔΔⲆⵠⲆⲆ: "img/night-crate29.png",
    ⵠⲆⲆᐃⵠΔⵠ: "img/day-crate30.png",
    ᐃⲆΔΔⵠⵠⵠ: "img/night-crate30.png",
    ⵠⲆᐃⲆⲆᐃΔ: "img/day-crate31.png",
    ⲆΔᐃΔΔᐃⲆ: "img/night-crate31.png",
    ΔᐃᐃᐃᐃⵠⲆ: "img/day-crate32.png",
    ⵠⵠⲆⲆᐃⲆⵠ: "img/night-crate32.png",
    ⵠⵠΔᐃⵠⲆᐃ: "img/day-crate33.png",
    ⲆᐃΔⲆⵠⲆΔ: "img/night-crate33.png",
    ⲆⲆᐃᐃᐃᐃⲆ: "img/day-crate34.png",
    ⵠΔⲆⵠⵠⵠᐃ: "img/night-crate34.png",
    ᐃⲆⵠΔⵠⲆⵠ: "img/day-crate35.png",
    ᐃⲆⲆⵠᐃⵠᐃ: "img/night-crate35.png",
    ⵠᐃⵠᐃⲆᐃᐃ: "img/day-crate36.png",
    ᐃᐃΔⲆΔⲆⲆ: "img/night-crate36.png",
    ⵠᐃⵠᐃⵠⲆᐃ: "img/day-crate37.png",
    ᐃⵠᐃᐃⲆⲆᐃ: "img/night-crate37.png",
    ΔⲆⵠΔⵠΔΔ: "img/day-crate38.png",
    ΔΔᐃⲆΔᐃⵠ: "img/night-crate38.png",
    ⲆⵠΔⲆⲆⲆᐃ: "img/day-crate39.png",
    ⲆⵠⲆⲆΔⲆᐃ: "img/night-crate39.png",
    ⵠⵠⵠⵠⵠᐃⵠ: "img/day-crate40.png",
    ⵠᐃΔⲆⵠΔᐃ: "img/night-crate40.png",
    ΔⲆΔⲆΔΔᐃ: "img/day-crate41.png",
    ᐃᐃⲆⵠᐃΔᐃ: "img/night-crate41.png",
    ᐃⵠΔΔⲆⵠᐃ: "img/day-crate42.png",
    ΔᐃⵠΔᐃΔⲆ: "img/night-crate42.png",
    ⵠΔⵠᐃΔⵠⵠ: "img/day-crate43.png",
    ⵠⲆⵠⵠΔⵠⲆ: "img/night-crate43.png",
    ΔᐃⲆᐃΔⲆΔ: "img/day-crate44.png",
    ᐃΔΔΔΔⲆᐃ: "img/night-crate44.png",
    ⲆΔⵠΔᐃⵠⵠ: "img/day-crate45.png",
    ⵠⲆⵠᐃⵠᐃᐃ: "img/night-crate45.png",
    ΔᐃⵠⵠⲆᐃΔ: "img/day-crate46.png",
    ⲆⲆⵠΔⵠⲆⲆ: "img/night-crate46.png",
    ΔΔⲆᐃΔΔⲆ: "img/day-crate47.png",
    ΔᐃΔⵠΔⲆᐃ: "img/night-crate47.png",
    ⲆⲆⲆⲆᐃΔΔ: "img/day-crate48.png",
    ΔⲆᐃⵠΔⵠᐃ: "img/night-crate48.png",
    ⵠⵠⲆᐃΔⵠᐃ: "img/day-crate49.png",
    ᐃᐃΔⵠΔⵠⵠ: "img/night-crate49.png",
    ΔⵠⵠⵠᐃⵠⲆ: "img/day-crate50.png",
    ⲆⲆⵠⵠⲆᐃΔ: "img/night-crate50.png",
    ⵠᐃⲆΔΔⲆⵠ: "img/day-crate51.png",
    ΔᐃⲆⲆⲆᐃΔ: "img/night-crate51.png",
    ⵠΔΔΔᐃⵠᐃ: "img/day-crate52.png",
    ᐃⲆⵠᐃⲆⵠΔ: "img/night-crate52.png",
    ⵠⲆᐃΔⵠⲆⲆ: "img/day-crate53.png",
    ⵠⲆⲆⵠⲆΔᐃ: "img/night-crate53.png",
    Ⲇᐃᐃᐃⵠⵠᐃ: "img/day-crate54.png",
    ⲆⲆⵠᐃᐃΔⲆ: "img/night-crate54.png",
    ⲆᐃᐃᐃΔᐃⵠ: "img/day-crate55.png",
    ⵠⲆⵠⵠΔⲆⵠ: "img/night-crate55.png",
    ᐃⲆⲆΔⵠΔⵠ: "img/day-crate56.png",
    ᐃⲆⲆⲆⲆⲆⲆ: "img/night-crate56.png",
    ΔᐃⲆᐃⵠⲆⵠ: "img/day-crate57.png",
    ⲆᐃⲆⲆⵠⲆⵠ: "img/night-crate57.png",
    ⵠᐃΔᐃⲆΔⵠ: "img/day-crate58.png",
    ΔⵠᐃⲆⵠᐃⲆ: "img/night-crate58.png",
    ΔⲆΔⲆⵠⲆᐃ: "img/day-crate59.png",
    ᐃⲆΔᐃΔᐃΔ: "img/night-crate59.png",
    ⲆΔΔⲆᐃⵠⵠ: "img/day-crate60.png",
    Δⵠⵠᐃᐃᐃᐃ: "img/night-crate60.png",
    ΔΔΔⵠⵠⵠⲆ: "img/day-crate61.png",
    ⵠΔⲆⵠⲆΔⲆ: "img/night-crate61.png",
    ⵠⲆⵠΔⲆⲆᐃ: "img/day-crate62.png",
    ᐃⲆΔᐃⲆⲆᐃ: "img/night-crate62.png",
    ᐃⵠᐃᐃΔⵠΔ: "img/day-crate63.png",
    ⵠⵠᐃᐃⲆⵠᐃ: "img/night-crate63.png",
    ΔᐃⲆΔΔᐃⲆ: "img/day-crate64.png",
    ⲆΔΔⲆᐃⲆⲆ: "img/night-crate64.png",
    ᐃᐃᐃᐃᐃΔⲆ: "img/day-crate65.png",
    ᐃᐃⲆⵠΔΔᐃ: "img/night-crate65.png",
    ⵠᐃᐃⵠᐃⲆⲆ: "img/day-crate66.png",
    ΔᐃⲆᐃΔⲆᐃ: "img/night-crate66.png",
    ᐃⲆᐃᐃΔⲆᐃ: "img/day-crate67.png",
    ⲆⵠⵠⲆᐃᐃΔ: "img/night-crate67.png",
    ⲆⲆᐃⵠᐃᐃᐃ: "img/day-crate68.png",
    ⲆⵠᐃⲆⲆⵠᐃ: "img/night-crate68.png",
    ⲆⲆⵠⲆᐃⵠⵠ: "img/day-crate69.png",
    ⲆΔⲆᐃᐃΔΔ: "img/night-crate69.png",
    ⲆᐃⲆΔⲆⵠⵠ: "img/day-crate70.png",
    ⲆⵠᐃᐃᐃᐃⲆ: "img/night-crate70.png",
    ΔⲆⲆᐃᐃⵠⵠ: "img/day-crate71.png",
    ᐃⵠⲆⵠⵠΔᐃ: "img/night-crate71.png",
    ⲆᐃΔΔⲆⲆⵠ: "img/day-crate72.png",
    ΔⲆΔⵠᐃⵠΔ: "img/night-crate72.png",
    ⲆⲆⵠⲆⲆⵠⲆ: "img/day-crate73.png",
    ⲆᐃᐃΔΔⵠΔ: "img/night-crate73.png",
    ΔΔⵠΔᐃⲆᐃ: "img/day-crate74.png",
    ⵠΔᐃᐃⵠⵠⲆ: "img/night-crate74.png",
    ⵠᐃᐃΔⵠⵠⲆ: "img/day-crate75.png",
    ΔΔⲆᐃⲆΔⲆ: "img/night-crate75.png",
    ⲆᐃᐃⲆⲆⵠᐃ: "img/day-crate76.png",
    ΔⲆⵠᐃⵠⲆΔ: "img/night-crate76.png",
    ΔⲆΔⲆⵠⵠⵠ: "img/day-crate77.png",
    ᐃⵠΔⲆⵠΔΔ: "img/night-crate77.png",
    ⵠⵠⲆᐃⵠΔⲆ: "img/day-crate78.png",
    ᐃⲆᐃᐃⵠⵠⲆ: "img/night-crate78.png",
    ⵠΔᐃⵠⵠᐃᐃ: "img/day-crate79.png",
    ΔᐃΔΔⲆΔΔ: "img/night-crate79.png",
    ΔΔᐃⲆⲆᐃΔ: "img/day-herb0.png",
    ⲆΔⵠᐃᐃⲆⲆ: "img/day-herb1.png",
    ⲆⲆⵠⵠⲆⵠΔ: "img/day-herb2.png",
    ⲆᐃᐃⲆⲆΔⲆ: "img/day-herb3.png",
    ⲆⵠⵠⲆᐃᐃᐃ: "img/day-herb4.png",
    ⵠⲆΔΔΔⵠΔ: "img/day-herb5.png",
    ⲆᐃⲆⵠⲆΔᐃ: "img/day-herb6.png",
    ⵠⵠΔⲆⵠⵠⵠ: "img/day-herb7.png",
    ᐃⲆΔᐃΔⲆⵠ: "img/day-herb8.png",
    ᐃᐃΔΔᐃΔΔ: "img/day-herb9.png",
    ⲆΔⲆⲆⲆⵠⲆ: "img/day-herb10.png",
    ⲆΔᐃᐃⲆΔᐃ: "img/day-herb11.png",
    ᐃⲆⵠⲆⲆΔⵠ: "img/day-herb12.png",
    ΔⲆⲆⲆᐃⲆⲆ: "img/day-herb13.png",
    ΔⲆⵠᐃⵠⲆⲆ: "img/day-herb14.png",
    ΔⵠᐃⲆⲆᐃᐃ: "img/day-herb15.png",
    ⲆΔⵠⲆᐃⲆⲆ: "img/day-shell0.png",
    ΔᐃΔⵠⵠⲆⵠ: "img/day-shell1.png",
    ⵠΔⵠΔⲆⵠᐃ: "img/day-shell2.png",
    ΔⵠⲆΔᐃᐃⲆ: "img/day-leaf1.png",
    ᐃⵠᐃΔⲆⵠᐃ: "img/day-leaf2.png",
    ᐃᐃᐃⵠⵠⲆⲆ: "img/day-leaf3.png",
    ΔΔⲆΔⲆⲆⵠ: "img/day-leaf4.png",
    ⲆⵠⵠⲆᐃⵠⲆ: "img/day-leaf5.png",
    ⵠⲆΔᐃⵠΔⲆ: "img/day-leaf6.png",
    ⵠⵠⵠΔΔᐃᐃ: "img/day-leaf7.png",
    ΔᐃⵠⲆⲆᐃᐃ: "img/day-leaf8.png",
    Δⵠᐃⵠᐃᐃᐃ: "img/day-rock0.png",
    ⲆΔΔⲆᐃⲆΔ: "img/day-rock1.png",
    ΔᐃⲆⵠⲆⵠᐃ: "img/day-rock2.png",
    ⵠΔⵠᐃⲆⲆᐃ: "img/day-rock3.png",
    ⲆⲆⲆⵠⲆᐃᐃ: "img/day-rock4.png",
    ⵠⲆⲆⲆⵠΔⵠ: "img/day-rock5.png",
    ⲆⵠⵠΔⵠⲆᐃ: "img/day-rock6.png",
    ⲆⲆΔⲆⵠⵠΔ: "img/day-rock7.png",
    ΔᐃᐃΔΔΔᐃ: "img/day-rock8.png",
    ⲆⲆΔᐃᐃⵠΔ: "img/day-rock9.png",
    ⲆⲆΔᐃΔⲆⵠ: "img/day-rock10.png",
    ᐃⵠⲆᐃⲆⲆΔ: "img/day-rock11.png",
    ᐃⵠᐃᐃΔᐃᐃ: "img/day-rock12.png",
    ᐃΔⲆⵠΔΔⵠ: "img/day-rock13.png",
    ⵠΔᐃᐃΔΔⲆ: "img/day-flower1.png",
    ⲆᐃⲆΔΔᐃⵠ: "img/day-flower2.png",
    ᐃΔⲆⵠⵠΔⲆ: "img/day-flower3.png",
    ᐃⵠⲆᐃΔΔⲆ: "img/day-flower4.png",
    ⵠⵠⲆⵠΔⲆΔ: "img/day-flower5.png",
    ΔⵠⲆⵠᐃⵠΔ: "img/day-flower6.png",
    ᐃⲆⵠⲆⵠᐃⵠ: "img/day-flower7.png",
    ⵠⵠⵠⲆⵠᐃⵠ: "img/day-flower8.png",
    ⵠⵠⵠⵠᐃⵠᐃ: "img/day-flower9.png",
    ⲆΔⲆⲆⵠΔΔ: "img/day-herb16.png",
    ᐃΔᐃΔᐃⲆᐃ: "img/day-herb17.png",
    ⲆᐃⲆⲆⲆⲆΔ: "img/day-herb18.png",
    ⵠΔᐃⵠⵠΔᐃ: "img/day-herb19.png",
    ⲆⲆⵠΔᐃΔΔ: "img/day-herb20.png",
    ⲆΔⵠᐃᐃⲆᐃ: "img/day-herb21.png",
    ᐃᐃⲆΔΔⲆⵠ: "img/night-herb0.png",
    ᐃΔⵠΔᐃⵠΔ: "img/night-herb1.png",
    ᐃⵠⲆᐃⵠⲆⵠ: "img/night-herb2.png",
    ⵠⵠᐃᐃⵠⵠⵠ: "img/night-herb3.png",
    ⲆⲆᐃⲆⲆⵠᐃ: "img/night-herb4.png",
    ΔⲆⲆΔⵠΔⲆ: "img/night-herb5.png",
    ΔᐃΔᐃΔⲆⵠ: "img/night-herb6.png",
    ΔᐃᐃⲆⲆΔᐃ: "img/night-herb7.png",
    ⲆⲆᐃⵠᐃᐃⲆ: "img/night-herb8.png",
    ᐃΔⵠᐃⲆᐃΔ: "img/night-herb9.png",
    ᐃΔᐃⵠⵠᐃⲆ: "img/night-herb10.png",
    ⲆⵠᐃΔⲆΔΔ: "img/night-herb11.png",
    ΔⵠΔΔⲆⵠⲆ: "img/night-herb12.png",
    ⲆΔΔᐃⵠΔⵠ: "img/night-herb13.png",
    ⲆΔⲆⲆⲆⲆⵠ: "img/night-herb14.png",
    ΔⲆⵠⲆⲆΔᐃ: "img/night-herb15.png",
    ᐃⵠΔⵠΔΔᐃ: "img/night-shell0.png",
    ΔⲆⵠΔⲆᐃⲆ: "img/night-shell1.png",
    ⲆΔⵠᐃᐃᐃΔ: "img/night-shell2.png",
    ᐃᐃΔΔⵠᐃᐃ: "img/night-leaf1.png",
    ᐃΔⵠⲆⵠⲆⵠ: "img/night-leaf2.png",
    ⲆΔᐃⵠΔⲆᐃ: "img/night-leaf3.png",
    ΔᐃᐃᐃⲆᐃⲆ: "img/night-leaf4.png",
    ⵠΔⲆΔⵠⲆᐃ: "img/night-leaf5.png",
    ΔΔΔᐃᐃΔⲆ: "img/night-leaf6.png",
    ⵠΔΔⲆⲆΔⵠ: "img/night-leaf7.png",
    ΔᐃⵠΔⵠⲆΔ: "img/night-leaf8.png",
    ᐃⲆⲆⵠⲆᐃⲆ: "img/night-rock0.png",
    ⵠᐃⲆΔⵠⲆⲆ: "img/night-rock1.png",
    ΔᐃⵠᐃΔⲆⵠ: "img/night-rock2.png",
    ΔⵠⲆⲆΔⵠⵠ: "img/night-rock3.png",
    ⲆⵠΔⵠⲆΔΔ: "img/night-rock4.png",
    ⲆᐃⲆΔᐃᐃΔ: "img/night-rock5.png",
    ⲆΔⲆⵠᐃᐃΔ: "img/night-rock6.png",
    ⲆⲆⵠⵠΔⲆᐃ: "img/night-rock7.png",
    ΔΔΔⲆⵠⵠᐃ: "img/night-rock8.png",
    ΔⲆⲆΔⵠⲆᐃ: "img/night-rock9.png",
    ⲆⵠᐃΔΔᐃⵠ: "img/night-rock10.png",
    ΔⲆᐃⵠⲆΔᐃ: "img/night-rock11.png",
    ᐃⲆⵠΔΔᐃᐃ: "img/night-rock12.png",
    ΔᐃⵠΔⵠᐃⲆ: "img/night-rock13.png",
    ⲆⵠⵠⵠΔⲆⲆ: "img/night-flower1.png",
    ΔᐃⲆᐃⵠᐃⵠ: "img/night-flower2.png",
    ᐃⵠᐃΔΔⲆᐃ: "img/night-flower3.png",
    ⵠⵠⲆⲆⲆΔΔ: "img/night-flower4.png",
    ⵠΔΔΔΔⲆᐃ: "img/night-flower5.png",
    ⲆⵠⵠΔᐃⵠᐃ: "img/night-flower6.png",
    ⲆⵠⲆⵠᐃⲆⵠ: "img/night-flower7.png",
    ᐃⲆⵠΔⵠⵠΔ: "img/night-flower8.png",
    ΔⵠⵠᐃⲆⲆⵠ: "img/night-flower9.png",
    ⵠΔⵠΔⵠΔᐃ: "img/night-herb16.png",
    ⲆⲆⲆᐃⵠⵠⵠ: "img/night-herb17.png",
    ⲆⲆⲆⵠⲆᐃΔ: "img/night-herb18.png",
    ΔᐃⵠⲆⵠᐃⵠ: "img/night-herb19.png",
    ΔᐃⲆⲆⵠΔᐃ: "img/night-herb20.png",
    ᐃΔΔⲆᐃᐃΔ: "img/night-herb21.png",
    ⲆⵠⵠⲆΔⲆΔ: "img/day-river000-010-000.png",
    ⵠⲆⲆΔᐃⲆᐃ: "img/day-river000-010-010.png",
    ΔᐃⲆᐃΔᐃⲆ: "img/day-river000-011-000.png",
    ⵠⵠΔⵠΔΔᐃ: "img/day-river000-011-010.png",
    ᐃΔⲆΔⲆⲆᐃ: "img/day-river000-011-011.png",
    ⲆⵠⵠΔⵠᐃⲆ: "img/day-river000-110-000.png",
    ⲆⲆⲆⲆⲆⲆⵠ: "img/day-river000-110-010.png",
    ⲆᐃⲆⵠⵠΔⵠ: "img/day-river000-110-110.png",
    ΔᐃΔⲆΔⵠⲆ: "img/day-river000-111-000.png",
    ᐃΔᐃⵠⵠᐃᐃ: "img/day-river000-111-010.png",
    ⲆⲆⵠⲆᐃΔᐃ: "img/day-river000-111-011.png",
    ᐃⲆⵠⲆᐃΔΔ: "img/day-river000-111-110.png",
    ⵠᐃⲆᐃΔᐃⲆ: "img/day-river000-111-111.png",
    ΔⵠᐃᐃⵠⵠⲆ: "img/day-river010-010-000.png",
    ⲆⲆᐃⲆⵠⵠⵠ: "img/day-river010-010-010.png",
    ΔΔᐃΔΔΔᐃ: "img/day-river010-011-000.png",
    ᐃⲆⲆᐃᐃⵠⲆ: "img/day-river010-011-010.png",
    ⲆⵠᐃⲆⲆⲆΔ: "img/day-river010-011-011.png",
    ⲆᐃΔᐃⲆⵠΔ: "img/day-river010-110-000.png",
    ⲆⵠΔⵠΔΔⲆ: "img/day-river010-110-010.png",
    ⵠᐃⲆΔᐃᐃⲆ: "img/day-river010-110-110.png",
    ᐃᐃΔⲆᐃⵠᐃ: "img/day-river010-111-000.png",
    ⵠᐃⵠⵠΔΔⵠ: "img/day-river010-111-010.png",
    ΔⵠⲆΔᐃᐃⵠ: "img/day-river010-111-011.png",
    ⲆΔⲆΔⲆⲆⲆ: "img/day-river010-111-110.png",
    ΔⲆⲆⵠⲆⲆΔ: "img/day-river010-111-111.png",
    ⲆⵠΔⵠᐃⵠⵠ: "img/day-river011-011-000.png",
    ⵠⲆΔⵠΔⵠⲆ: "img/day-river011-011-010.png",
    ⲆⵠΔΔⲆᐃⵠ: "img/day-river011-011-011.png",
    ᐃᐃⵠΔΔⵠΔ: "img/day-river011-111-000.png",
    ᐃⵠΔᐃⵠⲆΔ: "img/day-river011-111-010.png",
    ⵠΔⵠⵠΔΔᐃ: "img/day-river011-111-011.png",
    ᐃΔⲆⵠᐃⵠⵠ: "img/day-river011-111-110.png",
    ᐃΔⲆⲆⵠⲆⲆ: "img/day-river011-111-111.png",
    ΔⲆⲆⲆⲆᐃⲆ: "img/day-river110-110-000.png",
    ΔⲆΔⵠⵠⵠΔ: "img/day-river110-110-010.png",
    ⲆⵠΔⲆⵠⵠᐃ: "img/day-river110-110-110.png",
    ⵠᐃᐃⵠᐃᐃᐃ: "img/day-river110-111-000.png",
    ΔΔᐃΔᐃᐃΔ: "img/day-river110-111-010.png",
    ᐃⲆⲆᐃΔΔⵠ: "img/day-river110-111-011.png",
    ⲆΔⵠΔⵠⵠⲆ: "img/day-river110-111-110.png",
    ⲆⵠⵠΔⵠΔᐃ: "img/day-river110-111-111.png",
    ᐃⵠⲆⲆⵠΔⲆ: "img/day-river111-111-011.png",
    ᐃⵠⵠΔⵠⲆⲆ: "img/day-river111-111-110.png",
    ᐃⵠⲆⲆⵠΔⲆ: "img/day-river111-111-011.png",
    ᐃΔΔΔⲆΔᐃ: "img/day-river111-111-000.png",
    ⲆⵠΔΔⲆΔᐃ: "img/day-river111-111-111.png",
    ⲆᐃⲆΔⵠΔᐃ: "img/day-river111-111-010.png",
    ᐃᐃⲆⲆⵠⵠⲆ: "img/night-river000-010-000.png",
    ᐃⵠᐃᐃΔᐃⵠ: "img/night-river000-010-010.png",
    ⲆᐃᐃⲆⵠⵠⵠ: "img/night-river000-011-000.png",
    ᐃⵠᐃⵠᐃⵠⲆ: "img/night-river000-011-010.png",
    ΔᐃᐃⵠⲆᐃⵠ: "img/night-river000-011-011.png",
    ᐃⵠΔᐃⲆΔΔ: "img/night-river000-110-000.png",
    ᐃⲆᐃᐃⵠⵠⵠ: "img/night-river000-110-010.png",
    ⲆⵠⲆᐃⵠⵠⲆ: "img/night-river000-110-110.png",
    ⵠᐃᐃᐃΔⵠⵠ: "img/night-river000-111-000.png",
    ⲆⲆⲆⲆΔΔⲆ: "img/night-river000-111-010.png",
    ⲆᐃᐃΔΔⲆᐃ: "img/night-river000-111-011.png",
    ᐃⲆⵠⲆᐃⲆⲆ: "img/night-river000-111-110.png",
    ΔⲆᐃΔΔⵠΔ: "img/night-river000-111-111.png",
    ⲆⵠⵠⵠᐃΔΔ: "img/night-river010-010-000.png",
    ΔᐃᐃⵠᐃᐃⲆ: "img/night-river010-010-010.png",
    ΔᐃⵠΔⲆⵠᐃ: "img/night-river010-011-000.png",
    ⲆⲆⵠⲆⲆⲆΔ: "img/night-river010-011-010.png",
    ΔΔⲆΔⵠᐃⲆ: "img/night-river010-011-011.png",
    ΔΔΔΔⲆⵠΔ: "img/night-river010-110-000.png",
    ⵠⲆⵠⵠⵠⵠⲆ: "img/night-river010-110-010.png",
    ᐃⲆⵠᐃᐃΔΔ: "img/night-river010-110-110.png",
    ⲆⲆⲆⵠᐃΔᐃ: "img/night-river010-111-000.png",
    ⲆⲆΔΔᐃᐃΔ: "img/night-river010-111-010.png",
    ᐃᐃⵠⵠᐃⵠⲆ: "img/night-river010-111-011.png",
    ΔⲆⵠᐃⲆⵠⵠ: "img/night-river010-111-110.png",
    ᐃⲆⵠⵠᐃⲆΔ: "img/night-river010-111-111.png",
    ⵠⵠᐃΔⲆᐃΔ: "img/night-river011-011-000.png",
    ᐃⵠⲆⵠᐃⵠΔ: "img/night-river011-011-010.png",
    ᐃΔΔⵠⵠᐃⵠ: "img/night-river011-011-011.png",
    ⵠᐃᐃΔⵠᐃΔ: "img/night-river011-111-000.png",
    ΔⲆΔⵠΔΔⵠ: "img/night-river011-111-010.png",
    ᐃⵠΔΔⲆΔΔ: "img/night-river011-111-011.png",
    ΔΔⲆⵠⵠⲆΔ: "img/night-river011-111-110.png",
    ΔΔⲆᐃⲆⵠⲆ: "img/night-river011-111-111.png",
    ᐃΔⲆΔⵠⵠⵠ: "img/night-river110-110-000.png",
    ᐃⵠᐃΔⵠⲆⵠ: "img/night-river110-110-010.png",
    ᐃⲆᐃΔΔⲆⲆ: "img/night-river110-110-110.png",
    ΔΔⵠᐃΔⲆΔ: "img/night-river110-111-000.png",
    ΔΔⲆᐃⲆΔⵠ: "img/night-river110-111-010.png",
    ΔⵠᐃⲆⵠⵠⲆ: "img/night-river110-111-011.png",
    ᐃΔⵠᐃᐃᐃΔ: "img/night-river110-111-110.png",
    ⵠᐃᐃᐃᐃⵠᐃ: "img/night-river110-111-111.png",
    ΔⲆⵠⲆⲆᐃΔ: "img/night-river111-111-011.png",
    ᐃᐃᐃΔⲆᐃΔ: "img/night-river111-111-110.png",
    ΔⲆⵠⲆⲆᐃΔ: "img/night-river111-111-011.png",
    ᐃᐃᐃΔⵠⲆⲆ: "img/night-river111-111-000.png",
    ⲆⵠⵠⲆⲆⲆΔ: "img/night-river111-111-111.png",
    ᐃⵠⵠΔⵠΔⵠ: "img/night-river111-111-010.png",
    ⵠΔⵠⵠΔᐃΔ: "img/day-pebblecompo1.png",
    ⵠΔᐃΔᐃ: "img/day-pebblecompo2.png",
    ᐃⵠⵠⵠᐃ: "img/day-pebblecompo3.png",
    ⵠⵠᐃᐃΔᐃⵠ: "img/day-pebblecompo4.png",
    ⵠⲆᐃⲆⲆ: "img/day-pebblecompo5.png",
    ΔΔΔⲆⲆ: "img/day-pebblecompo6.png",
    ΔⲆⵠΔΔ: "img/day-pebblecompo7.png",
    ⲆⲆⵠᐃΔⲆΔ: "img/day-pebblecompo8.png",
    ΔⲆΔⵠⵠⲆΔ: "img/day-pebblecompo9.png",
    ᐃᐃⵠᐃΔΔⵠ: "img/day-pebblecompo10.png",
    ᐃᐃⲆⲆΔ: "img/day-pebblecompo11.png",
    Δⵠⵠⵠⵠⵠⵠ: "img/day-pebblecompo12.png",
    ᐃⵠᐃΔⵠⵠᐃ: "img/day-pebblecompo13.png",
    ⵠⲆⲆΔᐃΔⲆ: "img/day-pebblecompo14.png",
    ⲆⲆⲆⲆᐃⵠᐃ: "img/day-pebblecompo15.png",
    ⲆᐃⲆⲆⵠᐃⵠ: "img/day-pebblecompo16.png",
    ⵠΔⲆⲆΔ: "img/day-pebblecompo17.png",
    ⵠΔᐃⵠΔⲆΔ: "img/day-pebblecompo18.png",
    ΔⵠⲆᐃΔⵠᐃ: "img/day-pebblecompo19.png",
    Δⵠᐃⵠᐃ: "img/day-pebblecompo20.png",
    ΔᐃᐃⵠⲆ: "img/day-pebblecompo21.png",
    ⲆΔⲆⲆᐃⲆⲆ: "img/day-pebblecompo22.png",
    ᐃΔΔᐃⲆⲆⵠ: "img/day-pebblecompo23.png",
    ΔⵠⵠᐃᐃΔⲆ: "img/day-pebblecompo24.png",
    ⲆᐃⲆᐃⲆ: "img/day-pebblecompo25.png",
    ⵠΔⲆᐃⲆ: "img/day-pebblecompo26.png",
    ΔⲆⵠᐃᐃⵠᐃ: "img/day-pebblecompo27.png",
    ᐃᐃⵠᐃᐃ: "img/day-pebblecompo28.png",
    ⲆⵠⵠΔⲆⲆⵠ: "img/night-pebblecompo1.png",
    ΔᐃⲆⲆⵠ: "img/night-pebblecompo2.png",
    ⲆΔΔΔΔ: "img/night-pebblecompo3.png",
    ᐃⵠᐃⵠΔⵠⵠ: "img/night-pebblecompo4.png",
    ⲆΔΔⲆⵠ: "img/night-pebblecompo5.png",
    ΔΔⵠΔΔ: "img/night-pebblecompo6.png",
    ΔⵠⵠΔⵠ: "img/night-pebblecompo7.png",
    ΔⲆⲆⲆᐃᐃΔ: "img/night-pebblecompo8.png",
    ᐃΔⲆⵠⵠⲆᐃ: "img/night-pebblecompo9.png",
    ΔⲆΔⲆΔⵠⲆ: "img/night-pebblecompo10.png",
    ⲆΔⲆᐃᐃ: "img/night-pebblecompo11.png",
    ΔΔⲆⵠⲆⲆΔ: "img/night-pebblecompo12.png",
    ᐃⵠᐃⲆᐃᐃⵠ: "img/night-pebblecompo13.png",
    ⲆⵠΔΔⵠᐃᐃ: "img/night-pebblecompo14.png",
    ⲆⵠⲆⲆᐃⲆⲆ: "img/night-pebblecompo15.png",
    ᐃⵠⵠⵠᐃⵠⵠ: "img/night-pebblecompo16.png",
    ⲆⲆⲆⵠⵠ: "img/night-pebblecompo17.png",
    ΔⵠⲆⵠⵠΔⵠ: "img/night-pebblecompo18.png",
    ᐃⵠΔⲆᐃᐃⵠ: "img/night-pebblecompo19.png",
    ΔΔⲆⵠⲆ: "img/night-pebblecompo20.png",
    ⲆⵠⲆΔⵠ: "img/night-pebblecompo21.png",
    ⲆᐃᐃΔⲆᐃᐃ: "img/night-pebblecompo22.png",
    ⵠⵠⵠⲆⲆᐃⲆ: "img/night-pebblecompo23.png",
    ⵠⵠΔᐃⵠⲆΔ: "img/night-pebblecompo24.png",
    ᐃᐃᐃΔΔ: "img/night-pebblecompo25.png",
    ΔᐃΔΔⵠ: "img/night-pebblecompo26.png",
    ⵠⵠΔⲆᐃΔᐃ: "img/night-pebblecompo27.png",
    ⲆⲆᐃⲆᐃ: "img/night-pebblecompo28.png",
    ⲆΔᐃⵠΔᐃⲆ: "img/day-baby-mammoth.png",
    ΔΔⵠΔⵠⲆⲆ: "img/day-baby-mammoth-tamed.png",
    ⲆᐃΔⲆΔⲆΔ: "img/day-baby-mammoth-angry.png",
    ⲆⵠⲆᐃᐃΔⵠ: "img/night-baby-mammoth.png",
    ᐃᐃᐃᐃⲆⵠΔ: "img/night-baby-mammoth-tamed.png",
    ⵠΔᐃᐃⵠΔᐃ: "img/night-baby-mammoth-angry.png",
    ᐃᐃΔΔⲆⵠⲆ: "img/inv-mammoth-out.png",
    ⵠⲆΔⲆᐃᐃⲆ: "img/inv-mammoth-in.png",
    ⵠⲆᐃΔΔᐃΔ: "img/inv-mammoth-click.png",
    ᐃᐃⵠⲆᐃⲆΔ: "img/hurt-baby-mammoth.png",
    ⵠᐃⲆⲆᐃᐃⲆ: "img/baby-mammoth-step.png",
    ⵠᐃΔⲆⵠΔⲆ: "img/day-flower-hat.png",
    ΔⲆΔΔᐃΔΔ: "img/night-flower-hat.png",
    ⲆᐃᐃⵠΔᐃΔ: "img/inv-flower-hat-out.png",
    ⵠᐃⵠⵠⵠⵠⵠ: "img/inv-flower-hat-in.png",
    ⲆⵠⵠᐃᐃⲆᐃ: "img/inv-flower-hat-click.png",
    ⲆⲆⲆⲆⵠⲆⵠ: "img/day-fur-hat.png",
    ⵠⵠⲆΔΔΔᐃ: "img/night-fur-hat.png",
    ΔΔⲆᐃΔⲆⲆ: "img/inv-fur-hat-out.png",
    ⲆᐃΔᐃⵠᐃᐃ: "img/inv-fur-hat-in.png",
    ΔⲆⵠᐃⲆⲆⵠ: "img/inv-fur-hat-click.png",
    ⵠⵠΔᐃⲆⵠᐃ: "img/day-mammoth.png",
    ᐃⵠⵠᐃΔⲆⲆ: "img/night-mammoth.png",
    ⲆⵠⵠᐃⲆⲆⲆ: "img/hurt-mammoth.png",
    ΔΔᐃⵠⵠΔΔ: "img/inv-mammoth-fur-out.png",
    ⵠⲆᐃⲆⵠⲆΔ: "img/inv-mammoth-fur-in.png",
    ⵠⵠΔⲆΔⲆⲆ: "img/inv-mammoth-fur-click.png",
    ΔⲆⵠⲆᐃⵠⲆ: "img/inv-wood-bow-out.png",
    ⵠᐃⲆᐃⵠⲆⵠ: "img/inv-wood-bow-in.png",
    ΔⲆⵠⵠᐃⵠΔ: "img/inv-wood-bow-click.png",
    ᐃⲆⵠⵠΔⵠⵠ: "img/inv-wood-arrow-out.png",
    ΔᐃⲆᐃᐃⵠΔ: "img/inv-wood-arrow-in.png",
    ⲆⲆⵠⲆⲆᐃᐃ: "img/inv-wood-arrow-click.png",
    ⵠΔΔᐃΔᐃⵠ: "img/day-wood-bow2.png",
    ⲆⵠᐃΔᐃⲆᐃ: "img/night-wood-bow2.png",
    ⵠᐃᐃᐃⲆⵠᐃ: "img/day-wood-arrow.png",
    ᐃᐃΔⵠΔΔⲆ: "img/night-wood-arrow.png",
    ⵠΔⵠⲆΔᐃⵠ: "img/inv-stone-bow-out.png",
    ΔᐃⲆⵠᐃΔⲆ: "img/inv-stone-bow-in.png",
    ΔΔⲆΔΔΔⲆ: "img/inv-stone-bow-click.png",
    ᐃᐃΔΔⵠΔⵠ: "img/inv-stone-arrow-out.png",
    ⵠᐃΔΔᐃⲆᐃ: "img/inv-stone-arrow-in.png",
    ⵠⲆΔⵠⵠⵠⵠ: "img/inv-stone-arrow-click.png",
    ⵠΔⲆⵠⲆⵠᐃ: "img/day-stone-bow.png",
    ΔⵠⲆΔᐃΔΔ: "img/night-stone-bow.png",
    ⲆⵠΔⲆᐃᐃᐃ: "img/day-stone-arrow.png",
    Ⲇᐃⵠᐃᐃⵠᐃ: "img/night-stone-arrow.png",
    ΔⵠΔⵠᐃᐃⵠ: "img/inv-gold-bow-out.png",
    ⵠᐃⵠᐃⵠⲆⵠ: "img/inv-gold-bow-in.png",
    ΔᐃⲆᐃⲆⵠΔ: "img/inv-gold-bow-click.png",
    ⵠᐃΔᐃⵠᐃΔ: "img/inv-gold-arrow-out.png",
    ⵠᐃΔᐃΔΔⲆ: "img/inv-gold-arrow-in.png",
    ᐃΔΔⲆⵠΔⵠ: "img/inv-gold-arrow-click.png",
    ΔⵠⵠΔⲆΔᐃ: "img/day-gold-bow.png",
    ᐃⵠᐃΔⵠΔⲆ: "img/night-gold-bow.png",
    ᐃⵠΔᐃΔᐃΔ: "img/day-gold-arrow.png",
    ⵠⲆΔΔᐃΔⲆ: "img/night-gold-arrow.png",
    ΔΔΔᐃΔᐃⵠ: "img/inv-diamond-bow-out.png",
    ᐃᐃΔΔⲆᐃⵠ: "img/inv-diamond-bow-in.png",
    ΔᐃΔΔⲆⲆⵠ: "img/inv-diamond-bow-click.png",
    ⲆᐃⲆⵠᐃⲆᐃ: "img/inv-diamond-arrow-out.png",
    ᐃⵠΔⲆⲆⲆⲆ: "img/inv-diamond-arrow-in.png",
    ΔᐃᐃᐃⵠᐃΔ: "img/inv-diamond-arrow-click.png",
    ⲆⵠⵠΔᐃΔⲆ: "img/day-diamond-bow.png",
    ⵠΔⵠⲆⲆΔⲆ: "img/night-diamond-bow.png",
    ⵠⵠⲆⵠⵠⵠⵠ: "img/day-diamond-arrow.png",
    ᐃⲆΔⵠᐃⲆᐃ: "img/night-diamond-arrow.png",
    ⲆΔⲆⲆΔᐃⲆ: "img/inv-amethyst-bow-out.png",
    ⲆⲆΔᐃⲆᐃⵠ: "img/inv-amethyst-bow-in.png",
    ΔⲆⲆΔⲆᐃⵠ: "img/inv-amethyst-bow-click.png",
    ᐃᐃᐃⲆᐃⲆᐃ: "img/inv-amethyst-arrow-out.png",
    ᐃⲆⲆᐃⵠⲆⲆ: "img/inv-amethyst-arrow-in.png",
    ⵠΔᐃⲆⵠⲆᐃ: "img/inv-amethyst-arrow-click.png",
    ΔΔΔⵠΔⲆⵠ: "img/day-amethyst-bow.png",
    ⲆᐃⵠᐃⵠⵠΔ: "img/night-amethyst-bow.png",
    ΔΔⵠⲆΔᐃᐃ: "img/day-amethyst-arrow.png",
    ⵠΔⵠⲆΔⲆⲆ: "img/night-amethyst-arrow.png",
    ⵠΔᐃⵠΔⲆⲆ: "img/inv-dragon-bow-out.png",
    ⲆⵠⵠᐃᐃⲆⵠ: "img/inv-dragon-bow-in.png",
    ΔᐃΔΔⲆⵠΔ: "img/inv-dragon-bow-click.png",
    ᐃⵠⵠⵠⵠΔΔ: "img/inv-dragon-arrow-out.png",
    ⵠⲆᐃⵠⵠⲆⲆ: "img/inv-dragon-arrow-in.png",
    ⲆΔⵠΔᐃⵠΔ: "img/inv-dragon-arrow-click.png",
    ⵠⵠᐃᐃΔⵠΔ: "img/day-dragon-bow.png",
    ⲆⵠᐃⲆⲆᐃⵠ: "img/night-dragon-bow.png",
    ⲆᐃΔᐃⲆⵠᐃ: "img/day-dragon-arrow.png",
    ΔⲆⵠⲆⵠᐃⲆ: "img/night-dragon-arrow.png",
    ᐃᐃΔᐃᐃᐃⲆ: "img/inv-reidite-bow-out.png",
    ᐃⲆΔΔⵠⲆⲆ: "img/inv-reidite-bow-in.png",
    ⲆᐃΔΔⵠΔᐃ: "img/inv-reidite-bow-click.png",
    ⵠⵠⵠⵠⵠΔΔ: "img/inv-reidite-arrow-out.png",
    ⵠⵠᐃⲆΔⲆⲆ: "img/inv-reidite-arrow-in.png",
    ⲆⵠⵠⵠΔᐃⵠ: "img/inv-reidite-arrow-click.png",
    ⲆᐃᐃᐃⲆΔᐃⲆΔ: "img/day-reidite-bow.png",
    ΔⵠΔᐃΔⵠᐃⲆΔ: "img/night-reidite-bow.png",
    ⵠⲆΔⵠᐃΔᐃ: "img/day-reidite-arrow.png",
    ᐃⲆΔΔᐃᐃⵠⵠⲆ: "img/night-reidite-arrow.png",
    ⵠⲆⵠⲆⲆⲆⵠΔᐃ: "img/inv-wooden-axe-out.png",
    ΔⲆⵠⲆΔᐃⲆᐃᐃ: "img/inv-wooden-axe-in.png",
    ᐃΔΔⵠⲆⲆΔⲆΔ: "img/inv-wooden-axe-click.png",
    ΔΔⵠⲆⲆᐃⲆⵠⲆ: "img/day-wooden-axe.png",
    ⲆᐃΔΔⵠΔⵠΔᐃ: "img/night-wooden-axe.png",
    ΔΔΔⲆᐃⲆⵠᐃⵠ: "img/inv-stone-axe-out.png",
    ⵠᐃΔᐃᐃΔⵠⵠⵠ: "img/inv-stone-axe-in.png",
    ⵠᐃᐃⵠⵠⲆⲆⵠⲆ: "img/inv-stone-axe-click.png",
    ⲆⵠⲆᐃᐃΔⵠⲆᐃ: "img/day-stone-axe.png",
    ΔⵠΔⵠᐃⵠⲆⲆΔ: "img/night-stone-axe.png",
    ᐃⲆⲆΔᐃΔⵠᐃⵠ: "img/inv-golden-axe-out.png",
    ᐃΔⵠⵠⵠΔⲆⵠΔ: "img/inv-golden-axe-in.png",
    ΔᐃⲆᐃⵠⲆⲆⲆΔ: "img/inv-golden-axe-click.png",
    ΔⵠΔⲆᐃⲆⵠᐃΔ: "img/day-golden-axe.png",
    ᐃᐃᐃⲆΔⵠⲆᐃⵠ: "img/night-golden-axe.png",
    ⵠⵠⵠᐃⵠⵠⵠⵠᐃ: "img/inv-diamond-axe-out.png",
    ᐃⲆᐃᐃᐃᐃⲆⲆⵠ: "img/inv-diamond-axe-in.png",
    ⲆᐃⲆⲆⵠᐃⵠⲆΔ: "img/inv-diamond-axe-click.png",
    ᐃⵠⵠᐃᐃᐃⲆᐃᐃ: "img/day-diamond-axe.png",
    ΔⵠᐃᐃΔᐃⵠⵠⲆ: "img/night-diamond-axe.png",
    ⵠᐃΔⲆⵠⲆⲆⵠᐃ: "img/inv-amethyst-axe-out.png",
    ΔΔΔᐃᐃⲆᐃΔΔ: "img/inv-amethyst-axe-in.png",
    ⲆⵠΔⵠΔⵠⵠⵠⲆ: "img/inv-amethyst-axe-click.png",
    ΔᐃⵠⲆⵠⵠᐃᐃΔ: "img/day-amethyst-axe.png",
    ⵠⵠΔΔⵠⲆⲆᐃΔ: "img/night-amethyst-axe.png",
    ⲆⵠⲆᐃⲆΔΔΔⵠ: "img/inv-reidite-axe-out.png",
    ⲆΔᐃᐃⵠⵠΔΔᐃ: "img/inv-reidite-axe-in.png",
    ΔⲆⵠⵠᐃⲆⲆⲆⵠ: "img/inv-reidite-axe-click.png",
    ⵠᐃᐃⵠΔⵠⵠⲆⵠ: "img/day-reidite-axe.png",
    ΔᐃΔⲆΔⵠᐃΔᐃ: "img/night-reidite-axe.png",
    ΔⲆⲆᐃⵠⵠᐃ: "img/bandage-activated.png",
    ΔᐃⲆⲆⲆΔⲆ: "img/auto-feed.png",
    ᐃⲆΔⵠΔⵠΔ: "img/stop-regeneration.png",
    ⵠᐃⲆΔⲆⵠΔ: "img/stop-regeneration2.png",
    ᐃⲆΔΔⲆΔΔⲆᐃ: "img/day-wood-platform.png",
    ⲆΔⲆΔⵠΔⲆⵠΔ: "img/night-wood-platform.png",
    ⲆΔᐃᐃⵠᐃΔΔᐃ: "img/inv-wood-platform-in.png",
    ᐃᐃⲆᐃΔᐃⵠⵠⵠ: "img/inv-wood-platform-out.png",
    ᐃⲆᐃΔᐃΔⵠⵠΔ: "img/inv-wood-platform-click.png",
    ⵠⲆⵠⵠⲆⲆΔᐃΔ: "img/day-wood-shield.png",
    ⵠᐃⲆᐃⲆΔⲆⲆⵠ: "img/night-wood-shield.png",
    ΔΔⲆⲆⲆΔⵠΔⲆ: "img/day-stone-shield.png",
    ᐃΔᐃΔⵠᐃΔⲆⵠ: "img/night-stone-shield.png",
    ⵠᐃⲆᐃⲆΔⲆᐃⲆ: "img/day-gold-shield.png",
    ⵠΔᐃⵠⲆΔⲆⵠᐃ: "img/night-gold-shield.png",
    ⲆⲆᐃⵠⵠⲆᐃⲆᐃ: "img/day-diamond-shield.png",
    ᐃⵠⵠⲆΔⲆⵠᐃⲆ: "img/night-diamond-shield.png",
    ᐃΔΔΔᐃΔⲆᐃⵠ: "img/day-amethyst-shield.png",
    ⲆᐃⲆᐃⵠⲆⲆⵠⲆ: "img/night-amethyst-shield.png",
    ⲆΔΔⵠᐃⲆⵠΔᐃ: "img/day-reidite-shield.png",
    ⲆΔⲆⵠᐃⲆΔΔΔ: "img/night-reidite-shield.png",
    ΔⵠⵠΔΔᐃⵠⲆΔ: "img/inv-wood-shield-in.png",
    ⵠᐃᐃΔⲆⲆⲆᐃΔ: "img/inv-wood-shield-out.png",
    ΔⵠⵠⵠⵠΔⵠⲆⵠ: "img/inv-wood-shield-click.png",
    ⲆᐃᐃⵠΔΔΔⵠⲆ: "img/inv-stone-shield-in.png",
    ᐃⵠΔᐃⲆᐃᐃⵠΔ: "img/inv-stone-shield-out.png",
    ᐃⵠᐃⲆⵠΔⵠΔᐃ: "img/inv-stone-shield-click.png",
    ΔⲆᐃⵠᐃⲆⲆΔΔ: "img/inv-gold-shield-in.png",
    ΔΔⵠⲆⵠⵠⵠⵠᐃ: "img/inv-gold-shield-out.png",
    ᐃⲆⲆΔΔⲆⲆⲆΔ: "img/inv-gold-shield-click.png",
    ⵠⵠⵠΔᐃⲆᐃΔⲆ: "img/inv-diamond-shield-in.png",
    ᐃᐃⲆⲆⵠΔΔⲆᐃ: "img/inv-diamond-shield-out.png",
    ⵠⲆᐃΔⵠⲆⲆΔⲆ: "img/inv-diamond-shield-click.png",
    ⲆΔⲆⲆΔⲆᐃⲆΔ: "img/inv-amethyst-shield-in.png",
    ⵠΔⲆΔᐃΔⲆⲆΔ: "img/inv-amethyst-shield-out.png",
    ⵠΔᐃⵠⵠⲆⵠⵠΔ: "img/inv-amethyst-shield-click.png",
    ⲆⵠⲆⲆᐃᐃΔⲆΔ: "img/inv-reidite-shield-in.png",
    ΔⵠⲆⲆⵠΔⲆᐃⲆ: "img/inv-reidite-shield-out.png",
    ᐃⵠᐃΔᐃᐃΔᐃΔ: "img/inv-reidite-shield-click.png",
    ΔⲆᐃⲆⲆᐃΔⲆΔ: "img/day-machete.png",
    ᐃⵠⵠⲆΔΔᐃΔᐃ: "img/night-machete.png",
    ΔᐃⲆᐃΔⵠⵠᐃΔ: "img/inv-machete-in.png",
    ΔΔⵠⵠᐃᐃΔᐃⵠ: "img/inv-machete-out.png",
    ᐃⲆᐃⲆⵠΔⵠΔΔ: "img/inv-machete-click.png"
  };
  ⲆΔⵠⲆᐃⲆΔ = [{}];
  const v714 = 1;
  ⲆΔⵠⲆᐃⲆΔ[0].stringify = function (p468) {
    var v715 = new Uint8Array(new ArrayBuffer(p468.length));
    for (var v716 = 0; p468.length > v716; v716++) {
      v715[v716] = p468[v716];
    }
    return v715;
  };
  ᐃΔⵠΔⵠᐃⲆ = {};
  ⵠᐃⵠⵠΔⲆⲆΔⵠ = {};
  for (var v717 in ᐃⲆ) {
    ᐃΔⵠΔⵠᐃⲆ[v717] = ᐃⲆ[v717];
  }
  function f82(p469, p470, p471) {
    v66(vVVUndefined26, p469, p470, p471);
    return ((122 + (f6(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2]) ^ f6(vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2], vVVVUndefined1973[0], vVVVUndefined1973[1], vVVVUndefined1973[2]))) * 8121 + 28411) % 134456;
  }
  function f83(p472, p473, p474, p475, p476, p477) {
    const v718 = (p475 | 5130) & ~(p475 & 5130);
    const v719 = (2531011 + (27582 + ((16 << (p472 >> 16 & 255)) + (8 << (p472 >> 8 & 255)) + (0 << (p472 & 255)) + (24 << (p472 >> 24 & 255)) ^ (~(p473 & 1205) & p473 | ~(p473 & 1205) & 1205))) * 214013) % 4294967296;
    const v720 = ~(v719 & 48838) & v719 | ~(v719 & 48838) & 48838;
    const v721 = (0 << ((v720 ^ v718) >> 8 & 255)) + (16 << ((v720 ^ v718) >> 16 & 255)) + (24 << ((v720 ^ v718) & 255)) + (8 << ((v720 ^ v718) >> 24 & 255));
    return ((19785 + ((~(v721 & 20429) & v721 | ~(v721 & 20429) & 20429) ^ ~(p477 & 58305) & (p477 | 58305))) * 214013 + 2531011) % 4294967296;
  }
  ⲆⲆ = [];
  ;
  ⵠⲆⵠ = {};
  const v722 = 0;
  const v723 = 3;
  ⵠⲆⵠ.ⲆΔⲆⲆⲆ = 0;
  ⵠⲆⵠ.ⲆⲆΔⲆ = 1;
  const v724 = 8;
  ⵠⲆⵠ.ᐃⲆΔΔ = 2;
  ⵠⲆⵠ.ᐃⵠᐃᐃ = 3;
  ⵠⲆⵠ.ⲆᐃⵠΔ = 4;
  const v725 = 19;
  ⵠⲆⵠ.ⲆⲆⲆⵠ = 5;
  ⵠⲆⵠ.ⲆⵠᐃⲆ = 6;
  ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ = 7;
  ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ = 8;
  ⲆΔᐃΔ = {};
  ΔΔⵠⲆ = [];
  ᐃᐃⵠⲆⵠⵠⵠ = function (p478, p479) {
    for (var v726 = 0; p478.length > v726; v726++) {
      if (p478[v726].id === p479) {
        return v726;
      }
    }
    return -1;
  };
  var v727 = [];
  const v728 = 4;
  function f84(p480, p481) {
    for (var v729 = 0; v727.length > v729; v729 += p481) {
      var v730 = v727[v729];
      if (v730[0] === p480) {
        f85(v730[0], v730[1], v730[2], v730[3]);
      }
    }
  }
  const vVVVUndefined273 = vVVUndefined273;
  function f85(p482, p483, p484, p485) {
    var v731 = ΔΔⵠⲆ[p482];
    if (v731 !== undefined) {
      for (var v732 = 0; v732 < 2; v732++) {
        var v733 = v731[p483][v732];
        var v734 = p485 * 193 / v2813.ᐃᐃᐃᐃΔ;
        var v735 = p484 * 193 / v2813.ΔⵠⲆⲆΔ;
        var v736 = v733.width / 3.5;
        var v737 = v733.height / 3.5;
        ⲆⲆ[818][v732].drawImage(v733, v734 - v736 / 2, v735 - v737 / 2, v736, v737);
        v734 = p485 * 600 / v2813.ᐃᐃᐃᐃΔ;
        v735 = p484 * 600 / v2813.ΔⵠⲆⲆΔ;
        v736 = v733.width / 1.5;
        v737 = v733.height / 1.5;
        ⲆⲆ[819][v732].drawImage(v733, v734 - v736 / 2, v735 - v737 / 2, v736, v737);
      }
    }
  }
  const v738 = 12;
  ΔᐃⵠⲆⲆᐃⵠᐃⵠ = function () {
    for (var v739 = 0; v739 < 2; v739++) {
      ⲆⲆ[818][v739].clearRect(0, 0, 193, 193);
      ⲆⲆ[818][v739].drawImage(ΔΔⵠⲆ.MAP[v739], 0, 0, 193, 193);
      ⲆⲆ[819][v739].clearRect(0, 0, 600, 600);
      ⲆⲆ[819][v739].drawImage(ΔΔⵠⲆ.MAP[v739], 0, 0, 600, 600);
      for (var v740 = v2813.ⵠⲆⵠᐃ.length - 1; v740 >= 0; v740--) {
        var v741 = v2813.ⵠⲆⵠᐃ[v740];
        var v742 = v741.x1 * 193 / (v2813.ᐃᐃᐃᐃΔ * 100);
        var v743 = v741.y1 * 193 / (v2813.ΔⵠⲆⲆΔ * 100);
        var v744 = v741.w * 193 / (v2813.ᐃᐃᐃᐃΔ * 100);
        var v745 = v741.ⵠⵠⲆ * 193 / (v2813.ΔⵠⲆⲆΔ * 100);
        var v746 = v741.x1 * 600 / (v2813.ᐃᐃᐃᐃΔ * 100);
        var v747 = v741.y1 * 600 / (v2813.ΔⵠⲆⲆΔ * 100);
        var v748 = v741.w * 600 / (v2813.ᐃᐃᐃᐃΔ * 100);
        var v749 = v741.ⵠⵠⲆ * 600 / (v2813.ΔⵠⲆⲆΔ * 100);
        if (v2813.ⵠⵠΔᐃΔ === v741.Ⲇⵠⵠ) {
          ⲆⲆ[818][v739].drawImage(ΔΔⵠⲆ.FOREST[v739], v742, v743, v744, v745);
          ⲆⲆ[819][v739].drawImage(ΔΔⵠⲆ.FOREST[v739], v746, v747, v748, v749);
        }
        if (v741.Ⲇⵠⵠ === v2813.ⵠΔΔΔⵠⵠⵠ) {
          ⲆⲆ[818][v739].drawImage(ΔΔⵠⲆ.WINTER[v739], v742, v743, v744, v745);
          ⲆⲆ[819][v739].drawImage(ΔΔⵠⲆ.WINTER[v739], v746, v747, v748, v749);
        }
        if (v741.Ⲇⵠⵠ === v2813.ⲆᐃⵠⵠⲆⵠΔ) {
          ⲆⲆ[818][v739].drawImage(ΔΔⵠⲆ.LAVA[v739], v742, v743, v744, v745);
          ⲆⲆ[819][v739].drawImage(ΔΔⵠⲆ.LAVA[v739], v746, v747, v748, v749);
        }
        if (v2813.ⵠⲆΔᐃΔⲆᐃ === v741.Ⲇⵠⵠ) {
          ⲆⲆ[818][v739].drawImage(ΔΔⵠⲆ.CAVE[v739], v742, v743, v744, v745);
          ⲆⲆ[819][v739].drawImage(ΔΔⵠⲆ.CAVE[v739], v746, v747, v748, v749);
        }
        if (v741.Ⲇⵠⵠ === v2813.ᐃΔΔΔⵠΔᐃ) {
          ⲆⲆ[818][v739].drawImage(ΔΔⵠⲆ.DESERT[v739], v742, v743, v744, v745);
          ⲆⲆ[819][v739].drawImage(ΔΔⵠⲆ.DESERT[v739], v746, v747, v748, v749);
        }
      }
    }
  };
  const v750 = 4;
  function f86(p486, p487, p488, p489) {
    if (p487) {
      p486.fillStyle = p487;
      p486.fill();
    }
    if (p488) {
      p486.lineWidth = p489;
      p486.strokeStyle = p488;
      p486.stroke();
    }
  }
  ⵠᐃⵠⲆᐃΔᐃⲆⲆ = function () {
    ⲆΔᐃΔ = {
      ᐃΔⵠⲆⵠ: [{
        id: 0,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠᐃⵠⲆΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠΔΔⲆⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠᐃᐃΔⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔΔΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Starver"
      }, {
        id: 3,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃΔᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔᐃⵠⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆᐃΔⵠⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆᐃᐃⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Angry"
      }, {
        id: 2,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⲆⵠⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⵠⵠⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃᐃΔᐃⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⵠᐃⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Sad"
      }, {
        id: 9,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⵠΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⵠⲆⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⲆⵠΔⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⲆⵠⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Happy 1"
      }, {
        id: 1,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃᐃΔⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔⲆΔⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆⵠΔΔⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔⵠⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "What?"
      }, {
        id: 4,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠⲆΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠΔΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔΔⲆⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔᐃΔΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Suspicious"
      }, {
        id: 5,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠⵠΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⲆⲆᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⵠᐃᐃⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⲆΔⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Scar"
      }, {
        id: 6,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔⵠⲆⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃᐃⲆⵠΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⲆⵠⵠΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔᐃⵠⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "In Trouble"
      }, {
        id: 7,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃΔᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠᐃⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⲆΔᐃΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⲆⲆΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Cute"
      }, {
        id: 8,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃΔᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃΔⲆⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⲆΔΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠⵠⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bored 1"
      }, {
        id: 10,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃΔΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆⵠⲆΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆᐃⲆΔⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠⵠΔⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Happy 2"
      }, {
        id: 11,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠⵠⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⲆⵠⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔΔⵠᐃⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃⵠᐃⲆᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Crazy"
      }, {
        id: 12,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠⵠΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠΔᐃᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔⵠᐃᐃΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃⵠᐃᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Happy 3"
      }, {
        id: 13,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔᐃᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⲆⲆᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠᐃⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⲆΔᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Very Cute"
      }, {
        id: 14,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⲆΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔᐃᐃⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆΔᐃⵠΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃⵠᐃⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Curious"
      }, {
        id: 15,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⲆⲆⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔᐃⵠΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔⲆΔᐃᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠᐃⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bored 2"
      }, {
        id: 16,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆⵠⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⵠⵠΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃⲆⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⵠΔⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Happy 4"
      }, {
        id: 17,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃⲆΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃⲆⵠΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔⲆᐃᐃΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠᐃⵠΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Scar 2"
      }, {
        id: 18,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆⵠΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⵠⵠⵠΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔⵠⲆᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆΔΔⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Sick"
      }, {
        id: 19,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠΔⲆᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔΔⲆᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⵠⵠᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆⵠΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Somnambule"
      }, {
        id: 24,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃΔⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⲆⲆᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔΔⵠⵠⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⲆⵠΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Pixelbitie",
        name: "Feel Bad"
      }, {
        id: 23,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃᐃᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⵠⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠᐃⲆⲆΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⲆᐃᐃⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Pixelbitie",
        name: "Mmmh."
      }, {
        id: 103,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠᐃΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃⲆΔⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆᐃⵠⲆΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆⲆΔⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "pizza wa",
        name: "Panic"
      }, {
        id: 105,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃᐃⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔᐃΔᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃᐃᐃᐃⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠⲆΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "pizza wa",
        name: "Hypnotic"
      }, {
        id: 106,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠᐃΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⲆⲆⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔᐃΔᐃΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔΔⲆᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "pizza wa",
        name: "Stars in the eyes"
      }, {
        id: 220,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔΔΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃΔⵠΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃΔᐃΔᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⲆⲆΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Seams"
      }, {
        id: 104,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃⵠΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆΔΔⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠΔⲆⲆⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⵠⲆᐃⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Scared at night"
      }, {
        id: 20,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠᐃⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃⵠⵠᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⲆⲆⵠΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⵠⵠᐃⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Vampire"
      }, {
        id: 21,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆⲆⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⵠᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⵠⲆⵠⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠΔⲆᐃⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Zombie"
      }, {
        id: 22,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆᐃᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.Ⲇᐃⵠⵠⵠⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⵠᐃᐃⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⵠᐃⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Pixelbitie",
        name: "Devaster"
      }, {
        id: 116,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃΔⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⲆᐃⵠⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆᐃΔⵠⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃᐃΔⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Fukss",
        name: "Dead Devaster"
      }, {
        id: 27,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃⵠⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆᐃⲆΔⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⲆⵠΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠΔⲆⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Winter",
        name: "Cactus"
      }, {
        id: 28,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠᐃᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆⲆⲆⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⲆⲆΔⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔᐃⵠᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Bee"
      }, {
        id: 49,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⵠⵠΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆΔⲆᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⲆⲆᐃΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔᐃΔⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Taco4Life",
        name: "Camo Skin"
      }, {
        id: 58,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆΔΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔᐃⵠΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔⲆᐃΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔΔⲆᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Blue Limax Skin"
      }, {
        id: 59,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔⲆᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃΔⵠΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔⵠᐃⲆᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠⵠⲆᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Red Limax Skin"
      }, {
        id: 94,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔⵠΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔᐃⲆᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⲆᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃᐃⲆΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Taco4Life",
        name: "Mr. Pumpkin"
      }, {
        id: 109,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⲆᐃᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃΔᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⲆΔⲆΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃΔⵠΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Wood"
      }, {
        id: 114,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔΔⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⲆⲆΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⵠΔᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠᐃΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Zebra"
      }, {
        id: 120,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆᐃⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠᐃⲆᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠΔΔⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆΔᐃⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "CrysTal",
        name: "Tiger"
      }, {
        id: 134,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆΔⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⲆΔⵠⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠΔⵠᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆΔⵠⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Franchestcreator",
        name: "Day or Night"
      }, {
        id: 135,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆⲆᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⲆᐃᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆᐃⲆⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠᐃᐃΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Poinet",
        name: "Square Starver"
      }, {
        id: 136,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔⵠᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⲆⵠⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔΔᐃᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔΔΔΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Voodoo Doll"
      }, {
        id: 137,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⵠΔΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔⲆᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔⵠⲆⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆΔⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Frankenstein"
      }, {
        id: 138,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠⲆᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆᐃⵠⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔᐃⵠⵠᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⵠΔⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Mummy"
      }, {
        id: 139,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃⲆᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠΔΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔᐃⲆᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆᐃΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Werewolf"
      }, {
        id: 140,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆΔⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆΔᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔⲆⲆⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⲆᐃᐃΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Cthulhu"
      }, {
        id: 141,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⵠⵠⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆᐃⲆⵠⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⵠΔⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Sea Man"
      }, {
        id: 142,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⵠΔᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆᐃⵠΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠⲆΔⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆᐃΔΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Pumpkin"
      }, {
        id: 148,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃᐃΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⲆΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⵠⲆⵠⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠΔΔΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Snowman"
      }, {
        id: 149,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⲆⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⲆⵠⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔⲆΔⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆΔⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Christmas Tree Man"
      }, {
        id: 150,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠΔΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔⲆⵠⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆⲆᐃⵠⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔⲆΔᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Mrs Bell"
      }, {
        id: 151,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⲆΔⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠᐃⵠᐃⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⵠⵠⵠᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⵠΔΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Elfy"
      }, {
        id: 152,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔᐃⵠᐃΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⲆΔᐃᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠΔⵠⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Old Mr Present"
      }, {
        id: 153,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃⵠⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠⲆⲆⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠᐃΔⵠᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃᐃᐃⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "My Dear Old Deer"
      }, {
        id: 154,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃΔᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆⲆⵠΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⲆΔᐃΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠΔⲆᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr Angel"
      }, {
        id: 155,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆΔᐃΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠⵠΔⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⵠᐃⲆΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⲆΔⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr Ice Cube"
      }, {
        id: 156,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃΔΔⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔⵠΔⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔΔⵠᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.Δⵠᐃᐃⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr Snowman"
      }, {
        id: 159,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆΔⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆⵠⵠᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⲆΔᐃⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆΔᐃᐃⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "CrysTal",
        name: "Crystal Sky Skin"
      }, {
        id: 167,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃΔᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆᐃᐃⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⲆⵠⲆᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔΔᐃᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Franchestcreator",
        name: "Radioactive Starver"
      }, {
        id: 169,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⵠΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⵠΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔᐃΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆΔⲆΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "TheScaryBlaze",
        name: "Eaten Cookie"
      }, {
        id: 170,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠΔᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⲆΔⵠⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⵠΔⵠⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃΔΔᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "aloner",
        name: "Blob Thing"
      }, {
        id: 172,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆΔᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆⵠⵠⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⲆⵠΔΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⲆΔⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "aloner",
        name: "Machine Mask"
      }, {
        id: 184,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔΔⲆᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠΔᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃᐃΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆᐃⲆⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mad"
      }, {
        id: 206,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃᐃⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⲆⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠᐃᐃᐃⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠᐃⲆⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Survivor"
      }, {
        id: 209,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⵠΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠᐃⲆⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔΔⲆΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Starverator"
      }, {
        id: 230,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠΔⲆⲆΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⲆᐃΔⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃᐃΔⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Totem"
      }, {
        id: 231,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃⵠᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆⲆΔⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃⲆⵠΔᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠΔⵠⲆᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Big Pile of Sand"
      }, {
        id: 232,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔΔⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠⵠⲆᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠΔΔᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠⵠᐃᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Big Pile of Dirt"
      }, {
        id: 235,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠⲆΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⲆᐃᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⵠⵠⲆⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔᐃⲆⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Sandstone"
      }, {
        id: 29,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆⲆⲆⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃⵠΔᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⲆⵠⲆⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⲆⵠΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Pixelbitie",
        name: "Lollipop 1"
      }, {
        id: 30,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆΔⵠⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⲆⲆⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃΔⲆΔⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⲆΔᐃⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Lollipop 2"
      }, {
        id: 31,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⵠᐃⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆΔᐃⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⲆⲆⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠΔⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Lollipop 3"
      }, {
        id: 32,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆⲆⲆⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔΔⵠⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔᐃΔᐃΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔⲆⲆᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Lollipop 4"
      }, {
        id: 33,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃᐃⲆΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⲆⲆᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔᐃᐃⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆᐃᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Sushui",
        name: "Yellow Bird"
      }, {
        id: 34,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃⲆΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃᐃΔⲆΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⲆⲆⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔᐃΔΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Sushui",
        name: "Red Bird"
      }, {
        id: 35,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆΔΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆⲆΔⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠᐃⲆⲆᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆᐃⲆⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Sushui",
        name: "Blue Bird"
      }, {
        id: 37,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠⲆⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆΔⲆⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔΔΔΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠᐃⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Winter",
        name: "Owl"
      }, {
        id: 52,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆⵠⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⲆⵠΔⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⵠⲆΔΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃᐃⲆΔΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Nemo"
      }, {
        id: 53,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆᐃΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠᐃΔΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔΔⵠⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃᐃΔᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Bread"
      }, {
        id: 74,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⲆⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠⵠⵠⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔᐃⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆⲆΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Communist & Taco4Life",
        name: "Mr. Bread 2"
      }, {
        id: 75,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔᐃΔⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠⲆⲆⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔⵠᐃΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆⵠΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Communist & Taco4Life",
        name: "Mr. Bread 3"
      }, {
        id: 60,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔᐃⵠᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔΔΔΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆⲆⵠⲆⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠᐃⵠⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Red Berry"
      }, {
        id: 61,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃᐃⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔᐃⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃΔᐃⲆⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃΔᐃⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Old Berry"
      }, {
        id: 70,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔⲆⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆⵠᐃⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆᐃΔΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆᐃⵠᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Cake"
      }, {
        id: 71,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠⲆΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⲆⵠⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠΔⲆΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔᐃⲆΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Christmas Cake"
      }, {
        id: 77,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃᐃΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔⲆⵠᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔⵠΔᐃⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠⲆΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Pancakez",
        name: "Mr. Pancake"
      }, {
        id: 87,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆⲆᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠΔⲆⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔᐃᐃΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⵠⲆⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Mr. Taco"
      }, {
        id: 78,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃΔᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆΔᐃΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃⲆⲆᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃΔΔᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Mr. Bottle"
      }, {
        id: 79,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠⵠⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔᐃᐃⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⵠⵠⵠᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⲆᐃⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Mr. Bottle 2"
      }, {
        id: 97,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆⲆⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆΔΔⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⲆⲆΔΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆⲆⲆⵠᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Pink Rabbit"
      }, {
        id: 102,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⲆⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔⵠᐃᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⵠΔⲆⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⵠᐃΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Marshmallow"
      }, {
        id: 107,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆⲆⲆⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⵠⵠⵠⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃΔⵠⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Fox"
      }, {
        id: 132,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆⲆⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠΔΔⲆⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃⵠⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔΔⵠⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Raccoon"
      }, {
        id: 111,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃΔⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠⵠΔᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⵠⲆⲆᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔΔⲆⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Cloud"
      }, {
        id: 113,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠΔⵠⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆⲆᐃᐃΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⲆΔᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Moon"
      }, {
        id: 117,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆᐃⵠⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠΔᐃᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔΔⵠⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⲆⲆΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Mr. Panda"
      }, {
        id: 118,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔΔⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⵠΔᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⲆΔⲆᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔᐃᐃΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Mr. Strawberry"
      }, {
        id: 119,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠᐃⲆⲆⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔᐃⲆⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⵠΔⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⵠᐃⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito & Sushuui",
        name: "Mummy"
      }, {
        id: 122,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃⵠᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⲆⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃᐃΔᐃⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔΔⲆᐃⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Dino"
      }, {
        id: 127,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃⲆⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⵠⵠⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔΔⵠⲆⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠΔⲆⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Mr. Koala"
      }, {
        id: 160,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆᐃⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃⵠΔⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⵠΔⲆⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃᐃⵠⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Bottle Protection"
      }, {
        id: 162,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⵠⲆⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆΔⵠᐃⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆᐃⵠⲆΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆᐃᐃᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "CrysTal",
        name: "Leaf Man"
      }, {
        id: 166,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃⲆⵠⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃⲆⵠΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠᐃⲆᐃΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⲆⵠΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Bubble"
      }, {
        id: 174,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆΔⲆⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠΔᐃⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔⲆΔⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔΔⵠⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "upfiz",
        name: "Potato"
      }, {
        id: 171,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆⵠᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⵠᐃΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆΔⵠⵠⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠⵠᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "aloner",
        name: "Axolotl"
      }, {
        id: 178,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃⲆⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔⲆᐃΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃΔᐃᐃⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠⲆⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Rusted Machine"
      }, {
        id: 179,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆΔⵠⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃᐃΔⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆᐃΔΔΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔΔΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Starving Machine"
      }, {
        id: 181,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⲆΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔᐃᐃᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⵠᐃⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆΔⲆⵠᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Night Stars"
      }, {
        id: 191,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆᐃⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠⲆⲆⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔᐃⲆᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃⲆⵠⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Blue Jay"
      }, {
        id: 198,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆⵠᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⵠⵠⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⲆⵠⵠⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔⲆΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "AWTP",
        name: "Dave"
      }, {
        id: 200,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃⵠΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔᐃⲆᐃᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔᐃⵠⲆΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⲆᐃᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Jinty",
        name: "Smug"
      }, {
        id: 203,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠᐃⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠⲆᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⵠⵠⲆᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃᐃⵠᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Reclaimed"
      }, {
        id: 204,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠᐃⵠⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆΔᐃΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔⲆⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠᐃΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Legacy Wolf"
      }, {
        id: 211,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆⵠΔΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⵠⵠᐃⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⵠΔⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Starver of the Seas"
      }, {
        id: 213,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃⵠΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔⲆΔᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠΔᐃⵠΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⵠΔΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Ice"
      }, {
        id: 219,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔⲆⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.Ⲇⵠᐃⵠᐃᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠᐃΔⲆⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⲆⵠⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Ramil",
        name: "Sandwich Cookie"
      }, {
        id: 221,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠΔⲆᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆΔΔᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⲆⲆⲆᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠΔΔᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Purple Geode"
      }, {
        id: 222,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠᐃⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃΔⲆᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔⵠΔⲆᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠⲆΔⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Cyan Geode"
      }, {
        id: 223,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠᐃⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⲆⵠΔΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⵠⵠΔⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔᐃΔⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Yellow Geode"
      }, {
        id: 228,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠⲆⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔᐃΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⵠⵠⲆⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔΔᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Furnace Head"
      }, {
        id: 229,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃᐃᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⵠⲆⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⵠΔΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠΔᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Bag"
      }, {
        id: 227,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠΔᐃⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠᐃΔⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⲆᐃΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃⲆᐃⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Lit Furnace Head"
      }, {
        id: 25,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆΔΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔᐃⲆⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⲆᐃΔⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⲆᐃᐃⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Pixelbitie",
        name: "Test Dummy"
      }, {
        id: 41,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔⲆΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆΔᐃΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⲆⲆᐃⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠⲆⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "pizza wa",
        name: "Star-ver"
      }, {
        id: 43,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠᐃᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃΔΔⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔⲆᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃᐃΔΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Communist",
        name: "Starver Chest"
      }, {
        id: 88,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⵠᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃΔⲆⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃΔⲆⵠᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆⵠΔΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Communist",
        name: "Starver Workbench"
      }, {
        id: 121,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆΔᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⲆⵠΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃΔⵠⲆⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃΔⲆᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Fish"
      }, {
        id: 39,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆᐃΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆⲆΔᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔⲆⵠⲆⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔΔⵠᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Negligent4Dia",
        name: "Crab"
      }, {
        id: 40,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃⲆᐃᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔΔⲆⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⲆΔⲆᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠΔⵠΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Negligent4Dia",
        name: "Piranha"
      }, {
        id: 36,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔΔᐃⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃⲆⵠΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⵠⵠΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Winter Fox"
      }, {
        id: 69,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⲆⵠΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⵠⵠⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠΔⲆⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠⲆⲆΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Zed",
        name: "Baby Foxy"
      }, {
        id: 51,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃⵠΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔⵠⵠⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔⲆΔⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⵠⵠᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "HOWI",
        name: "Winter Bear"
      }, {
        id: 133,
        ᐃᐃᐃ: ᐃⲆ.Δᐃⵠᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠΔⵠⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆᐃᐃⵠΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠⵠⵠⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Hawk"
      }, {
        id: 55,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆⲆⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆᐃⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃᐃⲆⲆΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃⵠⵠᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Nice Little Yuki"
      }, {
        id: 68,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆⲆᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆΔⲆⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⵠᐃⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠⵠΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Taco4Life",
        name: "Baby Yuki"
      }, {
        id: 62,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⲆΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔᐃΔⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠΔⵠᐃᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆᐃⲆΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Carrot"
      }, {
        id: 56,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆᐃⵠᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆᐃⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔⲆᐃᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠᐃⵠⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Bat Limax"
      }, {
        id: 72,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃⵠᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⵠⲆᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆⵠΔⲆⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆᐃΔⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Mr. Crate"
      }, {
        id: 73,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔᐃⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⲆΔᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔⲆΔⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆⲆᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Taco4Life & eogito",
        name: "Mr. Spider"
      }, {
        id: 93,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆᐃⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⲆΔΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⵠΔⵠⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃΔΔΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Anyone want to play?",
        name: "Mr. Spider 2"
      }, {
        id: 82,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃⲆⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃⵠᐃᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠΔⵠⵠⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⲆΔⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Blue Starfish"
      }, {
        id: 83,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆᐃᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⵠᐃⲆⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⲆⲆΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⵠΔΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Orange Starfish"
      }, {
        id: 84,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠⲆᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠΔⲆⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃᐃⵠⵠᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⵠⵠⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Pink Starfish"
      }, {
        id: 85,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⵠᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔΔΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠⲆΔⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆⲆⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. ShellMauve"
      }, {
        id: 86,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃΔᐃΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⵠᐃΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃⵠΔᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃΔᐃᐃⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Shell Bead"
      }, {
        id: 96,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠΔᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆⵠΔⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⲆⵠⲆⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠΔⵠΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Fukss",
        name: "Angry Crab"
      }, {
        id: 98,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃᐃⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔᐃⵠᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃⵠᐃⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆⲆᐃⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Penguin"
      }, {
        id: 126,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃⵠΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆⵠⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔⵠⵠᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠᐃⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Anyone want to play?",
        name: "Mr. Boar"
      }, {
        id: 145,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔᐃΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⲆⲆᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠᐃᐃⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆⲆⵠᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "I saw you"
      }, {
        id: 146,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆᐃⲆᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⵠΔΔᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠⵠⲆᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "It was funny"
      }, {
        id: 147,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠᐃⲆΔᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⵠΔᐃᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔΔⵠΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "You can scream"
      }, {
        id: 158,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⲆⲆΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⵠⵠⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔⵠⲆⵠⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⵠⲆⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Mr. Book"
      }, {
        id: 163,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔⵠⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔᐃᐃᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⲆⲆⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃⵠⵠΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Anyone want to play?",
        name: "Mr. Mammoth"
      }, {
        id: 164,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔⵠᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆⲆⵠⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⲆⵠΔⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆⲆⲆⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "SoOw",
        name: "Mr. Mammoth 2"
      }, {
        id: 161,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆΔⲆⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⲆΔᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⵠⵠᐃⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⲆΔⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Nightmare"
      }, {
        id: 168,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆΔⵠⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔᐃΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⲆᐃᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔᐃΔΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "pizza wa",
        name: "Shiny Crystal"
      }, {
        id: 173,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆΔⵠⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔΔᐃᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃΔᐃΔΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⲆᐃᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "pizza wa",
        name: "Water skin"
      }, {
        id: 175,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆⵠⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆΔΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⵠᐃᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠΔⲆΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Fall Berry Bush Starver"
      }, {
        id: 176,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔΔⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠᐃⲆᐃⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃⵠⵠⲆᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃΔᐃΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Christmas Berry Bush Starver"
      }, {
        id: 177,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠᐃᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠΔⵠᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⲆᐃⵠᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠᐃⲆⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Berry Bush Starver"
      }, {
        id: 182,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆⵠⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⵠΔΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆⵠᐃⲆⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⲆᐃΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamer"
      }, {
        id: 185,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃᐃⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⲆⵠⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠΔⲆΔⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠΔⵠᐃⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Wolf"
      }, {
        id: 186,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆΔⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔΔΔΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⲆⲆΔΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃΔΔΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Snow Wolf"
      }, {
        id: 187,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠΔⲆΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃΔⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⵠΔⵠΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃΔⲆᐃⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Rabbit"
      }, {
        id: 188,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔΔⲆᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⲆⲆⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠⲆᐃⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠΔΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Snow Rabbit"
      }, {
        id: 189,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆⵠᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠⲆΔⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠⲆΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⵠΔᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Bear"
      }, {
        id: 190,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⲆⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠΔΔⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔⵠⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃΔΔⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Polar Bear"
      }, {
        id: 196,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃΔⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠⵠⲆᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔΔⵠᐃᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔᐃⲆⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Crying Angel"
      }, {
        id: 202,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⵠⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃⵠᐃⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃᐃᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔⲆⲆᐃⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Fennec"
      }, {
        id: 207,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠΔⵠⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⵠΔᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠΔⲆⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆⲆⲆⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Decay"
      }, {
        id: 212,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆⲆΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃᐃⲆⲆⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃⵠⲆⵠΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔⵠⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Pillow"
      }, {
        id: 218,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠΔⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆΔⲆⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⵠᐃΔΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆⲆΔⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Exotic"
      }, {
        id: 224,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃⲆΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃᐃⲆᐃⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⲆⲆⲆΔᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠΔⵠⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Apple"
      }, {
        id: 225,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⵠΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔΔⲆⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆᐃⲆΔᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔΔⲆΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Golden Apple"
      }, {
        id: 233,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠᐃⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⵠᐃᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⲆⲆⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃΔⵠᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Lava Cube"
      }, {
        id: 234,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠΔⲆᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⵠⵠⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔᐃᐃᐃⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠᐃᐃⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Dragon Cube"
      }, {
        id: 42,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃΔⲆΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃΔΔⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔᐃⵠⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆᐃΔⲆⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Winter",
        name: "Will-O'-The-Wisp"
      }, {
        id: 91,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔⲆΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆⵠᐃᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⵠⵠⲆⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠΔᐃᐃⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "ExpertyAnimations",
        name: "Flame"
      }, {
        id: 26,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃΔⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔΔᐃⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔΔᐃⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠΔᐃΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Be a Tree"
      }, {
        id: 38,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⵠⲆᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠᐃⵠⲆⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃᐃⲆⲆᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔⵠΔΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Winter",
        name: "Toxic Mutant"
      }, {
        id: 50,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠΔⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⲆΔⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠᐃᐃΔⵠⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⵠΔΔᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Communist",
        name: "Mr. Tomato"
      }, {
        id: 54,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠΔⵠᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⲆⲆⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔΔⵠⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔᐃᐃΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Mauve, the Lapa"
      }, {
        id: 57,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔᐃⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆᐃΔⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠΔᐃΔⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃᐃⲆⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Golden Fish"
      }, {
        id: 64,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆⲆᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠᐃᐃᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠᐃΔΔᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃⵠᐃⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "LapaMauve"
      }, {
        id: 65,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃᐃΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔⵠᐃⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔⲆᐃᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⵠΔΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "LapaMauve "
      }, {
        id: 92,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠⵠⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃΔⵠⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃΔΔᐃⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆⵠΔⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Burger"
      }, {
        id: 66,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠΔΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⲆΔΔⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃΔⵠᐃᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔᐃΔᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "pizza wa",
        name: "Tropical Starver"
      }, {
        id: 80,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔᐃΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔΔⲆΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⲆᐃⵠⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠᐃᐃⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. ShellPink"
      }, {
        id: 81,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔΔᐃᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⲆᐃⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆΔⲆΔⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔⵠΔⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. OranShell"
      }, {
        id: 99,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃⵠⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠⵠⵠΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃΔⲆⵠᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠᐃⵠΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Pepe"
      }, {
        id: 100,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⲆᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆⲆᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠⲆⲆΔᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆΔⵠⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "fatant",
        name: "Mr. Ant"
      }, {
        id: 115,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃᐃⵠᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⲆΔΔΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆᐃΔᐃⲆᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃᐃΔⵠᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Mr. Watermelon"
      }, {
        id: 101,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃⲆᐃᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⲆⵠᐃⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃᐃⲆⵠᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔᐃᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Mr. Thornbush"
      }, {
        id: 131,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃⵠΔⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆΔⵠⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔᐃⵠΔⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠᐃⲆᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Cthulhu"
      }, {
        id: 143,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⵠⲆⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠⲆᐃᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⲆⲆⲆΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⵠⲆᐃⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Mr. Cactus"
      }, {
        id: 144,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃᐃⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⲆᐃⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃⵠⵠⵠⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⲆⲆΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Momo"
      }, {
        id: 180,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠⲆᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠΔΔⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⲆᐃΔⵠᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔᐃⵠⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Scream"
      }, {
        id: 193,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆⲆⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠᐃᐃⵠⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⲆⲆΔΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆΔΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Dragon"
      }, {
        id: 195,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⵠᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔⲆⲆᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆΔᐃⲆⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆΔᐃΔΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Forest Spirit"
      }, {
        id: 197,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃᐃΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆᐃⵠΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⲆⲆᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃⲆⲆⲆᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Evil Goat"
      }, {
        id: 199,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔΔⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔᐃⲆⵠⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃⲆⵠᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆⲆⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Rotten"
      }, {
        id: 201,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠᐃⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠⵠⵠⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠⵠⲆⲆⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃᐃⵠⵠΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Fossil"
      }, {
        id: 205,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔΔᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⲆⲆⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆⵠᐃᐃᐃΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔᐃᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Spectrum"
      }, {
        id: 210,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⲆΔΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⲆΔⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆᐃΔΔⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠᐃⵠⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Helpy",
        name: "Black Cat"
      }, {
        id: 214,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆⲆⵠⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆΔΔⵠΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔᐃΔⲆⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Lynx"
      }, {
        id: 215,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠⲆΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠⲆⵠᐃⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃΔⵠΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠΔΔⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Warg"
      }, {
        id: 217,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔⲆΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠΔΔᐃⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⲆᐃⲆⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔᐃΔⵠΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Menhir"
      }, {
        id: 95,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠΔΔⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃΔⵠΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔΔⵠΔᐃⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠⲆᐃΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Taco4Life",
        name: "Mr. Garlic"
      }, {
        id: 76,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃᐃⵠⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃΔⲆᐃΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆᐃⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Robot Dragon"
      }, {
        id: 44,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠᐃΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠΔⲆⲆⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃΔⵠⲆΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⲆⲆⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Lava Dragon Version 1"
      }, {
        id: 90,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃⵠⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃᐃⲆΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠᐃΔⵠΔⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆΔⵠᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "ExpertyAnimations",
        name: "Lava Dragon Version 2"
      }, {
        id: 124,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃⲆΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠΔᐃⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔᐃⵠⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠⵠΔⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Lava Dragon Version 3"
      }, {
        id: 45,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆⵠᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔᐃΔⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆⲆⲆⲆΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⵠⵠⵠⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Sushui",
        name: "Ice Dragon Version 1"
      }, {
        id: 46,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃΔΔΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠᐃᐃⵠΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔⲆΔⵠⵠⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆΔΔᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Ice Dragon Version 2"
      }, {
        id: 108,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔΔⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⲆΔΔⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⵠᐃⵠᐃⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆᐃⵠⲆⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Ice Dragon Version 3"
      }, {
        id: 123,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⵠΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⵠⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔᐃᐃᐃᐃⲆᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠᐃⵠᐃⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Baby Dragon Version 1"
      }, {
        id: 128,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃΔⵠᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃⲆᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠΔⵠⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠΔᐃᐃⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Baby Dragon Version 2"
      }, {
        id: 125,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠᐃⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆⵠⲆⵠᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⵠⲆⵠΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃΔΔⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Baby Lava"
      }, {
        id: 47,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠΔΔⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⵠⵠⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔᐃᐃⵠᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆᐃⵠΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Taco4Life",
        name: "Kraken"
      }, {
        id: 129,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⲆΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃᐃᐃⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠⲆΔⲆΔΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⲆΔⲆⲆᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Taco4Life",
        name: "Sandworm"
      }, {
        id: 63,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⵠΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠᐃⲆΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔᐃⵠⲆΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆⵠΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Golden Bread"
      }, {
        id: 67,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔᐃⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠⵠΔΔⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔⵠΔΔΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔⲆⲆᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "ForgottenHeroe",
        name: "Starver Ores"
      }, {
        id: 130,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃΔΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆΔᐃⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⲆⲆⲆᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⲆΔⲆᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Taco4Life",
        name: "Poo"
      }, {
        id: 89,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⲆⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆⲆᐃΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔᐃⲆⲆⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠΔᐃΔⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Poinet",
        name: "Volcano Starver"
      }, {
        id: 112,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃⵠⲆⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⵠΔᐃⲆΔᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆᐃᐃᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Lava Starver"
      }, {
        id: 183,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃᐃⵠᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⵠⵠⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃⲆΔᐃᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔᐃΔⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Revaster"
      }, {
        id: 192,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⲆⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆⵠⵠΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⵠΔΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔΔⵠᐃⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Awakened"
      }, {
        id: 194,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃΔΔⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔᐃᐃⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠΔⲆⵠᐃⲆⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃⵠᐃⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Ice Dragon"
      }, {
        id: 236,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆⲆΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⵠᐃⲆⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔΔⵠⵠᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃᐃⵠⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Crystal Dragon"
      }, {
        id: 208,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔΔⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆᐃⲆⵠⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃΔᐃΔᐃⵠΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⲆⲆⵠᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bone Dragon"
      }, {
        id: 216,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃᐃᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔⲆⵠᐃΔ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠᐃⲆΔⲆᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠⲆΔⲆΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Warg Ghost"
      }, {
        id: 226,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃⵠΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃⵠΔΔᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠΔⲆΔΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⵠⲆΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Cursed"
      }, {
        id: 48,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠΔΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔᐃⲆⲆΔ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⵠΔⲆⲆᐃⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆΔᐃΔⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ,
        ΔΔᐃ: "eogito",
        name: "Robot"
      }, {
        id: 110,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆᐃᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔᐃⲆⲆⵠ,
        ᐃΔⲆΔ: ᐃⲆ.ⵠⲆⲆΔΔᐃᐃ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⵠᐃΔΔΔⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ,
        ΔΔᐃ: "pizza wa",
        name: "Blue Butterfly"
      }, {
        id: 157,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃᐃᐃᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔΔⲆΔⲆ,
        ᐃΔⲆΔ: ᐃⲆ.ΔⲆⵠⵠⲆΔⵠ,
        ⵠⲆⲆⵠ: ᐃⲆ.ⲆⵠΔΔⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ,
        ΔΔᐃ: "eogito",
        name: "Yrifox"
      }, {
        id: 165,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠᐃⲆᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆⵠΔⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ⲆΔᐃᐃⲆⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃΔΔⵠΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ,
        ΔΔᐃ: "OmarJr13",
        name: "Blob Skin"
      }, {
        id: 237,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠΔᐃΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔⵠᐃⲆᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ΔΔᐃⲆⲆⲆⲆ,
        ⵠⲆⲆⵠ: ᐃⲆ.ΔⲆΔⵠΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ,
        ΔΔᐃ: "NotBonnie",
        name: "NotBonnie"
      }, {
        id: 238,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃΔΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔⵠΔᐃᐃ,
        ᐃΔⲆΔ: ᐃⲆ.ᐃᐃᐃⵠᐃᐃΔ,
        ⵠⲆⲆⵠ: ᐃⲆ.ᐃⵠⵠⵠᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ,
        ΔΔᐃ: "NotBonnie",
        name: "Cynder"
      }],
      ⲆⵠⲆⲆ: [{
        id: 0,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠᐃᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔᐃᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bag 1"
      }, {
        id: 1,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆᐃᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆⲆᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Old Bag"
      }, {
        id: 2,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠᐃᐃΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⲆᐃⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bag 2"
      }, {
        id: 3,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔⲆΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bag 3"
      }, {
        id: 4,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆΔⲆᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔΔᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bag 4"
      }, {
        id: 5,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⵠΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bag 5"
      }, {
        id: 11,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔΔᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wood Pickaxe Bag"
      }, {
        id: 19,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⵠⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔⲆⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io ",
        name: "Wood Carrier"
      }, {
        id: 37,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠⲆⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔⲆᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Bag 6"
      }, {
        id: 39,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠᐃΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆⲆⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Bag with Wooden Swords"
      }, {
        id: 44,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆᐃⲆΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔᐃⵠᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Communist",
        name: "Big Bag"
      }, {
        id: 7,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆⵠⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠΔⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Communist",
        name: "Bag 6"
      }, {
        id: 8,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃⲆᐃΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠⲆⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Easter Bag"
      }, {
        id: 9,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃⲆⵠⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠΔⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Star Bag"
      }, {
        id: 10,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆⲆⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆᐃᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Winter Bag"
      }, {
        id: 20,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔⲆⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⲆΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io ",
        name: "Stone Carrier"
      }, {
        id: 24,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠΔⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠΔᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Stone Pickaxe Bag"
      }, {
        id: 6,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⲆⲆⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔΔΔⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Communist",
        name: "Bag Camouflage"
      }, {
        id: 38,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⵠΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⵠᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Bag with Stone Swords"
      }, {
        id: 54,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠΔΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⵠΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Cow Bag"
      }, {
        id: 59,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠΔᐃⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔᐃⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "CrysTal",
        name: "Starver Bag"
      }, {
        id: 62,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠᐃⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔⲆⲆᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "CrysTal",
        name: "Crystal Sky Bag"
      }, {
        id: 71,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⲆΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠᐃᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Portable Furnace"
      }, {
        id: 78,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃᐃⲆⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠᐃⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Crate Bag"
      }, {
        id: 13,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔΔΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠΔᐃⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Honey Pot"
      }, {
        id: 21,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆΔΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠⵠΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io ",
        name: "Gold Carrier"
      }, {
        id: 30,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃΔΔⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃΔⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Gold Pickaxe Bag"
      }, {
        id: 29,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆⵠⲆⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠᐃΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Ariel",
        name: "Mr and Mrs Bakers"
      }, {
        id: 41,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃⵠᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⵠᐃΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Bag with Golden Swords"
      }, {
        id: 47,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⲆⲆΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃᐃᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Explorer Bag"
      }, {
        id: 51,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⲆⲆΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠⵠⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Bamboo Bag"
      }, {
        id: 53,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆᐃᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆⵠⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Mummy Bag"
      }, {
        id: 58,
        ᐃᐃᐃ: ᐃⲆ.Ⲇᐃⵠᐃᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆΔᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Watermelon Bag"
      }, {
        id: 60,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔᐃⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆᐃᐃⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Garlic Bag"
      }, {
        id: 61,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠⲆΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃᐃΔᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Pumpkin Bag"
      }, {
        id: 64,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔΔΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⵠⵠⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "upfiz",
        name: "Oil Barel bag"
      }, {
        id: 67,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔᐃΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆᐃᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Tree Bag"
      }, {
        id: 70,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠⲆᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔⵠⵠᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Lit Portable Furnace"
      }, {
        id: 72,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃⵠᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.Δᐃᐃⵠⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Christmas Berry Bush Bag"
      }, {
        id: 73,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆΔΔᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔᐃΔᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Berry Bush Bag"
      }, {
        id: 74,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠⲆⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Fall Berry Bush Bag"
      }, {
        id: 76,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⵠᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠᐃⲆΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Reclaimed Bag"
      }, {
        id: 14,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃΔᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠⵠΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "a Rabbit in my Bag"
      }, {
        id: 15,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃΔⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠΔᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Bird's nest"
      }, {
        id: 16,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃⵠΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠᐃⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "a Fish on your Back"
      }, {
        id: 17,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃᐃᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⵠΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "a Squirrel in my Bag"
      }, {
        id: 22,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⵠΔⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠᐃᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io ",
        name: "Diamond Carrier"
      }, {
        id: 12,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠⲆᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃᐃΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Resources Bag"
      }, {
        id: 32,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆⵠⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔⵠᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Diamond Pickaxe Bag"
      }, {
        id: 40,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃΔᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.Δᐃⵠⵠⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Bag with Diamond Swords"
      }, {
        id: 45,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠⵠⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔΔⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "My Cake Bag"
      }, {
        id: 46,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆΔᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔᐃΔΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "My Christmas Cake Bag"
      }, {
        id: 52,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃᐃΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔᐃⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Fish Bag"
      }, {
        id: 65,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠΔᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⲆⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "pizza wa",
        name: "Cloud Bag"
      }, {
        id: 68,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠᐃΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔΔⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "pizza wa",
        name: "Bee Bag"
      }, {
        id: 77,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠΔΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠᐃⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Bag and Bedroll"
      }, {
        id: 80,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔᐃⵠᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠᐃⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Peasant's Bag"
      }, {
        id: 81,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆΔⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔⵠΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Probably Stolen Bag"
      }, {
        id: 48,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔΔⵠⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔⵠΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "fatant",
        name: "Natural Bag"
      }, {
        id: 23,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃΔΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠⲆⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io ",
        name: "Amethyst Carrier"
      }, {
        id: 25,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔⲆⵠΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃⵠⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Amethyst Pickaxe Bag"
      }, {
        id: 28,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⲆΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠⵠⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Your Baby"
      }, {
        id: 33,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆⲆⵠΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠΔⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "pizza wa",
        name: "Tropical Bag"
      }, {
        id: 43,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆᐃⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Bag with Amethyst Swords"
      }, {
        id: 35,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠⵠΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⲆⵠⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Ice Bag"
      }, {
        id: 50,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆΔⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Thornbush Bag"
      }, {
        id: 56,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃᐃⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠᐃⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Autumn Bag"
      }, {
        id: 57,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆᐃΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⵠⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Dino Egg Bag"
      }, {
        id: 66,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆΔΔⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⲆᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "pizza wa",
        name: "Magic Cloud Bag"
      }, {
        id: 69,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠᐃⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆᐃⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "pizza wa",
        name: "Chest Bag"
      }, {
        id: 75,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⲆΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Spectum Bag"
      }, {
        id: 79,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔⵠᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃᐃᐃⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Winter Peasant's Bag"
      }, {
        id: 31,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆⲆⵠⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃᐃᐃᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io ",
        name: "Reidite Carrier"
      }, {
        id: 18,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃⵠᐃΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠΔΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Lava Bag"
      }, {
        id: 49,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃⲆΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔⵠᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Lava Bag 2"
      }, {
        id: 36,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃᐃⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Dragon Bag"
      }, {
        id: 55,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⲆᐃⵠⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⵠΔⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Winter Ice Bag"
      }, {
        id: 26,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⵠᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⲆⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Reidite Pickaxe Bag"
      }, {
        id: 27,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆΔⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆᐃⵠⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Octopus Bowl"
      }, {
        id: 34,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⲆΔⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠᐃᐃⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Taco4Life",
        name: "Cave Bag"
      }, {
        id: 42,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆᐃᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⵠΔⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Bag with Reidite Swords"
      }, {
        id: 63,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆⵠΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠᐃᐃΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Engineer Bag"
      }],
      ΔᐃⵠΔⲆ: [{
        id: 0,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆᐃⲆⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠⲆⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Dead Box"
      }, {
        id: 1,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃⲆⲆΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔⲆⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "eogito",
        name: "Hidden item"
      }, {
        id: 2,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠΔⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔⲆⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box 1"
      }, {
        id: 3,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔⵠᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃᐃᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box 2"
      }, {
        id: 4,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃⲆⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆⲆⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box 3"
      }, {
        id: 5,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆⵠΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⲆⲆⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Broken Wooden Box"
      }, {
        id: 6,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆⵠᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔⲆⵠⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box"
      }, {
        id: 7,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔⵠΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔⲆⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Battle Box"
      }, {
        id: 8,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠΔⵠⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆΔΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box with a Cross"
      }, {
        id: 9,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠΔΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠᐃΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box with Bubbles"
      }, {
        id: 10,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔᐃΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Wooden Box with Eyes"
      }, {
        id: 11,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃΔⵠⵠᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆᐃⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Dark Wooden Box"
      }, {
        id: 38,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⲆⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⲆⲆΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Weddlz",
        name: "Noob Box"
      }, {
        id: 12,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃᐃΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆᐃⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Wooden and Stone Box"
      }, {
        id: 14,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔΔⵠΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔⵠᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Star Box 1"
      }, {
        id: 15,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠΔⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆⲆᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Star Box 2"
      }, {
        id: 27,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃᐃⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔⲆⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Flower Box"
      }, {
        id: 46,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆᐃΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔⵠΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Blue Box"
      }, {
        id: 75,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃⲆⲆⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠᐃⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Night Stars Crate"
      }, {
        id: 19,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠⵠⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔᐃΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Beehive"
      }, {
        id: 13,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆᐃΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆᐃΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Wooden and Golden Box"
      }, {
        id: 21,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠᐃΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⲆⵠᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Gravestone"
      }, {
        id: 25,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃⵠⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔᐃⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Communist",
        name: "Sky Box"
      }, {
        id: 29,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆᐃⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔΔⵠⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Winter",
        name: "Golden Box"
      }, {
        id: 34,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠΔⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⵠᐃⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Communist",
        name: "Water Crate"
      }, {
        id: 35,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠᐃⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔⲆΔⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Communist",
        name: "Glass Crate"
      }, {
        id: 70,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⲆᐃᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆⵠⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "CrysTal",
        name: "Crystal Sky Box"
      }, {
        id: 74,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃΔⵠⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆᐃⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Reclaimed Crate"
      }, {
        id: 77,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆᐃⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃᐃⵠⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Workplace Accident"
      }, {
        id: 16,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃᐃⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Wooden and Diamond Box"
      }, {
        id: 18,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⵠⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠᐃⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Don't Hit Me"
      }, {
        id: 26,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⵠⲆΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⲆⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Underwater Box"
      }, {
        id: 31,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃᐃᐃᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Communist",
        name: "Items Pile"
      }, {
        id: 32,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔᐃⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⲆⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Cake Box"
      }, {
        id: 33,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃᐃᐃᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆⵠⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Christmas Cake Box"
      }, {
        id: 36,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠᐃⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠᐃᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Fukss",
        name: "Crab Box"
      }, {
        id: 42,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⵠᐃΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠⵠΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Fishing Box"
      }, {
        id: 72,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃΔΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Storage Machine"
      }, {
        id: 22,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃⲆΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆᐃΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Let me out of here"
      }, {
        id: 17,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆΔⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⵠⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Wooden and Amethyst Box"
      }, {
        id: 24,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃΔᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔⲆⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Aquarium"
      }, {
        id: 28,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠⵠⵠᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆᐃΔΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Gift Box"
      }, {
        id: 40,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔⲆΔΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆⵠᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Open Watermelon Box"
      }, {
        id: 41,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔΔⲆⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⵠΔᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Watermelon Box"
      }, {
        id: 39,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⵠⵠⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔⲆⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Thornbush Box"
      }, {
        id: 43,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆᐃΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔΔΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Rabbit in the Box"
      }, {
        id: 47,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆⲆᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⵠΔⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Garlic Plot"
      }, {
        id: 48,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆᐃΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔⵠΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Pumpkin Plot"
      }, {
        id: 78,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃⵠⵠᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔΔⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Spectrum Portal"
      }, {
        id: 45,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⵠⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠΔⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Autumn Box"
      }, {
        id: 44,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠΔᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠᐃⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Winter Box"
      }, {
        id: 20,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠⵠᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⵠⲆⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Metal and Reidite Box"
      }, {
        id: 23,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔᐃⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Kraken Box"
      }, {
        id: 30,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃⲆⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃΔΔᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Lava Box"
      }, {
        id: 37,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠΔⵠΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔᐃⲆΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Lava Box 2"
      }, {
        id: 49,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⵠⵠᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠⵠⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Rabbit"
      }, {
        id: 50,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆΔΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆⲆⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Wolf"
      }, {
        id: 51,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔΔᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠᐃⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Spider"
      }, {
        id: 52,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃΔⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⲆⵠⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Hawk"
      }, {
        id: 53,
        ᐃᐃᐃ: ᐃⲆ.Ⲇᐃᐃᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠᐃᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Bear"
      }, {
        id: 54,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃᐃΔᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠⵠΔⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Fox"
      }, {
        id: 55,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⲆΔⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⲆⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Baby Mammoth"
      }, {
        id: 56,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆᐃⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆⲆⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Mammoth"
      }, {
        id: 57,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃΔᐃⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠᐃⲆⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Sandworm"
      }, {
        id: 58,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔⲆⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔᐃΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Vulture"
      }, {
        id: 59,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔⲆᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.Δⵠⵠᐃᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Kraken"
      }, {
        id: 60,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔⵠⵠⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆⵠⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Piranha"
      }, {
        id: 61,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠΔⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Baby Dragon"
      }, {
        id: 62,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃᐃΔⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃᐃⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Baby Lava"
      }, {
        id: 63,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆΔΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔΔⲆᐃⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Dragon"
      }, {
        id: 64,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃᐃᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆⵠΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Penguin"
      }, {
        id: 65,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃᐃⵠᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆᐃΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Lava Dragon"
      }, {
        id: 66,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃᐃΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠⲆᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Boar"
      }, {
        id: 67,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⵠᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃⲆⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Fire mob"
      }, {
        id: 68,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠⲆᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⲆᐃᐃΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the Crab"
      }, {
        id: 69,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆΔⲆⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃᐃᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Box of the King Crab"
      }, {
        id: 71,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔΔⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔⵠᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Dragon Box"
      }, {
        id: 73,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠΔᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃᐃⵠⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Rekt"
      }, {
        id: 76,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔⲆⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Sleeping Tamon Dragon"
      }],
      ᐃᐃΔⲆⵠ: [{
        id: 0,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔⵠⵠⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⵠⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Book 1"
      }, {
        id: 1,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⲆᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆᐃⵠᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Book 2"
      }, {
        id: 2,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆΔᐃᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⵠⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Book 3"
      }, {
        id: 3,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠⵠⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠⵠⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Book 4"
      }, {
        id: 4,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⵠΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⵠⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Damaged Book 1"
      }, {
        id: 18,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃⲆΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆⵠⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "SeveR",
        name: "Damaged Book 2"
      }, {
        id: 5,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠⲆΔⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠΔⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Doctorpus",
        name: "Scroll"
      }, {
        id: 6,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠⵠⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃⵠΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Doctorpus",
        name: "Clipboard"
      }, {
        id: 7,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃᐃⲆᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆΔᐃΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Seed Book"
      }, {
        id: 20,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔΔⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Taco4Life",
        name: "Camo Book"
      }, {
        id: 24,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⵠᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Communist",
        name: "Stone Tablet"
      }, {
        id: 47,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠᐃⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠⲆⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Reclaimed Book"
      }, {
        id: 10,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠΔΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆⲆⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Star Book"
      }, {
        id: 8,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃᐃⵠΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔⲆΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Gold Book"
      }, {
        id: 15,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠⲆⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆᐃⵠᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Old Mysterious Paper"
      }, {
        id: 17,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⵠᐃΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃᐃⲆⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Gold Engraving"
      }, {
        id: 25,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃᐃᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⲆΔΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "fatant",
        name: "Ant Book"
      }, {
        id: 32,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔⵠᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠᐃᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Mummy Book"
      }, {
        id: 37,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⲆᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃΔᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Garlic Book"
      }, {
        id: 38,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔⵠⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔᐃᐃⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Pumpkin Book"
      }, {
        id: 39,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃΔⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Christmas Tree Book"
      }, {
        id: 11,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔⲆΔⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃⲆΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Diamond Book"
      }, {
        id: 9,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆΔΔΔΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃⲆⲆᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Obscure Book"
      }, {
        id: 16,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃᐃⲆᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃᐃᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Rolled Parchment"
      }, {
        id: 22,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆΔΔᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃΔⵠᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Cake Book"
      }, {
        id: 23,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆⵠΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆᐃΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Christmas Cake Book"
      }, {
        id: 30,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃⲆⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃᐃᐃΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "MADBalgouthi",
        name: "Fish Book"
      }, {
        id: 31,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠᐃᐃᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔᐃⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "CrysTal",
        name: "Once upon a time"
      }, {
        id: 48,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔΔΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃⵠⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Chrono Clock"
      }, {
        id: 49,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔⲆⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⵠΔⵠⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Recipe Book"
      }, {
        id: 13,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⵠⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠⵠⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Amethyst Book"
      }, {
        id: 28,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔⲆⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃᐃⲆᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Paint Pallet"
      }, {
        id: 29,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃΔⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆⲆΔⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "CrysTal",
        name: "Watermelon Book"
      }, {
        id: 27,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆⵠᐃⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔⵠⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Thornbush Book"
      }, {
        id: 35,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠΔⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃⲆΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Taco4Life",
        name: "Menu"
      }, {
        id: 36,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠᐃⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "CrysTal",
        name: "Lover Letter"
      }, {
        id: 40,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠᐃΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠⲆⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Fresh-Baked Cookies"
      }, {
        id: 41,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⲆⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔΔⲆⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Inside, there is just a book."
      }, {
        id: 45,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔΔΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Crafting Machine"
      }, {
        id: 33,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⵠᐃᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃᐃΔᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Winter Book"
      }, {
        id: 34,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠⵠⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Autumn Book"
      }, {
        id: 14,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔΔΔᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆΔⵠⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Reidite Book"
      }, {
        id: 12,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⲆᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔΔⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Lava Book"
      }, {
        id: 26,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆΔⲆΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⵠΔΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Lava Book 2"
      }, {
        id: 19,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔΔⲆᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃᐃᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Winter",
        name: "Ocean Mystery"
      }, {
        id: 21,
        ᐃᐃᐃ: ᐃⲆ.Δⵠⵠⵠᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠⲆⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Dragon Book"
      }, {
        id: 42,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆᐃⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃᐃᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Engineer Book"
      }, {
        id: 43,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠΔᐃΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠΔⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Nightmare Book"
      }, {
        id: 44,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠΔᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⲆⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "aloner",
        name: "Mystery Book"
      }, {
        id: 46,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃⲆⲆᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔᐃᐃΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Cursed Book"
      }],
      ⵠΔᐃⲆⲆ: [{
        id: 0,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⲆᐃⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆᐃⲆⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Nothing"
      }, {
        id: 2,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃᐃⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠᐃΔΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Pink Cheeks"
      }, {
        id: 3,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆΔⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Heart"
      }, {
        id: 1,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔᐃⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠΔⵠⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bandage 1"
      }, {
        id: 4,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔⵠᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃᐃⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆΔⲆⲆⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Flower 1"
      }, {
        id: 5,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃᐃΔΔᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔᐃⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Bow 1"
      }, {
        id: 6,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃⲆⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆΔᐃⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Bandage 2"
      }, {
        id: 7,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃⲆⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃⲆⵠⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Flower 2"
      }, {
        id: 8,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃⵠⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔⲆΔⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Bandage 3"
      }, {
        id: 36,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⲆⵠⵠᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆⲆᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Foliage"
      }, {
        id: 59,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃΔⲆΔΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆᐃΔΔⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "eogito",
        name: "Peaceful"
      }, {
        id: 67,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆᐃΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "pizza wa",
        name: "Sparkles"
      }, {
        id: 68,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃⵠΔⵠᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠΔⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "pizza wa",
        name: "Luxury"
      }, {
        id: 69,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃΔᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔᐃΔⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆΔⲆ,
        ΔΔᐃ: "pizza wa",
        name: "Snow Flakes Crown"
      }, {
        id: 17,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃⲆᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠⲆⲆⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Glasses 1"
      }, {
        id: 10,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆΔᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠᐃᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Bow 2"
      }, {
        id: 11,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠⵠⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔⵠⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "pizza wa",
        name: "Little Stars"
      }, {
        id: 12,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆΔΔΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⵠⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Pirate Eye Patch 1"
      }, {
        id: 44,
        ᐃᐃᐃ: ᐃⲆ.ΔΔΔⵠⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆᐃᐃⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Taco4Life",
        name: "Pirate Eye Patch 2"
      }, {
        id: 23,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃΔΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆΔΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Clown nose"
      }, {
        id: 16,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃᐃᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠΔⲆΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Eye Patch"
      }, {
        id: 30,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔΔΔΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆⲆᐃΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "eogito",
        name: "Flower 3"
      }, {
        id: 38,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃⵠΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⵠⲆⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Winter",
        name: "False Nose"
      }, {
        id: 74,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⲆΔⲆᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆᐃⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Red Cloth"
      }, {
        id: 75,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔΔⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃᐃᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Blue Cloth"
      }, {
        id: 79,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆⲆΔᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⲆⵠⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Transparent Mask"
      }, {
        id: 89,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠⵠᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔΔⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Anyone want to play?",
        name: "Starve.io Anime"
      }, {
        id: 94,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⵠΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃᐃⵠⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Ant",
        name: "Hero Mask"
      }, {
        id: 100,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆΔⵠΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠᐃᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "This starver is mad"
      }, {
        id: 104,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⲆΔΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃᐃⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Scars"
      }, {
        id: 106,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔΔⵠⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⵠⲆⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "In Search of Intelligence"
      }, {
        id: 109,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠᐃⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⵠΔᐃⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Reclaimed Bandage"
      }, {
        id: 111,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃΔᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⲆⲆᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⲆΔΔ,
        ΔΔᐃ: "Starve.io",
        name: "Unwrap Starver for Gift"
      }, {
        id: 15,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃᐃΔᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔΔⲆᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Star Glasses"
      }, {
        id: 21,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⲆⵠⲆᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⲆⲆΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Great-aunt's Glasses"
      }, {
        id: 24,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃΔⲆⲆⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⲆΔⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Little Starver"
      }, {
        id: 22,
        ᐃᐃᐃ: ᐃⲆ.ⵠᐃΔⵠⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠᐃΔⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Little Glasses"
      }, {
        id: 13,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⵠⲆⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆⲆⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Flower Chain"
      }, {
        id: 29,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆΔᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃΔᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Horns"
      }, {
        id: 31,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆⲆⵠΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔᐃΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Golden Flower"
      }, {
        id: 40,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠᐃⲆΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "pizza wa",
        name: "Sleeping Mask"
      }, {
        id: 57,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠⵠΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⵠΔΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Taco4Life",
        name: "Fish on your head"
      }, {
        id: 58,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃⲆΔΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠⵠΔⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "eogito",
        name: "Rose"
      }, {
        id: 91,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃΔⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠΔᐃⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "upfiz",
        name: "Grey Scarf"
      }, {
        id: 92,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠΔⵠᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⲆⵠⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "upfiz",
        name: "Black Scarf"
      }, {
        id: 93,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠΔΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃΔⲆⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "upfiz",
        name: "Skull Mask"
      }, {
        id: 95,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⲆΔᐃᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⲆⲆᐃᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Golden Monocle"
      }, {
        id: 96,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠⲆᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠΔⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "A simple instruction"
      }, {
        id: 102,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆⵠⵠⵠⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⲆⲆⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Garland"
      }, {
        id: 103,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆΔⲆᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃⲆᐃᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "The Doormat"
      }, {
        id: 108,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⲆⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠᐃⵠᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Copium Tanks"
      }, {
        id: 117,
        ᐃᐃᐃ: ᐃⲆ.ΔΔᐃⵠⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆᐃⲆⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Eyelashes"
      }, {
        id: 118,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔⵠⲆΔⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠᐃⲆᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ᐃⵠᐃᐃ,
        ΔΔᐃ: "Starve.io",
        name: "Helmet Prototype"
      }, {
        id: 9,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃⲆⲆΔΔ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⲆⲆⵠⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Fancy Glasses"
      }, {
        id: 25,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠᐃⲆⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃΔⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Medecin Mask"
      }, {
        id: 14,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⵠΔⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆΔⲆⵠΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mr. Mayor"
      }, {
        id: 19,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠⲆᐃᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠΔⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Sunglasses 2"
      }, {
        id: 28,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆᐃΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆⲆΔⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "pizza wa",
        name: "Starfish"
      }, {
        id: 37,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆᐃΔⲆⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠᐃᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Berry"
      }, {
        id: 39,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔⲆⲆᐃΔΔ,
        ⲆⵠⲆ: ᐃⲆ.Ⲇⵠⵠᐃⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Flake"
      }, {
        id: 43,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠᐃᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃΔⵠΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Leaf "
      }, {
        id: 61,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔΔΔⵠⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔΔⵠΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "A sword in your head"
      }, {
        id: 62,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃᐃᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠⲆⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Winter Scarf"
      }, {
        id: 64,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃⲆⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⲆᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Winter Scarf 2"
      }, {
        id: 66,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠⵠΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠⵠΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "eogito",
        name: "Winter Scarf 3"
      }, {
        id: 70,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠΔⲆⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔᐃⲆᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Mask with animal tracks"
      }, {
        id: 71,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⲆᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃΔⵠΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Spring Mask"
      }, {
        id: 72,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⵠⵠⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠⵠⲆⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Pink Mask"
      }, {
        id: 73,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆΔⲆⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔΔⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Blue Mask"
      }, {
        id: 76,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⲆᐃⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆΔⲆⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Military Mask"
      }, {
        id: 77,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆⲆⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆᐃⲆⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Orange Mask"
      }, {
        id: 78,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃΔᐃᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆᐃΔᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "White and Red Points Mask"
      }, {
        id: 80,
        ᐃᐃᐃ: ᐃⲆ.Ⲇⵠⵠⵠᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃⲆᐃΔᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Stick out your tongue Mask"
      }, {
        id: 81,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆⵠⵠⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⵠᐃΔᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Two Teeth Mask"
      }, {
        id: 82,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠⲆⵠᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⵠΔᐃΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Make-up Mask"
      }, {
        id: 83,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔᐃᐃⲆᐃᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆⵠᐃᐃΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Sad Mask"
      }, {
        id: 84,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⵠᐃⲆⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠⵠⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Happy Mask"
      }, {
        id: 90,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆⵠᐃᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠᐃᐃᐃⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "aloner",
        name: "Blood"
      }, {
        id: 101,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆᐃⵠⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃᐃΔⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Axed Plans"
      }, {
        id: 105,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠΔΔᐃⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠΔⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Saddle"
      }, {
        id: 113,
        ᐃᐃᐃ: ᐃⲆ.ΔΔⲆᐃᐃⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⵠΔⲆⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "I see"
      }, {
        id: 114,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔΔⲆᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔⵠΔΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "I have no body and I must dress"
      }, {
        id: 115,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆⵠⲆⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆΔⵠⵠΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆᐃⵠΔ,
        ΔΔᐃ: "Starve.io",
        name: "Cursed Crown"
      }, {
        id: 27,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠⲆⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⲆⵠⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Clown Face"
      }, {
        id: 20,
        ᐃᐃᐃ: ᐃⲆ.ⲆⵠⵠⵠⲆⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠⵠⲆΔⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Sunglasses 3"
      }, {
        id: 32,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠᐃⵠⲆᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⵠⲆⵠΔⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Engineer's Glasses"
      }, {
        id: 33,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃΔᐃⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠΔᐃᐃΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Engineer's Monocle"
      }, {
        id: 34,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔⵠᐃⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔΔⵠⲆⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Mauve's butt"
      }, {
        id: 41,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⲆᐃⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠΔᐃⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Lapa Head"
      }, {
        id: 42,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆⵠⵠⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠⵠΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "eogito",
        name: "Lapa Head "
      }, {
        id: 85,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⲆⲆᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠᐃᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Mask and Glasses"
      }, {
        id: 110,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠΔⲆΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⲆⲆⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⲆⲆⵠ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Spectrum Pet"
      }, {
        id: 60,
        ᐃᐃᐃ: ᐃⲆ.ⵠΔⲆⲆΔᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠᐃᐃⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Jason"
      }, {
        id: 26,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔΔⵠⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⲆⲆᐃⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Devil Horns"
      }, {
        id: 18,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆᐃᐃⲆΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⵠⵠᐃⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Big Boss"
      }, {
        id: 35,
        ᐃᐃᐃ: ᐃⲆ.ᐃΔᐃΔᐃⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃⲆⲆⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Baby Kraken"
      }, {
        id: 63,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃⵠⵠⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⵠⲆΔᐃⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Deer Antlers"
      }, {
        id: 65,
        ᐃᐃᐃ: ᐃⲆ.ᐃⵠⵠᐃΔⲆΔ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔΔⲆΔⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Baby Dragon on your head"
      }, {
        id: 86,
        ᐃᐃᐃ: ᐃⲆ.ᐃⲆΔΔᐃⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆΔᐃᐃᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Gaz Mask and Glasses"
      }, {
        id: 87,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⵠᐃⲆᐃⲆ,
        ⲆⵠⲆ: ᐃⲆ.ᐃᐃⲆⵠⵠᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Pink Gaz Mask and Glasses"
      }, {
        id: 88,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆΔᐃⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⲆᐃⲆⵠⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "eogito",
        name: "Engineer Glasses"
      }, {
        id: 97,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆΔⵠΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔⲆⲆⵠᐃⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Jarred Horns"
      }, {
        id: 98,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃⲆΔᐃᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔᐃⲆⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Curved Horns"
      }, {
        id: 99,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔⵠⵠᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆΔⵠⲆᐃΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Evil Goat Horns"
      }, {
        id: 107,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆⲆⲆⲆⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⵠⲆΔΔⲆΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Decorative Earmuffs"
      }, {
        id: 112,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⲆᐃΔⵠΔ,
        ⲆⵠⲆ: ᐃⲆ.ⵠΔⵠΔΔΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Tamon Dragon Pet"
      }, {
        id: 116,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⵠⵠΔⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⲆⲆⲆⲆᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.ⲆⵠᐃⲆ,
        ΔΔᐃ: "Starve.io",
        name: "Blanket"
      }, {
        id: 45,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆⵠᐃⲆⲆᐃ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⵠΔⵠⵠⵠᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 5",
        level: 5
      }, {
        id: 46,
        ᐃᐃᐃ: ᐃⲆ.ⲆⲆΔⵠⲆΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠᐃᐃⲆΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 10",
        level: 10
      }, {
        id: 47,
        ᐃᐃᐃ: ᐃⲆ.ⲆᐃΔᐃΔⲆⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⲆⵠᐃⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 15",
        level: 15
      }, {
        id: 48,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆⵠᐃΔⵠⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆᐃᐃΔⵠⵠⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 20",
        level: 20
      }, {
        id: 49,
        ᐃᐃᐃ: ᐃⲆ.ⲆΔᐃⵠⵠΔᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃΔⵠᐃⵠⲆⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 25",
        level: 25
      }, {
        id: 50,
        ᐃᐃᐃ: ᐃⲆ.ⵠⲆⲆᐃΔᐃΔ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠⵠΔᐃⵠΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 30",
        level: 30
      }, {
        id: 51,
        ᐃᐃᐃ: ᐃⲆ.ΔⲆᐃᐃⵠΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ΔⵠΔᐃΔᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 35",
        level: 35
      }, {
        id: 52,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆⲆⲆⵠᐃ,
        ⲆⵠⲆ: ᐃⲆ.ᐃⵠⵠΔⲆΔΔ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 40",
        level: 40
      }, {
        id: 53,
        ᐃᐃᐃ: ᐃⲆ.ⵠⵠⲆⵠᐃΔⲆ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆⵠᐃⲆᐃᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 45",
        level: 45
      }, {
        id: 54,
        ᐃᐃᐃ: ᐃⲆ.ΔⵠⵠⲆΔΔⵠ,
        ⲆⵠⲆ: ᐃⲆ.ⲆⲆᐃⵠⵠⲆⲆ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 50",
        level: 50
      }, {
        id: 55,
        ᐃᐃᐃ: ᐃⲆ.ᐃᐃΔⲆΔⵠⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃΔᐃⲆΔᐃ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 55",
        level: 55
      }, {
        id: 56,
        ᐃᐃᐃ: ᐃⲆ.ΔᐃⲆΔᐃᐃⵠ,
        ⲆⵠⲆ: ᐃⲆ.ΔᐃⵠᐃⵠΔⵠ,
        ᐃᐃⵠ: ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ,
        ΔΔᐃ: "Starve.io",
        name: "More than Level 60",
        level: 60
      }]
    };
    v2205.ⲆⲆᐃⲆⲆⲆⲆ = ᐃᐃⵠⲆⵠⵠⵠ(ⲆΔᐃΔ.ᐃΔⵠⲆⵠ, 21);
    v2205.ΔᐃᐃⲆⲆⵠᐃ = ᐃᐃⵠⲆⵠⵠⵠ(ⲆΔᐃΔ.ᐃΔⵠⲆⵠ, 20);
    ⲆⲆ[255] = [];
    ⲆⲆ[7] = [];
    ⲆⲆ[250] = [];
    ⲆⲆ[28] = [];
    ⲆⲆ[29] = [];
    ⲆⲆ[796] = [];
    for (var v751 = 0; ⲆΔᐃΔ.ᐃΔⵠⲆⵠ.length > v751; v751++) {
      ⲆⲆ[255][v751] = [ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[v751].ᐃᐃᐃ, ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[v751].ⲆⵠⲆ];
      ⲆⲆ[7][v751] = [ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[v751].ᐃΔⲆΔ, ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[v751].ⵠⲆⲆⵠ];
    }
    for (v751 = 0; ⲆΔᐃΔ.ᐃᐃΔⲆⵠ.length > v751; v751++) {
      ⲆⲆ[28][v751] = [ⲆΔᐃΔ.ᐃᐃΔⲆⵠ[v751].ᐃᐃᐃ, ⲆΔᐃΔ.ᐃᐃΔⲆⵠ[v751].ⲆⵠⲆ];
    }
    for (v751 = 0; v751 < ⲆΔᐃΔ.ΔᐃⵠΔⲆ.length; v751++) {
      ⲆⲆ[250][v751] = [ⲆΔᐃΔ.ΔᐃⵠΔⲆ[v751].ᐃᐃᐃ, ⲆΔᐃΔ.ΔᐃⵠΔⲆ[v751].ⲆⵠⲆ];
    }
    for (v751 = 0; v751 < ⲆΔᐃΔ.ⲆⵠⲆⲆ.length; v751++) {
      ⲆⲆ[29][v751] = [ⲆΔᐃΔ.ⲆⵠⲆⲆ[v751].ᐃᐃᐃ, ⲆΔᐃΔ.ⲆⵠⲆⲆ[v751].ⲆⵠⲆ];
    }
    for (v751 = 0; v751 < ⲆΔᐃΔ.ⵠΔᐃⲆⲆ.length; v751++) {
      ⲆⲆ[796][v751] = [ⲆΔᐃΔ.ⵠΔᐃⲆⲆ[v751].ᐃᐃᐃ, ⲆΔᐃΔ.ⵠΔᐃⲆⲆ[v751].ⲆⵠⲆ];
    }
  };
  const v752 = 0;
  const v753 = 2;
  const v754 = 16;
  function f87(p490, p491, p492, p493) {
    p490.beginPath();
    p490.arc(p491, p492, p493, 0, Math.PI * 2);
  }
  function f88(p494, p495, p496, p497, p498) {
    p494.beginPath();
    p494.lineCap = "round";
    p494.arc(p495, p496, p497, 0, p498 * (Math.PI * 2));
  }
  function f89(p499, p500, p501, p502, p503, p504) {
    if (p504 * 2 > p502) {
      p504 = p502 / 2;
    }
    if (p504 * 2 > p503) {
      p504 = p503 / 2;
    }
    if (p504 < 0) {
      p504 = 0;
    }
    p499.beginPath();
    p499.moveTo(p500 + p504, p501);
    p499.arcTo(p500 + p502, p501, p500 + p502, p501 + p503, p504);
    p499.arcTo(p500 + p502, p501 + p503, p500, p501 + p503, p504);
    p499.arcTo(p500, p501 + p503, p500, p501, p504);
    p499.arcTo(p500, p501, p500 + p502, p501, p504);
    p499.closePath();
  }
  const v755 = 3;
  function f90(p505, p506) {
    var v756 = document.createElement("canvas");
    var v757 = v756.getContext("2d");
    var v758 = Math.floor(p505 * 28);
    var v759 = Math.floor(p505 * 20);
    v757.font = v759 + "px Baloo Paaji";
    var v760 = p505 * 8;
    var v761 = v757.measureText(p506).width + v760 * 2;
    v756.width = v761;
    v756.height = v758;
    f89(v757, 0, 0, v761, v758, p505 * 10);
    v757.globalAlpha = 0.5;
    f86(v757, "#000");
    v757.globalAlpha = 1;
    v757.textBaseline = "middle";
    v757.font = v759 + "px Baloo Paaji";
    v757.beginPath();
    v757.fillStyle = "#FFF";
    v757.fillText(p506, v760, v758 / 2);
    return v756;
  }
  function f91(p507, p508) {
    var v762 = document.createElement("canvas");
    var v763 = v762.getContext("2d");
    var v764 = Math.sqrt(p508.width * p508.width + p508.height * p508.height);
    d2 = v764 / 2;
    v762.width = v764;
    v762.height = v764;
    v763.translate(d2, d2);
    v763.rotate(p507);
    v763.drawImage(p508, -p508.width / 2, -p508.height / 2);
    return v762;
  }
  function f92(p509, p510, p511, p512) {
    var v765 = Math.PI * 2 / p510;
    p509.beginPath();
    var v766 = [{
      x: p511,
      y: 0
    }];
    var v767 = [];
    for (var v768 = 1; v768 < p510; v768++) {
      v766.push({
        x: Math.sin(v768 * v765) * p511,
        y: Math.cos(v768 * v765) * p511
      });
      var v769 = v766.length;
      v767.push(ⲆΔΔ.ᐃᐃΔΔΔⲆⲆ(v766[v769 - 2], v766[v769 - 1]));
    }
    v767.push(ⲆΔΔ.ᐃᐃΔΔΔⲆⲆ(v766[v766.length - 1], v766[0]));
    var v770 = v767[v767.length - 1];
    p509.moveTo(v770.x, v770.y);
    for (v768 = 0; v768 < p510; v768++) {
      p509.arcTo(v766[v768].x, v766[v768].y, v767[v768].x, v767[v768].y, p512);
    }
    p509.closePath();
  }
  const v771 = 0;
  function f93(p513, p514) {
    var v772 = document.createElement("canvas");
    var v773 = v772.getContext("2d");
    var v774 = p513 * 120;
    var v775 = p513 * 110;
    var v776 = v774 / 2;
    var v777 = v775 / 2;
    var v778 = p513 * 20;
    var v779 = p513 * 112;
    var v780 = p513 * 82;
    var v781 = v779 / 2;
    var v782 = v780 / 2;
    var v783 = p513 * 4;
    v772.width = v774;
    v772.height = v775;
    v773.globalAlpha = 1;
    v773.translate(v776, v777);
    f89(v773, -v781, -v782, v779, v780, v778);
    f86(v773, p514, p514, v783);
    return v772;
  }
  function f94(p515, p516, p517) {
    var v784 = document.createElement("canvas");
    var v785 = v784.getContext("2d");
    v784.width = p515 * 70;
    v784.height = p515 * 70;
    v785.globalAlpha = 0.5;
    f87(v785, p515 * 26, p515 * 26, p515 * 9);
    f86(v785, p517[0]);
    f87(v785, p515 * 56, p515 * 36, p515 * 9);
    f86(v785, p517[1]);
    f87(v785, p515 * 40, p515 * 50, p515 * 9);
    f86(v785, p517[2]);
    v785.globalAlpha = 1;
    f87(v785, p515 * 26, p515 * 26, p515 * 5);
    f86(v785, p517[0]);
    f87(v785, p515 * 56, p515 * 36, p515 * 5);
    f86(v785, p517[1]);
    f87(v785, p515 * 40, p515 * 50, p515 * 5);
    f86(v785, p517[2]);
    return v784;
  }
  function f95(p518, p519, p520) {
    var v786 = document.createElement("canvas");
    var v787 = v786.getContext("2d");
    v786.width = p518 * 264;
    v786.height = p518 * 246;
    v787.translate(0, p518 * 10);
    v787.globalAlpha = p519 ? 0.5 : 1;
    v787.beginPath();
    v787.lineCap = "round";
    v787.lineJoin = "round";
    v787.moveTo(p518 * 75, p518 * 54);
    v787.bezierCurveTo(p518 * 79, p518 * 21, p518 * 131, p518 * 13, p518 * 153, p518 * 36);
    v787.bezierCurveTo(p518 * 204, p518 * 27, p518 * 221, p518 * 52, p518 * 216, p518 * 83);
    v787.bezierCurveTo(p518 * 241, p518 * 103, p518 * 232, p518 * 138, p518 * 214, p518 * 147);
    v787.bezierCurveTo(p518 * 223, p518 * 184, p518 * 201, p518 * 200, p518 * 175, p518 * 199);
    v787.bezierCurveTo(p518 * 156, p518 * 218, p518 * 135, p518 * 222, p518 * 114, p518 * 203);
    v787.bezierCurveTo(p518 * 62, p518 * 213, p518 * 66, p518 * 189, p518 * 59, p518 * 170);
    v787.bezierCurveTo(p518 * 27, p518 * 164, p518 * 31, p518 * 134, p518 * 38, p518 * 123);
    v787.bezierCurveTo(p518 * 11, p518 * 80, p518 * 51, p518 * 52, p518 * 75, p518 * 54);
    v787.closePath();
    f86(v787, p520[0]);
    v787.translate(0, p518 * -10);
    v787.globalAlpha = 1;
    v787.beginPath();
    v787.lineCap = "round";
    v787.lineJoin = "round";
    v787.moveTo(p518 * 75, p518 * 54);
    v787.bezierCurveTo(p518 * 79, p518 * 21, p518 * 131, p518 * 13, p518 * 153, p518 * 36);
    v787.bezierCurveTo(p518 * 204, p518 * 27, p518 * 221, p518 * 52, p518 * 216, p518 * 83);
    v787.bezierCurveTo(p518 * 241, p518 * 103, p518 * 232, p518 * 138, p518 * 214, p518 * 147);
    v787.bezierCurveTo(p518 * 223, p518 * 184, p518 * 201, p518 * 200, p518 * 175, p518 * 199);
    v787.bezierCurveTo(p518 * 156, p518 * 218, p518 * 135, p518 * 222, p518 * 114, p518 * 203);
    v787.bezierCurveTo(p518 * 62, p518 * 213, p518 * 66, p518 * 189, p518 * 59, p518 * 170);
    v787.bezierCurveTo(p518 * 27, p518 * 164, p518 * 31, p518 * 134, p518 * 38, p518 * 123);
    v787.bezierCurveTo(p518 * 11, p518 * 80, p518 * 51, p518 * 52, p518 * 75, p518 * 54);
    v787.closePath();
    f86(v787, p520[1], p520[2], p518 * 8);
    v787.beginPath();
    v787.lineCap = "round";
    v787.lineJoin = "round";
    v787.moveTo(p518 * 121, p518 * 102);
    v787.bezierCurveTo(p518 * 111, p518 * 80, p518 * 110, p518 * 66, p518 * 108, p518 * 51);
    v787.bezierCurveTo(p518 * 119, p518 * 65, p518 * 129, p518 * 85, p518 * 135, p518 * 99);
    v787.bezierCurveTo(p518 * 142, p518 * 67, p518 * 146, p518 * 60, p518 * 152, p518 * 50);
    v787.bezierCurveTo(p518 * 154, p518 * 71, p518 * 152, p518 * 85, p518 * 149, p518 * 104);
    v787.bezierCurveTo(p518 * 166, p518 * 88, p518 * 175, p518 * 83, p518 * 188, p518 * 78);
    v787.bezierCurveTo(p518 * 179, p518 * 91, p518 * 170, p518 * 103, p518 * 160, p518 * 112);
    v787.bezierCurveTo(p518 * 186, p518 * 107, p518 * 191, p518 * 107, p518 * 204, p518 * 108);
    v787.bezierCurveTo(p518 * 195, p518 * 114, p518 * 179, p518 * 120, p518 * 163, p518 * 123);
    v787.bezierCurveTo(p518 * 183, p518 * 130, p518 * 186, p518 * 135, p518 * 192, p518 * 140);
    v787.bezierCurveTo(p518 * 179, p518 * 141, p518 * 164, p518 * 139, p518 * 153, p518 * 135);
    v787.bezierCurveTo(p518 * 158, p518 * 145, p518 * 163, p518 * 159, p518 * 165, p518 * 177);
    v787.bezierCurveTo(p518 * 154, p518 * 166, p518 * 145, p518 * 153, p518 * 138, p518 * 139);
    v787.bezierCurveTo(p518 * 133, p518 * 155, p518 * 125, p518 * 170, p518 * 117, p518 * 182);
    v787.bezierCurveTo(p518 * 116, p518 * 160, p518 * 119, p518 * 151, p518 * 124, p518 * 138);
    v787.bezierCurveTo(p518 * 107, p518 * 150, p518 * 95, p518 * 156, p518 * 82, p518 * 159);
    v787.bezierCurveTo(p518 * 94, p518 * 140, p518 * 101, p518 * 136, p518 * 113, p518 * 128);
    v787.bezierCurveTo(p518 * 78, p518 * 123, p518 * 75, p518 * 121, p518 * 67, p518 * 118);
    v787.bezierCurveTo(p518 * 85, p518 * 112, p518 * 94, p518 * 112, p518 * 111, p518 * 113);
    v787.bezierCurveTo(p518 * 89, p518 * 97, p518 * 85, p518 * 93, p518 * 78, p518 * 82);
    v787.bezierCurveTo(p518 * 92, p518 * 85, p518 * 101, p518 * 90, p518 * 121, p518 * 102);
    v787.closePath();
    f86(v787, p520[2]);
    v787.beginPath();
    v787.lineCap = "round";
    v787.lineJoin = "round";
    v787.moveTo(p518 * 128, p518 * 103);
    v787.bezierCurveTo(p518 * 111, p518 * 112, p518 * 117, p518 * 136, p518 * 140, p518 * 130);
    v787.bezierCurveTo(p518 * 151, p518 * 126, p518 * 156, p518 * 115, p518 * 155, p518 * 107);
    v787.bezierCurveTo(p518 * 155, p518 * 96, p518 * 154, p518 * 94, p518 * 148, p518 * 94);
    v787.bezierCurveTo(p518 * 141, p518 * 94, p518 * 146, p518 * 104, p518 * 136, p518 * 104);
    v787.closePath();
    f86(v787, p520[3], p520[4], p518 * 4);
    return v786;
  }
  const v788 = 8;
  function f96(p521, p522, p523) {
    var v789 = document.createElement("canvas");
    var v790 = v789.getContext("2d");
    v789.width = p521 * 22;
    v789.height = p521 * 22;
    v790.globalAlpha = 0.4;
    f87(v790, p521 * 11, p521 * 11, p521 * 10);
    f86(v790, p523[0]);
    v790.globalAlpha = 0.7;
    f87(v790, p521 * 11, p521 * 11, p521 * 7);
    f86(v790, p523[0]);
    v790.globalAlpha = 1;
    f87(v790, p521 * 11, p521 * 11, p521 * 4);
    f86(v790, p523[0]);
    return v789;
  }
  function f97(p524, p525, p526) {
    var v791 = document.createElement("canvas");
    var v792 = v791.getContext("2d");
    v791.width = p524 * 248;
    v791.height = p524 * 247;
    v792.save();
    v792.translate(p524 * 182, p524 * 120);
    f89(v792, p524 * -8, p524 * -67, p524 * 16, p524 * 134, p524 * 1);
    v792.restore();
    f86(v792, p526[0]);
    v792.save();
    v792.translate(p524 * 68.5, p524 * 127.5);
    f89(v792, p524 * -8.5, p524 * -70.5, p524 * 17, p524 * 141, p524 * 1);
    v792.restore();
    f86(v792, p526[0]);
    v792.save();
    v792.translate(p524 * 123.5, p524 * 68);
    f89(v792, p524 * -82.5, p524 * -24, p524 * 165, p524 * 48, p524 * 4);
    v792.restore();
    f86(v792, p526[2], p526[1], p524 * 6);
    v792.save();
    v792.translate(p524 * 123, p524 * 179.5);
    f89(v792, p524 * -83, p524 * -24.5, p524 * 166, p524 * 49, p524 * 4);
    v792.restore();
    f86(v792, p526[2], p526[1], p524 * 6);
    v792.save();
    v792.translate(p524 * 123.5, p524 * 123.5);
    v792.rotate(6.24);
    f89(v792, p524 * -82.5, p524 * -24.5, p524 * 165, p524 * 49, p524 * 4);
    v792.restore();
    f86(v792, p526[3], p526[1], p524 * 6);
    v792.beginPath();
    v792.lineCap = "round";
    v792.lineJoin = "round";
    v792.moveTo(p524 * 204, p524 * 112);
    v792.bezierCurveTo(p524 * 149, p524 * 121.5, p524 * 96, p524 * 130, p524 * 94, p524 * 131);
    v792.bezierCurveTo(p524 * 149.5, p524 * 127.5, p524 * 149.5, p524 * 127.5, p524 * 205, p524 * 124);
    v792.closePath();
    f86(v792, p526[1]);
    return v791;
  }
  function f98(p527, p528, p529) {
    var v793 = document.createElement("canvas");
    var v794 = v793.getContext("2d");
    v793.width = p527 * 248;
    v793.height = p527 * 247;
    v794.save();
    v794.translate(p527 * 69.5, p527 * 145);
    f89(v794, p527 * -8.5, p527 * -63, p527 * 17, p527 * 127, p527 * 1);
    v794.restore();
    f86(v794, p529[0]);
    v794.save();
    v794.translate(p527 * 183, p527 * 145);
    f89(v794, p527 * -8, p527 * -63, p527 * 16, p527 * 126, p527 * 1);
    v794.restore();
    f86(v794, p529[0]);
    v794.save();
    v794.translate(p527 * 123.5, p527 * 62.5);
    v794.rotate(6.28);
    f89(v794, p527 * -84.5, p527 * -25.5, p527 * 169, p527 * 51, p527 * 5);
    v794.restore();
    f86(v794, p529[2], p529[1], p527 * 6);
    v794.save();
    v794.translate(p527 * 123.5, p527 * 118);
    v794.rotate(6.24);
    f89(v794, p527 * -85.5, p527 * -24, p527 * 169, p527 * 48, p527 * 5);
    v794.restore();
    f86(v794, p529[3], p529[1], p527 * 6);
    v794.save();
    v794.translate(p527 * 122, p527 * 177.5);
    v794.rotate(6.32);
    f89(v794, p527 * -84, p527 * -23.5, p527 * 169, p527 * 47, p527 * 5);
    v794.restore();
    f86(v794, p529[2], p529[1], p527 * 6);
    v794.beginPath();
    v794.lineCap = "round";
    v794.lineJoin = "round";
    v794.moveTo(p527 * 37, p527 * 157);
    v794.bezierCurveTo(p527 * 49, p527 * 160, p527 * 49, p527 * 160, p527 * 61, p527 * 163);
    v794.bezierCurveTo(p527 * 49.5, p527 * 165.5, p527 * 49.5, p527 * 165.5, p527 * 38, p527 * 168);
    v794.closePath();
    f86(v794, p529[1]);
    v794.beginPath();
    v794.lineCap = "round";
    v794.lineJoin = "round";
    v794.moveTo(p527 * 205, p527 * 175);
    v794.bezierCurveTo(p527 * 192.5, p527 * 180, p527 * 192.5, p527 * 180, p527 * 180, p527 * 185);
    v794.bezierCurveTo(p527 * 193, p527 * 188, p527 * 193, p527 * 188, p527 * 206, p527 * 191);
    v794.closePath();
    f86(v794, p529[1]);
    return v793;
  }
  const v795 = 10;
  function f99(p530, p531, p532) {
    var v796 = document.createElement("canvas");
    var v797 = v796.getContext("2d");
    v796.width = p530 * 248;
    v796.height = p530 * 247;
    v797.save();
    v797.translate(p530 * 183, p530 * 107);
    f89(v797, p530 * -8, p530 * -70.5, p530 * 16, p530 * 141, p530 * 1);
    v797.restore();
    f86(v797, p532[0]);
    v797.save();
    v797.translate(p530 * 69.5, p530 * 110);
    f89(v797, p530 * -8.5, p530 * -71, p530 * 17, p530 * 143, p530 * 1);
    v797.restore();
    f86(v797, p532[0]);
    v797.save();
    v797.translate(p530 * 123.5, p530 * 181);
    f89(v797, p530 * -84.5, p530 * -26, p530 * 169, p530 * 52, p530 * 5);
    v797.restore();
    f86(v797, p532[2], p532[1], p530 * 6);
    v797.beginPath();
    v797.lineCap = "round";
    v797.lineJoin = "round";
    v797.moveTo(p530 * 41, p530 * 95);
    v797.bezierCurveTo(p530 * 105, p530 * 96, p530 * 113, p530 * 99, p530 * 134, p530 * 102);
    v797.bezierCurveTo(p530 * 147, p530 * 106, p530 * 173, p530 * 100, p530 * 207, p530 * 105);
    v797.bezierCurveTo(p530 * 210, p530 * 105, p530 * 207, p530 * 140, p530 * 207, p530 * 154);
    v797.bezierCurveTo(p530 * 123.5, p530 * 151.5, p530 * 123.5, p530 * 151.5, p530 * 40, p530 * 149);
    v797.bezierCurveTo(p530 * 37, p530 * 145, p530 * 39, p530 * 95, p530 * 41, p530 * 96);
    v797.closePath();
    f86(v797, p532[2], p532[1], p530 * 6);
    v797.beginPath();
    v797.lineCap = "round";
    v797.lineJoin = "round";
    v797.moveTo(p530 * 68, p530 * 75);
    v797.bezierCurveTo(p530 * 54, p530 * 72.5, p530 * 54, p530 * 72.5, p530 * 40, p530 * 70);
    v797.bezierCurveTo(p530 * 38, p530 * 46, p530 * 40, p530 * 46, p530 * 53, p530 * 46);
    v797.bezierCurveTo(p530 * 201, p530 * 41, p530 * 201, p530 * 41, p530 * 201, p530 * 42);
    v797.bezierCurveTo(p530 * 211, p530 * 40, p530 * 208, p530 * 53, p530 * 208, p530 * 72);
    v797.bezierCurveTo(p530 * 209, p530 * 91, p530 * 210, p530 * 96, p530 * 194, p530 * 94);
    v797.bezierCurveTo(p530 * 119, p530 * 97, p530 * 119, p530 * 97, p530 * 44, p530 * 100);
    v797.bezierCurveTo(p530 * 39, p530 * 99, p530 * 40, p530 * 96, p530 * 40, p530 * 80);
    v797.bezierCurveTo(p530 * 54, p530 * 77.5, p530 * 54, p530 * 77.5, p530 * 68, p530 * 75);
    v797.closePath();
    f86(v797, p532[3], p532[1], p530 * 6);
    return v796;
  }
  function f100(p533, p534, p535) {
    var v798 = document.createElement("canvas");
    var v799 = v798.getContext("2d");
    v798.width = p533 * 191;
    v798.height = p533 * 153;
    v799.globalAlpha = 0.5;
    v799.translate(0, p533 * 10);
    v799.save();
    v799.translate(p533 * 96.49996948242188, p533 * 66.79510498046875);
    v799.rotate(0);
    f89(v799, p533 * -79.5, p533 * -48.5, p533 * 159, p533 * 97, p533 * 22);
    v799.restore();
    f86(v799, p535[0], p535[0], p533 * 4);
    v799.globalAlpha = 1;
    v799.translate(0, p533 * -10);
    v799.save();
    v799.translate(p533 * 96.49996948242188, p533 * 66.79510498046875);
    v799.rotate(0);
    f89(v799, p533 * -79.5, p533 * -48.5, p533 * 159, p533 * 97, p533 * 22);
    v799.restore();
    f86(v799, p535[1], p535[2], p533 * 4);
    v799.translate(p533 * 2, 0);
    v799.beginPath();
    v799.lineCap = "round";
    v799.lineJoin = "round";
    v799.moveTo(p533 * 119, p533 * 28);
    v799.bezierCurveTo(p533 * 119, p533 * 22, p533 * 119, p533 * 20, p533 * 122, p533 * 16);
    v799.bezierCurveTo(p533 * 149, p533 * 39, p533 * 149, p533 * 39, p533 * 176, p533 * 63);
    v799.bezierCurveTo(p533 * 176, p533 * 75, p533 * 176, p533 * 75, p533 * 175, p533 * 88);
    v799.bezierCurveTo(p533 * 174, p533 * 90, p533 * 174, p533 * 90, p533 * 172, p533 * 93);
    v799.bezierCurveTo(p533 * 171, p533 * 101, p533 * 169, p533 * 109, p533 * 164, p533 * 113);
    v799.bezierCurveTo(p533 * 163, p533 * 104, p533 * 163, p533 * 104, p533 * 162, p533 * 95);
    v799.bezierCurveTo(p533 * 155, p533 * 105, p533 * 155, p533 * 105, p533 * 147, p533 * 116);
    v799.bezierCurveTo(p533 * 87, p533 * 114, p533 * 87, p533 * 114, p533 * 26, p533 * 112);
    v799.bezierCurveTo(p533 * 27, p533 * 106, p533 * 27, p533 * 106, p533 * 27, p533 * 101);
    v799.bezierCurveTo(p533 * 24, p533 * 104, p533 * 24, p533 * 104, p533 * 20, p533 * 108);
    v799.bezierCurveTo(p533 * 17, p533 * 103, p533 * 20, p533 * 86, p533 * 23, p533 * 72);
    v799.bezierCurveTo(p533 * 15, p533 * 74, p533 * 14, p533 * 78, p533 * 12, p533 * 83);
    v799.bezierCurveTo(p533 * 12, p533 * 65, p533 * 12, p533 * 54, p533 * 16, p533 * 42);
    v799.bezierCurveTo(p533 * 14, p533 * 39, p533 * 14, p533 * 39, p533 * 12, p533 * 36);
    v799.bezierCurveTo(p533 * 16, p533 * 33, p533 * 16, p533 * 33, p533 * 19, p533 * 30);
    v799.bezierCurveTo(p533 * 18, p533 * 27, p533 * 18, p533 * 27, p533 * 17, p533 * 25);
    v799.bezierCurveTo(p533 * 24, p533 * 24, p533 * 31, p533 * 21, p533 * 29, p533 * 19);
    v799.bezierCurveTo(p533 * 37, p533 * 25, p533 * 37, p533 * 25, p533 * 45, p533 * 31);
    v799.bezierCurveTo(p533 * 40, p533 * 23, p533 * 40, p533 * 21, p533 * 42, p533 * 16);
    v799.bezierCurveTo(p533 * 74, p533 * 16, p533 * 74, p533 * 16, p533 * 106, p533 * 16);
    v799.bezierCurveTo(p533 * 113, p533 * 21, p533 * 113, p533 * 21, p533 * 119, p533 * 26);
    v799.closePath();
    f86(v799, p535[3], p535[4], p533 * 4);
    return v798;
  }
  function f101(p536, p537, p538, p539) {
    var v800 = document.createElement("canvas");
    var v801 = v800.getContext("2d");
    v800.width = p536 * 185;
    v800.height = p536 * 240;
    v801.globalAlpha = 0.5;
    v801.translate(0, p536 * 10);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 44, p536 * 137);
    v801.bezierCurveTo(p536 * 60, p536 * 87, p536 * 68, p536 * 66, p536 * 92, p536 * 67);
    v801.bezierCurveTo(p536 * 115, p536 * 64, p536 * 129, p536 * 97, p536 * 137, p536 * 136);
    v801.closePath();
    f86(v801, p538[0]);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 53, p536 * 181);
    v801.bezierCurveTo(p536 * 30, p536 * 164, p536 * 19, p536 * 150, p536 * 11, p536 * 136);
    v801.bezierCurveTo(p536 * 28, p536 * 121, p536 * 38, p536 * 132, p536 * 48, p536 * 150);
    v801.closePath();
    f86(v801, p538[0]);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 63, p536 * 208);
    v801.bezierCurveTo(p536 * 75, p536 * 224, p536 * 86, p536 * 228, p536 * 93, p536 * 228);
    v801.bezierCurveTo(p536 * 104, p536 * 229, p536 * 116, p536 * 219, p536 * 122, p536 * 205);
    v801.closePath();
    f86(v801, p538[0]);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 130, p536 * 170);
    v801.bezierCurveTo(p536 * 146, p536 * 125, p536 * 156, p536 * 126, p536 * 173, p536 * 137);
    v801.bezierCurveTo(p536 * 167, p536 * 151, p536 * 143, p536 * 174, p536 * 131, p536 * 183);
    v801.closePath();
    f86(v801, p538[0]);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 39, p536 * 140);
    v801.bezierCurveTo(p536 * 75, p536 * 126, p536 * 113, p536 * 127, p536 * 143, p536 * 137);
    v801.bezierCurveTo(p536 * 141, p536 * 186, p536 * 130, p536 * 202, p536 * 113, p536 * 214);
    v801.bezierCurveTo(p536 * 85, p536 * 228, p536 * 56, p536 * 219, p536 * 48, p536 * 173);
    v801.bezierCurveTo(p536 * 40, p536 * 148, p536 * 43, p536 * 145, p536 * 39, p536 * 140);
    v801.closePath();
    f86(v801, p538[0]);
    v801.globalAlpha = 1;
    v801.translate(0, p536 * -10);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 44, p536 * 137);
    v801.bezierCurveTo(p536 * 60, p536 * 87, p536 * 68, p536 * 66, p536 * 92, p536 * 67);
    v801.bezierCurveTo(p536 * 115, p536 * 64, p536 * 129, p536 * 97, p536 * 137, p536 * 136);
    v801.closePath();
    f86(v801, p538[1], p538[2], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 53, p536 * 181);
    v801.bezierCurveTo(p536 * 30, p536 * 164, p536 * 19, p536 * 150, p536 * 11, p536 * 136);
    v801.bezierCurveTo(p536 * 28, p536 * 121, p536 * 38, p536 * 132, p536 * 48, p536 * 150);
    v801.closePath();
    f86(v801, p538[1], p538[2], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 63, p536 * 208);
    v801.bezierCurveTo(p536 * 75, p536 * 224, p536 * 86, p536 * 228, p536 * 93, p536 * 228);
    v801.bezierCurveTo(p536 * 104, p536 * 229, p536 * 116, p536 * 219, p536 * 122, p536 * 205);
    v801.closePath();
    f86(v801, p538[1], p538[2], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 130, p536 * 170);
    v801.bezierCurveTo(p536 * 146, p536 * 125, p536 * 156, p536 * 126, p536 * 173, p536 * 137);
    v801.bezierCurveTo(p536 * 167, p536 * 151, p536 * 143, p536 * 174, p536 * 131, p536 * 183);
    v801.closePath();
    f86(v801, p538[1], p538[2], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 39, p536 * 140);
    v801.bezierCurveTo(p536 * 75, p536 * 126, p536 * 113, p536 * 127, p536 * 143, p536 * 137);
    v801.bezierCurveTo(p536 * 141, p536 * 186, p536 * 130, p536 * 202, p536 * 113, p536 * 214);
    v801.bezierCurveTo(p536 * 85, p536 * 228, p536 * 56, p536 * 219, p536 * 48, p536 * 173);
    v801.bezierCurveTo(p536 * 40, p536 * 148, p536 * 43, p536 * 145, p536 * 39, p536 * 140);
    v801.closePath();
    f86(v801, p538[1], p538[2], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 59, p536 * 99);
    v801.bezierCurveTo(p536 * 71, p536 * 68, p536 * 81, p536 * 68, p536 * 94, p536 * 67);
    v801.bezierCurveTo(p536 * 105, p536 * 66, p536 * 119, p536 * 75, p536 * 123, p536 * 96);
    v801.bezierCurveTo(p536 * 104, p536 * 91, p536 * 101, p536 * 94, p536 * 94, p536 * 97);
    v801.bezierCurveTo(p536 * 76, p536 * 92, p536 * 73, p536 * 93, p536 * 60, p536 * 99);
    v801.closePath();
    f86(v801, p538[3], p538[2], p536 * 4);
    if (p539 === 0) {
      v801.beginPath();
      v801.lineCap = "round";
      v801.lineJoin = "round";
      v801.moveTo(p536 * 47, p536 * 149);
      v801.bezierCurveTo(p536 * 43, p536 * 140, p536 * 48, p536 * 130, p536 * 59, p536 * 127);
      v801.bezierCurveTo(p536 * 77, p536 * 126, p536 * 90, p536 * 131, p536 * 131, p536 * 127);
      v801.bezierCurveTo(p536 * 143, p536 * 130, p536 * 144, p536 * 143, p536 * 132, p536 * 154);
      v801.bezierCurveTo(p536 * 90, p536 * 152, p536 * 90, p536 * 152, p536 * 48, p536 * 150);
      v801.closePath();
      f86(v801, p538[1]);
      v801.beginPath();
      v801.lineCap = "round";
      v801.lineJoin = "round";
      v801.moveTo(p536 * 40, p536 * 139);
      v801.bezierCurveTo(p536 * 48, p536 * 113, p536 * 76, p536 * 119, p536 * 91, p536 * 126);
      v801.bezierCurveTo(p536 * 117, p536 * 113, p536 * 135, p536 * 117, p536 * 144, p536 * 134);
      v801.bezierCurveTo(p536 * 144, p536 * 138, p536 * 144, p536 * 138, p536 * 144, p536 * 142);
      v801.bezierCurveTo(p536 * 128, p536 * 124, p536 * 108, p536 * 124, p536 * 91, p536 * 136);
      v801.bezierCurveTo(p536 * 59, p536 * 124, p536 * 50, p536 * 137, p536 * 42, p536 * 148);
      v801.closePath();
      f86(v801, p538[3], p538[2], p536 * 4);
    } else {
      v801.beginPath();
      v801.lineCap = "round";
      v801.lineJoin = "round";
      v801.moveTo(p536 * 41, p536 * 139);
      v801.bezierCurveTo(p536 * 53, p536 * 117, p536 * 69, p536 * 118, p536 * 92, p536 * 127);
      v801.bezierCurveTo(p536 * 124, p536 * 111, p536 * 136, p536 * 121, p536 * 143, p536 * 136);
      v801.bezierCurveTo(p536 * 142, p536 * 144, p536 * 142, p536 * 144, p536 * 141, p536 * 152);
      v801.bezierCurveTo(p536 * 128, p536 * 131, p536 * 113, p536 * 138, p536 * 92, p536 * 145);
      v801.bezierCurveTo(p536 * 57, p536 * 133, p536 * 57, p536 * 147, p536 * 44, p536 * 154);
      v801.closePath();
      f86(v801, p538[3], p538[2], p536 * 4);
    }
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 90, p536 * 95);
    v801.bezierCurveTo(p536 * 99, p536 * 82, p536 * 98, p536 * 58, p536 * 99, p536 * 40);
    v801.bezierCurveTo(p536 * 90, p536 * 38, p536 * 89, p536 * 34, p536 * 92, p536 * 17);
    v801.bezierCurveTo(p536 * 92, p536 * 5, p536 * 83, p536 * 16, p536 * 78, p536 * 29);
    v801.bezierCurveTo(p536 * 72, p536 * 59, p536 * 87, p536 * 81, p536 * 89, p536 * 87);
    v801.closePath();
    f86(v801, p538[1], p538[2], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 90, p536 * 86);
    v801.bezierCurveTo(p536 * 95, p536 * 74, p536 * 95, p536 * 62, p536 * 95, p536 * 43);
    v801.bezierCurveTo(p536 * 84, p536 * 37, p536 * 86, p536 * 34, p536 * 89, p536 * 16);
    v801.bezierCurveTo(p536 * 75, p536 * 29, p536 * 80, p536 * 58, p536 * 90, p536 * 85);
    v801.closePath();
    f86(v801, p538[1], p538[3], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 92, p536 * 117);
    v801.bezierCurveTo(p536 * 98, p536 * 87, p536 * 93, p536 * 78, p536 * 85, p536 * 76);
    v801.bezierCurveTo(p536 * 85.5, p536 * 79.5, p536 * 85.5, p536 * 79.5, p536 * 86, p536 * 83);
    v801.bezierCurveTo(p536 * 84, p536 * 85.5, p536 * 84, p536 * 85.5, p536 * 82, p536 * 88);
    v801.bezierCurveTo(p536 * 90, p536 * 93, p536 * 89, p536 * 100, p536 * 92, p536 * 117);
    v801.closePath();
    f86(v801, p538[1], p538[3], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 92, p536 * 175);
    v801.bezierCurveTo(p536 * 95, p536 * 135, p536 * 98, p536 * 125, p536 * 109, p536 * 121);
    v801.bezierCurveTo(p536 * 106, p536 * 114, p536 * 104, p536 * 114, p536 * 102, p536 * 113);
    v801.bezierCurveTo(p536 * 103, p536 * 106, p536 * 104, p536 * 103, p536 * 107, p536 * 96);
    v801.bezierCurveTo(p536 * 74, p536 * 108, p536 * 86, p536 * 157, p536 * 92, p536 * 174);
    v801.closePath();
    f86(v801, p538[1], p538[3], p536 * 4);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 48, p536 * 169);
    v801.bezierCurveTo(p536 * 42, p536 * 187, p536 * 50, p536 * 193, p536 * 59, p536 * 198);
    v801.closePath();
    f86(v801, undefined, p538[2], p536 * 5);
    v801.beginPath();
    v801.lineCap = "round";
    v801.lineJoin = "round";
    v801.moveTo(p536 * 136, p536 * 171);
    v801.bezierCurveTo(p536 * 139, p536 * 186, p536 * 138, p536 * 191, p536 * 124, p536 * 199);
    v801.closePath();
    f86(v801, vVVUndefined273, p538[2], p536 * 4);
    f87(v801, p536 * 63, p536 * 180, p536 * 15.231546211727817);
    f86(v801, p538[4]);
    f87(v801, p536 * 121, p536 * 181, p536 * 15.652475842498529);
    f86(v801, p538[4]);
    f87(v801, p536 * 58, p536 * 175, p536 * 5.656854249492381);
    f86(v801, p538[2]);
    f87(v801, p536 * 116, p536 * 175, p536 * 5.656854249492381);
    f86(v801, p538[2]);
    return v800;
  }
  function f102(p540, p541) {
    var v802 = document.createElement("canvas");
    var v803 = v802.getContext("2d");
    v802.width = p540 * 191;
    v802.height = p540 * 153;
    v803.save();
    v803.translate(p540 * 96.49996948242188, p540 * 66.79510498046875);
    f89(v803, p540 * -79.5, p540 * -48.5, p540 * 159, p540 * 97, p540 * 22);
    v803.restore();
    f86(v803, p541[0], p541[0], p540 * 4);
    v803.translate(p540 * 2, 0);
    v803.beginPath();
    v803.lineCap = "round";
    v803.lineJoin = "round";
    v803.moveTo(p540 * 119, p540 * 28);
    v803.bezierCurveTo(p540 * 119, p540 * 22, p540 * 119, p540 * 20, p540 * 122, p540 * 16);
    v803.bezierCurveTo(p540 * 149, p540 * 39, p540 * 149, p540 * 39, p540 * 176, p540 * 63);
    v803.bezierCurveTo(p540 * 176, p540 * 75, p540 * 176, p540 * 75, p540 * 175, p540 * 88);
    v803.bezierCurveTo(p540 * 174, p540 * 90, p540 * 174, p540 * 90, p540 * 172, p540 * 93);
    v803.bezierCurveTo(p540 * 171, p540 * 101, p540 * 169, p540 * 109, p540 * 164, p540 * 113);
    v803.bezierCurveTo(p540 * 163, p540 * 104, p540 * 163, p540 * 104, p540 * 162, p540 * 95);
    v803.bezierCurveTo(p540 * 155, p540 * 105, p540 * 155, p540 * 105, p540 * 147, p540 * 116);
    v803.bezierCurveTo(p540 * 87, p540 * 114, p540 * 87, p540 * 114, p540 * 26, p540 * 112);
    v803.bezierCurveTo(p540 * 27, p540 * 106, p540 * 27, p540 * 106, p540 * 27, p540 * 101);
    v803.bezierCurveTo(p540 * 24, p540 * 104, p540 * 24, p540 * 104, p540 * 20, p540 * 108);
    v803.bezierCurveTo(p540 * 17, p540 * 103, p540 * 20, p540 * 86, p540 * 23, p540 * 72);
    v803.bezierCurveTo(p540 * 15, p540 * 74, p540 * 14, p540 * 78, p540 * 12, p540 * 83);
    v803.bezierCurveTo(p540 * 12, p540 * 65, p540 * 12, p540 * 54, p540 * 16, p540 * 42);
    v803.bezierCurveTo(p540 * 14, p540 * 39, p540 * 14, p540 * 39, p540 * 12, p540 * 36);
    v803.bezierCurveTo(p540 * 16, p540 * 33, p540 * 16, p540 * 33, p540 * 19, p540 * 30);
    v803.bezierCurveTo(p540 * 18, p540 * 27, p540 * 18, p540 * 27, p540 * 17, p540 * 25);
    v803.bezierCurveTo(p540 * 24, p540 * 24, p540 * 31, p540 * 21, p540 * 29, p540 * 19);
    v803.bezierCurveTo(p540 * 37, p540 * 25, p540 * 37, p540 * 25, p540 * 45, p540 * 31);
    v803.bezierCurveTo(p540 * 40, p540 * 23, p540 * 40, p540 * 21, p540 * 42, p540 * 16);
    v803.bezierCurveTo(p540 * 74, p540 * 16, p540 * 74, p540 * 16, p540 * 106, p540 * 16);
    v803.bezierCurveTo(p540 * 113, p540 * 21, p540 * 113, p540 * 21, p540 * 119, p540 * 26);
    v803.closePath();
    f86(v803, p541[0], p541[0], p540 * 4);
    v803.save();
    v803.translate(p540 * 97.49996948242188, p540 * 95.12844848632812);
    f89(v803, p540 * -62.5, p540 * -41.5, p540 * 125, p540 * 83, p540 * 20);
    v803.restore();
    f86(v803, p541[0], p541[0], p540 * 4);
    return v802;
  }
  function f103(p542, p543, p544) {
    var v804 = document.createElement("canvas");
    var v805 = v804.getContext("2d");
    var v806 = p542 * 40;
    var v807 = p542 * 40;
    v804.width = v806;
    v804.height = v807;
    var v808 = p542 * v806 / 2;
    var v809 = v807 * p542 / 2;
    var v810 = p542 * 15;
    v805.save();
    v805.translate(v808, v809);
    v805.globalAlpha = 1;
    f87(v805, 0, 0, v810);
    f86(v805, p544[0]);
    v810 = p542 * 5;
    v808 = p542 * 2;
    v809 = p542 * 1;
    v805.translate(v808, v809);
    v805.globalAlpha = 1;
    f87(v805, 0, 0, v810);
    f86(v805, p544[1]);
    v805.restore();
    return v804;
  }
  function f104(p545, p546, p547) {
    var v811 = document.createElement("canvas");
    var v812 = v811.getContext("2d");
    v811.width = p545 * 191;
    v811.height = p545 * 153;
    v812.globalAlpha = 0.5;
    v812.translate(0, p545 * 10);
    v812.save();
    v812.translate(p545 * 97.49996948242188, p545 * 95.12844848632812);
    f89(v812, p545 * -62.5, p545 * -41.5, p545 * 125, p545 * 83, p545 * 20);
    v812.restore();
    f86(v812, p547[0], p547[0], p545 * 4);
    v812.globalAlpha = 1;
    v812.translate(0, p545 * -10);
    v812.save();
    v812.translate(p545 * 97.49996948242188, p545 * 95.12844848632812);
    f89(v812, p545 * -62.5, p545 * -41.5, p545 * 125, p545 * 83, p545 * 20);
    v812.restore();
    f86(v812, p547[1], p547[2], p545 * 4);
    v812.globalCompositeOperation = "destination-out";
    v812.beginPath();
    v812.lineCap = "round";
    v812.lineJoin = "round";
    v812.moveTo(p545 * 26.999969482421875, p545 * 50.850677490234375);
    v812.bezierCurveTo(p545 * 46.499969482421875, p545 * 64.85067749023438, p545 * 46.499969482421875, p545 * 64.85067749023438, p545 * 65.99996948242188, p545 * 78.85067749023438);
    v812.bezierCurveTo(p545 * 80.99996948242188, p545 * 87.85067749023438, p545 * 105.99996948242188, p545 * 82.85067749023438, p545 * 114.99996948242188, p545 * 80.85067749023438);
    v812.bezierCurveTo(p545 * 130.99996948242188, p545 * 69.85067749023438, p545 * 152.99996948242188, p545 * 70.85067749023438, p545 * 166.99996948242188, p545 * 67.85067749023438);
    v812.bezierCurveTo(p545 * 156.99996948242188, p545 * 52.850677490234375, p545 * 156.99996948242188, p545 * 52.850677490234375, p545 * 146.99996948242188, p545 * 37.850677490234375);
    v812.bezierCurveTo(p545 * 101.49996948242188, p545 * 37.350677490234375, p545 * 101.49996948242188, p545 * 37.350677490234375, p545 * 55.999969482421875, p545 * 36.850677490234375);
    v812.closePath();
    f86(v812, p547[2], p547[3], p545 * 4);
    v812.globalCompositeOperation = "source-over";
    v812.beginPath();
    v812.lineCap = "round";
    v812.lineJoin = "round";
    v812.moveTo(p545 * 40.999969482421875, p545 * 59.850677490234375);
    v812.bezierCurveTo(p545 * 41.999969482421875, p545 * 50.850677490234375, p545 * 47.999969482421875, p545 * 47.850677490234375, p545 * 56.999969482421875, p545 * 49.850677490234375);
    v812.bezierCurveTo(p545 * 65.99996948242188, p545 * 41.850677490234375, p545 * 76.99996948242188, p545 * 42.850677490234375, p545 * 90.99996948242188, p545 * 47.850677490234375);
    v812.bezierCurveTo(p545 * 94.99996948242188, p545 * 42.850677490234375, p545 * 104.99996948242188, p545 * 42.850677490234375, p545 * 114.99996948242188, p545 * 47.850677490234375);
    v812.bezierCurveTo(p545 * 131.99996948242188, p545 * 42.850677490234375, p545 * 142.99996948242188, p545 * 48.850677490234375, p545 * 145.99996948242188, p545 * 56.850677490234375);
    v812.bezierCurveTo(p545 * 160.99996948242188, p545 * 63.850677490234375, p545 * 154.99996948242188, p545 * 69.85067749023438, p545 * 155.99996948242188, p545 * 70.85067749023438);
    v812.bezierCurveTo(p545 * 141.99996948242188, p545 * 71.85067749023438, p545 * 141.99996948242188, p545 * 71.85067749023438, p545 * 127.99996948242188, p545 * 72.85067749023438);
    v812.bezierCurveTo(p545 * 110.99996948242188, p545 * 83.85067749023438, p545 * 107.99996948242188, p545 * 82.85067749023438, p545 * 90.99996948242188, p545 * 85.85067749023438);
    v812.bezierCurveTo(p545 * 70.99996948242188, p545 * 83.85067749023438, p545 * 64.99996948242188, p545 * 79.85067749023438, p545 * 53.999969482421875, p545 * 70.85067749023438);
    v812.closePath();
    f86(v812, p547[3], p547[4], p545 * 4);
    v812.beginPath();
    v812.lineCap = "round";
    v812.lineJoin = "round";
    v812.moveTo(p545 * 33.999969482421875, p545 * 65.85067749023438);
    v812.bezierCurveTo(p545 * 36.999969482421875, p545 * 59.850677490234375, p545 * 34.999969482421875, p545 * 60.850677490234375, p545 * 39.999969482421875, p545 * 59.850677490234375);
    v812.bezierCurveTo(p545 * 47.999969482421875, p545 * 61.850677490234375, p545 * 62.999969482421875, p545 * 76.85067749023438, p545 * 74.99996948242188, p545 * 79.85067749023438);
    v812.bezierCurveTo(p545 * 93.99996948242188, p545 * 85.85067749023438, p545 * 111.99996948242188, p545 * 83.85067749023438, p545 * 124.99996948242188, p545 * 70.85067749023438);
    v812.bezierCurveTo(p545 * 129.99996948242188, p545 * 67.85067749023438, p545 * 145.99996948242188, p545 * 65.85067749023438, p545 * 159.99996948242188, p545 * 67.85067749023438);
    v812.bezierCurveTo(p545 * 159.99996948242188, p545 * 71.85067749023438, p545 * 159.99996948242188, p545 * 71.85067749023438, p545 * 159.99996948242188, p545 * 75.85067749023438);
    v812.bezierCurveTo(p545 * 146.99996948242188, p545 * 72.85067749023438, p545 * 144.99996948242188, p545 * 75.85067749023438, p545 * 143.99996948242188, p545 * 82.85067749023438);
    v812.bezierCurveTo(p545 * 144.99996948242188, p545 * 86.85067749023438, p545 * 140.99996948242188, p545 * 90.85067749023438, p545 * 137.99996948242188, p545 * 86.85067749023438);
    v812.bezierCurveTo(p545 * 139.99996948242188, p545 * 72.85067749023438, p545 * 135.99996948242188, p545 * 72.85067749023438, p545 * 133.99996948242188, p545 * 82.85067749023438);
    v812.bezierCurveTo(p545 * 127.99996948242188, p545 * 88.85067749023438, p545 * 124.99996948242188, p545 * 70.85067749023438, p545 * 116.99996948242188, p545 * 86.85067749023438);
    v812.bezierCurveTo(p545 * 110.99996948242188, p545 * 91.85067749023438, p545 * 96.99996948242188, p545 * 81.85067749023438, p545 * 89.99996948242188, p545 * 90.85067749023438);
    v812.bezierCurveTo(p545 * 85.99996948242188, p545 * 92.85067749023438, p545 * 81.99996948242188, p545 * 95.85067749023438, p545 * 76.99996948242188, p545 * 86.85067749023438);
    v812.bezierCurveTo(p545 * 67.99996948242188, p545 * 93.85067749023438, p545 * 67.99996948242188, p545 * 91.85067749023438, p545 * 60.999969482421875, p545 * 79.85067749023438);
    v812.bezierCurveTo(p545 * 53.999969482421875, p545 * 71.85067749023438, p545 * 52.999969482421875, p545 * 72.85067749023438, p545 * 46.999969482421875, p545 * 77.85067749023438);
    v812.bezierCurveTo(p545 * 41.999969482421875, p545 * 78.85067749023438, p545 * 42.999969482421875, p545 * 69.85067749023438, p545 * 33.999969482421875, p545 * 65.85067749023438);
    v812.closePath();
    f86(v812, p547[5], p547[6], p545 * 4);
    f87(v812, p545 * 68, p545 * 111.29513549804688, p545 * 15);
    f86(v812, p547[7], p547[8], p545 * 4);
    f87(v812, p545 * 123, p545 * 111.29510498046875, p545 * 15);
    f86(v812, p547[7], p547[8], p545 * 4);
    f87(v812, p545 * 63, p545 * 106, p545 * 5);
    f86(v812, p547[9]);
    f87(v812, p545 * 118, p545 * 106, p545 * 5);
    f86(v812, p547[9]);
    return v811;
  }
  function f105(p548, p549) {
    var v813 = document.createElement("canvas");
    var v814 = v813.getContext("2d");
    v813.width = p548 * 185;
    v813.height = p548 * 240;
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 44, p548 * 137);
    v814.bezierCurveTo(p548 * 60, p548 * 87, p548 * 68, p548 * 66, p548 * 92, p548 * 67);
    v814.bezierCurveTo(p548 * 115, p548 * 64, p548 * 129, p548 * 97, p548 * 137, p548 * 136);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 53, p548 * 181);
    v814.bezierCurveTo(p548 * 30, p548 * 164, p548 * 19, p548 * 150, p548 * 11, p548 * 136);
    v814.bezierCurveTo(p548 * 28, p548 * 121, p548 * 38, p548 * 132, p548 * 48, p548 * 150);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 63, p548 * 208);
    v814.bezierCurveTo(p548 * 75, p548 * 224, p548 * 86, p548 * 228, p548 * 93, p548 * 228);
    v814.bezierCurveTo(p548 * 104, p548 * 229, p548 * 116, p548 * 219, p548 * 122, p548 * 205);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 130, p548 * 170);
    v814.bezierCurveTo(p548 * 146, p548 * 125, p548 * 156, p548 * 126, p548 * 173, p548 * 137);
    v814.bezierCurveTo(p548 * 167, p548 * 151, p548 * 143, p548 * 174, p548 * 131, p548 * 183);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 39, p548 * 140);
    v814.bezierCurveTo(p548 * 75, p548 * 126, p548 * 113, p548 * 127, p548 * 143, p548 * 137);
    v814.bezierCurveTo(p548 * 141, p548 * 186, p548 * 130, p548 * 202, p548 * 113, p548 * 214);
    v814.bezierCurveTo(p548 * 85, p548 * 228, p548 * 56, p548 * 219, p548 * 48, p548 * 173);
    v814.bezierCurveTo(p548 * 40, p548 * 148, p548 * 43, p548 * 145, p548 * 39, p548 * 140);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 90, p548 * 95);
    v814.bezierCurveTo(p548 * 99, p548 * 82, p548 * 98, p548 * 58, p548 * 99, p548 * 40);
    v814.bezierCurveTo(p548 * 90, p548 * 38, p548 * 89, p548 * 34, p548 * 92, p548 * 17);
    v814.bezierCurveTo(p548 * 92, p548 * 5, p548 * 83, p548 * 16, p548 * 78, p548 * 29);
    v814.bezierCurveTo(p548 * 72, p548 * 59, p548 * 87, p548 * 81, p548 * 89, p548 * 87);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 90, p548 * 86);
    v814.bezierCurveTo(p548 * 95, p548 * 74, p548 * 95, p548 * 62, p548 * 95, p548 * 43);
    v814.bezierCurveTo(p548 * 84, p548 * 37, p548 * 86, p548 * 34, p548 * 89, p548 * 16);
    v814.bezierCurveTo(p548 * 75, p548 * 29, p548 * 80, p548 * 58, p548 * 90, p548 * 85);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 92, p548 * 117);
    v814.bezierCurveTo(p548 * 98, p548 * 87, p548 * 93, p548 * 78, p548 * 85, p548 * 76);
    v814.bezierCurveTo(p548 * 85.5, p548 * 79.5, p548 * 85.5, p548 * 79.5, p548 * 86, p548 * 83);
    v814.bezierCurveTo(p548 * 84, p548 * 85.5, p548 * 84, p548 * 85.5, p548 * 82, p548 * 88);
    v814.bezierCurveTo(p548 * 90, p548 * 93, p548 * 89, p548 * 100, p548 * 92, p548 * 117);
    v814.closePath();
    f86(v814, p549[0]);
    v814.beginPath();
    v814.lineCap = "round";
    v814.lineJoin = "round";
    v814.moveTo(p548 * 92, p548 * 175);
    v814.bezierCurveTo(p548 * 95, p548 * 135, p548 * 98, p548 * 125, p548 * 109, p548 * 121);
    v814.bezierCurveTo(p548 * 106, p548 * 114, p548 * 104, p548 * 114, p548 * 102, p548 * 113);
    v814.bezierCurveTo(p548 * 103, p548 * 106, p548 * 104, p548 * 103, p548 * 107, p548 * 96);
    v814.bezierCurveTo(p548 * 74, p548 * 108, p548 * 86, p548 * 157, p548 * 92, p548 * 174);
    v814.closePath();
    f86(v814, p549[0]);
    return v813;
  }
  if (vWindow.ΔΔᐃΔᐃᐃⵠ) {
    var v815 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v815;
    var v816 = vWindow.Math.acos;
    vWindow.Math.acos = vWindow.Math.asin;
    vWindow.Math.asin = v816;
  }
  const v817 = 1;
  function f106(p550, p551, p552) {
    var v818 = document.createElement("canvas");
    var v819 = v818.getContext("2d");
    var v820 = (v829 = p550 * 125) / 2;
    var v821 = (v830 = p550 * 95) / 2;
    var v822 = p550 * 10;
    var v823 = p550 * 8;
    var v824 = p550 * 112;
    var v825 = p550 * 82;
    var v826 = v824 / 2;
    var v827 = v825 / 2;
    var v828 = p550 * 4;
    v818.width = v829;
    v818.height = v830;
    v819.translate(v820 - p550 * 4, v821 + p550 * 4);
    v819.globalAlpha = p551 ? 0.5 : 1;
    f89(v819, -v826, -v827, v824, v825, v822);
    f86(v819, p552[0]);
    v819.globalAlpha = 1;
    v819.translate(0, -v823);
    f89(v819, -v826, -v827, v824, v825, v822);
    f86(v819, p552[1], p552[2], v828);
    var v829 = p550 * 55;
    var v830 = p550 * 45;
    v822 = 5;
    v819.translate(p550 * -40, p550 * -30);
    f89(v819, 0, 0, v829, v830, v822);
    f86(v819, p552[3]);
    var vAl = f110(p550 * 0.7, p552[3]);
    v819.drawImage(vAl, p550 * 45, p550 * -25);
    vAl = f110(p550 * 0.7, p552[3]);
    v819.drawImage(vAl, p550 * 45, p550 * 15);
    vAl = f110(p550 * 1.2, p552[3]);
    v819.drawImage(vAl, p550 * 28, p550 * -30);
    v829 = p550 * 15;
    v830 = p550 * 70;
    v822 = p550 * 5;
    v819.translate(p550 * 78, p550 * -5);
    f89(v819, 0, 0, v829, v830, v822);
    f86(v819, p552[4]);
    v829 = p550 * 9;
    v830 = p550 * 50;
    v822 = p550 * 3;
    v819.translate(p550 * -20, p550 * 20);
    v819.rotate(Math.PI / 5);
    v819.globalAlpha = 0.6;
    f89(v819, 0, 0, v829, v830, v822);
    f86(v819, p552[5]);
    v819.translate(p550 * -20, p550 * 29);
    v819.rotate(Math.PI / 5);
    v819.globalAlpha = 0.6;
    v819.beginPath();
    v819.lineJoin = "round";
    v819.moveTo(0, 0);
    v819.lineTo(0, p550 * 30);
    v819.lineTo(p550 * 30, p550 * 30);
    v819.closePath();
    f86(v819, null, p552[5], p550 * 8);
    return v818;
  }
  function f107(p553) {
    var v831 = document.createElement("canvas");
    var v832 = v831.getContext("2d");
    var v833 = p553 * 200;
    var v834 = p553 * 200;
    v831.width = v833;
    v831.height = v834;
    var vHu = f160(0.35, false, ["#0e3022", "#0b8052", "#077b49"]);
    v832.drawImage(vHu, 10, 10);
    vHu = f161(0.9, vVV212, ["#3d2a6e", "#8255b5"]);
    v832.drawImage(vHu, 21, 20);
    vHu = f161(0.9, vVVVV21222, ["#3d2a6e", "#8255b5"]);
    v832.drawImage(vHu, 38, 28);
    vHu = f161(0.9, vV214, ["#3d2a6e", "#8255b5"]);
    v832.drawImage(vHu, 15, 37);
    vHu = f161(0.9, false, ["#3d2a6e", "#8255b5"]);
    v832.drawImage(vHu, 32, 45);
    return v831;
  }
  function f108(p554, p555) {
    var v835 = document.createElement("canvas");
    var v836 = v835.getContext("2d");
    var v837 = p554 * 85;
    var v838 = p554 * 115;
    var v839 = p554 * 6;
    v835.width = v837;
    v835.height = v838;
    v836.translate(p554 * -130, p554 * -60 + v839);
    v836.globalAlpha = 0.5;
    v836.beginPath();
    v836.bezierCurveTo(p554 * 190, p554 * 87, p554 * 201, p554 * 59, p554 * 208, p554 * 64);
    v836.bezierCurveTo(p554 * 213, p554 * 68, p554 * 204, p554 * 93, p554 * 195, p554 * 109);
    v836.bezierCurveTo(p554 * 195, p554 * 109, p554 * 202, p554 * 124, p554 * 191, p554 * 141);
    v836.bezierCurveTo(p554 * 182, p554 * 151, p554 * 164, p554 * 155, p554 * 148, p554 * 144);
    v836.bezierCurveTo(p554 * 136, p554 * 135, p554 * 138, p554 * 111, p554 * 145, p554 * 104);
    v836.bezierCurveTo(p554 * 140, p554 * 92, p554 * 131, p554 * 67, p554 * 138, p554 * 63);
    v836.bezierCurveTo(p554 * 145, p554 * 61, p554 * 153, p554 * 82, p554 * 155, p554 * 96);
    v836.bezierCurveTo(p554 * 167, p554 * 91, p554 * 178, p554 * 92, p554 * 187, p554 * 98);
    v836.closePath();
    f86(v836, p555[0]);
    v836.translate(0, -v839);
    v836.globalAlpha = 1;
    v836.beginPath();
    v836.bezierCurveTo(p554 * 190, p554 * 87, p554 * 201, p554 * 59, p554 * 208, p554 * 64);
    v836.bezierCurveTo(p554 * 213, p554 * 68, p554 * 204, p554 * 93, p554 * 195, p554 * 109);
    v836.bezierCurveTo(p554 * 195, p554 * 109, p554 * 202, p554 * 124, p554 * 191, p554 * 141);
    v836.bezierCurveTo(p554 * 182, p554 * 151, p554 * 164, p554 * 155, p554 * 148, p554 * 144);
    v836.bezierCurveTo(p554 * 136, p554 * 135, p554 * 138, p554 * 111, p554 * 145, p554 * 104);
    v836.bezierCurveTo(p554 * 140, p554 * 92, p554 * 131, p554 * 67, p554 * 138, p554 * 63);
    v836.bezierCurveTo(p554 * 145, p554 * 61, p554 * 153, p554 * 82, p554 * 155, p554 * 96);
    v836.bezierCurveTo(p554 * 167, p554 * 91, p554 * 178, p554 * 92, p554 * 187, p554 * 98);
    v836.closePath();
    f86(v836, p555[1], p555[2], 4);
    var v840 = p554 * 155;
    var v841 = p554 * 133;
    var v842 = p554 * 10;
    var v843 = p554 * 3;
    var v844 = v840 + p554 * -3;
    var v845 = v841 + p554 * -5;
    v836.save();
    v836.translate(v840, v841);
    v836.globalAlpha = 1;
    f87(v836, 0, 0, v842);
    f86(v836, p555[3]);
    v836.restore();
    v836.save();
    v836.translate(v844, v845);
    v836.globalAlpha = 1;
    f87(v836, 0, 0, v843);
    f86(v836, p555[4]);
    v836.restore();
    v836.save();
    v836.translate(v840 + p554 * 27, v841);
    v836.globalAlpha = 1;
    f87(v836, 0, 0, v842);
    f86(v836, p555[3]);
    v836.restore();
    v836.save();
    v836.translate(p554 * 27 + v844, v845);
    v836.globalAlpha = 1;
    f87(v836, 0, 0, v843);
    f86(v836, p555[4]);
    return v835;
  }
  function f109(p556, p557, p558) {
    var v846 = document.createElement("canvas");
    var v847 = v846.getContext("2d");
    var v848 = p556 * 32;
    var v849 = p556 * 32;
    var v850 = v848 / 2;
    var v851 = v849 / 2;
    v846.width = v848;
    v846.height = v849;
    var v852 = p556 * 5;
    var v853 = p556 * 28;
    var v854 = v852 / 2;
    var v855 = v853 / 2;
    v847.translate(p556 * 0, p556 * 0);
    v847.translate(v850, v851);
    if (p558 == 1) {
      f87(v847, 0, 0, p556 * 10);
      f86(v847, p557[2], p557[2], p556 * 3);
      for (var v856 = 0; v856 < 4; v856++) {
        f89(v847, -v854, -v855, v852, v853, p556 * 2);
        v847.rotate(Math.PI / 4);
        f86(v847, p557[2], p557[2], p556 * 4);
      }
    }
    f87(v847, 0, 0, p556 * 10);
    f86(v847, p557[0], p557[1], p556 * 1.5);
    for (v856 = 0; v856 < 4; v856++) {
      f89(v847, -v854, -v855, v852, v853, p556 * 2);
      v847.rotate(Math.PI / 4);
      f86(v847, p557[0], p557[1], p556 * 1.5);
    }
    f87(v847, 0, 0, p556 * 10);
    f86(v847, p557[0]);
    f87(v847, 0, 0, p556 * 4);
    f86(v847, p557[2], p557[1], p556 * 1.5);
    v847.globalCompositeOperation = "destination-out";
    f87(v847, 0, 0, p556 * 4);
    f86(v847, p557[0], p557[1], p556 * 2);
    v847.globalCompositeOperation = "source-over";
    f87(v847, 0, 0, p556 * 4);
    f86(v847, vVVVUndefined1972, p557[1], p556 * 2);
    return v846;
  }
  function f110(p559, p560) {
    var v857 = document.createElement("canvas");
    var v858 = v857.getContext("2d");
    var v859 = p559 * 100;
    var v860 = p559 * 100;
    var v861 = v859 / 2;
    var v862 = v860 / 2;
    v857.width = v859;
    v857.height = v860;
    var v863 = p559 * 5;
    var v864 = p559 * 28;
    var v865 = v863 / 2;
    var v866 = v864 / 2;
    v858.translate(v861, v862);
    for (var v867 = 0; v867 < 4; v867++) {
      f89(v858, -v865, -v866, v863, v864, p559 * 2);
      v858.rotate(Math.PI / 4);
      f86(v858, p560);
    }
    v858.arc(0, 0, p559 * 10, 0, Math.PI * 2);
    f86(v858, p560);
    v858.globalCompositeOperation = "destination-out";
    f87(v858, 0, 0, p559 * 4);
    v858.fill();
    return v857;
  }
  function f111(p561, p562) {
    var v868 = document.createElement("canvas");
    var v869 = v868.getContext("2d");
    v868.width = p561 * 188;
    v868.height = p561 * 190;
    v869.globalAlpha = 0.5;
    v869.translate(0, p561 * 5);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 33.00567626953125, p561 * 95.44320678710938);
    v869.bezierCurveTo(p561 * 42.00567626953125, p561 * 87.44320678710938, p561 * 48.00567626953125, p561 * 51.443206787109375, p561 * 74.00567626953125, p561 * 47.443206787109375);
    v869.bezierCurveTo(p561 * 100.00567626953125, p561 * 42.443206787109375, p561 * 118.00567626953125, p561 * 49.443206787109375, p561 * 131.00567626953125, p561 * 55.443206787109375);
    v869.bezierCurveTo(p561 * 140.00567626953125, p561 * 70.44320678710938, p561 * 145.00567626953125, p561 * 87.44320678710938, p561 * 152.00567626953125, p561 * 94.44320678710938);
    v869.bezierCurveTo(p561 * 149.00567626953125, p561 * 99.44320678710938, p561 * 147.00567626953125, p561 * 98.44320678710938, p561 * 141.00567626953125, p561 * 101.44320678710938);
    v869.bezierCurveTo(p561 * 147.00567626953125, p561 * 108.44320678710938, p561 * 147.00567626953125, p561 * 111.44320678710938, p561 * 147.00567626953125, p561 * 112.44320678710938);
    v869.bezierCurveTo(p561 * 143.00567626953125, p561 * 112.44320678710938, p561 * 141.00567626953125, p561 * 112.44320678710938, p561 * 137.00567626953125, p561 * 111.44320678710938);
    v869.bezierCurveTo(p561 * 138.00567626953125, p561 * 117.44320678710938, p561 * 138.00567626953125, p561 * 120.44320678710938, p561 * 138.00567626953125, p561 * 124.44320678710938);
    v869.bezierCurveTo(p561 * 125.00567626953125, p561 * 107.44320678710938, p561 * 121.00567626953125, p561 * 124.44320678710938, p561 * 110.00567626953125, p561 * 141.44320678710938);
    v869.bezierCurveTo(p561 * 102.00567626953125, p561 * 158.44320678710938, p561 * 89.00567626953125, p561 * 158.44320678710938, p561 * 80.00567626953125, p561 * 144.44320678710938);
    v869.bezierCurveTo(p561 * 61.00567626953125, p561 * 111.44320678710938, p561 * 56.00567626953125, p561 * 117.44320678710938, p561 * 48.00567626953125, p561 * 120.44320678710938);
    v869.bezierCurveTo(p561 * 46.00567626953125, p561 * 118.44320678710938, p561 * 47.00567626953125, p561 * 112.44320678710938, p561 * 48.00567626953125, p561 * 107.44320678710938);
    v869.bezierCurveTo(p561 * 43.00567626953125, p561 * 111.44320678710938, p561 * 40.00567626953125, p561 * 111.44320678710938, p561 * 37.00567626953125, p561 * 110.44320678710938);
    v869.bezierCurveTo(p561 * 39.50567626953125, p561 * 104.94320678710938, p561 * 39.50567626953125, p561 * 104.94320678710938, p561 * 42.00567626953125, p561 * 99.44320678710938);
    v869.bezierCurveTo(p561 * 33.00567626953125, p561 * 99.44320678710938, p561 * 33.00567626953125, p561 * 98.44320678710938, p561 * 33.00567626953125, p561 * 96.44320678710938);
    v869.closePath();
    f86(v869, p562[0], p562[0], p561 * 4);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 60.00567626953125, p561 * 99.35227966308594);
    v869.bezierCurveTo(p561 * 70.00567626953125, p561 * 82.35227966308594, p561 * 85.00567626953125, p561 * 86.35227966308594, p561 * 87.00567626953125, p561 * 97.35227966308594);
    v869.bezierCurveTo(p561 * 89.00567626953125, p561 * 101.35227966308594, p561 * 88.00567626953125, p561 * 105.35227966308594, p561 * 87.00567626953125, p561 * 110.35227966308594);
    v869.bezierCurveTo(p561 * 89.00567626953125, p561 * 111.35227966308594, p561 * 91.00567626953125, p561 * 112.35227966308594, p561 * 93.00567626953125, p561 * 115.35227966308594);
    v869.bezierCurveTo(p561 * 96.00567626953125, p561 * 111.35227966308594, p561 * 99.00567626953125, p561 * 111.35227966308594, p561 * 100.00567626953125, p561 * 110.35227966308594);
    v869.bezierCurveTo(p561 * 98.00567626953125, p561 * 92.35227966308594, p561 * 103.00567626953125, p561 * 86.35227966308594, p561 * 113.00567626953125, p561 * 89.35227966308594);
    v869.bezierCurveTo(p561 * 122.00567626953125, p561 * 92.35227966308594, p561 * 123.00567626953125, p561 * 94.35227966308594, p561 * 126.00567626953125, p561 * 98.35227966308594);
    v869.bezierCurveTo(p561 * 124.00567626953125, p561 * 102.35227966308594, p561 * 123.00567626953125, p561 * 103.35227966308594, p561 * 121.00567626953125, p561 * 104.35227966308594);
    v869.bezierCurveTo(p561 * 124.00567626953125, p561 * 105.35227966308594, p561 * 126.00567626953125, p561 * 107.35227966308594, p561 * 129.00567626953125, p561 * 111.35227966308594);
    v869.bezierCurveTo(p561 * 115.00567626953125, p561 * 122.35227966308594, p561 * 113.00567626953125, p561 * 145.35227966308594, p561 * 100.00567626953125, p561 * 152.35227966308594);
    v869.bezierCurveTo(p561 * 91.00567626953125, p561 * 158.35227966308594, p561 * 83.00567626953125, p561 * 149.35227966308594, p561 * 76.00567626953125, p561 * 138.35227966308594);
    v869.bezierCurveTo(p561 * 67.00567626953125, p561 * 114.35227966308594, p561 * 63.00567626953125, p561 * 113.35227966308594, p561 * 59.00567626953125, p561 * 111.35227966308594);
    v869.bezierCurveTo(p561 * 62.00567626953125, p561 * 107.35227966308594, p561 * 64.00567626953125, p561 * 105.35227966308594, p561 * 66.00567626953125, p561 * 104.35227966308594);
    v869.bezierCurveTo(p561 * 63.00567626953125, p561 * 100.35227966308594, p561 * 62.00567626953125, p561 * 100.35227966308594, p561 * 60.00567626953125, p561 * 99.35227966308594);
    v869.closePath();
    f86(v869, p562[0], p562[0], p561 * 2);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 51.00567626953125, p561 * 72.53409576416016);
    v869.bezierCurveTo(p561 * 48.00567626953125, p561 * 56.534095764160156, p561 * 48.00567626953125, p561 * 49.534095764160156, p561 * 54.00567626953125, p561 * 35.534095764160156);
    v869.bezierCurveTo(p561 * 58.00567626953125, p561 * 26.534095764160156, p561 * 65.00567626953125, p561 * 27.534095764160156, p561 * 73.00567626953125, p561 * 40.534095764160156);
    v869.bezierCurveTo(p561 * 81.00567626953125, p561 * 49.534095764160156, p561 * 82.00567626953125, p561 * 50.534095764160156, p561 * 83.00567626953125, p561 * 51.534095764160156);
    v869.bezierCurveTo(p561 * 77.00567626953125, p561 * 71.53409576416016, p561 * 64.00567626953125, p561 * 75.53409576416016, p561 * 51.00567626953125, p561 * 72.53409576416016);
    v869.closePath();
    f86(v869, p562[0], p562[0], p561 * 2);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 105.00567626953125, p561 * 50.53410339355469);
    v869.bezierCurveTo(p561 * 112.00567626953125, p561 * 48.53410339355469, p561 * 125.00567626953125, p561 * 21.534103393554688, p561 * 132.00567626953125, p561 * 33.53410339355469);
    v869.bezierCurveTo(p561 * 138.00567626953125, p561 * 42.53410339355469, p561 * 140.00567626953125, p561 * 64.53410339355469, p561 * 136.00567626953125, p561 * 75.53410339355469);
    v869.closePath();
    f86(v869, p562[0], p562[0], p561 * 2);
    v869.globalAlpha = 1;
    v869.translate(0, p561 * -5);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 33.00567626953125, p561 * 95.44320678710938);
    v869.bezierCurveTo(p561 * 42.00567626953125, p561 * 87.44320678710938, p561 * 48.00567626953125, p561 * 51.443206787109375, p561 * 74.00567626953125, p561 * 47.443206787109375);
    v869.bezierCurveTo(p561 * 100.00567626953125, p561 * 42.443206787109375, p561 * 118.00567626953125, p561 * 49.443206787109375, p561 * 131.00567626953125, p561 * 55.443206787109375);
    v869.bezierCurveTo(p561 * 140.00567626953125, p561 * 70.44320678710938, p561 * 145.00567626953125, p561 * 87.44320678710938, p561 * 152.00567626953125, p561 * 94.44320678710938);
    v869.bezierCurveTo(p561 * 149.00567626953125, p561 * 99.44320678710938, p561 * 147.00567626953125, p561 * 98.44320678710938, p561 * 141.00567626953125, p561 * 101.44320678710938);
    v869.bezierCurveTo(p561 * 147.00567626953125, p561 * 108.44320678710938, p561 * 147.00567626953125, p561 * 111.44320678710938, p561 * 147.00567626953125, p561 * 112.44320678710938);
    v869.bezierCurveTo(p561 * 143.00567626953125, p561 * 112.44320678710938, p561 * 141.00567626953125, p561 * 112.44320678710938, p561 * 137.00567626953125, p561 * 111.44320678710938);
    v869.bezierCurveTo(p561 * 138.00567626953125, p561 * 117.44320678710938, p561 * 138.00567626953125, p561 * 120.44320678710938, p561 * 138.00567626953125, p561 * 124.44320678710938);
    v869.bezierCurveTo(p561 * 125.00567626953125, p561 * 107.44320678710938, p561 * 121.00567626953125, p561 * 124.44320678710938, p561 * 110.00567626953125, p561 * 141.44320678710938);
    v869.bezierCurveTo(p561 * 102.00567626953125, p561 * 158.44320678710938, p561 * 89.00567626953125, p561 * 158.44320678710938, p561 * 80.00567626953125, p561 * 144.44320678710938);
    v869.bezierCurveTo(p561 * 61.00567626953125, p561 * 111.44320678710938, p561 * 56.00567626953125, p561 * 117.44320678710938, p561 * 48.00567626953125, p561 * 120.44320678710938);
    v869.bezierCurveTo(p561 * 46.00567626953125, p561 * 118.44320678710938, p561 * 47.00567626953125, p561 * 112.44320678710938, p561 * 48.00567626953125, p561 * 107.44320678710938);
    v869.bezierCurveTo(p561 * 43.00567626953125, p561 * 111.44320678710938, p561 * 40.00567626953125, p561 * 111.44320678710938, p561 * 37.00567626953125, p561 * 110.44320678710938);
    v869.bezierCurveTo(p561 * 39.50567626953125, p561 * 104.94320678710938, p561 * 39.50567626953125, p561 * 104.94320678710938, p561 * 42.00567626953125, p561 * 99.44320678710938);
    v869.bezierCurveTo(p561 * 33.00567626953125, p561 * 99.44320678710938, p561 * 33.00567626953125, p561 * 98.44320678710938, p561 * 33.00567626953125, p561 * 96.44320678710938);
    v869.closePath();
    f86(v869, p562[1], p562[2], p561 * 3);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 60.00567626953125, p561 * 99.35227966308594);
    v869.bezierCurveTo(p561 * 70.00567626953125, p561 * 82.35227966308594, p561 * 85.00567626953125, p561 * 86.35227966308594, p561 * 87.00567626953125, p561 * 97.35227966308594);
    v869.bezierCurveTo(p561 * 89.00567626953125, p561 * 101.35227966308594, p561 * 88.00567626953125, p561 * 105.35227966308594, p561 * 87.00567626953125, p561 * 110.35227966308594);
    v869.bezierCurveTo(p561 * 89.00567626953125, p561 * 111.35227966308594, p561 * 91.00567626953125, p561 * 112.35227966308594, p561 * 93.00567626953125, p561 * 115.35227966308594);
    v869.bezierCurveTo(p561 * 96.00567626953125, p561 * 111.35227966308594, p561 * 99.00567626953125, p561 * 111.35227966308594, p561 * 100.00567626953125, p561 * 110.35227966308594);
    v869.bezierCurveTo(p561 * 98.00567626953125, p561 * 92.35227966308594, p561 * 103.00567626953125, p561 * 86.35227966308594, p561 * 113.00567626953125, p561 * 89.35227966308594);
    v869.bezierCurveTo(p561 * 122.00567626953125, p561 * 92.35227966308594, p561 * 123.00567626953125, p561 * 94.35227966308594, p561 * 126.00567626953125, p561 * 98.35227966308594);
    v869.bezierCurveTo(p561 * 124.00567626953125, p561 * 102.35227966308594, p561 * 123.00567626953125, p561 * 103.35227966308594, p561 * 121.00567626953125, p561 * 104.35227966308594);
    v869.bezierCurveTo(p561 * 124.00567626953125, p561 * 105.35227966308594, p561 * 126.00567626953125, p561 * 107.35227966308594, p561 * 129.00567626953125, p561 * 111.35227966308594);
    v869.bezierCurveTo(p561 * 115.00567626953125, p561 * 122.35227966308594, p561 * 113.00567626953125, p561 * 145.35227966308594, p561 * 100.00567626953125, p561 * 152.35227966308594);
    v869.bezierCurveTo(p561 * 91.00567626953125, p561 * 158.35227966308594, p561 * 83.00567626953125, p561 * 149.35227966308594, p561 * 76.00567626953125, p561 * 138.35227966308594);
    v869.bezierCurveTo(p561 * 67.00567626953125, p561 * 114.35227966308594, p561 * 63.00567626953125, p561 * 113.35227966308594, p561 * 59.00567626953125, p561 * 111.35227966308594);
    v869.bezierCurveTo(p561 * 62.00567626953125, p561 * 107.35227966308594, p561 * 64.00567626953125, p561 * 105.35227966308594, p561 * 66.00567626953125, p561 * 104.35227966308594);
    v869.bezierCurveTo(p561 * 63.00567626953125, p561 * 100.35227966308594, p561 * 62.00567626953125, p561 * 100.35227966308594, p561 * 60.00567626953125, p561 * 99.35227966308594);
    v869.closePath();
    f86(v869, p562[3]);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 33.00567626953125, p561 * 95.44320678710938);
    v869.bezierCurveTo(p561 * 42.00567626953125, p561 * 87.44320678710938, p561 * 48.00567626953125, p561 * 51.443206787109375, p561 * 74.00567626953125, p561 * 47.443206787109375);
    v869.bezierCurveTo(p561 * 100.00567626953125, p561 * 42.443206787109375, p561 * 118.00567626953125, p561 * 49.443206787109375, p561 * 131.00567626953125, p561 * 55.443206787109375);
    v869.bezierCurveTo(p561 * 140.00567626953125, p561 * 70.44320678710938, p561 * 145.00567626953125, p561 * 87.44320678710938, p561 * 152.00567626953125, p561 * 94.44320678710938);
    v869.bezierCurveTo(p561 * 149.00567626953125, p561 * 99.44320678710938, p561 * 147.00567626953125, p561 * 98.44320678710938, p561 * 141.00567626953125, p561 * 101.44320678710938);
    v869.bezierCurveTo(p561 * 147.00567626953125, p561 * 108.44320678710938, p561 * 147.00567626953125, p561 * 111.44320678710938, p561 * 147.00567626953125, p561 * 112.44320678710938);
    v869.bezierCurveTo(p561 * 143.00567626953125, p561 * 112.44320678710938, p561 * 141.00567626953125, p561 * 112.44320678710938, p561 * 137.00567626953125, p561 * 111.44320678710938);
    v869.bezierCurveTo(p561 * 138.00567626953125, p561 * 117.44320678710938, p561 * 138.00567626953125, p561 * 120.44320678710938, p561 * 138.00567626953125, p561 * 124.44320678710938);
    v869.bezierCurveTo(p561 * 125.00567626953125, p561 * 107.44320678710938, p561 * 121.00567626953125, p561 * 124.44320678710938, p561 * 110.00567626953125, p561 * 141.44320678710938);
    v869.bezierCurveTo(p561 * 102.00567626953125, p561 * 158.44320678710938, p561 * 89.00567626953125, p561 * 158.44320678710938, p561 * 80.00567626953125, p561 * 144.44320678710938);
    v869.bezierCurveTo(p561 * 61.00567626953125, p561 * 111.44320678710938, p561 * 56.00567626953125, p561 * 117.44320678710938, p561 * 48.00567626953125, p561 * 120.44320678710938);
    v869.bezierCurveTo(p561 * 46.00567626953125, p561 * 118.44320678710938, p561 * 47.00567626953125, p561 * 112.44320678710938, p561 * 48.00567626953125, p561 * 107.44320678710938);
    v869.bezierCurveTo(p561 * 43.00567626953125, p561 * 111.44320678710938, p561 * 40.00567626953125, p561 * 111.44320678710938, p561 * 37.00567626953125, p561 * 110.44320678710938);
    v869.bezierCurveTo(p561 * 39.50567626953125, p561 * 104.94320678710938, p561 * 39.50567626953125, p561 * 104.94320678710938, p561 * 42.00567626953125, p561 * 99.44320678710938);
    v869.bezierCurveTo(p561 * 33.00567626953125, p561 * 99.44320678710938, p561 * 33.00567626953125, p561 * 98.44320678710938, p561 * 33.00567626953125, p561 * 96.44320678710938);
    v869.closePath();
    f86(v869, undefined, p562[2], p561 * 3);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 51.00567626953125, p561 * 72.53409576416016);
    v869.bezierCurveTo(p561 * 48.00567626953125, p561 * 56.534095764160156, p561 * 48.00567626953125, p561 * 49.534095764160156, p561 * 54.00567626953125, p561 * 35.534095764160156);
    v869.bezierCurveTo(p561 * 58.00567626953125, p561 * 26.534095764160156, p561 * 65.00567626953125, p561 * 27.534095764160156, p561 * 73.00567626953125, p561 * 40.534095764160156);
    v869.bezierCurveTo(p561 * 81.00567626953125, p561 * 49.534095764160156, p561 * 82.00567626953125, p561 * 50.534095764160156, p561 * 83.00567626953125, p561 * 51.534095764160156);
    f86(v869, p562[1], p562[2], p561 * 3);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 105.00567626953125, p561 * 50.53410339355469);
    v869.bezierCurveTo(p561 * 112.00567626953125, p561 * 48.53410339355469, p561 * 125.00567626953125, p561 * 21.534103393554688, p561 * 132.00567626953125, p561 * 33.53410339355469);
    v869.bezierCurveTo(p561 * 138.00567626953125, p561 * 42.53410339355469, p561 * 140.00567626953125, p561 * 64.53410339355469, p561 * 136.00567626953125, p561 * 75.53410339355469);
    f86(v869, p562[1], p562[2], p561 * 3);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 57.00567626953125, p561 * 68.53410339355469);
    v869.bezierCurveTo(p561 * 63.00567626953125, p561 * 69.53410339355469, p561 * 69.00567626953125, p561 * 66.53410339355469, p561 * 73.00567626953125, p561 * 60.53410339355469);
    v869.bezierCurveTo(p561 * 66.00567626953125, p561 * 47.53410339355469, p561 * 61.00567626953125, p561 * 42.53410339355469, p561 * 58.00567626953125, p561 * 49.53410339355469);
    v869.bezierCurveTo(p561 * 56.00567626953125, p561 * 59.53410339355469, p561 * 56.00567626953125, p561 * 64.53410339355469, p561 * 57.00567626953125, p561 * 67.53410339355469);
    v869.closePath();
    f86(v869, p562[3]);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 115.00567626953125, p561 * 59.715911865234375);
    v869.bezierCurveTo(p561 * 119.00567626953125, p561 * 48.715911865234375, p561 * 126.00567626953125, p561 * 41.715911865234375, p561 * 129.00567626953125, p561 * 48.715911865234375);
    v869.bezierCurveTo(p561 * 131.00567626953125, p561 * 56.715911865234375, p561 * 133.00567626953125, p561 * 71.71591186523438, p561 * 127.00567626953125, p561 * 68.71591186523438);
    v869.bezierCurveTo(p561 * 120.00567626953125, p561 * 67.71591186523438, p561 * 114.00567626953125, p561 * 59.715911865234375, p561 * 116.00567626953125, p561 * 58.715911865234375);
    v869.closePath();
    f86(v869, p562[3]);
    f87(v869, p561 * 77, p561 * 107, p561 * 6);
    f86(v869, p562[2]);
    f87(v869, p561 * 110, p561 * 107, p561 * 6);
    f86(v869, p562[2]);
    f87(v869, p561 * 75, p561 * 105, p561 * 3);
    f86(v869, p562[4]);
    f87(v869, p561 * 108, p561 * 105, p561 * 3);
    f86(v869, p562[4]);
    v869.beginPath();
    v869.lineCap = "round";
    v869.lineJoin = "round";
    v869.moveTo(p561 * 88.00567626953125, p561 * 141.4431915283203);
    v869.bezierCurveTo(p561 * 93.00567626953125, p561 * 137.4431915283203, p561 * 96.00567626953125, p561 * 138.4431915283203, p561 * 100.00567626953125, p561 * 141.4431915283203);
    v869.bezierCurveTo(p561 * 103.00567626953125, p561 * 143.4431915283203, p561 * 101.00567626953125, p561 * 149.4431915283203, p561 * 95.00567626953125, p561 * 148.4431915283203);
    v869.bezierCurveTo(p561 * 85.00567626953125, p561 * 148.4431915283203, p561 * 86.00567626953125, p561 * 145.4431915283203, p561 * 88.00567626953125, p561 * 142.4431915283203);
    v869.closePath();
    f86(v869, p562[1]);
    return v868;
  }
  function f112(p563, p564, p565) {
    var v870 = document.createElement("canvas");
    var v871 = v870.getContext("2d");
    var v872 = p563 * 55;
    var v873 = p563 * 55;
    var v874 = p563 * 8;
    v870.width = v872;
    v870.height = v873;
    v871.translate(p563 * -65, p563 * -55 + v874);
    v871.globalAlpha = 1;
    v871.beginPath();
    v871.moveTo(p563 * 95, p563 * 60);
    v871.bezierCurveTo(p563 * 107, p563 * 62, p563 * 110, p563 * 73, p563 * 107, p563 * 79);
    v871.bezierCurveTo(p563 * 104, p563 * 85, p563 * 85, p563 * 93, p563 * 81, p563 * 88);
    v871.bezierCurveTo(p563 * 74, p563 * 80, p563 * 85, p563 * 60, p563 * 95, p563 * 60);
    v871.closePath();
    f86(v871, p565[0], p565[1], 3);
    v871.globalAlpha = 1;
    v871.beginPath();
    v871.moveTo(p563 * 91, p563 * 70);
    v871.bezierCurveTo(p563 * 91, p563 * 75, p563 * 100, p563 * 76, p563 * 100, p563 * 73);
    v871.bezierCurveTo(p563 * 100, p563 * 69, p563 * 89, p563 * 65, p563 * 91, p563 * 70);
    v871.closePath();
    f86(v871, p565[2], p565[3], 3);
    return v870;
  }
  function f113(p566, p567) {
    var v875 = document.createElement("canvas");
    var v876 = v875.getContext("2d");
    v875.width = p566 * 238;
    v875.height = p566 * 230;
    v876.translate(p566 * -93, p566 * -110 + p566 * 5);
    v876.globalAlpha = 0.3;
    f87(v876, p566 * 213.5, p566 * 256.75, p566 * 75);
    f86(v876, p567[5]);
    f87(v876, p566 * 213.5, p566 * 175.75, p566 * 25);
    f86(v876, p567[5]);
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 156.5, p566 * 137.75);
    v876.bezierCurveTo(p566 * 170.5, p566 * 173.75, p566 * 195.5, p566 * 177.75, p566 * 209.5, p566 * 177.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 217.5, p566 * 178.75);
    v876.bezierCurveTo(p566 * 251.5, p566 * 177.75, p566 * 263.5, p566 * 153.75, p566 * 270.5, p566 * 140.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 130.5, p566 * 124.75);
    v876.bezierCurveTo(p566 * 153.5, p566 * 185.75, p566 * 198.5, p566 * 185.75, p566 * 213.5, p566 * 185.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 214.5, p566 * 183.75);
    v876.bezierCurveTo(p566 * 265.5, p566 * 192.75, p566 * 293.5, p566 * 141.75, p566 * 297.5, p566 * 124.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 107.5, p566 * 213.75);
    v876.bezierCurveTo(p566 * 151.5, p566 * 190.75, p566 * 198.5, p566 * 184.75, p566 * 210.5, p566 * 184.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 212.5, p566 * 187.75);
    v876.bezierCurveTo(p566 * 258.5, p566 * 182.75, p566 * 286.5, p566 * 194.75, p566 * 314.5, p566 * 206.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 102.5, p566 * 258.75);
    v876.bezierCurveTo(p566 * 142.5, p566 * 200.75, p566 * 193.5, p566 * 194.75, p566 * 211.5, p566 * 185.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 214.5, p566 * 192.75);
    v876.bezierCurveTo(p566 * 276.5, p566 * 194.75, p566 * 306.5, p566 * 233.75, p566 * 316.5, p566 * 246.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[5];
    v876.stroke();
    v876.translate(0, -5);
    v876.globalAlpha = 1;
    f87(v876, p566 * 213.5, p566 * 256.75, p566 * 75);
    f86(v876, p567[3]);
    f87(v876, p566 * 213.5, p566 * 175.75, p566 * 25);
    f86(v876, p567[3]);
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 219.5, p566 * 158.75);
    v876.bezierCurveTo(p566 * 226.5, p566 * 159.75, p566 * 227.5, p566 * 147.75, p566 * 219.5, p566 * 145.75);
    v876.closePath();
    v876.lineWidth = p566 * 10;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 210.5, p566 * 160.75);
    v876.bezierCurveTo(p566 * 203.5, p566 * 159.75, p566 * 199.5, p566 * 146.75, p566 * 210.5, p566 * 145.75);
    v876.closePath();
    v876.lineWidth = p566 * 10;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 219.5, p566 * 158.75);
    v876.bezierCurveTo(p566 * 226.5, p566 * 159.75, p566 * 227.5, p566 * 147.75, p566 * 219.5, p566 * 145.75);
    v876.closePath();
    v876.fillStyle = p567[0];
    v876.fill();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 210.5, p566 * 160.75);
    v876.bezierCurveTo(p566 * 203.5, p566 * 159.75, p566 * 199.5, p566 * 146.75, p566 * 210.5, p566 * 145.75);
    v876.closePath();
    v876.fillStyle = p567[0];
    v876.fill();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 156.5, p566 * 137.75);
    v876.bezierCurveTo(p566 * 170.5, p566 * 173.75, p566 * 195.5, p566 * 177.75, p566 * 209.5, p566 * 177.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 217.5, p566 * 178.75);
    v876.bezierCurveTo(p566 * 251.5, p566 * 177.75, p566 * 263.5, p566 * 153.75, p566 * 270.5, p566 * 140.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 130.5, p566 * 124.75);
    v876.bezierCurveTo(p566 * 153.5, p566 * 185.75, p566 * 198.5, p566 * 185.75, p566 * 213.5, p566 * 185.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 214.5, p566 * 183.75);
    v876.bezierCurveTo(p566 * 265.5, p566 * 192.75, p566 * 293.5, p566 * 141.75, p566 * 297.5, p566 * 124.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 107.5, p566 * 213.75);
    v876.bezierCurveTo(p566 * 151.5, p566 * 190.75, p566 * 198.5, p566 * 184.75, p566 * 210.5, p566 * 184.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 212.5, p566 * 187.75);
    v876.bezierCurveTo(p566 * 258.5, p566 * 182.75, p566 * 286.5, p566 * 194.75, p566 * 314.5, p566 * 206.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 102.5, p566 * 258.75);
    v876.bezierCurveTo(p566 * 142.5, p566 * 200.75, p566 * 193.5, p566 * 194.75, p566 * 211.5, p566 * 185.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 214.5, p566 * 192.75);
    v876.bezierCurveTo(p566 * 276.5, p566 * 194.75, p566 * 306.5, p566 * 233.75, p566 * 316.5, p566 * 246.75);
    v876.lineWidth = p566 * 17;
    v876.strokeStyle = p567[3];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 156.5, p566 * 137.75);
    v876.bezierCurveTo(p566 * 170.5, p566 * 173.75, p566 * 195.5, p566 * 177.75, p566 * 209.5, p566 * 177.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 217.5, p566 * 178.75);
    v876.bezierCurveTo(p566 * 251.5, p566 * 177.75, p566 * 263.5, p566 * 153.75, p566 * 270.5, p566 * 140.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 130.5, p566 * 124.75);
    v876.bezierCurveTo(p566 * 153.5, p566 * 185.75, p566 * 198.5, p566 * 185.75, p566 * 213.5, p566 * 185.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 214.5, p566 * 183.75);
    v876.bezierCurveTo(p566 * 265.5, p566 * 192.75, p566 * 293.5, p566 * 141.75, p566 * 297.5, p566 * 124.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 107.5, p566 * 213.75);
    v876.bezierCurveTo(p566 * 151.5, p566 * 190.75, p566 * 198.5, p566 * 184.75, p566 * 210.5, p566 * 184.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 212.5, p566 * 187.75);
    v876.bezierCurveTo(p566 * 258.5, p566 * 182.75, p566 * 286.5, p566 * 194.75, p566 * 314.5, p566 * 206.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 102.5, p566 * 258.75);
    v876.bezierCurveTo(p566 * 142.5, p566 * 200.75, p566 * 193.5, p566 * 194.75, p566 * 211.5, p566 * 185.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    v876.beginPath();
    v876.lineCap = "round";
    v876.lineJoin = "round";
    v876.moveTo(p566 * 214.5, p566 * 192.75);
    v876.bezierCurveTo(p566 * 276.5, p566 * 194.75, p566 * 306.5, p566 * 233.75, p566 * 316.5, p566 * 246.75);
    v876.lineWidth = p566 * 8;
    v876.strokeStyle = p567[0];
    v876.stroke();
    f87(v876, p566 * 213.5, p566 * 256.75, p566 * 70);
    f86(v876, p567[0]);
    f87(v876, p566 * 213.5, p566 * 175.75, p566 * 20);
    f86(v876, p567[0]);
    f87(v876, p566 * 222, p566 * 166, p566 * 5);
    v876.fillStyle = p567[2];
    v876.fill();
    f87(v876, p566 * 205, p566 * 166, p566 * 5);
    v876.fillStyle = p567[2];
    v876.fill();
    f87(v876, p566 * 206.2, p566 * 167, p566 * 2.5);
    v876.fillStyle = p567[4];
    v876.fill();
    f87(v876, p566 * 223.2, p566 * 167, p566 * 2.5);
    v876.fillStyle = p567[4];
    v876.fill();
    v876.save();
    v876.translate(p566 * 213.5, p566 * 293.75);
    v876.rotate(0.76);
    f89(v876, p566 * -22, p566 * -21, p566 * 44, p566 * 42, p566 * 6);
    v876.restore();
    v876.fillStyle = p567[1];
    v876.fill();
    v876.save();
    v876.translate(p566 * 212.5, p566 * 258.25);
    v876.rotate(0.8);
    f89(v876, p566 * -15, p566 * -14.5, p566 * 30, p566 * 29, p566 * 6);
    v876.restore();
    v876.fillStyle = p567[1];
    v876.fill();
    return v875;
  }
  function f114(p568, p569, p570) {
    var v877 = document.createElement("canvas");
    var v878 = v877.getContext("2d");
    v877.width = p568 * 400;
    v877.height = p568 * 400;
    v878.save();
    v878.translate(p568 * 202.5, p568 * 147.5);
    f89(v878, p568 * -96.5, p568 * -21.5, p568 * 193, p568 * 193, p568 * 0);
    v878.restore();
    f86(v878, p569[0], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 202.5, p568 * 190.5);
    f89(v878, p568 * 96.5, p568 * -21.5, p568 * -193, p568 * 43, p568 * 0);
    v878.restore();
    f86(v878, p569[2], p569[1], p568 * 12);
    v878.save();
    v878.save();
    v878.translate(p568 * 202.5, p568 * 233.5);
    f89(v878, p568 * -96.5, p568 * -20.5, p568 * 193, p568 * 41, p568 * 0);
    v878.restore();
    f86(v878, p569[3], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 202.5, p568 * 275);
    f89(v878, p568 * 96.5, p568 * -21, p568 * -193, p568 * 42, p568 * 0);
    v878.restore();
    f86(v878, p569[0], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 201, p568 * 212);
    v878.rotate(8.64);
    f89(v878, p568 * -116, p568 * -22, p568 * 232, p568 * 44, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 203.5, p568 * 121.5);
    f89(v878, p568 * -115.5, p568 * -20.5, p568 * 231, p568 * 41, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 203.5, p568 * 299);
    f89(v878, p568 * -115.5, p568 * -20, p568 * 231, p568 * 40, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 298.5, p568 * 210);
    f89(v878, p568 * -20.5, p568 * -109, p568 * 41, p568 * 218, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 108.5, p568 * 210);
    f89(v878, p568 * -20.5, p568 * -109, p568 * 41, p568 * 218, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[1], p568 * 12);
    v878.save();
    v878.translate(p568 * 204, p568 * 121.5);
    f89(v878, p568 * -92, p568 * -9.5, p568 * 184, p568 * 19, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[3], p568 * 10);
    v878.save();
    v878.translate(p568 * 197, p568 * 299);
    f89(v878, p568 * 85, p568 * -9, p568 * -170, p568 * 18, p568 * 10);
    v878.restore();
    f86(v878, p569[3], p569[3], p568 * 10);
    v878.beginPath();
    v878.lineCap = "round";
    v878.lineJoin = "round";
    v878.moveTo(p568 * 94, p568 * 317);
    v878.bezierCurveTo(p568 * 110.5, p568 * 299.5, p568 * 110.5, p568 * 299.5, p568 * 127, p568 * 282);
    v878.closePath();
    f86(v878, vVVUndefined197, p569[1], p568 * 12);
    v878.beginPath();
    v878.lineCap = "round";
    v878.lineJoin = "round";
    v878.moveTo(p568 * 279, p568 * 142);
    v878.bezierCurveTo(p568 * 296.5, p568 * 125.5, p568 * 296.5, p568 * 125.5, p568 * 314, p568 * 109);
    v878.closePath();
    f86(v878, undefined, p569[1], p568 * 12);
    v878.beginPath();
    v878.lineCap = "round";
    v878.lineJoin = "round";
    v878.moveTo(p568 * 93, p568 * 106);
    v878.bezierCurveTo(p568 * 110.5, p568 * 124, p568 * 110.5, p568 * 124, p568 * 128, p568 * 142);
    v878.closePath();
    f86(v878, undefined, p569[1], p568 * 12);
    v878.beginPath();
    v878.lineCap = "round";
    v878.lineJoin = "round";
    v878.moveTo(p568 * 281, p568 * 282);
    v878.bezierCurveTo(p568 * 296, p568 * 297.5, p568 * 296, p568 * 297.5, p568 * 311, p568 * 313);
    v878.closePath();
    f86(v878, undefined, p569[1], p568 * 12);
    if (p570 == 0) {
      v878.scale(2, 2);
      v878.translate(p568 * -7, p568 * 55);
      v878.rotate(-0.5);
      v878.beginPath();
      v878.lineCap = "round";
      v878.lineJoin = "round";
      v878.moveTo(p568 * 60, p568 * 47);
      v878.bezierCurveTo(p568 * 81, p568 * 46, p568 * 85, p568 * 47, p568 * 83, p568 * 63);
      v878.bezierCurveTo(p568 * 83, p568 * 72, p568 * 83, p568 * 75, p568 * 72, p568 * 73);
      v878.bezierCurveTo(p568 * 68, p568 * 80, p568 * 69, p568 * 82, p568 * 66, p568 * 73);
      v878.bezierCurveTo(p568 * 62, p568 * 81, p568 * 61, p568 * 82, p568 * 59, p568 * 73);
      v878.bezierCurveTo(p568 * 54, p568 * 81, p568 * 55, p568 * 81, p568 * 52, p568 * 74);
      v878.bezierCurveTo(p568 * 38, p568 * 76, p568 * 41, p568 * 74, p568 * 40, p568 * 66);
      v878.bezierCurveTo(p568 * 38, p568 * 45, p568 * 39, p568 * 49, p568 * 59, p568 * 47);
      v878.closePath();
      f86(v878, p569[4], p569[4], p568 * 5);
      v878.beginPath();
      v878.lineCap = "round";
      v878.lineJoin = "round";
      v878.moveTo(p568 * 68, p568 * 54);
      v878.bezierCurveTo(p568 * 75, p568 * 54, p568 * 77, p568 * 62, p568 * 71, p568 * 64);
      v878.bezierCurveTo(p568 * 62, p568 * 65, p568 * 63, p568 * 54, p568 * 68, p568 * 54);
      v878.closePath();
      f86(v878, p569[3]);
      v878.beginPath();
      v878.lineCap = "round";
      v878.lineJoin = "round";
      v878.moveTo(p568 * 50, p568 * 55);
      v878.bezierCurveTo(p568 * 57, p568 * 55, p568 * 58, p568 * 65, p568 * 52, p568 * 65);
      v878.bezierCurveTo(p568 * 44, p568 * 66, p568 * 44, p568 * 54, p568 * 50, p568 * 55);
      v878.closePath();
      f86(v878, p569[3]);
    } else if (p570 == 1) {
      v878.scale(0.6, 0.6);
      v878.translate(p568 * 185, p568 * 165);
      v878.beginPath();
      v878.lineCap = "round";
      v878.lineJoin = "round";
      v878.moveTo(p568 * 108, p568 * 56);
      v878.bezierCurveTo(p568 * 136, p568 * 58, p568 * 203, p568 * 69, p568 * 234, p568 * 75);
      v878.bezierCurveTo(p568 * 246, p568 * 77, p568 * 247, p568 * 78, p568 * 245, p568 * 90);
      v878.bezierCurveTo(p568 * 238, p568 * 143, p568 * 228, p568 * 197, p568 * 214, p568 * 259);
      v878.bezierCurveTo(p568 * 212, p568 * 267, p568 * 209, p568 * 270, p568 * 189, p568 * 268);
      v878.bezierCurveTo(p568 * 142, p568 * 264, p568 * 106, p568 * 260, p568 * 75, p568 * 253);
      v878.bezierCurveTo(p568 * 60, p568 * 250, p568 * 64, p568 * 250, p568 * 66, p568 * 221);
      v878.bezierCurveTo(p568 * 71, p568 * 168, p568 * 87, p568 * 95, p568 * 98, p568 * 67);
      v878.bezierCurveTo(p568 * 101, p568 * 57, p568 * 103, p568 * 56, p568 * 106, p568 * 56);
      v878.closePath();
      f86(v878, p569[4], p569[4], p568 * 20);
      v878.beginPath();
      v878.lineCap = "round";
      v878.lineJoin = "round";
      v878.moveTo(p568 * 112, p568 * 72);
      v878.bezierCurveTo(p568 * 132, p568 * 73, p568 * 227, p568 * 85, p568 * 226, p568 * 91);
      v878.bezierCurveTo(p568 * 231, p568 * 89, p568 * 217, p568 * 196, p568 * 200, p568 * 250);
      v878.bezierCurveTo(p568 * 196, p568 * 254, p568 * 175, p568 * 249, p568 * 166, p568 * 249);
      v878.bezierCurveTo(p568 * 91, p568 * 241, p568 * 82, p568 * 236, p568 * 83, p568 * 232);
      v878.bezierCurveTo(p568 * 90, p568 * 144, p568 * 108, p568 * 71, p568 * 111, p568 * 72);
      v878.closePath();
      f86(v878, undefined, p569[0], p568 * 13);
      v878.beginPath();
      v878.lineCap = "round";
      v878.lineJoin = "round";
      v878.moveTo(p568 * 132, p568 * 117);
      v878.bezierCurveTo(p568 * 171, p568 * 86, p568 * 191, p568 * 101, p568 * 188, p568 * 134);
      v878.bezierCurveTo(p568 * 185, p568 * 154, p568 * 170, p568 * 158, p568 * 153, p568 * 158);
      v878.bezierCurveTo(p568 * 143, p568 * 172, p568 * 146, p568 * 180, p568 * 147, p568 * 193);
      f86(v878, undefined, p569[0], p568 * 20);
      f87(v878, p568 * 142, p568 * 221, p568 * 16.1245154965971);
      f86(v878, p569[0]);
    }
    return v877;
  }
  function f115(p571, p572, p573) {
    var v879 = document.createElement("canvas");
    var v880 = v879.getContext("2d");
    v879.width = p571 * 400;
    v879.height = p571 * 400;
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 101, p571 * 255);
    v880.bezierCurveTo(p571 * 113, p571 * 243, p571 * 179, p571 * 210, p571 * 219, p571 * 196);
    v880.bezierCurveTo(p571 * 252, p571 * 203, p571 * 288, p571 * 215, p571 * 318, p571 * 233);
    v880.bezierCurveTo(p571 * 304, p571 * 254, p571 * 258, p571 * 273, p571 * 215, p571 * 296);
    v880.bezierCurveTo(p571 * 161, p571 * 287, p571 * 119, p571 * 270, p571 * 102, p571 * 257);
    v880.closePath();
    f86(v880, p573[0], p573[1], p571 * 14);
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 99, p571 * 258);
    v880.bezierCurveTo(p571 * 99, p571 * 272.5, p571 * 99, p571 * 272.5, p571 * 99, p571 * 287);
    v880.bezierCurveTo(p571 * 166, p571 * 319, p571 * 193, p571 * 320, p571 * 212, p571 * 324);
    v880.bezierCurveTo(p571 * 292, p571 * 286, p571 * 312, p571 * 271, p571 * 319, p571 * 263);
    v880.bezierCurveTo(p571 * 320, p571 * 249, p571 * 320, p571 * 241, p571 * 318, p571 * 234);
    v880.bezierCurveTo(p571 * 300, p571 * 254, p571 * 254, p571 * 277, p571 * 216, p571 * 294);
    v880.bezierCurveTo(p571 * 190, p571 * 296, p571 * 135, p571 * 276, p571 * 102, p571 * 258);
    v880.closePath();
    f86(v880, p573[2], p573[1], p571 * 14);
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 212, p571 * 323);
    v880.bezierCurveTo(p571 * 211.5, p571 * 310.5, p571 * 211.5, p571 * 310.5, p571 * 211, p571 * 298);
    v880.closePath();
    f86(v880, undefined, p573[1], p571 * 14);
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 212, p571 * 210);
    v880.bezierCurveTo(p571 * 286, p571 * 210, p571 * 331, p571 * 254, p571 * 212, p571 * 276);
    v880.bezierCurveTo(p571 * 108, p571 * 276, p571 * 112, p571 * 222, p571 * 213, p571 * 208);
    v880.closePath();
    f86(v880, p573[3], p573[4], p571 * 14);
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 98, p571 * 200);
    v880.bezierCurveTo(p571 * 126, p571 * 216, p571 * 177, p571 * 232, p571 * 213, p571 * 237);
    v880.bezierCurveTo(p571 * 266, p571 * 218, p571 * 288, p571 * 209, p571 * 318, p571 * 190);
    v880.bezierCurveTo(p571 * 269, p571 * 164, p571 * 239, p571 * 158, p571 * 214, p571 * 153);
    v880.bezierCurveTo(p571 * 148, p571 * 172, p571 * 131, p571 * 182, p571 * 98, p571 * 200);
    v880.closePath();
    f86(v880, p573[0], p573[1], p571 * 14);
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 97, p571 * 204);
    v880.bezierCurveTo(p571 * 97, p571 * 215.5, p571 * 97, p571 * 215.5, p571 * 97, p571 * 227);
    v880.bezierCurveTo(p571 * 148, p571 * 250, p571 * 179, p571 * 256, p571 * 212, p571 * 262);
    v880.bezierCurveTo(p571 * 268, p571 * 244, p571 * 281, p571 * 233, p571 * 318, p571 * 214);
    v880.bezierCurveTo(p571 * 318, p571 * 203, p571 * 318, p571 * 203, p571 * 318, p571 * 192);
    v880.bezierCurveTo(p571 * 250, p571 * 225, p571 * 236, p571 * 231, p571 * 214, p571 * 239);
    v880.bezierCurveTo(p571 * 158, p571 * 228, p571 * 126, p571 * 215, p571 * 99, p571 * 201);
    v880.closePath();
    f86(v880, p573[2], p573[1], p571 * 14);
    v880.beginPath();
    v880.lineCap = "round";
    v880.lineJoin = "round";
    v880.moveTo(p571 * 212, p571 * 260);
    v880.bezierCurveTo(p571 * 212, p571 * 251.5, p571 * 212, p571 * 251.5, p571 * 212, p571 * 243);
    v880.closePath();
    f86(v880, undefined, p573[1], p571 * 14);
    f87(v880, p571 * 161, p571 * 201, p571 * 13);
    f86(v880, p573[5]);
    f87(v880, p571 * 216, p571 * 205, p571 * 8.06225774829855);
    f86(v880, p573[5]);
    f87(v880, p571 * 216, p571 * 175, p571 * 6.708203932499369);
    f86(v880, p573[5]);
    f87(v880, p571 * 271, p571 * 191, p571 * 5.0990195135927845);
    f86(v880, p573[5]);
    f87(v880, p571 * 206, p571 * 180, p571 * 11.180339887498949);
    f86(v880, p573[5]);
    return v879;
  }
  function f116(p574, p575, p576) {
    var v881 = document.createElement("canvas");
    var v882 = v881.getContext("2d");
    v881.width = p574 * 52;
    v881.height = p574 * 65;
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 9.833328247070312, p574 * 12.078125);
    v882.bezierCurveTo(p574 * 15.333328247070312, p574 * 28.078125, p574 * 15.333328247070312, p574 * 28.078125, p574 * 20.833328247070312, p574 * 44.078125);
    v882.closePath();
    f86(v882, vVVUndefined272, p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 7.8333282470703125, p574 * 20.078125);
    v882.bezierCurveTo(p574 * 16.833328247070312, p574 * 32.578125, p574 * 16.833328247070312, p574 * 32.578125, p574 * 25.833328247070312, p574 * 45.078125);
    v882.closePath();
    f86(v882, vVVVVVUndefined197, p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 23.833328247070312, p574 * 26.078125);
    v882.bezierCurveTo(p574 * 25.833328247070312, p574 * 11.078125, p574 * 16.833328247070312, p574 * 8.078125, p574 * 14.833328247070312, p574 * 7.078125);
    v882.bezierCurveTo(p574 * 11.833328247070312, p574 * 17.078125, p574 * 13.833328247070312, p574 * 22.078125, p574 * 23.833328247070312, p574 * 27.078125);
    v882.closePath();
    f86(v882, p576[0], p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 35.83332824707031, p574 * 8.078125);
    v882.bezierCurveTo(p574 * 34.83332824707031, p574 * 27.078125, p574 * 28.833328247070312, p574 * 27.078125, p574 * 23.833328247070312, p574 * 28.078125);
    v882.bezierCurveTo(p574 * 21.833328247070312, p574 * 14.078125, p574 * 26.833328247070312, p574 * 11.078125, p574 * 35.83332824707031, p574 * 8.078125);
    v882.closePath();
    f86(v882, p576[0], p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 25.833328247070312, p574 * 39.078125);
    v882.bezierCurveTo(p574 * 20.833328247070312, p574 * 29.078125, p574 * 14.833328247070312, p574 * 27.078125, p574 * 5.8333282470703125, p574 * 29.078125);
    v882.bezierCurveTo(p574 * 9.833328247070312, p574 * 39.078125, p574 * 16.833328247070312, p574 * 42.078125, p574 * 25.833328247070312, p574 * 40.078125);
    v882.closePath();
    f86(v882, p576[0], p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 42.83332824707031, p574 * 23.078125);
    v882.bezierCurveTo(p574 * 35.83332824707031, p574 * 35.078125, p574 * 31.833328247070312, p574 * 37.078125, p574 * 25.833328247070312, p574 * 36.078125);
    v882.bezierCurveTo(p574 * 25.833328247070312, p574 * 24.078125, p574 * 33.83332824707031, p574 * 21.078125, p574 * 42.83332824707031, p574 * 23.078125);
    v882.closePath();
    f86(v882, p576[0], p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 23.833328247070312, p574 * 24.078125);
    v882.bezierCurveTo(p574 * 20.833328247070312, p574 * 34.078125, p574 * 23.833328247070312, p574 * 40.078125, p574 * 27.833328247070312, p574 * 43.078125);
    v882.bezierCurveTo(p574 * 37.33332824707031, p574 * 28.078125, p574 * 37.33332824707031, p574 * 28.078125, p574 * 46.83332824707031, p574 * 13.078125);
    f86(v882, undefined, p576[1], p574 * 2);
    v882.beginPath();
    v882.lineCap = "round";
    v882.lineJoin = "round";
    v882.moveTo(p574 * 38.83332824707031, p574 * 14.078125);
    v882.bezierCurveTo(p574 * 34.83332824707031, p574 * 24.078125, p574 * 34.83332824707031, p574 * 24.078125, p574 * 30.833328247070312, p574 * 34.078125);
    f86(v882, vVVVVVUndefined197, p576[1], p574 * 2);
    return v881;
  }
  function f117(p577, p578, p579) {
    var v883 = document.createElement("canvas");
    var v884 = v883.getContext("2d");
    v883.width = p577 * 170;
    v883.height = p577 * 173;
    v884.translate(p577 * 5, p577 * 5);
    v884.globalAlpha = p578 ? 0.5 : 1;
    v884.save();
    v884.translate(p577 * 86.25, p577 * 84.953125);
    v884.rotate(0.32);
    f92(v884, 7, p577 * 42.15447781671598, p577 * 10);
    v884.restore();
    f86(v884, p579[0]);
    v884.globalAlpha = 1;
    v884.translate(p577 * -5, p577 * -5);
    v884.save();
    v884.translate(p577 * 86.25, p577 * 84.953125);
    v884.rotate(0.32);
    f92(v884, 7, p577 * 42.15447781671598, p577 * 10);
    v884.restore();
    f86(v884, p579[1], p579[2], p577 * 4);
    v884.globalAlpha = p578 ? 0.5 : 1;
    v884.translate(p577 * 5, p577 * 5);
    v884.save();
    v884.translate(p577 * 86.25, p577 * 84.953125);
    v884.rotate(0.28);
    f92(v884, 7, p577 * 30.463092423455635, p577 * 10);
    v884.restore();
    f86(v884, p579[0]);
    v884.globalAlpha = 1;
    v884.translate(p577 * -5, p577 * -5);
    v884.save();
    v884.translate(p577 * 86.25, p577 * 84.953125);
    v884.rotate(0.28);
    f92(v884, 7, p577 * 30.463092423455635, p577 * 10);
    v884.restore();
    f86(v884, p579[3], p579[4], p577 * 4);
    v884.globalAlpha = p578 ? 0.5 : 1;
    v884.translate(p577 * 5, p577 * 5);
    f87(v884, p577 * 86.25, p577 * 84.953125, p577 * 18.867962264113206);
    f86(v884, p579[0]);
    v884.globalAlpha = 1;
    v884.translate(p577 * -5, p577 * -5);
    f87(v884, p577 * 86.25, p577 * 84.953125, p577 * 18.867962264113206);
    f86(v884, p579[5], p579[6], p577 * 4);
    return v883;
  }
  function f118(p580, p581, p582) {
    var v885 = document.createElement("canvas");
    var v886 = v885.getContext("2d");
    v885.width = p580 * 400;
    v885.height = p580 * 400;
    v886.save();
    v886.translate(p580 * 85, p580 * 237);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 54.585977194239184, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 178, p580 * 238);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 52.53573932334064, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 270, p580 * 239);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 53.58058329516393, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 222, p580 * 312);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 52.53573932334064, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 317, p580 * 159);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 57.63465889766331, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 223.5, p580 * 139.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 51.66236541235796, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 132.5, p580 * 137.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 52.009614495783374, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 178.5, p580 * 58.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 53.16013544000805, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 177.5, p580 * 216.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 50, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 84.5, p580 * 215.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 54, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 319.5, p580 * 138.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 55.08175741568164, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 269.5, p580 * 216.0625);
    v886.rotate(1.5707963267948966);
    f92(v886, 6, p580 * 54.589376255824725, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 221.5, p580 * 293.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 49.49747468305833, p580 * 1);
    v886.restore();
    f86(v886, p582[1], p582[2], p580 * 12);
    v886.beginPath();
    v886.lineCap = "round";
    v886.lineJoin = "round";
    v886.moveTo(p580 * 221.5, p580 * 342.0625);
    v886.bezierCurveTo(p580 * 221.5, p580 * 350.5625, p580 * 221.5, p580 * 350.5625, p580 * 221.5, p580 * 359.0625);
    v886.closePath();
    f86(v886, vVVVUndefined197, p582[2], p580 * 12);
    v886.beginPath();
    v886.lineCap = "round";
    v886.lineJoin = "round";
    v886.moveTo(p580 * 84.5, p580 * 270.0625);
    v886.bezierCurveTo(p580 * 84.5, p580 * 277.0625, p580 * 84.5, p580 * 277.0625, p580 * 84.5, p580 * 284.0625);
    v886.closePath();
    f86(v886, undefined, p582[2], p580 * 12);
    v886.save();
    v886.translate(p580 * 84.5, p580 * 215.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 177.5, p580 * 215.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 222.5, p580 * 294.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 270.5, p580 * 216.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 320.5, p580 * 134.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 224.5, p580 * 138.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 133.5, p580 * 137.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    v886.save();
    v886.translate(p580 * 178.5, p580 * 56.0625);
    v886.rotate(0.5235987755982988);
    f92(v886, 6, p580 * 30, p580 * 15);
    v886.restore();
    f86(v886, p582[3]);
    return v885;
  }
  const v887 = 4;
  function f119(p583, p584, p585) {
    var v888 = document.createElement("canvas");
    var v889 = v888.getContext("2d");
    v888.width = p583 * 170;
    v888.height = p583 * 173;
    v889.globalAlpha = p584 ? 0.5 : 1;
    v889.translate(p583 * 5, p583 * 5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 85.25, p583 * 82.953125);
    v889.bezierCurveTo(p583 * 98.25, p583 * 46.453125, p583 * 98.25, p583 * 46.453125, p583 * 111.25, p583 * 9.953125);
    v889.closePath();
    f86(v889, undefined, p585[0], p583 * 4);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 111.25, p583 * 8.953125);
    v889.bezierCurveTo(p583 * 117.75, p583 * 12.453125, p583 * 117.75, p583 * 12.453125, p583 * 124.25, p583 * 15.953125);
    v889.bezierCurveTo(p583 * 113.75, p583 * 39.953125, p583 * 113.75, p583 * 39.953125, p583 * 103.25, p583 * 63.953125);
    v889.bezierCurveTo(p583 * 97.75, p583 * 64.953125, p583 * 97.75, p583 * 64.953125, p583 * 92.25, p583 * 65.953125);
    v889.closePath();
    f86(v889, p585[0]);
    v889.globalAlpha = 1;
    v889.translate(p583 * -5, p583 * -5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 111.25, p583 * 8.953125);
    v889.bezierCurveTo(p583 * 117.75, p583 * 12.453125, p583 * 117.75, p583 * 12.453125, p583 * 124.25, p583 * 15.953125);
    v889.bezierCurveTo(p583 * 113.75, p583 * 39.953125, p583 * 113.75, p583 * 39.953125, p583 * 103.25, p583 * 63.953125);
    v889.bezierCurveTo(p583 * 97.75, p583 * 64.953125, p583 * 97.75, p583 * 64.953125, p583 * 92.25, p583 * 65.953125);
    v889.closePath();
    f86(v889, p585[7]);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 85.25, p583 * 82.953125);
    v889.bezierCurveTo(p583 * 98.25, p583 * 46.453125, p583 * 98.25, p583 * 46.453125, p583 * 111.25, p583 * 9.953125);
    v889.closePath();
    f86(v889, undefined, p585[6], p583 * 4);
    v889.globalAlpha = p584 ? 0.5 : 1;
    v889.translate(p583 * 5, p583 * 5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 87.25, p583 * 84.953125);
    v889.bezierCurveTo(p583 * 123.75, p583 * 100.453125, p583 * 123.75, p583 * 100.453125, p583 * 160.25, p583 * 115.953125);
    v889.closePath();
    f86(v889, undefined, p585[0], p583 * 4);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 160.25, p583 * 114.953125);
    v889.bezierCurveTo(p583 * 156.25, p583 * 122.453125, p583 * 156.25, p583 * 122.453125, p583 * 152.25, p583 * 129.953125);
    v889.bezierCurveTo(p583 * 130.25, p583 * 117.953125, p583 * 130.25, p583 * 117.953125, p583 * 108.25, p583 * 105.953125);
    v889.bezierCurveTo(p583 * 107.25, p583 * 98.953125, p583 * 107.25, p583 * 98.953125, p583 * 106.25, p583 * 91.953125);
    v889.closePath();
    f86(v889, p585[0]);
    v889.globalAlpha = 1;
    v889.translate(p583 * -5, p583 * -5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 160.25, p583 * 114.953125);
    v889.bezierCurveTo(p583 * 156.25, p583 * 122.453125, p583 * 156.25, p583 * 122.453125, p583 * 152.25, p583 * 129.953125);
    v889.bezierCurveTo(p583 * 130.25, p583 * 117.953125, p583 * 130.25, p583 * 117.953125, p583 * 108.25, p583 * 105.953125);
    v889.bezierCurveTo(p583 * 107.25, p583 * 98.953125, p583 * 107.25, p583 * 98.953125, p583 * 106.25, p583 * 91.953125);
    v889.closePath();
    f86(v889, p585[7]);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 87.25, p583 * 84.953125);
    v889.bezierCurveTo(p583 * 123.75, p583 * 100.453125, p583 * 123.75, p583 * 100.453125, p583 * 160.25, p583 * 115.953125);
    v889.closePath();
    f86(v889, undefined, p585[6], p583 * 4);
    v889.globalAlpha = p584 ? 0.5 : 1;
    v889.translate(p583 * 5, p583 * 5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 83.25, p583 * 83.953125);
    v889.bezierCurveTo(p583 * 47.75, p583 * 68.453125, p583 * 47.75, p583 * 68.453125, p583 * 12.25, p583 * 52.953125);
    v889.closePath();
    f86(v889, undefined, p585[0], p583 * 4);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 13.25, p583 * 53.953125);
    v889.bezierCurveTo(p583 * 17.25, p583 * 46.953125, p583 * 17.25, p583 * 46.953125, p583 * 21.25, p583 * 39.953125);
    v889.bezierCurveTo(p583 * 42.75, p583 * 52.453125, p583 * 42.75, p583 * 52.453125, p583 * 64.25, p583 * 64.953125);
    v889.bezierCurveTo(p583 * 64.25, p583 * 70.953125, p583 * 64.25, p583 * 70.953125, p583 * 64.25, p583 * 76.953125);
    v889.closePath();
    f86(v889, p585[0]);
    v889.globalAlpha = 1;
    v889.translate(p583 * -5, p583 * -5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 13.25, p583 * 53.953125);
    v889.bezierCurveTo(p583 * 17.25, p583 * 46.953125, p583 * 17.25, p583 * 46.953125, p583 * 21.25, p583 * 39.953125);
    v889.bezierCurveTo(p583 * 42.75, p583 * 52.453125, p583 * 42.75, p583 * 52.453125, p583 * 64.25, p583 * 64.953125);
    v889.bezierCurveTo(p583 * 64.25, p583 * 70.953125, p583 * 64.25, p583 * 70.953125, p583 * 64.25, p583 * 76.953125);
    v889.closePath();
    f86(v889, p585[7]);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 83.25, p583 * 83.953125);
    v889.bezierCurveTo(p583 * 47.75, p583 * 68.453125, p583 * 47.75, p583 * 68.453125, p583 * 12.25, p583 * 52.953125);
    v889.closePath();
    f86(v889, undefined, p585[6], p583 * 4);
    v889.globalAlpha = p584 ? 0.5 : 1;
    v889.translate(p583 * 5, p583 * 5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 84.25, p583 * 86.953125);
    v889.bezierCurveTo(p583 * 70.25, p583 * 123.953125, p583 * 70.25, p583 * 123.953125, p583 * 56.25, p583 * 160.953125);
    v889.closePath();
    f86(v889, vVVUndefined273, p585[0], p583 * 4);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 56.25, p583 * 159.953125);
    v889.bezierCurveTo(p583 * 49.25, p583 * 155.453125, p583 * 49.25, p583 * 155.453125, p583 * 42.25, p583 * 150.953125);
    v889.bezierCurveTo(p583 * 54.25, p583 * 127.953125, p583 * 54.25, p583 * 127.953125, p583 * 66.25, p583 * 104.953125);
    v889.bezierCurveTo(p583 * 71.25, p583 * 104.953125, p583 * 71.25, p583 * 104.953125, p583 * 76.25, p583 * 104.953125);
    v889.closePath();
    f86(v889, p585[0]);
    v889.globalAlpha = 1;
    v889.translate(p583 * -5, p583 * -5);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 56.25, p583 * 159.953125);
    v889.bezierCurveTo(p583 * 49.25, p583 * 155.453125, p583 * 49.25, p583 * 155.453125, p583 * 42.25, p583 * 150.953125);
    v889.bezierCurveTo(p583 * 54.25, p583 * 127.953125, p583 * 54.25, p583 * 127.953125, p583 * 66.25, p583 * 104.953125);
    v889.bezierCurveTo(p583 * 71.25, p583 * 104.953125, p583 * 71.25, p583 * 104.953125, p583 * 76.25, p583 * 104.953125);
    v889.closePath();
    f86(v889, p585[7]);
    v889.beginPath();
    v889.lineCap = "round";
    v889.lineJoin = "round";
    v889.moveTo(p583 * 84.25, p583 * 86.953125);
    v889.bezierCurveTo(p583 * 70.25, p583 * 123.953125, p583 * 70.25, p583 * 123.953125, p583 * 56.25, p583 * 160.953125);
    v889.closePath();
    f86(v889, undefined, p585[6], p583 * 4);
    return v888;
  }
  function f120(p586, p587, p588) {
    var v890 = document.createElement("canvas");
    var v891 = v890.getContext("2d");
    v890.width = p586 * 170;
    v890.height = p586 * 173;
    v891.globalAlpha = p587 ? 0.5 : 1;
    v891.translate(p586 * 5, p586 * 5);
    v891.save();
    v891.translate(p586 * 86.25, p586 * 84.953125);
    f92(v891, 7, p586 * 9.848857801796104, p586 * 5);
    v891.restore();
    f86(v891, p588[0]);
    v891.globalAlpha = 1;
    v891.translate(p586 * -5, p586 * -5);
    v891.save();
    v891.translate(p586 * 86.25, p586 * 84.953125);
    f92(v891, 7, p586 * 9.848857801796104, p586 * 5);
    v891.restore();
    f86(v891, p588[8], p588[9], p586 * 4);
    return v890;
  }
  function f121(p589, p590, p591, p592, p593) {
    var v892 = document.createElement("canvas");
    var v893 = v892.getContext("2d");
    var v894 = p589 * 70;
    var v895 = p589 * 70;
    var v896 = p589 * 10;
    var v897 = p589 * 5;
    v892.width = v894;
    v892.height = v895 + v897;
    for (var v898 = 0; v898 < p590.length; v898++) {
      var v899 = p590[v898];
      v893.globalAlpha = v899.a;
      var v900 = v899.f(p591, vV213, v899.c);
      v893.save();
      v893.translate(v894 / 2 + v899.x * p589, v895 / 2 + v899.y * p589);
      v893.rotate(v899.r);
      v893.drawImage(v900, -v900.width / 2, -v900.height / 2);
      v893.restore();
    }
    var v901 = [];
    for (v898 = 0; v898 < p592.length; v898++) {
      var v902 = document.createElement("canvas");
      var v903 = v902.getContext("2d");
      v902.width = v894;
      v902.height = v895 + v897;
      v903.globalAlpha = p593 / 2;
      if (v898 == 2) {
        f89(v903, 0, v897, v894, v895, v896);
      } else {
        f89(v903, 0, 0, v894, v895 + v897, v896);
      }
      f86(v903, "#081a19");
      v903.globalAlpha = p593;
      if (v898 == 2) {
        f89(v903, 0, v897, v894, v895, v896);
      } else {
        f89(v903, 0, 0, v894, v895, v896);
      }
      f86(v903, p592[v898]);
      v903.globalAlpha = 1;
      if (v898 == 2) {
        v903.drawImage(v892, 0, v897);
      } else {
        v903.drawImage(v892, 0, 0);
      }
      v901.push(f48(v902));
    }
    return v901;
  }
  function f122(p594, p595, p596) {
    var v904 = document.createElement("canvas");
    var v905 = v904.getContext("2d");
    var v906 = p594 * 195;
    var v907 = p594 * 190;
    var v908 = v906 / 2;
    var v909 = v907 / 2;
    v904.width = v906;
    v904.height = v907;
    var v910 = p594 * 10;
    var v911 = p594 * 35;
    var v912 = p594 * 150;
    var v913 = v911 / 2;
    var v914 = v912 / 2;
    var v915 = p594 * 4;
    v905.translate(v908 - p594 * 5, v909 - p594 * 5);
    v905.rotate(-Math.PI / 1.25);
    v905.globalAlpha = 1;
    f89(v905, -v913, -v914, v911, v912, v910);
    f86(v905, p596[0], p596[1], v915);
    v905.translate(0, 0);
    v905.rotate(Math.PI / 3);
    v905.globalAlpha = 1;
    f89(v905, -v913, -v914, v911, v912, v910);
    f86(v905, p596[0], p596[1], v915);
    v905.translate(0, 5);
    f89(v905, -v913 / 2, -v914 / 2, v911 / 2, v912 / 3, v910 - 2);
    f86(v905, p596[1]);
    return v904;
  }
  function f123(p597, p598, p599) {
    var v916 = document.createElement("canvas");
    var v917 = v916.getContext("2d");
    var v918 = p597 * 75;
    var v919 = p597 * 55;
    v916.width = v918;
    v916.height = v919;
    v917.translate(p597 * -30, p597 * -40);
    v917.globalAlpha = 1;
    v917.beginPath();
    v917.bezierCurveTo(p597 * 67, p597 * 56, p597 * 72, p597 * 71, p597 * 72, p597 * 71);
    v917.bezierCurveTo(p597 * 72, p597 * 71, p597 * 84, p597 * 70, p597 * 75, p597 * 82);
    v917.bezierCurveTo(p597 * 70, p597 * 88, p597 * 61, p597 * 89, p597 * 58, p597 * 89);
    v917.bezierCurveTo(p597 * 55, p597 * 89, p597 * 40, p597 * 89, p597 * 46, p597 * 77);
    v917.bezierCurveTo(p597 * 46, p597 * 77, p597 * 43, p597 * 63, p597 * 43, p597 * 63);
    v917.bezierCurveTo(p597 * 35, p597 * 61, p597 * 35, p597 * 53, p597 * 42, p597 * 47);
    v917.bezierCurveTo(p597 * 48, p597 * 42, p597 * 62, p597 * 41, p597 * 66, p597 * 43);
    v917.bezierCurveTo(p597 * 70, p597 * 45, p597 * 72, p597 * 48, p597 * 67, p597 * 56);
    v917.closePath();
    f86(v917, p599[0]);
    v917.beginPath();
    v917.bezierCurveTo(p597 * 68, p597 * 61, p597 * 72, p597 * 76, p597 * 72, p597 * 76);
    v917.bezierCurveTo(p597 * 65, p597 * 85, p597 * 61, p597 * 85, p597 * 49, p597 * 83);
    v917.bezierCurveTo(p597 * 49, p597 * 83, p597 * 44, p597 * 63, p597 * 44, p597 * 63);
    v917.bezierCurveTo(p597 * 54, p597 * 63, p597 * 60, p597 * 63, p597 * 67, p597 * 55);
    v917.closePath();
    f86(v917, p599[1]);
    v917.beginPath();
    v917.moveTo(p597 * 69, p597 * 65);
    v917.bezierCurveTo(p597 * 70, p597 * 61, p597 * 81, p597 * 66, p597 * 86, p597 * 66);
    v917.bezierCurveTo(p597 * 90, p597 * 66, p597 * 97, p597 * 63, p597 * 97, p597 * 56);
    v917.bezierCurveTo(p597 * 97, p597 * 50, p597 * 93, p597 * 47, p597 * 88, p597 * 44);
    f86(v917, false, p599[1], 2);
    v917.beginPath();
    v917.moveTo(p597 * 50, p597 * 48);
    v917.bezierCurveTo(p597 * 43, p597 * 52, p597 * 50, p597 * 54, p597 * 51, p597 * 54);
    v917.bezierCurveTo(p597 * 54, p597 * 54, p597 * 59, p597 * 52, p597 * 59, p597 * 49);
    v917.bezierCurveTo(p597 * 59, p597 * 48, p597 * 55, p597 * 46, p597 * 50, p597 * 48);
    f86(v917, p599[2]);
    return v916;
  }
  function f124(p600, p601, p602) {
    var v920 = document.createElement("canvas");
    var v921 = v920.getContext("2d");
    var v922 = p600 * 205;
    var v923 = p600 * 205;
    var v924 = v922 / 2;
    var v925 = v923 / 2;
    v920.width = v922;
    v920.height = v923;
    var v926 = p600 * 100;
    v921.translate(v924, v925);
    v921.globalAlpha = 1;
    f87(v921, 0, 0, v926);
    f86(v921, p602[0]);
    return v920;
  }
  function f125(p603, p604, p605) {
    var v927 = document.createElement("canvas");
    var v928 = v927.getContext("2d");
    v927.width = p603 * 155;
    v927.height = p603 * 127;
    v928.globalAlpha = 0.5;
    v928.translate(0, p603 * 8);
    v928.translate(p603 * -7, p603 * -20);
    v928.beginPath();
    v928.lineCap = "round";
    v928.lineJoin = "round";
    v928.moveTo(p603 * 55, p603 * 68);
    v928.bezierCurveTo(p603 * 86, p603 * 64, p603 * 117, p603 * 66, p603 * 134, p603 * 68);
    v928.bezierCurveTo(p603 * 152, p603 * 69, p603 * 165, p603 * 86, p603 * 152, p603 * 104);
    v928.bezierCurveTo(p603 * 146, p603 * 87, p603 * 122, p603 * 89, p603 * 98, p603 * 90);
    v928.bezierCurveTo(p603 * 64, p603 * 89, p603 * 41, p603 * 91, p603 * 36, p603 * 106);
    v928.bezierCurveTo(p603 * 19, p603 * 92, p603 * 31, p603 * 71, p603 * 54, p603 * 69);
    v928.closePath();
    f86(v928, p605[0]);
    v928.globalAlpha = 1;
    v928.translate(0, p603 * -8);
    v928.translate(p603 * 7, p603 * 20);
    v928.beginPath();
    v928.lineCap = "round";
    v928.lineJoin = "round";
    v928.moveTo(p603 * 24, p603 * 28);
    v928.bezierCurveTo(p603 * 39, p603 * 30, p603 * 37, p603 * 31, p603 * 40, p603 * 32);
    v928.bezierCurveTo(p603 * 22, p603 * 45, p603 * 26, p603 * 58, p603 * 29, p603 * 66);
    v928.bezierCurveTo(p603 * 86.5, p603 * 65, p603 * 86.5, p603 * 65, p603 * 144, p603 * 64);
    v928.bezierCurveTo(p603 * 151, p603 * 42, p603 * 132, p603 * 20, p603 * 120, p603 * 16);
    v928.bezierCurveTo(p603 * 106, p603 * 12, p603 * 89, p603 * 0, p603 * 73, p603 * 3);
    v928.bezierCurveTo(p603 * 51, p603 * 5, p603 * 36, p603 * 20, p603 * 25, p603 * 28);
    v928.closePath();
    f86(v928, p605[1], p605[2], p603 * 4);
    v928.beginPath();
    v928.lineCap = "round";
    v928.lineJoin = "round";
    v928.moveTo(p603 * 30, p603 * 41);
    v928.bezierCurveTo(p603 * 49, p603 * 31, p603 * 53, p603 * 29, p603 * 62, p603 * 27);
    v928.bezierCurveTo(p603 * 59, p603 * 24, p603 * 56, p603 * 25, p603 * 53, p603 * 24);
    v928.bezierCurveTo(p603 * 67, p603 * 15, p603 * 84, p603 * 12, p603 * 120, p603 * 16);
    v928.bezierCurveTo(p603 * 107, p603 * 11, p603 * 96, p603 * 6, p603 * 85, p603 * 2);
    v928.bezierCurveTo(p603 * 59, p603 * 3, p603 * 54, p603 * 7, p603 * 40, p603 * 17);
    v928.bezierCurveTo(p603 * 32.5, p603 * 22.5, p603 * 32.5, p603 * 22.5, p603 * 25, p603 * 28);
    v928.bezierCurveTo(p603 * 32, p603 * 30, p603 * 32, p603 * 30, p603 * 39, p603 * 32);
    v928.closePath();
    f86(v928, p605[3]);
    v928.beginPath();
    v928.lineCap = "round";
    v928.lineJoin = "round";
    v928.moveTo(p603 * 24, p603 * 28);
    v928.bezierCurveTo(p603 * 39, p603 * 30, p603 * 37, p603 * 31, p603 * 40, p603 * 32);
    v928.bezierCurveTo(p603 * 22, p603 * 45, p603 * 26, p603 * 58, p603 * 29, p603 * 66);
    v928.bezierCurveTo(p603 * 86.5, p603 * 65, p603 * 86.5, p603 * 65, p603 * 144, p603 * 64);
    v928.bezierCurveTo(p603 * 151, p603 * 42, p603 * 132, p603 * 20, p603 * 120, p603 * 16);
    v928.bezierCurveTo(p603 * 106, p603 * 12, p603 * 89, p603 * 0, p603 * 73, p603 * 3);
    v928.bezierCurveTo(p603 * 51, p603 * 5, p603 * 36, p603 * 20, p603 * 25, p603 * 28);
    v928.closePath();
    f86(v928, vVVVUndefined197, p605[2], p603 * 4);
    f87(v928, p603 * 18, p603 * 38, p603 * 14.866068747318506);
    f86(v928, p605[4], p605[5], p603 * 4);
    v928.beginPath();
    v928.lineCap = "round";
    v928.lineJoin = "round";
    v928.moveTo(p603 * 39, p603 * 30);
    v928.bezierCurveTo(p603 * 27, p603 * 38, p603 * 25, p603 * 50, p603 * 26, p603 * 60);
    v928.bezierCurveTo(p603 * 36.5, p603 * 58.5, p603 * 36.5, p603 * 58.5, p603 * 47, p603 * 57);
    f86(v928, p605[1], p605[2], p603 * 4);
    v928.translate(p603 * -7, p603 * -20);
    v928.beginPath();
    v928.lineCap = "round";
    v928.lineJoin = "round";
    v928.moveTo(p603 * 55, p603 * 68);
    v928.bezierCurveTo(p603 * 86, p603 * 64, p603 * 117, p603 * 66, p603 * 134, p603 * 68);
    v928.bezierCurveTo(p603 * 152, p603 * 69, p603 * 165, p603 * 86, p603 * 152, p603 * 104);
    v928.bezierCurveTo(p603 * 146, p603 * 87, p603 * 122, p603 * 89, p603 * 98, p603 * 90);
    v928.bezierCurveTo(p603 * 64, p603 * 89, p603 * 41, p603 * 91, p603 * 36, p603 * 106);
    v928.bezierCurveTo(p603 * 19, p603 * 92, p603 * 31, p603 * 71, p603 * 54, p603 * 69);
    v928.closePath();
    f86(v928, p605[4], p605[5], p603 * 4);
    return v927;
  }
  function f126(p606, p607, p608) {
    var v929 = document.createElement("canvas");
    var v930 = v929.getContext("2d");
    var v931 = p606 * 193;
    var v932 = p606 * 198;
    var v933 = p606 * 140;
    var v934 = p606 * 90;
    v929.width = v931;
    v929.height = v932;
    var v935 = p606 * 10;
    var v936 = p606 * 25;
    var v937 = p606 * 180;
    var v938 = v936 / 2;
    var v939 = v937 / 2;
    var v940 = p606 * 4;
    v930.translate(p606 * -25, p606 * 1);
    v930.translate(v933, v934);
    v930.rotate(-Math.PI / 5);
    f89(v930, -v938, -v939, v936, v937, v935);
    f86(v930, p608[0], p608[1], v940);
    v930.translate(p606 * -30, p606 * -25);
    v930.rotate(Math.PI / 3);
    f89(v930, -v938, -v939, v936, v937, v935);
    f86(v930, p608[0], p608[1], v940);
    v930.translate(p606 * 35, p606 * 30);
    v930.rotate(Math.PI / 3);
    f89(v930, -v938, -v939, v936, v937, v935);
    f86(v930, p608[0], p608[1], v940);
    return v929;
  }
  function f127(p609, p610, p611) {
    var v941 = document.createElement("canvas");
    var v942 = v941.getContext("2d");
    var v943 = p609 * 135;
    var v944 = p609 * 190;
    var v945 = v943 / 2;
    var v946 = v944 / 2;
    v941.width = v943;
    v941.height = v944;
    var v947 = p609 * 10;
    var v948 = p609 * 25;
    var v949 = p609 * 180;
    var v950 = v948 / 2;
    var v951 = v949 / 2;
    var v952 = p609 * 4;
    v942.translate(v945, v946);
    v942.rotate(-Math.PI / 5);
    v942.globalAlpha = 1;
    f89(v942, -v950, -v951, v948, v949, v947);
    f86(v942, p611[0], p611[1], v952);
    v942.translate(0, 0);
    v942.rotate(Math.PI / 5);
    v942.globalAlpha = 1;
    f89(v942, -v950, -v951, v948, v949, v947);
    f86(v942, p611[0], p611[1], v952);
    return v941;
  }
  function f128(p612, p613, p614) {
    var v953 = document.createElement("canvas");
    var v954 = v953.getContext("2d");
    v953.width = p612 * 155;
    v953.height = p612 * 127;
    v954.globalAlpha = 0.5;
    v954.translate(0, p612 * 8);
    v954.translate(p612 * -7, p612 * -20);
    v954.beginPath();
    v954.lineCap = "round";
    v954.lineJoin = "round";
    v954.moveTo(p612 * 55, p612 * 68);
    v954.bezierCurveTo(p612 * 86, p612 * 64, p612 * 117, p612 * 66, p612 * 134, p612 * 68);
    v954.bezierCurveTo(p612 * 152, p612 * 69, p612 * 165, p612 * 86, p612 * 152, p612 * 104);
    v954.bezierCurveTo(p612 * 146, p612 * 87, p612 * 122, p612 * 89, p612 * 98, p612 * 90);
    v954.bezierCurveTo(p612 * 64, p612 * 89, p612 * 41, p612 * 91, p612 * 36, p612 * 106);
    v954.bezierCurveTo(p612 * 19, p612 * 92, p612 * 31, p612 * 71, p612 * 54, p612 * 69);
    v954.closePath();
    f86(v954, p614[0]);
    v954.globalAlpha = 1;
    v954.translate(0, p612 * -8);
    v954.translate(p612 * 7, p612 * 20);
    v954.beginPath();
    v954.lineCap = "round";
    v954.lineJoin = "round";
    v954.moveTo(p612 * 24, p612 * 28);
    v954.bezierCurveTo(p612 * 39, p612 * 30, p612 * 37, p612 * 31, p612 * 40, p612 * 32);
    v954.bezierCurveTo(p612 * 22, p612 * 45, p612 * 26, p612 * 58, p612 * 29, p612 * 66);
    v954.bezierCurveTo(p612 * 86.5, p612 * 65, p612 * 86.5, p612 * 65, p612 * 144, p612 * 64);
    v954.bezierCurveTo(p612 * 151, p612 * 42, p612 * 132, p612 * 20, p612 * 120, p612 * 16);
    v954.bezierCurveTo(p612 * 106, p612 * 12, p612 * 89, p612 * 0, p612 * 73, p612 * 3);
    v954.bezierCurveTo(p612 * 51, p612 * 5, p612 * 36, p612 * 20, p612 * 25, p612 * 28);
    v954.closePath();
    f86(v954, p614[1], p614[2], p612 * 4);
    v954.beginPath();
    v954.lineCap = "round";
    v954.lineJoin = "round";
    v954.moveTo(p612 * 30, p612 * 41);
    v954.bezierCurveTo(p612 * 49, p612 * 31, p612 * 53, p612 * 29, p612 * 62, p612 * 27);
    v954.bezierCurveTo(p612 * 59, p612 * 24, p612 * 56, p612 * 25, p612 * 53, p612 * 24);
    v954.bezierCurveTo(p612 * 67, p612 * 15, p612 * 84, p612 * 12, p612 * 120, p612 * 16);
    v954.bezierCurveTo(p612 * 107, p612 * 11, p612 * 96, p612 * 6, p612 * 85, p612 * 2);
    v954.bezierCurveTo(p612 * 59, p612 * 3, p612 * 54, p612 * 7, p612 * 40, p612 * 17);
    v954.bezierCurveTo(p612 * 32.5, p612 * 22.5, p612 * 32.5, p612 * 22.5, p612 * 25, p612 * 28);
    v954.bezierCurveTo(p612 * 32, p612 * 30, p612 * 32, p612 * 30, p612 * 39, p612 * 32);
    v954.closePath();
    f86(v954, p614[3]);
    v954.beginPath();
    v954.lineCap = "round";
    v954.lineJoin = "round";
    v954.moveTo(p612 * 24, p612 * 28);
    v954.bezierCurveTo(p612 * 39, p612 * 30, p612 * 37, p612 * 31, p612 * 40, p612 * 32);
    v954.bezierCurveTo(p612 * 22, p612 * 45, p612 * 26, p612 * 58, p612 * 29, p612 * 66);
    v954.bezierCurveTo(p612 * 86.5, p612 * 65, p612 * 86.5, p612 * 65, p612 * 144, p612 * 64);
    v954.bezierCurveTo(p612 * 151, p612 * 42, p612 * 132, p612 * 20, p612 * 120, p612 * 16);
    v954.bezierCurveTo(p612 * 106, p612 * 12, p612 * 89, p612 * 0, p612 * 73, p612 * 3);
    v954.bezierCurveTo(p612 * 51, p612 * 5, p612 * 36, p612 * 20, p612 * 25, p612 * 28);
    v954.closePath();
    f86(v954, undefined, p614[2], p612 * 4);
    f87(v954, p612 * 18, p612 * 38, p612 * 14.866068747318506);
    f86(v954, p614[4], p614[5], p612 * 4);
    v954.beginPath();
    v954.lineCap = "round";
    v954.lineJoin = "round";
    v954.moveTo(p612 * 39, p612 * 30);
    v954.bezierCurveTo(p612 * 27, p612 * 38, p612 * 25, p612 * 50, p612 * 26, p612 * 60);
    v954.bezierCurveTo(p612 * 36.5, p612 * 58.5, p612 * 36.5, p612 * 58.5, p612 * 47, p612 * 57);
    f86(v954, p614[1], p614[2], p612 * 4);
    v954.translate(p612 * -7, p612 * -20);
    v954.beginPath();
    v954.lineCap = "round";
    v954.lineJoin = "round";
    v954.moveTo(p612 * 27, p612 * 74);
    v954.bezierCurveTo(p612 * 38, p612 * 77.5, p612 * 38, p612 * 77.5, p612 * 49, p612 * 81);
    v954.bezierCurveTo(p612 * 54.5, p612 * 75.5, p612 * 54.5, p612 * 75.5, p612 * 60, p612 * 70);
    v954.bezierCurveTo(p612 * 64, p612 * 72, p612 * 64, p612 * 72, p612 * 68, p612 * 74);
    v954.bezierCurveTo(p612 * 80.5, p612 * 67.5, p612 * 80.5, p612 * 67.5, p612 * 93, p612 * 61);
    v954.bezierCurveTo(p612 * 104.5, p612 * 68, p612 * 104.5, p612 * 68, p612 * 116, p612 * 75);
    v954.bezierCurveTo(p612 * 120.5, p612 * 72.5, p612 * 120.5, p612 * 72.5, p612 * 125, p612 * 70);
    v954.bezierCurveTo(p612 * 129, p612 * 75, p612 * 129, p612 * 75, p612 * 133, p612 * 80);
    v954.bezierCurveTo(p612 * 145.5, p612 * 76.5, p612 * 145.5, p612 * 76.5, p612 * 158, p612 * 73);
    v954.bezierCurveTo(p612 * 158, p612 * 87, p612 * 158, p612 * 93, p612 * 155, p612 * 95);
    v954.bezierCurveTo(p612 * 152.5, p612 * 96, p612 * 152.5, p612 * 96, p612 * 150, p612 * 97);
    v954.bezierCurveTo(p612 * 121, p612 * 85, p612 * 108, p612 * 86, p612 * 93, p612 * 85);
    v954.bezierCurveTo(p612 * 64, p612 * 85, p612 * 52, p612 * 95, p612 * 38, p612 * 99);
    v954.bezierCurveTo(p612 * 36, p612 * 98.5, p612 * 36, p612 * 98.5, p612 * 34, p612 * 98);
    v954.bezierCurveTo(p612 * 25, p612 * 98, p612 * 27, p612 * 91, p612 * 27, p612 * 76);
    v954.closePath();
    f86(v954, p614[6], p614[7], p612 * 6);
    return v953;
  }
  function f129(p615, p616, p617) {
    var v955 = document.createElement("canvas");
    var v956 = v955.getContext("2d");
    var v957 = p615 * 145;
    var v958 = p615 * 145;
    var v959 = v957 / 2;
    var v960 = v958 / 2;
    v955.width = v957;
    v955.height = v958;
    var v961 = p615 * 70;
    v956.translate(v959, v960);
    v956.globalAlpha = 0.4;
    f87(v956, 0, 0, v961);
    f86(v956, p617[0]);
    v961 = p615 * 50;
    v956.translate(0, 0);
    v956.globalAlpha = 0.8;
    f87(v956, 0, 0, v961);
    f86(v956, p617[0]);
    v961 = p615 * 35;
    v956.translate(0, 0);
    v956.globalAlpha = 0.8;
    f87(v956, 0, 0, v961);
    f86(v956, p617[1]);
    v961 = p615 * 20;
    v956.translate(0, 0);
    v956.globalAlpha = 0.8;
    f87(v956, 0, 0, v961);
    f86(v956, p617[2]);
    return v955;
  }
  function f130(p618, p619, p620) {
    var v962 = document.createElement("canvas");
    var v963 = v962.getContext("2d");
    var v964 = p618 * 370;
    var v965 = p618 * 370;
    var v966 = v964 / 2;
    var v967 = v965 / 2;
    v962.width = v964;
    v962.height = v965;
    var v968 = p618 * 180;
    v963.globalAlpha = 0.2;
    f87(v963, v966, v967, v968);
    f86(v963, p620[0]);
    return v962;
  }
  const v969 = 0;
  function f131(p621, p622) {
    var v970 = document.createElement("canvas");
    var v971 = v970.getContext("2d");
    var v972 = p621 * 40;
    var v973 = p621 * 40;
    var v974 = p621 * 16;
    var v975 = p621 * 4;
    v970.width = v972;
    v970.height = v973;
    v971.translate(v972 / 2, v973 / 2);
    v971.globalAlpha = 1;
    f87(v971, 0, 0, v974);
    f86(v971, p622[0], p622[1], v975);
    return v970;
  }
  function f132(p623, p624) {
    var v976 = document.createElement("canvas");
    var v977 = v976.getContext("2d");
    var v978 = p623 * 220;
    var v979 = p623 * 220;
    var v980 = p623 * 16;
    v976.width = v978;
    v976.height = v979;
    v977.translate(v978 / 2, v979 / 2);
    v977.globalAlpha = 0.5;
    f87(v977, 0, 0, v980);
    f86(v977, p624[0]);
    v977.globalAlpha = 1;
    return v976;
  }
  function f133(p625, p626) {
    var v981 = document.createElement("canvas");
    var v982 = v981.getContext("2d");
    var v983 = p625 * 220;
    var v984 = p625 * 220;
    var v985 = p625 * 32;
    var v986 = p625 * 4;
    v981.width = v983;
    v981.height = v984;
    v982.translate(v983 / 2, v984 / 2 + p625 * 10);
    v982.globalAlpha = 0.5;
    f87(v982, 0, 0, v985);
    f86(v982, p626[0], p626[0]);
    v982.translate(0, p625 * -8);
    v982.globalAlpha = 1;
    f87(v982, 0, 0, v985);
    f86(v982, p626[1], p626[2], v986);
    return v981;
  }
  function f134(p627, p628, p629, p630) {
    var v987 = document.createElement("canvas");
    var v988 = v987.getContext("2d");
    var v989 = p627 * 210;
    var v990 = p627 * 205;
    var v991 = p627 * 30;
    var v992 = p627 * 20;
    var v993 = p627 * 200;
    var v994 = p627 * 180;
    var v995 = v993 / 2;
    var v996 = v994 / 2;
    v987.width = v989;
    v987.height = v990;
    v987.width = p627 * 419;
    v987.height = p627 * 412;
    if (p630 == 1) {
      v988.save();
      v988.translate(p627 * 10, p627 * 0);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 117.99996948242188, p627 * 216.40621948242188);
      v988.bezierCurveTo(p627 * 86.99996948242188, p627 * 221.40621948242188, p627 * 74.99996948242188, p627 * 217.40621948242188, p627 * 60.999969482421875, p627 * 205.40621948242188);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 114.99996948242188, p627 * 227.40621948242188);
      v988.bezierCurveTo(p627 * 90.99996948242188, p627 * 233.40621948242188, p627 * 66.99996948242188, p627 * 228.40621948242188, p627 * 43.999969482421875, p627 * 225.40621948242188);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 110.99996948242188, p627 * 236.40621948242188);
      v988.bezierCurveTo(p627 * 94.99996948242188, p627 * 244.40621948242188, p627 * 79.99996948242188, p627 * 249.40621948242188, p627 * 60.999969482421875, p627 * 249.40621948242188);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 111.99996948242188, p627 * 206.29513549804688);
      v988.bezierCurveTo(p627 * 91.99996948242188, p627 * 206.29513549804688, p627 * 87.99996948242188, p627 * 201.29513549804688, p627 * 79.99996948242188, p627 * 192.29513549804688);
      f86(v988, vVVVUndefined1972, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 109.99996948242188, p627 * 249.18402099609375);
      v988.bezierCurveTo(p627 * 97.99996948242188, p627 * 263.18402099609375, p627 * 85.99996948242188, p627 * 271.18402099609375, p627 * 65.99996948242188, p627 * 277.18402099609375);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 105.99996948242188, p627 * 192.18402099609375);
      v988.bezierCurveTo(p627 * 99.49996948242188, p627 * 197.68402099609375, p627 * 99.49996948242188, p627 * 197.68402099609375, p627 * 92.99996948242188, p627 * 203.18402099609375);
      v988.bezierCurveTo(p627 * 95.99996948242188, p627 * 213.18402099609375, p627 * 95.99996948242188, p627 * 215.18402099609375, p627 * 89.99996948242188, p627 * 219.18402099609375);
      v988.bezierCurveTo(p627 * 91.99996948242188, p627 * 223.18402099609375, p627 * 91.99996948242188, p627 * 226.18402099609375, p627 * 87.99996948242188, p627 * 230.18402099609375);
      v988.bezierCurveTo(p627 * 89.99996948242188, p627 * 234.18402099609375, p627 * 91.99996948242188, p627 * 237.18402099609375, p627 * 90.99996948242188, p627 * 244.18402099609375);
      v988.bezierCurveTo(p627 * 96.99996948242188, p627 * 252.18402099609375, p627 * 96.99996948242188, p627 * 256.18402099609375, p627 * 95.99996948242188, p627 * 262.18402099609375);
      v988.bezierCurveTo(p627 * 106.49996948242188, p627 * 264.18402099609375, p627 * 106.49996948242188, p627 * 264.18402099609375, p627 * 116.99996948242188, p627 * 266.18402099609375);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 104.99996948242188, p627 * 183.29513549804688);
      v988.bezierCurveTo(p627 * 99.99996948242188, p627 * 193.29513549804688, p627 * 93.99996948242188, p627 * 195.29513549804688, p627 * 89.99996948242188, p627 * 201.29513549804688);
      v988.bezierCurveTo(p627 * 86.99996948242188, p627 * 212.29513549804688, p627 * 85.99996948242188, p627 * 214.29513549804688, p627 * 81.99996948242188, p627 * 215.29513549804688);
      v988.bezierCurveTo(p627 * 83.99996948242188, p627 * 223.29513549804688, p627 * 83.99996948242188, p627 * 227.29513549804688, p627 * 79.99996948242188, p627 * 230.29513549804688);
      v988.bezierCurveTo(p627 * 83.99996948242188, p627 * 235.29513549804688, p627 * 84.99996948242188, p627 * 240.29513549804688, p627 * 79.99996948242188, p627 * 246.29513549804688);
      v988.bezierCurveTo(p627 * 86.99996948242188, p627 * 251.29513549804688, p627 * 91.99996948242188, p627 * 256.2951354980469, p627 * 89.99996948242188, p627 * 266.2951354980469);
      v988.bezierCurveTo(p627 * 102.99996948242188, p627 * 269.2951354980469, p627 * 102.99996948242188, p627 * 269.2951354980469, p627 * 115.99996948242188, p627 * 272.2951354980469);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 107.99996948242188, p627 * 177.85067749023438);
      v988.bezierCurveTo(p627 * 95.99996948242188, p627 * 187.35067749023438, p627 * 95.99996948242188, p627 * 187.35067749023438, p627 * 83.99996948242188, p627 * 196.85067749023438);
      v988.bezierCurveTo(p627 * 82.99996948242188, p627 * 203.85067749023438, p627 * 80.99996948242188, p627 * 209.85067749023438, p627 * 72.99996948242188, p627 * 210.85067749023438);
      v988.bezierCurveTo(p627 * 73.99996948242188, p627 * 220.85067749023438, p627 * 73.99996948242188, p627 * 221.85067749023438, p627 * 66.99996948242188, p627 * 227.85067749023438);
      v988.bezierCurveTo(p627 * 71.99996948242188, p627 * 235.85067749023438, p627 * 73.99996948242188, p627 * 239.85067749023438, p627 * 71.99996948242188, p627 * 247.85067749023438);
      v988.bezierCurveTo(p627 * 80.99996948242188, p627 * 257.8506774902344, p627 * 81.99996948242188, p627 * 263.8506774902344, p627 * 77.99996948242188, p627 * 271.8506774902344);
      v988.bezierCurveTo(p627 * 95.49996948242188, p627 * 272.8506774902344, p627 * 95.49996948242188, p627 * 272.8506774902344, p627 * 112.99996948242188, p627 * 273.8506774902344);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.restore();
    } else if (p630 == 2) {
      v988.save();
      v988.translate(p627 * 130, p627 * 35);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 170.99996948242188, p627 * 133.85067749023438);
      v988.bezierCurveTo(p627 * 195.99996948242188, p627 * 129.85067749023438, p627 * 196.99996948242188, p627 * 111.85067749023438, p627 * 200.99996948242188, p627 * 88.85067749023438);
      f86(v988, vVUndefined26, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 169.99996948242188, p627 * 143.85067749023438);
      v988.bezierCurveTo(p627 * 189.99996948242188, p627 * 145.85067749023438, p627 * 207.99996948242188, p627 * 126.85067749023438, p627 * 222.99996948242188, p627 * 100.85067749023438);
      f86(v988, vVUndefined19, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 170.99996948242188, p627 * 157.85067749023438);
      v988.bezierCurveTo(p627 * 193.99996948242188, p627 * 160.85067749023438, p627 * 210.99996948242188, p627 * 151.85067749023438, p627 * 232.99996948242188, p627 * 139.85067749023438);
      f86(v988, vVVUndefined273, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 169.99996948242188, p627 * 168.85067749023438);
      v988.bezierCurveTo(p627 * 192.99996948242188, p627 * 175.85067749023438, p627 * 203.99996948242188, p627 * 177.85067749023438, p627 * 245.99996948242188, p627 * 168.85067749023438);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 167.99996948242188, p627 * 168.85067749023438);
      v988.bezierCurveTo(p627 * 183.99996948242188, p627 * 189.85067749023438, p627 * 191.99996948242188, p627 * 193.85067749023438, p627 * 220.99996948242188, p627 * 196.85067749023438);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 176.99996948242188, p627 * 117.85067749023438);
      v988.bezierCurveTo(p627 * 181.99996948242188, p627 * 120.85067749023438, p627 * 181.99996948242188, p627 * 120.85067749023438, p627 * 186.99996948242188, p627 * 123.85067749023438);
      v988.bezierCurveTo(p627 * 183.99996948242188, p627 * 137.85067749023438, p627 * 185.99996948242188, p627 * 136.85067749023438, p627 * 190.99996948242188, p627 * 136.85067749023438);
      v988.bezierCurveTo(p627 * 186.99996948242188, p627 * 147.85067749023438, p627 * 189.99996948242188, p627 * 152.85067749023438, p627 * 193.99996948242188, p627 * 155.85067749023438);
      v988.bezierCurveTo(p627 * 187.99996948242188, p627 * 165.85067749023438, p627 * 190.99996948242188, p627 * 169.85067749023438, p627 * 190.99996948242188, p627 * 172.85067749023438);
      v988.bezierCurveTo(p627 * 186.99996948242188, p627 * 183.85067749023438, p627 * 186.99996948242188, p627 * 185.85067749023438, p627 * 189.99996948242188, p627 * 188.85067749023438);
      v988.bezierCurveTo(p627 * 182.49996948242188, p627 * 195.35067749023438, p627 * 182.49996948242188, p627 * 195.35067749023438, p627 * 174.99996948242188, p627 * 201.85067749023438);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 176.99996948242188, p627 * 112.18402099609375);
      v988.bezierCurveTo(p627 * 183.99996948242188, p627 * 119.18402099609375, p627 * 186.99996948242188, p627 * 117.18402099609375, p627 * 192.99996948242188, p627 * 116.18402099609375);
      v988.bezierCurveTo(p627 * 191.99996948242188, p627 * 126.18402099609375, p627 * 193.99996948242188, p627 * 130.18402099609375, p627 * 199.99996948242188, p627 * 130.18402099609375);
      v988.bezierCurveTo(p627 * 194.99996948242188, p627 * 145.18402099609375, p627 * 197.99996948242188, p627 * 147.18402099609375, p627 * 201.99996948242188, p627 * 153.18402099609375);
      v988.bezierCurveTo(p627 * 196.99996948242188, p627 * 164.18402099609375, p627 * 197.99996948242188, p627 * 169.18402099609375, p627 * 201.99996948242188, p627 * 174.18402099609375);
      v988.bezierCurveTo(p627 * 194.99996948242188, p627 * 184.18402099609375, p627 * 196.99996948242188, p627 * 187.18402099609375, p627 * 200.99996948242188, p627 * 193.18402099609375);
      v988.bezierCurveTo(p627 * 185.99996948242188, p627 * 195.18402099609375, p627 * 181.99996948242188, p627 * 201.18402099609375, p627 * 174.99996948242188, p627 * 210.18402099609375);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 176.99996948242188, p627 * 101.29513549804688);
      v988.bezierCurveTo(p627 * 181.99996948242188, p627 * 108.29513549804688, p627 * 189.99996948242188, p627 * 110.29513549804688, p627 * 195.99996948242188, p627 * 107.29513549804688);
      v988.bezierCurveTo(p627 * 197.99996948242188, p627 * 121.29513549804688, p627 * 200.99996948242188, p627 * 122.29513549804688, p627 * 206.99996948242188, p627 * 122.29513549804688);
      v988.bezierCurveTo(p627 * 201.99996948242188, p627 * 138.29513549804688, p627 * 204.99996948242188, p627 * 142.29513549804688, p627 * 211.99996948242188, p627 * 148.29513549804688);
      v988.bezierCurveTo(p627 * 201.99996948242188, p627 * 156.29513549804688, p627 * 205.99996948242188, p627 * 167.29513549804688, p627 * 213.99996948242188, p627 * 173.29513549804688);
      v988.bezierCurveTo(p627 * 204.99996948242188, p627 * 181.29513549804688, p627 * 204.99996948242188, p627 * 187.29513549804688, p627 * 205.99996948242188, p627 * 193.29513549804688);
      v988.bezierCurveTo(p627 * 190.99996948242188, p627 * 198.29513549804688, p627 * 181.99996948242188, p627 * 205.29513549804688, p627 * 174.99996948242188, p627 * 214.29513549804688);
      f86(v988, undefined, p628[4], p627 * 3);
      v988.restore();
    }
    v988.translate(v987.width / 2, v987.height / 2);
    if (!p630) {
      v988.globalAlpha = 0.5;
      f89(v988, -v995, -v996, v993, v994 + v992, v991);
      f86(v988, p628[0]);
      if (p629) {
        v988.rotate(Math.PI);
      }
      v988.globalAlpha = 1;
      f89(v988, -v995, -v996, v993, v994, v991);
      f86(v988, p628[1], p628[2], 4);
      v988.globalAlpha = 1;
      f89(v988, p627 * 35 - v995, p627 * 20 - v996, v993 - p627 * 50, v994 - p627 * 50, v991 - p627 * 10);
      f86(v988, p628[3]);
    }
    if (p630 == 3) {
      v988.translate(-v987.width / 2, -v987.height / 2);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 121, p627 * 190);
      v988.bezierCurveTo(p627 * 129, p627 * 186, p627 * 137, p627 * 183, p627 * 135, p627 * 163);
      v988.bezierCurveTo(p627 * 131, p627 * 135, p627 * 153, p627 * 127, p627 * 177, p627 * 124);
      v988.bezierCurveTo(p627 * 198, p627 * 120, p627 * 208, p627 * 122, p627 * 226, p627 * 128);
      v988.bezierCurveTo(p627 * 261, p627 * 112, p627 * 271, p627 * 126, p627 * 287, p627 * 147);
      v988.bezierCurveTo(p627 * 310, p627 * 163, p627 * 304, p627 * 183, p627 * 283, p627 * 196);
      v988.bezierCurveTo(p627 * 296, p627 * 249, p627 * 278, p627 * 262, p627 * 253, p627 * 263);
      v988.bezierCurveTo(p627 * 210, p627 * 264, p627 * 188, p627 * 252, p627 * 177, p627 * 234);
      v988.bezierCurveTo(p627 * 133, p627 * 242, p627 * 123, p627 * 241, p627 * 115, p627 * 225);
      v988.bezierCurveTo(p627 * 109, p627 * 206, p627 * 115, p627 * 193, p627 * 121, p627 * 190);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 219, p627 * 144);
      v988.bezierCurveTo(p627 * 251, p627 * 121, p627 * 277, p627 * 136, p627 * 276, p627 * 159);
      v988.bezierCurveTo(p627 * 276, p627 * 176, p627 * 273, p627 * 191, p627 * 242, p627 * 193);
      v988.bezierCurveTo(p627 * 226, p627 * 228, p627 * 155, p627 * 219, p627 * 150, p627 * 183);
      v988.bezierCurveTo(p627 * 142, p627 * 144, p627 * 174, p627 * 127, p627 * 219, p627 * 144);
      v988.closePath();
      f86(v988, p628[5]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 123, p627 * 214);
      v988.bezierCurveTo(p627 * 119, p627 * 198, p627 * 129, p627 * 189, p627 * 146, p627 * 194);
      v988.bezierCurveTo(p627 * 158, p627 * 201, p627 * 165, p627 * 218, p627 * 147, p627 * 226);
      v988.bezierCurveTo(p627 * 135, p627 * 230, p627 * 125, p627 * 222, p627 * 123, p627 * 214);
      v988.closePath();
      f86(v988, p628[5]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 257, p627 * 199);
      v988.bezierCurveTo(p627 * 264, p627 * 199, p627 * 275, p627 * 213, p627 * 261, p627 * 220);
      v988.bezierCurveTo(p627 * 246, p627 * 225, p627 * 235, p627 * 200, p627 * 257, p627 * 199);
      v988.closePath();
      f86(v988, p628[5]);
      v988.translate(p627 * -5, p627 * 55);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 186, p627 * 123);
      v988.bezierCurveTo(p627 * 198, p627 * 115, p627 * 219, p627 * 110, p627 * 219, p627 * 123);
      v988.bezierCurveTo(p627 * 216, p627 * 135, p627 * 171, p627 * 143, p627 * 186, p627 * 123);
      v988.closePath();
      f86(v988, p628[5]);
      v988.translate(p627 * 5, p627 * -55);
      v988.translate(p627 * -5, p627 * 15);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 171, p627 * 241);
      v988.bezierCurveTo(p627 * 189, p627 * 234, p627 * 200, p627 * 248, p627 * 189, p627 * 254);
      v988.bezierCurveTo(p627 * 179, p627 * 260, p627 * 158, p627 * 246, p627 * 171, p627 * 241);
      v988.closePath();
      f86(v988, p628[5]);
    } else if (p630 == 4) {
      v988.translate(-v987.width / 2, -v987.height / 2);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 30, p627 * 167);
      v988.bezierCurveTo(p627 * 47, p627 * 144, p627 * 64, p627 * 140, p627 * 80, p627 * 147);
      v988.bezierCurveTo(p627 * 95, p627 * 154, p627 * 95, p627 * 159, p627 * 100, p627 * 179);
      v988.bezierCurveTo(p627 * 105, p627 * 202, p627 * 95, p627 * 218, p627 * 69, p627 * 218);
      v988.bezierCurveTo(p627 * 48, p627 * 236, p627 * 26, p627 * 223, p627 * 28, p627 * 213);
      v988.bezierCurveTo(p627 * 28, p627 * 205, p627 * 29, p627 * 199, p627 * 32, p627 * 195);
      v988.bezierCurveTo(p627 * 21, p627 * 183, p627 * 27, p627 * 173, p627 * 30, p627 * 167);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 26, p627 * 145);
      v988.bezierCurveTo(p627 * 32, p627 * 138, p627 * 37, p627 * 137, p627 * 40, p627 * 139);
      v988.bezierCurveTo(p627 * 43, p627 * 140, p627 * 41, p627 * 150, p627 * 31, p627 * 159);
      v988.bezierCurveTo(p627 * 23, p627 * 166, p627 * 17, p627 * 158, p627 * 26, p627 * 145);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 13, p627 * 193);
      v988.bezierCurveTo(p627 * 21, p627 * 187, p627 * 30, p627 * 190, p627 * 20, p627 * 202);
      v988.bezierCurveTo(p627 * 13, p627 * 208, p627 * 7, p627 * 202, p627 * 13, p627 * 193);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 121, p627 * 190);
      v988.bezierCurveTo(p627 * 129, p627 * 186, p627 * 137, p627 * 183, p627 * 135, p627 * 163);
      v988.bezierCurveTo(p627 * 131, p627 * 135, p627 * 153, p627 * 127, p627 * 177, p627 * 124);
      v988.bezierCurveTo(p627 * 198, p627 * 120, p627 * 208, p627 * 122, p627 * 226, p627 * 128);
      v988.bezierCurveTo(p627 * 261, p627 * 112, p627 * 271, p627 * 126, p627 * 287, p627 * 147);
      v988.bezierCurveTo(p627 * 310, p627 * 163, p627 * 304, p627 * 183, p627 * 283, p627 * 196);
      v988.bezierCurveTo(p627 * 296, p627 * 249, p627 * 278, p627 * 262, p627 * 253, p627 * 263);
      v988.bezierCurveTo(p627 * 210, p627 * 264, p627 * 188, p627 * 252, p627 * 177, p627 * 234);
      v988.bezierCurveTo(p627 * 133, p627 * 242, p627 * 123, p627 * 241, p627 * 115, p627 * 225);
      v988.bezierCurveTo(p627 * 109, p627 * 206, p627 * 115, p627 * 193, p627 * 121, p627 * 190);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 335, p627 * 196);
      v988.bezierCurveTo(p627 * 312, p627 * 208, p627 * 300, p627 * 185, p627 * 309, p627 * 167);
      v988.bezierCurveTo(p627 * 314, p627 * 141, p627 * 339, p627 * 127, p627 * 359, p627 * 144);
      v988.bezierCurveTo(p627 * 363, p627 * 148, p627 * 364, p627 * 150, p627 * 364, p627 * 150);
      v988.bezierCurveTo(p627 * 392, p627 * 143, p627 * 396, p627 * 183, p627 * 378, p627 * 204);
      v988.bezierCurveTo(p627 * 367, p627 * 215, p627 * 339, p627 * 208, p627 * 335, p627 * 196);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 349, p627 * 212);
      v988.bezierCurveTo(p627 * 339, p627 * 216, p627 * 334, p627 * 208, p627 * 341, p627 * 203);
      v988.bezierCurveTo(p627 * 353, p627 * 198, p627 * 361, p627 * 205, p627 * 349, p627 * 212);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 46, p627 * 165);
      v988.bezierCurveTo(p627 * 55, p627 * 148, p627 * 85, p627 * 157, p627 * 83, p627 * 175);
      v988.bezierCurveTo(p627 * 99, p627 * 185, p627 * 89, p627 * 212, p627 * 66, p627 * 204);
      v988.bezierCurveTo(p627 * 55, p627 * 212, p627 * 43, p627 * 212, p627 * 41, p627 * 202);
      v988.bezierCurveTo(p627 * 39, p627 * 194, p627 * 42, p627 * 187, p627 * 49, p627 * 185);
      v988.bezierCurveTo(p627 * 44, p627 * 175, p627 * 45, p627 * 172, p627 * 46, p627 * 165);
      v988.closePath();
      f86(v988, p628[4]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 219, p627 * 144);
      v988.bezierCurveTo(p627 * 251, p627 * 121, p627 * 277, p627 * 136, p627 * 276, p627 * 159);
      v988.bezierCurveTo(p627 * 276, p627 * 176, p627 * 273, p627 * 191, p627 * 242, p627 * 193);
      v988.bezierCurveTo(p627 * 226, p627 * 228, p627 * 155, p627 * 219, p627 * 150, p627 * 183);
      v988.bezierCurveTo(p627 * 142, p627 * 144, p627 * 174, p627 * 127, p627 * 219, p627 * 144);
      v988.closePath();
      f86(v988, p628[5]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 123, p627 * 214);
      v988.bezierCurveTo(p627 * 119, p627 * 198, p627 * 129, p627 * 189, p627 * 146, p627 * 194);
      v988.bezierCurveTo(p627 * 158, p627 * 201, p627 * 165, p627 * 218, p627 * 147, p627 * 226);
      v988.bezierCurveTo(p627 * 135, p627 * 230, p627 * 125, p627 * 222, p627 * 123, p627 * 214);
      v988.closePath();
      f86(v988, p628[5]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 257, p627 * 199);
      v988.bezierCurveTo(p627 * 264, p627 * 199, p627 * 275, p627 * 213, p627 * 261, p627 * 220);
      v988.bezierCurveTo(p627 * 246, p627 * 225, p627 * 235, p627 * 200, p627 * 257, p627 * 199);
      v988.closePath();
      f86(v988, p628[5]);
      v988.translate(p627 * -5, p627 * 55);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 186, p627 * 123);
      v988.bezierCurveTo(p627 * 198, p627 * 115, p627 * 219, p627 * 110, p627 * 219, p627 * 123);
      v988.bezierCurveTo(p627 * 216, p627 * 135, p627 * 171, p627 * 143, p627 * 186, p627 * 123);
      v988.closePath();
      f86(v988, p628[5]);
      v988.translate(p627 * 5, p627 * -55);
      v988.translate(p627 * -5, p627 * 15);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 171, p627 * 241);
      v988.bezierCurveTo(p627 * 189, p627 * 234, p627 * 200, p627 * 248, p627 * 189, p627 * 254);
      v988.bezierCurveTo(p627 * 179, p627 * 260, p627 * 158, p627 * 246, p627 * 171, p627 * 241);
      v988.closePath();
      f86(v988, p628[5]);
      v988.beginPath();
      v988.lineCap = "round";
      v988.lineJoin = "round";
      v988.moveTo(p627 * 367, p627 * 164);
      v988.bezierCurveTo(p627 * 380, p627 * 160, p627 * 391, p627 * 185, p627 * 371, p627 * 189);
      v988.bezierCurveTo(p627 * 362, p627 * 192, p627 * 354, p627 * 191, p627 * 350, p627 * 185);
      v988.bezierCurveTo(p627 * 326, p627 * 205, p627 * 314, p627 * 182, p627 * 316, p627 * 171);
      v988.bezierCurveTo(p627 * 317, p627 * 150, p627 * 332, p627 * 143, p627 * 347, p627 * 147);
      v988.bezierCurveTo(p627 * 361, p627 * 151, p627 * 366, p627 * 158, p627 * 367, p627 * 164);
      v988.closePath();
      f86(v988, p628[4]);
    }
    return v987;
  }
  function f135(p631, p632, p633) {
    var v997 = document.createElement("canvas");
    var v998 = v997.getContext("2d");
    var v999 = (v1006 = p631 * 450) / 2;
    var v1000 = (v1007 = p631 * 145) / 2;
    var v1001 = p631 * 10;
    var v1002 = p631 * 300;
    var v1003 = p631 * 30;
    var v1004 = v1002 / 2;
    var v1005 = v1003 / 2;
    if (p633) {
      var v1006 = p631 * 145;
      var v1007 = p631 * 450;
      v997.width = v1006;
      v997.height = v1007;
      v998.rotate(Math.PI / 2);
      v998.save();
      v998.globalAlpha = 0.5;
      f89(v998, p631 * 100, p631 * -110, v1002, v1003, v1001);
      f86(v998, p632[0]);
      v998.translate(p631 * 178, p631 * -98);
      f89(v998, -v1004, -v1005 - p631 * 6, p631 * 100, p631 * 100, v1001);
      f86(v998, p632[0]);
      v998.translate(p631 * -50, p631 * 5);
      f89(v998, p631 * 220, p631 * -15, p631 * 90, p631 * 90, v1001);
      f86(v998, p632[0]);
      v998.restore();
      v998.save();
      v998.globalAlpha = 1;
      v998.translate(p631 * 250, p631 * -63);
      f89(v998, -v1004 - p631 * 20, -v1005, v1002, v1003, v1001);
      f86(v998, p632[1], p632[2], 4);
      v998.translate(p631 * -70, p631 * -40);
      f89(v998, -v1004 - p631 * 20, -v1005, p631 * 100, p631 * 100, v1001);
      f86(v998, p632[3], p632[4], 4);
      v998.translate(p631 * -70, p631 * 15);
      f89(v998, p631 * 220, p631 * -22, p631 * 90, p631 * 90, v1001);
      f86(v998, p632[3], p632[4], 4);
      f89(v998, p631 * 230, p631 * -12, p631 * 55, p631 * 55, v1001);
      f86(v998, p632[5]);
      v998.translate(p631 * -70, 0);
      f89(v998, p631 * -15, p631 * -2, p631 * 60, p631 * 60, v1001);
      f86(v998, p632[5]);
      v998.restore();
    } else {
      v997.width = v1006;
      v997.height = v1007;
      v998.save();
      v998.globalAlpha = 0.5;
      v998.translate(v999, v1000 + p631 * 10);
      f89(v998, -v1004, -v1005, v1002, v1003, v1001);
      f86(v998, p632[0]);
      v998.translate(p631 * -65, p631 * -25);
      f89(v998, -v1004, -v1005 - p631 * 6, p631 * 100, p631 * 100, p631 * 15);
      f86(v998, p632[0]);
      v998.translate(p631 * -35, p631 * -5);
      f89(v998, p631 * 220, p631 * -15, p631 * 90, p631 * 90, p631 * 15);
      f86(v998, p632[0]);
      v998.restore();
      v998.save();
      v998.globalAlpha = 1;
      v998.translate(p631 * 240, p631 * 70);
      f89(v998, -v1004, -v1005, v1002, v1003, v1001);
      f86(v998, p632[1], p632[2], 4);
      v998.translate(p631 * -60, p631 * -40);
      f89(v998, -v1004 - p631 * 20, -v1005, p631 * 100, p631 * 100, p631 * 15);
      f86(v998, p632[3], p632[4], 4);
      v998.translate(p631 * -55, p631 * 10);
      f89(v998, p631 * 220, p631 * -22, p631 * 90, p631 * 90, p631 * 15);
      f86(v998, p632[3], p632[4], 4);
      f89(v998, p631 * 240, p631 * -12, p631 * 55, p631 * 55, p631 * 12);
      f86(v998, p632[5]);
      v998.translate(p631 * 45, p631 * 0);
      f89(v998, p631 * -145, p631 * -2, p631 * 60, p631 * 60, p631 * 12);
      f86(v998, p632[5]);
      v998.restore();
    }
    return v997;
  }
  function f136(p634, p635, p636, p637) {
    var v1008 = document.createElement("canvas");
    var v1009 = v1008.getContext("2d");
    v1008.width = p634 * 121;
    v1008.height = p634 * 130;
    v1009.translate(0, p634 * 20);
    if (p636 == 1) {
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 6, p634 * 23);
      v1009.bezierCurveTo(p634 * 6, p634 * 46, p634 * 6, p634 * 46, p634 * 6, p634 * 69);
      v1009.bezierCurveTo(p634 * 21, p634 * 69, p634 * 21, p634 * 69, p634 * 36, p634 * 69);
      v1009.bezierCurveTo(p634 * 45.5, p634 * 78.5, p634 * 45.5, p634 * 78.5, p634 * 55, p634 * 88);
      v1009.bezierCurveTo(p634 * 55.5, p634 * 45.5, p634 * 55.5, p634 * 45.5, p634 * 56, p634 * 3);
      v1009.bezierCurveTo(p634 * 47, p634 * 14, p634 * 47, p634 * 14, p634 * 38, p634 * 25);
      v1009.bezierCurveTo(p634 * 23, p634 * 25, p634 * 23, p634 * 25, p634 * 6, p634 * 23);
      v1009.closePath();
      f86(v1009, vVVVVUndefined197, p635[3], p634 * 13);
    }
    v1009.beginPath();
    v1009.lineCap = "round";
    v1009.lineJoin = "round";
    v1009.moveTo(p634 * 6, p634 * 23);
    v1009.bezierCurveTo(p634 * 6, p634 * 46, p634 * 6, p634 * 46, p634 * 6, p634 * 69);
    v1009.bezierCurveTo(p634 * 21, p634 * 69, p634 * 21, p634 * 69, p634 * 36, p634 * 69);
    v1009.bezierCurveTo(p634 * 45.5, p634 * 78.5, p634 * 45.5, p634 * 78.5, p634 * 55, p634 * 88);
    v1009.bezierCurveTo(p634 * 55.5, p634 * 45.5, p634 * 55.5, p634 * 45.5, p634 * 56, p634 * 3);
    v1009.bezierCurveTo(p634 * 47, p634 * 14, p634 * 47, p634 * 14, p634 * 38, p634 * 25);
    v1009.bezierCurveTo(p634 * 23, p634 * 25, p634 * 23, p634 * 25, p634 * 6, p634 * 23);
    v1009.closePath();
    f86(v1009, p635[1], p635[2], p634 * 4);
    if (p637 == 1) {
      v1009.translate(0, p634 * 5);
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 67, p634 * 30);
      v1009.bezierCurveTo(p634 * 73, p634 * 47, p634 * 69, p634 * 45, p634 * 67, p634 * 58);
      f86(v1009, undefined, p635[0], p634 * 10);
      v1009.translate(3, p634 * 0);
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 70, p634 * 17);
      v1009.bezierCurveTo(p634 * 83, p634 * 45, p634 * 76, p634 * 55, p634 * 70, p634 * 69);
      f86(v1009, vVVVVUndefined197, p635[0], p634 * 10);
      v1009.translate(3, p634 * 0);
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 76, p634 * 8);
      v1009.bezierCurveTo(p634 * 88, p634 * 31, p634 * 89, p634 * 55, p634 * 76, p634 * 79);
      f86(v1009, vVVVVUndefined1972, p635[0], p634 * 10);
      if (p636 == 1) {
        v1009.translate(p634 * -6, p634 * -5);
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 67, p634 * 30);
        v1009.bezierCurveTo(p634 * 73, p634 * 47, p634 * 69, p634 * 45, p634 * 67, p634 * 58);
        f86(v1009, vVVUndefined27, p635[3], p634 * 18);
        v1009.translate(3, p634 * 0);
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 70, p634 * 17);
        v1009.bezierCurveTo(p634 * 83, p634 * 45, p634 * 76, p634 * 55, p634 * 70, p634 * 69);
        f86(v1009, vVVVVUndefined197, p635[3], p634 * 18);
        v1009.translate(3, p634 * 0);
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 76, p634 * 8);
        v1009.bezierCurveTo(p634 * 88, p634 * 31, p634 * 89, p634 * 55, p634 * 76, p634 * 79);
        f86(v1009, undefined, p635[3], p634 * 18);
        v1009.translate(-6, p634 * 0);
      } else {
        v1009.translate(p634 * -6, p634 * -5);
      }
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 67, p634 * 30);
      v1009.bezierCurveTo(p634 * 73, p634 * 47, p634 * 69, p634 * 45, p634 * 67, p634 * 58);
      f86(v1009, undefined, p635[2], p634 * 10);
      v1009.translate(3, p634 * 0);
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 70, p634 * 17);
      v1009.bezierCurveTo(p634 * 83, p634 * 45, p634 * 76, p634 * 55, p634 * 70, p634 * 69);
      f86(v1009, vVVVUndefined1974, p635[2], p634 * 10);
      v1009.translate(3, p634 * 0);
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 76, p634 * 8);
      v1009.bezierCurveTo(p634 * 88, p634 * 31, p634 * 89, p634 * 55, p634 * 76, p634 * 79);
      f86(v1009, vVVVUndefined27, p635[2], p634 * 10);
    } else {
      if (p636 == 1) {
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 108, p634 * 27);
        v1009.bezierCurveTo(p634 * 94, p634 * 45.5, p634 * 94, p634 * 45.5, p634 * 80, p634 * 64);
        v1009.closePath();
        f86(v1009, undefined, p635[3], p634 * 18);
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 79, p634 * 30);
        v1009.bezierCurveTo(p634 * 93, p634 * 47, p634 * 93, p634 * 47, p634 * 107, p634 * 64);
        v1009.closePath();
        f86(v1009, undefined, p635[3], p634 * 18);
      } else {
        v1009.translate(0, p634 * -5);
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 108, p634 * 27);
        v1009.bezierCurveTo(p634 * 94, p634 * 45.5, p634 * 94, p634 * 45.5, p634 * 80, p634 * 64);
        v1009.closePath();
        f86(v1009, undefined, p635[0], p634 * 7);
        v1009.beginPath();
        v1009.lineCap = "round";
        v1009.lineJoin = "round";
        v1009.moveTo(p634 * 79, p634 * 30);
        v1009.bezierCurveTo(p634 * 93, p634 * 47, p634 * 93, p634 * 47, p634 * 107, p634 * 64);
        v1009.closePath();
        f86(v1009, undefined, p635[0], p634 * 7);
        v1009.translate(0, p634 * 5);
      }
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 108, p634 * 27);
      v1009.bezierCurveTo(p634 * 94, p634 * 45.5, p634 * 94, p634 * 45.5, p634 * 80, p634 * 64);
      v1009.closePath();
      f86(v1009, undefined, p635[2], p634 * 7);
      v1009.beginPath();
      v1009.lineCap = "round";
      v1009.lineJoin = "round";
      v1009.moveTo(p634 * 79, p634 * 30);
      v1009.bezierCurveTo(p634 * 93, p634 * 47, p634 * 93, p634 * 47, p634 * 107, p634 * 64);
      v1009.closePath();
      f86(v1009, vVVVUndefined27, p635[2], p634 * 7);
    }
    return v1008;
  }
  const v1010 = 2;
  const v1011 = 10;
  function f137(p638, p639, p640) {
    var v1012 = document.createElement("canvas");
    var v1013 = v1012.getContext("2d");
    var v1014 = p638 * 105;
    var v1015 = p638 * 125;
    var v1016 = p638 * 4;
    var v1017 = p638 * 10;
    var v1018 = p638 * 5;
    var v1019 = p638 * 10;
    var v1020 = p638 * 110;
    var v1021 = v1019 / 2;
    var v1022 = v1020 / 2;
    v1012.width = v1014;
    v1012.height = v1015;
    v1013.save();
    v1013.globalAlpha = p639 ? 0.5 : 1;
    v1013.translate(v1014 / 2 + p638 * 8, v1015 / 2 + v1018);
    f89(v1013, -v1021, -v1022, v1019, v1020, v1017);
    f86(v1013, p639 ? p640[0] : p640[1]);
    v1013.translate(p638 * -130 + v1018, p638 * -128 + v1018);
    v1013.beginPath();
    v1013.bezierCurveTo(p638 * 159, p638 * 93, p638 * 156, p638 * 99, p638 * 154, p638 * 102);
    v1013.bezierCurveTo(p638 * 128, p638 * 92, p638 * 90, p638 * 93, p638 * 72, p638 * 96);
    v1013.bezierCurveTo(p638 * 68, p638 * 84, p638 * 143, p638 * 73, p638 * 162, p638 * 86);
    v1013.closePath();
    f86(v1013, p640[2]);
    v1013.restore();
    v1013.translate(v1014 / 2 + 8, v1015 / 2);
    v1013.globalAlpha = 1;
    f89(v1013, -v1021, -v1022, v1019, v1020, v1017);
    f86(v1013, p640[3], p640[4], v1016);
    v1013.translate(p638 * -130, p638 * -125);
    v1013.beginPath();
    v1013.bezierCurveTo(p638 * 159, p638 * 93, p638 * 156, p638 * 99, p638 * 154, p638 * 102);
    v1013.bezierCurveTo(p638 * 128, p638 * 92, p638 * 90, p638 * 93, p638 * 72, p638 * 96);
    v1013.bezierCurveTo(p638 * 68, p638 * 84, p638 * 143, p638 * 73, p638 * 162, p638 * 86);
    v1013.closePath();
    f86(v1013, p640[5], p640[6], v1016);
    return v1012;
  }
  function f138(p641, p642) {
    var v1023 = document.createElement("canvas");
    var v1024 = v1023.getContext("2d");
    var v1025 = Math.max(p642.width, p641.width);
    var v1026 = Math.max(p642.height, p641.height);
    v1023.width = v1025;
    v1023.height = v1026;
    v1024.drawImage(p641, (v1025 - p641.width) / 2, (v1026 - p641.height) / 2);
    v1024.drawImage(p642, (v1025 - p642.width) / 2, (v1026 - p642.height) / 2);
    return v1023;
  }
  const v1027 = 16;
  function f139(p643, p644, p645) {
    var v1028 = document.createElement("canvas");
    var v1029 = v1028.getContext("2d");
    v1028.width = p643 * 424;
    v1028.height = p643 * 788;
    v1029.translate(p643 * 25, p643 * 25);
    v1029.globalAlpha = p644 ? 0.5 : 1;
    v1029.save();
    v1029.translate(p643 * 193.5, p643 * 602.5);
    v1029.rotate(-0.12);
    f89(v1029, p643 * -26.5, p643 * -97.5, p643 * 53, p643 * 195, p643 * 25);
    v1029.restore();
    f86(v1029, p645[0]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 137, p643 * 519);
    v1029.bezierCurveTo(p643 * 182, p643 * 513, p643 * 182, p643 * 513, p643 * 227, p643 * 507);
    v1029.bezierCurveTo(p643 * 214, p643 * 417, p643 * 189, p643 * 304, p643 * 221, p643 * 180);
    v1029.bezierCurveTo(p643 * 191, p643 * 126, p643 * 192, p643 * 105, p643 * 198, p643 * 64);
    v1029.bezierCurveTo(p643 * 123, p643 * 102, p643 * 99, p643 * 285, p643 * 137, p643 * 517);
    v1029.closePath();
    f86(v1029, p645[0]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 175, p643 * 119);
    v1029.bezierCurveTo(p643 * 176, p643 * 142, p643 * 184, p643 * 165, p643 * 197, p643 * 183);
    v1029.bezierCurveTo(p643 * 167, p643 * 325, p643 * 191, p643 * 405, p643 * 202, p643 * 502);
    v1029.bezierCurveTo(p643 * 180, p643 * 503, p643 * 180, p643 * 503, p643 * 158, p643 * 504);
    v1029.bezierCurveTo(p643 * 135, p643 * 396, p643 * 134, p643 * 185, p643 * 175, p643 * 119);
    v1029.closePath();
    f86(v1029, p645[0]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 110, p643 * 518);
    v1029.bezierCurveTo(p643 * 111.5, p643 * 533, p643 * 111.5, p643 * 533, p643 * 113, p643 * 548);
    v1029.bezierCurveTo(p643 * 162.5, p643 * 544, p643 * 162.5, p643 * 544, p643 * 212, p643 * 540);
    v1029.bezierCurveTo(p643 * 312, p643 * 535, p643 * 281, p643 * 665, p643 * 225, p643 * 665);
    v1029.bezierCurveTo(p643 * 227, p643 * 686.5, p643 * 227, p643 * 686.5, p643 * 229, p643 * 708);
    v1029.bezierCurveTo(p643 * 343, p643 * 684, p643 * 354, p643 * 496, p643 * 222, p643 * 498);
    v1029.bezierCurveTo(p643 * 165.5, p643 * 503, p643 * 165.5, p643 * 503, p643 * 109, p643 * 508);
    v1029.closePath();
    f86(v1029, p645[0]);
    f87(v1029, p643 * 204, p643 * 693, p643 * 36.013886210738214);
    f86(v1029, p645[0]);
    f87(v1029, p643 * 105, p643 * 518, p643 * 30);
    f86(v1029, p645[0]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 171, p643 * 535);
    v1029.bezierCurveTo(p643 * 139.5, p643 * 537.5, p643 * 139.5, p643 * 537.5, p643 * 108, p643 * 540);
    v1029.bezierCurveTo(p643 * 110, p643 * 527.5, p643 * 110, p643 * 527.5, p643 * 112, p643 * 515);
    v1029.bezierCurveTo(p643 * 148, p643 * 513, p643 * 148, p643 * 513, p643 * 184, p643 * 511);
    v1029.closePath();
    f86(v1029, p645[0]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 244, p643 * 669);
    v1029.bezierCurveTo(p643 * 248.5, p643 * 680, p643 * 248.5, p643 * 680, p643 * 253, p643 * 691);
    v1029.bezierCurveTo(p643 * 239.5, p643 * 697, p643 * 239.5, p643 * 697, p643 * 226, p643 * 703);
    v1029.bezierCurveTo(p643 * 223, p643 * 691.5, p643 * 223, p643 * 691.5, p643 * 220, p643 * 680);
    v1029.closePath();
    f86(v1029, p645[0]);
    v1029.translate(p643 * -25, p643 * -25);
    v1029.globalAlpha = 1;
    v1029.save();
    v1029.translate(p643 * 193.5, p643 * 602.5);
    v1029.rotate(-0.12);
    f89(v1029, p643 * -26.5, p643 * -97.5, p643 * 53, p643 * 195, p643 * 25);
    v1029.restore();
    f86(v1029, p645[1], p645[2], p643 * 16);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 137, p643 * 519);
    v1029.bezierCurveTo(p643 * 182, p643 * 513, p643 * 182, p643 * 513, p643 * 227, p643 * 507);
    v1029.bezierCurveTo(p643 * 214, p643 * 417, p643 * 189, p643 * 304, p643 * 221, p643 * 180);
    v1029.bezierCurveTo(p643 * 191, p643 * 126, p643 * 192, p643 * 105, p643 * 198, p643 * 64);
    v1029.bezierCurveTo(p643 * 123, p643 * 102, p643 * 99, p643 * 285, p643 * 137, p643 * 517);
    v1029.closePath();
    f86(v1029, p645[3], p645[4], p643 * 16);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 175, p643 * 119);
    v1029.bezierCurveTo(p643 * 176, p643 * 142, p643 * 184, p643 * 165, p643 * 197, p643 * 183);
    v1029.bezierCurveTo(p643 * 167, p643 * 325, p643 * 191, p643 * 405, p643 * 202, p643 * 502);
    v1029.bezierCurveTo(p643 * 180, p643 * 503, p643 * 180, p643 * 503, p643 * 158, p643 * 504);
    v1029.bezierCurveTo(p643 * 135, p643 * 396, p643 * 134, p643 * 185, p643 * 175, p643 * 119);
    v1029.closePath();
    f86(v1029, p645[5]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 110, p643 * 518);
    v1029.bezierCurveTo(p643 * 111.5, p643 * 533, p643 * 111.5, p643 * 533, p643 * 113, p643 * 548);
    v1029.bezierCurveTo(p643 * 162.5, p643 * 544, p643 * 162.5, p643 * 544, p643 * 212, p643 * 540);
    v1029.bezierCurveTo(p643 * 312, p643 * 535, p643 * 281, p643 * 665, p643 * 225, p643 * 665);
    v1029.bezierCurveTo(p643 * 227, p643 * 686.5, p643 * 227, p643 * 686.5, p643 * 229, p643 * 708);
    v1029.bezierCurveTo(p643 * 343, p643 * 684, p643 * 354, p643 * 496, p643 * 222, p643 * 498);
    v1029.bezierCurveTo(p643 * 165.5, p643 * 503, p643 * 165.5, p643 * 503, p643 * 109, p643 * 508);
    v1029.closePath();
    f86(v1029, p645[6], p645[4], p643 * 16);
    f87(v1029, p643 * 204, p643 * 693, p643 * 36.013886210738214);
    f86(v1029, p645[6], p645[4], p643 * 16);
    f87(v1029, p643 * 105, p643 * 518, p643 * 30);
    f86(v1029, p645[6], p645[4], p643 * 16);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 171, p643 * 535);
    v1029.bezierCurveTo(p643 * 139.5, p643 * 537.5, p643 * 139.5, p643 * 537.5, p643 * 108, p643 * 540);
    v1029.bezierCurveTo(p643 * 110, p643 * 527.5, p643 * 110, p643 * 527.5, p643 * 112, p643 * 515);
    v1029.bezierCurveTo(p643 * 148, p643 * 513, p643 * 148, p643 * 513, p643 * 184, p643 * 511);
    v1029.closePath();
    f86(v1029, p645[6]);
    v1029.beginPath();
    v1029.lineCap = "round";
    v1029.lineJoin = "round";
    v1029.moveTo(p643 * 244, p643 * 669);
    v1029.bezierCurveTo(p643 * 248.5, p643 * 680, p643 * 248.5, p643 * 680, p643 * 253, p643 * 691);
    v1029.bezierCurveTo(p643 * 239.5, p643 * 697, p643 * 239.5, p643 * 697, p643 * 226, p643 * 703);
    v1029.bezierCurveTo(p643 * 223, p643 * 691.5, p643 * 223, p643 * 691.5, p643 * 220, p643 * 680);
    v1029.closePath();
    f86(v1029, p645[6]);
    f87(v1029, p643 * 204, p643 * 693, p643 * 17.029386365926403);
    f86(v1029, p645[7]);
    f87(v1029, p643 * 106, p643 * 518, p643 * 12);
    f86(v1029, p645[7]);
    return v1028;
  }
  function f140(p646, p647, p648) {
    var v1030 = document.createElement("canvas");
    var v1031 = v1030.getContext("2d");
    v1030.width = p646 * 100;
    v1030.height = p646 * 250;
    v1031.translate(p646 * -135, p646 * -75);
    v1031.globalAlpha = p647 ? 0.8 : 1;
    v1031.beginPath();
    v1031.lineCap = "round";
    v1031.lineJoin = "round";
    v1031.moveTo(p646 * 178.5, p646 * 238.03125);
    v1031.bezierCurveTo(p646 * 177, p646 * 175.03125, p646 * 177, p646 * 175.03125, p646 * 175.5, p646 * 112.03125);
    v1031.bezierCurveTo(p646 * 184.5, p646 * 100.53125, p646 * 184.5, p646 * 100.53125, p646 * 193.5, p646 * 89.03125);
    v1031.bezierCurveTo(p646 * 202, p646 * 100.03125, p646 * 202, p646 * 100.03125, p646 * 210.5, p646 * 111.03125);
    v1031.bezierCurveTo(p646 * 209.5, p646 * 174.03125, p646 * 209.5, p646 * 174.03125, p646 * 208.5, p646 * 237.03125);
    v1031.closePath();
    f86(v1031, p648[0]);
    v1031.beginPath();
    v1031.lineCap = "round";
    v1031.lineJoin = "round";
    v1031.moveTo(p646 * 155.5, p646 * 239.03125);
    v1031.bezierCurveTo(p646 * 194, p646 * 238.53125, p646 * 194, p646 * 238.53125, p646 * 232.5, p646 * 238.03125);
    v1031.bezierCurveTo(p646 * 232.5, p646 * 243.03125, p646 * 232.5, p646 * 243.03125, p646 * 232.5, p646 * 248.03125);
    v1031.bezierCurveTo(p646 * 194, p646 * 248.53125, p646 * 194, p646 * 248.53125, p646 * 155.5, p646 * 249.03125);
    v1031.closePath();
    f86(v1031, p648[0]);
    f87(v1031, p646 * 160.5, p646 * 243.03125, p646 * 7);
    f86(v1031, p648[0]);
    f87(v1031, p646 * 227.5, p646 * 242.03125, p646 * 7);
    f86(v1031, p648[0]);
    v1031.beginPath();
    v1031.lineCap = "round";
    v1031.lineJoin = "round";
    v1031.moveTo(p646 * 185.5, p646 * 253.03125);
    v1031.bezierCurveTo(p646 * 193.5, p646 * 253.03125, p646 * 193.5, p646 * 253.03125, p646 * 201.5, p646 * 253.03125);
    v1031.bezierCurveTo(p646 * 201.5, p646 * 276.03125, p646 * 201.5, p646 * 276.03125, p646 * 201.5, p646 * 299.03125);
    v1031.bezierCurveTo(p646 * 194.5, p646 * 299.03125, p646 * 194.5, p646 * 299.03125, p646 * 187.5, p646 * 299.03125);
    v1031.closePath();
    f86(v1031, p648[0], p648[0], p646 * 5);
    f87(v1031, p646 * 194, p646 * 298, p646 * 9);
    f86(v1031, p648[0], p648[0], p646 * 5);
    v1031.globalAlpha = 1;
    v1031.translate(p646 * -10, p646 * 10);
    v1031.beginPath();
    v1031.lineCap = "round";
    v1031.lineJoin = "round";
    v1031.moveTo(p646 * 178.5, p646 * 238.03125);
    v1031.bezierCurveTo(p646 * 177, p646 * 175.03125, p646 * 177, p646 * 175.03125, p646 * 175.5, p646 * 112.03125);
    v1031.bezierCurveTo(p646 * 184.5, p646 * 100.53125, p646 * 184.5, p646 * 100.53125, p646 * 193.5, p646 * 89.03125);
    v1031.bezierCurveTo(p646 * 202, p646 * 100.03125, p646 * 202, p646 * 100.03125, p646 * 210.5, p646 * 111.03125);
    v1031.bezierCurveTo(p646 * 209.5, p646 * 174.03125, p646 * 209.5, p646 * 174.03125, p646 * 208.5, p646 * 237.03125);
    v1031.closePath();
    f86(v1031, p648[3], p648[4], p646 * 5);
    v1031.beginPath();
    v1031.lineCap = "round";
    v1031.lineJoin = "round";
    v1031.moveTo(p646 * 155.5, p646 * 239.03125);
    v1031.bezierCurveTo(p646 * 194, p646 * 238.53125, p646 * 194, p646 * 238.53125, p646 * 232.5, p646 * 238.03125);
    v1031.bezierCurveTo(p646 * 232.5, p646 * 243.03125, p646 * 232.5, p646 * 243.03125, p646 * 232.5, p646 * 248.03125);
    v1031.bezierCurveTo(p646 * 194, p646 * 248.53125, p646 * 194, p646 * 248.53125, p646 * 155.5, p646 * 249.03125);
    v1031.closePath();
    f86(v1031, p648[1], p648[2], p646 * 5);
    f87(v1031, p646 * 160.5, p646 * 243.03125, p646 * 7);
    f86(v1031, p648[1], p648[2], p646 * 5);
    f87(v1031, p646 * 227.5, p646 * 242.03125, p646 * 7);
    f86(v1031, p648[1], p648[2], p646 * 5);
    v1031.beginPath();
    v1031.lineCap = "round";
    v1031.lineJoin = "round";
    v1031.moveTo(p646 * 185.5, p646 * 253.03125);
    v1031.bezierCurveTo(p646 * 193.5, p646 * 253.03125, p646 * 193.5, p646 * 253.03125, p646 * 201.5, p646 * 253.03125);
    v1031.bezierCurveTo(p646 * 201.5, p646 * 276.03125, p646 * 201.5, p646 * 276.03125, p646 * 201.5, p646 * 299.03125);
    v1031.bezierCurveTo(p646 * 194.5, p646 * 299.03125, p646 * 194.5, p646 * 299.03125, p646 * 187.5, p646 * 299.03125);
    v1031.closePath();
    f86(v1031, p648[1], p648[2], p646 * 7);
    f87(v1031, p646 * 194, p646 * 298, p646 * 9);
    f86(v1031, p648[1], p648[2], p646 * 7);
    return v1030;
  }
  function f141(p649, p650, p651) {
    var v1032 = document.createElement("canvas");
    var v1033 = v1032.getContext("2d");
    v1032.width = p649 * 170;
    v1032.height = p649 * 469;
    v1033.globalAlpha = p650 ? 0.5 : 1;
    v1033.translate(p649 * 20, p649 * 20);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 88, p649 * 30);
    v1033.bezierCurveTo(p649 * 96, p649 * 49.5, p649 * 96, p649 * 49.5, p649 * 104, p649 * 69);
    v1033.bezierCurveTo(p649 * 105.5, p649 * 41.5, p649 * 105.5, p649 * 41.5, p649 * 107, p649 * 14);
    v1033.bezierCurveTo(p649 * 114, p649 * 9.5, p649 * 114, p649 * 9.5, p649 * 121, p649 * 5);
    v1033.bezierCurveTo(p649 * 135.5, p649 * 27.5, p649 * 135.5, p649 * 27.5, p649 * 150, p649 * 50);
    v1033.bezierCurveTo(p649 * 110.5, p649 * 286, p649 * 110.5, p649 * 286, p649 * 103, p649 * 331);
    v1033.bezierCurveTo(p649 * 69.5, p649 * 325, p649 * 69.5, p649 * 325, p649 * 36, p649 * 319);
    v1033.bezierCurveTo(p649 * 56.5, p649 * 180, p649 * 56.5, p649 * 180, p649 * 77, p649 * 41);
    v1033.closePath();
    f86(v1033, p651[0]);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 118, p649 * 31);
    v1033.bezierCurveTo(p649 * 125, p649 * 43, p649 * 125, p649 * 43, p649 * 132, p649 * 55);
    v1033.bezierCurveTo(p649 * 109.5, p649 * 185.5, p649 * 109.5, p649 * 185.5, p649 * 87, p649 * 316);
    v1033.bezierCurveTo(p649 * 72, p649 * 313.5, p649 * 72, p649 * 313.5, p649 * 57, p649 * 311);
    v1033.bezierCurveTo(p649 * 76.5, p649 * 181, p649 * 76.5, p649 * 181, p649 * 96, p649 * 51);
    v1033.closePath();
    f86(v1033, p651[0]);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 56, p649 * 328);
    v1033.bezierCurveTo(p649 * 47, p649 * 385.5, p649 * 47, p649 * 385.5, p649 * 38, p649 * 443);
    v1033.bezierCurveTo(p649 * 52, p649 * 446, p649 * 52, p649 * 446, p649 * 66, p649 * 449);
    v1033.bezierCurveTo(p649 * 76.5, p649 * 388.5, p649 * 76.5, p649 * 388.5, p649 * 87, p649 * 328);
    v1033.closePath();
    f86(v1033, p651[0]);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 74, p649 * 302);
    v1033.bezierCurveTo(p649 * 104, p649 * 316.5, p649 * 104, p649 * 316.5, p649 * 134, p649 * 331);
    v1033.bezierCurveTo(p649 * 133, p649 * 341, p649 * 133, p649 * 341, p649 * 132, p649 * 351);
    v1033.bezierCurveTo(p649 * 69.5, p649 * 342, p649 * 69.5, p649 * 342, p649 * 7, p649 * 333);
    v1033.bezierCurveTo(p649 * 8, p649 * 323, p649 * 8, p649 * 323, p649 * 9, p649 * 313);
    v1033.closePath();
    f86(v1033, p651[0]);
    v1033.save();
    v1033.translate(p649 * 51.5, p649 * 440.5);
    v1033.rotate(0.2);
    f89(v1033, p649 * -20.5, p649 * -18.5, p649 * 41, p649 * 37, p649 * 10);
    v1033.restore();
    f86(v1033, p651[0]);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 73, p649 * 316);
    v1033.bezierCurveTo(p649 * 90, p649 * 324.5, p649 * 90, p649 * 324.5, p649 * 107, p649 * 333);
    v1033.bezierCurveTo(p649 * 70, p649 * 327.5, p649 * 70, p649 * 327.5, p649 * 33, p649 * 322);
    v1033.closePath();
    f86(v1033, p651[0]);
    v1033.globalAlpha = 1;
    v1033.translate(p649 * -20, p649 * -20);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 88, p649 * 30);
    v1033.bezierCurveTo(p649 * 96, p649 * 49.5, p649 * 96, p649 * 49.5, p649 * 104, p649 * 69);
    v1033.bezierCurveTo(p649 * 105.5, p649 * 41.5, p649 * 105.5, p649 * 41.5, p649 * 107, p649 * 14);
    v1033.bezierCurveTo(p649 * 114, p649 * 9.5, p649 * 114, p649 * 9.5, p649 * 121, p649 * 5);
    v1033.bezierCurveTo(p649 * 135.5, p649 * 27.5, p649 * 135.5, p649 * 27.5, p649 * 150, p649 * 50);
    v1033.bezierCurveTo(p649 * 110.5, p649 * 286, p649 * 110.5, p649 * 286, p649 * 103, p649 * 331);
    v1033.bezierCurveTo(p649 * 69.5, p649 * 325, p649 * 69.5, p649 * 325, p649 * 36, p649 * 319);
    v1033.bezierCurveTo(p649 * 56.5, p649 * 180, p649 * 56.5, p649 * 180, p649 * 77, p649 * 41);
    v1033.closePath();
    f86(v1033, p651[1], p651[2], p649 * 7);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 118, p649 * 31);
    v1033.bezierCurveTo(p649 * 125, p649 * 43, p649 * 125, p649 * 43, p649 * 132, p649 * 55);
    v1033.bezierCurveTo(p649 * 109.5, p649 * 185.5, p649 * 109.5, p649 * 185.5, p649 * 87, p649 * 316);
    v1033.bezierCurveTo(p649 * 72, p649 * 313.5, p649 * 72, p649 * 313.5, p649 * 57, p649 * 311);
    v1033.bezierCurveTo(p649 * 76.5, p649 * 181, p649 * 76.5, p649 * 181, p649 * 96, p649 * 51);
    v1033.closePath();
    f86(v1033, p651[3]);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 88, p649 * 30);
    v1033.bezierCurveTo(p649 * 96, p649 * 49.5, p649 * 96, p649 * 49.5, p649 * 104, p649 * 69);
    v1033.bezierCurveTo(p649 * 105.5, p649 * 41.5, p649 * 105.5, p649 * 41.5, p649 * 107, p649 * 14);
    v1033.bezierCurveTo(p649 * 114, p649 * 9.5, p649 * 114, p649 * 9.5, p649 * 121, p649 * 5);
    v1033.bezierCurveTo(p649 * 135.5, p649 * 27.5, p649 * 135.5, p649 * 27.5, p649 * 150, p649 * 50);
    v1033.bezierCurveTo(p649 * 110.5, p649 * 286, p649 * 110.5, p649 * 286, p649 * 103, p649 * 331);
    v1033.bezierCurveTo(p649 * 69.5, p649 * 325, p649 * 69.5, p649 * 325, p649 * 36, p649 * 319);
    v1033.bezierCurveTo(p649 * 56.5, p649 * 180, p649 * 56.5, p649 * 180, p649 * 77, p649 * 41);
    v1033.closePath();
    f86(v1033, vVVVVUndefined197, p651[2], p649 * 7);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 56, p649 * 328);
    v1033.bezierCurveTo(p649 * 47, p649 * 385.5, p649 * 47, p649 * 385.5, p649 * 38, p649 * 443);
    v1033.bezierCurveTo(p649 * 52, p649 * 446, p649 * 52, p649 * 446, p649 * 66, p649 * 449);
    v1033.bezierCurveTo(p649 * 76.5, p649 * 388.5, p649 * 76.5, p649 * 388.5, p649 * 87, p649 * 328);
    v1033.closePath();
    f86(v1033, p651[4], p651[5], p649 * 7);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 74, p649 * 302);
    v1033.bezierCurveTo(p649 * 104, p649 * 316.5, p649 * 104, p649 * 316.5, p649 * 134, p649 * 331);
    v1033.bezierCurveTo(p649 * 133, p649 * 341, p649 * 133, p649 * 341, p649 * 132, p649 * 351);
    v1033.bezierCurveTo(p649 * 69.5, p649 * 342, p649 * 69.5, p649 * 342, p649 * 7, p649 * 333);
    v1033.bezierCurveTo(p649 * 8, p649 * 323, p649 * 8, p649 * 323, p649 * 9, p649 * 313);
    v1033.closePath();
    f86(v1033, p651[4], p651[5], p649 * 7);
    v1033.save();
    v1033.translate(p649 * 51.5, p649 * 440.5);
    v1033.rotate(0.2);
    f89(v1033, p649 * -20.5, p649 * -18.5, p649 * 41, p649 * 37, p649 * 10);
    v1033.restore();
    f86(v1033, p651[4], p651[5], p649 * 7);
    v1033.beginPath();
    v1033.lineCap = "round";
    v1033.lineJoin = "round";
    v1033.moveTo(p649 * 73, p649 * 316);
    v1033.bezierCurveTo(p649 * 90, p649 * 324.5, p649 * 90, p649 * 324.5, p649 * 107, p649 * 333);
    v1033.bezierCurveTo(p649 * 70, p649 * 327.5, p649 * 70, p649 * 327.5, p649 * 33, p649 * 322);
    v1033.closePath();
    f86(v1033, p651[6]);
    return v1032;
  }
  function f142(p652, p653) {
    var v1034 = document.createElement("canvas");
    var v1035 = v1034.getContext("2d");
    v1034.width = p652 * 283;
    v1034.height = p652 * 224;
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 100, p652 * 33);
    v1035.bezierCurveTo(p652 * 85, p652 * 62, p652 * 102, p652 * 66, p652 * 110, p652 * 83);
    f86(v1035, undefined, p653[0], p652 * 40);
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 181, p652 * 32);
    v1035.bezierCurveTo(p652 * 196, p652 * 62, p652 * 181, p652 * 68, p652 * 178, p652 * 69);
    f86(v1035, vVVUndefined273, p653[0], p652 * 40);
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 225, p652 * 52);
    v1035.bezierCurveTo(p652 * 228, p652 * 78, p652 * 207, p652 * 77, p652 * 192, p652 * 88);
    f86(v1035, vVVUndefined272, p653[0], p652 * 40);
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 34, p652 * 134);
    v1035.bezierCurveTo(p652 * 46, p652 * 111, p652 * 57, p652 * 111, p652 * 79, p652 * 109);
    f86(v1035, undefined, p653[0], p652 * 40);
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 249, p652 * 135);
    v1035.bezierCurveTo(p652 * 233, p652 * 107, p652 * 212, p652 * 112, p652 * 202, p652 * 115);
    f86(v1035, vUndefined, p653[0], p652 * 40);
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 56, p652 * 50);
    v1035.bezierCurveTo(p652 * 56, p652 * 82, p652 * 73, p652 * 82, p652 * 93, p652 * 89);
    f86(v1035, vVVUndefined27, p653[0], p652 * 40);
    v1035.beginPath();
    v1035.lineCap = "round";
    v1035.lineJoin = "round";
    v1035.moveTo(p652 * 93, p652 * 55);
    v1035.bezierCurveTo(p652 * 124, p652 * 29, p652 * 179, p652 * 44, p652 * 188, p652 * 52);
    v1035.bezierCurveTo(p652 * 207, p652 * 64, p652 * 226, p652 * 94, p652 * 231, p652 * 118);
    v1035.bezierCurveTo(p652 * 236, p652 * 145, p652 * 222, p652 * 184, p652 * 193, p652 * 192);
    v1035.bezierCurveTo(p652 * 147, p652 * 201, p652 * 116, p652 * 200, p652 * 93, p652 * 193);
    v1035.bezierCurveTo(p652 * 61, p652 * 180, p652 * 48, p652 * 147, p652 * 50, p652 * 123);
    v1035.bezierCurveTo(p652 * 50, p652 * 93, p652 * 76, p652 * 66, p652 * 92, p652 * 56);
    v1035.closePath();
    f86(v1035, p653[0]);
    return v1034;
  }
  function f143(p654, p655, p656) {
    var v1036 = document.createElement("canvas");
    var v1037 = v1036.getContext("2d");
    v1036.width = p654 * 131;
    v1036.height = p654 * 121;
    v1037.translate(0, p654 * 20);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p654 * 110, p654 * 59);
    v1037.bezierCurveTo(p654 * 93, p654 * 61.5, p654 * 93, p654 * 61.5, p654 * 76, p654 * 64);
    v1037.bezierCurveTo(p654 * 84.5, p654 * 78.5, p654 * 84.5, p654 * 78.5, p654 * 93, p654 * 93);
    v1037.bezierCurveTo(p654 * 70, p654 * 111, p654 * 43, p654 * 103, p654 * 30, p654 * 82);
    v1037.bezierCurveTo(p654 * 17, p654 * 61, p654 * 25, p654 * 30, p654 * 51, p654 * 21);
    v1037.bezierCurveTo(p654 * 66, p654 * 15, p654 * 83, p654 * 18, p654 * 96, p654 * 29);
    v1037.bezierCurveTo(p654 * 104, p654 * 35, p654 * 109, p654 * 47, p654 * 110, p654 * 58);
    v1037.closePath();
    f86(v1037, p656[0]);
    v1037.globalAlpha = 1;
    v1037.translate(0, p654 * -20);
    v1037.beginPath();
    v1037.lineCap = "round";
    v1037.lineJoin = "round";
    v1037.moveTo(p654 * 110, p654 * 59);
    v1037.bezierCurveTo(p654 * 93, p654 * 61.5, p654 * 93, p654 * 61.5, p654 * 76, p654 * 64);
    v1037.bezierCurveTo(p654 * 84.5, p654 * 78.5, p654 * 84.5, p654 * 78.5, p654 * 93, p654 * 93);
    v1037.bezierCurveTo(p654 * 70, p654 * 111, p654 * 43, p654 * 103, p654 * 30, p654 * 82);
    v1037.bezierCurveTo(p654 * 17, p654 * 61, p654 * 25, p654 * 30, p654 * 51, p654 * 21);
    v1037.bezierCurveTo(p654 * 66, p654 * 15, p654 * 83, p654 * 18, p654 * 96, p654 * 29);
    v1037.bezierCurveTo(p654 * 104, p654 * 35, p654 * 109, p654 * 47, p654 * 110, p654 * 58);
    v1037.closePath();
    f86(v1037, p656[1], p656[2], p654 * 10);
    return v1036;
  }
  function f144(p657, p658, p659) {
    var v1038 = document.createElement("canvas");
    var v1039 = v1038.getContext("2d");
    v1038.width = p657 * 290;
    v1038.height = p657 * 525;
    v1039.globalAlpha = p658 ? 0.5 : 1;
    v1039.translate(p657 * 20, p657 * 20);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p657 * 111, p657 * 351);
    v1039.bezierCurveTo(p657 * 129, p657 * 218, p657 * 129, p657 * 218, p657 * 147, p657 * 85);
    v1039.bezierCurveTo(p657 * 167, p657 * 65.5, p657 * 167, p657 * 65.5, p657 * 187, p657 * 46);
    v1039.bezierCurveTo(p657 * 201.5, p657 * 70.5, p657 * 201.5, p657 * 70.5, p657 * 216, p657 * 95);
    v1039.bezierCurveTo(p657 * 194.5, p657 * 227.5, p657 * 194.5, p657 * 227.5, p657 * 173, p657 * 360);
    v1039.closePath();
    f86(v1039, p659[0]);
    v1039.save();
    v1039.translate(p657 * 131, p657 * 425.5);
    v1039.rotate(0.16);
    f89(v1039, p657 * -14, p657 * -56.5, p657 * 28, p657 * 113, p657 * 8);
    v1039.restore();
    f86(v1039, p659[0]);
    f87(v1039, p657 * 122, p657 * 480, p657 * 18.439088914585774);
    f86(v1039, p659[0]);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p657 * 79, p657 * 371);
    v1039.bezierCurveTo(p657 * 131, p657 * 373, p657 * 145, p657 * 378, p657 * 197, p657 * 388);
    v1039.bezierCurveTo(p657 * 205, p657 * 382.5, p657 * 205, p657 * 382.5, p657 * 213, p657 * 377);
    v1039.bezierCurveTo(p657 * 167, p657 * 352, p657 * 117, p657 * 345, p657 * 69, p657 * 355);
    v1039.closePath();
    f86(v1039, p659[0]);
    v1039.globalAlpha = 1;
    v1039.translate(p657 * -20, p657 * -20);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p657 * 111, p657 * 351);
    v1039.bezierCurveTo(p657 * 129, p657 * 218, p657 * 129, p657 * 218, p657 * 147, p657 * 85);
    v1039.bezierCurveTo(p657 * 167, p657 * 65.5, p657 * 167, p657 * 65.5, p657 * 187, p657 * 46);
    v1039.bezierCurveTo(p657 * 201.5, p657 * 70.5, p657 * 201.5, p657 * 70.5, p657 * 216, p657 * 95);
    v1039.bezierCurveTo(p657 * 194.5, p657 * 227.5, p657 * 194.5, p657 * 227.5, p657 * 173, p657 * 360);
    v1039.closePath();
    f86(v1039, p659[1], p659[2], p657 * 12.5);
    v1039.save();
    v1039.translate(p657 * 131, p657 * 425.5);
    v1039.rotate(0.16);
    f89(v1039, p657 * -14, p657 * -56.5, p657 * 28, p657 * 113, p657 * 8);
    v1039.restore();
    f86(v1039, p659[4], p659[5], p657 * 12.5);
    f87(v1039, p657 * 122, p657 * 480, p657 * 18.439088914585774);
    f86(v1039, p659[4], p659[5], p657 * 12.5);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p657 * 79, p657 * 371);
    v1039.bezierCurveTo(p657 * 131, p657 * 373, p657 * 145, p657 * 378, p657 * 197, p657 * 388);
    v1039.bezierCurveTo(p657 * 205, p657 * 382.5, p657 * 205, p657 * 382.5, p657 * 213, p657 * 377);
    v1039.bezierCurveTo(p657 * 167, p657 * 352, p657 * 117, p657 * 345, p657 * 69, p657 * 355);
    v1039.closePath();
    f86(v1039, p659[4], p659[5], p657 * 12.5);
    v1039.beginPath();
    v1039.lineCap = "round";
    v1039.lineJoin = "round";
    v1039.moveTo(p657 * 128, p657 * 345);
    v1039.bezierCurveTo(p657 * 142, p657 * 345, p657 * 147, p657 * 346, p657 * 158, p657 * 349);
    v1039.bezierCurveTo(p657 * 177.5, p657 * 224.5, p657 * 177.5, p657 * 224.5, p657 * 197, p657 * 100);
    v1039.bezierCurveTo(p657 * 190.5, p657 * 84.5, p657 * 190.5, p657 * 84.5, p657 * 184, p657 * 69);
    v1039.bezierCurveTo(p657 * 173.5, p657 * 82, p657 * 173.5, p657 * 82, p657 * 163, p657 * 95);
    v1039.closePath();
    f86(v1039, p659[3]);
    return v1038;
  }
  function f145(p660, p661, p662, p663) {
    var v1040 = document.createElement("canvas");
    var v1041 = v1040.getContext("2d");
    v1040.width = p660 * 283;
    v1040.height = p660 * 224;
    v1041.translate(0, p660 * 15);
    v1041.globalAlpha = 0.5;
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 93, p660 * 55);
    v1041.bezierCurveTo(p660 * 127, p660 * 27, p660 * 195, p660 * 42, p660 * 213, p660 * 78);
    v1041.bezierCurveTo(p660 * 254, p660 * 134, p660 * 226, p660 * 198, p660 * 153, p660 * 197);
    v1041.bezierCurveTo(p660 * 59, p660 * 204, p660 * 56, p660 * 158, p660 * 51, p660 * 115);
    v1041.bezierCurveTo(p660 * 50, p660 * 93, p660 * 81, p660 * 62, p660 * 90, p660 * 57);
    v1041.closePath();
    f86(v1041, p662[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 100, p660 * 33);
    v1041.bezierCurveTo(p660 * 85, p660 * 62, p660 * 102, p660 * 66, p660 * 110, p660 * 83);
    v1041.closePath();
    f86(v1041, p662[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 181, p660 * 32);
    v1041.bezierCurveTo(p660 * 196, p660 * 62, p660 * 181, p660 * 68, p660 * 178, p660 * 69);
    f86(v1041, p662[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 225, p660 * 52);
    v1041.bezierCurveTo(p660 * 228, p660 * 78, p660 * 207, p660 * 77, p660 * 192, p660 * 88);
    f86(v1041, p662[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 34, p660 * 134);
    v1041.bezierCurveTo(p660 * 46, p660 * 111, p660 * 57, p660 * 111, p660 * 79, p660 * 109);
    f86(v1041, p662[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 249, p660 * 135);
    v1041.bezierCurveTo(p660 * 233, p660 * 107, p660 * 212, p660 * 112, p660 * 202, p660 * 115);
    f86(v1041, p662[0]);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 56, p660 * 50);
    v1041.bezierCurveTo(p660 * 56, p660 * 82, p660 * 73, p660 * 82, p660 * 93, p660 * 89);
    f86(v1041, p662[0]);
    v1041.translate(0, p660 * -15);
    v1041.globalAlpha = 1;
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 100, p660 * 33);
    v1041.bezierCurveTo(p660 * 85, p660 * 62, p660 * 102, p660 * 66, p660 * 110, p660 * 83);
    f86(v1041, vVUndefined27, p662[2], p660 * 40);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 181, p660 * 32);
    v1041.bezierCurveTo(p660 * 196, p660 * 62, p660 * 181, p660 * 68, p660 * 178, p660 * 69);
    f86(v1041, vVVVUndefined272, p662[2], p660 * 40);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 225, p660 * 52);
    v1041.bezierCurveTo(p660 * 228, p660 * 78, p660 * 207, p660 * 77, p660 * 192, p660 * 88);
    f86(v1041, vVUndefined27, p662[2], p660 * 40);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 34, p660 * 134);
    v1041.bezierCurveTo(p660 * 46, p660 * 111, p660 * 57, p660 * 111, p660 * 79, p660 * 109);
    f86(v1041, undefined, p662[2], p660 * 40);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 249, p660 * 135);
    v1041.bezierCurveTo(p660 * 233, p660 * 107, p660 * 212, p660 * 112, p660 * 202, p660 * 115);
    f86(v1041, undefined, p662[2], p660 * 40);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 56, p660 * 50);
    v1041.bezierCurveTo(p660 * 56, p660 * 82, p660 * 73, p660 * 82, p660 * 93, p660 * 89);
    f86(v1041, vVVUndefined272, p662[2], p660 * 40);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 93, p660 * 55);
    v1041.bezierCurveTo(p660 * 127, p660 * 27, p660 * 195, p660 * 42, p660 * 213, p660 * 78);
    v1041.bezierCurveTo(p660 * 254, p660 * 134, p660 * 226, p660 * 198, p660 * 153, p660 * 197);
    v1041.bezierCurveTo(p660 * 59, p660 * 204, p660 * 56, p660 * 158, p660 * 51, p660 * 115);
    v1041.bezierCurveTo(p660 * 50, p660 * 93, p660 * 81, p660 * 62, p660 * 90, p660 * 57);
    v1041.closePath();
    f86(v1041, p662[1], p662[2], p660 * 10);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 100, p660 * 33);
    v1041.bezierCurveTo(p660 * 85, p660 * 62, p660 * 102, p660 * 66, p660 * 110, p660 * 83);
    f86(v1041, undefined, p662[1], p660 * 20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 181, p660 * 32);
    v1041.bezierCurveTo(p660 * 196, p660 * 62, p660 * 181, p660 * 68, p660 * 178, p660 * 69);
    f86(v1041, undefined, p662[1], p660 * 20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 225, p660 * 52);
    v1041.bezierCurveTo(p660 * 228, p660 * 78, p660 * 207, p660 * 77, p660 * 192, p660 * 88);
    f86(v1041, vVVVUndefined1972, p662[1], p660 * 20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 34, p660 * 134);
    v1041.bezierCurveTo(p660 * 46, p660 * 111, p660 * 57, p660 * 111, p660 * 79, p660 * 109);
    f86(v1041, undefined, p662[1], p660 * 20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 249, p660 * 135);
    v1041.bezierCurveTo(p660 * 233, p660 * 107, p660 * 212, p660 * 112, p660 * 202, p660 * 115);
    f86(v1041, vVVUndefined272, p662[1], p660 * 20);
    v1041.beginPath();
    v1041.lineCap = "round";
    v1041.lineJoin = "round";
    v1041.moveTo(p660 * 56, p660 * 50);
    v1041.bezierCurveTo(p660 * 56, p660 * 82, p660 * 73, p660 * 82, p660 * 93, p660 * 89);
    f86(v1041, undefined, p662[1], p660 * 20);
    f87(v1041, p660 * 101, p660 * 155, p660 * 20.591260281974);
    f86(v1041, p662[3]);
    f87(v1041, p660 * 180, p660 * 155, p660 * 20.591260281974);
    f86(v1041, p662[3]);
    f87(v1041, p660 * 95, p660 * 148, p660 * 7.211102550927978);
    f86(v1041, p662[4]);
    f87(v1041, p660 * 173, p660 * 148, p660 * 7.211102550927978);
    f86(v1041, p662[4]);
    if (p663 === 1) {
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p660 * 191, p660 * 107);
      v1041.bezierCurveTo(p660 * 180, p660 * 104, p660 * 175, p660 * 101, p660 * 180, p660 * 95);
      v1041.bezierCurveTo(p660 * 180, p660 * 95, p660 * 181, p660 * 99, p660 * 188, p660 * 103);
      v1041.bezierCurveTo(p660 * 191, p660 * 101, p660 * 191, p660 * 95, p660 * 190, p660 * 91);
      v1041.bezierCurveTo(p660 * 190, p660 * 91, p660 * 196, p660 * 89, p660 * 195, p660 * 99);
      v1041.closePath();
      f86(v1041, p662[2]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p660 * 206, p660 * 98);
      v1041.bezierCurveTo(p660 * 203, p660 * 95, p660 * 200, p660 * 93, p660 * 198, p660 * 101);
      v1041.bezierCurveTo(p660 * 194, p660 * 109, p660 * 193, p660 * 109, p660 * 196, p660 * 110);
      v1041.bezierCurveTo(p660 * 206, p660 * 115, p660 * 209, p660 * 114, p660 * 211, p660 * 111);
      v1041.bezierCurveTo(p660 * 211, p660 * 106, p660 * 208, p660 * 108, p660 * 203, p660 * 108);
      v1041.bezierCurveTo(p660 * 193, p660 * 107, p660 * 204, p660 * 101, p660 * 206, p660 * 99);
      v1041.closePath();
      f86(v1041, p662[2]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p660 * 172, p660 * 111);
      v1041.bezierCurveTo(p660 * 172, p660 * 106, p660 * 174, p660 * 105, p660 * 185, p660 * 109);
      v1041.bezierCurveTo(p660 * 190, p660 * 109, p660 * 189, p660 * 114, p660 * 185, p660 * 120);
      v1041.bezierCurveTo(p660 * 181, p660 * 125, p660 * 180, p660 * 126, p660 * 176, p660 * 122);
      v1041.bezierCurveTo(p660 * 182, p660 * 119, p660 * 187, p660 * 110, p660 * 182, p660 * 112);
      v1041.closePath();
      f86(v1041, p662[2]);
      v1041.beginPath();
      v1041.lineCap = "round";
      v1041.lineJoin = "round";
      v1041.moveTo(p660 * 202, p660 * 125);
      v1041.bezierCurveTo(p660 * 197, p660 * 117, p660 * 193, p660 * 116, p660 * 193, p660 * 120);
      v1041.bezierCurveTo(p660 * 192.5, p660 * 124.5, p660 * 192.5, p660 * 124.5, p660 * 192, p660 * 129);
      v1041.bezierCurveTo(p660 * 188, p660 * 129, p660 * 187, p660 * 124, p660 * 189, p660 * 120);
      v1041.bezierCurveTo(p660 * 191, p660 * 110, p660 * 192, p660 * 110, p660 * 200, p660 * 116);
      v1041.bezierCurveTo(p660 * 208, p660 * 120, p660 * 207, p660 * 123, p660 * 202, p660 * 125);
      v1041.closePath();
      f86(v1041, p662[2]);
    }
    return v1040;
  }
  function f146(p664, p665, p666) {
    var v1042 = document.createElement("canvas");
    var v1043 = v1042.getContext("2d");
    v1042.width = p664 * 104;
    v1042.height = p664 * 112;
    v1043.translate(0, p664 * 15);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p664 * 16, p664 * 44);
    v1043.bezierCurveTo(p664 * 30.5, p664 * 48, p664 * 30.5, p664 * 48, p664 * 45, p664 * 52);
    v1043.bezierCurveTo(p664 * 36.5, p664 * 63, p664 * 36.5, p664 * 63, p664 * 28, p664 * 74);
    v1043.bezierCurveTo(p664 * 32, p664 * 86, p664 * 61, p664 * 92, p664 * 78, p664 * 76);
    v1043.bezierCurveTo(p664 * 93, p664 * 62, p664 * 92, p664 * 40, p664 * 80, p664 * 26);
    v1043.bezierCurveTo(p664 * 65, p664 * 11, p664 * 42, p664 * 16, p664 * 34, p664 * 21);
    v1043.bezierCurveTo(p664 * 22, p664 * 27, p664 * 16, p664 * 39, p664 * 16, p664 * 44);
    v1043.closePath();
    f86(v1043, p666[0]);
    v1043.globalAlpha = 1;
    v1043.translate(0, p664 * -15);
    v1043.beginPath();
    v1043.lineCap = "round";
    v1043.lineJoin = "round";
    v1043.moveTo(p664 * 16, p664 * 44);
    v1043.bezierCurveTo(p664 * 30.5, p664 * 48, p664 * 30.5, p664 * 48, p664 * 45, p664 * 52);
    v1043.bezierCurveTo(p664 * 36.5, p664 * 63, p664 * 36.5, p664 * 63, p664 * 28, p664 * 74);
    v1043.bezierCurveTo(p664 * 32, p664 * 86, p664 * 61, p664 * 92, p664 * 78, p664 * 76);
    v1043.bezierCurveTo(p664 * 93, p664 * 62, p664 * 92, p664 * 40, p664 * 80, p664 * 26);
    v1043.bezierCurveTo(p664 * 65, p664 * 11, p664 * 42, p664 * 16, p664 * 34, p664 * 21);
    v1043.bezierCurveTo(p664 * 22, p664 * 27, p664 * 16, p664 * 39, p664 * 16, p664 * 44);
    v1043.closePath();
    f86(v1043, p666[1], p666[2], p664 * 8);
    return v1042;
  }
  function f147(p667, p668, p669) {
    var v1044 = document.createElement("canvas");
    var v1045 = v1044.getContext("2d");
    v1044.width = p667 * 290;
    v1044.height = p667 * 525;
    v1045.globalAlpha = p668 ? 0.5 : 1;
    v1045.translate(p667 * 20, p667 * 20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p667 * 112, p667 * 356);
    v1045.bezierCurveTo(p667 * 124, p667 * 220.5, p667 * 124, p667 * 220.5, p667 * 136, p667 * 85);
    v1045.bezierCurveTo(p667 * 162.5, p667 * 65.5, p667 * 162.5, p667 * 65.5, p667 * 189, p667 * 46);
    v1045.bezierCurveTo(p667 * 208.5, p667 * 72.5, p667 * 208.5, p667 * 72.5, p667 * 228, p667 * 99);
    v1045.bezierCurveTo(p667 * 200, p667 * 232, p667 * 200, p667 * 232, p667 * 172, p667 * 365);
    v1045.closePath();
    f86(v1045, p669[0]);
    v1045.save();
    v1045.translate(p667 * 131, p667 * 423);
    v1045.rotate(0.16);
    f89(v1045, p667 * -14, p667 * -53, p667 * 28, p667 * 106, p667 * 10);
    v1045.restore();
    f86(v1045, p669[0]);
    v1045.save();
    v1045.translate(p667 * 122, p667 * 480);
    v1045.rotate(1.72);
    f92(v1045, 4, p667 * 26.476404589747453, p667 * 10);
    v1045.restore();
    f86(v1045, p669[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p667 * 210, p667 * 387);
    v1045.bezierCurveTo(p667 * 138, p667 * 376, p667 * 138, p667 * 376, p667 * 66, p667 * 365);
    v1045.bezierCurveTo(p667 * 76, p667 * 355, p667 * 76, p667 * 355, p667 * 86, p667 * 345);
    v1045.bezierCurveTo(p667 * 99, p667 * 346.5, p667 * 99, p667 * 346.5, p667 * 112, p667 * 348);
    v1045.bezierCurveTo(p667 * 128.5, p667 * 344, p667 * 128.5, p667 * 344, p667 * 145, p667 * 340);
    v1045.bezierCurveTo(p667 * 158, p667 * 348, p667 * 158, p667 * 348, p667 * 171, p667 * 356);
    v1045.bezierCurveTo(p667 * 184, p667 * 358, p667 * 184, p667 * 358, p667 * 197, p667 * 360);
    v1045.closePath();
    f86(v1045, p669[0]);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p667 * 129, p667 * 338);
    v1045.bezierCurveTo(p667 * 137, p667 * 336, p667 * 137, p667 * 336, p667 * 145, p667 * 334);
    v1045.bezierCurveTo(p667 * 152.5, p667 * 338, p667 * 152.5, p667 * 338, p667 * 160, p667 * 342);
    v1045.bezierCurveTo(p667 * 184, p667 * 224, p667 * 184, p667 * 224, p667 * 208, p667 * 106);
    v1045.bezierCurveTo(p667 * 197, p667 * 88, p667 * 187, p667 * 70, p667 * 186, p667 * 70);
    v1045.bezierCurveTo(p667 * 169.5, p667 * 83, p667 * 169.5, p667 * 83, p667 * 153, p667 * 96);
    v1045.closePath();
    f86(v1045, p669[0]);
    v1045.globalAlpha = 1;
    v1045.translate(p667 * -20, p667 * -20);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p667 * 112, p667 * 356);
    v1045.bezierCurveTo(p667 * 124, p667 * 220.5, p667 * 124, p667 * 220.5, p667 * 136, p667 * 85);
    v1045.bezierCurveTo(p667 * 162.5, p667 * 65.5, p667 * 162.5, p667 * 65.5, p667 * 189, p667 * 46);
    v1045.bezierCurveTo(p667 * 208.5, p667 * 72.5, p667 * 208.5, p667 * 72.5, p667 * 228, p667 * 99);
    v1045.bezierCurveTo(p667 * 200, p667 * 232, p667 * 200, p667 * 232, p667 * 172, p667 * 365);
    v1045.closePath();
    f86(v1045, p669[1], p669[2], p667 * 12.5);
    v1045.save();
    v1045.translate(p667 * 131, p667 * 423);
    v1045.rotate(0.16);
    f89(v1045, p667 * -14, p667 * -53, p667 * 28, p667 * 106, p667 * 10);
    v1045.restore();
    f86(v1045, p669[4], p669[5], p667 * 12.5);
    v1045.save();
    v1045.translate(p667 * 122, p667 * 480);
    v1045.rotate(1.72);
    f92(v1045, 4, p667 * 26.476404589747453, p667 * 10);
    v1045.restore();
    f86(v1045, p669[1], p669[2], p667 * 12.5);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p667 * 210, p667 * 387);
    v1045.bezierCurveTo(p667 * 138, p667 * 376, p667 * 138, p667 * 376, p667 * 66, p667 * 365);
    v1045.bezierCurveTo(p667 * 76, p667 * 355, p667 * 76, p667 * 355, p667 * 86, p667 * 345);
    v1045.bezierCurveTo(p667 * 99, p667 * 346.5, p667 * 99, p667 * 346.5, p667 * 112, p667 * 348);
    v1045.bezierCurveTo(p667 * 128.5, p667 * 344, p667 * 128.5, p667 * 344, p667 * 145, p667 * 340);
    v1045.bezierCurveTo(p667 * 158, p667 * 348, p667 * 158, p667 * 348, p667 * 171, p667 * 356);
    v1045.bezierCurveTo(p667 * 184, p667 * 358, p667 * 184, p667 * 358, p667 * 197, p667 * 360);
    v1045.closePath();
    f86(v1045, p669[1], p669[2], p667 * 12.5);
    v1045.beginPath();
    v1045.lineCap = "round";
    v1045.lineJoin = "round";
    v1045.moveTo(p667 * 129, p667 * 338);
    v1045.bezierCurveTo(p667 * 137, p667 * 336, p667 * 137, p667 * 336, p667 * 145, p667 * 334);
    v1045.bezierCurveTo(p667 * 152.5, p667 * 338, p667 * 152.5, p667 * 338, p667 * 160, p667 * 342);
    v1045.bezierCurveTo(p667 * 184, p667 * 224, p667 * 184, p667 * 224, p667 * 208, p667 * 106);
    v1045.bezierCurveTo(p667 * 197, p667 * 88, p667 * 187, p667 * 70, p667 * 186, p667 * 70);
    v1045.bezierCurveTo(p667 * 169.5, p667 * 83, p667 * 169.5, p667 * 83, p667 * 153, p667 * 96);
    v1045.closePath();
    f86(v1045, p669[3]);
    return v1044;
  }
  function f148(p670, p671, p672) {
    var v1046 = document.createElement("canvas");
    var v1047 = v1046.getContext("2d");
    v1046.width = p670 * 290;
    v1046.height = p670 * 525;
    v1047.globalAlpha = p671 ? 0.5 : 1;
    v1047.translate(p670 * 20, p670 * 20);
    v1047.beginPath();
    v1047.lineCap = "round";
    v1047.lineJoin = "round";
    v1047.moveTo(p670 * 111, p670 * 351);
    v1047.bezierCurveTo(p670 * 128.5, p670 * 218.5, p670 * 128.5, p670 * 218.5, p670 * 146, p670 * 86);
    v1047.bezierCurveTo(p670 * 166.5, p670 * 66.5, p670 * 166.5, p670 * 66.5, p670 * 187, p670 * 47);
    v1047.bezierCurveTo(p670 * 201, p670 * 71.5, p670 * 201, p670 * 71.5, p670 * 215, p670 * 96);
    v1047.bezierCurveTo(p670 * 193, p670 * 228.5, p670 * 193, p670 * 228.5, p670 * 171, p670 * 361);
    v1047.closePath();
    f86(v1047, p672[0]);
    v1047.save();
    v1047.translate(p670 * 129.5, p670 * 424);
    v1047.rotate(0.16);
    f89(v1047, p670 * -15.5, p670 * -63, p670 * 31, p670 * 126, p670 * 10);
    v1047.restore();
    f86(v1047, p672[0]);
    f87(v1047, p670 * 121, p670 * 480, p670 * 20.396078054371138);
    f86(v1047, p672[0]);
    v1047.beginPath();
    v1047.lineCap = "round";
    v1047.lineJoin = "round";
    v1047.moveTo(p670 * 90, p670 * 311);
    v1047.bezierCurveTo(p670 * 95, p670 * 324, p670 * 95, p670 * 324, p670 * 100, p670 * 337);
    v1047.bezierCurveTo(p670 * 141.5, p670 * 345.5, p670 * 141.5, p670 * 345.5, p670 * 183, p670 * 354);
    v1047.bezierCurveTo(p670 * 193.5, p670 * 342.5, p670 * 193.5, p670 * 342.5, p670 * 204, p670 * 331);
    v1047.bezierCurveTo(p670 * 202, p670 * 354, p670 * 202, p670 * 354, p670 * 200, p670 * 377);
    v1047.bezierCurveTo(p670 * 147, p670 * 388, p670 * 106, p670 * 371, p670 * 79, p670 * 356);
    v1047.closePath();
    f86(v1047, p672[0]);
    v1047.globalAlpha = 1;
    v1047.translate(p670 * -20, p670 * -20);
    v1047.beginPath();
    v1047.lineCap = "round";
    v1047.lineJoin = "round";
    v1047.moveTo(p670 * 111, p670 * 351);
    v1047.bezierCurveTo(p670 * 128.5, p670 * 218.5, p670 * 128.5, p670 * 218.5, p670 * 146, p670 * 86);
    v1047.bezierCurveTo(p670 * 166.5, p670 * 66.5, p670 * 166.5, p670 * 66.5, p670 * 187, p670 * 47);
    v1047.bezierCurveTo(p670 * 201, p670 * 71.5, p670 * 201, p670 * 71.5, p670 * 215, p670 * 96);
    v1047.bezierCurveTo(p670 * 193, p670 * 228.5, p670 * 193, p670 * 228.5, p670 * 171, p670 * 361);
    v1047.closePath();
    f86(v1047, p672[1], p672[2], p670 * 12.5);
    v1047.save();
    v1047.translate(p670 * 129.5, p670 * 424);
    v1047.rotate(0.16);
    f89(v1047, p670 * -15.5, p670 * -63, p670 * 31, p670 * 126, p670 * 10);
    v1047.restore();
    f86(v1047, p672[4], p672[5], p670 * 12.5);
    f87(v1047, p670 * 121, p670 * 480, p670 * 20.396078054371138);
    f86(v1047, p672[4], p672[5], p670 * 12.5);
    v1047.beginPath();
    v1047.lineCap = "round";
    v1047.lineJoin = "round";
    v1047.moveTo(p670 * 90, p670 * 311);
    v1047.bezierCurveTo(p670 * 95, p670 * 324, p670 * 95, p670 * 324, p670 * 100, p670 * 337);
    v1047.bezierCurveTo(p670 * 141.5, p670 * 345.5, p670 * 141.5, p670 * 345.5, p670 * 183, p670 * 354);
    v1047.bezierCurveTo(p670 * 193.5, p670 * 342.5, p670 * 193.5, p670 * 342.5, p670 * 204, p670 * 331);
    v1047.bezierCurveTo(p670 * 202, p670 * 354, p670 * 202, p670 * 354, p670 * 200, p670 * 377);
    v1047.bezierCurveTo(p670 * 147, p670 * 388, p670 * 106, p670 * 371, p670 * 79, p670 * 356);
    v1047.closePath();
    f86(v1047, p672[1], p672[2], p670 * 12.5);
    return v1046;
  }
  function f149(p673, p674, p675) {
    var v1048 = document.createElement("canvas");
    var v1049 = v1048.getContext("2d");
    v1048.width = p673 * 290;
    v1048.height = p673 * 525;
    v1049.globalAlpha = p674 ? 0.5 : 1;
    v1049.translate(p673 * 20, p673 * 20);
    v1049.translate(p673 * -20, p673 * -20);
    v1049.save();
    v1049.translate(p673 * 132, p673 * 423);
    v1049.rotate(0.16);
    f89(v1049, p673 * -14, p673 * -61, p673 * 28, p673 * 122, p673 * 10);
    v1049.restore();
    f86(v1049, p675[0]);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 100, p673 * 344);
    v1049.bezierCurveTo(p673 * 123, p673 * 214, p673 * 123, p673 * 214, p673 * 146, p673 * 84);
    v1049.bezierCurveTo(p673 * 166.5, p673 * 65, p673 * 166.5, p673 * 65, p673 * 187, p673 * 46);
    v1049.bezierCurveTo(p673 * 201, p673 * 71, p673 * 201, p673 * 71, p673 * 215, p673 * 96);
    v1049.bezierCurveTo(p673 * 199.5, p673 * 226.5, p673 * 199.5, p673 * 226.5, p673 * 184, p673 * 357);
    v1049.bezierCurveTo(p673 * 162.5, p673 * 362.5, p673 * 162.5, p673 * 362.5, p673 * 141, p673 * 368);
    v1049.closePath();
    f86(v1049, p675[0]);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 75, p673 * 328);
    v1049.bezierCurveTo(p673 * 88, p673 * 336.5, p673 * 88, p673 * 336.5, p673 * 101, p673 * 345);
    v1049.bezierCurveTo(p673 * 123.5, p673 * 337.5, p673 * 123.5, p673 * 337.5, p673 * 146, p673 * 330);
    v1049.bezierCurveTo(p673 * 165, p673 * 343.5, p673 * 165, p673 * 343.5, p673 * 184, p673 * 357);
    v1049.bezierCurveTo(p673 * 198.5, p673 * 353, p673 * 198.5, p673 * 353, p673 * 213, p673 * 349);
    v1049.bezierCurveTo(p673 * 200.5, p673 * 364.5, p673 * 200.5, p673 * 364.5, p673 * 188, p673 * 380);
    v1049.bezierCurveTo(p673 * 163, p673 * 380.5, p673 * 163, p673 * 380.5, p673 * 138, p673 * 381);
    v1049.bezierCurveTo(p673 * 112, p673 * 373.5, p673 * 112, p673 * 373.5, p673 * 86, p673 * 366);
    v1049.closePath();
    f86(v1049, p675[0]);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 121, p673 * 332);
    v1049.bezierCurveTo(p673 * 133.5, p673 * 327.5, p673 * 133.5, p673 * 327.5, p673 * 146, p673 * 323);
    v1049.bezierCurveTo(p673 * 157, p673 * 330.5, p673 * 157, p673 * 330.5, p673 * 168, p673 * 338);
    v1049.bezierCurveTo(p673 * 182.5, p673 * 219.5, p673 * 182.5, p673 * 219.5, p673 * 197, p673 * 101);
    v1049.bezierCurveTo(p673 * 190, p673 * 84.5, p673 * 190, p673 * 84.5, p673 * 183, p673 * 68);
    v1049.bezierCurveTo(p673 * 172.5, p673 * 81, p673 * 172.5, p673 * 81, p673 * 162, p673 * 94);
    v1049.closePath();
    f86(v1049, p675[0]);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 105, p673 * 463);
    v1049.bezierCurveTo(p673 * 124.5, p673 * 466, p673 * 124.5, p673 * 466, p673 * 144, p673 * 469);
    v1049.bezierCurveTo(p673 * 145.5, p673 * 478.5, p673 * 145.5, p673 * 478.5, p673 * 147, p673 * 488);
    v1049.bezierCurveTo(p673 * 133.5, p673 * 495.5, p673 * 133.5, p673 * 495.5, p673 * 120, p673 * 503);
    v1049.bezierCurveTo(p673 * 108.5, p673 * 492, p673 * 108.5, p673 * 492, p673 * 97, p673 * 481);
    v1049.closePath();
    f86(v1049, p675[0]);
    v1049.globalAlpha = 1;
    v1049.translate(p673 * -20, p673 * -20);
    v1049.save();
    v1049.translate(p673 * 132, p673 * 423);
    v1049.rotate(0.16);
    f89(v1049, p673 * -14, p673 * -61, p673 * 28, p673 * 122, p673 * 10);
    v1049.restore();
    f86(v1049, p675[4], p675[5], p673 * 12.5);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 100, p673 * 344);
    v1049.bezierCurveTo(p673 * 123, p673 * 214, p673 * 123, p673 * 214, p673 * 146, p673 * 84);
    v1049.bezierCurveTo(p673 * 166.5, p673 * 65, p673 * 166.5, p673 * 65, p673 * 187, p673 * 46);
    v1049.bezierCurveTo(p673 * 201, p673 * 71, p673 * 201, p673 * 71, p673 * 215, p673 * 96);
    v1049.bezierCurveTo(p673 * 199.5, p673 * 226.5, p673 * 199.5, p673 * 226.5, p673 * 184, p673 * 357);
    v1049.bezierCurveTo(p673 * 162.5, p673 * 362.5, p673 * 162.5, p673 * 362.5, p673 * 141, p673 * 368);
    v1049.closePath();
    f86(v1049, p675[1], p675[2], p673 * 12.5);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 75, p673 * 328);
    v1049.bezierCurveTo(p673 * 88, p673 * 336.5, p673 * 88, p673 * 336.5, p673 * 101, p673 * 345);
    v1049.bezierCurveTo(p673 * 123.5, p673 * 337.5, p673 * 123.5, p673 * 337.5, p673 * 146, p673 * 330);
    v1049.bezierCurveTo(p673 * 165, p673 * 343.5, p673 * 165, p673 * 343.5, p673 * 184, p673 * 357);
    v1049.bezierCurveTo(p673 * 198.5, p673 * 353, p673 * 198.5, p673 * 353, p673 * 213, p673 * 349);
    v1049.bezierCurveTo(p673 * 200.5, p673 * 364.5, p673 * 200.5, p673 * 364.5, p673 * 188, p673 * 380);
    v1049.bezierCurveTo(p673 * 163, p673 * 380.5, p673 * 163, p673 * 380.5, p673 * 138, p673 * 381);
    v1049.bezierCurveTo(p673 * 112, p673 * 373.5, p673 * 112, p673 * 373.5, p673 * 86, p673 * 366);
    v1049.closePath();
    f86(v1049, p675[1], p675[2], p673 * 12.5);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 121, p673 * 332);
    v1049.bezierCurveTo(p673 * 133.5, p673 * 327.5, p673 * 133.5, p673 * 327.5, p673 * 146, p673 * 323);
    v1049.bezierCurveTo(p673 * 157, p673 * 330.5, p673 * 157, p673 * 330.5, p673 * 168, p673 * 338);
    v1049.bezierCurveTo(p673 * 182.5, p673 * 219.5, p673 * 182.5, p673 * 219.5, p673 * 197, p673 * 101);
    v1049.bezierCurveTo(p673 * 190, p673 * 84.5, p673 * 190, p673 * 84.5, p673 * 183, p673 * 68);
    v1049.bezierCurveTo(p673 * 172.5, p673 * 81, p673 * 172.5, p673 * 81, p673 * 162, p673 * 94);
    v1049.closePath();
    f86(v1049, p675[3]);
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 105, p673 * 463);
    v1049.bezierCurveTo(p673 * 124.5, p673 * 466, p673 * 124.5, p673 * 466, p673 * 144, p673 * 469);
    v1049.bezierCurveTo(p673 * 145.5, p673 * 478.5, p673 * 145.5, p673 * 478.5, p673 * 147, p673 * 488);
    v1049.bezierCurveTo(p673 * 133.5, p673 * 495.5, p673 * 133.5, p673 * 495.5, p673 * 120, p673 * 503);
    v1049.bezierCurveTo(p673 * 108.5, p673 * 492, p673 * 108.5, p673 * 492, p673 * 97, p673 * 481);
    v1049.closePath();
    f86(v1049, p675[1], p675[2], p673 * 12.5);
    v1049.globalAlpha = 1;
    v1049.beginPath();
    v1049.lineCap = "round";
    v1049.lineJoin = "round";
    v1049.moveTo(p673 * 143, p673 * 346);
    v1049.bezierCurveTo(p673 * 125, p673 * 352, p673 * 125, p673 * 352, p673 * 107, p673 * 358);
    v1049.bezierCurveTo(p673 * 124, p673 * 363, p673 * 140, p673 * 368, p673 * 141, p673 * 368);
    v1049.bezierCurveTo(p673 * 156.5, p673 * 367, p673 * 156.5, p673 * 367, p673 * 172, p673 * 366);
    v1049.closePath();
    f86(v1049, p675[3]);
    return v1048;
  }
  function f150(p676, p677, p678) {
    var v1050 = document.createElement("canvas");
    var v1051 = v1050.getContext("2d");
    v1050.width = p676 * 321;
    v1050.height = p676 * 284;
    v1051.translate(p676 * 100, p676 * 30);
    v1051.translate(p676 * 5, p676 * 10);
    v1051.globalAlpha = p677 ? 0.5 : 1;
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 58, p676 * 33);
    v1051.bezierCurveTo(p676 * 81, p676 * 22, p676 * 93, p676 * 26, p676 * 123, p676 * 47);
    v1051.bezierCurveTo(p676 * 160, p676 * 73, p676 * 169, p676 * 80, p676 * 191, p676 * 99);
    v1051.bezierCurveTo(p676 * 202, p676 * 107, p676 * 211, p676 * 118, p676 * 195, p676 * 151);
    v1051.bezierCurveTo(p676 * 181, p676 * 183, p676 * 157, p676 * 192, p676 * 129, p676 * 174);
    v1051.bezierCurveTo(p676 * 78, p676 * 140, p676 * 68, p676 * 129, p676 * 37, p676 * 94);
    v1051.bezierCurveTo(p676 * 15, p676 * 68, p676 * 25, p676 * 52, p676 * 56, p676 * 34);
    v1051.closePath();
    f86(v1051, p678[0]);
    v1051.globalAlpha = 1;
    v1051.translate(p676 * -5, p676 * -10);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 58, p676 * 33);
    v1051.bezierCurveTo(p676 * 81, p676 * 22, p676 * 93, p676 * 26, p676 * 123, p676 * 47);
    v1051.bezierCurveTo(p676 * 160, p676 * 73, p676 * 169, p676 * 80, p676 * 191, p676 * 99);
    v1051.bezierCurveTo(p676 * 202, p676 * 107, p676 * 211, p676 * 118, p676 * 195, p676 * 151);
    v1051.bezierCurveTo(p676 * 181, p676 * 183, p676 * 157, p676 * 192, p676 * 129, p676 * 174);
    v1051.bezierCurveTo(p676 * 78, p676 * 140, p676 * 68, p676 * 129, p676 * 37, p676 * 94);
    v1051.bezierCurveTo(p676 * 15, p676 * 68, p676 * 25, p676 * 52, p676 * 56, p676 * 34);
    v1051.closePath();
    f86(v1051, p678[1], p678[2], p676 * 10);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 167, p676 * 120);
    v1051.bezierCurveTo(p676 * 196, p676 * 106, p676 * 207, p676 * 111, p676 * 199, p676 * 135);
    v1051.bezierCurveTo(p676 * 185, p676 * 172, p676 * 166, p676 * 187, p676 * 145, p676 * 179);
    v1051.bezierCurveTo(p676 * 118, p676 * 166, p676 * 127, p676 * 139, p676 * 166, p676 * 121);
    v1051.closePath();
    f86(v1051, p678[3]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 25, p676 * 64);
    v1051.bezierCurveTo(p676 * 59, p676 * 96, p676 * 97, p676 * 128, p676 * 129, p676 * 151);
    v1051.bezierCurveTo(p676 * 126, p676 * 163, p676 * 134, p676 * 174, p676 * 142, p676 * 180);
    v1051.bezierCurveTo(p676 * 114, p676 * 170, p676 * 68, p676 * 134, p676 * 31, p676 * 85);
    v1051.bezierCurveTo(p676 * 24, p676 * 71, p676 * 24, p676 * 70, p676 * 25, p676 * 65);
    v1051.closePath();
    f86(v1051, p678[2]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 161, p676 * 141);
    v1051.bezierCurveTo(p676 * 181, p676 * 131, p676 * 186, p676 * 135, p676 * 173, p676 * 152);
    v1051.bezierCurveTo(p676 * 163, p676 * 163, p676 * 155, p676 * 161, p676 * 151, p676 * 150);
    v1051.bezierCurveTo(p676 * 147, p676 * 140, p676 * 155, p676 * 131, p676 * 175, p676 * 125);
    v1051.bezierCurveTo(p676 * 190, p676 * 120, p676 * 196, p676 * 121, p676 * 189, p676 * 143);
    v1051.bezierCurveTo(p676 * 182, p676 * 167, p676 * 169, p676 * 174, p676 * 157, p676 * 174);
    v1051.bezierCurveTo(p676 * 138, p676 * 172, p676 * 139, p676 * 162, p676 * 140, p676 * 156);
    f86(v1051, vVVUndefined27, p678[4], p676 * 4);
    v1051.translate(p676 * -100, p676 * -30);
    v1051.translate(p676 * 10, p676 * 70);
    v1051.translate(p676 * 5, p676 * 10);
    v1051.globalAlpha = p677 ? 0.5 : 1;
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 58, p676 * 33);
    v1051.bezierCurveTo(p676 * 81, p676 * 22, p676 * 93, p676 * 26, p676 * 123, p676 * 47);
    v1051.bezierCurveTo(p676 * 160, p676 * 73, p676 * 169, p676 * 80, p676 * 191, p676 * 99);
    v1051.bezierCurveTo(p676 * 202, p676 * 107, p676 * 211, p676 * 118, p676 * 195, p676 * 151);
    v1051.bezierCurveTo(p676 * 181, p676 * 183, p676 * 157, p676 * 192, p676 * 129, p676 * 174);
    v1051.bezierCurveTo(p676 * 78, p676 * 140, p676 * 68, p676 * 129, p676 * 37, p676 * 94);
    v1051.bezierCurveTo(p676 * 15, p676 * 68, p676 * 25, p676 * 52, p676 * 56, p676 * 34);
    v1051.closePath();
    f86(v1051, p678[0]);
    v1051.globalAlpha = 1;
    v1051.translate(p676 * -5, p676 * -10);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 58, p676 * 33);
    v1051.bezierCurveTo(p676 * 81, p676 * 22, p676 * 93, p676 * 26, p676 * 123, p676 * 47);
    v1051.bezierCurveTo(p676 * 160, p676 * 73, p676 * 169, p676 * 80, p676 * 191, p676 * 99);
    v1051.bezierCurveTo(p676 * 202, p676 * 107, p676 * 211, p676 * 118, p676 * 195, p676 * 151);
    v1051.bezierCurveTo(p676 * 181, p676 * 183, p676 * 157, p676 * 192, p676 * 129, p676 * 174);
    v1051.bezierCurveTo(p676 * 78, p676 * 140, p676 * 68, p676 * 129, p676 * 37, p676 * 94);
    v1051.bezierCurveTo(p676 * 15, p676 * 68, p676 * 25, p676 * 52, p676 * 56, p676 * 34);
    v1051.closePath();
    f86(v1051, p678[1], p678[2], p676 * 10);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 167, p676 * 120);
    v1051.bezierCurveTo(p676 * 196, p676 * 106, p676 * 207, p676 * 111, p676 * 199, p676 * 135);
    v1051.bezierCurveTo(p676 * 185, p676 * 172, p676 * 166, p676 * 187, p676 * 145, p676 * 179);
    v1051.bezierCurveTo(p676 * 118, p676 * 166, p676 * 127, p676 * 139, p676 * 166, p676 * 121);
    v1051.closePath();
    f86(v1051, p678[3]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 25, p676 * 64);
    v1051.bezierCurveTo(p676 * 59, p676 * 96, p676 * 97, p676 * 128, p676 * 129, p676 * 151);
    v1051.bezierCurveTo(p676 * 126, p676 * 163, p676 * 134, p676 * 174, p676 * 142, p676 * 180);
    v1051.bezierCurveTo(p676 * 114, p676 * 170, p676 * 68, p676 * 134, p676 * 31, p676 * 85);
    v1051.bezierCurveTo(p676 * 24, p676 * 71, p676 * 24, p676 * 70, p676 * 25, p676 * 65);
    v1051.closePath();
    f86(v1051, p678[2]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 161, p676 * 141);
    v1051.bezierCurveTo(p676 * 181, p676 * 131, p676 * 186, p676 * 135, p676 * 173, p676 * 152);
    v1051.bezierCurveTo(p676 * 163, p676 * 163, p676 * 155, p676 * 161, p676 * 151, p676 * 150);
    v1051.bezierCurveTo(p676 * 147, p676 * 140, p676 * 155, p676 * 131, p676 * 175, p676 * 125);
    v1051.bezierCurveTo(p676 * 190, p676 * 120, p676 * 196, p676 * 121, p676 * 189, p676 * 143);
    v1051.bezierCurveTo(p676 * 182, p676 * 167, p676 * 169, p676 * 174, p676 * 157, p676 * 174);
    v1051.bezierCurveTo(p676 * 138, p676 * 172, p676 * 139, p676 * 162, p676 * 140, p676 * 156);
    f86(v1051, undefined, p678[4], p676 * 4);
    v1051.translate(p676 * 20, p676 * -80);
    v1051.translate(p676 * 5, p676 * 10);
    v1051.globalAlpha = p677 ? 0.5 : 1;
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 58, p676 * 33);
    v1051.bezierCurveTo(p676 * 81, p676 * 22, p676 * 93, p676 * 26, p676 * 123, p676 * 47);
    v1051.bezierCurveTo(p676 * 160, p676 * 73, p676 * 169, p676 * 80, p676 * 191, p676 * 99);
    v1051.bezierCurveTo(p676 * 202, p676 * 107, p676 * 211, p676 * 118, p676 * 195, p676 * 151);
    v1051.bezierCurveTo(p676 * 181, p676 * 183, p676 * 157, p676 * 192, p676 * 129, p676 * 174);
    v1051.bezierCurveTo(p676 * 78, p676 * 140, p676 * 68, p676 * 129, p676 * 37, p676 * 94);
    v1051.bezierCurveTo(p676 * 15, p676 * 68, p676 * 25, p676 * 52, p676 * 56, p676 * 34);
    v1051.closePath();
    f86(v1051, p678[0]);
    v1051.globalAlpha = 1;
    v1051.translate(p676 * -5, p676 * -10);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 58, p676 * 33);
    v1051.bezierCurveTo(p676 * 81, p676 * 22, p676 * 93, p676 * 26, p676 * 123, p676 * 47);
    v1051.bezierCurveTo(p676 * 160, p676 * 73, p676 * 169, p676 * 80, p676 * 191, p676 * 99);
    v1051.bezierCurveTo(p676 * 202, p676 * 107, p676 * 211, p676 * 118, p676 * 195, p676 * 151);
    v1051.bezierCurveTo(p676 * 181, p676 * 183, p676 * 157, p676 * 192, p676 * 129, p676 * 174);
    v1051.bezierCurveTo(p676 * 78, p676 * 140, p676 * 68, p676 * 129, p676 * 37, p676 * 94);
    v1051.bezierCurveTo(p676 * 15, p676 * 68, p676 * 25, p676 * 52, p676 * 56, p676 * 34);
    v1051.closePath();
    f86(v1051, p678[1], p678[2], p676 * 10);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 167, p676 * 120);
    v1051.bezierCurveTo(p676 * 196, p676 * 106, p676 * 207, p676 * 111, p676 * 199, p676 * 135);
    v1051.bezierCurveTo(p676 * 185, p676 * 172, p676 * 166, p676 * 187, p676 * 145, p676 * 179);
    v1051.bezierCurveTo(p676 * 118, p676 * 166, p676 * 127, p676 * 139, p676 * 166, p676 * 121);
    v1051.closePath();
    f86(v1051, p678[3]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 25, p676 * 64);
    v1051.bezierCurveTo(p676 * 59, p676 * 96, p676 * 97, p676 * 128, p676 * 129, p676 * 151);
    v1051.bezierCurveTo(p676 * 126, p676 * 163, p676 * 134, p676 * 174, p676 * 142, p676 * 180);
    v1051.bezierCurveTo(p676 * 114, p676 * 170, p676 * 68, p676 * 134, p676 * 31, p676 * 85);
    v1051.bezierCurveTo(p676 * 24, p676 * 71, p676 * 24, p676 * 70, p676 * 25, p676 * 65);
    v1051.closePath();
    f86(v1051, p678[2]);
    v1051.beginPath();
    v1051.lineCap = "round";
    v1051.lineJoin = "round";
    v1051.moveTo(p676 * 161, p676 * 141);
    v1051.bezierCurveTo(p676 * 181, p676 * 131, p676 * 186, p676 * 135, p676 * 173, p676 * 152);
    v1051.bezierCurveTo(p676 * 163, p676 * 163, p676 * 155, p676 * 161, p676 * 151, p676 * 150);
    v1051.bezierCurveTo(p676 * 147, p676 * 140, p676 * 155, p676 * 131, p676 * 175, p676 * 125);
    v1051.bezierCurveTo(p676 * 190, p676 * 120, p676 * 196, p676 * 121, p676 * 189, p676 * 143);
    v1051.bezierCurveTo(p676 * 182, p676 * 167, p676 * 169, p676 * 174, p676 * 157, p676 * 174);
    v1051.bezierCurveTo(p676 * 138, p676 * 172, p676 * 139, p676 * 162, p676 * 140, p676 * 156);
    f86(v1051, vVUndefined26, p678[4], p676 * 4);
    return v1050;
  }
  function f151(p679, p680, p681) {
    var v1052 = document.createElement("canvas");
    var v1053 = v1052.getContext("2d");
    v1052.width = p679 * 154;
    v1052.height = p679 * 261;
    v1053.globalAlpha = p680 ? 0.5 : 1;
    v1053.translate(0, p679 * 10);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 125, p679 * 69);
    v1053.bezierCurveTo(p679 * 123.5, p679 * 141.5, p679 * 123.5, p679 * 141.5, p679 * 122, p679 * 214);
    v1053.bezierCurveTo(p679 * 123, p679 * 228, p679 * 119, p679 * 239, p679 * 102, p679 * 239);
    v1053.bezierCurveTo(p679 * 90, p679 * 238, p679 * 86, p679 * 225, p679 * 89, p679 * 197);
    v1053.bezierCurveTo(p679 * 92, p679 * 159, p679 * 92, p679 * 141, p679 * 94, p679 * 84);
    v1053.bezierCurveTo(p679 * 94, p679 * 58, p679 * 87, p679 * 50, p679 * 73, p679 * 52);
    v1053.bezierCurveTo(p679 * 53, p679 * 54, p679 * 54, p679 * 92, p679 * 34, p679 * 87);
    v1053.bezierCurveTo(p679 * 13, p679 * 85, p679 * 22, p679 * 58, p679 * 34, p679 * 40);
    v1053.bezierCurveTo(p679 * 44, p679 * 24, p679 * 68, p679 * 17, p679 * 86, p679 * 21);
    v1053.bezierCurveTo(p679 * 111, p679 * 23, p679 * 123, p679 * 39, p679 * 125, p679 * 67);
    v1053.closePath();
    f86(v1053, p681[0]);
    v1053.globalAlpha = 1;
    v1053.translate(0, p679 * -10);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 125, p679 * 69);
    v1053.bezierCurveTo(p679 * 123.5, p679 * 141.5, p679 * 123.5, p679 * 141.5, p679 * 122, p679 * 214);
    v1053.bezierCurveTo(p679 * 123, p679 * 228, p679 * 119, p679 * 239, p679 * 102, p679 * 239);
    v1053.bezierCurveTo(p679 * 90, p679 * 238, p679 * 86, p679 * 225, p679 * 89, p679 * 197);
    v1053.bezierCurveTo(p679 * 92, p679 * 159, p679 * 92, p679 * 141, p679 * 94, p679 * 84);
    v1053.bezierCurveTo(p679 * 94, p679 * 58, p679 * 87, p679 * 50, p679 * 73, p679 * 52);
    v1053.bezierCurveTo(p679 * 53, p679 * 54, p679 * 54, p679 * 92, p679 * 34, p679 * 87);
    v1053.bezierCurveTo(p679 * 13, p679 * 85, p679 * 22, p679 * 58, p679 * 34, p679 * 40);
    v1053.bezierCurveTo(p679 * 44, p679 * 24, p679 * 68, p679 * 17, p679 * 86, p679 * 21);
    v1053.bezierCurveTo(p679 * 111, p679 * 23, p679 * 123, p679 * 39, p679 * 125, p679 * 67);
    v1053.closePath();
    f86(v1053, p681[1], p681[2], p679 * 4);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 31, p679 * 43);
    v1053.bezierCurveTo(p679 * 31, p679 * 61, p679 * 43, p679 * 70, p679 * 51, p679 * 75);
    v1053.bezierCurveTo(p679 * 48, p679 * 84, p679 * 41, p679 * 89, p679 * 33, p679 * 86);
    v1053.bezierCurveTo(p679 * 23, p679 * 88, p679 * 20, p679 * 76, p679 * 23, p679 * 62);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 45, p679 * 29);
    v1053.bezierCurveTo(p679 * 49, p679 * 45, p679 * 61, p679 * 54, p679 * 64, p679 * 55);
    v1053.bezierCurveTo(p679 * 67.5, p679 * 53, p679 * 67.5, p679 * 53, p679 * 71, p679 * 51);
    v1053.bezierCurveTo(p679 * 80, p679 * 44, p679 * 83, p679 * 33, p679 * 82, p679 * 20);
    v1053.bezierCurveTo(p679 * 59, p679 * 17, p679 * 51, p679 * 23, p679 * 45, p679 * 30);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 86, p679 * 56);
    v1053.bezierCurveTo(p679 * 90, p679 * 33, p679 * 103, p679 * 25, p679 * 105, p679 * 27);
    v1053.bezierCurveTo(p679 * 116, p679 * 31, p679 * 121, p679 * 45, p679 * 122, p679 * 50);
    v1053.bezierCurveTo(p679 * 112, p679 * 62, p679 * 103, p679 * 63, p679 * 91, p679 * 62);
    v1053.bezierCurveTo(p679 * 89, p679 * 59.5, p679 * 89, p679 * 59.5, p679 * 87, p679 * 57);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 93, p679 * 81);
    v1053.bezierCurveTo(p679 * 109, p679 * 82, p679 * 123, p679 * 70, p679 * 124, p679 * 63);
    v1053.bezierCurveTo(p679 * 124, p679 * 75.5, p679 * 124, p679 * 75.5, p679 * 124, p679 * 88);
    v1053.bezierCurveTo(p679 * 119, p679 * 99, p679 * 103, p679 * 103, p679 * 94, p679 * 103);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 93, p679 * 124);
    v1053.bezierCurveTo(p679 * 108, p679 * 125, p679 * 122, p679 * 113, p679 * 124, p679 * 106);
    v1053.bezierCurveTo(p679 * 124, p679 * 119, p679 * 124, p679 * 129, p679 * 124, p679 * 132);
    v1053.bezierCurveTo(p679 * 110, p679 * 147, p679 * 94, p679 * 148, p679 * 90, p679 * 147);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 90, p679 * 170);
    v1053.bezierCurveTo(p679 * 104, p679 * 166, p679 * 122, p679 * 158, p679 * 122, p679 * 151);
    v1053.bezierCurveTo(p679 * 122, p679 * 162.5, p679 * 122, p679 * 162.5, p679 * 122, p679 * 174);
    v1053.bezierCurveTo(p679 * 111, p679 * 191, p679 * 97, p679 * 191, p679 * 89, p679 * 191);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 88, p679 * 208);
    v1053.bezierCurveTo(p679 * 100, p679 * 209, p679 * 115, p679 * 205, p679 * 122, p679 * 193);
    v1053.bezierCurveTo(p679 * 122, p679 * 205.5, p679 * 122, p679 * 205.5, p679 * 122, p679 * 218);
    v1053.bezierCurveTo(p679 * 115, p679 * 229, p679 * 103, p679 * 235, p679 * 90, p679 * 228);
    v1053.bezierCurveTo(p679 * 88, p679 * 224, p679 * 88, p679 * 217, p679 * 88, p679 * 211);
    v1053.closePath();
    f86(v1053, p681[3]);
    v1053.globalAlpha = 0.4;
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 22, p679 * 81);
    v1053.bezierCurveTo(p679 * 32, p679 * 84, p679 * 41, p679 * 81, p679 * 45, p679 * 68);
    v1053.bezierCurveTo(p679 * 50, p679 * 50, p679 * 62, p679 * 40, p679 * 79, p679 * 43);
    v1053.bezierCurveTo(p679 * 95, p679 * 45, p679 * 102, p679 * 58, p679 * 101, p679 * 81);
    v1053.bezierCurveTo(p679 * 99.5, p679 * 120.5, p679 * 99.5, p679 * 120.5, p679 * 98, p679 * 160);
    v1053.bezierCurveTo(p679 * 96.5, p679 * 191.5, p679 * 96.5, p679 * 191.5, p679 * 95, p679 * 223);
    v1053.bezierCurveTo(p679 * 93, p679 * 232, p679 * 101, p679 * 235, p679 * 108, p679 * 238);
    v1053.bezierCurveTo(p679 * 100, p679 * 240, p679 * 90, p679 * 233, p679 * 90, p679 * 224);
    v1053.bezierCurveTo(p679 * 92, p679 * 157, p679 * 92, p679 * 157, p679 * 94, p679 * 90);
    v1053.bezierCurveTo(p679 * 94, p679 * 56, p679 * 89, p679 * 53, p679 * 77, p679 * 51);
    v1053.bezierCurveTo(p679 * 58, p679 * 50, p679 * 54, p679 * 59, p679 * 49, p679 * 75);
    v1053.bezierCurveTo(p679 * 44, p679 * 91, p679 * 28, p679 * 90, p679 * 23, p679 * 81);
    v1053.closePath();
    f86(v1053, p681[0]);
    v1053.globalAlpha = 1;
    v1053.beginPath();
    v1053.lineCap = "round";
    v1053.lineJoin = "round";
    v1053.moveTo(p679 * 82, p679 * 123);
    v1053.bezierCurveTo(p679 * 88, p679 * 130, p679 * 88, p679 * 127, p679 * 94, p679 * 128);
    v1053.bezierCurveTo(p679 * 91, p679 * 136, p679 * 94, p679 * 137, p679 * 99, p679 * 142);
    v1053.bezierCurveTo(p679 * 97, p679 * 149, p679 * 99, p679 * 152, p679 * 105, p679 * 155);
    v1053.bezierCurveTo(p679 * 107, p679 * 159, p679 * 113, p679 * 159, p679 * 120, p679 * 158);
    v1053.bezierCurveTo(p679 * 121, p679 * 160, p679 * 125, p679 * 163, p679 * 132, p679 * 163);
    v1053.bezierCurveTo(p679 * 133, p679 * 166, p679 * 136, p679 * 169, p679 * 138, p679 * 170);
    v1053.bezierCurveTo(p679 * 133, p679 * 171, p679 * 132, p679 * 172, p679 * 129, p679 * 174);
    v1053.bezierCurveTo(p679 * 122, p679 * 170, p679 * 120, p679 * 170, p679 * 116, p679 * 174);
    v1053.bezierCurveTo(p679 * 108, p679 * 170.5, p679 * 108, p679 * 170.5, p679 * 100, p679 * 167);
    v1053.bezierCurveTo(p679 * 95, p679 * 172, p679 * 94, p679 * 179, p679 * 95, p679 * 184);
    v1053.bezierCurveTo(p679 * 87, p679 * 185, p679 * 87, p679 * 189, p679 * 88, p679 * 194);
    v1053.bezierCurveTo(p679 * 82, p679 * 194, p679 * 81, p679 * 195, p679 * 79, p679 * 197);
    v1053.bezierCurveTo(p679 * 78, p679 * 192, p679 * 78, p679 * 191, p679 * 77, p679 * 189);
    v1053.bezierCurveTo(p679 * 81, p679 * 185, p679 * 82, p679 * 183, p679 * 80, p679 * 176);
    v1053.bezierCurveTo(p679 * 89, p679 * 170, p679 * 92, p679 * 168, p679 * 95, p679 * 163);
    v1053.bezierCurveTo(p679 * 91, p679 * 151, p679 * 88, p679 * 151, p679 * 82, p679 * 147);
    v1053.bezierCurveTo(p679 * 85, p679 * 142, p679 * 85, p679 * 137, p679 * 81, p679 * 133);
    v1053.bezierCurveTo(p679 * 84, p679 * 127, p679 * 84, p679 * 125, p679 * 82, p679 * 124);
    v1053.closePath();
    f86(v1053, p681[4], p681[5], p679 * 4);
    f87(v1053, p679 * 107, p679 * 152, p679 * 9);
    f86(v1053, p681[6]);
    f87(v1053, p679 * 105, p679 * 173, p679 * 9);
    f86(v1053, p681[6]);
    f87(v1053, p679 * 87, p679 * 161, p679 * 9);
    f86(v1053, p681[6]);
    f87(v1053, p679 * 106, p679 * 147, p679 * 4);
    f86(v1053, p681[7]);
    f87(v1053, p679 * 104, p679 * 167, p679 * 4);
    f86(v1053, p681[7]);
    f87(v1053, p679 * 86, p679 * 154, p679 * 4);
    f86(v1053, p681[7]);
    return v1052;
  }
  function f152(p682, p683, p684) {
    var v1054 = document.createElement("canvas");
    var v1055 = v1054.getContext("2d");
    v1054.width = p682 * 350;
    v1054.height = p682 * 140;
    v1055.translate(p682 * -50, p682 * -150);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 184.5, p682 * 222.0625);
    v1055.bezierCurveTo(p682 * 185.5, p682 * 184.0625, p682 * 302.5, p682 * 171.0625, p682 * 313.5, p682 * 222.0625);
    v1055.bezierCurveTo(p682 * 330.5, p682 * 263.0625, p682 * 181.5, p682 * 274.0625, p682 * 184.5, p682 * 223.0625);
    v1055.closePath();
    f86(v1055, p684[0], p684[1], p682 * 8);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 131.5, p682 * 241.0625);
    v1055.bezierCurveTo(p682 * 144.5, p682 * 278.0625, p682 * 270.5, p682 * 209.0625, p682 * 228.5, p682 * 174.0625);
    v1055.bezierCurveTo(p682 * 196.5, p682 * 147.0625, p682 * 117.5, p682 * 196.0625, p682 * 131.5, p682 * 240.0625);
    v1055.closePath();
    f86(v1055, p684[0], p684[1], p682 * 8);
    f87(v1055, p682 * 270.5, p682 * 225.0625, p682 * 15.811388300841896);
    f86(v1055, p684[2]);
    f87(v1055, p682 * 243.5, p682 * 225.0625, p682 * 6.082762530298219);
    f86(v1055, p684[2]);
    f87(v1055, p682 * 255.5, p682 * 210.0625, p682 * 10.816653826391969);
    f86(v1055, p684[2]);
    f87(v1055, p682 * 167.5, p682 * 215.0625, p682 * 15.297058540778355);
    f86(v1055, p684[2]);
    f87(v1055, p682 * 176.5, p682 * 204.0625, p682 * 7.280109889280518);
    f86(v1055, p684[2]);
    f87(v1055, p682 * 206.5, p682 * 189.0625, p682 * 7.280109889280518);
    f86(v1055, p684[2]);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 151.5, p682 * 212.0625);
    v1055.bezierCurveTo(p682 * 161.5, p682 * 204.0625, p682 * 173.5, p682 * 214.0625, p682 * 158.5, p682 * 221.0625);
    v1055.bezierCurveTo(p682 * 145.5, p682 * 228.0625, p682 * 144.5, p682 * 216.0625, p682 * 151.5, p682 * 212.0625);
    v1055.closePath();
    f86(v1055, p684[3], p684[4], p682 * 4);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 194.5, p682 * 209.0625);
    v1055.bezierCurveTo(p682 * 205.5, p682 * 202.0625, p682 * 215.5, p682 * 207.0625, p682 * 199.5, p682 * 217.0625);
    v1055.bezierCurveTo(p682 * 187.5, p682 * 224.0625, p682 * 182.5, p682 * 217.0625, p682 * 194.5, p682 * 209.0625);
    v1055.closePath();
    f86(v1055, p684[3], p684[4], p682 * 4);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 188.5, p682 * 183.0625);
    v1055.bezierCurveTo(p682 * 201.5, p682 * 176.0625, p682 * 213.5, p682 * 187.0625, p682 * 193.5, p682 * 193.0625);
    v1055.bezierCurveTo(p682 * 185.5, p682 * 194.0625, p682 * 175.5, p682 * 189.0625, p682 * 188.5, p682 * 183.0625);
    v1055.closePath();
    f86(v1055, p684[3], p684[4], p682 * 4);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 261.5, p682 * 202.0625);
    v1055.bezierCurveTo(p682 * 274.5, p682 * 201.0625, p682 * 282.5, p682 * 214.0625, p682 * 261.5, p682 * 215.0625);
    v1055.bezierCurveTo(p682 * 246.5, p682 * 214.0625, p682 * 248.5, p682 * 203.0625, p682 * 261.5, p682 * 202.0625);
    v1055.closePath();
    f86(v1055, p684[3], p684[4], p682 * 4);
    v1055.beginPath();
    v1055.lineCap = "round";
    v1055.lineJoin = "round";
    v1055.moveTo(p682 * 240.5, p682 * 231.0625);
    v1055.bezierCurveTo(p682 * 255.5, p682 * 231.0625, p682 * 254.5, p682 * 243.0625, p682 * 240.5, p682 * 242.0625);
    v1055.bezierCurveTo(p682 * 225.5, p682 * 239.0625, p682 * 225.5, p682 * 232.0625, p682 * 240.5, p682 * 231.0625);
    v1055.closePath();
    f86(v1055, p684[3], p684[4], p682 * 4);
    return v1054;
  }
  function f153(p685, p686, p687, p688, p689, p690, p691, p692, p693, p694, p695 = 0) {
    var v1056 = document.createElement("canvas");
    var v1057 = v1056.getContext("2d");
    p690 = p690 ? p685 * p690 : 0;
    var v1058 = Math.floor(p685 * p687);
    v1057.font = v1058 + "px Baloo Paaji";
    v1057.lineJoin = "round";
    p692 *= p685;
    var v1059 = p691 ? p692 * 2 : 0;
    if (p693) {
      var v1060 = Math.min(v1057.measureText(p686).width + p685 * 2 + v1059, p693);
    } else {
      v1060 = v1057.measureText(p686).width + p685 * 2 + v1059 + p695 * p685 * 2;
    }
    v1058 = p685 * (v1058 + p690 + p695) + v1059;
    v1056.width = v1060;
    v1056.height = v1058;
    if (p691) {
      v1057.fillStyle = p691;
      f89(v1057, 0, 0, v1060, v1058, p692 * 2);
      v1057.fill();
      v1057.translate(p692, p692);
    }
    v1057.textBaseline = "middle";
    v1057.font = p687 + "px Baloo Paaji";
    v1057.lineJoin = "round";
    if (p689) {
      v1057.beginPath();
      v1057.fillStyle = p689;
      v1057.fillText(p686, 0, v1058 / 2 + p690 - v1059 / 2, v1060);
    }
    v1057.beginPath();
    if (p694) {
      v1057.strokeStyle = p694;
      v1057.lineWidth = p695;
      v1057.strokeText(p686, p695, (v1058 - v1059) / 2, v1060);
    }
    v1057.fillStyle = p688;
    v1057.fillText(p686, p695, (v1058 - v1059) / 2, v1060);
    return v1056;
  }
  function f154(p696, p697, p698) {
    var v1061 = document.createElement("canvas");
    var v1062 = v1061.getContext("2d");
    v1061.width = p696 * 217;
    v1061.height = p696 * 215;
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 79, p696 * 113);
    v1062.bezierCurveTo(p696 * 135, p696 * 98, p696 * 136, p696 * 96, p696 * 142, p696 * 97);
    v1062.bezierCurveTo(p696 * 167, p696 * 106, p696 * 167, p696 * 106, p696 * 171, p696 * 109);
    v1062.bezierCurveTo(p696 * 173, p696 * 120, p696 * 173, p696 * 134, p696 * 169, p696 * 141);
    v1062.bezierCurveTo(p696 * 140, p696 * 149.5, p696 * 140, p696 * 149.5, p696 * 111, p696 * 158);
    v1062.closePath();
    f86(v1062, p698[1], p698[2], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 154, p696 * 103);
    v1062.bezierCurveTo(p696 * 167, p696 * 91, p696 * 175, p696 * 87, p696 * 176, p696 * 94);
    v1062.bezierCurveTo(p696 * 175, p696 * 102, p696 * 176, p696 * 102, p696 * 186, p696 * 103);
    v1062.bezierCurveTo(p696 * 191, p696 * 104, p696 * 192, p696 * 105, p696 * 185, p696 * 116);
    v1062.bezierCurveTo(p696 * 183, p696 * 120, p696 * 191, p696 * 124, p696 * 189, p696 * 129);
    v1062.bezierCurveTo(p696 * 185, p696 * 139, p696 * 178, p696 * 134, p696 * 166, p696 * 131);
    v1062.closePath();
    f86(v1062, p698[1], p698[2], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 60, p696 * 46);
    v1062.bezierCurveTo(p696 * 60, p696 * 34, p696 * 60, p696 * 29, p696 * 56, p696 * 19);
    v1062.bezierCurveTo(p696 * 52, p696 * 12, p696 * 52, p696 * 16, p696 * 49, p696 * 24);
    v1062.bezierCurveTo(p696 * 48, p696 * 27, p696 * 46, p696 * 28, p696 * 39, p696 * 27);
    v1062.bezierCurveTo(p696 * 33, p696 * 26, p696 * 34, p696 * 31, p696 * 35, p696 * 37);
    v1062.bezierCurveTo(p696 * 36, p696 * 41, p696 * 27, p696 * 46, p696 * 29, p696 * 52);
    v1062.bezierCurveTo(p696 * 36, p696 * 55, p696 * 35, p696 * 56, p696 * 31, p696 * 59);
    v1062.bezierCurveTo(p696 * 27, p696 * 65, p696 * 32, p696 * 64, p696 * 35, p696 * 62);
    v1062.closePath();
    f86(v1062, p698[4], p698[5], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 46, p696 * 50);
    v1062.bezierCurveTo(p696 * 51, p696 * 35, p696 * 70, p696 * 32, p696 * 78, p696 * 29);
    v1062.bezierCurveTo(p696 * 84, p696 * 27, p696 * 113, p696 * 36, p696 * 127, p696 * 41);
    v1062.bezierCurveTo(p696 * 140, p696 * 47, p696 * 147, p696 * 69, p696 * 137, p696 * 73);
    v1062.bezierCurveTo(p696 * 124, p696 * 92, p696 * 117, p696 * 92, p696 * 109, p696 * 94);
    v1062.bezierCurveTo(p696 * 101, p696 * 96, p696 * 89, p696 * 92, p696 * 65, p696 * 83);
    v1062.bezierCurveTo(p696 * 54, p696 * 80, p696 * 46, p696 * 58, p696 * 46, p696 * 51);
    v1062.closePath();
    f86(v1062, p698[4], p698[5], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 51, p696 * 40);
    v1062.bezierCurveTo(p696 * 49, p696 * 34, p696 * 49, p696 * 34, p696 * 47, p696 * 28);
    v1062.bezierCurveTo(p696 * 38, p696 * 28, p696 * 34, p696 * 27, p696 * 37, p696 * 37);
    v1062.bezierCurveTo(p696 * 43, p696 * 40.5, p696 * 43, p696 * 40.5, p696 * 49, p696 * 44);
    v1062.closePath();
    f86(v1062, p698[7]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 29, p696 * 48);
    v1062.bezierCurveTo(p696 * 38, p696 * 49, p696 * 38, p696 * 49, p696 * 47, p696 * 50);
    v1062.bezierCurveTo(p696 * 46.5, p696 * 51.5, p696 * 46.5, p696 * 51.5, p696 * 46, p696 * 53);
    v1062.bezierCurveTo(p696 * 40, p696 * 53.5, p696 * 40, p696 * 53.5, p696 * 34, p696 * 54);
    v1062.bezierCurveTo(p696 * 29, p696 * 51, p696 * 32, p696 * 51.5, p696 * 30, p696 * 49);
    v1062.closePath();
    f86(v1062, p698[7]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 89, p696 * 61);
    v1062.bezierCurveTo(p696 * 101, p696 * 70, p696 * 109, p696 * 90, p696 * 102, p696 * 90);
    v1062.bezierCurveTo(p696 * 97, p696 * 91, p696 * 87, p696 * 91, p696 * 60, p696 * 80);
    v1062.bezierCurveTo(p696 * 48, p696 * 65, p696 * 46, p696 * 56, p696 * 48, p696 * 53);
    v1062.bezierCurveTo(p696 * 50, p696 * 52, p696 * 66, p696 * 56, p696 * 89, p696 * 61);
    v1062.closePath();
    f86(v1062, p698[7]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 99, p696 * 59);
    v1062.bezierCurveTo(p696 * 115, p696 * 45, p696 * 125, p696 * 42, p696 * 129, p696 * 47);
    v1062.bezierCurveTo(p696 * 138, p696 * 56, p696 * 140, p696 * 63, p696 * 138, p696 * 67);
    v1062.bezierCurveTo(p696 * 131, p696 * 80, p696 * 122, p696 * 87, p696 * 114, p696 * 90);
    v1062.bezierCurveTo(p696 * 105, p696 * 80, p696 * 95, p696 * 62, p696 * 98, p696 * 61);
    v1062.closePath();
    f86(v1062, p698[7]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 118, p696 * 62);
    v1062.bezierCurveTo(p696 * 139, p696 * 45, p696 * 153, p696 * 40, p696 * 150, p696 * 48);
    v1062.bezierCurveTo(p696 * 145, p696 * 57, p696 * 157, p696 * 63, p696 * 157, p696 * 70);
    v1062.bezierCurveTo(p696 * 157, p696 * 74, p696 * 142, p696 * 77, p696 * 142, p696 * 85);
    v1062.bezierCurveTo(p696 * 143, p696 * 91, p696 * 141, p696 * 92, p696 * 135, p696 * 90);
    v1062.bezierCurveTo(p696 * 132, p696 * 90, p696 * 132, p696 * 96, p696 * 124, p696 * 99);
    v1062.bezierCurveTo(p696 * 118, p696 * 93, p696 * 116, p696 * 77, p696 * 116, p696 * 64);
    v1062.closePath();
    f86(v1062, p698[4], p698[5], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 90, p696 * 130);
    v1062.bezierCurveTo(p696 * 157, p696 * 115, p696 * 165, p696 * 111, p696 * 167, p696 * 115);
    v1062.bezierCurveTo(p696 * 170, p696 * 117, p696 * 171, p696 * 135, p696 * 167, p696 * 141);
    v1062.bezierCurveTo(p696 * 135.5, p696 * 149.5, p696 * 135.5, p696 * 149.5, p696 * 104, p696 * 158);
    v1062.closePath();
    f86(v1062, p698[8]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 53, p696 * 119);
    v1062.bezierCurveTo(p696 * 46, p696 * 120, p696 * 40, p696 * 118, p696 * 34, p696 * 116);
    v1062.bezierCurveTo(p696 * 28, p696 * 111, p696 * 41, p696 * 112, p696 * 39, p696 * 108);
    v1062.bezierCurveTo(p696 * 36, p696 * 100, p696 * 49, p696 * 102, p696 * 53, p696 * 95);
    v1062.bezierCurveTo(p696 * 57, p696 * 84, p696 * 58, p696 * 85, p696 * 63, p696 * 93);
    v1062.bezierCurveTo(p696 * 68, p696 * 96, p696 * 72, p696 * 94, p696 * 80, p696 * 88);
    v1062.bezierCurveTo(p696 * 80, p696 * 96, p696 * 78, p696 * 107, p696 * 66, p696 * 115);
    v1062.closePath();
    f86(v1062, p698[9], p698[10], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 118, p696 * 64);
    v1062.bezierCurveTo(p696 * 133.5, p696 * 57, p696 * 133.5, p696 * 57, p696 * 149, p696 * 50);
    v1062.bezierCurveTo(p696 * 145, p696 * 54, p696 * 154, p696 * 65, p696 * 157, p696 * 68);
    v1062.bezierCurveTo(p696 * 138.5, p696 * 66.5, p696 * 138.5, p696 * 66.5, p696 * 120, p696 * 65);
    v1062.closePath();
    f86(v1062, p698[8]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 118, p696 * 65);
    v1062.bezierCurveTo(p696 * 129, p696 * 77, p696 * 129, p696 * 77, p696 * 140, p696 * 89);
    v1062.bezierCurveTo(p696 * 131, p696 * 89, p696 * 130, p696 * 92, p696 * 128, p696 * 96);
    v1062.bezierCurveTo(p696 * 123.5, p696 * 82, p696 * 123.5, p696 * 82, p696 * 119, p696 * 68);
    v1062.closePath();
    f86(v1062, p698[8]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 51, p696 * 112);
    v1062.bezierCurveTo(p696 * 63, p696 * 108, p696 * 78, p696 * 111, p696 * 88, p696 * 112);
    v1062.bezierCurveTo(p696 * 98, p696 * 122, p696 * 117, p696 * 136, p696 * 125, p696 * 157);
    v1062.bezierCurveTo(p696 * 123, p696 * 180, p696 * 123, p696 * 185, p696 * 118, p696 * 186);
    v1062.bezierCurveTo(p696 * 101, p696 * 190, p696 * 89, p696 * 191, p696 * 79, p696 * 187);
    v1062.bezierCurveTo(p696 * 53, p696 * 165, p696 * 50, p696 * 153, p696 * 47, p696 * 144);
    v1062.bezierCurveTo(p696 * 46, p696 * 128, p696 * 46, p696 * 124, p696 * 50, p696 * 112);
    v1062.closePath();
    f86(v1062, p698[9], p698[10], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 50, p696 * 114);
    v1062.bezierCurveTo(p696 * 81, p696 * 149, p696 * 80, p696 * 147, p696 * 80, p696 * 149);
    v1062.bezierCurveTo(p696 * 82, p696 * 155, p696 * 80, p696 * 182, p696 * 74, p696 * 182);
    v1062.bezierCurveTo(p696 * 60, p696 * 172, p696 * 52, p696 * 157, p696 * 47, p696 * 144);
    v1062.closePath();
    f86(v1062, p698[11], p698[11], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 85, p696 * 152);
    v1062.bezierCurveTo(p696 * 99, p696 * 150, p696 * 109, p696 * 152, p696 * 119, p696 * 156);
    v1062.bezierCurveTo(p696 * 122, p696 * 163, p696 * 122, p696 * 174, p696 * 117, p696 * 182);
    v1062.closePath();
    v1062.bezierCurveTo(p696 * 93, p696 * 188, p696 * 82, p696 * 187, p696 * 83, p696 * 179);
    f86(v1062, p698[11], p698[11], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 104, p696 * 166);
    v1062.bezierCurveTo(p696 * 133, p696 * 165, p696 * 142, p696 * 168, p696 * 137, p696 * 173);
    v1062.bezierCurveTo(p696 * 127, p696 * 177, p696 * 137, p696 * 195, p696 * 126, p696 * 196);
    v1062.bezierCurveTo(p696 * 112, p696 * 195, p696 * 112, p696 * 194, p696 * 109, p696 * 199);
    v1062.bezierCurveTo(p696 * 105, p696 * 205, p696 * 102, p696 * 195, p696 * 96, p696 * 197);
    v1062.bezierCurveTo(p696 * 84, p696 * 201, p696 * 88, p696 * 198, p696 * 90, p696 * 187);
    v1062.bezierCurveTo(p696 * 96, p696 * 171, p696 * 97, p696 * 170, p696 * 103, p696 * 167);
    v1062.closePath();
    f86(v1062, p698[9], p698[10], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 105, p696 * 168);
    v1062.bezierCurveTo(p696 * 118, p696 * 172.5, p696 * 118, p696 * 172.5, p696 * 131, p696 * 177);
    v1062.bezierCurveTo(p696 * 133, p696 * 190, p696 * 132, p696 * 199, p696 * 116, p696 * 194);
    v1062.bezierCurveTo(p696 * 110, p696 * 182, p696 * 110, p696 * 182, p696 * 104, p696 * 170);
    v1062.closePath();
    f86(v1062, p698[10]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 102, p696 * 169);
    v1062.bezierCurveTo(p696 * 100.5, p696 * 182, p696 * 100.5, p696 * 182, p696 * 99, p696 * 195);
    v1062.bezierCurveTo(p696 * 93.5, p696 * 196.5, p696 * 93.5, p696 * 196.5, p696 * 88, p696 * 198);
    v1062.bezierCurveTo(p696 * 94, p696 * 176, p696 * 96, p696 * 174, p696 * 101, p696 * 168);
    v1062.closePath();
    f86(v1062, p698[9], p698[9], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 64, p696 * 107);
    v1062.bezierCurveTo(p696 * 64, p696 * 101, p696 * 64, p696 * 101, p696 * 64, p696 * 95);
    v1062.bezierCurveTo(p696 * 57, p696 * 86, p696 * 57, p696 * 84, p696 * 53, p696 * 97);
    v1062.bezierCurveTo(p696 * 55, p696 * 103.5, p696 * 55, p696 * 103.5, p696 * 57, p696 * 110);
    v1062.closePath();
    f86(v1062, p698[11], p698[11], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 40, p696 * 108);
    v1062.bezierCurveTo(p696 * 46.5, p696 * 111, p696 * 46.5, p696 * 111, p696 * 53, p696 * 114);
    v1062.bezierCurveTo(p696 * 50.5, p696 * 117, p696 * 50.5, p696 * 117, p696 * 48, p696 * 120);
    v1062.bezierCurveTo(p696 * 40.5, p696 * 117.5, p696 * 40.5, p696 * 117.5, p696 * 33, p696 * 115);
    v1062.bezierCurveTo(p696 * 36, p696 * 112, p696 * 36, p696 * 112, p696 * 39, p696 * 109);
    v1062.closePath();
    f86(v1062, p698[11], p698[11], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 189, p696 * 106);
    v1062.bezierCurveTo(p696 * 178.5, p696 * 110.5, p696 * 178.5, p696 * 110.5, p696 * 168, p696 * 115);
    v1062.bezierCurveTo(p696 * 168.5, p696 * 119, p696 * 168.5, p696 * 119, p696 * 169, p696 * 123);
    v1062.bezierCurveTo(p696 * 179, p696 * 124.5, p696 * 179, p696 * 124.5, p696 * 189, p696 * 126);
    v1062.bezierCurveTo(p696 * 182, p696 * 118, p696 * 183, p696 * 115, p696 * 188, p696 * 106);
    v1062.closePath();
    f86(v1062, p698[8]);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 69, p696 * 178);
    v1062.bezierCurveTo(p696 * 69, p696 * 141, p696 * 70, p696 * 136, p696 * 77, p696 * 137);
    v1062.bezierCurveTo(p696 * 88, p696 * 133, p696 * 101, p696 * 134, p696 * 108, p696 * 137);
    f86(v1062, vUndefined, p698[3], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 55, p696 * 161);
    v1062.bezierCurveTo(p696 * 54, p696 * 124, p696 * 55, p696 * 119, p696 * 62, p696 * 119);
    v1062.bezierCurveTo(p696 * 74, p696 * 117, p696 * 85, p696 * 117, p696 * 93, p696 * 119);
    f86(v1062, vVVUndefined272, p698[3], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 91, p696 * 29);
    v1062.bezierCurveTo(p696 * 74, p696 * 33, p696 * 62, p696 * 46, p696 * 57, p696 * 54);
    v1062.bezierCurveTo(p696 * 57, p696 * 63, p696 * 68, p696 * 76, p696 * 77, p696 * 87);
    f86(v1062, vVUndefined27, p698[6], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 107, p696 * 33);
    v1062.bezierCurveTo(p696 * 82, p696 * 51, p696 * 80, p696 * 52, p696 * 79, p696 * 59);
    v1062.bezierCurveTo(p696 * 78, p696 * 65, p696 * 93, p696 * 86, p696 * 101, p696 * 93);
    f86(v1062, vVUndefined27, p698[6], p696 * 4);
    v1062.beginPath();
    v1062.lineCap = "round";
    v1062.lineJoin = "round";
    v1062.moveTo(p696 * 130, p696 * 98);
    v1062.bezierCurveTo(p696 * 126.5, p696 * 103, p696 * 126.5, p696 * 103, p696 * 123, p696 * 108);
    v1062.bezierCurveTo(p696 * 133.5, p696 * 107, p696 * 133.5, p696 * 107, p696 * 144, p696 * 106);
    v1062.bezierCurveTo(p696 * 138.5, p696 * 110, p696 * 138.5, p696 * 110, p696 * 133, p696 * 114);
    v1062.bezierCurveTo(p696 * 142, p696 * 114, p696 * 142, p696 * 114, p696 * 151, p696 * 114);
    v1062.bezierCurveTo(p696 * 146.5, p696 * 119.5, p696 * 146.5, p696 * 119.5, p696 * 142, p696 * 125);
    v1062.bezierCurveTo(p696 * 146.5, p696 * 127, p696 * 146.5, p696 * 127, p696 * 151, p696 * 129);
    v1062.bezierCurveTo(p696 * 147.5, p696 * 132, p696 * 147.5, p696 * 132, p696 * 144, p696 * 135);
    v1062.bezierCurveTo(p696 * 148, p696 * 137, p696 * 148, p696 * 137, p696 * 152, p696 * 139);
    v1062.bezierCurveTo(p696 * 149, p696 * 142.5, p696 * 149, p696 * 142.5, p696 * 146, p696 * 146);
    f86(v1062, vVVVVUndefined1972, p698[3], p696 * 4);
    return v1061;
  }
  function f155(p699, p700, p701) {
    var v1063 = document.createElement("canvas");
    var v1064 = v1063.getContext("2d");
    var v1065 = p699 * 70;
    var v1066 = p699 * 90;
    var v1067 = p699 * 4;
    var v1068 = p699 * 5;
    v1063.width = v1065;
    v1063.height = v1066;
    v1064.save();
    v1064.translate(p699 * -80, p699 * -70 + v1068);
    v1064.globalAlpha = 0.5;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 130, p699 * 79, p699 * 132, p699 * 86, p699 * 130, p699 * 93);
    v1064.bezierCurveTo(p699 * 128, p699 * 100, p699 * 121, p699 * 107, p699 * 120, p699 * 107);
    v1064.bezierCurveTo(p699 * 120, p699 * 107, p699 * 115, p699 * 98, p699 * 115, p699 * 92);
    v1064.bezierCurveTo(p699 * 115, p699 * 86, p699 * 119, p699 * 76, p699 * 127, p699 * 73);
    v1064.closePath();
    f86(v1064, "#0d1b1c");
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * -80, p699 * -70 + v1068);
    v1064.globalAlpha = 0.5;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 112, p699 * 109, p699 * 111, p699 * 100, p699 * 106, p699 * 93);
    v1064.bezierCurveTo(p699 * 104, p699 * 90, p699 * 91, p699 * 87, p699 * 91, p699 * 87);
    v1064.bezierCurveTo(p699 * 91, p699 * 88, p699 * 91, p699 * 96, p699 * 94, p699 * 102);
    v1064.bezierCurveTo(p699 * 97, p699 * 108, p699 * 106, p699 * 112, p699 * 113, p699 * 112);
    v1064.closePath();
    f86(v1064, "#0d1b1c");
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * -80, p699 * -70 + v1068);
    v1064.globalAlpha = 0.5;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 108, p699 * 120, p699 * 100, p699 * 119, p699 * 91, p699 * 127);
    v1064.bezierCurveTo(p699 * 83, p699 * 134, p699 * 82, p699 * 146, p699 * 83, p699 * 146);
    v1064.bezierCurveTo(p699 * 84, p699 * 146, p699 * 98, p699 * 142, p699 * 103, p699 * 138);
    v1064.bezierCurveTo(p699 * 107, p699 * 135, p699 * 110, p699 * 130, p699 * 112, p699 * 121);
    v1064.closePath();
    f86(v1064, "#0d1b1c");
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * 3, p699 * -93 + v1068);
    v1064.rotate(Math.PI / 5);
    v1064.globalAlpha = 0.5;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 130, p699 * 79, p699 * 132, p699 * 86, p699 * 130, p699 * 93);
    v1064.bezierCurveTo(p699 * 128, p699 * 100, p699 * 121, p699 * 107, p699 * 120, p699 * 107);
    v1064.bezierCurveTo(p699 * 120, p699 * 107, p699 * 115, p699 * 98, p699 * 115, p699 * 92);
    v1064.bezierCurveTo(p699 * 115, p699 * 86, p699 * 119, p699 * 76, p699 * 127, p699 * 73);
    v1064.closePath();
    f86(v1064, "#0d1b1c");
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * -80, p699 * -70);
    v1064.globalAlpha = 1;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 130, p699 * 79, p699 * 132, p699 * 86, p699 * 130, p699 * 93);
    v1064.bezierCurveTo(p699 * 128, p699 * 100, p699 * 121, p699 * 107, p699 * 120, p699 * 107);
    v1064.bezierCurveTo(p699 * 120, p699 * 107, p699 * 115, p699 * 98, p699 * 115, p699 * 92);
    v1064.bezierCurveTo(p699 * 115, p699 * 86, p699 * 119, p699 * 76, p699 * 127, p699 * 73);
    v1064.closePath();
    f86(v1064, p701[0], p701[1], v1067);
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * -80, p699 * -70);
    v1064.globalAlpha = 1;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 112, p699 * 109, p699 * 111, p699 * 100, p699 * 106, p699 * 93);
    v1064.bezierCurveTo(p699 * 104, p699 * 90, p699 * 91, p699 * 87, p699 * 91, p699 * 87);
    v1064.bezierCurveTo(p699 * 91, p699 * 88, p699 * 91, p699 * 96, p699 * 94, p699 * 102);
    v1064.bezierCurveTo(p699 * 97, p699 * 108, p699 * 106, p699 * 112, p699 * 113, p699 * 112);
    v1064.closePath();
    f86(v1064, p701[0], p701[1], v1067);
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * -80, p699 * -70);
    v1064.globalAlpha = 1;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 108, p699 * 120, p699 * 100, p699 * 119, p699 * 91, p699 * 127);
    v1064.bezierCurveTo(p699 * 83, p699 * 134, p699 * 82, p699 * 146, p699 * 83, p699 * 146);
    v1064.bezierCurveTo(p699 * 84, p699 * 146, p699 * 98, p699 * 142, p699 * 103, p699 * 138);
    v1064.bezierCurveTo(p699 * 107, p699 * 135, p699 * 110, p699 * 130, p699 * 112, p699 * 121);
    v1064.closePath();
    f86(v1064, p701[0], p701[1], v1067);
    v1064.restore();
    v1064.save();
    v1064.translate(p699 * 3, p699 * -93);
    v1064.rotate(Math.PI / 5);
    v1064.globalAlpha = 1;
    v1064.beginPath();
    v1064.bezierCurveTo(p699 * 130, p699 * 79, p699 * 132, p699 * 86, p699 * 130, p699 * 93);
    v1064.bezierCurveTo(p699 * 128, p699 * 100, p699 * 121, p699 * 107, p699 * 120, p699 * 107);
    v1064.bezierCurveTo(p699 * 120, p699 * 107, p699 * 115, p699 * 98, p699 * 115, p699 * 92);
    v1064.bezierCurveTo(p699 * 115, p699 * 86, p699 * 119, p699 * 76, p699 * 127, p699 * 73);
    v1064.closePath();
    f86(v1064, p701[0], p701[1], v1067);
    v1064.restore();
    return v1063;
  }
  function f156(p702, p703, p704) {
    var v1069 = document.createElement("canvas");
    var v1070 = v1069.getContext("2d");
    var v1071 = p702 * 220;
    var v1072 = p702 * 230;
    var v1073 = p702 * 100;
    var v1074 = v1073 / 4;
    var v1075 = p702 * 20;
    v1069.width = v1071;
    v1069.height = v1072;
    v1070.translate(v1071 / 2, v1072 / 2 + v1075);
    v1070.globalAlpha = 0.5;
    f92(v1070, 7, v1073, v1074);
    f86(v1070, p704[0]);
    v1070.globalAlpha = 1;
    v1070.translate(0, -v1075);
    f92(v1070, 7, v1073, v1074);
    f86(v1070, p704[1]);
    f92(v1070, 6, v1073 * 0.65, v1074 * 0.65);
    f86(v1070, p704[2]);
    return v1069;
  }
  function f157(p705, p706, p707) {
    var v1076 = document.createElement("canvas");
    var v1077 = v1076.getContext("2d");
    v1076.width = p705 * 118;
    v1076.height = p705 * 114;
    v1077.translate(0, p705 * 10);
    f87(v1077, p705 * 42, p705 * 43, p705 * 24.758836806279895);
    f86(v1077, p707[0]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 65, p705 * 90);
    v1077.bezierCurveTo(p705 * 72, p705 * 91, p705 * 75, p705 * 92, p705 * 71, p705 * 96);
    v1077.bezierCurveTo(p705 * 65, p705 * 98, p705 * 65, p705 * 94, p705 * 65, p705 * 91);
    v1077.closePath();
    f86(v1077, p707[0]);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 87, p705 * 45);
    v1077.bezierCurveTo(p705 * 108, p705 * 59, p705 * 100, p705 * 86, p705 * 85, p705 * 91);
    v1077.bezierCurveTo(p705 * 80, p705 * 96, p705 * 68, p705 * 95, p705 * 58, p705 * 87);
    v1077.bezierCurveTo(p705 * 53, p705 * 80, p705 * 61, p705 * 64, p705 * 66, p705 * 58);
    v1077.bezierCurveTo(p705 * 73, p705 * 48, p705 * 78, p705 * 44, p705 * 87, p705 * 45);
    v1077.closePath();
    f86(v1077, p707[0]);
    v1077.translate(0, p705 * -10);
    f87(v1077, p705 * 42, p705 * 43, p705 * 24.758836806279895);
    f86(v1077, p707[1], p707[2], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 65, p705 * 90);
    v1077.bezierCurveTo(p705 * 72, p705 * 91, p705 * 75, p705 * 92, p705 * 71, p705 * 96);
    v1077.bezierCurveTo(p705 * 65, p705 * 98, p705 * 65, p705 * 94, p705 * 65, p705 * 91);
    v1077.closePath();
    f86(v1077, p707[1], p707[2], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 87, p705 * 45);
    v1077.bezierCurveTo(p705 * 108, p705 * 59, p705 * 100, p705 * 86, p705 * 85, p705 * 91);
    v1077.bezierCurveTo(p705 * 80, p705 * 96, p705 * 68, p705 * 95, p705 * 58, p705 * 87);
    v1077.bezierCurveTo(p705 * 53, p705 * 80, p705 * 61, p705 * 64, p705 * 66, p705 * 58);
    v1077.bezierCurveTo(p705 * 73, p705 * 48, p705 * 78, p705 * 44, p705 * 87, p705 * 45);
    v1077.closePath();
    f86(v1077, p707[1], p707[2], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 52, p705 * 16);
    v1077.bezierCurveTo(p705 * 55, p705 * 19, p705 * 54, p705 * 20, p705 * 55, p705 * 22);
    v1077.bezierCurveTo(p705 * 52, p705 * 24.5, p705 * 52, p705 * 24.5, p705 * 49, p705 * 27);
    v1077.bezierCurveTo(p705 * 45, p705 * 25, p705 * 45, p705 * 25, p705 * 41, p705 * 23);
    v1077.bezierCurveTo(p705 * 45, p705 * 19, p705 * 48, p705 * 16, p705 * 52, p705 * 16);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 62, p705 * 30);
    v1077.bezierCurveTo(p705 * 66, p705 * 29, p705 * 64, p705 * 30, p705 * 66, p705 * 30);
    v1077.bezierCurveTo(p705 * 67, p705 * 31, p705 * 67, p705 * 31, p705 * 68, p705 * 32);
    v1077.bezierCurveTo(p705 * 66.5, p705 * 33.5, p705 * 66.5, p705 * 33.5, p705 * 65, p705 * 35);
    v1077.bezierCurveTo(p705 * 63.5, p705 * 32.5, p705 * 63.5, p705 * 32.5, p705 * 62, p705 * 30);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 29, p705 * 21);
    v1077.bezierCurveTo(p705 * 31, p705 * 22, p705 * 31, p705 * 26, p705 * 29, p705 * 29);
    v1077.bezierCurveTo(p705 * 26, p705 * 28.5, p705 * 26, p705 * 28.5, p705 * 23, p705 * 28);
    v1077.bezierCurveTo(p705 * 23, p705 * 26.5, p705 * 23, p705 * 26.5, p705 * 23, p705 * 25);
    v1077.bezierCurveTo(p705 * 25, p705 * 23, p705 * 25, p705 * 23, p705 * 27, p705 * 21);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 18, p705 * 36);
    v1077.bezierCurveTo(p705 * 23, p705 * 36, p705 * 24, p705 * 42, p705 * 19, p705 * 46);
    v1077.bezierCurveTo(p705 * 12, p705 * 39, p705 * 15, p705 * 38, p705 * 18, p705 * 37);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 30, p705 * 34);
    v1077.bezierCurveTo(p705 * 35, p705 * 36, p705 * 36, p705 * 39, p705 * 32, p705 * 45);
    v1077.bezierCurveTo(p705 * 25, p705 * 46, p705 * 25, p705 * 44, p705 * 30, p705 * 34);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 59, p705 * 35);
    v1077.bezierCurveTo(p705 * 58, p705 * 27, p705 * 57, p705 * 27, p705 * 52, p705 * 31);
    v1077.bezierCurveTo(p705 * 50, p705 * 36, p705 * 53, p705 * 38, p705 * 58, p705 * 36);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 63, p705 * 46);
    v1077.bezierCurveTo(p705 * 64.5, p705 * 46.5, p705 * 64.5, p705 * 46.5, p705 * 66, p705 * 47);
    v1077.bezierCurveTo(p705 * 70, p705 * 50, p705 * 70, p705 * 53, p705 * 61, p705 * 55);
    v1077.bezierCurveTo(p705 * 62, p705 * 50.5, p705 * 62, p705 * 50.5, p705 * 63, p705 * 46);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 41, p705 * 42);
    v1077.bezierCurveTo(p705 * 47, p705 * 41, p705 * 53, p705 * 47, p705 * 46, p705 * 51);
    v1077.bezierCurveTo(p705 * 38, p705 * 49, p705 * 39, p705 * 46, p705 * 41, p705 * 43);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 44, p705 * 57);
    v1077.bezierCurveTo(p705 * 54, p705 * 57, p705 * 54, p705 * 58, p705 * 55, p705 * 61);
    v1077.bezierCurveTo(p705 * 54, p705 * 63, p705 * 52, p705 * 64, p705 * 48, p705 * 65);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 20, p705 * 52);
    v1077.bezierCurveTo(p705 * 25, p705 * 51, p705 * 27, p705 * 50, p705 * 28, p705 * 54);
    v1077.bezierCurveTo(p705 * 27, p705 * 58, p705 * 24, p705 * 58, p705 * 22, p705 * 58);
    v1077.bezierCurveTo(p705 * 21, p705 * 55.5, p705 * 21, p705 * 55.5, p705 * 20, p705 * 53);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 30, p705 * 61);
    v1077.bezierCurveTo(p705 * 37, p705 * 61, p705 * 39, p705 * 63, p705 * 39, p705 * 68);
    v1077.bezierCurveTo(p705 * 36, p705 * 68.5, p705 * 36, p705 * 68.5, p705 * 33, p705 * 69);
    v1077.bezierCurveTo(p705 * 30.5, p705 * 67.5, p705 * 30.5, p705 * 67.5, p705 * 28, p705 * 66);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 88, p705 * 45);
    v1077.bezierCurveTo(p705 * 90, p705 * 46.5, p705 * 90, p705 * 46.5, p705 * 92, p705 * 48);
    v1077.bezierCurveTo(p705 * 92, p705 * 50, p705 * 92, p705 * 50, p705 * 92, p705 * 52);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 96, p705 * 53);
    v1077.bezierCurveTo(p705 * 97.5, p705 * 55, p705 * 97.5, p705 * 55, p705 * 99, p705 * 57);
    v1077.bezierCurveTo(p705 * 97.5, p705 * 59.5, p705 * 97.5, p705 * 59.5, p705 * 96, p705 * 62);
    v1077.bezierCurveTo(p705 * 93.5, p705 * 60.5, p705 * 93.5, p705 * 60.5, p705 * 91, p705 * 59);
    v1077.bezierCurveTo(p705 * 91.5, p705 * 57, p705 * 91.5, p705 * 57, p705 * 92, p705 * 55);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 92, p705 * 71);
    v1077.bezierCurveTo(p705 * 94.5, p705 * 70.5, p705 * 94.5, p705 * 70.5, p705 * 97, p705 * 70);
    v1077.bezierCurveTo(p705 * 98.5, p705 * 72.5, p705 * 98.5, p705 * 72.5, p705 * 100, p705 * 75);
    v1077.bezierCurveTo(p705 * 97, p705 * 76.5, p705 * 97, p705 * 76.5, p705 * 94, p705 * 78);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 95, p705 * 82);
    v1077.bezierCurveTo(p705 * 96, p705 * 83, p705 * 96, p705 * 83, p705 * 97, p705 * 84);
    v1077.bezierCurveTo(p705 * 97, p705 * 85.5, p705 * 97, p705 * 85.5, p705 * 97, p705 * 87);
    v1077.bezierCurveTo(p705 * 93.5, p705 * 87.5, p705 * 93.5, p705 * 87.5, p705 * 90, p705 * 88);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 86, p705 * 72);
    v1077.bezierCurveTo(p705 * 89, p705 * 76, p705 * 88, p705 * 81, p705 * 85, p705 * 82);
    v1077.bezierCurveTo(p705 * 80, p705 * 80, p705 * 82, p705 * 78, p705 * 85, p705 * 72);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 80, p705 * 86);
    v1077.bezierCurveTo(p705 * 84, p705 * 88, p705 * 86, p705 * 88, p705 * 85, p705 * 93);
    v1077.bezierCurveTo(p705 * 80, p705 * 96, p705 * 79, p705 * 96, p705 * 76, p705 * 91);
    v1077.closePath();
    f86(v1077, p707[3], p707[4], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 84, p705 * 46);
    v1077.bezierCurveTo(p705 * 93, p705 * 51, p705 * 91, p705 * 62, p705 * 80, p705 * 78);
    v1077.bezierCurveTo(p705 * 74, p705 * 86, p705 * 66, p705 * 90, p705 * 60, p705 * 86);
    v1077.bezierCurveTo(p705 * 55, p705 * 79, p705 * 57, p705 * 73, p705 * 67, p705 * 57);
    v1077.bezierCurveTo(p705 * 71, p705 * 51, p705 * 79, p705 * 44, p705 * 84, p705 * 46);
    v1077.closePath();
    f86(v1077, p707[5], p707[6], p705 * 5);
    v1077.beginPath();
    v1077.lineCap = "round";
    v1077.lineJoin = "round";
    v1077.moveTo(p705 * 76, p705 * 60);
    v1077.bezierCurveTo(p705 * 80, p705 * 66, p705 * 75, p705 * 74, p705 * 68, p705 * 74);
    v1077.bezierCurveTo(p705 * 60, p705 * 64, p705 * 68, p705 * 59, p705 * 76, p705 * 59);
    v1077.closePath();
    f86(v1077, p707[7], p707[8], p705 * 5);
    return v1076;
  }
  const v1078 = 1;
  function f158(p708, p709, p710, p711) {
    var v1079 = document.createElement("canvas");
    var v1080 = v1079.getContext("2d");
    var v1081 = p708 * 220;
    var v1082 = p708 * 220;
    var v1083 = p708 * 100;
    var v1084 = v1083 / 4;
    v1079.width = v1081;
    v1079.height = v1082;
    v1080.translate(v1081 / 2, v1082 / 2);
    v1080.globalAlpha = p709 ? 0.5 : 1;
    if (!p709) {
      v1080.translate(p708 * 0, p708 * -8);
    }
    f92(v1080, 7, v1083, v1084);
    f86(v1080, p709 ? p710[0] : p710[1]);
    v1080.globalAlpha = 1;
    if (p711 == 0) {
      f92(v1080, 6, v1083 * 0.65, v1084 * 0.65);
      f86(v1080, p710[2]);
    } else if (p711 == 1) {
      v1080.translate(p708 * 20, p708 * 20);
      f92(v1080, 6, v1083 * 0.45, v1084 * 0.4);
      f86(v1080, p710[2]);
    }
    return v1079;
  }
  function f159(p712, p713, p714) {
    var v1085 = document.createElement("canvas");
    var v1086 = v1085.getContext("2d");
    var v1087 = p712 * 120;
    var v1088 = p712 * 150;
    var v1089 = p712 * 60;
    var v1090 = v1089 / 4;
    var v1091 = p712 * 15;
    v1085.width = v1087;
    v1085.height = v1088;
    v1086.save();
    v1086.translate(v1087 / 2 + p712 * 0, v1088 / 2 + p712 * 0 + v1091);
    v1086.rotate(Math.PI / 3);
    v1086.globalAlpha = 0.5;
    f92(v1086, 8, v1089, v1090);
    f86(v1086, p714[0]);
    v1086.restore();
    v1086.save();
    v1086.translate(v1087 / 2 - p712 * 11, v1088 / 2 + p712 * 12);
    v1086.globalAlpha = 1;
    v1086.rotate(Math.PI / 3);
    v1086.translate(0, -v1091);
    f92(v1086, 8, v1089, v1090);
    f86(v1086, p714[1]);
    v1086.restore();
    v1086.save();
    v1086.translate(v1087 / 2 - p712 * 9, v1088 / 2 - p712 * 12);
    v1086.rotate(Math.PI / 2.8);
    f92(v1086, 5, v1089 * 0.5, v1090 * 0.4);
    f86(v1086, p714[2]);
    v1086.restore();
    v1086.save();
    v1086.translate(v1087 / 2 + p712 * 19, v1088 / 2 + p712 * 5);
    v1086.rotate(Math.PI / 1);
    f92(v1086, 5, v1089 * 0.5, v1090 * 0.4);
    f86(v1086, p714[2]);
    v1086.restore();
    v1086.save();
    v1086.translate(v1087 / 2 - p712 * 8, v1088 / 2 + p712 * 20);
    v1086.rotate(Math.PI / 2.25);
    f92(v1086, 5, v1089 * 0.5, v1090 * 0.4);
    f86(v1086, p714[2]);
    v1086.restore();
    return v1085;
  }
  const v1092 = 1;
  function f160(p715, p716, p717) {
    var v1093 = document.createElement("canvas");
    var v1094 = v1093.getContext("2d");
    var v1095 = p715 * 140;
    var v1096 = p715 * 150;
    var v1097 = p715 * 10;
    var v1098 = p715 * 4;
    v1093.width = v1095;
    v1093.height = v1096;
    v1094.translate(p715 * -50, p715 * -38 + v1097);
    v1094.globalAlpha = p716 ? 0.5 : 1;
    v1094.beginPath();
    v1094.bezierCurveTo(p715 * 160, p715 * 65, p715 * 160, p715 * 85, p715 * 152, p715 * 95);
    v1094.bezierCurveTo(p715 * 152, p715 * 95, p715 * 173, p715 * 94, p715 * 187, p715 * 102);
    v1094.bezierCurveTo(p715 * 187, p715 * 102, p715 * 180, p715 * 120, p715 * 155, p715 * 126);
    v1094.bezierCurveTo(p715 * 154, p715 * 126, p715 * 166, p715 * 138, p715 * 169, p715 * 148);
    v1094.bezierCurveTo(p715 * 169, p715 * 148, p715 * 148, p715 * 152, p715 * 133, p715 * 140);
    v1094.bezierCurveTo(p715 * 133, p715 * 140, p715 * 134, p715 * 160, p715 * 122, p715 * 175);
    v1094.bezierCurveTo(p715 * 122, p715 * 175, p715 * 107, p715 * 162, p715 * 107, p715 * 144);
    v1094.bezierCurveTo(p715 * 107, p715 * 144, p715 * 98, p715 * 164, p715 * 73, p715 * 167);
    v1094.bezierCurveTo(p715 * 73, p715 * 167, p715 * 72, p715 * 134, p715 * 90, p715 * 127);
    v1094.bezierCurveTo(p715 * 90, p715 * 127, p715 * 70, p715 * 134, p715 * 55, p715 * 123);
    v1094.bezierCurveTo(p715 * 55, p715 * 123, p715 * 58, p715 * 115, p715 * 75, p715 * 104);
    v1094.bezierCurveTo(p715 * 75, p715 * 104, p715 * 66, p715 * 96, p715 * 61, p715 * 77);
    v1094.bezierCurveTo(p715 * 61, p715 * 77, p715 * 83, p715 * 74, p715 * 102, p715 * 89);
    v1094.bezierCurveTo(p715 * 102, p715 * 89, p715 * 92, p715 * 66, p715 * 110, p715 * 41);
    v1094.bezierCurveTo(p715 * 111, p715 * 40, p715 * 130, p715 * 54, p715 * 130, p715 * 82);
    v1094.bezierCurveTo(p715 * 130, p715 * 82, p715 * 143, p715 * 67, p715 * 159, p715 * 65);
    v1094.closePath();
    f86(v1094, p717[0]);
    v1094.translate(0, 0 - v1097);
    v1094.globalAlpha = 1;
    v1094.beginPath();
    v1094.bezierCurveTo(p715 * 160, p715 * 65, p715 * 160, p715 * 85, p715 * 152, p715 * 95);
    v1094.bezierCurveTo(p715 * 152, p715 * 95, p715 * 173, p715 * 94, p715 * 187, p715 * 102);
    v1094.bezierCurveTo(p715 * 187, p715 * 102, p715 * 180, p715 * 120, p715 * 155, p715 * 126);
    v1094.bezierCurveTo(p715 * 154, p715 * 126, p715 * 166, p715 * 138, p715 * 169, p715 * 148);
    v1094.bezierCurveTo(p715 * 169, p715 * 148, p715 * 148, p715 * 152, p715 * 133, p715 * 140);
    v1094.bezierCurveTo(p715 * 133, p715 * 140, p715 * 134, p715 * 160, p715 * 122, p715 * 175);
    v1094.bezierCurveTo(p715 * 122, p715 * 175, p715 * 107, p715 * 162, p715 * 107, p715 * 144);
    v1094.bezierCurveTo(p715 * 107, p715 * 144, p715 * 98, p715 * 164, p715 * 73, p715 * 167);
    v1094.bezierCurveTo(p715 * 73, p715 * 167, p715 * 72, p715 * 134, p715 * 90, p715 * 127);
    v1094.bezierCurveTo(p715 * 90, p715 * 127, p715 * 70, p715 * 134, p715 * 55, p715 * 123);
    v1094.bezierCurveTo(p715 * 55, p715 * 123, p715 * 58, p715 * 115, p715 * 75, p715 * 104);
    v1094.bezierCurveTo(p715 * 75, p715 * 104, p715 * 66, p715 * 96, p715 * 61, p715 * 77);
    v1094.bezierCurveTo(p715 * 61, p715 * 77, p715 * 83, p715 * 74, p715 * 102, p715 * 89);
    v1094.bezierCurveTo(p715 * 102, p715 * 89, p715 * 92, p715 * 66, p715 * 110, p715 * 41);
    v1094.bezierCurveTo(p715 * 111, p715 * 40, p715 * 130, p715 * 54, p715 * 130, p715 * 82);
    v1094.bezierCurveTo(p715 * 130, p715 * 82, p715 * 143, p715 * 67, p715 * 159, p715 * 65);
    v1094.closePath();
    f86(v1094, p717[1], p717[2], v1098);
    return v1093;
  }
  function f161(p718, p719, p720) {
    var v1099 = document.createElement("canvas");
    var v1100 = v1099.getContext("2d");
    var v1101 = p718 * 18;
    var v1102 = p718 * 18;
    v1099.width = v1101;
    v1099.height = v1102;
    var v1103 = p718 * 9;
    var v1104 = p718 * 9;
    var v1105 = p718 * 8;
    v1100.save();
    v1100.translate(v1103, v1104);
    v1100.globalAlpha = 1;
    f87(v1100, 0, 0, v1105);
    f86(v1100, p720[0]);
    v1105 = p718 * 3;
    v1103 = 0;
    v1104 = p718 * -3;
    v1100.translate(v1103, v1104);
    v1100.globalAlpha = 1;
    f87(v1100, 0, 0, v1105);
    f86(v1100, p720[1]);
    v1100.restore();
    return v1099;
  }
  function f162(p721, p722, p723) {
    var v1106 = document.createElement("canvas");
    var v1107 = v1106.getContext("2d");
    var v1108 = p721 * 180;
    var v1109 = p721 * 210;
    var v1110 = (v1112 = p721 * 60) / 4;
    var v1111 = p721 * 20;
    v1106.width = v1108;
    v1106.height = v1109;
    v1107.save();
    v1107.translate(v1108 / 2 - p721 * 0, v1109 / 2 - p721 * 35 + v1111);
    v1107.rotate(Math.PI / -1.8);
    v1107.globalAlpha = 0.5;
    v1107.translate(p721 * 0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[0]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 + p721 * 10, v1109 / 2 + p721 * 15 + v1111);
    v1107.rotate(Math.PI / 2);
    v1107.globalAlpha = 0.5;
    v1107.translate(p721 * 0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[0]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 - p721 * 50, v1109 / 2 + p721 * 40 + v1111);
    v1107.rotate(Math.PI / 3);
    v1107.globalAlpha = 0.5;
    v1107.translate(0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[0]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 - p721 * 0, v1109 / 2 - p721 * 35);
    v1107.rotate(Math.PI / -1.8);
    v1107.globalAlpha = 1;
    v1107.translate(p721 * 0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[1]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 + p721 * 10, v1109 / 2 + p721 * 15);
    v1107.rotate(Math.PI / 2);
    v1107.globalAlpha = 1;
    v1107.translate(0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[1]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 - p721 * 50, v1109 / 2 + p721 * 40);
    v1107.rotate(Math.PI / 3);
    v1107.globalAlpha = 1;
    v1107.translate(0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[1]);
    v1107.restore();
    var v1112;
    v1110 = (v1112 = p721 * 30) / 4;
    v1107.save();
    v1107.translate(v1108 / 2 + p721 * 5, v1109 / 2 - p721 * 20);
    v1107.rotate(Math.PI / -1.8);
    v1107.globalAlpha = 1;
    v1107.translate(0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[2]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 + p721 * 0, v1109 / 2 + p721 * 10);
    v1107.rotate(Math.PI / 2);
    v1107.globalAlpha = 1;
    v1107.translate(0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[2]);
    v1107.restore();
    v1107.save();
    v1107.translate(v1108 / 2 - p721 * 45, v1109 / 2 + p721 * 35);
    v1107.rotate(Math.PI / 3);
    v1107.globalAlpha = 1;
    v1107.translate(0, p721 * -20);
    f92(v1107, 5, v1112, v1110);
    f86(v1107, p723[2]);
    v1107.restore();
    f87(v1107, v1108 / 2 - p721 * 7, v1109 / 2 + p721 * 7, 5);
    f86(v1107, p723[2]);
    return v1106;
  }
  function f163(p724, p725, p726) {
    var v1113 = document.createElement("canvas");
    var v1114 = v1113.getContext("2d");
    v1113.width = p724 * 220;
    v1113.height = p724 * 180;
    v1114.globalAlpha = p725 ? 0.5 : 1;
    v1114.translate(p724 * -90, p724 * -150);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 104, p724 * 237.8000030517578);
    v1114.bezierCurveTo(p724 * 110, p724 * 237.8000030517578, p724 * 110, p724 * 237.8000030517578, p724 * 116, p724 * 237.8000030517578);
    v1114.bezierCurveTo(p724 * 116, p724 * 241.8000030517578, p724 * 116, p724 * 241.8000030517578, p724 * 116, p724 * 245.8000030517578);
    v1114.bezierCurveTo(p724 * 115, p724 * 245.3000030517578, p724 * 115, p724 * 245.3000030517578, p724 * 114, p724 * 244.8000030517578);
    v1114.bezierCurveTo(p724 * 109.5, p724 * 244.8000030517578, p724 * 109.5, p724 * 244.8000030517578, p724 * 105, p724 * 244.8000030517578);
    v1114.closePath();
    f86(v1114, p726[5], p726[5], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 115, p724 * 211.20000457763672);
    v1114.bezierCurveTo(p724 * 106, p724 * 216.20000457763672, p724 * 101, p724 * 234.20000457763672, p724 * 102, p724 * 241.20000457763672);
    v1114.bezierCurveTo(p724 * 102, p724 * 260.2000045776367, p724 * 115, p724 * 269.2000045776367, p724 * 115, p724 * 269.2000045776367);
    v1114.bezierCurveTo(p724 * 116, p724 * 265.2000045776367, p724 * 115.5, p724 * 265.2000045776367, p724 * 116, p724 * 261.2000045776367);
    v1114.bezierCurveTo(p724 * 112, p724 * 264, p724 * 108, p724 * 254, p724 * 106, p724 * 242);
    v1114.bezierCurveTo(p724 * 105, p724 * 232, p724 * 110, p724 * 222, p724 * 115, p724 * 218);
    v1114.bezierCurveTo(p724 * 116, p724 * 216.75, p724 * 115.5, p724 * 217.375, p724 * 116, p724 * 216.75);
    v1114.closePath();
    f86(v1114, p726[5], p726[5], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 120, p724 * 207);
    v1114.bezierCurveTo(p724 * 115, p724 * 206, p724 * 114, p724 * 209, p724 * 114, p724 * 211);
    v1114.bezierCurveTo(p724 * 114, p724 * 268, p724 * 114, p724 * 241, p724 * 114, p724 * 271);
    v1114.bezierCurveTo(p724 * 115, p724 * 276, p724 * 118, p724 * 276, p724 * 120, p724 * 276);
    v1114.bezierCurveTo(p724 * 122, p724 * 273, p724 * 120.5, p724 * 274.5, p724 * 121, p724 * 273);
    v1114.bezierCurveTo(p724 * 121, p724 * 241, p724 * 121, p724 * 241, p724 * 121, p724 * 209);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 284, p724 * 238);
    v1114.bezierCurveTo(p724 * 289.5, p724 * 238, p724 * 289.5, p724 * 238, p724 * 295, p724 * 238);
    v1114.bezierCurveTo(p724 * 295, p724 * 241.5, p724 * 295, p724 * 241.5, p724 * 295, p724 * 245);
    v1114.bezierCurveTo(p724 * 289.5, p724 * 245, p724 * 289.5, p724 * 245, p724 * 284, p724 * 245);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 283, p724 * 211);
    v1114.bezierCurveTo(p724 * 293, p724 * 216, p724 * 297, p724 * 231, p724 * 297, p724 * 241);
    v1114.bezierCurveTo(p724 * 298, p724 * 254, p724 * 290, p724 * 265, p724 * 284, p724 * 269);
    v1114.bezierCurveTo(p724 * 283, p724 * 266, p724 * 283.5, p724 * 266, p724 * 283, p724 * 263);
    v1114.bezierCurveTo(p724 * 290, p724 * 260, p724 * 292, p724 * 251, p724 * 293, p724 * 242);
    v1114.bezierCurveTo(p724 * 292, p724 * 223, p724 * 289, p724 * 224, p724 * 284, p724 * 218);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 280, p724 * 206);
    v1114.bezierCurveTo(p724 * 284, p724 * 206, p724 * 285, p724 * 208, p724 * 285, p724 * 211);
    v1114.bezierCurveTo(p724 * 285, p724 * 241.5, p724 * 285, p724 * 241.5, p724 * 285, p724 * 272);
    v1114.bezierCurveTo(p724 * 284, p724 * 275, p724 * 284, p724 * 275, p724 * 280, p724 * 275);
    v1114.bezierCurveTo(p724 * 279, p724 * 273.5, p724 * 279, p724 * 273.5, p724 * 278, p724 * 272);
    v1114.bezierCurveTo(p724 * 278, p724 * 240.5, p724 * 278, p724 * 240.5, p724 * 278, p724 * 209);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 138, p724 * 298.40000915527344);
    v1114.bezierCurveTo(p724 * 141, p724 * 311.40000915527344, p724 * 151, p724 * 314.40000915527344, p724 * 162, p724 * 316.40000915527344);
    v1114.bezierCurveTo(p724 * 224, p724 * 316.40000915527344, p724 * 200, p724 * 315.90000915527344, p724 * 238, p724 * 315.40000915527344);
    v1114.bezierCurveTo(p724 * 254, p724 * 316.40000915527344, p724 * 261, p724 * 306.40000915527344, p724 * 264, p724 * 298.40000915527344);
    v1114.bezierCurveTo(p724 * 255, p724 * 304.40000915527344, p724 * 250, p724 * 306.40000915527344, p724 * 244, p724 * 306.40000915527344);
    v1114.bezierCurveTo(p724 * 201, p724 * 306.90000915527344, p724 * 201, p724 * 306.90000915527344, p724 * 158, p724 * 307.40000915527344);
    v1114.bezierCurveTo(p724 * 150, p724 * 306.40000915527344, p724 * 148, p724 * 306.40000915527344, p724 * 139, p724 * 300.40000915527344);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 161, p724 * 177.5999984741211);
    v1114.bezierCurveTo(p724 * 130, p724 * 175.5999984741211, p724 * 123, p724 * 190.5999984741211, p724 * 122, p724 * 205.5999984741211);
    v1114.bezierCurveTo(p724 * 121, p724 * 277.5999984741211, p724 * 122, p724 * 242.5999984741211, p724 * 122, p724 * 279.5999984741211);
    v1114.bezierCurveTo(p724 * 128, p724 * 297.5999984741211, p724 * 137, p724 * 299.5999984741211, p724 * 143, p724 * 300.5999984741211);
    v1114.bezierCurveTo(p724 * 163, p724 * 301.0999984741211, p724 * 163, p724 * 301.0999984741211, p724 * 183, p724 * 301.5999984741211);
    v1114.bezierCurveTo(p724 * 150, p724 * 300.5999984741211, p724 * 135, p724 * 290.5999984741211, p724 * 134, p724 * 267.5999984741211);
    v1114.bezierCurveTo(p724 * 133, p724 * 245.5999984741211, p724 * 146, p724 * 235.5999984741211, p724 * 164, p724 * 235.5999984741211);
    v1114.bezierCurveTo(p724 * 206, p724 * 236.0999984741211, p724 * 206, p724 * 236.0999984741211, p724 * 248, p724 * 236.5999984741211);
    v1114.bezierCurveTo(p724 * 266, p724 * 243.5999984741211, p724 * 268, p724 * 259.5999984741211, p724 * 267, p724 * 266.5999984741211);
    v1114.bezierCurveTo(p724 * 266, p724 * 288.5999984741211, p724 * 251, p724 * 294.5999984741211, p724 * 244, p724 * 297.5999984741211);
    v1114.bezierCurveTo(p724 * 228.5, p724 * 299.5999984741211, p724 * 228.5, p724 * 299.5999984741211, p724 * 213, p724 * 301.5999984741211);
    v1114.bezierCurveTo(p724 * 236, p724 * 301.0999984741211, p724 * 236, p724 * 301.0999984741211, p724 * 259, p724 * 300.5999984741211);
    v1114.bezierCurveTo(p724 * 272, p724 * 295.5999984741211, p724 * 277, p724 * 288.5999984741211, p724 * 278, p724 * 271.5999984741211);
    v1114.bezierCurveTo(p724 * 277.5, p724 * 236.5999984741211, p724 * 277.5, p724 * 236.5999984741211, p724 * 277, p724 * 201.5999984741211);
    v1114.bezierCurveTo(p724 * 276, p724 * 186.5999984741211, p724 * 265, p724 * 178.5999984741211, p724 * 254, p724 * 177.5999984741211);
    v1114.bezierCurveTo(p724 * 247.5, p724 * 177.5999984741211, p724 * 247.5, p724 * 177.5999984741211, p724 * 241, p724 * 177.5999984741211);
    v1114.bezierCurveTo(p724 * 255, p724 * 202.5999984741211, p724 * 214, p724 * 217.5999984741211, p724 * 201, p724 * 215.5999984741211);
    v1114.bezierCurveTo(p724 * 170, p724 * 215.5999984741211, p724 * 152, p724 * 197.5999984741211, p724 * 161, p724 * 178.5999984741211);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 162, p724 * 175.5999984741211);
    v1114.bezierCurveTo(p724 * 153, p724 * 176.0999984741211, p724 * 153, p724 * 176.0999984741211, p724 * 144, p724 * 176.5999984741211);
    v1114.bezierCurveTo(p724 * 125, p724 * 178.5999984741211, p724 * 121, p724 * 196.5999984741211, p724 * 121, p724 * 207.5999984741211);
    v1114.bezierCurveTo(p724 * 121, p724 * 243.20000076293945, p724 * 121, p724 * 243.20000076293945, p724 * 121, p724 * 278.8000030517578);
    v1114.bezierCurveTo(p724 * 126, p724 * 298.8000030517578, p724 * 137, p724 * 300.8000030517578, p724 * 146, p724 * 302.8000030517578);
    v1114.bezierCurveTo(p724 * 200.5, p724 * 302.8000030517578, p724 * 200.5, p724 * 302.8000030517578, p724 * 255, p724 * 302.8000030517578);
    v1114.bezierCurveTo(p724 * 271, p724 * 301.8000030517578, p724 * 279, p724 * 288.8000030517578, p724 * 279, p724 * 273.8000030517578);
    v1114.bezierCurveTo(p724 * 279, p724 * 236.8000030517578, p724 * 279, p724 * 236.8000030517578, p724 * 279, p724 * 199.8000030517578);
    v1114.bezierCurveTo(p724 * 274, p724 * 178.8000030517578, p724 * 263, p724 * 177.8000030517578, p724 * 255, p724 * 175.8000030517578);
    v1114.bezierCurveTo(p724 * 248, p724 * 175.8000030517578, p724 * 248, p724 * 175.8000030517578, p724 * 241, p724 * 175.8000030517578);
    v1114.bezierCurveTo(p724 * 240, p724 * 175.8000030517578, p724 * 240, p724 * 175.8000030517578, p724 * 239, p724 * 175.8000030517578);
    v1114.bezierCurveTo(p724 * 254, p724 * 200.8000030517578, p724 * 222, p724 * 211.8000030517578, p724 * 202, p724 * 212.8000030517578);
    v1114.bezierCurveTo(p724 * 168, p724 * 213.8000030517578, p724 * 151, p724 * 190.8000030517578, p724 * 163, p724 * 176.8000030517578);
    v1114.closePath();
    f86(v1114, undefined, p726[4], p724 * 6);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 198, p724 * 161.4000015258789);
    v1114.bezierCurveTo(p724 * 198, p724 * 186.9000015258789, p724 * 198, p724 * 186.9000015258789, p724 * 198, p724 * 212.4000015258789);
    v1114.bezierCurveTo(p724 * 201, p724 * 212.4000015258789, p724 * 201, p724 * 212.4000015258789, p724 * 204, p724 * 212.4000015258789);
    v1114.bezierCurveTo(p724 * 204, p724 * 186.9000015258789, p724 * 204, p724 * 186.9000015258789, p724 * 204, p724 * 161.4000015258789);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 161, p724 * 194);
    v1114.bezierCurveTo(p724 * 188, p724 * 169, p724 * 231, p724 * 179, p724 * 241, p724 * 194);
    v1114.bezierCurveTo(p724 * 239.5, p724 * 196, p724 * 239.5, p724 * 196, p724 * 238, p724 * 198);
    v1114.bezierCurveTo(p724 * 221, p724 * 179, p724 * 182, p724 * 182, p724 * 165, p724 * 198);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 157, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 162, p724 * 150.80000019073486, p724 * 241, p724 * 150.80000019073486, p724 * 245, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 242, p724 * 224.80000019073486, p724 * 162, p724 * 228.80000019073486, p724 * 157, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 159, p724 * 188.80000019073486, p724 * 159, p724 * 188.80000019073486, p724 * 161, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 168, p724 * 216.80000019073486, p724 * 231, p724 * 218.80000019073486, p724 * 241, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 236, p724 * 156.80000019073486, p724 * 169, p724 * 152.80000019073486, p724 * 161, p724 * 188.80000019073486);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 156, p724 * 188);
    v1114.bezierCurveTo(p724 * 160, p724 * 164, p724 * 183, p724 * 159, p724 * 201, p724 * 158);
    v1114.bezierCurveTo(p724 * 232, p724 * 159, p724 * 244, p724 * 174, p724 * 246, p724 * 188);
    v1114.bezierCurveTo(p724 * 245, p724 * 212, p724 * 213, p724 * 219, p724 * 201, p724 * 218);
    v1114.bezierCurveTo(p724 * 181, p724 * 221, p724 * 158, p724 * 207, p724 * 156, p724 * 190);
    v1114.closePath();
    f86(v1114, undefined, p726[4], p724 * 6);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 162, p724 * 189);
    v1114.bezierCurveTo(p724 * 166, p724 * 170, p724 * 185, p724 * 165, p724 * 201, p724 * 164);
    v1114.bezierCurveTo(p724 * 227, p724 * 165, p724 * 240, p724 * 178, p724 * 239, p724 * 188);
    v1114.bezierCurveTo(p724 * 239, p724 * 204, p724 * 210, p724 * 210, p724 * 201, p724 * 210);
    v1114.bezierCurveTo(p724 * 182, p724 * 211, p724 * 166, p724 * 200, p724 * 162, p724 * 190);
    v1114.closePath();
    f86(v1114, vVVUndefined273, p726[4], p724 * 6);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 131, p724 * 262);
    v1114.bezierCurveTo(p724 * 136, p724 * 241, p724 * 144, p724 * 236, p724 * 158, p724 * 233);
    v1114.bezierCurveTo(p724 * 200.5, p724 * 233, p724 * 229, p724 * 232, p724 * 243, p724 * 233);
    v1114.bezierCurveTo(p724 * 259, p724 * 235, p724 * 267, p724 * 248, p724 * 269, p724 * 260);
    v1114.bezierCurveTo(p724 * 269, p724 * 266.5, p724 * 269, p724 * 266.5, p724 * 269, p724 * 273);
    v1114.bezierCurveTo(p724 * 265, p724 * 290, p724 * 251, p724 * 297, p724 * 242, p724 * 298);
    v1114.bezierCurveTo(p724 * 202, p724 * 298, p724 * 202, p724 * 298, p724 * 162, p724 * 298);
    v1114.bezierCurveTo(p724 * 148, p724 * 298, p724 * 136, p724 * 289, p724 * 132, p724 * 273);
    v1114.bezierCurveTo(p724 * 131.5, p724 * 268, p724 * 131.5, p724 * 268, p724 * 131, p724 * 263);
    v1114.bezierCurveTo(p724 * 135, p724 * 263, p724 * 135, p724 * 263, p724 * 139, p724 * 263);
    v1114.bezierCurveTo(p724 * 139, p724 * 281, p724 * 151, p724 * 287, p724 * 160, p724 * 290);
    v1114.bezierCurveTo(p724 * 200.5, p724 * 290, p724 * 200.5, p724 * 290, p724 * 241, p724 * 290);
    v1114.bezierCurveTo(p724 * 252, p724 * 290, p724 * 257, p724 * 281, p724 * 262, p724 * 271);
    v1114.bezierCurveTo(p724 * 261.5, p724 * 267, p724 * 261.5, p724 * 267, p724 * 261, p724 * 263);
    v1114.bezierCurveTo(p724 * 260, p724 * 249, p724 * 251, p724 * 242, p724 * 241, p724 * 241);
    v1114.bezierCurveTo(p724 * 240.5, p724 * 240.5, p724 * 240.5, p724 * 240.5, p724 * 240, p724 * 240);
    v1114.bezierCurveTo(p724 * 200, p724 * 240, p724 * 200, p724 * 240, p724 * 160, p724 * 240);
    v1114.bezierCurveTo(p724 * 145, p724 * 244, p724 * 142, p724 * 250, p724 * 139, p724 * 264);
    v1114.closePath();
    f86(v1114, p726[4], p726[4], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 130, p724 * 264);
    v1114.bezierCurveTo(p724 * 132, p724 * 244, p724 * 144, p724 * 235, p724 * 157, p724 * 232);
    v1114.bezierCurveTo(p724 * 245, p724 * 232, p724 * 201, p724 * 232, p724 * 245, p724 * 232);
    v1114.bezierCurveTo(p724 * 264, p724 * 235, p724 * 269, p724 * 251, p724 * 270, p724 * 264);
    v1114.bezierCurveTo(p724 * 272, p724 * 291, p724 * 248, p724 * 299, p724 * 242, p724 * 299);
    v1114.bezierCurveTo(p724 * 200, p724 * 299, p724 * 200, p724 * 299, p724 * 158, p724 * 299);
    v1114.bezierCurveTo(p724 * 139, p724 * 298, p724 * 130, p724 * 276, p724 * 130, p724 * 265);
    v1114.closePath();
    f86(v1114, undefined, p726[4], p724 * 6);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 140, p724 * 265.33333587646484);
    v1114.bezierCurveTo(p724 * 141, p724 * 250.33333587646484, p724 * 148, p724 * 244.33333587646484, p724 * 160, p724 * 241.33333587646484);
    v1114.bezierCurveTo(p724 * 200, p724 * 241.33333587646484, p724 * 200, p724 * 241.33333587646484, p724 * 240, p724 * 241.33333587646484);
    v1114.bezierCurveTo(p724 * 256, p724 * 243.33333587646484, p724 * 260, p724 * 255.33333587646484, p724 * 260, p724 * 265.33333587646484);
    v1114.bezierCurveTo(p724 * 261, p724 * 281.33333587646484, p724 * 247, p724 * 289.33333587646484, p724 * 240, p724 * 289.33333587646484);
    v1114.bezierCurveTo(p724 * 161, p724 * 289.33333587646484, p724 * 200.5, p724 * 289.33333587646484, p724 * 161, p724 * 289.33333587646484);
    v1114.bezierCurveTo(p724 * 149, p724 * 288.33333587646484, p724 * 142, p724 * 278.33333587646484, p724 * 140, p724 * 266.33333587646484);
    v1114.closePath();
    f86(v1114, undefined, p726[4], p724 * 6);
    v1114.globalAlpha = 0.5;
    v1114.scale(1, 1);
    v1114.translate(p724 * 105, p724 * 155);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 59.27557373046875, p724 * 20.406280517578125);
    v1114.bezierCurveTo(p724 * 74.27557373046875, p724 * 5.406280517578125, p724 * 90.27557373046875, p724 * 6.406280517578125, p724 * 99.27557373046875, p724 * 5.406280517578125);
    v1114.bezierCurveTo(p724 * 120.27557373046875, p724 * 5.406280517578125, p724 * 126.27557373046875, p724 * 10.406280517578125, p724 * 136.27557373046875, p724 * 20.406280517578125);
    v1114.bezierCurveTo(p724 * 157.77557373046875, p724 * 37.906280517578125, p724 * 157.77557373046875, p724 * 37.906280517578125, p724 * 179.27557373046875, p724 * 55.406280517578125);
    v1114.bezierCurveTo(p724 * 190.27557373046875, p724 * 63.406280517578125, p724 * 192.27557373046875, p724 * 77.40628051757812, p724 * 189.27557373046875, p724 * 91.40628051757812);
    v1114.bezierCurveTo(p724 * 183.27557373046875, p724 * 108.40628051757812, p724 * 176.27557373046875, p724 * 110.40628051757812, p724 * 169.27557373046875, p724 * 118.40628051757812);
    v1114.bezierCurveTo(p724 * 152.27557373046875, p724 * 133.40628051757812, p724 * 152.27557373046875, p724 * 133.40628051757812, p724 * 135.27557373046875, p724 * 148.40628051757812);
    v1114.bezierCurveTo(p724 * 87.27557373046875, p724 * 143.40628051757812, p724 * 87.27557373046875, p724 * 143.40628051757812, p724 * 39.27557373046875, p724 * 138.40628051757812);
    v1114.bezierCurveTo(p724 * 26.77557373046875, p724 * 123.40628051757812, p724 * 26.77557373046875, p724 * 123.40628051757812, p724 * 14.27557373046875, p724 * 108.40628051757812);
    v1114.bezierCurveTo(p724 * 2.27557373046875, p724 * 95.40628051757812, p724 * 2.27557373046875, p724 * 92.40628051757812, p724 * 3.27557373046875, p724 * 83.40628051757812);
    v1114.bezierCurveTo(p724 * 4.27557373046875, p724 * 63.406280517578125, p724 * 12.27557373046875, p724 * 60.406280517578125, p724 * 24.27557373046875, p724 * 40.406280517578125);
    v1114.closePath();
    f86(v1114, p726[5], p726[5], p724 * 4);
    v1114.globalAlpha = 1;
    v1114.translate(p724 * -110, p724 * -155);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 104, p724 * 237.8000030517578);
    v1114.bezierCurveTo(p724 * 110, p724 * 237.8000030517578, p724 * 110, p724 * 237.8000030517578, p724 * 116, p724 * 237.8000030517578);
    v1114.bezierCurveTo(p724 * 116, p724 * 241.8000030517578, p724 * 116, p724 * 241.8000030517578, p724 * 116, p724 * 245.8000030517578);
    v1114.bezierCurveTo(p724 * 115, p724 * 245.3000030517578, p724 * 115, p724 * 245.3000030517578, p724 * 114, p724 * 244.8000030517578);
    v1114.bezierCurveTo(p724 * 109.5, p724 * 244.8000030517578, p724 * 109.5, p724 * 244.8000030517578, p724 * 105, p724 * 244.8000030517578);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 115, p724 * 211.20000457763672);
    v1114.bezierCurveTo(p724 * 106, p724 * 216.20000457763672, p724 * 101, p724 * 234.20000457763672, p724 * 102, p724 * 241.20000457763672);
    v1114.bezierCurveTo(p724 * 102, p724 * 260.2000045776367, p724 * 115, p724 * 269.2000045776367, p724 * 115, p724 * 269.2000045776367);
    v1114.bezierCurveTo(p724 * 116, p724 * 265.2000045776367, p724 * 115.5, p724 * 265.2000045776367, p724 * 116, p724 * 261.2000045776367);
    v1114.bezierCurveTo(p724 * 112, p724 * 264, p724 * 108, p724 * 254, p724 * 106, p724 * 242);
    v1114.bezierCurveTo(p724 * 105, p724 * 232, p724 * 110, p724 * 222, p724 * 115, p724 * 218);
    v1114.bezierCurveTo(p724 * 116, p724 * 216.75, p724 * 115.5, p724 * 217.375, p724 * 116, p724 * 216.75);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 120, p724 * 207);
    v1114.bezierCurveTo(p724 * 115, p724 * 206, p724 * 114, p724 * 209, p724 * 114, p724 * 211);
    v1114.bezierCurveTo(p724 * 114, p724 * 268, p724 * 114, p724 * 241, p724 * 114, p724 * 271);
    v1114.bezierCurveTo(p724 * 115, p724 * 276, p724 * 118, p724 * 276, p724 * 120, p724 * 276);
    v1114.bezierCurveTo(p724 * 122, p724 * 273, p724 * 120.5, p724 * 274.5, p724 * 121, p724 * 273);
    v1114.bezierCurveTo(p724 * 121, p724 * 241, p724 * 121, p724 * 241, p724 * 121, p724 * 209);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 284, p724 * 238);
    v1114.bezierCurveTo(p724 * 289.5, p724 * 238, p724 * 289.5, p724 * 238, p724 * 295, p724 * 238);
    v1114.bezierCurveTo(p724 * 295, p724 * 241.5, p724 * 295, p724 * 241.5, p724 * 295, p724 * 245);
    v1114.bezierCurveTo(p724 * 289.5, p724 * 245, p724 * 289.5, p724 * 245, p724 * 284, p724 * 245);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 283, p724 * 211);
    v1114.bezierCurveTo(p724 * 293, p724 * 216, p724 * 297, p724 * 231, p724 * 297, p724 * 241);
    v1114.bezierCurveTo(p724 * 298, p724 * 254, p724 * 290, p724 * 265, p724 * 284, p724 * 269);
    v1114.bezierCurveTo(p724 * 283, p724 * 266, p724 * 283.5, p724 * 266, p724 * 283, p724 * 263);
    v1114.bezierCurveTo(p724 * 290, p724 * 260, p724 * 292, p724 * 251, p724 * 293, p724 * 242);
    v1114.bezierCurveTo(p724 * 292, p724 * 223, p724 * 289, p724 * 224, p724 * 284, p724 * 218);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 280, p724 * 206);
    v1114.bezierCurveTo(p724 * 284, p724 * 206, p724 * 285, p724 * 208, p724 * 285, p724 * 211);
    v1114.bezierCurveTo(p724 * 285, p724 * 241.5, p724 * 285, p724 * 241.5, p724 * 285, p724 * 272);
    v1114.bezierCurveTo(p724 * 284, p724 * 275, p724 * 284, p724 * 275, p724 * 280, p724 * 275);
    v1114.bezierCurveTo(p724 * 279, p724 * 273.5, p724 * 279, p724 * 273.5, p724 * 278, p724 * 272);
    v1114.bezierCurveTo(p724 * 278, p724 * 240.5, p724 * 278, p724 * 240.5, p724 * 278, p724 * 209);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 138, p724 * 298.40000915527344);
    v1114.bezierCurveTo(p724 * 141, p724 * 311.40000915527344, p724 * 151, p724 * 314.40000915527344, p724 * 162, p724 * 316.40000915527344);
    v1114.bezierCurveTo(p724 * 224, p724 * 316.40000915527344, p724 * 200, p724 * 315.90000915527344, p724 * 238, p724 * 315.40000915527344);
    v1114.bezierCurveTo(p724 * 254, p724 * 316.40000915527344, p724 * 261, p724 * 306.40000915527344, p724 * 264, p724 * 298.40000915527344);
    v1114.bezierCurveTo(p724 * 255, p724 * 304.40000915527344, p724 * 250, p724 * 306.40000915527344, p724 * 244, p724 * 306.40000915527344);
    v1114.bezierCurveTo(p724 * 201, p724 * 306.90000915527344, p724 * 201, p724 * 306.90000915527344, p724 * 158, p724 * 307.40000915527344);
    v1114.bezierCurveTo(p724 * 150, p724 * 306.40000915527344, p724 * 148, p724 * 306.40000915527344, p724 * 139, p724 * 300.40000915527344);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 161, p724 * 177.5999984741211);
    v1114.bezierCurveTo(p724 * 130, p724 * 175.5999984741211, p724 * 123, p724 * 190.5999984741211, p724 * 122, p724 * 205.5999984741211);
    v1114.bezierCurveTo(p724 * 121, p724 * 277.5999984741211, p724 * 122, p724 * 242.5999984741211, p724 * 122, p724 * 279.5999984741211);
    v1114.bezierCurveTo(p724 * 128, p724 * 297.5999984741211, p724 * 137, p724 * 299.5999984741211, p724 * 143, p724 * 300.5999984741211);
    v1114.bezierCurveTo(p724 * 163, p724 * 301.0999984741211, p724 * 163, p724 * 301.0999984741211, p724 * 183, p724 * 301.5999984741211);
    v1114.bezierCurveTo(p724 * 150, p724 * 300.5999984741211, p724 * 135, p724 * 290.5999984741211, p724 * 134, p724 * 267.5999984741211);
    v1114.bezierCurveTo(p724 * 133, p724 * 245.5999984741211, p724 * 146, p724 * 235.5999984741211, p724 * 164, p724 * 235.5999984741211);
    v1114.bezierCurveTo(p724 * 206, p724 * 236.0999984741211, p724 * 206, p724 * 236.0999984741211, p724 * 248, p724 * 236.5999984741211);
    v1114.bezierCurveTo(p724 * 266, p724 * 243.5999984741211, p724 * 268, p724 * 259.5999984741211, p724 * 267, p724 * 266.5999984741211);
    v1114.bezierCurveTo(p724 * 266, p724 * 288.5999984741211, p724 * 251, p724 * 294.5999984741211, p724 * 244, p724 * 297.5999984741211);
    v1114.bezierCurveTo(p724 * 228.5, p724 * 299.5999984741211, p724 * 228.5, p724 * 299.5999984741211, p724 * 213, p724 * 301.5999984741211);
    v1114.bezierCurveTo(p724 * 236, p724 * 301.0999984741211, p724 * 236, p724 * 301.0999984741211, p724 * 259, p724 * 300.5999984741211);
    v1114.bezierCurveTo(p724 * 272, p724 * 295.5999984741211, p724 * 277, p724 * 288.5999984741211, p724 * 278, p724 * 271.5999984741211);
    v1114.bezierCurveTo(p724 * 277.5, p724 * 236.5999984741211, p724 * 277.5, p724 * 236.5999984741211, p724 * 277, p724 * 201.5999984741211);
    v1114.bezierCurveTo(p724 * 276, p724 * 186.5999984741211, p724 * 265, p724 * 178.5999984741211, p724 * 254, p724 * 177.5999984741211);
    v1114.bezierCurveTo(p724 * 247.5, p724 * 177.5999984741211, p724 * 247.5, p724 * 177.5999984741211, p724 * 241, p724 * 177.5999984741211);
    v1114.bezierCurveTo(p724 * 255, p724 * 202.5999984741211, p724 * 214, p724 * 217.5999984741211, p724 * 201, p724 * 215.5999984741211);
    v1114.bezierCurveTo(p724 * 170, p724 * 215.5999984741211, p724 * 152, p724 * 197.5999984741211, p724 * 161, p724 * 178.5999984741211);
    v1114.closePath();
    f86(v1114, p726[2], p726[2], p724 * 4);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 162, p724 * 175.5999984741211);
    v1114.bezierCurveTo(p724 * 153, p724 * 176.0999984741211, p724 * 153, p724 * 176.0999984741211, p724 * 144, p724 * 176.5999984741211);
    v1114.bezierCurveTo(p724 * 125, p724 * 178.5999984741211, p724 * 121, p724 * 196.5999984741211, p724 * 121, p724 * 207.5999984741211);
    v1114.bezierCurveTo(p724 * 121, p724 * 243.20000076293945, p724 * 121, p724 * 243.20000076293945, p724 * 121, p724 * 278.8000030517578);
    v1114.bezierCurveTo(p724 * 126, p724 * 298.8000030517578, p724 * 137, p724 * 300.8000030517578, p724 * 146, p724 * 302.8000030517578);
    v1114.bezierCurveTo(p724 * 200.5, p724 * 302.8000030517578, p724 * 200.5, p724 * 302.8000030517578, p724 * 255, p724 * 302.8000030517578);
    v1114.bezierCurveTo(p724 * 271, p724 * 301.8000030517578, p724 * 279, p724 * 288.8000030517578, p724 * 279, p724 * 273.8000030517578);
    v1114.bezierCurveTo(p724 * 279, p724 * 236.8000030517578, p724 * 279, p724 * 236.8000030517578, p724 * 279, p724 * 199.8000030517578);
    v1114.bezierCurveTo(p724 * 274, p724 * 178.8000030517578, p724 * 263, p724 * 177.8000030517578, p724 * 255, p724 * 175.8000030517578);
    v1114.bezierCurveTo(p724 * 248, p724 * 175.8000030517578, p724 * 248, p724 * 175.8000030517578, p724 * 241, p724 * 175.8000030517578);
    v1114.bezierCurveTo(p724 * 240, p724 * 175.8000030517578, p724 * 240, p724 * 175.8000030517578, p724 * 239, p724 * 175.8000030517578);
    v1114.bezierCurveTo(p724 * 254, p724 * 200.8000030517578, p724 * 222, p724 * 211.8000030517578, p724 * 202, p724 * 212.8000030517578);
    v1114.bezierCurveTo(p724 * 168, p724 * 213.8000030517578, p724 * 151, p724 * 190.8000030517578, p724 * 163, p724 * 176.8000030517578);
    v1114.closePath();
    f86(v1114, vVUndefined27, p726[3], p724 * 6);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 198, p724 * 161.4000015258789);
    v1114.bezierCurveTo(p724 * 198, p724 * 186.9000015258789, p724 * 198, p724 * 186.9000015258789, p724 * 198, p724 * 212.4000015258789);
    v1114.bezierCurveTo(p724 * 201, p724 * 212.4000015258789, p724 * 201, p724 * 212.4000015258789, p724 * 204, p724 * 212.4000015258789);
    v1114.bezierCurveTo(p724 * 204, p724 * 186.9000015258789, p724 * 204, p724 * 186.9000015258789, p724 * 204, p724 * 161.4000015258789);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 161, p724 * 194);
    v1114.bezierCurveTo(p724 * 188, p724 * 169, p724 * 231, p724 * 179, p724 * 241, p724 * 194);
    v1114.bezierCurveTo(p724 * 239.5, p724 * 196, p724 * 239.5, p724 * 196, p724 * 238, p724 * 198);
    v1114.bezierCurveTo(p724 * 221, p724 * 179, p724 * 182, p724 * 182, p724 * 165, p724 * 198);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 157, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 162, p724 * 150.80000019073486, p724 * 241, p724 * 150.80000019073486, p724 * 245, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 242, p724 * 224.80000019073486, p724 * 162, p724 * 228.80000019073486, p724 * 157, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 159, p724 * 188.80000019073486, p724 * 159, p724 * 188.80000019073486, p724 * 161, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 168, p724 * 216.80000019073486, p724 * 231, p724 * 218.80000019073486, p724 * 241, p724 * 188.80000019073486);
    v1114.bezierCurveTo(p724 * 236, p724 * 156.80000019073486, p724 * 169, p724 * 152.80000019073486, p724 * 161, p724 * 188.80000019073486);
    v1114.closePath();
    f86(v1114, p726[0], p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 156, p724 * 188);
    v1114.bezierCurveTo(p724 * 160, p724 * 164, p724 * 183, p724 * 159, p724 * 201, p724 * 158);
    v1114.bezierCurveTo(p724 * 232, p724 * 159, p724 * 244, p724 * 174, p724 * 246, p724 * 188);
    v1114.bezierCurveTo(p724 * 245, p724 * 212, p724 * 213, p724 * 219, p724 * 201, p724 * 218);
    v1114.bezierCurveTo(p724 * 181, p724 * 221, p724 * 158, p724 * 207, p724 * 156, p724 * 190);
    v1114.closePath();
    f86(v1114, vVVUndefined272, p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 162, p724 * 189);
    v1114.bezierCurveTo(p724 * 166, p724 * 170, p724 * 185, p724 * 165, p724 * 201, p724 * 164);
    v1114.bezierCurveTo(p724 * 227, p724 * 165, p724 * 240, p724 * 178, p724 * 239, p724 * 188);
    v1114.bezierCurveTo(p724 * 239, p724 * 204, p724 * 210, p724 * 210, p724 * 201, p724 * 210);
    v1114.bezierCurveTo(p724 * 182, p724 * 211, p724 * 166, p724 * 200, p724 * 162, p724 * 190);
    v1114.closePath();
    f86(v1114, undefined, p726[1], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 131, p724 * 262);
    v1114.bezierCurveTo(p724 * 136, p724 * 241, p724 * 144, p724 * 236, p724 * 158, p724 * 233);
    v1114.bezierCurveTo(p724 * 200.5, p724 * 233, p724 * 229, p724 * 232, p724 * 243, p724 * 233);
    v1114.bezierCurveTo(p724 * 259, p724 * 235, p724 * 267, p724 * 248, p724 * 269, p724 * 260);
    v1114.bezierCurveTo(p724 * 269, p724 * 266.5, p724 * 269, p724 * 266.5, p724 * 269, p724 * 273);
    v1114.bezierCurveTo(p724 * 265, p724 * 290, p724 * 251, p724 * 297, p724 * 242, p724 * 298);
    v1114.bezierCurveTo(p724 * 202, p724 * 298, p724 * 202, p724 * 298, p724 * 162, p724 * 298);
    v1114.bezierCurveTo(p724 * 148, p724 * 298, p724 * 136, p724 * 289, p724 * 132, p724 * 273);
    v1114.bezierCurveTo(p724 * 131.5, p724 * 268, p724 * 131.5, p724 * 268, p724 * 131, p724 * 263);
    v1114.bezierCurveTo(p724 * 135, p724 * 263, p724 * 135, p724 * 263, p724 * 139, p724 * 263);
    v1114.bezierCurveTo(p724 * 139, p724 * 281, p724 * 151, p724 * 287, p724 * 160, p724 * 290);
    v1114.bezierCurveTo(p724 * 200.5, p724 * 290, p724 * 200.5, p724 * 290, p724 * 241, p724 * 290);
    v1114.bezierCurveTo(p724 * 252, p724 * 290, p724 * 257, p724 * 281, p724 * 262, p724 * 271);
    v1114.bezierCurveTo(p724 * 261.5, p724 * 267, p724 * 261.5, p724 * 267, p724 * 261, p724 * 263);
    v1114.bezierCurveTo(p724 * 260, p724 * 249, p724 * 251, p724 * 242, p724 * 241, p724 * 241);
    v1114.bezierCurveTo(p724 * 240.5, p724 * 240.5, p724 * 240.5, p724 * 240.5, p724 * 240, p724 * 240);
    v1114.bezierCurveTo(p724 * 200, p724 * 240, p724 * 200, p724 * 240, p724 * 160, p724 * 240);
    v1114.bezierCurveTo(p724 * 145, p724 * 244, p724 * 142, p724 * 250, p724 * 139, p724 * 264);
    v1114.closePath();
    f86(v1114, p726[0], p726[0], p724 * 2);
    v1114.beginPath();
    v1114.lineCap = "round";
    v1114.lineJoin = "round";
    v1114.moveTo(p724 * 130, p724 * 264);
    v1114.bezierCurveTo(p724 * 132, p724 * 244, p724 * 144, p724 * 235, p724 * 157, p724 * 232);
    v1114.bezierCurveTo(p724 * 245, p724 * 232, p724 * 201, p724 * 232, p724 * 245, p724 * 232);
    v1114.bezierCurveTo(p724 * 264, p724 * 235, p724 * 269, p724 * 251, p724 * 270, p724 * 264);
    v1114.bezierCurveTo(p724 * 272, p724 * 291, p724 * 248, p724 * 299, p724 * 242, p724 * 299);
    v1114.bezierCurveTo(p724 * 200, p724 * 299, p724 * 200, p724 * 299, p724 * 158, p724 * 299);
    v1114.bezierCurveTo(p724 * 139, p724 * 298, p724 * 130, p724 * 276, p724 * 130, p724 * 265);
    v1114.closePath();
    f86(v1114, undefined, p726[1], p724 * 2);
    return v1113;
  }
  function f166(p727, p728) {
    var v1115 = document.createElement("canvas");
    var v1116 = v1115.getContext("2d");
    v1115.width = p727 * 80;
    v1115.height = p727 * 100;
    v1116.scale(0.5, 0.5);
    v1116.translate(10, 15);
    v1116.globalAlpha = 0.5;
    v1116.beginPath();
    v1116.lineCap = "round";
    v1116.lineJoin = "round";
    v1116.moveTo(p727 * 47, p727 * 5);
    v1116.bezierCurveTo(p727 * 19, p727 * 30, p727 * 12, p727 * 42, p727 * 10, p727 * 55);
    v1116.bezierCurveTo(p727 * 11, p727 * 75, p727 * 27, p727 * 76, p727 * 36, p727 * 72);
    v1116.bezierCurveTo(p727 * 52, p727 * 60, p727 * 53, p727 * 46, p727 * 54, p727 * 31);
    v1116.bezierCurveTo(p727 * 53, p727 * 14, p727 * 50, p727 * 9, p727 * 48, p727 * 6);
    v1116.closePath();
    f86(v1116, p728[0]);
    v1116.beginPath();
    v1116.lineCap = "round";
    v1116.lineJoin = "round";
    v1116.moveTo(p727 * 17, p727 * 70);
    v1116.bezierCurveTo(p727 * 18, p727 * 77, p727 * 10, p727 * 83, p727 * 4, p727 * 87);
    f86(v1116, vVVVUndefined1974, p728[0], p727 * 10);
    v1116.translate(0, -10);
    v1116.globalAlpha = 1;
    v1116.beginPath();
    v1116.lineCap = "round";
    v1116.lineJoin = "round";
    v1116.moveTo(p727 * 47, p727 * 5);
    v1116.bezierCurveTo(p727 * 19, p727 * 30, p727 * 12, p727 * 42, p727 * 10, p727 * 55);
    v1116.bezierCurveTo(p727 * 11, p727 * 75, p727 * 27, p727 * 76, p727 * 36, p727 * 72);
    v1116.bezierCurveTo(p727 * 52, p727 * 60, p727 * 53, p727 * 46, p727 * 54, p727 * 31);
    v1116.bezierCurveTo(p727 * 53, p727 * 14, p727 * 50, p727 * 9, p727 * 48, p727 * 6);
    v1116.closePath();
    f86(v1116, p728[1], p728[2], p727 * 8);
    v1116.beginPath();
    v1116.lineCap = "round";
    v1116.lineJoin = "round";
    v1116.moveTo(p727 * 17, p727 * 70);
    v1116.bezierCurveTo(p727 * 18, p727 * 77, p727 * 10, p727 * 83, p727 * 4, p727 * 87);
    f86(v1116, vVVUndefined27, p728[2], p727 * 8);
    v1116.globalAlpha = 0.5;
    v1116.beginPath();
    v1116.lineCap = "round";
    v1116.lineJoin = "round";
    v1116.moveTo(p727 * 17, p727 * 70);
    v1116.bezierCurveTo(p727 * 33, p727 * 52, p727 * 39, p727 * 33, p727 * 48, p727 * 7);
    f86(v1116, undefined, p728[2], p727 * 8);
    return v1115;
  }
  function f165(p729, p730, p731, p732, p733) {
    var v1117 = document.createElement("canvas");
    var v1118 = v1117.getContext("2d");
    if (p732 == 0) {
      var v1119 = p729 * 270;
      var v1120 = p729 * 250;
      v1117.width = v1119;
      v1117.height = v1120;
      v1118.beginPath();
      v1118.moveTo(p729 * 140, p729 * 3);
      v1118.translate(p729 * -25, p729 * -20);
      v1118.bezierCurveTo(p729 * 218, p729 * 31, p729 * 251, p729 * 61, p729 * 265, p729 * 85);
      v1118.bezierCurveTo(p729 * 278, p729 * 108, p729 * 295, p729 * 160, p729 * 285, p729 * 195);
      v1118.bezierCurveTo(p729 * 271, p729 * 242, p729 * 213, p729 * 268, p729 * 188, p729 * 266);
      v1118.bezierCurveTo(p729 * 139, p729 * 262, p729 * 70, p729 * 244, p729 * 47, p729 * 204);
      v1118.bezierCurveTo(p729 * 20, p729 * 158, p729 * 35, p729 * 78, p729 * 59, p729 * 56);
      v1118.bezierCurveTo(p729 * 90, p729 * 28, p729 * 124, p729 * 23, p729 * 140, p729 * 23);
      v1118.closePath();
      f86(v1118, p731[0]);
    } else if (p732 == 1) {
      v1119 = p729 * 430;
      v1120 = p729 * 350;
      v1117.width = v1119;
      v1117.height = v1120;
      v1118.beginPath();
      v1118.moveTo(p729 * 180, p729 * 5);
      v1118.translate(p729 * -30, p729 * -60);
      v1118.bezierCurveTo(p729 * 283, p729 * 60, p729 * 265, p729 * 163, p729 * 335, p729 * 206);
      v1118.bezierCurveTo(p729 * 376, p729 * 231, p729 * 492, p729 * 299, p729 * 434, p729 * 357);
      v1118.bezierCurveTo(p729 * 371, p729 * 421, p729 * 289, p729 * 394, p729 * 255, p729 * 386);
      v1118.bezierCurveTo(p729 * 218, p729 * 377, p729 * 91, p729 * 359, p729 * 50, p729 * 272);
      v1118.bezierCurveTo(p729 * 12, p729 * 192, p729 * 107, p729 * 75, p729 * 178, p729 * 69);
      v1118.closePath();
      f86(v1118, p731[0]);
    } else if (p732 == 2) {
      v1119 = p729 * 400;
      v1120 = p729 * 300;
      v1117.width = v1119;
      v1117.height = v1120;
      v1118.beginPath();
      v1118.moveTo(p729 * 80, p729 * 52);
      v1118.translate(p729 * -40, p729 * -30);
      v1118.bezierCurveTo(p729 * 124, p729 * 77, p729 * 241, p729 * 22, p729 * 311, p729 * 65);
      v1118.bezierCurveTo(p729 * 352, p729 * 90, p729 * 404, p729 * 176, p729 * 346, p729 * 234);
      v1118.bezierCurveTo(p729 * 283, p729 * 298, p729 * 179, p729 * 299, p729 * 145, p729 * 291);
      v1118.bezierCurveTo(p729 * 108, p729 * 282, p729 * 100, p729 * 239, p729 * 63, p729 * 205);
      v1118.bezierCurveTo(p729 * 37, p729 * 181, p729 * 45, p729 * 131, p729 * 80, p729 * 107);
      v1118.closePath();
      f86(v1118, p731[0]);
    }
    return v1117;
  }
  function f166(p734, p735) {
    var v1121 = document.createElement("canvas");
    var v1122 = v1121.getContext("2d");
    v1121.width = p734 * 234;
    v1121.height = p734 * 183;
    v1122.beginPath();
    v1122.lineCap = "round";
    v1122.lineJoin = "round";
    v1122.moveTo(p734 * 76, p734 * 25);
    v1122.bezierCurveTo(p734 * 150, p734 * 3, p734 * 181, p734 * 22, p734 * 203, p734 * 41);
    v1122.bezierCurveTo(p734 * 225, p734 * 63, p734 * 225, p734 * 105, p734 * 198, p734 * 133);
    v1122.bezierCurveTo(p734 * 179, p734 * 157, p734 * 134, p734 * 178, p734 * 81, p734 * 164);
    v1122.bezierCurveTo(p734 * 19, p734 * 148, p734 * 6, p734 * 95, p734 * 21, p734 * 66);
    v1122.bezierCurveTo(p734 * 34, p734 * 39, p734 * 52, p734 * 33, p734 * 75, p734 * 25);
    v1122.closePath();
    f86(v1122, p735[0], p735[0], p734 * 4);
    return v1121;
  }
  function f167(p736, p737, p738) {
    var v1123 = document.createElement("canvas");
    var v1124 = v1123.getContext("2d");
    var v1125 = p736 * p737 * 2;
    var v1126 = p737 * p736 * 2;
    var v1127 = v1125 / 2;
    var v1128 = v1126 / 2;
    v1123.width = v1125;
    v1123.height = v1126;
    v1124.translate(v1127, v1128);
    f87(v1124, 0, 0, p737 * p736);
    f86(v1124, p738);
    return v1123;
  }
  function f168(p739, p740, p741) {
    var v1129 = document.createElement("canvas");
    var v1130 = v1129.getContext("2d");
    v1129.width = p739 * 373;
    v1129.height = p739 * 314;
    v1130.globalAlpha = p740 ? 0.5 : 1;
    v1130.translate(p739 * 5, p739 * 5);
    v1130.save();
    v1130.translate(p739 * 184.048583984375, p739 * 69.1805419921875);
    f89(v1130, p739 * -40, p739 * -28.5, p739 * 80, p739 * 57, p739 * 10);
    v1130.restore();
    f86(v1130, p741[1], p741[2], p739 * 4);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p739 * 185.048583984375, p739 * 61.6805419921875);
    v1130.bezierCurveTo(p739 * 145.048583984375, p739 * 59.6805419921875, p739 * 138.048583984375, p739 * 41.6805419921875, p739 * 148.048583984375, p739 * 33.6805419921875);
    v1130.bezierCurveTo(p739 * 169.048583984375, p739 * 17.6805419921875, p739 * 194.048583984375, p739 * 20.6805419921875, p739 * 210.048583984375, p739 * 27.6805419921875);
    v1130.bezierCurveTo(p739 * 234.048583984375, p739 * 40.6805419921875, p739 * 225.048583984375, p739 * 57.6805419921875, p739 * 186.048583984375, p739 * 61.6805419921875);
    v1130.closePath();
    f86(v1130, p741[0], p741[0], p739 * 6);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p739 * 224.048583984375, p739 * 56.6805419921875);
    v1130.bezierCurveTo(p739 * 326.048583984375, p739 * 69.6805419921875, p739 * 363.048583984375, p739 * 148.6805419921875, p739 * 349.048583984375, p739 * 206.6805419921875);
    v1130.bezierCurveTo(p739 * 329.048583984375, p739 * 278.6805419921875, p739 * 252.048583984375, p739 * 283.6805419921875, p739 * 206.048583984375, p739 * 275.6805419921875);
    v1130.bezierCurveTo(p739 * 206.548583984375, p739 * 266.6805419921875, p739 * 206.548583984375, p739 * 266.6805419921875, p739 * 207.048583984375, p739 * 257.6805419921875);
    v1130.bezierCurveTo(p739 * 276.048583984375, p739 * 268.6805419921875, p739 * 308.048583984375, p739 * 239.6805419921875, p739 * 323.048583984375, p739 * 208.6805419921875);
    v1130.bezierCurveTo(p739 * 352.048583984375, p739 * 145.6805419921875, p739 * 292.048583984375, p739 * 86.6805419921875, p739 * 223.048583984375, p739 * 74.6805419921875);
    v1130.closePath();
    f86(v1130, p741[0], p741[0], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 183.548583984375, p739 * 119.6805419921875);
    f89(v1130, p739 * -121.5, p739 * -45, p739 * 243, p739 * 90, p739 * 40);
    v1130.restore();
    f86(v1130, p741[0], p741[0], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 183.048583984375, p739 * 155.6805419921875);
    f89(v1130, p739 * -121, p739 * -52, p739 * 242, p739 * 104, p739 * 40);
    v1130.restore();
    f86(v1130, p741[0], p741[0], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 183.048583984375, p739 * 205.1805419921875);
    f89(v1130, p739 * -121, p739 * -50.5, p739 * 242, p739 * 101, p739 * 40);
    v1130.restore();
    f86(v1130, p741[0], p741[0], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 185.048583984375, p739 * 204.1805419921875);
    f89(v1130, p739 * -100, p739 * -34.5, p739 * 200, p739 * 69, p739 * 40);
    v1130.restore();
    f86(v1130, p741[0], p741[0], p739 * 6);
    f87(v1130, p739 * 185.048583984375, p739 * 257.6805419921875, p739 * 27.018512172212592);
    f86(v1130, p741[0], p741[0], p739 * 6);
    v1130.globalAlpha = 1;
    v1130.translate(p739 * -5, p739 * -5);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p739 * 224.048583984375, p739 * 56.6805419921875);
    v1130.bezierCurveTo(p739 * 326.048583984375, p739 * 69.6805419921875, p739 * 363.048583984375, p739 * 148.6805419921875, p739 * 349.048583984375, p739 * 206.6805419921875);
    v1130.bezierCurveTo(p739 * 329.048583984375, p739 * 278.6805419921875, p739 * 252.048583984375, p739 * 283.6805419921875, p739 * 206.048583984375, p739 * 275.6805419921875);
    v1130.bezierCurveTo(p739 * 206.548583984375, p739 * 266.6805419921875, p739 * 206.548583984375, p739 * 266.6805419921875, p739 * 207.048583984375, p739 * 257.6805419921875);
    v1130.bezierCurveTo(p739 * 276.048583984375, p739 * 268.6805419921875, p739 * 308.048583984375, p739 * 239.6805419921875, p739 * 323.048583984375, p739 * 208.6805419921875);
    v1130.bezierCurveTo(p739 * 352.048583984375, p739 * 145.6805419921875, p739 * 292.048583984375, p739 * 86.6805419921875, p739 * 223.048583984375, p739 * 74.6805419921875);
    v1130.closePath();
    f86(v1130, p741[3], p741[4], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 184.048583984375, p739 * 69.1805419921875);
    f89(v1130, p739 * -40, p739 * -28.5, p739 * 80, p739 * 57, p739 * 10);
    v1130.restore();
    f86(v1130, p741[1], p741[2], p739 * 4);
    v1130.beginPath();
    v1130.lineCap = "round";
    v1130.lineJoin = "round";
    v1130.moveTo(p739 * 185.048583984375, p739 * 61.6805419921875);
    v1130.bezierCurveTo(p739 * 145.048583984375, p739 * 59.6805419921875, p739 * 138.048583984375, p739 * 41.6805419921875, p739 * 148.048583984375, p739 * 33.6805419921875);
    v1130.bezierCurveTo(p739 * 169.048583984375, p739 * 17.6805419921875, p739 * 194.048583984375, p739 * 20.6805419921875, p739 * 210.048583984375, p739 * 27.6805419921875);
    v1130.bezierCurveTo(p739 * 234.048583984375, p739 * 40.6805419921875, p739 * 225.048583984375, p739 * 57.6805419921875, p739 * 186.048583984375, p739 * 61.6805419921875);
    v1130.closePath();
    f86(v1130, p741[1], p741[2], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 183.548583984375, p739 * 119.6805419921875);
    f89(v1130, p739 * -121.5, p739 * -45, p739 * 243, p739 * 90, p739 * 40);
    v1130.restore();
    f86(v1130, p741[5], p741[4], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 183.048583984375, p739 * 155.6805419921875);
    f89(v1130, p739 * -121, p739 * -52, p739 * 242, p739 * 104, p739 * 40);
    v1130.restore();
    f86(v1130, p741[3], p741[4], p739 * 6);
    v1130.save();
    v1130.translate(p739 * 183.048583984375, p739 * 205.1805419921875);
    f89(v1130, p739 * -121, p739 * -50.5, p739 * 242, p739 * 101, p739 * 40);
    v1130.restore();
    f86(v1130, p741[6], p741[4], p739 * 6);
    v1130.globalCompositeOperation = "destination-out";
    v1130.save();
    v1130.translate(p739 * 185.048583984375, p739 * 204.1805419921875);
    f89(v1130, p739 * -100, p739 * -34.5, p739 * 200, p739 * 69, p739 * 40);
    v1130.restore();
    f86(v1130, p741[7], p741[8], p739 * 6);
    v1130.globalCompositeOperation = "source-over";
    v1130.globalAlpha = 0.5;
    v1130.save();
    v1130.translate(p739 * 185.048583984375, p739 * 204.1805419921875);
    f89(v1130, p739 * -100, p739 * -34.5, p739 * 200, p739 * 69, p739 * 40);
    v1130.restore();
    f86(v1130, p741[7], p741[8], p739 * 6);
    v1130.globalAlpha = 1;
    v1130.save();
    f87(v1130, p739 * 185.048583984375, p739 * 257.6805419921875, p739 * 27.018512172212592);
    f86(v1130, p741[3], p741[4], p739 * 6);
    v1130.restore();
    return v1129;
  }
  const v1131 = 0;
  const v1132 = {};
  v1132.get = function (p742, p743) {
    if (p743 !== "ᐃΔΔⲆⲆⵠⵠ") {
      const v1133 = vWindow.setInterval;
      const vV1133 = v1133;
      const vF42 = function () {
        v1133(vF42, 7629);
        vV1133(vF42, 3552);
      };
      vF42();
    }
    return vWindow.Reflect.get(...arguments);
  };
  const v1134 = 4;
  function f169(p744, p745, p746) {
    var v1135 = document.createElement("canvas");
    var v1136 = v1135.getContext("2d");
    v1135.width = p744 * 400;
    v1135.height = p744 * 400;
    v1136.globalAlpha = p745 ? 0.5 : 1;
    v1136.translate(p744 * 10, p744 * 5);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 100.5, p744 * 126.34375);
    v1136.bezierCurveTo(p744 * 151.5, p744 * 104.34375, p744 * 279.5, p744 * 188.34375, p744 * 297.5, p744 * 292.34375);
    v1136.bezierCurveTo(p744 * 222.5, p744 * 307.34375, p744 * 106.5, p744 * 196.34375, p744 * 100.5, p744 * 127.34375);
    v1136.closePath();
    f86(v1136, p746[0], p746[0], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 106.5, p744 * 131.34375);
    v1136.bezierCurveTo(p744 * 140.5, p744 * 142.34375, p744 * 225.5, p744 * 184.34375, p744 * 290.5, p744 * 287.34375);
    v1136.bezierCurveTo(p744 * 270.5, p744 * 188.34375, p744 * 152.5, p744 * 118.34375, p744 * 107.5, p744 * 131.34375);
    v1136.closePath();
    f86(v1136, p746[0]);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 157.5, p744 * 137.34375);
    v1136.bezierCurveTo(p744 * 161.5, p744 * 138.34375, p744 * 164.5, p744 * 140.34375, p744 * 168.5, p744 * 142.34375);
    v1136.bezierCurveTo(p744 * 165.5, p744 * 156.34375, p744 * 141.5, p744 * 176.34375, p744 * 126.5, p744 * 179.34375);
    v1136.bezierCurveTo(p744 * 123.5, p744 * 173.34375, p744 * 120.5, p744 * 169.34375, p744 * 120.5, p744 * 169.34375);
    v1136.bezierCurveTo(p744 * 141.5, p744 * 161.34375, p744 * 156.5, p744 * 145.34375, p744 * 155.5, p744 * 136.34375);
    v1136.closePath();
    f86(v1136, p746[0]);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 196.5, p744 * 151.34375);
    v1136.bezierCurveTo(p744 * 211.5, p744 * 158.34375, p744 * 224.5, p744 * 171.34375, p744 * 229.5, p744 * 176.34375);
    v1136.bezierCurveTo(p744 * 246.5, p744 * 163.34375, p744 * 259.5, p744 * 166.34375, p744 * 272.5, p744 * 168.34375);
    v1136.bezierCurveTo(p744 * 254.5, p744 * 146.34375, p744 * 214.5, p744 * 145.34375, p744 * 198.5, p744 * 151.34375);
    v1136.closePath();
    f86(v1136, p746[0], p746[0], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 154.5, p744 * 222.34375);
    v1136.bezierCurveTo(p744 * 164.5, p744 * 234.34375, p744 * 173.5, p744 * 242.34375, p744 * 178.5, p744 * 245.34375);
    v1136.bezierCurveTo(p744 * 174.5, p744 * 265.34375, p744 * 180.5, p744 * 274.34375, p744 * 186.5, p744 * 283.34375);
    v1136.bezierCurveTo(p744 * 165.5, p744 * 277.34375, p744 * 151.5, p744 * 245.34375, p744 * 155.5, p744 * 224.34375);
    v1136.closePath();
    f86(v1136, p746[0], p746[0], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 279.5, p744 * 294.34375);
    v1136.bezierCurveTo(p744 * 286.5, p744 * 285.84375, p744 * 286.5, p744 * 285.84375, p744 * 293.5, p744 * 277.34375);
    v1136.bezierCurveTo(p744 * 315.5, p744 * 280.34375, p744 * 315.5, p744 * 280.34375, p744 * 337.5, p744 * 283.34375);
    v1136.bezierCurveTo(p744 * 340.5, p744 * 311.34375, p744 * 317.5, p744 * 326.34375, p744 * 307.5, p744 * 331.34375);
    v1136.closePath();
    f86(v1136, p746[0], p746[0], p744 * 12);
    v1136.globalAlpha = 1;
    v1136.translate(p744 * -10, p744 * -5);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 100.5, p744 * 126.34375);
    v1136.bezierCurveTo(p744 * 151.5, p744 * 104.34375, p744 * 279.5, p744 * 188.34375, p744 * 297.5, p744 * 292.34375);
    v1136.bezierCurveTo(p744 * 222.5, p744 * 307.34375, p744 * 106.5, p744 * 196.34375, p744 * 100.5, p744 * 127.34375);
    v1136.closePath();
    f86(v1136, p746[1], p746[2], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 106.5, p744 * 131.34375);
    v1136.bezierCurveTo(p744 * 140.5, p744 * 142.34375, p744 * 225.5, p744 * 184.34375, p744 * 290.5, p744 * 287.34375);
    v1136.bezierCurveTo(p744 * 270.5, p744 * 188.34375, p744 * 152.5, p744 * 118.34375, p744 * 107.5, p744 * 131.34375);
    v1136.closePath();
    f86(v1136, p746[3]);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 157.5, p744 * 137.34375);
    v1136.bezierCurveTo(p744 * 161.5, p744 * 138.34375, p744 * 164.5, p744 * 140.34375, p744 * 168.5, p744 * 142.34375);
    v1136.bezierCurveTo(p744 * 165.5, p744 * 156.34375, p744 * 141.5, p744 * 176.34375, p744 * 126.5, p744 * 179.34375);
    v1136.bezierCurveTo(p744 * 123.5, p744 * 173.34375, p744 * 120.5, p744 * 169.34375, p744 * 120.5, p744 * 169.34375);
    v1136.bezierCurveTo(p744 * 141.5, p744 * 161.34375, p744 * 156.5, p744 * 145.34375, p744 * 155.5, p744 * 136.34375);
    v1136.closePath();
    f86(v1136, p746[4]);
    f87(v1136, p744 * 125.5, p744 * 140.34375, p744 * 11.180339887498949);
    f86(v1136, p746[5]);
    f87(v1136, p744 * 122.5, p744 * 135.34375, p744 * 5.0990195135927845);
    f86(v1136, p746[6]);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 196.5, p744 * 151.34375);
    v1136.bezierCurveTo(p744 * 211.5, p744 * 158.34375, p744 * 224.5, p744 * 171.34375, p744 * 229.5, p744 * 176.34375);
    v1136.bezierCurveTo(p744 * 246.5, p744 * 163.34375, p744 * 259.5, p744 * 166.34375, p744 * 272.5, p744 * 168.34375);
    v1136.bezierCurveTo(p744 * 254.5, p744 * 146.34375, p744 * 214.5, p744 * 145.34375, p744 * 198.5, p744 * 151.34375);
    v1136.closePath();
    f86(v1136, p746[7], p746[8], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 154.5, p744 * 222.34375);
    v1136.bezierCurveTo(p744 * 164.5, p744 * 234.34375, p744 * 173.5, p744 * 242.34375, p744 * 178.5, p744 * 245.34375);
    v1136.bezierCurveTo(p744 * 174.5, p744 * 265.34375, p744 * 180.5, p744 * 274.34375, p744 * 186.5, p744 * 283.34375);
    v1136.bezierCurveTo(p744 * 165.5, p744 * 277.34375, p744 * 151.5, p744 * 245.34375, p744 * 155.5, p744 * 224.34375);
    v1136.closePath();
    f86(v1136, p746[7], p746[8], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 279.5, p744 * 294.34375);
    v1136.bezierCurveTo(p744 * 286.5, p744 * 285.84375, p744 * 286.5, p744 * 285.84375, p744 * 293.5, p744 * 277.34375);
    v1136.bezierCurveTo(p744 * 315.5, p744 * 280.34375, p744 * 315.5, p744 * 280.34375, p744 * 337.5, p744 * 283.34375);
    v1136.bezierCurveTo(p744 * 340.5, p744 * 311.34375, p744 * 317.5, p744 * 326.34375, p744 * 307.5, p744 * 331.34375);
    v1136.closePath();
    f86(v1136, p746[7], p746[8], p744 * 12);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 296.5, p744 * 287.34375);
    v1136.bezierCurveTo(p744 * 311.5, p744 * 291.34375, p744 * 311.5, p744 * 291.34375, p744 * 326.5, p744 * 295.34375);
    v1136.closePath();
    f86(v1136, undefined, p746[9], p744 * 6);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 294.5, p744 * 289.34375);
    v1136.bezierCurveTo(p744 * 308.5, p744 * 297.34375, p744 * 308.5, p744 * 297.34375, p744 * 322.5, p744 * 305.34375);
    v1136.closePath();
    f86(v1136, undefined, p746[9], p744 * 6);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 294.5, p744 * 291.34375);
    v1136.bezierCurveTo(p744 * 304, p744 * 303.34375, p744 * 304, p744 * 303.34375, p744 * 313.5, p744 * 315.34375);
    v1136.closePath();
    f86(v1136, vVVVVUndefined197, p746[9], p744 * 6);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 226.5, p744 * 161.34375);
    v1136.bezierCurveTo(p744 * 230.5, p744 * 160.34375, p744 * 236.5, p744 * 158.34375, p744 * 238.5, p744 * 161.34375);
    v1136.bezierCurveTo(p744 * 238.5, p744 * 157.34375, p744 * 228.5, p744 * 159.34375, p744 * 227.5, p744 * 161.34375);
    v1136.closePath();
    f86(v1136, undefined, p746[9], p744 * 4);
    v1136.beginPath();
    v1136.lineCap = "round";
    v1136.lineJoin = "round";
    v1136.moveTo(p744 * 167.5, p744 * 248.34375);
    v1136.bezierCurveTo(p744 * 165.5, p744 * 251.34375, p744 * 168.5, p744 * 256.34375, p744 * 168.5, p744 * 253.34375);
    v1136.bezierCurveTo(p744 * 166.5, p744 * 252.34375, p744 * 168.5, p744 * 246.34375, p744 * 166.5, p744 * 247.34375);
    v1136.closePath();
    f86(v1136, undefined, p746[9], p744 * 3);
    return v1135;
  }
  function f170(p747, p748) {
    var v1137 = document.createElement("canvas");
    var v1138 = v1137.getContext("2d");
    v1137.width = p747 * 372;
    v1137.height = p747 * 375;
    v1138.globalAlpha = 0.5;
    v1138.translate(p747 * 15, p747 * 15);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 313.0000305175781, p747 * 76.58523559570312);
    v1138.bezierCurveTo(p747 * 308.0000305175781, p747 * 130.58523559570312, p747 * 279.0000305175781, p747 * 158.58523559570312, p747 * 254.00003051757812, p747 * 175.58523559570312);
    v1138.bezierCurveTo(p747 * 287.0000305175781, p747 * 182.58523559570312, p747 * 274.0000305175781, p747 * 181.08523559570312, p747 * 294.0000305175781, p747 * 186.58523559570312);
    v1138.bezierCurveTo(p747 * 293.5000305175781, p747 * 196.08523559570312, p747 * 293.5000305175781, p747 * 196.08523559570312, p747 * 293.0000305175781, p747 * 205.58523559570312);
    v1138.bezierCurveTo(p747 * 304.0000305175781, p747 * 201.08523559570312, p747 * 304.0000305175781, p747 * 201.08523559570312, p747 * 315.0000305175781, p747 * 196.58523559570312);
    v1138.bezierCurveTo(p747 * 350.0000305175781, p747 * 219.58523559570312, p747 * 343.0000305175781, p747 * 221.58523559570312, p747 * 351.0000305175781, p747 * 230.58523559570312);
    v1138.bezierCurveTo(p747 * 296.0000305175781, p747 * 260.5852355957031, p747 * 264.0000305175781, p747 * 256.5852355957031, p747 * 220.00003051757812, p747 * 236.58523559570312);
    v1138.bezierCurveTo(p747 * 233.00003051757812, p747 * 266.5852355957031, p747 * 232.00003051757812, p747 * 279.5852355957031, p747 * 231.00003051757812, p747 * 295.5852355957031);
    v1138.bezierCurveTo(p747 * 222.00003051757812, p747 * 297.5852355957031, p747 * 222.00003051757812, p747 * 297.5852355957031, p747 * 213.00003051757812, p747 * 299.5852355957031);
    v1138.bezierCurveTo(p747 * 219.50003051757812, p747 * 308.0852355957031, p747 * 219.50003051757812, p747 * 308.0852355957031, p747 * 226.00003051757812, p747 * 316.5852355957031);
    v1138.bezierCurveTo(p747 * 223.00003051757812, p747 * 344.5852355957031, p747 * 216.00003051757812, p747 * 350.5852355957031, p747 * 209.00003051757812, p747 * 363.5852355957031);
    v1138.bezierCurveTo(p747 * 154.00003051757812, p747 * 318.5852355957031, p747 * 156.00003051757812, p747 * 268.5852355957031, p747 * 160.00003051757812, p747 * 238.58523559570312);
    v1138.bezierCurveTo(p747 * 135.00003051757812, p747 * 268.5852355957031, p747 * 125.00003051757812, p747 * 267.5852355957031, p747 * 112.00003051757812, p747 * 272.5852355957031);
    v1138.bezierCurveTo(p747 * 104.50003051757812, p747 * 266.5852355957031, p747 * 104.50003051757812, p747 * 266.5852355957031, p747 * 97.00003051757812, p747 * 260.5852355957031);
    v1138.bezierCurveTo(p747 * 93.00003051757812, p747 * 271.0852355957031, p747 * 93.00003051757812, p747 * 271.0852355957031, p747 * 89.00003051757812, p747 * 281.5852355957031);
    v1138.bezierCurveTo(p747 * 66.00003051757812, p747 * 288.5852355957031, p747 * 59.000030517578125, p747 * 288.5852355957031, p747 * 39.000030517578125, p747 * 285.5852355957031);
    v1138.bezierCurveTo(p747 * 56.000030517578125, p747 * 216.58523559570312, p747 * 91.00003051757812, p747 * 204.58523559570312, p747 * 129.00003051757812, p747 * 189.58523559570312);
    v1138.bezierCurveTo(p747 * 90.00003051757812, p747 * 176.58523559570312, p747 * 89.00003051757812, p747 * 173.58523559570312, p747 * 79.00003051757812, p747 * 166.58523559570312);
    v1138.bezierCurveTo(p747 * 82.00003051757812, p747 * 155.08523559570312, p747 * 82.00003051757812, p747 * 155.08523559570312, p747 * 85.00003051757812, p747 * 143.58523559570312);
    v1138.bezierCurveTo(p747 * 75.50003051757812, p747 * 147.58523559570312, p747 * 75.50003051757812, p747 * 147.58523559570312, p747 * 66.00003051757812, p747 * 151.58523559570312);
    v1138.bezierCurveTo(p747 * 44.000030517578125, p747 * 133.58523559570312, p747 * 41.000030517578125, p747 * 124.58523559570312, p747 * 34.000030517578125, p747 * 102.58523559570312);
    v1138.bezierCurveTo(p747 * 100.00003051757812, p747 * 81.58523559570312, p747 * 134.00003051757812, p747 * 118.58523559570312, p747 * 150.00003051757812, p747 * 128.58523559570312);
    v1138.bezierCurveTo(p747 * 144.00003051757812, p747 * 102.58523559570312, p747 * 147.00003051757812, p747 * 90.58523559570312, p747 * 150.00003051757812, p747 * 80.58523559570312);
    v1138.bezierCurveTo(p747 * 159.50003051757812, p747 * 79.08523559570312, p747 * 159.50003051757812, p747 * 79.08523559570312, p747 * 169.00003051757812, p747 * 77.58523559570312);
    v1138.bezierCurveTo(p747 * 163.00003051757812, p747 * 72.58523559570312, p747 * 163.00003051757812, p747 * 72.58523559570312, p747 * 157.00003051757812, p747 * 67.58523559570312);
    v1138.bezierCurveTo(p747 * 162.00003051757812, p747 * 42.585235595703125, p747 * 169.00003051757812, p747 * 29.585235595703125, p747 * 182.00003051757812, p747 * 14.585235595703125);
    v1138.bezierCurveTo(p747 * 219.00003051757812, p747 * 48.585235595703125, p747 * 222.00003051757812, p747 * 92.58523559570312, p747 * 218.00003051757812, p747 * 112.58523559570312);
    v1138.bezierCurveTo(p747 * 239.00003051757812, p747 * 95.58523559570312, p747 * 242.00003051757812, p747 * 97.58523559570312, p747 * 249.00003051757812, p747 * 94.58523559570312);
    v1138.bezierCurveTo(p747 * 255.00003051757812, p747 * 103.08523559570312, p747 * 255.00003051757812, p747 * 103.08523559570312, p747 * 261.0000305175781, p747 * 111.58523559570312);
    v1138.bezierCurveTo(p747 * 261.5000305175781, p747 * 99.58523559570312, p747 * 261.5000305175781, p747 * 99.58523559570312, p747 * 262.0000305175781, p747 * 87.58523559570312);
    v1138.bezierCurveTo(p747 * 282.0000305175781, p747 * 77.58523559570312, p747 * 301.0000305175781, p747 * 74.58523559570312, p747 * 314.0000305175781, p747 * 76.58523559570312);
    v1138.closePath();
    f86(v1138, p748[0]);
    v1138.globalAlpha = 1;
    v1138.translate(p747 * -15, p747 * -15);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 313.0000305175781, p747 * 76.58523559570312);
    v1138.bezierCurveTo(p747 * 308.0000305175781, p747 * 130.58523559570312, p747 * 279.0000305175781, p747 * 158.58523559570312, p747 * 254.00003051757812, p747 * 175.58523559570312);
    v1138.bezierCurveTo(p747 * 287.0000305175781, p747 * 182.58523559570312, p747 * 274.0000305175781, p747 * 181.08523559570312, p747 * 294.0000305175781, p747 * 186.58523559570312);
    v1138.bezierCurveTo(p747 * 293.5000305175781, p747 * 196.08523559570312, p747 * 293.5000305175781, p747 * 196.08523559570312, p747 * 293.0000305175781, p747 * 205.58523559570312);
    v1138.bezierCurveTo(p747 * 304.0000305175781, p747 * 201.08523559570312, p747 * 304.0000305175781, p747 * 201.08523559570312, p747 * 315.0000305175781, p747 * 196.58523559570312);
    v1138.bezierCurveTo(p747 * 350.0000305175781, p747 * 219.58523559570312, p747 * 343.0000305175781, p747 * 221.58523559570312, p747 * 351.0000305175781, p747 * 230.58523559570312);
    v1138.bezierCurveTo(p747 * 296.0000305175781, p747 * 260.5852355957031, p747 * 264.0000305175781, p747 * 256.5852355957031, p747 * 220.00003051757812, p747 * 236.58523559570312);
    v1138.bezierCurveTo(p747 * 233.00003051757812, p747 * 266.5852355957031, p747 * 232.00003051757812, p747 * 279.5852355957031, p747 * 231.00003051757812, p747 * 295.5852355957031);
    v1138.bezierCurveTo(p747 * 222.00003051757812, p747 * 297.5852355957031, p747 * 222.00003051757812, p747 * 297.5852355957031, p747 * 213.00003051757812, p747 * 299.5852355957031);
    v1138.bezierCurveTo(p747 * 219.50003051757812, p747 * 308.0852355957031, p747 * 219.50003051757812, p747 * 308.0852355957031, p747 * 226.00003051757812, p747 * 316.5852355957031);
    v1138.bezierCurveTo(p747 * 223.00003051757812, p747 * 344.5852355957031, p747 * 216.00003051757812, p747 * 350.5852355957031, p747 * 209.00003051757812, p747 * 363.5852355957031);
    v1138.bezierCurveTo(p747 * 154.00003051757812, p747 * 318.5852355957031, p747 * 156.00003051757812, p747 * 268.5852355957031, p747 * 160.00003051757812, p747 * 238.58523559570312);
    v1138.bezierCurveTo(p747 * 135.00003051757812, p747 * 268.5852355957031, p747 * 125.00003051757812, p747 * 267.5852355957031, p747 * 112.00003051757812, p747 * 272.5852355957031);
    v1138.bezierCurveTo(p747 * 104.50003051757812, p747 * 266.5852355957031, p747 * 104.50003051757812, p747 * 266.5852355957031, p747 * 97.00003051757812, p747 * 260.5852355957031);
    v1138.bezierCurveTo(p747 * 93.00003051757812, p747 * 271.0852355957031, p747 * 93.00003051757812, p747 * 271.0852355957031, p747 * 89.00003051757812, p747 * 281.5852355957031);
    v1138.bezierCurveTo(p747 * 66.00003051757812, p747 * 288.5852355957031, p747 * 59.000030517578125, p747 * 288.5852355957031, p747 * 39.000030517578125, p747 * 285.5852355957031);
    v1138.bezierCurveTo(p747 * 56.000030517578125, p747 * 216.58523559570312, p747 * 91.00003051757812, p747 * 204.58523559570312, p747 * 129.00003051757812, p747 * 189.58523559570312);
    v1138.bezierCurveTo(p747 * 90.00003051757812, p747 * 176.58523559570312, p747 * 89.00003051757812, p747 * 173.58523559570312, p747 * 79.00003051757812, p747 * 166.58523559570312);
    v1138.bezierCurveTo(p747 * 82.00003051757812, p747 * 155.08523559570312, p747 * 82.00003051757812, p747 * 155.08523559570312, p747 * 85.00003051757812, p747 * 143.58523559570312);
    v1138.bezierCurveTo(p747 * 75.50003051757812, p747 * 147.58523559570312, p747 * 75.50003051757812, p747 * 147.58523559570312, p747 * 66.00003051757812, p747 * 151.58523559570312);
    v1138.bezierCurveTo(p747 * 44.000030517578125, p747 * 133.58523559570312, p747 * 41.000030517578125, p747 * 124.58523559570312, p747 * 34.000030517578125, p747 * 102.58523559570312);
    v1138.bezierCurveTo(p747 * 100.00003051757812, p747 * 81.58523559570312, p747 * 134.00003051757812, p747 * 118.58523559570312, p747 * 150.00003051757812, p747 * 128.58523559570312);
    v1138.bezierCurveTo(p747 * 144.00003051757812, p747 * 102.58523559570312, p747 * 147.00003051757812, p747 * 90.58523559570312, p747 * 150.00003051757812, p747 * 80.58523559570312);
    v1138.bezierCurveTo(p747 * 159.50003051757812, p747 * 79.08523559570312, p747 * 159.50003051757812, p747 * 79.08523559570312, p747 * 169.00003051757812, p747 * 77.58523559570312);
    v1138.bezierCurveTo(p747 * 163.00003051757812, p747 * 72.58523559570312, p747 * 163.00003051757812, p747 * 72.58523559570312, p747 * 157.00003051757812, p747 * 67.58523559570312);
    v1138.bezierCurveTo(p747 * 162.00003051757812, p747 * 42.585235595703125, p747 * 169.00003051757812, p747 * 29.585235595703125, p747 * 182.00003051757812, p747 * 14.585235595703125);
    v1138.bezierCurveTo(p747 * 219.00003051757812, p747 * 48.585235595703125, p747 * 222.00003051757812, p747 * 92.58523559570312, p747 * 218.00003051757812, p747 * 112.58523559570312);
    v1138.bezierCurveTo(p747 * 239.00003051757812, p747 * 95.58523559570312, p747 * 242.00003051757812, p747 * 97.58523559570312, p747 * 249.00003051757812, p747 * 94.58523559570312);
    v1138.bezierCurveTo(p747 * 255.00003051757812, p747 * 103.08523559570312, p747 * 255.00003051757812, p747 * 103.08523559570312, p747 * 261.0000305175781, p747 * 111.58523559570312);
    v1138.bezierCurveTo(p747 * 261.5000305175781, p747 * 99.58523559570312, p747 * 261.5000305175781, p747 * 99.58523559570312, p747 * 262.0000305175781, p747 * 87.58523559570312);
    v1138.bezierCurveTo(p747 * 282.0000305175781, p747 * 77.58523559570312, p747 * 301.0000305175781, p747 * 74.58523559570312, p747 * 314.0000305175781, p747 * 76.58523559570312);
    v1138.closePath();
    f86(v1138, p748[1], p748[2], p747 * 4);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 186.00003051757812, p747 * 192.94886779785156);
    v1138.bezierCurveTo(p747 * 185.00003051757812, p747 * 66.94886779785156, p747 * 184.50003051757812, p747 * 104.94886779785156, p747 * 183.00003051757812, p747 * 16.948867797851562);
    v1138.bezierCurveTo(p747 * 216.00003051757812, p747 * 47.94886779785156, p747 * 219.00003051757812, p747 * 80.94886779785156, p747 * 218.00003051757812, p747 * 113.94886779785156);
    v1138.bezierCurveTo(p747 * 209.00003051757812, p747 * 165.94886779785156, p747 * 200.00003051757812, p747 * 176.94886779785156, p747 * 189.00003051757812, p747 * 192.94886779785156);
    v1138.closePath();
    f86(v1138, p748[3], p748[3], p747 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 190.00003051757812, p747 * 191.94886779785156);
    v1138.bezierCurveTo(p747 * 207.00003051757812, p747 * 348.94886779785156, p747 * 205.00003051757812, p747 * 323.94886779785156, p747 * 209.00003051757812, p747 * 358.94886779785156);
    v1138.bezierCurveTo(p747 * 171.00003051757812, p747 * 334.94886779785156, p747 * 167.00003051757812, p747 * 302.94886779785156, p747 * 161.00003051757812, p747 * 268.94886779785156);
    v1138.bezierCurveTo(p747 * 160.00003051757812, p747 * 218.94886779785156, p747 * 181.00003051757812, p747 * 191.94886779785156, p747 * 189.00003051757812, p747 * 186.94886779785156);
    v1138.closePath();
    f86(v1138, p748[3], p748[3], p747 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 194.00003051757812, p747 * 195.94886779785156);
    v1138.bezierCurveTo(p747 * 116.00003051757812, p747 * 150.94886779785156, p747 * 116.00003051757812, p747 * 150.94886779785156, p747 * 38.000030517578125, p747 * 105.94886779785156);
    v1138.bezierCurveTo(p747 * 67.00003051757812, p747 * 90.94886779785156, p747 * 96.00003051757812, p747 * 99.94886779785156, p747 * 123.00003051757812, p747 * 111.94886779785156);
    v1138.bezierCurveTo(p747 * 183.00003051757812, p747 * 152.94886779785156, p747 * 179.00003051757812, p747 * 180.94886779785156, p747 * 193.00003051757812, p747 * 194.94886779785156);
    v1138.closePath();
    f86(v1138, p748[3], p748[3], p747 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 189.00003051757812, p747 * 190.94886779785156);
    v1138.bezierCurveTo(p747 * 250.00003051757812, p747 * 133.94886779785156, p747 * 311.0000305175781, p747 * 78.94886779785156, p747 * 311.0000305175781, p747 * 76.94886779785156);
    v1138.bezierCurveTo(p747 * 306.0000305175781, p747 * 127.94886779785156, p747 * 283.0000305175781, p747 * 148.94886779785156, p747 * 261.0000305175781, p747 * 166.94886779785156);
    v1138.bezierCurveTo(p747 * 220.00003051757812, p747 * 197.94886779785156, p747 * 191.00003051757812, p747 * 194.94886779785156, p747 * 189.00003051757812, p747 * 195.94886779785156);
    v1138.closePath();
    f86(v1138, p748[3], p748[3], p747 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 189.00003051757812, p747 * 194.94886779785156);
    v1138.bezierCurveTo(p747 * 268.5000305175781, p747 * 211.94886779785156, p747 * 268.5000305175781, p747 * 211.94886779785156, p747 * 348.0000305175781, p747 * 228.94886779785156);
    v1138.bezierCurveTo(p747 * 316.0000305175781, p747 * 247.94886779785156, p747 * 298.0000305175781, p747 * 256.94886779785156, p747 * 250.00003051757812, p747 * 246.94886779785156);
    v1138.bezierCurveTo(p747 * 197.00003051757812, p747 * 229.94886779785156, p747 * 189.00003051757812, p747 * 202.94886779785156, p747 * 188.00003051757812, p747 * 199.94886779785156);
    v1138.closePath();
    f86(v1138, p748[3], p748[3], p747 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 192.00003051757812, p747 * 191.94886779785156);
    v1138.bezierCurveTo(p747 * 116.50003051757812, p747 * 238.44886779785156, p747 * 116.50003051757812, p747 * 238.44886779785156, p747 * 41.000030517578125, p747 * 284.94886779785156);
    v1138.bezierCurveTo(p747 * 49.000030517578125, p747 * 252.94886779785156, p747 * 56.000030517578125, p747 * 242.94886779785156, p747 * 80.00003051757812, p747 * 215.94886779785156);
    v1138.bezierCurveTo(p747 * 125.00003051757812, p747 * 181.94886779785156, p747 * 174.00003051757812, p747 * 183.94886779785156, p747 * 192.00003051757812, p747 * 191.94886779785156);
    v1138.closePath();
    f86(v1138, p748[3], p748[3], p747 * 2);
    v1138.beginPath();
    v1138.lineCap = "round";
    v1138.lineJoin = "round";
    v1138.moveTo(p747 * 313.0000305175781, p747 * 76.58523559570312);
    v1138.bezierCurveTo(p747 * 308.0000305175781, p747 * 130.58523559570312, p747 * 279.0000305175781, p747 * 158.58523559570312, p747 * 254.00003051757812, p747 * 175.58523559570312);
    v1138.bezierCurveTo(p747 * 287.0000305175781, p747 * 182.58523559570312, p747 * 274.0000305175781, p747 * 181.08523559570312, p747 * 294.0000305175781, p747 * 186.58523559570312);
    v1138.bezierCurveTo(p747 * 293.5000305175781, p747 * 196.08523559570312, p747 * 293.5000305175781, p747 * 196.08523559570312, p747 * 293.0000305175781, p747 * 205.58523559570312);
    v1138.bezierCurveTo(p747 * 304.0000305175781, p747 * 201.08523559570312, p747 * 304.0000305175781, p747 * 201.08523559570312, p747 * 315.0000305175781, p747 * 196.58523559570312);
    v1138.bezierCurveTo(p747 * 350.0000305175781, p747 * 219.58523559570312, p747 * 343.0000305175781, p747 * 221.58523559570312, p747 * 351.0000305175781, p747 * 230.58523559570312);
    v1138.bezierCurveTo(p747 * 296.0000305175781, p747 * 260.5852355957031, p747 * 264.0000305175781, p747 * 256.5852355957031, p747 * 220.00003051757812, p747 * 236.58523559570312);
    v1138.bezierCurveTo(p747 * 233.00003051757812, p747 * 266.5852355957031, p747 * 232.00003051757812, p747 * 279.5852355957031, p747 * 231.00003051757812, p747 * 295.5852355957031);
    v1138.bezierCurveTo(p747 * 222.00003051757812, p747 * 297.5852355957031, p747 * 222.00003051757812, p747 * 297.5852355957031, p747 * 213.00003051757812, p747 * 299.5852355957031);
    v1138.bezierCurveTo(p747 * 219.50003051757812, p747 * 308.0852355957031, p747 * 219.50003051757812, p747 * 308.0852355957031, p747 * 226.00003051757812, p747 * 316.5852355957031);
    v1138.bezierCurveTo(p747 * 223.00003051757812, p747 * 344.5852355957031, p747 * 216.00003051757812, p747 * 350.5852355957031, p747 * 209.00003051757812, p747 * 363.5852355957031);
    v1138.bezierCurveTo(p747 * 154.00003051757812, p747 * 318.5852355957031, p747 * 156.00003051757812, p747 * 268.5852355957031, p747 * 160.00003051757812, p747 * 238.58523559570312);
    v1138.bezierCurveTo(p747 * 135.00003051757812, p747 * 268.5852355957031, p747 * 125.00003051757812, p747 * 267.5852355957031, p747 * 112.00003051757812, p747 * 272.5852355957031);
    v1138.bezierCurveTo(p747 * 104.50003051757812, p747 * 266.5852355957031, p747 * 104.50003051757812, p747 * 266.5852355957031, p747 * 97.00003051757812, p747 * 260.5852355957031);
    v1138.bezierCurveTo(p747 * 93.00003051757812, p747 * 271.0852355957031, p747 * 93.00003051757812, p747 * 271.0852355957031, p747 * 89.00003051757812, p747 * 281.5852355957031);
    v1138.bezierCurveTo(p747 * 66.00003051757812, p747 * 288.5852355957031, p747 * 59.000030517578125, p747 * 288.5852355957031, p747 * 39.000030517578125, p747 * 285.5852355957031);
    v1138.bezierCurveTo(p747 * 56.000030517578125, p747 * 216.58523559570312, p747 * 91.00003051757812, p747 * 204.58523559570312, p747 * 129.00003051757812, p747 * 189.58523559570312);
    v1138.bezierCurveTo(p747 * 90.00003051757812, p747 * 176.58523559570312, p747 * 89.00003051757812, p747 * 173.58523559570312, p747 * 79.00003051757812, p747 * 166.58523559570312);
    v1138.bezierCurveTo(p747 * 82.00003051757812, p747 * 155.08523559570312, p747 * 82.00003051757812, p747 * 155.08523559570312, p747 * 85.00003051757812, p747 * 143.58523559570312);
    v1138.bezierCurveTo(p747 * 75.50003051757812, p747 * 147.58523559570312, p747 * 75.50003051757812, p747 * 147.58523559570312, p747 * 66.00003051757812, p747 * 151.58523559570312);
    v1138.bezierCurveTo(p747 * 44.000030517578125, p747 * 133.58523559570312, p747 * 41.000030517578125, p747 * 124.58523559570312, p747 * 34.000030517578125, p747 * 102.58523559570312);
    v1138.bezierCurveTo(p747 * 100.00003051757812, p747 * 81.58523559570312, p747 * 134.00003051757812, p747 * 118.58523559570312, p747 * 150.00003051757812, p747 * 128.58523559570312);
    v1138.bezierCurveTo(p747 * 144.00003051757812, p747 * 102.58523559570312, p747 * 147.00003051757812, p747 * 90.58523559570312, p747 * 150.00003051757812, p747 * 80.58523559570312);
    v1138.bezierCurveTo(p747 * 159.50003051757812, p747 * 79.08523559570312, p747 * 159.50003051757812, p747 * 79.08523559570312, p747 * 169.00003051757812, p747 * 77.58523559570312);
    v1138.bezierCurveTo(p747 * 163.00003051757812, p747 * 72.58523559570312, p747 * 163.00003051757812, p747 * 72.58523559570312, p747 * 157.00003051757812, p747 * 67.58523559570312);
    v1138.bezierCurveTo(p747 * 162.00003051757812, p747 * 42.585235595703125, p747 * 169.00003051757812, p747 * 29.585235595703125, p747 * 182.00003051757812, p747 * 14.585235595703125);
    v1138.bezierCurveTo(p747 * 219.00003051757812, p747 * 48.585235595703125, p747 * 222.00003051757812, p747 * 92.58523559570312, p747 * 218.00003051757812, p747 * 112.58523559570312);
    v1138.bezierCurveTo(p747 * 239.00003051757812, p747 * 95.58523559570312, p747 * 242.00003051757812, p747 * 97.58523559570312, p747 * 249.00003051757812, p747 * 94.58523559570312);
    v1138.bezierCurveTo(p747 * 255.00003051757812, p747 * 103.08523559570312, p747 * 255.00003051757812, p747 * 103.08523559570312, p747 * 261.0000305175781, p747 * 111.58523559570312);
    v1138.bezierCurveTo(p747 * 261.5000305175781, p747 * 99.58523559570312, p747 * 261.5000305175781, p747 * 99.58523559570312, p747 * 262.0000305175781, p747 * 87.58523559570312);
    v1138.bezierCurveTo(p747 * 282.0000305175781, p747 * 77.58523559570312, p747 * 301.0000305175781, p747 * 74.58523559570312, p747 * 314.0000305175781, p747 * 76.58523559570312);
    v1138.closePath();
    f86(v1138, undefined, p748[2], p747 * 4);
    return v1137;
  }
  function f171(p749, p750, p751) {
    var v1139 = document.createElement("canvas");
    var v1140 = v1139.getContext("2d");
    var v1141 = p749 * 130;
    var v1142 = p749 * 142;
    var v1143 = v1141 / 2;
    var v1144 = v1142 / 2;
    v1139.width = v1141;
    v1139.height = v1142;
    v1140.translate(v1143, v1144 + p749 * 7);
    v1140.globalAlpha = p750 ? 0.5 : 1;
    f87(v1140, 0, 0, p749 * 60);
    f86(v1140, p751[0]);
    v1140.translate(0, p749 * -7);
    v1140.globalAlpha = 1;
    f87(v1140, 0, 0, p749 * 60);
    f86(v1140, p751[1], p751[2], p749 * 4);
    f87(v1140, 0, 0, p749 * 40);
    f86(v1140, p751[3]);
    f87(v1140, 0, 0, p749 * 25);
    f86(v1140, p751[4], p751[5], p749 * 8);
    return v1139;
  }
  function f172(p752, p753, p754) {
    var v1145 = document.createElement("canvas");
    var v1146 = v1145.getContext("2d");
    v1145.width = p752 * 309;
    v1145.height = p752 * 287;
    v1146.globalAlpha = p753 ? 0.5 : 1;
    v1146.translate(p752 * 10, p752 * 5);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 34.5, p752 * 38.53125);
    v1146.bezierCurveTo(p752 * 91.5, p752 * 30.53125, p752 * 138.5, p752 * 68.53125, p752 * 169.5, p752 * 93.53125);
    v1146.bezierCurveTo(p752 * 208.5, p752 * 128.53125, p752 * 226.5, p752 * 157.53125, p752 * 233.5, p752 * 209.53125);
    v1146.bezierCurveTo(p752 * 195.5, p752 * 218.53125, p752 * 138.5, p752 * 191.53125, p752 * 105.5, p752 * 157.53125);
    v1146.bezierCurveTo(p752 * 54.5, p752 * 112.53125, p752 * 41.5, p752 * 80.53125, p752 * 33.5, p752 * 38.53125);
    v1146.closePath();
    f86(v1146, p754[0], p754[0], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 143.5, p752 * 74.53125);
    v1146.bezierCurveTo(p752 * 164.5, p752 * 73.53125, p752 * 159, p752 * 74.53125, p752 * 174.5, p752 * 74.53125);
    v1146.bezierCurveTo(p752 * 186, p752 * 86.53125, p752 * 186, p752 * 86.53125, p752 * 197.5, p752 * 98.53125);
    v1146.bezierCurveTo(p752 * 186, p752 * 97.03125, p752 * 186, p752 * 97.03125, p752 * 174.5, p752 * 95.53125);
    v1146.closePath();
    f86(v1146, p754[0], p754[0], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 87.5, p752 * 142.53125);
    v1146.bezierCurveTo(p752 * 92, p752 * 160.03125, p752 * 92, p752 * 160.03125, p752 * 96.5, p752 * 177.53125);
    v1146.bezierCurveTo(p752 * 108, p752 * 181.53125, p752 * 108, p752 * 181.53125, p752 * 119.5, p752 * 185.53125);
    v1146.bezierCurveTo(p752 * 116.5, p752 * 175.53125, p752 * 116.5, p752 * 175.53125, p752 * 113.5, p752 * 165.53125);
    v1146.closePath();
    f86(v1146, p754[0], p754[0], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 236.5, p752 * 189.53125);
    v1146.bezierCurveTo(p752 * 274.5, p752 * 197.53125, p752 * 255.5, p752 * 194.03125, p752 * 274.5, p752 * 198.53125);
    v1146.bezierCurveTo(p752 * 272.5, p752 * 236.53125, p752 * 261.5, p752 * 237.53125, p752 * 242.5, p752 * 248.53125);
    v1146.bezierCurveTo(p752 * 230.5, p752 * 231.03125, p752 * 230.5, p752 * 231.03125, p752 * 218.5, p752 * 213.53125);
    v1146.closePath();
    f86(v1146, p754[0], p754[0], p752 * 10);
    v1146.globalAlpha = 1;
    v1146.translate(p752 * -10, p752 * -5);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 34.5, p752 * 38.53125);
    v1146.bezierCurveTo(p752 * 91.5, p752 * 30.53125, p752 * 138.5, p752 * 68.53125, p752 * 169.5, p752 * 93.53125);
    v1146.bezierCurveTo(p752 * 208.5, p752 * 128.53125, p752 * 226.5, p752 * 157.53125, p752 * 233.5, p752 * 209.53125);
    v1146.bezierCurveTo(p752 * 195.5, p752 * 218.53125, p752 * 138.5, p752 * 191.53125, p752 * 105.5, p752 * 157.53125);
    v1146.bezierCurveTo(p752 * 54.5, p752 * 112.53125, p752 * 41.5, p752 * 80.53125, p752 * 33.5, p752 * 38.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 143.5, p752 * 74.53125);
    v1146.bezierCurveTo(p752 * 164.5, p752 * 73.53125, p752 * 159, p752 * 74.53125, p752 * 174.5, p752 * 74.53125);
    v1146.bezierCurveTo(p752 * 186, p752 * 86.53125, p752 * 186, p752 * 86.53125, p752 * 197.5, p752 * 98.53125);
    v1146.bezierCurveTo(p752 * 186, p752 * 97.03125, p752 * 186, p752 * 97.03125, p752 * 174.5, p752 * 95.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 87.5, p752 * 142.53125);
    v1146.bezierCurveTo(p752 * 92, p752 * 160.03125, p752 * 92, p752 * 160.03125, p752 * 96.5, p752 * 177.53125);
    v1146.bezierCurveTo(p752 * 108, p752 * 181.53125, p752 * 108, p752 * 181.53125, p752 * 119.5, p752 * 185.53125);
    v1146.bezierCurveTo(p752 * 116.5, p752 * 175.53125, p752 * 116.5, p752 * 175.53125, p752 * 113.5, p752 * 165.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 236.5, p752 * 189.53125);
    v1146.bezierCurveTo(p752 * 274.5, p752 * 197.53125, p752 * 255.5, p752 * 194.03125, p752 * 274.5, p752 * 198.53125);
    v1146.bezierCurveTo(p752 * 272.5, p752 * 236.53125, p752 * 261.5, p752 * 237.53125, p752 * 242.5, p752 * 248.53125);
    v1146.bezierCurveTo(p752 * 230.5, p752 * 231.03125, p752 * 230.5, p752 * 231.03125, p752 * 218.5, p752 * 213.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 10);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 109.5, p752 * 51.53125);
    v1146.bezierCurveTo(p752 * 107.5, p752 * 92.53125, p752 * 91.5, p752 * 95.53125, p752 * 59.5, p752 * 101.53125);
    f86(v1146, p754[1], p754[2], p752 * 7);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 72.5, p752 * 51.53125);
    v1146.bezierCurveTo(p752 * 71, p752 * 64.53125, p752 * 69.5, p752 * 76.53125, p752 * 69.5, p752 * 77.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 7);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 84.5, p752 * 63.53125);
    v1146.bezierCurveTo(p752 * 70.5, p752 * 65.03125, p752 * 70.5, p752 * 65.03125, p752 * 56.5, p752 * 66.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 7);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 125.5, p752 * 84.53125);
    v1146.bezierCurveTo(p752 * 125.5, p752 * 110.03125, p752 * 125.5, p752 * 110.03125, p752 * 125.5, p752 * 135.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 7);
    v1146.beginPath();
    v1146.lineCap = "round";
    v1146.lineJoin = "round";
    v1146.moveTo(p752 * 149.5, p752 * 108.53125);
    v1146.bezierCurveTo(p752 * 150, p752 * 137.03125, p752 * 150, p752 * 137.03125, p752 * 150.5, p752 * 165.53125);
    v1146.closePath();
    f86(v1146, p754[1], p754[2], p752 * 7);
    return v1145;
  }
  function f173(p755, p756, p757) {
    var v1147 = document.createElement("canvas");
    var v1148 = v1147.getContext("2d");
    v1147.width = p755 * 130;
    v1147.height = p755 * 142;
    v1148.globalAlpha = p756 ? 0.5 : 1;
    v1148.save();
    v1148.translate(p755 * 65, p755 * 80);
    v1148.rotate(0.2);
    f92(v1148, 9, p755 * 60, p755 * 10);
    v1148.restore();
    f86(v1148, p757[0]);
    v1148.globalAlpha = 1;
    v1148.save();
    v1148.translate(p755 * 65, p755 * 71);
    v1148.rotate(0.2);
    f92(v1148, 9, p755 * 60, p755 * 10);
    f86(v1148, p757[1], p757[2], 4);
    v1148.rotate(-0.32);
    f92(v1148, 9, p755 * 38, p755 * 10);
    f86(v1148, p757[3], p757[4], 4);
    v1148.rotate(0.68);
    f92(v1148, 9, p755 * 20, p755 * 8);
    f86(v1148, p757[5], p757[6], 6);
    v1148.restore();
    return v1147;
  }
  function f174(p758, p759, p760) {
    var v1149 = document.createElement("canvas");
    var v1150 = v1149.getContext("2d");
    v1149.width = p758 * 248;
    v1149.height = p758 * 128;
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p758 * 137, p758 * 7);
    v1150.bezierCurveTo(p758 * 169, p758 * 14, p758 * 212, p758 * 9, p758 * 241, p758 * 5);
    v1150.bezierCurveTo(p758 * 211, p758 * 63, p758 * 158, p758 * 92, p758 * 103, p758 * 109);
    v1150.bezierCurveTo(p758 * 73, p758 * 126, p758 * 54, p758 * 124, p758 * 6, p758 * 99);
    v1150.bezierCurveTo(p758 * 82, p758 * 63, p758 * 113, p758 * 35, p758 * 137, p758 * 8);
    v1150.closePath();
    f86(v1150, p760[0], p760[1], p758 * 14);
    v1150.beginPath();
    v1150.lineCap = "round";
    v1150.lineJoin = "round";
    v1150.moveTo(p758 * 73, p758 * 124);
    v1150.bezierCurveTo(p758 * 111, p758 * 126, p758 * 162, p758 * 97, p758 * 203, p758 * 61);
    v1150.bezierCurveTo(p758 * 156, p758 * 98, p758 * 131, p758 * 106, p758 * 105, p758 * 109);
    v1150.bezierCurveTo(p758 * 99, p758 * 121, p758 * 87, p758 * 124, p758 * 72, p758 * 124);
    v1150.closePath();
    f86(v1150, p760[2], p760[3], p758 * 1);
    return v1149;
  }
  function f175(p761, p762, p763) {
    var v1151 = document.createElement("canvas");
    var v1152 = v1151.getContext("2d");
    v1151.width = p761 * 400;
    v1151.height = p761 * 400;
    v1152.beginPath();
    v1152.lineCap = "round";
    v1152.lineJoin = "round";
    v1152.moveTo(p761 * 96.5, p761 * 277.34375);
    v1152.bezierCurveTo(p761 * 197.5, p761 * 259.84375, p761 * 197.5, p761 * 259.84375, p761 * 298.5, p761 * 242.34375);
    v1152.bezierCurveTo(p761 * 311.5, p761 * 231.34375, p761 * 307.5, p761 * 168.34375, p761 * 298.5, p761 * 150.34375);
    v1152.bezierCurveTo(p761 * 198, p761 * 170.34375, p761 * 198, p761 * 170.34375, p761 * 97.5, p761 * 190.34375);
    v1152.closePath();
    f86(v1152, p763[1], p763[2], p761 * 12);
    v1152.beginPath();
    v1152.lineCap = "round";
    v1152.lineJoin = "round";
    v1152.moveTo(p761 * 98.5, p761 * 214.34375);
    v1152.bezierCurveTo(p761 * 199, p761 * 196.34375, p761 * 199, p761 * 196.34375, p761 * 299.5, p761 * 178.34375);
    v1152.closePath();
    f86(v1152, undefined, p763[2], p761 * 12);
    v1152.beginPath();
    v1152.lineCap = "round";
    v1152.lineJoin = "round";
    v1152.moveTo(p761 * 98.5, p761 * 247.34375);
    v1152.bezierCurveTo(p761 * 201.5, p761 * 229.34375, p761 * 201.5, p761 * 229.34375, p761 * 304.5, p761 * 211.34375);
    v1152.closePath();
    f86(v1152, vVUndefined26, p763[2], p761 * 12);
    v1152.beginPath();
    v1152.lineCap = "round";
    v1152.lineJoin = "round";
    v1152.moveTo(p761 * 97.5, p761 * 189.34375);
    v1152.bezierCurveTo(p761 * 97, p761 * 199.84375, p761 * 97, p761 * 199.84375, p761 * 96.5, p761 * 210.34375);
    v1152.bezierCurveTo(p761 * 110.5, p761 * 204.34375, p761 * 110.5, p761 * 204.34375, p761 * 124.5, p761 * 198.34375);
    v1152.bezierCurveTo(p761 * 137.5, p761 * 203.84375, p761 * 137.5, p761 * 203.84375, p761 * 150.5, p761 * 209.34375);
    v1152.bezierCurveTo(p761 * 172, p761 * 197.84375, p761 * 172, p761 * 197.84375, p761 * 193.5, p761 * 186.34375);
    v1152.bezierCurveTo(p761 * 211.5, p761 * 189.84375, p761 * 211.5, p761 * 189.84375, p761 * 229.5, p761 * 193.34375);
    v1152.bezierCurveTo(p761 * 240.5, p761 * 193.34375, p761 * 240.5, p761 * 193.34375, p761 * 251.5, p761 * 193.34375);
    v1152.bezierCurveTo(p761 * 261, p761 * 182.84375, p761 * 261, p761 * 182.84375, p761 * 270.5, p761 * 172.34375);
    v1152.bezierCurveTo(p761 * 287.5, p761 * 169.34375, p761 * 287.5, p761 * 169.34375, p761 * 304.5, p761 * 166.34375);
    v1152.bezierCurveTo(p761 * 304.5, p761 * 156.34375, p761 * 300.5, p761 * 145.34375, p761 * 298.5, p761 * 147.34375);
    v1152.closePath();
    f86(v1152, p763[3], p763[4], p761 * 12);
    v1152.beginPath();
    v1152.lineCap = "round";
    v1152.lineJoin = "round";
    v1152.moveTo(p761 * 300.5, p761 * 147.34375);
    v1152.bezierCurveTo(p761 * 293.5, p761 * 121.34375, p761 * 278.5, p761 * 106.34375, p761 * 256.5, p761 * 101.34375);
    v1152.bezierCurveTo(p761 * 176.5, p761 * 145.34375, p761 * 176.5, p761 * 145.34375, p761 * 96.5, p761 * 189.34375);
    v1152.closePath();
    f86(v1152, p763[5], p763[6], p761 * 12);
    f87(v1152, p761 * 252.5, p761 * 129.34375, p761 * 18.027756377319946);
    f86(v1152, p763[7]);
    f87(v1152, p761 * 248.5, p761 * 121.34375, p761 * 8.246211251235321);
    f86(v1152, p763[8]);
    return v1151;
  }
  function f176(p764, p765, p766) {
    var v1153 = document.createElement("canvas");
    var v1154 = v1153.getContext("2d");
    v1153.width = p764 * 130;
    v1153.height = p764 * 148;
    v1154.globalAlpha = p765 ? 0.5 : 1;
    v1154.save();
    v1154.translate(p764 * 65, p764 * 85);
    v1154.rotate(1.4);
    f92(v1154, 7, p764 * 60, p764 * 10);
    v1154.restore();
    f86(v1154, p766[0]);
    v1154.globalAlpha = 1;
    v1154.save();
    v1154.translate(p764 * 65, p764 * 74);
    v1154.rotate(1.4);
    f92(v1154, 7, p764 * 60, p764 * 10);
    f86(v1154, p766[1], p766[2], 4);
    v1154.rotate(0.64);
    f92(v1154, 7, p764 * 40, p764 * 10);
    f86(v1154, p766[3], p766[4], 4);
    v1154.rotate(0.12);
    f92(v1154, 7, p764 * 23, p764 * 5);
    v1154.restore();
    f86(v1154, p766[5]);
    return v1153;
  }
  function f177(p767, p768, p769) {
    var v1155 = document.createElement("canvas");
    var v1156 = v1155.getContext("2d");
    v1155.width = p767 * 125;
    v1155.height = p767 * 139;
    v1156.globalAlpha = p768 ? 0.5 : 1;
    v1156.save();
    v1156.translate(p767 * 63, p767 * 79);
    v1156.rotate(1);
    f92(v1156, 8, p767 * 60, p767 * 10);
    f86(v1156, p769[0]);
    v1156.restore();
    v1156.globalAlpha = 1;
    v1156.save();
    v1156.translate(p767 * 63, p767 * 69);
    v1156.rotate(1);
    f92(v1156, 8, p767 * 60, p767 * 10);
    f86(v1156, p769[1], p769[2], 4);
    v1156.rotate(0.56);
    f92(v1156, 8, p767 * 40, p767 * 10);
    f86(v1156, p769[3], p769[4], 4);
    v1156.rotate(0.28);
    f92(v1156, 8, p767 * 28, p767 * 8);
    f86(v1156, p769[5]);
    v1156.restore();
    return v1155;
  }
  function f178(p770, p771, p772) {
    var v1157 = document.createElement("canvas");
    var v1158 = v1157.getContext("2d");
    v1157.width = p770 * 90;
    v1157.height = p770 * 101;
    v1158.translate(p770 * 0, p770 * 5);
    if (v717 === 0) {
      v1158.globalAlpha = p771 ? 0.5 : 1;
      f87(v1158, p770 * 44, p770 * 55, p770 * 41);
      f86(v1158, p772[0]);
    }
    v1158.globalAlpha = 1;
    f87(v1158, p770 * 44, p770 * 45, p770 * 41);
    f86(v1158, p772[1], p772[2], p770 * 4);
    f87(v1158, p770 * 44, p770 * 45, p770 * 31);
    f86(v1158, p772[3]);
    v1158.save();
    v1158.translate(p770 * 45, p770 * 45);
    f89(v1158, p770 * -9, p770 * -25.5, p770 * 18, p770 * 51, p770 * 30);
    v1158.restore();
    f86(v1158, p772[4], p772[4], p770 * 2);
    v1158.save();
    v1158.translate(p770 * 45, p770 * 45);
    f89(v1158, p770 * -26, p770 * -9, p770 * 52, p770 * 18, p770 * 30);
    v1158.restore();
    f86(v1158, p772[4], p772[4], p770 * 2);
    f87(v1158, p770 * 45, p770 * 29, p770 * 7);
    f86(v1158, p772[5]);
    f87(v1158, p770 * 45, p770 * 61, p770 * 7);
    f86(v1158, p772[5]);
    f87(v1158, p770 * 28, p770 * 45, p770 * 7);
    f86(v1158, p772[5]);
    f87(v1158, p770 * 62, p770 * 45, p770 * 7);
    f86(v1158, p772[5]);
    return v1157;
  }
  const v1159 = 1;
  function f179(p773, p774, p775) {
    var v1160 = document.createElement("canvas");
    var v1161 = v1160.getContext("2d");
    v1160.width = p773 * 90;
    v1160.height = p773 * 98;
    v1161.translate(0, p773 * 4);
    if (v717 === 0) {
      v1161.globalAlpha = p774 ? 0.5 : 1;
      v1161.save();
      v1161.translate(p773 * 44, p773 * 50);
      v1161.rotate(1.4);
      f92(v1161, 7, p773 * 41, p773 * 10);
      v1161.restore();
      f86(v1161, p775[0]);
    }
    v1161.globalAlpha = 1;
    v1161.save();
    v1161.translate(p773 * 44, p773 * 44);
    v1161.rotate(1.4);
    f92(v1161, 7, p773 * 41, p773 * 10);
    f86(v1161, p775[1], p775[2], p773 * 4);
    f92(v1161, 7, p773 * 35, p773 * 10);
    f86(v1161, p775[3], p775[4], p773 * 4);
    f92(v1161, 7, p773 * 23, p773 * 5);
    v1161.restore();
    f86(v1161, p775[5]);
    v1161.save();
    v1161.translate(p773 * 45, p773 * 45);
    v1161.rotate(0);
    f89(v1161, p773 * -9, p773 * -25.5, p773 * 18, p773 * 51, p773 * 30);
    v1161.restore();
    f86(v1161, p775[4], p775[4], p773 * 2);
    v1161.save();
    v1161.translate(p773 * 45, p773 * 45);
    v1161.rotate(0);
    f89(v1161, p773 * -26, p773 * -9, p773 * 52, p773 * 18, p773 * 30);
    v1161.restore();
    f86(v1161, p775[4], p775[4], p773 * 2);
    f87(v1161, p773 * 45, p773 * 29, p773 * 7);
    f86(v1161, p775[5]);
    f87(v1161, p773 * 45, p773 * 61, p773 * 7);
    f86(v1161, p775[5]);
    f87(v1161, p773 * 28, p773 * 45, p773 * 7);
    f86(v1161, p775[5]);
    f87(v1161, p773 * 62, p773 * 45, p773 * 7);
    f86(v1161, p775[5]);
    return v1160;
  }
  function f180(p776, p777, p778) {
    var v1162 = document.createElement("canvas");
    var v1163 = v1162.getContext("2d");
    v1162.width = p776 * 90;
    v1162.height = p776 * 98;
    v1163.translate(0, p776 * 4);
    if (v717 === 0) {
      v1163.globalAlpha = p777 ? 0.5 : 1;
      v1163.save();
      v1163.translate(p776 * 44, p776 * 50);
      v1163.rotate(0.2);
      f92(v1163, 9, p776 * 41, p776 * 10);
      v1163.restore();
      f86(v1163, p778[0]);
    }
    v1163.globalAlpha = 1;
    v1163.save();
    v1163.translate(p776 * 44, p776 * 44);
    v1163.rotate(0.2);
    f92(v1163, 9, p776 * 41, p776 * 10);
    f86(v1163, p778[1], p778[2], p776 * 4);
    v1163.rotate(-0.32);
    f92(v1163, 9, p776 * 32, p776 * 10);
    f86(v1163, p778[3], p778[4], p776 * 4);
    v1163.rotate(0.68);
    f92(v1163, 9, p776 * 23, p776 * 8);
    f86(v1163, p778[5], p778[6], p776 * 6);
    v1163.restore();
    v1163.save();
    v1163.translate(p776 * 45, p776 * 45);
    v1163.rotate(0);
    f89(v1163, p776 * -9, p776 * -25.5, p776 * 18, p776 * 51, p776 * 30);
    v1163.restore();
    f86(v1163, p778[4], p778[4], p776 * 2);
    v1163.save();
    v1163.translate(p776 * 45, p776 * 45);
    v1163.rotate(0);
    f89(v1163, p776 * -26, p776 * -9, p776 * 52, p776 * 18, p776 * 30);
    v1163.restore();
    f86(v1163, p778[4], p778[4], p776 * 2);
    f87(v1163, p776 * 45, p776 * 29, p776 * 7);
    f86(v1163, p778[5]);
    f87(v1163, p776 * 45, p776 * 61, p776 * 7);
    f86(v1163, p778[5]);
    f87(v1163, p776 * 28, p776 * 45, p776 * 7);
    f86(v1163, p778[5]);
    f87(v1163, p776 * 62, p776 * 45, p776 * 7);
    f86(v1163, p778[5]);
    return v1162;
  }
  function f181(p779, p780, p781) {
    var v1164 = document.createElement("canvas");
    var v1165 = v1164.getContext("2d");
    v1164.width = p779 * 90;
    v1164.height = p779 * 98;
    v1165.translate(0, p779 * 4);
    if (v717 === 0) {
      v1165.globalAlpha = p780 ? 0.5 : 1;
      v1165.save();
      v1165.translate(p779 * 44, p779 * 50);
      v1165.rotate(1);
      f92(v1165, 8, p779 * 41, p779 * 10);
      f86(v1165, p781[0]);
      v1165.restore();
    }
    v1165.globalAlpha = 1;
    v1165.save();
    v1165.translate(p779 * 44, p779 * 44);
    v1165.rotate(1);
    f92(v1165, 8, p779 * 41, p779 * 10);
    f86(v1165, p781[1], p781[2], p779 * 4);
    v1165.rotate(0.56);
    f92(v1165, 8, p779 * 33, p779 * 10);
    f86(v1165, p781[3], p781[4], p779 * 4);
    v1165.rotate(0.28);
    f92(v1165, 8, p779 * 24, p779 * 8);
    f86(v1165, p781[5]);
    v1165.restore();
    v1165.save();
    v1165.translate(p779 * 45, p779 * 45);
    v1165.rotate(0);
    f89(v1165, p779 * -9, p779 * -25.5, p779 * 18, p779 * 51, p779 * 30);
    v1165.restore();
    f86(v1165, p781[4], p781[4], p779 * 2);
    v1165.save();
    v1165.translate(p779 * 45, p779 * 45);
    v1165.rotate(0);
    f89(v1165, p779 * -26, p779 * -9, p779 * 52, p779 * 18, p779 * 30);
    v1165.restore();
    f86(v1165, p781[4], p781[4], p779 * 2);
    f87(v1165, p779 * 45, p779 * 29, p779 * 7);
    f86(v1165, p781[5]);
    f87(v1165, p779 * 45, p779 * 61, p779 * 7);
    f86(v1165, p781[5]);
    f87(v1165, p779 * 28, p779 * 45, p779 * 7);
    f86(v1165, p781[5]);
    f87(v1165, p779 * 62, p779 * 45, p779 * 7);
    f86(v1165, p781[5]);
    return v1164;
  }
  function f182(p782, p783, p784) {
    var v1166 = document.createElement("canvas");
    var v1167 = v1166.getContext("2d");
    v1166.width = p782 * 300;
    v1166.height = p782 * 300;
    v1167.globalAlpha = p783 ? 0.5 : 1;
    v1167.save();
    v1167.translate(p782 * 150, p782 * 160);
    v1167.rotate(6.28);
    f92(v1167, 6, p782 * 146, p782 * 30);
    v1167.restore();
    f86(v1167, p784[0]);
    v1167.globalAlpha = 1;
    v1167.save();
    v1167.translate(p782 * 150, p782 * 150);
    v1167.rotate(6.28);
    f92(v1167, 6, p782 * 146, p782 * 30);
    v1167.restore();
    f86(v1167, p784[1], p784[2], p782 * 8);
    v1167.save();
    v1167.translate(p782 * 150, p782 * 150);
    v1167.rotate(0);
    f92(v1167, 6, p782 * 105, p782 * 30);
    v1167.restore();
    f86(v1167, p784[3], p784[3], p782 * 8);
    v1167.save();
    v1167.translate(p782 * 150, p782 * 150);
    v1167.rotate(0);
    f92(v1167, 6, p782 * 66, p782 * 30);
    v1167.restore();
    f86(v1167, p784[4], p784[2], p782 * 8);
    v1167.save();
    v1167.translate(p782 * 150, p782 * 150);
    v1167.rotate(0);
    f92(v1167, 6, p782 * 31, p782 * 30);
    v1167.restore();
    f86(v1167, p784[5], p784[6], p782 * 8);
    v1167.beginPath();
    v1167.lineCap = "round";
    v1167.lineJoin = "round";
    v1167.moveTo(p782 * 150, p782 * 207);
    v1167.bezierCurveTo(p782 * 150, p782 * 151, p782 * 150, p782 * 101, p782 * 150, p782 * 94);
    v1167.closePath();
    f86(v1167, undefined, p784[2], p782 * 8);
    v1167.beginPath();
    v1167.lineCap = "round";
    v1167.lineJoin = "round";
    v1167.moveTo(p782 * 118, p782 * 100);
    v1167.bezierCurveTo(p782 * 118, p782 * 205, p782 * 118, p782 * 207, p782 * 118, p782 * 200);
    v1167.closePath();
    f86(v1167, undefined, p784[2], p782 * 8);
    v1167.beginPath();
    v1167.lineCap = "round";
    v1167.lineJoin = "round";
    v1167.moveTo(p782 * 183, p782 * 100);
    v1167.bezierCurveTo(p782 * 183, p782 * 203, p782 * 183, p782 * 203, p782 * 183, p782 * 200);
    v1167.closePath();
    f86(v1167, undefined, p784[2], p782 * 8);
    return v1166;
  }
  function f183(p785, p786, p787) {
    var v1168 = document.createElement("canvas");
    var v1169 = v1168.getContext("2d");
    v1168.width = p785 * 300;
    v1168.height = p785 * 300;
    v1169.globalAlpha = p786 ? 0.5 : 1;
    v1169.save();
    v1169.translate(p785 * 150, p785 * 160);
    v1169.rotate(6.28);
    f92(v1169, 6, p785 * 146, p785 * 30);
    v1169.restore();
    f86(v1169, p787[0]);
    v1169.globalAlpha = 1;
    v1169.save();
    v1169.translate(p785 * 150, p785 * 150);
    v1169.rotate(6.28);
    f92(v1169, 6, p785 * 146, p785 * 30);
    v1169.restore();
    f86(v1169, p787[1], p787[2], p785 * 8);
    v1169.save();
    v1169.translate(p785 * 150, p785 * 150);
    v1169.rotate(0);
    f92(v1169, 6, p785 * 105, p785 * 30);
    v1169.restore();
    f86(v1169, p787[3], p787[3], p785 * 8);
    v1169.save();
    v1169.translate(p785 * 150, p785 * 150);
    v1169.rotate(0);
    f92(v1169, 6, p785 * 66, p785 * 30);
    v1169.restore();
    f86(v1169, p787[4], p787[2], p785 * 8);
    v1169.save();
    v1169.translate(p785 * 131, p785 * 116);
    f92(v1169, 7, p785 * 17, p785 * 8);
    v1169.restore();
    f86(v1169, p787[6]);
    v1169.save();
    v1169.translate(p785 * 163, p785 * 168);
    f92(v1169, 7, p785 * 25, p785 * 8);
    v1169.restore();
    f86(v1169, p787[6]);
    v1169.save();
    v1169.translate(p785 * 117, p785 * 151);
    f92(v1169, 7, p785 * 11, p785 * 8);
    v1169.restore();
    f86(v1169, p787[6]);
    v1169.save();
    v1169.translate(p785 * 167, p785 * 122);
    f92(v1169, 7, p785 * 12, p785 * 8);
    v1169.restore();
    f86(v1169, p787[6]);
    v1169.beginPath();
    v1169.lineCap = "round";
    v1169.lineJoin = "round";
    v1169.moveTo(p785 * 150, p785 * 207);
    v1169.bezierCurveTo(p785 * 150, p785 * 151, p785 * 150, p785 * 101, p785 * 150, p785 * 94);
    v1169.closePath();
    f86(v1169, undefined, p787[2], p785 * 8);
    v1169.beginPath();
    v1169.lineCap = "round";
    v1169.lineJoin = "round";
    v1169.moveTo(p785 * 118, p785 * 100);
    v1169.bezierCurveTo(p785 * 118, p785 * 205, p785 * 118, p785 * 207, p785 * 118, p785 * 200);
    v1169.closePath();
    f86(v1169, vVVVUndefined272, p787[2], p785 * 8);
    v1169.beginPath();
    v1169.lineCap = "round";
    v1169.lineJoin = "round";
    v1169.moveTo(p785 * 183, p785 * 100);
    v1169.bezierCurveTo(p785 * 183, p785 * 203, p785 * 183, p785 * 203, p785 * 183, p785 * 200);
    v1169.closePath();
    f86(v1169, vVUndefined26, p787[2], p785 * 8);
    return v1168;
  }
  function f184(p788, p789, p790) {
    var v1170 = document.createElement("canvas");
    var v1171 = v1170.getContext("2d");
    v1170.width = p788 * 501;
    v1170.height = p788 * 309;
    v1171.translate(0, p788 * 6);
    v1171.globalAlpha = p789 ? 0.5 : 1;
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 126, p788 * 184);
    v1171.bezierCurveTo(p788 * 169, p788 * 196, p788 * 194, p788 * 198, p788 * 227, p788 * 198);
    v1171.bezierCurveTo(p788 * 235, p788 * 222, p788 * 236, p788 * 223, p788 * 241, p788 * 226);
    v1171.bezierCurveTo(p788 * 245, p788 * 228, p788 * 257, p788 * 228, p788 * 263, p788 * 226);
    v1171.bezierCurveTo(p788 * 267, p788 * 225, p788 * 270, p788 * 211, p788 * 275, p788 * 198);
    v1171.bezierCurveTo(p788 * 332, p788 * 194, p788 * 347, p788 * 192, p788 * 372, p788 * 188);
    v1171.bezierCurveTo(p788 * 366, p788 * 174.5, p788 * 366, p788 * 174.5, p788 * 360, p788 * 161);
    v1171.bezierCurveTo(p788 * 253.5, p788 * 162, p788 * 253.5, p788 * 162, p788 * 147, p788 * 163);
    v1171.closePath();
    f86(v1171, p790[0]);
    v1171.globalAlpha = 1;
    v1171.translate(0, p788 * -6);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 100, p788 * 116);
    v1171.bezierCurveTo(p788 * 90, p788 * 101, p788 * 96, p788 * 89, p788 * 106, p788 * 83);
    v1171.bezierCurveTo(p788 * 86, p788 * 79, p788 * 86, p788 * 52, p788 * 93, p788 * 38);
    v1171.bezierCurveTo(p788 * 99, p788 * 51, p788 * 107, p788 * 57, p788 * 122, p788 * 63);
    v1171.bezierCurveTo(p788 * 130, p788 * 53, p788 * 141, p788 * 46, p788 * 161, p788 * 46);
    v1171.bezierCurveTo(p788 * 157, p788 * 31, p788 * 158, p788 * 20, p788 * 169, p788 * 6);
    v1171.bezierCurveTo(p788 * 171, p788 * 24, p788 * 186, p788 * 33, p788 * 198, p788 * 45);
    v1171.bezierCurveTo(p788 * 252, p788 * 45, p788 * 252, p788 * 45, p788 * 306, p788 * 45);
    v1171.bezierCurveTo(p788 * 323, p788 * 33, p788 * 332, p788 * 21, p788 * 335, p788 * 7);
    v1171.bezierCurveTo(p788 * 349, p788 * 21, p788 * 347, p788 * 36, p788 * 345, p788 * 46);
    v1171.bezierCurveTo(p788 * 364, p788 * 46, p788 * 369, p788 * 48, p788 * 377, p788 * 63);
    v1171.bezierCurveTo(p788 * 398, p788 * 58, p788 * 403, p788 * 49, p788 * 409, p788 * 40);
    v1171.bezierCurveTo(p788 * 419, p788 * 57, p788 * 411, p788 * 79, p788 * 398, p788 * 85);
    v1171.bezierCurveTo(p788 * 405, p788 * 100, p788 * 405, p788 * 106, p788 * 401, p788 * 118);
    v1171.bezierCurveTo(p788 * 332.5, p788 * 128.5, p788 * 332.5, p788 * 128.5, p788 * 264, p788 * 139);
    v1171.closePath();
    f86(v1171, p790[1], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 122, p788 * 191);
    v1171.bezierCurveTo(p788 * 123, p788 * 237, p788 * 135, p788 * 245, p788 * 153, p788 * 259);
    v1171.bezierCurveTo(p788 * 167, p788 * 269, p788 * 158, p788 * 281, p788 * 118, p788 * 276);
    v1171.bezierCurveTo(p788 * 104, p788 * 273, p788 * 98, p788 * 268, p788 * 93, p788 * 242);
    v1171.bezierCurveTo(p788 * 89, p788 * 220, p788 * 92, p788 * 201, p788 * 102, p788 * 179);
    v1171.closePath();
    f86(v1171, p790[3], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 403, p788 * 182);
    v1171.bezierCurveTo(p788 * 414, p788 * 215, p788 * 412, p788 * 232, p788 * 403, p788 * 260);
    v1171.bezierCurveTo(p788 * 395, p788 * 274, p788 * 375, p788 * 272, p788 * 356, p788 * 270);
    v1171.bezierCurveTo(p788 * 345, p788 * 268, p788 * 339, p788 * 262, p788 * 354, p788 * 252);
    v1171.bezierCurveTo(p788 * 370, p788 * 242, p788 * 380, p788 * 225, p788 * 384, p788 * 184);
    v1171.closePath();
    f86(v1171, p790[3], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 155, p788 * 157);
    v1171.bezierCurveTo(p788 * 146, p788 * 189, p788 * 137, p788 * 198, p788 * 114, p788 * 219);
    v1171.bezierCurveTo(p788 * 104, p788 * 212, p788 * 98, p788 * 203, p788 * 89, p788 * 189);
    v1171.bezierCurveTo(p788 * 82, p788 * 178, p788 * 91, p788 * 164, p788 * 93, p788 * 136);
    v1171.closePath();
    f86(v1171, p790[4], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 347, p788 * 162);
    v1171.bezierCurveTo(p788 * 357, p788 * 195, p788 * 376, p788 * 209, p788 * 387, p788 * 217);
    v1171.bezierCurveTo(p788 * 409, p788 * 201, p788 * 420, p788 * 181, p788 * 416, p788 * 166);
    v1171.bezierCurveTo(p788 * 410, p788 * 150, p788 * 412, p788 * 149, p788 * 408, p788 * 130);
    v1171.closePath();
    f86(v1171, p790[4], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 86, p788 * 134);
    v1171.bezierCurveTo(p788 * 79, p788 * 102, p788 * 92, p788 * 84, p788 * 108, p788 * 92);
    v1171.bezierCurveTo(p788 * 149, p788 * 108, p788 * 184, p788 * 111, p788 * 242, p788 * 111);
    v1171.bezierCurveTo(p788 * 294, p788 * 108, p788 * 341, p788 * 105, p788 * 386, p788 * 98);
    v1171.bezierCurveTo(p788 * 412, p788 * 91, p788 * 417, p788 * 86, p788 * 415, p788 * 133);
    v1171.bezierCurveTo(p788 * 413, p788 * 160, p788 * 413, p788 * 160, p788 * 368, p788 * 174);
    v1171.bezierCurveTo(p788 * 308, p788 * 184, p788 * 291, p788 * 185, p788 * 270, p788 * 186);
    v1171.bezierCurveTo(p788 * 264, p788 * 206, p788 * 262, p788 * 215, p788 * 253, p788 * 215);
    v1171.bezierCurveTo(p788 * 239, p788 * 217, p788 * 239, p788 * 211, p788 * 231, p788 * 186);
    v1171.bezierCurveTo(p788 * 178, p788 * 184, p788 * 156, p788 * 179, p788 * 112, p788 * 162);
    v1171.bezierCurveTo(p788 * 87, p788 * 151, p788 * 90, p788 * 144, p788 * 87, p788 * 137);
    v1171.closePath();
    f86(v1171, p790[4], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 63, p788 * 98);
    v1171.bezierCurveTo(p788 * 84, p788 * 121, p788 * 109, p788 * 102, p788 * 124, p788 * 117);
    v1171.bezierCurveTo(p788 * 138, p788 * 136, p788 * 123, p788 * 165, p788 * 94, p788 * 150);
    v1171.bezierCurveTo(p788 * 66, p788 * 131, p788 * 64, p788 * 115, p788 * 63, p788 * 99);
    v1171.closePath();
    f86(v1171, p790[3], p790[2], p788 * 10);
    v1171.beginPath();
    v1171.lineCap = "round";
    v1171.lineJoin = "round";
    v1171.moveTo(p788 * 449, p788 * 97);
    v1171.bezierCurveTo(p788 * 446, p788 * 143, p788 * 415, p788 * 151, p788 * 402, p788 * 155);
    v1171.bezierCurveTo(p788 * 386, p788 * 157, p788 * 373, p788 * 133, p788 * 391, p788 * 116);
    v1171.bezierCurveTo(p788 * 402, p788 * 106, p788 * 432, p788 * 124, p788 * 449, p788 * 97);
    v1171.closePath();
    f86(v1171, p790[3], p790[2], p788 * 10);
    return v1170;
  }
  function f185(p791, p792, p793) {
    var v1172 = document.createElement("canvas");
    var v1173 = v1172.getContext("2d");
    v1172.width = p791 * 135;
    v1172.height = p791 * 120;
    v1173.beginPath();
    v1173.lineCap = "round";
    v1173.lineJoin = "round";
    v1173.moveTo(p791 * 3.5, p791 * 55.25);
    v1173.bezierCurveTo(p791 * 3.5, p791 * 114.25, p791 * 2.5, p791 * 109.25, p791 * 3.5, p791 * 112.25);
    v1173.bezierCurveTo(p791 * 5.5, p791 * 119.25, p791 * 8.5, p791 * 119.25, p791 * 11.5, p791 * 119.25);
    v1173.bezierCurveTo(p791 * 15.5, p791 * 114.25, p791 * 13.5, p791 * 95.25, p791 * 14.5, p791 * 82.25);
    v1173.closePath();
    f86(v1173, p793[0], p793[1], p791 * 7);
    v1173.beginPath();
    v1173.lineCap = "round";
    v1173.lineJoin = "round";
    v1173.moveTo(p791 * 6.5, p791 * 43.25);
    v1173.bezierCurveTo(p791 * 3.5, p791 * 27.25, p791 * 7.5, p791 * 20.25, p791 * 25.5, p791 * 11.25);
    v1173.bezierCurveTo(p791 * 45.5, p791 * -0.75, p791 * 73.5, p791 * 1.25, p791 * 107.5, p791 * 10.25);
    v1173.bezierCurveTo(p791 * 131.5, p791 * 21.25, p791 * 125.5, p791 * 34.25, p791 * 125.5, p791 * 36.25);
    v1173.closePath();
    f86(v1173, p793[0], p793[1], p791 * 7);
    v1173.beginPath();
    v1173.lineCap = "round";
    v1173.lineJoin = "round";
    v1173.moveTo(p791 * 120.5, p791 * 62.25);
    v1173.bezierCurveTo(p791 * 121.5, p791 * 95.25, p791 * 120.5, p791 * 80.25, p791 * 120.5, p791 * 100.25);
    v1173.bezierCurveTo(p791 * 118.5, p791 * 119.25, p791 * 123.5, p791 * 118.25, p791 * 129.5, p791 * 113.25);
    v1173.bezierCurveTo(p791 * 133.5, p791 * 107.25, p791 * 130.5, p791 * 97.25, p791 * 130.5, p791 * 87.25);
    v1173.bezierCurveTo(p791 * 129.5, p791 * 56.25, p791 * 130, p791 * 70.75, p791 * 129.5, p791 * 54.25);
    v1173.closePath();
    f86(v1173, p793[0], p793[1], p791 * 7);
    v1173.beginPath();
    v1173.lineCap = "round";
    v1173.lineJoin = "round";
    v1173.moveTo(p791 * 17.5, p791 * 27);
    v1173.bezierCurveTo(p791 * 48.5, p791 * 5, p791 * 93.5, p791 * 14, p791 * 118.5, p791 * 26);
    v1173.bezierCurveTo(p791 * 132.5, p791 * 35, p791 * 133.5, p791 * 52, p791 * 132.5, p791 * 68);
    v1173.bezierCurveTo(p791 * 125.5, p791 * 87, p791 * 116.5, p791 * 84, p791 * 96.5, p791 * 75);
    v1173.bezierCurveTo(p791 * 60.5, p791 * 66, p791 * 52.5, p791 * 74, p791 * 37.5, p791 * 78);
    v1173.bezierCurveTo(p791 * 2.5, p791 * 86, p791 * 3.5, p791 * 78, p791 * 1.5, p791 * 61);
    v1173.bezierCurveTo(p791 * 1.5, p791 * 37, p791 * 9.5, p791 * 32, p791 * 15.5, p791 * 28);
    v1173.closePath();
    f86(v1173, p793[2], p793[3], p791 * 7);
    return v1172;
  }
  const v1174 = 16;
  function f186(p794, p795, p796) {
    var v1175 = document.createElement("canvas");
    var v1176 = v1175.getContext("2d");
    v1175.width = p794 * 304;
    v1175.height = p794 * 278;
    v1176.translate(p794 * 10, p794 * 25);
    v1176.globalAlpha = p795 ? 0.5 : 1;
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p794 * 128, p794 * 137);
    v1176.bezierCurveTo(p794 * 155, p794 * 144, p794 * 223, p794 * 143, p794 * 256, p794 * 122);
    v1176.bezierCurveTo(p794 * 249, p794 * 180, p794 * 210, p794 * 227, p794 * 164, p794 * 242);
    v1176.bezierCurveTo(p794 * 74, p794 * 213, p794 * 99, p794 * 166, p794 * 127, p794 * 138);
    v1176.closePath();
    f86(v1176, p796[0]);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p794 * 284, p794 * 52);
    v1176.bezierCurveTo(p794 * 126, p794 * 112, p794 * 89, p794 * 177, p794 * 170, p794 * 241);
    v1176.bezierCurveTo(p794 * 103, p794 * 275, p794 * 20, p794 * 239, p794 * 12, p794 * 159);
    v1176.bezierCurveTo(p794 * 5, p794 * 76, p794 * 75, p794 * 4, p794 * 165, p794 * 13);
    v1176.bezierCurveTo(p794 * 233, p794 * 15, p794 * 260, p794 * 33, p794 * 284, p794 * 52);
    v1176.closePath();
    f86(v1176, p796[0]);
    v1176.translate(p794 * -10, p794 * -25);
    v1176.globalAlpha = 1;
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p794 * 128, p794 * 137);
    v1176.bezierCurveTo(p794 * 155, p794 * 144, p794 * 223, p794 * 143, p794 * 256, p794 * 122);
    v1176.bezierCurveTo(p794 * 249, p794 * 180, p794 * 210, p794 * 227, p794 * 164, p794 * 242);
    v1176.bezierCurveTo(p794 * 74, p794 * 213, p794 * 99, p794 * 166, p794 * 127, p794 * 138);
    v1176.closePath();
    f86(v1176, p796[1], p796[2], p794 * 15);
    v1176.beginPath();
    v1176.lineCap = "round";
    v1176.lineJoin = "round";
    v1176.moveTo(p794 * 284, p794 * 52);
    v1176.bezierCurveTo(p794 * 126, p794 * 112, p794 * 89, p794 * 177, p794 * 170, p794 * 241);
    v1176.bezierCurveTo(p794 * 103, p794 * 275, p794 * 20, p794 * 239, p794 * 12, p794 * 159);
    v1176.bezierCurveTo(p794 * 5, p794 * 76, p794 * 75, p794 * 4, p794 * 165, p794 * 13);
    v1176.bezierCurveTo(p794 * 233, p794 * 15, p794 * 260, p794 * 33, p794 * 284, p794 * 52);
    v1176.closePath();
    f86(v1176, p796[3], p796[4], p794 * 15);
    return v1175;
  }
  function f187(p797, p798, p799) {
    var v1177 = document.createElement("canvas");
    var v1178 = v1177.getContext("2d");
    v1177.width = p797 * 175;
    v1177.height = p797 * 169;
    v1178.globalAlpha = 0.5;
    v1178.translate(0, p797 * 3);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 19, p797 * 139);
    v1178.bezierCurveTo(p797 * 18, p797 * 163, p797 * 22, p797 * 156, p797 * 53, p797 * 157);
    v1178.bezierCurveTo(p797 * 97.5, p797 * 157, p797 * 97.5, p797 * 157, p797 * 142, p797 * 157);
    v1178.bezierCurveTo(p797 * 150, p797 * 157, p797 * 153, p797 * 156, p797 * 154, p797 * 142);
    v1178.closePath();
    f86(v1178, p799[0]);
    v1178.globalAlpha = 1;
    v1178.translate(0, p797 * -3);
    v1178.save();
    v1178.translate(p797 * 86.5, p797 * 81.5);
    f89(v1178, p797 * -66.5, p797 * -65.5, p797 * 133, p797 * 131, p797 * 10);
    v1178.restore();
    f86(v1178, p799[1], p799[2], p797 * 5);
    v1178.save();
    v1178.translate(p797 * 84.5, p797 * 79);
    f89(v1178, p797 * -50.5, p797 * -49, p797 * 101, p797 * 98, p797 * 10);
    v1178.restore();
    f86(v1178, p799[3], p799[2], p797 * 5);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 42, p797 * 54);
    v1178.bezierCurveTo(p797 * 37, p797 * 48, p797 * 39, p797 * 44, p797 * 38, p797 * 41);
    v1178.bezierCurveTo(p797 * 42, p797 * 40, p797 * 45, p797 * 40, p797 * 50, p797 * 41);
    v1178.bezierCurveTo(p797 * 85, p797 * 36, p797 * 98, p797 * 37, p797 * 116, p797 * 42);
    v1178.bezierCurveTo(p797 * 132, p797 * 39, p797 * 132, p797 * 39, p797 * 133, p797 * 56);
    v1178.bezierCurveTo(p797 * 136, p797 * 73, p797 * 136, p797 * 84, p797 * 132, p797 * 106);
    v1178.bezierCurveTo(p797 * 47, p797 * 113, p797 * 85.5, p797 * 106, p797 * 39, p797 * 106);
    v1178.bezierCurveTo(p797 * 32, p797 * 81, p797 * 38, p797 * 60, p797 * 42, p797 * 55);
    v1178.closePath();
    f86(v1178, p799[4], p799[5], p797 * 5);
    v1178.save();
    v1178.translate(p797 * 28, p797 * 24);
    v1178.rotate(0);
    f89(v1178, p797 * -14, p797 * -14, p797 * 28, p797 * 28, p797 * 4);
    v1178.restore();
    f86(v1178, p799[1], p799[2], p797 * 5);
    v1178.save();
    v1178.translate(p797 * 143, p797 * 23);
    v1178.rotate(0);
    f89(v1178, p797 * -14, p797 * -14, p797 * 28, p797 * 28, p797 * 4);
    v1178.restore();
    f86(v1178, p799[1], p799[2], p797 * 5);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 55, p797 * 80);
    v1178.bezierCurveTo(p797 * 73, p797 * 78, p797 * 84, p797 * 74, p797 * 100, p797 * 64);
    v1178.bezierCurveTo(p797 * 111, p797 * 57, p797 * 125, p797 * 67, p797 * 108, p797 * 84);
    v1178.bezierCurveTo(p797 * 96, p797 * 95, p797 * 86, p797 * 96, p797 * 70, p797 * 88);
    v1178.bezierCurveTo(p797 * 62.5, p797 * 84, p797 * 62.5, p797 * 84, p797 * 55, p797 * 80);
    v1178.closePath();
    f86(v1178, p799[5]);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 17, p797 * 112);
    v1178.bezierCurveTo(p797 * 14, p797 * 146, p797 * 27, p797 * 152, p797 * 37, p797 * 149);
    v1178.bezierCurveTo(p797 * 78, p797 * 155, p797 * 128, p797 * 150, p797 * 146, p797 * 150);
    v1178.bezierCurveTo(p797 * 158, p797 * 144, p797 * 158, p797 * 121, p797 * 153, p797 * 114);
    v1178.closePath();
    f86(v1178, p799[8], p799[9], p797 * 5);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 127, p797 * 111);
    v1178.bezierCurveTo(p797 * 133, p797 * 136, p797 * 115, p797 * 149, p797 * 88, p797 * 150);
    v1178.bezierCurveTo(p797 * 119.5, p797 * 151, p797 * 119.5, p797 * 151, p797 * 151, p797 * 152);
    v1178.bezierCurveTo(p797 * 159, p797 * 136, p797 * 155, p797 * 126, p797 * 154, p797 * 113);
    v1178.closePath();
    f86(v1178, p799[9]);
    v1178.globalAlpha = 0.5;
    v1178.translate(0, p797 * 3);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 15, p797 * 117);
    v1178.bezierCurveTo(p797 * 34, p797 * 109, p797 * 61, p797 * 106, p797 * 94, p797 * 109);
    v1178.bezierCurveTo(p797 * 126, p797 * 110, p797 * 142, p797 * 113, p797 * 154, p797 * 119);
    v1178.bezierCurveTo(p797 * 154, p797 * 123, p797 * 154, p797 * 123, p797 * 154, p797 * 127);
    v1178.bezierCurveTo(p797 * 127, p797 * 118, p797 * 15, p797 * 122, p797 * 18, p797 * 129);
    v1178.closePath();
    f86(v1178, p799[0]);
    v1178.globalAlpha = 1;
    v1178.translate(0, p797 * -3);
    v1178.beginPath();
    v1178.lineCap = "round";
    v1178.lineJoin = "round";
    v1178.moveTo(p797 * 14, p797 * 127);
    v1178.bezierCurveTo(p797 * 13, p797 * 117, p797 * 12, p797 * 109, p797 * 15, p797 * 103);
    v1178.bezierCurveTo(p797 * 16, p797 * 95, p797 * 21, p797 * 92, p797 * 60, p797 * 93);
    v1178.bezierCurveTo(p797 * 91, p797 * 93, p797 * 118, p797 * 93, p797 * 143, p797 * 96);
    v1178.bezierCurveTo(p797 * 151, p797 * 96, p797 * 155, p797 * 99, p797 * 156, p797 * 112);
    v1178.bezierCurveTo(p797 * 157, p797 * 124, p797 * 157, p797 * 127, p797 * 156, p797 * 128);
    v1178.bezierCurveTo(p797 * 138, p797 * 112, p797 * 100, p797 * 118, p797 * 84, p797 * 118);
    v1178.bezierCurveTo(p797 * 28, p797 * 118, p797 * 20, p797 * 120, p797 * 16, p797 * 127);
    v1178.closePath();
    f86(v1178, p799[4], p799[5], p797 * 5);
    v1178.save();
    v1178.translate(p797 * 27.5, p797 * 138.5);
    f89(v1178, p797 * -13.5, p797 * -14.5, p797 * 27, p797 * 29, p797 * 4);
    v1178.restore();
    f86(v1178, p799[1], p799[2], p797 * 5);
    v1178.save();
    v1178.translate(p797 * 143.5, p797 * 137);
    f89(v1178, p797 * -13.5, p797 * -14, p797 * 27, p797 * 28, p797 * 4);
    v1178.restore();
    f86(v1178, p799[1], p799[2], p797 * 5);
    return v1177;
  }
  function f188(p800, p801, p802) {
    var v1179 = document.createElement("canvas");
    var v1180 = v1179.getContext("2d");
    v1179.width = p800 * 88;
    v1179.height = p800 * 647;
    v1180.translate(p800 * 20, p800 * 20);
    v1180.globalAlpha = p801 ? 0.5 : 1;
    v1180.save();
    v1180.translate(p800 * 45, p800 * 384.5);
    f89(v1180, p800 * -15, p800 * -216.5, p800 * 30, p800 * 433, p800 * 10);
    v1180.restore();
    f86(v1180, p802[0]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 27, p800 * 572);
    v1180.bezierCurveTo(p800 * 44, p800 * 580, p800 * 55, p800 * 576, p800 * 62, p800 * 572);
    v1180.bezierCurveTo(p800 * 65, p800 * 585.5, p800 * 65, p800 * 585.5, p800 * 68, p800 * 599);
    v1180.bezierCurveTo(p800 * 71, p800 * 612, p800 * 68, p800 * 618, p800 * 34, p800 * 616);
    v1180.bezierCurveTo(p800 * 14, p800 * 615, p800 * 19, p800 * 607, p800 * 27, p800 * 573);
    v1180.closePath();
    f86(v1180, p802[0]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 32, p800 * 587);
    v1180.bezierCurveTo(p800 * 39, p800 * 590, p800 * 48, p800 * 588, p800 * 54, p800 * 587);
    v1180.bezierCurveTo(p800 * 57, p800 * 604, p800 * 59, p800 * 609, p800 * 46, p800 * 609);
    v1180.bezierCurveTo(p800 * 27, p800 * 609, p800 * 28, p800 * 605, p800 * 33, p800 * 588);
    v1180.closePath();
    f86(v1180, p802[0]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 31, p800 * 113);
    v1180.bezierCurveTo(p800 * 27, p800 * 139, p800 * 27, p800 * 139, p800 * 23, p800 * 165);
    v1180.bezierCurveTo(p800 * 18, p800 * 187, p800 * 39, p800 * 195, p800 * 57, p800 * 186);
    v1180.bezierCurveTo(p800 * 68, p800 * 180, p800 * 65, p800 * 171, p800 * 62, p800 * 153);
    v1180.bezierCurveTo(p800 * 58.5, p800 * 131, p800 * 58.5, p800 * 131, p800 * 55, p800 * 109);
    v1180.closePath();
    f86(v1180, p802[0]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 39, p800 * 139);
    v1180.bezierCurveTo(p800 * 43, p800 * 139, p800 * 43, p800 * 139, p800 * 47, p800 * 139);
    v1180.bezierCurveTo(p800 * 51, p800 * 158, p800 * 56, p800 * 176, p800 * 44, p800 * 175);
    v1180.bezierCurveTo(p800 * 33, p800 * 177, p800 * 34, p800 * 167, p800 * 39, p800 * 140);
    v1180.closePath();
    f86(v1180, p802[0]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 44, p800 * 29);
    v1180.bezierCurveTo(p800 * 57, p800 * 63, p800 * 57, p800 * 63, p800 * 70, p800 * 97);
    v1180.bezierCurveTo(p800 * 60, p800 * 111, p800 * 60, p800 * 111, p800 * 50, p800 * 125);
    v1180.bezierCurveTo(p800 * 45, p800 * 128, p800 * 41, p800 * 128, p800 * 35, p800 * 124);
    v1180.bezierCurveTo(p800 * 26.5, p800 * 110, p800 * 26.5, p800 * 110, p800 * 18, p800 * 96);
    v1180.closePath();
    f86(v1180, p802[0]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 44, p800 * 54);
    v1180.bezierCurveTo(p800 * 50, p800 * 72, p800 * 50, p800 * 72, p800 * 56, p800 * 90);
    v1180.bezierCurveTo(p800 * 58, p800 * 94, p800 * 59, p800 * 98, p800 * 53, p800 * 105);
    v1180.bezierCurveTo(p800 * 47, p800 * 113, p800 * 43, p800 * 113, p800 * 36, p800 * 103);
    v1180.bezierCurveTo(p800 * 29, p800 * 96, p800 * 31, p800 * 94, p800 * 35, p800 * 83);
    v1180.closePath();
    f86(v1180, p802[0]);
    v1180.translate(p800 * -20, p800 * -20);
    v1180.globalAlpha = 1;
    v1180.save();
    v1180.translate(p800 * 45, p800 * 384.5);
    f89(v1180, p800 * -15, p800 * -216.5, p800 * 30, p800 * 433, p800 * 10);
    v1180.restore();
    f86(v1180, p802[1], p802[2], p800 * 8);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 27, p800 * 572);
    v1180.bezierCurveTo(p800 * 44, p800 * 580, p800 * 55, p800 * 576, p800 * 62, p800 * 572);
    v1180.bezierCurveTo(p800 * 65, p800 * 585.5, p800 * 65, p800 * 585.5, p800 * 68, p800 * 599);
    v1180.bezierCurveTo(p800 * 71, p800 * 612, p800 * 68, p800 * 618, p800 * 34, p800 * 616);
    v1180.bezierCurveTo(p800 * 14, p800 * 615, p800 * 19, p800 * 607, p800 * 27, p800 * 573);
    v1180.closePath();
    f86(v1180, p802[3], p802[4], p800 * 8);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 32, p800 * 587);
    v1180.bezierCurveTo(p800 * 39, p800 * 590, p800 * 48, p800 * 588, p800 * 54, p800 * 587);
    v1180.bezierCurveTo(p800 * 57, p800 * 604, p800 * 59, p800 * 609, p800 * 46, p800 * 609);
    v1180.bezierCurveTo(p800 * 27, p800 * 609, p800 * 28, p800 * 605, p800 * 33, p800 * 588);
    v1180.closePath();
    f86(v1180, p802[5]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 31, p800 * 113);
    v1180.bezierCurveTo(p800 * 27, p800 * 139, p800 * 27, p800 * 139, p800 * 23, p800 * 165);
    v1180.bezierCurveTo(p800 * 18, p800 * 187, p800 * 39, p800 * 195, p800 * 57, p800 * 186);
    v1180.bezierCurveTo(p800 * 68, p800 * 180, p800 * 65, p800 * 171, p800 * 62, p800 * 153);
    v1180.bezierCurveTo(p800 * 58.5, p800 * 131, p800 * 58.5, p800 * 131, p800 * 55, p800 * 109);
    v1180.closePath();
    f86(v1180, p802[3], p802[4], p800 * 8);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 39, p800 * 139);
    v1180.bezierCurveTo(p800 * 43, p800 * 139, p800 * 43, p800 * 139, p800 * 47, p800 * 139);
    v1180.bezierCurveTo(p800 * 51, p800 * 158, p800 * 56, p800 * 176, p800 * 44, p800 * 175);
    v1180.bezierCurveTo(p800 * 33, p800 * 177, p800 * 34, p800 * 167, p800 * 39, p800 * 140);
    v1180.closePath();
    f86(v1180, p802[5]);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 44, p800 * 29);
    v1180.bezierCurveTo(p800 * 57, p800 * 63, p800 * 57, p800 * 63, p800 * 70, p800 * 97);
    v1180.bezierCurveTo(p800 * 60, p800 * 111, p800 * 60, p800 * 111, p800 * 50, p800 * 125);
    v1180.bezierCurveTo(p800 * 45, p800 * 128, p800 * 41, p800 * 128, p800 * 35, p800 * 124);
    v1180.bezierCurveTo(p800 * 26.5, p800 * 110, p800 * 26.5, p800 * 110, p800 * 18, p800 * 96);
    v1180.closePath();
    f86(v1180, p802[6], p802[7], p800 * 8);
    v1180.beginPath();
    v1180.lineCap = "round";
    v1180.lineJoin = "round";
    v1180.moveTo(p800 * 44, p800 * 54);
    v1180.bezierCurveTo(p800 * 50, p800 * 72, p800 * 50, p800 * 72, p800 * 56, p800 * 90);
    v1180.bezierCurveTo(p800 * 58, p800 * 94, p800 * 59, p800 * 98, p800 * 53, p800 * 105);
    v1180.bezierCurveTo(p800 * 47, p800 * 113, p800 * 43, p800 * 113, p800 * 36, p800 * 103);
    v1180.bezierCurveTo(p800 * 29, p800 * 96, p800 * 31, p800 * 94, p800 * 35, p800 * 83);
    v1180.closePath();
    f86(v1180, p802[8]);
    return v1179;
  }
  function f189(p803, p804, p805) {
    var v1181 = document.createElement("canvas");
    var v1182 = v1181.getContext("2d");
    v1181.width = p803 * 115;
    v1181.height = p803 * 585;
    v1182.scale(-1, 1);
    v1182.translate(p803 * -110, 0);
    v1182.translate(p803 * 10, p803 * 10);
    v1182.globalAlpha = p804 ? 0.5 : 1;
    v1182.save();
    v1182.translate(p803 * 51.5, p803 * 342);
    f89(v1182, p803 * -14.5, p803 * -225, p803 * 29, p803 * 450, p803 * 20);
    v1182.restore();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 54, p803 * 83);
    v1182.bezierCurveTo(p803 * 70, p803 * 69, p803 * 78, p803 * 62, p803 * 82, p803 * 40);
    v1182.bezierCurveTo(p803 * 93, p803 * 48, p803 * 103, p803 * 64, p803 * 95, p803 * 102);
    v1182.bezierCurveTo(p803 * 60, p803 * 114, p803 * 53, p803 * 103, p803 * 54, p803 * 85);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 95, p803 * 97);
    v1182.bezierCurveTo(p803 * 56, p803 * 102, p803 * 43, p803 * 77, p803 * 71, p803 * 6);
    v1182.bezierCurveTo(p803 * 34, p803 * 10, p803 * 6, p803 * 43, p803 * 5, p803 * 76);
    v1182.bezierCurveTo(p803 * 4, p803 * 98, p803 * 15, p803 * 130, p803 * 64, p803 * 130);
    v1182.bezierCurveTo(p803 * 76, p803 * 129, p803 * 95, p803 * 113, p803 * 97, p803 * 97);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 55, p803 * 176);
    v1182.bezierCurveTo(p803 * 74, p803 * 175, p803 * 82, p803 * 169, p803 * 96, p803 * 155);
    v1182.bezierCurveTo(p803 * 103, p803 * 183, p803 * 95, p803 * 214, p803 * 54, p803 * 219);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 50, p803 * 176);
    v1182.bezierCurveTo(p803 * 25, p803 * 177, p803 * 16, p803 * 164, p803 * 7, p803 * 156);
    v1182.bezierCurveTo(p803 * 0, p803 * 186, p803 * 10, p803 * 201, p803 * 43, p803 * 220);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 35, p803 * 403);
    v1182.bezierCurveTo(p803 * 47, p803 * 412, p803 * 58, p803 * 412, p803 * 67, p803 * 403);
    v1182.bezierCurveTo(p803 * 66.5, p803 * 434, p803 * 66.5, p803 * 434, p803 * 66, p803 * 465);
    v1182.bezierCurveTo(p803 * 56, p803 * 480, p803 * 40, p803 * 472, p803 * 36, p803 * 465);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 59, p803 * 67);
    v1182.bezierCurveTo(p803 * 47, p803 * 97, p803 * 18, p803 * 117, p803 * 11, p803 * 110);
    v1182.bezierCurveTo(p803 * 11, p803 * 115, p803 * 15, p803 * 122, p803 * 23, p803 * 124);
    v1182.bezierCurveTo(p803 * 46, p803 * 118, p803 * 52, p803 * 113, p803 * 62, p803 * 86);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 30, p803 * 125);
    v1182.bezierCurveTo(p803 * 47, p803 * 136, p803 * 57, p803 * 134, p803 * 77, p803 * 127);
    v1182.bezierCurveTo(p803 * 71, p803 * 158, p803 * 71, p803 * 159, p803 * 66, p803 * 159);
    v1182.bezierCurveTo(p803 * 50.5, p803 * 156.5, p803 * 50.5, p803 * 156.5, p803 * 35, p803 * 154);
    v1182.bezierCurveTo(p803 * 31, p803 * 145, p803 * 31, p803 * 136, p803 * 31, p803 * 125);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 35, p803 * 171);
    v1182.bezierCurveTo(p803 * 32, p803 * 221, p803 * 43, p803 * 233, p803 * 70, p803 * 247);
    v1182.bezierCurveTo(p803 * 75, p803 * 234, p803 * 75, p803 * 230, p803 * 72, p803 * 221);
    v1182.bezierCurveTo(p803 * 48, p803 * 206, p803 * 54, p803 * 188, p803 * 50, p803 * 176);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 60, p803 * 68);
    v1182.bezierCurveTo(p803 * 63, p803 * 69, p803 * 65, p803 * 71, p803 * 67, p803 * 77);
    v1182.bezierCurveTo(p803 * 61, p803 * 123, p803 * 52, p803 * 137, p803 * 42, p803 * 150);
    v1182.bezierCurveTo(p803 * 38, p803 * 151, p803 * 38, p803 * 151, p803 * 34, p803 * 152);
    v1182.bezierCurveTo(p803 * 33, p803 * 146.5, p803 * 33, p803 * 146.5, p803 * 32, p803 * 141);
    v1182.bezierCurveTo(p803 * 49, p803 * 118, p803 * 63, p803 * 87, p803 * 59, p803 * 68);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 71, p803 * 172);
    v1182.bezierCurveTo(p803 * 56, p803 * 222, p803 * 49, p803 * 234, p803 * 35, p803 * 248);
    v1182.bezierCurveTo(p803 * 30, p803 * 236, p803 * 30, p803 * 230, p803 * 31, p803 * 217);
    v1182.bezierCurveTo(p803 * 44, p803 * 202, p803 * 49, p803 * 191, p803 * 52, p803 * 172);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 35, p803 * 151);
    v1182.bezierCurveTo(p803 * 27, p803 * 165, p803 * 31, p803 * 173, p803 * 36, p803 * 178);
    v1182.bezierCurveTo(p803 * 56, p803 * 185, p803 * 73, p803 * 184, p803 * 71, p803 * 170);
    v1182.bezierCurveTo(p803 * 72, p803 * 154, p803 * 71, p803 * 154, p803 * 63, p803 * 155);
    v1182.closePath();
    f86(v1182, p805[0]);
    v1182.translate(p803 * -10, p803 * -10);
    v1182.globalAlpha = 1;
    v1182.save();
    v1182.translate(p803 * 51.5, p803 * 342);
    f89(v1182, p803 * -14.5, p803 * -225, p803 * 29, p803 * 450, p803 * 20);
    v1182.restore();
    f86(v1182, p805[1], p805[2], p803 * 5);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 54, p803 * 83);
    v1182.bezierCurveTo(p803 * 70, p803 * 69, p803 * 78, p803 * 62, p803 * 82, p803 * 40);
    v1182.bezierCurveTo(p803 * 93, p803 * 48, p803 * 103, p803 * 64, p803 * 95, p803 * 102);
    v1182.bezierCurveTo(p803 * 60, p803 * 114, p803 * 53, p803 * 103, p803 * 54, p803 * 85);
    v1182.closePath();
    f86(v1182, p805[3], p805[4], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 95, p803 * 97);
    v1182.bezierCurveTo(p803 * 56, p803 * 102, p803 * 43, p803 * 77, p803 * 71, p803 * 6);
    v1182.bezierCurveTo(p803 * 34, p803 * 10, p803 * 6, p803 * 43, p803 * 5, p803 * 76);
    v1182.bezierCurveTo(p803 * 4, p803 * 98, p803 * 15, p803 * 130, p803 * 64, p803 * 130);
    v1182.bezierCurveTo(p803 * 76, p803 * 129, p803 * 95, p803 * 113, p803 * 97, p803 * 97);
    v1182.closePath();
    f86(v1182, p805[5], p805[6], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 35, p803 * 403);
    v1182.bezierCurveTo(p803 * 47, p803 * 412, p803 * 58, p803 * 412, p803 * 67, p803 * 403);
    v1182.bezierCurveTo(p803 * 66.5, p803 * 434, p803 * 66.5, p803 * 434, p803 * 66, p803 * 465);
    v1182.bezierCurveTo(p803 * 56, p803 * 480, p803 * 40, p803 * 472, p803 * 36, p803 * 465);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 37, p803 * 427);
    v1182.bezierCurveTo(p803 * 47, p803 * 435, p803 * 55, p803 * 435, p803 * 67, p803 * 427);
    f86(v1182, undefined, p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 36, p803 * 448);
    v1182.bezierCurveTo(p803 * 46, p803 * 454, p803 * 54, p803 * 457, p803 * 65, p803 * 449);
    f86(v1182, vVUndefined27, p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 55, p803 * 176);
    v1182.bezierCurveTo(p803 * 74, p803 * 175, p803 * 82, p803 * 169, p803 * 96, p803 * 155);
    v1182.bezierCurveTo(p803 * 103, p803 * 183, p803 * 95, p803 * 214, p803 * 54, p803 * 219);
    v1182.closePath();
    f86(v1182, p805[3], p805[4], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 50, p803 * 176);
    v1182.bezierCurveTo(p803 * 25, p803 * 177, p803 * 16, p803 * 164, p803 * 7, p803 * 156);
    v1182.bezierCurveTo(p803 * 0, p803 * 186, p803 * 10, p803 * 201, p803 * 43, p803 * 220);
    v1182.closePath();
    f86(v1182, p805[3], p805[4], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 59, p803 * 67);
    v1182.bezierCurveTo(p803 * 47, p803 * 97, p803 * 18, p803 * 117, p803 * 11, p803 * 110);
    v1182.bezierCurveTo(p803 * 11, p803 * 115, p803 * 15, p803 * 122, p803 * 23, p803 * 124);
    v1182.bezierCurveTo(p803 * 46, p803 * 118, p803 * 52, p803 * 113, p803 * 62, p803 * 86);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 30, p803 * 125);
    v1182.bezierCurveTo(p803 * 47, p803 * 136, p803 * 57, p803 * 134, p803 * 77, p803 * 127);
    v1182.bezierCurveTo(p803 * 71, p803 * 158, p803 * 71, p803 * 159, p803 * 66, p803 * 159);
    v1182.bezierCurveTo(p803 * 50.5, p803 * 156.5, p803 * 50.5, p803 * 156.5, p803 * 35, p803 * 154);
    v1182.bezierCurveTo(p803 * 31, p803 * 145, p803 * 31, p803 * 136, p803 * 31, p803 * 125);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 35, p803 * 171);
    v1182.bezierCurveTo(p803 * 32, p803 * 221, p803 * 43, p803 * 233, p803 * 70, p803 * 247);
    v1182.bezierCurveTo(p803 * 75, p803 * 234, p803 * 75, p803 * 230, p803 * 72, p803 * 221);
    v1182.bezierCurveTo(p803 * 48, p803 * 206, p803 * 54, p803 * 188, p803 * 50, p803 * 176);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 60, p803 * 68);
    v1182.bezierCurveTo(p803 * 63, p803 * 69, p803 * 65, p803 * 71, p803 * 67, p803 * 77);
    v1182.bezierCurveTo(p803 * 61, p803 * 123, p803 * 52, p803 * 137, p803 * 42, p803 * 150);
    v1182.bezierCurveTo(p803 * 38, p803 * 151, p803 * 38, p803 * 151, p803 * 34, p803 * 152);
    v1182.bezierCurveTo(p803 * 33, p803 * 146.5, p803 * 33, p803 * 146.5, p803 * 32, p803 * 141);
    v1182.bezierCurveTo(p803 * 49, p803 * 118, p803 * 63, p803 * 87, p803 * 59, p803 * 68);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 71, p803 * 172);
    v1182.bezierCurveTo(p803 * 56, p803 * 222, p803 * 49, p803 * 234, p803 * 35, p803 * 248);
    v1182.bezierCurveTo(p803 * 30, p803 * 236, p803 * 30, p803 * 230, p803 * 31, p803 * 217);
    v1182.bezierCurveTo(p803 * 44, p803 * 202, p803 * 49, p803 * 191, p803 * 52, p803 * 172);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 35, p803 * 151);
    v1182.bezierCurveTo(p803 * 27, p803 * 165, p803 * 31, p803 * 173, p803 * 36, p803 * 178);
    v1182.bezierCurveTo(p803 * 56, p803 * 185, p803 * 73, p803 * 184, p803 * 71, p803 * 170);
    v1182.bezierCurveTo(p803 * 72, p803 * 154, p803 * 71, p803 * 154, p803 * 63, p803 * 155);
    v1182.closePath();
    f86(v1182, p805[7], p805[8], p803 * 6);
    v1182.beginPath();
    v1182.lineCap = "round";
    v1182.lineJoin = "round";
    v1182.moveTo(p803 * 53, p803 * 113);
    v1182.bezierCurveTo(p803 * 65, p803 * 140, p803 * 75, p803 * 166, p803 * 52, p803 * 169);
    v1182.bezierCurveTo(p803 * 29, p803 * 168, p803 * 41, p803 * 143, p803 * 53, p803 * 112);
    v1182.closePath();
    f86(v1182, p805[3], p805[4], p803 * 6);
    return v1181;
  }
  function f190(p806, p807, p808) {
    var v1183 = document.createElement("canvas");
    var v1184 = v1183.getContext("2d");
    v1183.width = p806 * 100;
    v1183.height = p806 * 648;
    v1184.translate(p806 * 20, p806 * 20);
    v1184.globalAlpha = p807 ? 0.5 : 1;
    v1184.save();
    v1184.translate(p806 * 50.5, p806 * 349.5);
    f89(v1184, p806 * -13.5, p806 * -249.5, p806 * 27, p806 * 499, p806 * 10);
    v1184.restore();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 36, p806 * 538);
    v1184.bezierCurveTo(p806 * 49.5, p806 * 538, p806 * 49.5, p806 * 538, p806 * 63, p806 * 538);
    v1184.bezierCurveTo(p806 * 63.5, p806 * 568, p806 * 63.5, p806 * 568, p806 * 64, p806 * 598);
    v1184.bezierCurveTo(p806 * 50, p806 * 598, p806 * 50, p806 * 598, p806 * 36, p806 * 598);
    v1184.bezierCurveTo(p806 * 36, p806 * 568.5, p806 * 36, p806 * 568.5, p806 * 36, p806 * 539);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 36, p806 * 554);
    v1184.bezierCurveTo(p806 * 45, p806 * 561, p806 * 56, p806 * 558, p806 * 63, p806 * 554);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 32, p806 * 569);
    v1184.bezierCurveTo(p806 * 44, p806 * 576, p806 * 58, p806 * 574, p806 * 68, p806 * 569);
    v1184.bezierCurveTo(p806 * 68, p806 * 584, p806 * 68, p806 * 584, p806 * 68, p806 * 599);
    v1184.bezierCurveTo(p806 * 68, p806 * 608, p806 * 65, p806 * 618, p806 * 49, p806 * 617);
    v1184.bezierCurveTo(p806 * 34, p806 * 617, p806 * 32, p806 * 610, p806 * 32, p806 * 598);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 41, p806 * 581);
    v1184.bezierCurveTo(p806 * 48, p806 * 584, p806 * 55, p806 * 583, p806 * 60, p806 * 581);
    v1184.bezierCurveTo(p806 * 60, p806 * 589.5, p806 * 60, p806 * 589.5, p806 * 60, p806 * 598);
    v1184.bezierCurveTo(p806 * 60, p806 * 604, p806 * 59, p806 * 609, p806 * 48, p806 * 608);
    v1184.bezierCurveTo(p806 * 40, p806 * 607, p806 * 40, p806 * 606, p806 * 41, p806 * 581);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 31, p806 * 106);
    v1184.bezierCurveTo(p806 * 31, p806 * 124.5, p806 * 31, p806 * 124.5, p806 * 31, p806 * 143);
    v1184.bezierCurveTo(p806 * 31, p806 * 163, p806 * 38, p806 * 169, p806 * 48, p806 * 168);
    v1184.bezierCurveTo(p806 * 57, p806 * 168, p806 * 67, p806 * 165, p806 * 67, p806 * 148);
    v1184.bezierCurveTo(p806 * 67, p806 * 123.5, p806 * 67, p806 * 123.5, p806 * 67, p806 * 99);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 49, p806 * 27);
    v1184.bezierCurveTo(p806 * 64, p806 * 62.5, p806 * 64, p806 * 62.5, p806 * 79, p806 * 98);
    v1184.bezierCurveTo(p806 * 74, p806 * 113, p806 * 63, p806 * 121, p806 * 50, p806 * 122);
    v1184.bezierCurveTo(p806 * 35, p806 * 123, p806 * 22, p806 * 109, p806 * 20, p806 * 98);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 49, p806 * 43);
    v1184.bezierCurveTo(p806 * 61, p806 * 70, p806 * 61, p806 * 70, p806 * 73, p806 * 97);
    v1184.bezierCurveTo(p806 * 66, p806 * 116, p806 * 43, p806 * 122, p806 * 26, p806 * 99);
    v1184.closePath();
    f86(v1184, p808[0]);
    v1184.translate(p806 * -20, p806 * -20);
    v1184.globalAlpha = 1;
    v1184.save();
    v1184.translate(p806 * 50.5, p806 * 349.5);
    f89(v1184, p806 * -13.5, p806 * -249.5, p806 * 27, p806 * 499, p806 * 10);
    v1184.restore();
    f86(v1184, p808[1], p808[2], p806 * 8);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 36, p806 * 538);
    v1184.bezierCurveTo(p806 * 49.5, p806 * 538, p806 * 49.5, p806 * 538, p806 * 63, p806 * 538);
    v1184.bezierCurveTo(p806 * 63.5, p806 * 568, p806 * 63.5, p806 * 568, p806 * 64, p806 * 598);
    v1184.bezierCurveTo(p806 * 50, p806 * 598, p806 * 50, p806 * 598, p806 * 36, p806 * 598);
    v1184.bezierCurveTo(p806 * 36, p806 * 568.5, p806 * 36, p806 * 568.5, p806 * 36, p806 * 539);
    v1184.closePath();
    f86(v1184, p808[3], p808[4], p806 * 8);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 36, p806 * 554);
    v1184.bezierCurveTo(p806 * 45, p806 * 561, p806 * 56, p806 * 558, p806 * 63, p806 * 554);
    v1184.closePath();
    f86(v1184, undefined, p808[4], p806 * 8);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 32, p806 * 569);
    v1184.bezierCurveTo(p806 * 44, p806 * 576, p806 * 58, p806 * 574, p806 * 68, p806 * 569);
    v1184.bezierCurveTo(p806 * 68, p806 * 584, p806 * 68, p806 * 584, p806 * 68, p806 * 599);
    v1184.bezierCurveTo(p806 * 68, p806 * 608, p806 * 65, p806 * 618, p806 * 49, p806 * 617);
    v1184.bezierCurveTo(p806 * 34, p806 * 617, p806 * 32, p806 * 610, p806 * 32, p806 * 598);
    v1184.closePath();
    f86(v1184, p808[5], p808[6], p806 * 8);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 41, p806 * 581);
    v1184.bezierCurveTo(p806 * 48, p806 * 584, p806 * 55, p806 * 583, p806 * 60, p806 * 581);
    v1184.bezierCurveTo(p806 * 60, p806 * 589.5, p806 * 60, p806 * 589.5, p806 * 60, p806 * 598);
    v1184.bezierCurveTo(p806 * 60, p806 * 604, p806 * 59, p806 * 609, p806 * 48, p806 * 608);
    v1184.bezierCurveTo(p806 * 40, p806 * 607, p806 * 40, p806 * 606, p806 * 41, p806 * 581);
    v1184.closePath();
    f86(v1184, p808[7]);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 31, p806 * 106);
    v1184.bezierCurveTo(p806 * 31, p806 * 124.5, p806 * 31, p806 * 124.5, p806 * 31, p806 * 143);
    v1184.bezierCurveTo(p806 * 31, p806 * 163, p806 * 38, p806 * 169, p806 * 48, p806 * 168);
    v1184.bezierCurveTo(p806 * 57, p806 * 168, p806 * 67, p806 * 165, p806 * 67, p806 * 148);
    v1184.bezierCurveTo(p806 * 67, p806 * 123.5, p806 * 67, p806 * 123.5, p806 * 67, p806 * 99);
    v1184.closePath();
    f86(v1184, p808[5], p808[6], p806 * 8);
    v1184.save();
    v1184.translate(p806 * -46, p806 * -50);
    v1184.scale(2, 2);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 51, p806 * 80);
    v1184.bezierCurveTo(p806 * 51, p806 * 89.5, p806 * 51, p806 * 89.5, p806 * 51, p806 * 99);
    v1184.bezierCurveTo(p806 * 49, p806 * 103, p806 * 46, p806 * 105, p806 * 44, p806 * 99);
    v1184.bezierCurveTo(p806 * 44, p806 * 88.5, p806 * 44, p806 * 88.5, p806 * 44, p806 * 78);
    v1184.closePath();
    f86(v1184, p808[8]);
    v1184.restore();
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 49, p806 * 27);
    v1184.bezierCurveTo(p806 * 64, p806 * 62.5, p806 * 64, p806 * 62.5, p806 * 79, p806 * 98);
    v1184.bezierCurveTo(p806 * 74, p806 * 113, p806 * 63, p806 * 121, p806 * 50, p806 * 122);
    v1184.bezierCurveTo(p806 * 35, p806 * 123, p806 * 22, p806 * 109, p806 * 20, p806 * 98);
    v1184.closePath();
    f86(v1184, p808[8], p808[9], p806 * 8);
    v1184.scale(2, 2);
    v1184.translate(p806 * -23, p806 * -20);
    v1184.beginPath();
    v1184.lineCap = "round";
    v1184.lineJoin = "round";
    v1184.moveTo(p806 * 57, p806 * 69);
    v1184.bezierCurveTo(p806 * 50, p806 * 76, p806 * 43, p806 * 75, p806 * 38, p806 * 69);
    v1184.bezierCurveTo(p806 * 43, p806 * 57, p806 * 43, p806 * 57, p806 * 48, p806 * 45);
    v1184.closePath();
    f86(v1184, p808[10]);
    return v1183;
  }
  function f191(p809, p810, p811) {
    var v1185 = document.createElement("canvas");
    var v1186 = v1185.getContext("2d");
    v1185.width = p809 * 81;
    v1185.height = p809 * 626;
    v1186.translate(p809 * 20, p809 * 20);
    v1186.globalAlpha = p810 ? 0.5 : 1;
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 55, p809 * 565);
    v1186.bezierCurveTo(p809 * 56, p809 * 586, p809 * 53, p809 * 591, p809 * 40, p809 * 592);
    v1186.bezierCurveTo(p809 * 28, p809 * 591, p809 * 27, p809 * 583, p809 * 28, p809 * 557);
    v1186.bezierCurveTo(p809 * 27.5, p809 * 346, p809 * 27.5, p809 * 346, p809 * 27, p809 * 135);
    v1186.bezierCurveTo(p809 * 26, p809 * 74, p809 * 36, p809 * 26, p809 * 41, p809 * 15);
    v1186.bezierCurveTo(p809 * 54, p809 * 51, p809 * 54, p809 * 81, p809 * 55, p809 * 128);
    v1186.closePath();
    f86(v1186, p811[0]);
    v1186.translate(p809 * -20, p809 * -20);
    v1186.globalAlpha = 1;
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 55, p809 * 565);
    v1186.bezierCurveTo(p809 * 56, p809 * 586, p809 * 53, p809 * 591, p809 * 40, p809 * 592);
    v1186.bezierCurveTo(p809 * 28, p809 * 591, p809 * 27, p809 * 583, p809 * 28, p809 * 557);
    v1186.bezierCurveTo(p809 * 27.5, p809 * 346, p809 * 27.5, p809 * 346, p809 * 27, p809 * 135);
    v1186.bezierCurveTo(p809 * 26, p809 * 74, p809 * 36, p809 * 26, p809 * 41, p809 * 15);
    v1186.bezierCurveTo(p809 * 54, p809 * 51, p809 * 54, p809 * 81, p809 * 55, p809 * 128);
    v1186.closePath();
    f86(v1186, p811[1], p811[2], p809 * 8);
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 27, p809 * 129);
    v1186.bezierCurveTo(p809 * 32, p809 * 135, p809 * 48, p809 * 136, p809 * 53, p809 * 129);
    v1186.bezierCurveTo(p809 * 56, p809 * 97, p809 * 53, p809 * 82, p809 * 52, p809 * 64);
    v1186.bezierCurveTo(p809 * 49, p809 * 33, p809 * 44, p809 * 27, p809 * 41, p809 * 21);
    v1186.bezierCurveTo(p809 * 31, p809 * 40, p809 * 28, p809 * 84, p809 * 27, p809 * 127);
    v1186.closePath();
    f86(v1186, p811[3]);
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 55, p809 * 565);
    v1186.bezierCurveTo(p809 * 56, p809 * 586, p809 * 53, p809 * 591, p809 * 40, p809 * 592);
    v1186.bezierCurveTo(p809 * 28, p809 * 591, p809 * 27, p809 * 583, p809 * 28, p809 * 557);
    v1186.bezierCurveTo(p809 * 27.5, p809 * 346, p809 * 27.5, p809 * 346, p809 * 27, p809 * 135);
    v1186.bezierCurveTo(p809 * 26, p809 * 74, p809 * 36, p809 * 26, p809 * 41, p809 * 15);
    v1186.bezierCurveTo(p809 * 54, p809 * 51, p809 * 54, p809 * 81, p809 * 55, p809 * 128);
    v1186.closePath();
    f86(v1186, undefined, p811[2], p809 * 8);
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 28, p809 * 475);
    v1186.bezierCurveTo(p809 * 38, p809 * 482, p809 * 48, p809 * 480, p809 * 54, p809 * 474);
    v1186.bezierCurveTo(p809 * 54, p809 * 509.5, p809 * 54, p809 * 509.5, p809 * 54, p809 * 545);
    v1186.bezierCurveTo(p809 * 46, p809 * 554, p809 * 36, p809 * 552, p809 * 28, p809 * 545);
    v1186.closePath();
    f86(v1186, p811[4], p811[5], p809 * 8);
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 28, p809 * 496);
    v1186.bezierCurveTo(p809 * 39, p809 * 506, p809 * 49, p809 * 503, p809 * 54, p809 * 496);
    f86(v1186, undefined, p811[5], p809 * 8);
    v1186.beginPath();
    v1186.lineCap = "round";
    v1186.lineJoin = "round";
    v1186.moveTo(p809 * 28, p809 * 521);
    v1186.bezierCurveTo(p809 * 41, p809 * 529, p809 * 49, p809 * 524, p809 * 54, p809 * 520);
    f86(v1186, undefined, p811[5], p809 * 8);
    return v1185;
  }
  function f192(p812, p813, p814) {
    var v1187 = document.createElement("canvas");
    var v1188 = v1187.getContext("2d");
    v1187.width = p812 * 175;
    v1187.height = p812 * 169;
    v1188.beginPath();
    v1188.lineCap = "round";
    v1188.lineJoin = "round";
    v1188.moveTo(p812 * 17, p812 * 112);
    v1188.bezierCurveTo(p812 * 14, p812 * 146, p812 * 27, p812 * 152, p812 * 37, p812 * 149);
    v1188.bezierCurveTo(p812 * 78, p812 * 155, p812 * 128, p812 * 150, p812 * 146, p812 * 150);
    v1188.bezierCurveTo(p812 * 158, p812 * 144, p812 * 158, p812 * 121, p812 * 153, p812 * 114);
    v1188.closePath();
    f86(v1188, p814[8], p814[9], p812 * 5);
    v1188.beginPath();
    v1188.lineCap = "round";
    v1188.lineJoin = "round";
    v1188.moveTo(p812 * 127, p812 * 111);
    v1188.bezierCurveTo(p812 * 133, p812 * 136, p812 * 115, p812 * 149, p812 * 88, p812 * 150);
    v1188.bezierCurveTo(p812 * 119.5, p812 * 151, p812 * 119.5, p812 * 151, p812 * 151, p812 * 152);
    v1188.bezierCurveTo(p812 * 159, p812 * 136, p812 * 155, p812 * 126, p812 * 154, p812 * 113);
    v1188.closePath();
    f86(v1188, p814[9]);
    v1188.globalAlpha = 0.5;
    v1188.translate(0, p812 * 3);
    v1188.beginPath();
    v1188.lineCap = "round";
    v1188.lineJoin = "round";
    v1188.moveTo(p812 * 15, p812 * 117);
    v1188.bezierCurveTo(p812 * 34, p812 * 109, p812 * 61, p812 * 106, p812 * 94, p812 * 109);
    v1188.bezierCurveTo(p812 * 126, p812 * 110, p812 * 142, p812 * 113, p812 * 154, p812 * 119);
    v1188.bezierCurveTo(p812 * 154, p812 * 123, p812 * 154, p812 * 123, p812 * 154, p812 * 127);
    v1188.bezierCurveTo(p812 * 127, p812 * 118, p812 * 15, p812 * 122, p812 * 18, p812 * 129);
    v1188.closePath();
    f86(v1188, p814[0]);
    v1188.globalAlpha = 1;
    v1188.translate(0, p812 * -3);
    v1188.beginPath();
    v1188.lineCap = "round";
    v1188.lineJoin = "round";
    v1188.moveTo(p812 * 14, p812 * 127);
    v1188.bezierCurveTo(p812 * 13, p812 * 117, p812 * 12, p812 * 109, p812 * 15, p812 * 103);
    v1188.bezierCurveTo(p812 * 16, p812 * 95, p812 * 21, p812 * 92, p812 * 60, p812 * 93);
    v1188.bezierCurveTo(p812 * 91, p812 * 93, p812 * 118, p812 * 93, p812 * 143, p812 * 96);
    v1188.bezierCurveTo(p812 * 151, p812 * 96, p812 * 155, p812 * 99, p812 * 156, p812 * 112);
    v1188.bezierCurveTo(p812 * 157, p812 * 124, p812 * 157, p812 * 127, p812 * 156, p812 * 128);
    v1188.bezierCurveTo(p812 * 138, p812 * 112, p812 * 100, p812 * 118, p812 * 84, p812 * 118);
    v1188.bezierCurveTo(p812 * 28, p812 * 118, p812 * 20, p812 * 120, p812 * 16, p812 * 127);
    v1188.closePath();
    f86(v1188, p814[4], p814[5], p812 * 5);
    v1188.save();
    v1188.translate(p812 * 27.5, p812 * 138.5);
    f89(v1188, p812 * -13.5, p812 * -14.5, p812 * 27, p812 * 29, p812 * 4);
    v1188.restore();
    f86(v1188, p814[1], p814[2], p812 * 5);
    v1188.save();
    v1188.translate(p812 * 143.5, p812 * 137);
    f89(v1188, p812 * -13.5, p812 * -14, p812 * 27, p812 * 28, p812 * 4);
    v1188.restore();
    f86(v1188, p814[1], p814[2], p812 * 5);
    return v1187;
  }
  const v1189 = 2;
  function f193(p815, p816, p817) {
    var v1190 = document.createElement("canvas");
    var v1191 = v1190.getContext("2d");
    v1190.width = p815 * 43;
    v1190.height = p815 * 209;
    v1191.globalAlpha = p816 ? 0.5 : 1;
    v1191.translate(0, p815 * 10);
    v1191.translate(p815 * 5, p815 * 5);
    v1191.save();
    v1191.translate(p815 * 21, p815 * 102.5);
    f89(v1191, p815 * -4, p815 * -76.5, p815 * 8, p815 * 163, p815 * 10);
    v1191.restore();
    f86(v1191, p817[0]);
    v1191.translate(0, p815 * 10);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 20, p815 * 10);
    v1191.bezierCurveTo(p815 * 25, p815 * 25.5, p815 * 25, p815 * 25.5, p815 * 30, p815 * 41);
    v1191.bezierCurveTo(p815 * 25.5, p815 * 38.5, p815 * 25.5, p815 * 38.5, p815 * 21, p815 * 36);
    v1191.bezierCurveTo(p815 * 16, p815 * 38.5, p815 * 16, p815 * 38.5, p815 * 11, p815 * 41);
    v1191.closePath();
    f86(v1191, p817[0]);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 21, p815 * 1);
    v1191.bezierCurveTo(p815 * 28, p815 * 18, p815 * 28, p815 * 18, p815 * 35, p815 * 35);
    v1191.bezierCurveTo(p815 * 28.5, p815 * 32, p815 * 28.5, p815 * 32, p815 * 22, p815 * 29);
    v1191.bezierCurveTo(p815 * 14.5, p815 * 32.5, p815 * 14.5, p815 * 32.5, p815 * 7, p815 * 36);
    v1191.closePath();
    f86(v1191, p817[0]);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 14, p815 * 146);
    v1191.bezierCurveTo(p815 * 21, p815 * 146, p815 * 21, p815 * 146, p815 * 28, p815 * 146);
    v1191.bezierCurveTo(p815 * 27.5, p815 * 147.5, p815 * 27.5, p815 * 147.5, p815 * 27, p815 * 149);
    v1191.bezierCurveTo(p815 * 27, p815 * 160, p815 * 27, p815 * 160, p815 * 27, p815 * 171);
    v1191.bezierCurveTo(p815 * 27.5, p815 * 171.5, p815 * 27.5, p815 * 171.5, p815 * 28, p815 * 172);
    v1191.bezierCurveTo(p815 * 21, p815 * 172, p815 * 21, p815 * 172, p815 * 14, p815 * 172);
    v1191.bezierCurveTo(p815 * 14, p815 * 171.5, p815 * 14, p815 * 171.5, p815 * 14, p815 * 171);
    v1191.bezierCurveTo(p815 * 14.5, p815 * 171.5, p815 * 14.5, p815 * 171.5, p815 * 15, p815 * 172);
    v1191.bezierCurveTo(p815 * 15, p815 * 160.5, p815 * 15, p815 * 160.5, p815 * 15, p815 * 149);
    v1191.closePath();
    f86(v1191, p817[0]);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 21, p815 * 6);
    v1191.bezierCurveTo(p815 * 26.5, p815 * 18.5, p815 * 26.5, p815 * 18.5, p815 * 32, p815 * 31);
    v1191.bezierCurveTo(p815 * 27, p815 * 29, p815 * 27, p815 * 29, p815 * 22, p815 * 27);
    v1191.closePath();
    f86(v1191, p817[0]);
    v1191.translate(0, p815 * -20);
    v1191.globalAlpha = 1;
    v1191.translate(0, p815 * 10);
    v1191.translate(p815 * -5, p815 * -5);
    v1191.save();
    v1191.translate(p815 * 21, p815 * 102.5);
    f89(v1191, p815 * -4, p815 * -76.5, p815 * 8, p815 * 163, p815 * 10);
    v1191.restore();
    f86(v1191, p817[1], p817[2], p815 * 4);
    v1191.translate(0, p815 * 10);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 20, p815 * 10);
    v1191.bezierCurveTo(p815 * 25, p815 * 25.5, p815 * 25, p815 * 25.5, p815 * 30, p815 * 41);
    v1191.bezierCurveTo(p815 * 25.5, p815 * 38.5, p815 * 25.5, p815 * 38.5, p815 * 21, p815 * 36);
    v1191.bezierCurveTo(p815 * 16, p815 * 38.5, p815 * 16, p815 * 38.5, p815 * 11, p815 * 41);
    v1191.closePath();
    f86(v1191, p817[3], p817[4], p815 * 4);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 21, p815 * 1);
    v1191.bezierCurveTo(p815 * 28, p815 * 18, p815 * 28, p815 * 18, p815 * 35, p815 * 35);
    v1191.bezierCurveTo(p815 * 28.5, p815 * 32, p815 * 28.5, p815 * 32, p815 * 22, p815 * 29);
    v1191.bezierCurveTo(p815 * 14.5, p815 * 32.5, p815 * 14.5, p815 * 32.5, p815 * 7, p815 * 36);
    v1191.closePath();
    f86(v1191, p817[5], p817[6], p815 * 4);
    v1191.translate(0, p815 * 0);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 14, p815 * 146);
    v1191.bezierCurveTo(p815 * 21, p815 * 146, p815 * 21, p815 * 146, p815 * 28, p815 * 146);
    v1191.bezierCurveTo(p815 * 27.5, p815 * 147.5, p815 * 27.5, p815 * 147.5, p815 * 27, p815 * 149);
    v1191.bezierCurveTo(p815 * 27, p815 * 160, p815 * 27, p815 * 160, p815 * 27, p815 * 171);
    v1191.bezierCurveTo(p815 * 27.5, p815 * 171.5, p815 * 27.5, p815 * 171.5, p815 * 28, p815 * 172);
    v1191.bezierCurveTo(p815 * 21, p815 * 172, p815 * 21, p815 * 172, p815 * 14, p815 * 172);
    v1191.bezierCurveTo(p815 * 14, p815 * 171.5, p815 * 14, p815 * 171.5, p815 * 14, p815 * 171);
    v1191.bezierCurveTo(p815 * 14.5, p815 * 171.5, p815 * 14.5, p815 * 171.5, p815 * 15, p815 * 172);
    v1191.bezierCurveTo(p815 * 15, p815 * 160.5, p815 * 15, p815 * 160.5, p815 * 15, p815 * 149);
    v1191.closePath();
    f86(v1191, p817[1], p817[2], p815 * 4);
    v1191.beginPath();
    v1191.lineCap = "round";
    v1191.lineJoin = "round";
    v1191.moveTo(p815 * 21, p815 * 6);
    v1191.bezierCurveTo(p815 * 26.5, p815 * 18.5, p815 * 26.5, p815 * 18.5, p815 * 32, p815 * 31);
    v1191.bezierCurveTo(p815 * 27, p815 * 29, p815 * 27, p815 * 29, p815 * 22, p815 * 27);
    v1191.closePath();
    f86(v1191, p817[8]);
    return v1190;
  }
  function f194(p818, p819, p820) {
    var v1192 = document.createElement("canvas");
    var v1193 = v1192.getContext("2d");
    v1192.width = p818 * 200;
    v1192.height = p818 * 200;
    v1193.save();
    v1193.translate(p818 * 112, p818 * 158);
    f89(v1193, p818 * -86.5, p818 * -86, p818 * 150, p818 * 35, p818 * 20);
    v1193.restore();
    f86(v1193, p820[0]);
    v1193.save();
    v1193.translate(p818 * 170, p818 * 100);
    f89(v1193, p818 * -86.5, p818 * -86, p818 * 35, p818 * 150, p818 * 20);
    v1193.restore();
    f86(v1193, p820[0]);
    return v1192;
  }
  function f195(p821, p822, p823) {
    var v1194 = document.createElement("canvas");
    var v1195 = v1194.getContext("2d");
    v1194.width = p821 * 108;
    v1194.height = p821 * 669;
    v1195.translate(p821 * 20, p821 * 20);
    v1195.globalAlpha = p822 ? 0.5 : 1;
    v1195.save();
    v1195.translate(p821 * 54, p821 * 389.5);
    f89(v1195, p821 * -15, p821 * -228.5, p821 * 30, p821 * 457, p821 * 10);
    v1195.restore();
    f86(v1195, p823[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 35, p821 * 579);
    v1195.bezierCurveTo(p821 * 47, p821 * 587, p821 * 61, p821 * 584, p821 * 71, p821 * 579);
    v1195.bezierCurveTo(p821 * 75, p821 * 597.5, p821 * 75, p821 * 597.5, p821 * 79, p821 * 616);
    v1195.bezierCurveTo(p821 * 66.5, p821 * 628, p821 * 66.5, p821 * 628, p821 * 54, p821 * 640);
    v1195.bezierCurveTo(p821 * 41, p821 * 628.5, p821 * 41, p821 * 628.5, p821 * 28, p821 * 617);
    v1195.closePath();
    f86(v1195, p823[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 30, p821 * 141);
    v1195.bezierCurveTo(p821 * 40, p821 * 136, p821 * 40, p821 * 136, p821 * 50, p821 * 131);
    v1195.bezierCurveTo(p821 * 63, p821 * 136, p821 * 63, p821 * 136, p821 * 76, p821 * 141);
    v1195.bezierCurveTo(p821 * 72.5, p821 * 161.5, p821 * 72.5, p821 * 161.5, p821 * 69, p821 * 182);
    v1195.bezierCurveTo(p821 * 61.5, p821 * 186.5, p821 * 61.5, p821 * 186.5, p821 * 54, p821 * 191);
    v1195.bezierCurveTo(p821 * 45, p821 * 186.5, p821 * 45, p821 * 186.5, p821 * 36, p821 * 182);
    v1195.closePath();
    f86(v1195, p823[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 42, p821 * 152);
    v1195.bezierCurveTo(p821 * 53, p821 * 152, p821 * 53, p821 * 152, p821 * 64, p821 * 152);
    v1195.bezierCurveTo(p821 * 62, p821 * 171, p821 * 62, p821 * 176, p821 * 55, p821 * 177);
    v1195.bezierCurveTo(p821 * 42, p821 * 176, p821 * 45, p821 * 174, p821 * 42, p821 * 152);
    v1195.closePath();
    f86(v1195, p823[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 52, p821 * 28);
    v1195.bezierCurveTo(p821 * 67.5, p821 * 55, p821 * 67.5, p821 * 55, p821 * 83, p821 * 82);
    v1195.bezierCurveTo(p821 * 80, p821 * 106.5, p821 * 80, p821 * 106.5, p821 * 77, p821 * 131);
    v1195.bezierCurveTo(p821 * 58, p821 * 147, p821 * 44, p821 * 141, p821 * 29, p821 * 131);
    v1195.bezierCurveTo(p821 * 26.5, p821 * 106.5, p821 * 26.5, p821 * 106.5, p821 * 24, p821 * 82);
    v1195.closePath();
    f86(v1195, p823[0]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 53, p821 * 53);
    v1195.bezierCurveTo(p821 * 61, p821 * 70, p821 * 61, p821 * 70, p821 * 69, p821 * 87);
    v1195.bezierCurveTo(p821 * 67, p821 * 106, p821 * 67, p821 * 106, p821 * 65, p821 * 125);
    v1195.bezierCurveTo(p821 * 54, p821 * 130, p821 * 51, p821 * 130, p821 * 41, p821 * 125);
    v1195.bezierCurveTo(p821 * 39, p821 * 105, p821 * 39, p821 * 105, p821 * 37, p821 * 85);
    v1195.closePath();
    f86(v1195, p823[0]);
    v1195.translate(p821 * -20, p821 * -20);
    v1195.globalAlpha = 1;
    v1195.save();
    v1195.translate(p821 * 54, p821 * 389.5);
    v1195.rotate(0);
    f89(v1195, p821 * -15, p821 * -228.5, p821 * 30, p821 * 457, p821 * 10);
    v1195.restore();
    f86(v1195, p823[1], p823[2], p821 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 35, p821 * 579);
    v1195.bezierCurveTo(p821 * 47, p821 * 587, p821 * 61, p821 * 584, p821 * 71, p821 * 579);
    v1195.bezierCurveTo(p821 * 75, p821 * 597.5, p821 * 75, p821 * 597.5, p821 * 79, p821 * 616);
    v1195.bezierCurveTo(p821 * 66.5, p821 * 628, p821 * 66.5, p821 * 628, p821 * 54, p821 * 640);
    v1195.bezierCurveTo(p821 * 41, p821 * 628.5, p821 * 41, p821 * 628.5, p821 * 28, p821 * 617);
    v1195.closePath();
    f86(v1195, p823[3], p823[4], p821 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 30, p821 * 141);
    v1195.bezierCurveTo(p821 * 40, p821 * 136, p821 * 40, p821 * 136, p821 * 50, p821 * 131);
    v1195.bezierCurveTo(p821 * 63, p821 * 136, p821 * 63, p821 * 136, p821 * 76, p821 * 141);
    v1195.bezierCurveTo(p821 * 72.5, p821 * 161.5, p821 * 72.5, p821 * 161.5, p821 * 69, p821 * 182);
    v1195.bezierCurveTo(p821 * 61.5, p821 * 186.5, p821 * 61.5, p821 * 186.5, p821 * 54, p821 * 191);
    v1195.bezierCurveTo(p821 * 45, p821 * 186.5, p821 * 45, p821 * 186.5, p821 * 36, p821 * 182);
    v1195.closePath();
    f86(v1195, p823[3], p823[4], p821 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 42, p821 * 152);
    v1195.bezierCurveTo(p821 * 53, p821 * 152, p821 * 53, p821 * 152, p821 * 64, p821 * 152);
    v1195.bezierCurveTo(p821 * 62, p821 * 171, p821 * 62, p821 * 176, p821 * 55, p821 * 177);
    v1195.bezierCurveTo(p821 * 42, p821 * 176, p821 * 45, p821 * 174, p821 * 42, p821 * 152);
    v1195.closePath();
    f86(v1195, p823[5]);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 52, p821 * 28);
    v1195.bezierCurveTo(p821 * 67.5, p821 * 55, p821 * 67.5, p821 * 55, p821 * 83, p821 * 82);
    v1195.bezierCurveTo(p821 * 80, p821 * 106.5, p821 * 80, p821 * 106.5, p821 * 77, p821 * 131);
    v1195.bezierCurveTo(p821 * 58, p821 * 147, p821 * 44, p821 * 141, p821 * 29, p821 * 131);
    v1195.bezierCurveTo(p821 * 26.5, p821 * 106.5, p821 * 26.5, p821 * 106.5, p821 * 24, p821 * 82);
    v1195.closePath();
    f86(v1195, p823[6], p823[7], p821 * 8);
    v1195.beginPath();
    v1195.lineCap = "round";
    v1195.lineJoin = "round";
    v1195.moveTo(p821 * 53, p821 * 53);
    v1195.bezierCurveTo(p821 * 61, p821 * 70, p821 * 61, p821 * 70, p821 * 69, p821 * 87);
    v1195.bezierCurveTo(p821 * 67, p821 * 106, p821 * 67, p821 * 106, p821 * 65, p821 * 125);
    v1195.bezierCurveTo(p821 * 54, p821 * 130, p821 * 51, p821 * 130, p821 * 41, p821 * 125);
    v1195.bezierCurveTo(p821 * 39, p821 * 105, p821 * 39, p821 * 105, p821 * 37, p821 * 85);
    v1195.closePath();
    f86(v1195, p823[8]);
    return v1194;
  }
  function f196(p824, p825, p826) {
    var v1196 = document.createElement("canvas");
    var v1197 = v1196.getContext("2d");
    v1196.width = p824 * 106;
    v1196.height = p824 * 681;
    v1197.translate(p824 * 20, p824 * 20);
    v1197.globalAlpha = p825 ? 0.5 : 1;
    v1197.save();
    v1197.translate(p824 * 52.5, p824 * 395);
    v1197.rotate(0);
    f89(v1197, p824 * -11.5, p824 * -226, p824 * 23, p824 * 452, p824 * 10);
    v1197.restore();
    f86(v1197, p826[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 35, p824 * 588);
    v1197.bezierCurveTo(p824 * 47, p824 * 596, p824 * 61, p824 * 594, p824 * 69, p824 * 588);
    v1197.bezierCurveTo(p824 * 79, p824 * 615, p824 * 78, p824 * 632, p824 * 59, p824 * 643);
    v1197.bezierCurveTo(p824 * 41, p824 * 650, p824 * 27, p824 * 632, p824 * 30, p824 * 610);
    v1197.closePath();
    f86(v1197, p826[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 52, p824 * 135);
    v1197.bezierCurveTo(p824 * 61.5, p824 * 142, p824 * 61.5, p824 * 142, p824 * 71, p824 * 149);
    v1197.bezierCurveTo(p824 * 69.5, p824 * 166, p824 * 69.5, p824 * 166, p824 * 68, p824 * 183);
    v1197.bezierCurveTo(p824 * 60.5, p824 * 187.5, p824 * 60.5, p824 * 187.5, p824 * 53, p824 * 192);
    v1197.bezierCurveTo(p824 * 45, p824 * 187.5, p824 * 45, p824 * 187.5, p824 * 37, p824 * 183);
    v1197.bezierCurveTo(p824 * 35.5, p824 * 167, p824 * 35.5, p824 * 167, p824 * 34, p824 * 151);
    v1197.closePath();
    f86(v1197, p826[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 64, p824 * 150);
    v1197.bezierCurveTo(p824 * 63, p824 * 164, p824 * 63, p824 * 164, p824 * 62, p824 * 178);
    v1197.bezierCurveTo(p824 * 58, p824 * 181, p824 * 58, p824 * 181, p824 * 54, p824 * 184);
    v1197.bezierCurveTo(p824 * 48.5, p824 * 181.5, p824 * 48.5, p824 * 181.5, p824 * 43, p824 * 179);
    v1197.bezierCurveTo(p824 * 42, p824 * 164.5, p824 * 42, p824 * 164.5, p824 * 41, p824 * 150);
    v1197.bezierCurveTo(p824 * 46, p824 * 152.5, p824 * 46, p824 * 152.5, p824 * 51, p824 * 155);
    v1197.closePath();
    f86(v1197, p826[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 52, p824 * 39);
    v1197.bezierCurveTo(p824 * 65.5, p824 * 82, p824 * 65.5, p824 * 82, p824 * 79, p824 * 125);
    v1197.bezierCurveTo(p824 * 66, p824 * 137.5, p824 * 66, p824 * 137.5, p824 * 53, p824 * 150);
    v1197.bezierCurveTo(p824 * 39, p824 * 138, p824 * 39, p824 * 138, p824 * 25, p824 * 126);
    v1197.closePath();
    f86(v1197, p826[0]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 52, p824 * 64);
    v1197.bezierCurveTo(p824 * 60, p824 * 92.5, p824 * 60, p824 * 92.5, p824 * 68, p824 * 121);
    v1197.bezierCurveTo(p824 * 61, p824 * 127.5, p824 * 61, p824 * 127.5, p824 * 54, p824 * 134);
    v1197.bezierCurveTo(p824 * 46.5, p824 * 127.5, p824 * 46.5, p824 * 127.5, p824 * 39, p824 * 121);
    v1197.closePath();
    f86(v1197, p826[0]);
    v1197.translate(p824 * -20, p824 * -20);
    v1197.globalAlpha = 1;
    v1197.save();
    v1197.translate(p824 * 52.5, p824 * 395);
    v1197.rotate(0);
    f89(v1197, p824 * -11.5, p824 * -226, p824 * 23, p824 * 452, p824 * 10);
    v1197.restore();
    f86(v1197, p826[1], p826[2], p824 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 35, p824 * 588);
    v1197.bezierCurveTo(p824 * 47, p824 * 596, p824 * 61, p824 * 594, p824 * 69, p824 * 588);
    v1197.bezierCurveTo(p824 * 79, p824 * 615, p824 * 78, p824 * 632, p824 * 59, p824 * 643);
    v1197.bezierCurveTo(p824 * 41, p824 * 650, p824 * 27, p824 * 632, p824 * 30, p824 * 610);
    v1197.closePath();
    f86(v1197, p826[3], p826[4], p824 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 52, p824 * 135);
    v1197.bezierCurveTo(p824 * 61.5, p824 * 142, p824 * 61.5, p824 * 142, p824 * 71, p824 * 149);
    v1197.bezierCurveTo(p824 * 69.5, p824 * 166, p824 * 69.5, p824 * 166, p824 * 68, p824 * 183);
    v1197.bezierCurveTo(p824 * 60.5, p824 * 187.5, p824 * 60.5, p824 * 187.5, p824 * 53, p824 * 192);
    v1197.bezierCurveTo(p824 * 45, p824 * 187.5, p824 * 45, p824 * 187.5, p824 * 37, p824 * 183);
    v1197.bezierCurveTo(p824 * 35.5, p824 * 167, p824 * 35.5, p824 * 167, p824 * 34, p824 * 151);
    v1197.closePath();
    f86(v1197, p826[3], p826[4], p824 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 64, p824 * 150);
    v1197.bezierCurveTo(p824 * 63, p824 * 164, p824 * 63, p824 * 164, p824 * 62, p824 * 178);
    v1197.bezierCurveTo(p824 * 58, p824 * 181, p824 * 58, p824 * 181, p824 * 54, p824 * 184);
    v1197.bezierCurveTo(p824 * 48.5, p824 * 181.5, p824 * 48.5, p824 * 181.5, p824 * 43, p824 * 179);
    v1197.bezierCurveTo(p824 * 42, p824 * 164.5, p824 * 42, p824 * 164.5, p824 * 41, p824 * 150);
    v1197.bezierCurveTo(p824 * 46, p824 * 152.5, p824 * 46, p824 * 152.5, p824 * 51, p824 * 155);
    v1197.closePath();
    f86(v1197, p826[5]);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 52, p824 * 39);
    v1197.bezierCurveTo(p824 * 65.5, p824 * 82, p824 * 65.5, p824 * 82, p824 * 79, p824 * 125);
    v1197.bezierCurveTo(p824 * 66, p824 * 137.5, p824 * 66, p824 * 137.5, p824 * 53, p824 * 150);
    v1197.bezierCurveTo(p824 * 39, p824 * 138, p824 * 39, p824 * 138, p824 * 25, p824 * 126);
    v1197.closePath();
    f86(v1197, p826[6], p826[7], p824 * 8);
    v1197.beginPath();
    v1197.lineCap = "round";
    v1197.lineJoin = "round";
    v1197.moveTo(p824 * 52, p824 * 64);
    v1197.bezierCurveTo(p824 * 60, p824 * 92.5, p824 * 60, p824 * 92.5, p824 * 68, p824 * 121);
    v1197.bezierCurveTo(p824 * 61, p824 * 127.5, p824 * 61, p824 * 127.5, p824 * 54, p824 * 134);
    v1197.bezierCurveTo(p824 * 46.5, p824 * 127.5, p824 * 46.5, p824 * 127.5, p824 * 39, p824 * 121);
    v1197.closePath();
    f86(v1197, p826[8]);
    return v1196;
  }
  function f197(p827, p828, p829) {
    var v1198 = (v1199 = document.createElement("canvas")).getContext("2d");
    v1199.width = p827 * 47;
    v1199.height = p827 * 60;
    var v1199;
    v1198 = (v1199 = document.createElement("canvas")).getContext("2d");
    v1199.width = p827 * 47;
    v1199.height = p827 * 60;
    f87(v1198, p827 * 23.5, p827 * 20.734375, p827 * 15.132745950421556);
    f86(v1198, undefined, p829[2], p827 * 4);
    f87(v1198, p827 * 23.5, p827 * 20.734375, p827 * 18.601075237738275);
    f86(v1198, undefined, p829[1], p827 * 4);
    f87(v1198, p827 * 23.5, p827 * 20.734375, p827 * 11.40175425099138);
    f86(v1198, undefined, p829[1], p827 * 4);
    v1198.save();
    v1198.translate(p827 * 23, p827 * 38.734375);
    v1198.rotate(0);
    f89(v1198, p827 * -21.5, p827 * -19, p827 * 43, p827 * 38, p827 * 10);
    v1198.restore();
    f86(v1198, p829[2], p829[1], p827 * 4);
    v1198.save();
    v1198.translate(p827 * 23.5, p827 * 43.734375);
    v1198.rotate(0.5235987755982988);
    f92(v1198, 3, p827 * 8.06225774829855, p827 * 0);
    v1198.restore();
    f86(v1198, p829[3]);
    f87(v1198, p827 * 23.5, p827 * 35.734375, p827 * 7.0710678118654755);
    f86(v1198, p829[3]);
    return v1199;
  }
  function f198(p830, p831, p832) {
    var v1200 = document.createElement("canvas");
    var v1201 = v1200.getContext("2d");
    v1200.width = p830 * 95;
    v1200.height = p830 * 85;
    if (p832 == 0) {
      v1201.translate(p830 * 7, p830 * 15);
      v1201.scale(0.9, 0.9);
      v1201.save();
      f89(v1201, p830 * 0, p830 * 5, p830 * 90, p830 * 60, 10);
      f86(v1201, p831[0]);
      v1201.globalCompositeOperation = "destination-out";
      f87(v1201, p830 * 25, p830 * 40, p830 * 10);
      v1201.fill();
      f87(v1201, p830 * 65, p830 * 40, p830 * 10);
      v1201.fill();
      v1201.restore();
      v1201.save();
      f89(v1201, 0, 0, p830 * 90, p830 * 60, p830 * 10);
      f86(v1201, p831[1]);
      v1201.globalCompositeOperation = "destination-out";
      f87(v1201, p830 * 25, p830 * 40, p830 * 10);
      v1201.fill();
      f87(v1201, p830 * 65, p830 * 40, p830 * 10);
      v1201.fill();
      v1201.restore();
    } else if (p832 == 1) {
      v1201.scale(0.8, 0.8);
      v1201.translate(p830 * 15, p830 * 33);
      v1201.save();
      v1201.scale(0.56, 0.56);
      v1201.translate(p830 * -39, p830 * -60);
      v1201.beginPath();
      v1201.lineCap = "round";
      v1201.lineJoin = "round";
      v1201.moveTo(p830 * 32.5, p830 * 50.642852783203125);
      v1201.bezierCurveTo(p830 * 83, p830 * 69.64285278320312, p830 * 83, p830 * 69.64285278320312, p830 * 133.5, p830 * 88.64285278320312);
      v1201.bezierCurveTo(p830 * 93, p830 * 92.64285278320312, p830 * 93, p830 * 92.64285278320312, p830 * 52.5, p830 * 96.64285278320312);
      v1201.bezierCurveTo(p830 * 30.5, p830 * 100.64285278320312, p830 * 36.5, p830 * 94.64285278320312, p830 * 32.5, p830 * 84.64285278320312);
      v1201.bezierCurveTo(p830 * 21.5, p830 * 45.642852783203125, p830 * 24.5, p830 * 48.642852783203125, p830 * 31.5, p830 * 50.642852783203125);
      v1201.closePath();
      f86(v1201, p831[1]);
      v1201.beginPath();
      v1201.lineCap = "round";
      v1201.lineJoin = "round";
      v1201.moveTo(p830 * 116.5, p830 * 85.64285278320312);
      v1201.bezierCurveTo(p830 * 160.5, p830 * 67.14285278320312, p830 * 160.5, p830 * 67.14285278320312, p830 * 204.5, p830 * 48.642852783203125);
      v1201.bezierCurveTo(p830 * 220.5, p830 * 42.642852783203125, p830 * 208.5, p830 * 68.64285278320312, p830 * 205.5, p830 * 85.64285278320312);
      v1201.bezierCurveTo(p830 * 202.5, p830 * 98.64285278320312, p830 * 199.5, p830 * 98.64285278320312, p830 * 188.5, p830 * 100.64285278320312);
      v1201.closePath();
      f86(v1201, p831[1]);
      v1201.beginPath();
      v1201.lineCap = "round";
      v1201.lineJoin = "round";
      v1201.moveTo(p830 * 166.5, p830 * 68.64285278320312);
      v1201.bezierCurveTo(p830 * 147.5, p830 * 72.64285278320312, p830 * 145.5, p830 * 73.64285278320312, p830 * 142.5, p830 * 62.642852783203125);
      v1201.bezierCurveTo(p830 * 121.5, p830 * 12.642852783203125, p830 * 122.5, p830 * 5.642852783203125, p830 * 117.5, p830 * 15.642852783203125);
      v1201.bezierCurveTo(p830 * 105.5, p830 * 40.642852783203125, p830 * 105.5, p830 * 40.642852783203125, p830 * 93.5, p830 * 65.64285278320312);
      v1201.bezierCurveTo(p830 * 89.5, p830 * 74.64285278320312, p830 * 84.5, p830 * 72.64285278320312, p830 * 73.5, p830 * 74.64285278320312);
      v1201.bezierCurveTo(p830 * 98, p830 * 87.64285278320312, p830 * 98, p830 * 87.64285278320312, p830 * 122.5, p830 * 100.64285278320312);
      v1201.closePath();
      f86(v1201, p831[1]);
      v1201.restore();
      v1201.save();
      f89(v1201, 0, p830 * 15, p830 * 90, p830 * 50, p830 * 10);
      f86(v1201, p831[0]);
      f89(v1201, 0, p830 * 10, p830 * 90, p830 * 50, p830 * 10);
      f86(v1201, p831[1]);
      v1201.globalCompositeOperation = "destination-out";
      f87(v1201, p830 * 25, p830 * 40, p830 * 10);
      v1201.fill();
      f87(v1201, p830 * 65, p830 * 40, p830 * 10);
      v1201.fill();
      v1201.restore();
    }
    return v1200;
  }
  function f199(p833, p834, p835) {
    var v1202 = document.createElement("canvas");
    var v1203 = v1202.getContext("2d");
    v1202.width = p833 * 139;
    v1202.height = p833 * 135;
    v1203.translate(0, p833 * 10);
    v1203.globalAlpha = p834 ? 0.5 : 1;
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 32, p833 * 77);
    v1203.bezierCurveTo(p833 * 6, p833 * 41, p833 * 6, p833 * 33, p833 * 12, p833 * 27);
    v1203.bezierCurveTo(p833 * 27, p833 * 6, p833 * 28, p833 * 6, p833 * 37, p833 * 6);
    v1203.bezierCurveTo(p833 * 62, p833 * 3, p833 * 64, p833 * 5, p833 * 67, p833 * 13);
    v1203.bezierCurveTo(p833 * 80, p833 * 36, p833 * 73.5, p833 * 25, p833 * 80, p833 * 37);
    v1203.bezierCurveTo(p833 * 73.5, p833 * 54, p833 * 65, p833 * 74, p833 * 67, p833 * 71);
    v1203.closePath();
    f86(v1203, p835[0]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 65, p833 * 37);
    v1203.bezierCurveTo(p833 * 105, p833 * 40, p833 * 113, p833 * 39, p833 * 117, p833 * 48);
    v1203.bezierCurveTo(p833 * 126, p833 * 70, p833 * 128, p833 * 72, p833 * 124, p833 * 80);
    v1203.bezierCurveTo(p833 * 112, p833 * 101, p833 * 110, p833 * 104, p833 * 99, p833 * 104);
    v1203.bezierCurveTo(p833 * 59, p833 * 100, p833 * 55, p833 * 99, p833 * 56, p833 * 99);
    v1203.bezierCurveTo(p833 * 47.5, p833 * 79, p833 * 45, p833 * 66, p833 * 39, p833 * 59);
    v1203.closePath();
    f86(v1203, p835[0]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 30, p833 * 63);
    v1203.bezierCurveTo(p833 * 5, p833 * 99, p833 * 5, p833 * 101, p833 * 8, p833 * 103);
    v1203.bezierCurveTo(p833 * 19, p833 * 123, p833 * 22, p833 * 125, p833 * 28, p833 * 126);
    v1203.bezierCurveTo(p833 * 57, p833 * 127, p833 * 55, p833 * 127, p833 * 58, p833 * 120);
    v1203.bezierCurveTo(p833 * 82, p833 * 86, p833 * 83, p833 * 78, p833 * 82, p833 * 87);
    v1203.closePath();
    f86(v1203, p835[0]);
    v1203.translate(0, p833 * -10);
    v1203.globalAlpha = 1;
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 32, p833 * 77);
    v1203.bezierCurveTo(p833 * 6, p833 * 41, p833 * 6, p833 * 33, p833 * 12, p833 * 27);
    v1203.bezierCurveTo(p833 * 27, p833 * 6, p833 * 28, p833 * 6, p833 * 37, p833 * 6);
    v1203.bezierCurveTo(p833 * 62, p833 * 3, p833 * 64, p833 * 5, p833 * 67, p833 * 13);
    v1203.bezierCurveTo(p833 * 80, p833 * 36, p833 * 73.5, p833 * 25, p833 * 80, p833 * 37);
    v1203.bezierCurveTo(p833 * 73.5, p833 * 54, p833 * 65, p833 * 74, p833 * 67, p833 * 71);
    v1203.closePath();
    f86(v1203, p835[1]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 65, p833 * 37);
    v1203.bezierCurveTo(p833 * 105, p833 * 40, p833 * 113, p833 * 39, p833 * 117, p833 * 48);
    v1203.bezierCurveTo(p833 * 126, p833 * 70, p833 * 128, p833 * 72, p833 * 124, p833 * 80);
    v1203.bezierCurveTo(p833 * 112, p833 * 101, p833 * 110, p833 * 104, p833 * 99, p833 * 104);
    v1203.bezierCurveTo(p833 * 59, p833 * 100, p833 * 55, p833 * 99, p833 * 56, p833 * 99);
    v1203.bezierCurveTo(p833 * 47.5, p833 * 79, p833 * 45, p833 * 66, p833 * 39, p833 * 59);
    v1203.closePath();
    f86(v1203, p835[1]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 30, p833 * 63);
    v1203.bezierCurveTo(p833 * 5, p833 * 99, p833 * 5, p833 * 101, p833 * 8, p833 * 103);
    v1203.bezierCurveTo(p833 * 19, p833 * 123, p833 * 22, p833 * 125, p833 * 28, p833 * 126);
    v1203.bezierCurveTo(p833 * 57, p833 * 127, p833 * 55, p833 * 127, p833 * 58, p833 * 120);
    v1203.bezierCurveTo(p833 * 82, p833 * 86, p833 * 83, p833 * 78, p833 * 82, p833 * 87);
    v1203.closePath();
    f86(v1203, p835[1]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 80, p833 * 38);
    v1203.bezierCurveTo(p833 * 72.5, p833 * 52, p833 * 72.5, p833 * 52, p833 * 65, p833 * 66);
    v1203.bezierCurveTo(p833 * 47.5, p833 * 37, p833 * 47.5, p833 * 37, p833 * 30, p833 * 7);
    v1203.bezierCurveTo(p833 * 48, p833 * 4, p833 * 57, p833 * 4, p833 * 64, p833 * 10);
    v1203.closePath();
    f86(v1203, p835[2]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 65, p833 * 65);
    v1203.bezierCurveTo(p833 * 125, p833 * 73, p833 * 95.5, p833 * 69, p833 * 126, p833 * 73);
    v1203.bezierCurveTo(p833 * 119, p833 * 98, p833 * 106, p833 * 104, p833 * 98, p833 * 103);
    v1203.bezierCurveTo(p833 * 84.5, p833 * 102, p833 * 84.5, p833 * 102, p833 * 71, p833 * 101);
    v1203.bezierCurveTo(p833 * 64, p833 * 86, p833 * 64, p833 * 86, p833 * 57, p833 * 70);
    v1203.closePath();
    f86(v1203, p835[2]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 27, p833 * 69);
    v1203.bezierCurveTo(p833 * 64, p833 * 65, p833 * 46, p833 * 67, p833 * 65, p833 * 65);
    v1203.bezierCurveTo(p833 * 43.5, p833 * 94, p833 * 43.5, p833 * 94, p833 * 22, p833 * 123);
    v1203.bezierCurveTo(p833 * 8, p833 * 103, p833 * 8, p833 * 103, p833 * 9, p833 * 103);
    v1203.bezierCurveTo(p833 * 5, p833 * 98, p833 * 11, p833 * 89, p833 * 26, p833 * 70);
    v1203.closePath();
    f86(v1203, p835[2]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 26, p833 * 69);
    v1203.bezierCurveTo(p833 * 65, p833 * 60, p833 * 45, p833 * 65, p833 * 64, p833 * 60);
    v1203.bezierCurveTo(p833 * 63, p833 * 65, p833 * 63, p833 * 65, p833 * 62, p833 * 70);
    v1203.closePath();
    f86(v1203, p835[2]);
    v1203.beginPath();
    v1203.lineCap = "round";
    v1203.lineJoin = "round";
    v1203.moveTo(p833 * 80, p833 * 38);
    v1203.bezierCurveTo(p833 * 68, p833 * 70, p833 * 75, p833 * 53, p833 * 70, p833 * 68);
    v1203.bezierCurveTo(p833 * 65, p833 * 67, p833 * 65, p833 * 67, p833 * 60, p833 * 65);
    v1203.closePath();
    f86(v1203, p835[2]);
    return v1202;
  }
  function f200(p836, p837, p838) {
    var v1204 = (v1205 = document.createElement("canvas")).getContext("2d");
    if (p838 == 0) {
      v1205.width = p836 * 566;
      v1205.height = p836 * 429;
      v1204.beginPath();
      v1204.lineCap = "round";
      v1204.lineJoin = "round";
      v1204.moveTo(p836 * 312.625, p836 * 39.046875);
      v1204.bezierCurveTo(p836 * 456.625, p836 * 60.046875, p836 * 521.625, p836 * 134.046875, p836 * 528.625, p836 * 199.046875);
      v1204.bezierCurveTo(p836 * 540.625, p836 * 298.046875, p836 * 491.625, p836 * 364.046875, p836 * 405.625, p836 * 394.046875);
      v1204.bezierCurveTo(p836 * 270.625, p836 * 429.046875, p836 * 182.625, p836 * 395.046875, p836 * 100.625, p836 * 344.046875);
      v1204.bezierCurveTo(p836 * 15.625, p836 * 283.046875, p836 * 20.625, p836 * 195.046875, p836 * 33.625, p836 * 158.046875);
      v1204.bezierCurveTo(p836 * 56.625, p836 * 80.046875, p836 * 102.625, p836 * 46.046875, p836 * 183.625, p836 * 33.046875);
      v1204.bezierCurveTo(p836 * 225.625, p836 * 25.046875, p836 * 270.625, p836 * 30.046875, p836 * 312.625, p836 * 39.046875);
      v1204.closePath();
      f86(v1204, p837[0]);
    } else if (p838 == 1) {
      v1204 = (v1205 = document.createElement("canvas")).getContext("2d");
      v1205.width = p836 * 511;
      v1205.height = p836 * 408;
      v1204.beginPath();
      v1204.lineCap = "round";
      v1204.lineJoin = "round";
      v1204.moveTo(p836 * 141.625, p836 * 49.296875);
      v1204.bezierCurveTo(p836 * 225.625, p836 * 10.296875, p836 * 320.625, p836 * 16.296875, p836 * 390.625, p836 * 39.296875);
      v1204.bezierCurveTo(p836 * 476.625, p836 * 71.296875, p836 * 483.625, p836 * 142.296875, p836 * 486.625, p836 * 197.296875);
      v1204.bezierCurveTo(p836 * 491.625, p836 * 289.296875, p836 * 462.625, p836 * 317.296875, p836 * 417.625, p836 * 351.296875);
      v1204.bezierCurveTo(p836 * 367.625, p836 * 385.296875, p836 * 313.625, p836 * 404.296875, p836 * 218.625, p836 * 395.296875);
      v1204.bezierCurveTo(p836 * 108.625, p836 * 381.296875, p836 * 81.625, p836 * 350.296875, p836 * 52.625, p836 * 305.296875);
      v1204.bezierCurveTo(p836 * 16.625, p836 * 244.296875, p836 * 23.625, p836 * 171.296875, p836 * 37.625, p836 * 145.296875);
      v1204.bezierCurveTo(p836 * 65.625, p836 * 84.296875, p836 * 97.625, p836 * 74.296875, p836 * 141.625, p836 * 49.296875);
      v1204.closePath();
      f86(v1204, p837[0]);
    } else if (p838 == 2) {
      var v1205;
      v1204 = (v1205 = document.createElement("canvas")).getContext("2d");
      v1205.width = p836 * 504;
      v1205.height = p836 * 408;
      v1204.beginPath();
      v1204.lineCap = "round";
      v1204.lineJoin = "round";
      v1204.moveTo(p836 * 153.625, p836 * 46.296875);
      v1204.bezierCurveTo(p836 * 271.625, p836 * 17.296875, p836 * 345.625, p836 * 35.296875, p836 * 410.625, p836 * 71.296875);
      v1204.bezierCurveTo(p836 * 473.625, p836 * 109.296875, p836 * 478.625, p836 * 167.296875, p836 * 473.625, p836 * 205.296875);
      v1204.bezierCurveTo(p836 * 462.625, p836 * 295.296875, p836 * 438.625, p836 * 316.296875, p836 * 388.625, p836 * 345.296875);
      v1204.bezierCurveTo(p836 * 331.625, p836 * 374.296875, p836 * 273.625, p836 * 392.296875, p836 * 180.625, p836 * 387.296875);
      v1204.bezierCurveTo(p836 * 111.625, p836 * 380.296875, p836 * 86.625, p836 * 360.296875, p836 * 51.625, p836 * 309.296875);
      v1204.bezierCurveTo(p836 * 23.625, p836 * 267.296875, p836 * 25.625, p836 * 226.296875, p836 * 27.625, p836 * 175.296875);
      v1204.bezierCurveTo(p836 * 37.625, p836 * 99.296875, p836 * 88.625, p836 * 57.296875, p836 * 153.625, p836 * 46.296875);
      v1204.closePath();
      f86(v1204, p837[0]);
    }
    return v1205;
  }
  function f201(p839, p840) {
    var v1206 = document.createElement("canvas");
    var v1207 = v1206.getContext("2d");
    v1206.width = p839 * 85;
    v1206.height = p839 * 145;
    v1207.translate(p839 * -20, p839 * -95);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p839 * 50, p839 * 105);
    v1207.bezierCurveTo(p839 * 52, p839 * 119, p839 * 64, p839 * 137, p839 * 71, p839 * 146);
    v1207.bezierCurveTo(p839 * 71, p839 * 161, p839 * 74, p839 * 169, p839 * 79, p839 * 179);
    v1207.bezierCurveTo(p839 * 68, p839 * 192, p839 * 70, p839 * 204, p839 * 69, p839 * 216);
    v1207.bezierCurveTo(p839 * 50, p839 * 189.5, p839 * 50, p839 * 189.5, p839 * 31, p839 * 163);
    v1207.closePath();
    f86(v1207, p840[1]);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p839 * 44, p839 * 106);
    v1207.bezierCurveTo(p839 * 49, p839 * 90, p839 * 58, p839 * 104, p839 * 51, p839 * 121);
    v1207.bezierCurveTo(p839 * 45, p839 * 143, p839 * 41, p839 * 151, p839 * 37, p839 * 162);
    v1207.bezierCurveTo(p839 * 48, p839 * 180, p839 * 58, p839 * 188, p839 * 76, p839 * 205);
    v1207.bezierCurveTo(p839 * 104, p839 * 209, p839 * 105, p839 * 229, p839 * 92, p839 * 235);
    v1207.bezierCurveTo(p839 * 76, p839 * 239, p839 * 75, p839 * 232, p839 * 56, p839 * 213);
    v1207.bezierCurveTo(p839 * 31, p839 * 187, p839 * 28, p839 * 176, p839 * 23, p839 * 162);
    v1207.bezierCurveTo(p839 * 38, p839 * 131, p839 * 40, p839 * 120, p839 * 44, p839 * 106);
    v1207.closePath();
    f86(v1207, p840[2], p840[3], p839 * 4);
    v1207.beginPath();
    v1207.lineCap = "round";
    v1207.lineJoin = "round";
    v1207.moveTo(p839 * 30, p839 * 159);
    v1207.bezierCurveTo(p839 * 46, p839 * 157, p839 * 59, p839 * 152, p839 * 68, p839 * 148);
    v1207.bezierCurveTo(p839 * 63, p839 * 155, p839 * 52, p839 * 160, p839 * 44, p839 * 164);
    v1207.bezierCurveTo(p839 * 59, p839 * 169, p839 * 66, p839 * 174, p839 * 75, p839 * 178);
    v1207.bezierCurveTo(p839 * 58, p839 * 178, p839 * 49, p839 * 175, p839 * 37, p839 * 174);
    v1207.closePath();
    f86(v1207, p840[2]);
    return v1206;
  }
  function f202(p841, p842, p843) {
    var v1208 = document.createElement("canvas");
    var v1209 = v1208.getContext("2d");
    v1208.width = p841 * 170;
    v1208.height = p841 * 170;
    v1209.translate(0, p841 * 3);
    v1209.globalAlpha = p842 ? 0.5 : 1;
    v1209.save();
    v1209.translate(p841 * 85, p841 * 95);
    v1209.rotate(1.4);
    f92(v1209, 7, p841 * 60, p841 * 10);
    v1209.restore();
    f86(v1209, p843[0]);
    v1209.globalAlpha = 1;
    v1209.translate(p841 * 85, p841 * 82);
    for (var v1210 = 0; v1210 < 10; v1210++) {
      v1209.rotate(Math.PI / 5);
      v1209.save();
      v1209.translate(p841 * 65, 0);
      f92(v1209, 3, p841 * 21, p841 * 4);
      f86(v1209, p843[1], p843[2], p841 * 4);
      v1209.restore();
    }
    v1209.save();
    v1209.translate(p841 * 0, p841 * 0);
    v1209.rotate(0.2);
    f92(v1209, 9, p841 * 60, p841 * 10);
    f86(v1209, p843[3], p843[4], p841 * 4);
    v1209.rotate(-0.32);
    f92(v1209, 9, p841 * 38, p841 * 10);
    f86(v1209, p843[5], p843[6], p841 * 4);
    v1209.rotate(0.68);
    f92(v1209, 9, p841 * 20, p841 * 8);
    f86(v1209, p843[7], p843[8], p841 * 6);
    v1209.restore();
    return v1208;
  }
  function f203(p844, p845) {
    var v1211 = document.createElement("canvas");
    var v1212 = v1211.getContext("2d");
    v1211.width = p844 * 33;
    v1211.height = p844 * 35;
    v1212.beginPath();
    v1212.lineCap = "round";
    v1212.lineJoin = "round";
    v1212.moveTo(p844 * 12.75, p844 * 7.1328125);
    v1212.bezierCurveTo(p844 * 26.75, p844 * 8.1328125, p844 * 27.75, p844 * 14.1328125, p844 * 24.75, p844 * 23.1328125);
    v1212.bezierCurveTo(p844 * 19.75, p844 * 31.1328125, p844 * 15.75, p844 * 33.1328125, p844 * 6.75, p844 * 26.1328125);
    v1212.bezierCurveTo(p844 * 0.75, p844 * 19.1328125, p844 * 4.75, p844 * 8.1328125, p844 * 12.75, p844 * 7.1328125);
    v1212.closePath();
    f86(v1212, p845[0]);
    return v1211;
  }
  function f204(p846, p847, p848) {
    var v1213 = document.createElement("canvas");
    var v1214 = v1213.getContext("2d");
    v1213.width = p846 * 345;
    v1213.height = p846 * 250;
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 105, p846 * 58);
    v1214.bezierCurveTo(p846 * 100.5, p846 * 43, p846 * 100.5, p846 * 43, p846 * 96, p846 * 28);
    v1214.bezierCurveTo(p846 * 119.5, p846 * 33.5, p846 * 119.5, p846 * 33.5, p846 * 143, p846 * 39);
    v1214.bezierCurveTo(p846 * 170, p846 * 37, p846 * 177, p846 * 37, p846 * 188, p846 * 40);
    v1214.bezierCurveTo(p846 * 213, p846 * 33.5, p846 * 213, p846 * 33.5, p846 * 238, p846 * 27);
    v1214.bezierCurveTo(p846 * 231, p846 * 52, p846 * 234, p846 * 42.5, p846 * 230, p846 * 58);
    v1214.closePath();
    f86(v1214, p848[1], p848[2], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 108, p846 * 51);
    v1214.bezierCurveTo(p846 * 91, p846 * 55, p846 * 85, p846 * 44, p846 * 86, p846 * 29);
    v1214.bezierCurveTo(p846 * 62, p846 * 50, p846 * 78, p846 * 69, p846 * 92, p846 * 75);
    v1214.closePath();
    f86(v1214, p848[3], p848[4], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 249, p846 * 27);
    v1214.bezierCurveTo(p846 * 273, p846 * 49, p846 * 262, p846 * 68, p846 * 246, p846 * 77);
    v1214.bezierCurveTo(p846 * 231, p846 * 59, p846 * 236, p846 * 66.5, p846 * 226, p846 * 56);
    v1214.bezierCurveTo(p846 * 243, p846 * 53, p846 * 252, p846 * 43, p846 * 249, p846 * 28);
    v1214.closePath();
    f86(v1214, p848[3], p848[4], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 87, p846 * 78);
    v1214.bezierCurveTo(p846 * 87, p846 * 59, p846 * 98, p846 * 46, p846 * 127, p846 * 48);
    v1214.bezierCurveTo(p846 * 176, p846 * 48.5, p846 * 176, p846 * 48.5, p846 * 225, p846 * 49);
    v1214.bezierCurveTo(p846 * 243, p846 * 49, p846 * 253, p846 * 59, p846 * 253, p846 * 76);
    v1214.bezierCurveTo(p846 * 211, p846 * 85.5, p846 * 211, p846 * 85.5, p846 * 169, p846 * 95);
    v1214.closePath();
    f86(v1214, p848[5], p848[6], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 56, p846 * 105);
    v1214.bezierCurveTo(p846 * 56, p846 * 92, p846 * 59, p846 * 86, p846 * 65, p846 * 73);
    v1214.bezierCurveTo(p846 * 62.5, p846 * 61.5, p846 * 62.5, p846 * 61.5, p846 * 60, p846 * 50);
    v1214.bezierCurveTo(p846 * 99.5, p846 * 64.5, p846 * 99.5, p846 * 64.5, p846 * 139, p846 * 79);
    v1214.bezierCurveTo(p846 * 164, p846 * 77, p846 * 177, p846 * 76, p846 * 203, p846 * 78);
    v1214.bezierCurveTo(p846 * 242, p846 * 63.5, p846 * 242, p846 * 63.5, p846 * 281, p846 * 49);
    v1214.bezierCurveTo(p846 * 279, p846 * 60.5, p846 * 279, p846 * 60.5, p846 * 277, p846 * 72);
    v1214.bezierCurveTo(p846 * 286, p846 * 88, p846 * 286, p846 * 96, p846 * 287, p846 * 104);
    v1214.bezierCurveTo(p846 * 228.5, p846 * 127, p846 * 228.5, p846 * 127, p846 * 170, p846 * 150);
    v1214.closePath();
    f86(v1214, p848[1], p848[2], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 48, p846 * 130);
    v1214.bezierCurveTo(p846 * 61, p846 * 155, p846 * 63, p846 * 165, p846 * 56, p846 * 171);
    v1214.bezierCurveTo(p846 * 48, p846 * 177, p846 * 40, p846 * 171, p846 * 38, p846 * 178);
    v1214.bezierCurveTo(p846 * 33, p846 * 180, p846 * 37, p846 * 188, p846 * 47, p846 * 208);
    v1214.bezierCurveTo(p846 * 52, p846 * 221, p846 * 55, p846 * 222, p846 * 75, p846 * 229);
    v1214.bezierCurveTo(p846 * 91, p846 * 213, p846 * 98, p846 * 212, p846 * 112, p846 * 219);
    v1214.bezierCurveTo(p846 * 167, p846 * 225, p846 * 187, p846 * 224, p846 * 222, p846 * 220);
    v1214.bezierCurveTo(p846 * 244, p846 * 214, p846 * 247, p846 * 213, p846 * 263, p846 * 229);
    v1214.bezierCurveTo(p846 * 295, p846 * 220, p846 * 291, p846 * 215, p846 * 301, p846 * 194);
    v1214.bezierCurveTo(p846 * 308, p846 * 178, p846 * 309, p846 * 176, p846 * 302, p846 * 173);
    v1214.bezierCurveTo(p846 * 290, p846 * 177, p846 * 289, p846 * 177, p846 * 283, p846 * 169);
    v1214.bezierCurveTo(p846 * 279, p846 * 163, p846 * 279, p846 * 161, p846 * 290, p846 * 130);
    v1214.bezierCurveTo(p846 * 270, p846 * 127, p846 * 270, p846 * 127, p846 * 250, p846 * 124);
    v1214.bezierCurveTo(p846 * 209, p846 * 137.5, p846 * 209, p846 * 137.5, p846 * 168, p846 * 151);
    v1214.bezierCurveTo(p846 * 121, p846 * 135, p846 * 121, p846 * 135, p846 * 74, p846 * 119);
    v1214.closePath();
    f86(v1214, p848[1], p848[2], p846 * 8);
    v1214.globalCompositeOperation = "destination-out";
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 133, p846 * 158);
    v1214.bezierCurveTo(p846 * 152, p846 * 193, p846 * 158, p846 * 205, p846 * 140, p846 * 203);
    v1214.bezierCurveTo(p846 * 99, p846 * 195, p846 * 96, p846 * 189, p846 * 86, p846 * 173);
    v1214.bezierCurveTo(p846 * 80, p846 * 159, p846 * 88, p846 * 145, p846 * 104, p846 * 141);
    v1214.closePath();
    f86(v1214, p848[7], p848[8], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 215, p846 * 146);
    v1214.bezierCurveTo(p846 * 204, p846 * 167, p846 * 204, p846 * 167, p846 * 193, p846 * 188);
    v1214.bezierCurveTo(p846 * 187, p846 * 201, p846 * 191, p846 * 209, p846 * 213, p846 * 201);
    v1214.bezierCurveTo(p846 * 247, p846 * 192, p846 * 253, p846 * 181, p846 * 257, p846 * 169);
    v1214.bezierCurveTo(p846 * 260, p846 * 157, p846 * 254, p846 * 149, p846 * 243, p846 * 141);
    v1214.closePath();
    f86(v1214, p848[7], p848[8], p846 * 8);
    v1214.globalCompositeOperation = "source-over";
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 133, p846 * 158);
    v1214.bezierCurveTo(p846 * 152, p846 * 193, p846 * 158, p846 * 205, p846 * 140, p846 * 203);
    v1214.bezierCurveTo(p846 * 99, p846 * 195, p846 * 96, p846 * 189, p846 * 86, p846 * 173);
    v1214.bezierCurveTo(p846 * 80, p846 * 159, p846 * 88, p846 * 145, p846 * 104, p846 * 141);
    v1214.closePath();
    f86(v1214, vVVVUndefined197, p848[8], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 215, p846 * 146);
    v1214.bezierCurveTo(p846 * 204, p846 * 167, p846 * 204, p846 * 167, p846 * 193, p846 * 188);
    v1214.bezierCurveTo(p846 * 187, p846 * 201, p846 * 191, p846 * 209, p846 * 213, p846 * 201);
    v1214.bezierCurveTo(p846 * 247, p846 * 192, p846 * 253, p846 * 181, p846 * 257, p846 * 169);
    v1214.bezierCurveTo(p846 * 260, p846 * 157, p846 * 254, p846 * 149, p846 * 243, p846 * 141);
    v1214.closePath();
    f86(v1214, vVUndefined26, p848[8], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 39, p846 * 66);
    v1214.bezierCurveTo(p846 * 57, p846 * 107, p846 * 63, p846 * 96, p846 * 120, p846 * 106);
    v1214.bezierCurveTo(p846 * 154, p846 * 112, p846 * 163, p846 * 116, p846 * 174, p846 * 135);
    v1214.bezierCurveTo(p846 * 180, p846 * 109, p846 * 191, p846 * 113, p846 * 237, p846 * 103);
    v1214.bezierCurveTo(p846 * 276, p846 * 100, p846 * 289, p846 * 94, p846 * 301, p846 * 67);
    v1214.bezierCurveTo(p846 * 317, p846 * 112, p846 * 301, p846 * 141, p846 * 274, p846 * 139);
    v1214.bezierCurveTo(p846 * 204, p846 * 166, p846 * 197, p846 * 169, p846 * 173, p846 * 183);
    v1214.bezierCurveTo(p846 * 170, p846 * 183, p846 * 170, p846 * 183, p846 * 167, p846 * 183);
    v1214.bezierCurveTo(p846 * 132, p846 * 160, p846 * 112, p846 * 156, p846 * 73, p846 * 141);
    v1214.bezierCurveTo(p846 * 43, p846 * 146, p846 * 27, p846 * 120, p846 * 39, p846 * 66);
    v1214.closePath();
    f86(v1214, p848[7], p848[8], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 115, p846 * 185);
    v1214.bezierCurveTo(p846 * 115, p846 * 200, p846 * 118, p846 * 206, p846 * 124, p846 * 212);
    v1214.bezierCurveTo(p846 * 133, p846 * 223, p846 * 132, p846 * 231, p846 * 121, p846 * 230);
    v1214.bezierCurveTo(p846 * 108, p846 * 226, p846 * 108, p846 * 215, p846 * 107, p846 * 209);
    v1214.bezierCurveTo(p846 * 106, p846 * 201, p846 * 110, p846 * 196, p846 * 114, p846 * 185);
    v1214.closePath();
    f86(v1214, p848[3], p848[4], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 226, p846 * 186);
    v1214.bezierCurveTo(p846 * 234, p846 * 201, p846 * 238, p846 * 209, p846 * 228, p846 * 225);
    v1214.bezierCurveTo(p846 * 223, p846 * 233, p846 * 213, p846 * 233, p846 * 211, p846 * 226);
    v1214.bezierCurveTo(p846 * 206, p846 * 219, p846 * 217, p846 * 216, p846 * 221, p846 * 207);
    v1214.bezierCurveTo(p846 * 225, p846 * 196, p846 * 225, p846 * 191, p846 * 226, p846 * 186);
    v1214.closePath();
    f86(v1214, p848[3], p848[4], p846 * 8);
    v1214.beginPath();
    v1214.lineCap = "round";
    v1214.lineJoin = "round";
    v1214.moveTo(p846 * 172, p846 * 110);
    v1214.bezierCurveTo(p846 * 189, p846 * 153, p846 * 192, p846 * 160, p846 * 188, p846 * 175);
    v1214.bezierCurveTo(p846 * 183, p846 * 190, p846 * 176, p846 * 197, p846 * 165, p846 * 191);
    v1214.bezierCurveTo(p846 * 153, p846 * 181, p846 * 152, p846 * 166, p846 * 157, p846 * 151);
    v1214.bezierCurveTo(p846 * 164.5, p846 * 131, p846 * 164.5, p846 * 131, p846 * 172, p846 * 111);
    v1214.closePath();
    f86(v1214, p848[3], p848[4], p846 * 8);
    return v1213;
  }
  function f205(p849, p850) {
    var v1215 = document.createElement("canvas");
    var v1216 = v1215.getContext("2d");
    v1215.width = p849 * 120;
    v1215.height = p849 * 300;
    v1216.translate(p849 * -200, p849 * -40);
    v1216.beginPath();
    v1216.lineCap = "round";
    v1216.lineJoin = "round";
    v1216.moveTo(p849 * 344, p849 * 18.40625);
    v1216.bezierCurveTo(p849 * 345, p849 * 361.40625, p849 * 344, p849 * 191.40625, p849 * 344, p849 * 364.40625);
    v1216.bezierCurveTo(p849 * 261, p849 * 275.40625, p849 * 274, p849 * 259.40625, p849 * 229, p849 * 213.40625);
    v1216.bezierCurveTo(p849 * 199, p849 * 187.40625, p849 * 222, p849 * 133.40625, p849 * 273, p849 * 100.40625);
    v1216.bezierCurveTo(p849 * 321, p849 * 71.40625, p849 * 327, p849 * 34.40625, p849 * 344, p849 * 18.40625);
    v1216.closePath();
    f86(v1216, p850[0]);
    v1216.beginPath();
    v1216.lineCap = "round";
    v1216.lineJoin = "round";
    v1216.moveTo(p849 * 335, p849 * 38.072906494140625);
    v1216.bezierCurveTo(p849 * 307, p849 * 62.072906494140625, p849 * 291, p849 * 60.072906494140625, p849 * 262, p849 * 68.07290649414062);
    v1216.bezierCurveTo(p849 * 223, p849 * 80.07290649414062, p849 * 225, p849 * 111.07290649414062, p849 * 264, p849 * 139.07290649414062);
    v1216.closePath();
    f86(v1216, p850[0]);
    return v1215;
  }
  function f206(p851, p852) {
    var v1217 = document.createElement("canvas");
    var v1218 = v1217.getContext("2d");
    v1217.width = p851 * 253;
    v1217.height = p851 * 260;
    v1218.globalAlpha = 0.5;
    f87(v1218, p851 * 126.5, p851 * 134, p851 * 119);
    f86(v1218, p852[0]);
    v1218.globalAlpha = 1;
    f87(v1218, p851 * 126.5, p851 * 124, p851 * 119);
    f86(v1218, p852[1], p852[2], p851 * 4);
    f87(v1218, p851 * 126.5, p851 * 127, p851 * 100);
    f86(v1218, p852[3]);
    v1218.globalAlpha = 0.5;
    f87(v1218, p851 * 126.5, p851 * 135, p851 * 81);
    f86(v1218, p852[0]);
    v1218.globalAlpha = 1;
    f87(v1218, p851 * 126.5, p851 * 125, p851 * 84);
    f86(v1218, p852[4], p852[5], p851 * 4);
    f87(v1218, p851 * 126.5, p851 * 125, p851 * 61);
    f86(v1218, p852[6], p852[7], p851 * 4);
    v1218.globalAlpha = 0.5;
    f87(v1218, p851 * 126.5, p851 * 134, p851 * 40);
    f86(v1218, p852[8]);
    v1218.globalAlpha = 1;
    f87(v1218, p851 * 126.5, p851 * 125, p851 * 40);
    f86(v1218, p852[9]);
    return v1217;
  }
  function f207(p853, p854) {
    var v1219 = document.createElement("canvas");
    var v1220 = v1219.getContext("2d");
    v1219.width = p853 * 120;
    v1219.height = p853 * 320;
    v1220.translate(p853 * -60, p853 * -15);
    v1220.beginPath();
    v1220.lineCap = "round";
    v1220.lineJoin = "round";
    v1220.moveTo(p853 * 188.5, p853 * 3.953125);
    v1220.bezierCurveTo(p853 * 188.5, p853 * 171.453125, p853 * 188.5, p853 * 171.453125, p853 * 188.5, p853 * 338.953125);
    v1220.bezierCurveTo(p853 * 162.5, p853 * 268.953125, p853 * 145.5, p853 * 265.953125, p853 * 116.5, p853 * 244.953125);
    v1220.bezierCurveTo(p853 * 67.5, p853 * 204.953125, p853 * 87.5, p853 * 160.953125, p853 * 113.5, p853 * 125.953125);
    v1220.bezierCurveTo(p853 * 141.5, p853 * 90.953125, p853 * 176.5, p853 * 56.953125, p853 * 188.5, p853 * 3.953125);
    v1220.closePath();
    f86(v1220, p854[0]);
    return v1219;
  }
  function f208(p855, p856) {
    var v1221 = document.createElement("canvas");
    var v1222 = v1221.getContext("2d");
    v1221.width = p855 * 147;
    v1221.height = p855 * 172;
    v1222.globalAlpha = 0.5;
    v1222.translate(0, p855 * 8);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 8, p855 * 50);
    v1222.bezierCurveTo(p855 * 15, p855 * 16, p855 * 49, p855 * 6, p855 * 67, p855 * 6);
    v1222.bezierCurveTo(p855 * 121, p855 * 3, p855 * 128, p855 * 32, p855 * 135, p855 * 48);
    v1222.bezierCurveTo(p855 * 146, p855 * 96, p855 * 124, p855 * 131, p855 * 96, p855 * 135);
    v1222.bezierCurveTo(p855 * 96, p855 * 158, p855 * 79, p855 * 156, p855 * 75, p855 * 156);
    v1222.bezierCurveTo(p855 * 50, p855 * 154, p855 * 53, p855 * 150, p855 * 52, p855 * 135);
    v1222.bezierCurveTo(p855 * 2, p855 * 127, p855 * 3, p855 * 87, p855 * 8, p855 * 50);
    v1222.closePath();
    f86(v1222, p856[0]);
    v1222.translate(0, p855 * -8);
    v1222.globalAlpha = 1;
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 8, p855 * 50);
    v1222.bezierCurveTo(p855 * 15, p855 * 16, p855 * 49, p855 * 6, p855 * 67, p855 * 6);
    v1222.bezierCurveTo(p855 * 121, p855 * 3, p855 * 128, p855 * 32, p855 * 135, p855 * 48);
    v1222.bezierCurveTo(p855 * 146, p855 * 96, p855 * 124, p855 * 131, p855 * 96, p855 * 135);
    v1222.bezierCurveTo(p855 * 96, p855 * 158, p855 * 79, p855 * 156, p855 * 75, p855 * 156);
    v1222.bezierCurveTo(p855 * 50, p855 * 154, p855 * 53, p855 * 150, p855 * 52, p855 * 135);
    v1222.bezierCurveTo(p855 * 2, p855 * 127, p855 * 3, p855 * 87, p855 * 8, p855 * 50);
    v1222.closePath();
    f86(v1222, p856[1], p856[2], p855 * 4);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 14, p855 * 57);
    v1222.bezierCurveTo(p855 * 2, p855 * 50, p855 * 5, p855 * 22, p855 * 24, p855 * 22);
    v1222.bezierCurveTo(p855 * 41, p855 * 21, p855 * 54, p855 * 32, p855 * 55, p855 * 48);
    f86(v1222, p856[1], p856[2], p855 * 4);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 93, p855 * 47);
    v1222.bezierCurveTo(p855 * 94, p855 * 24, p855 * 116, p855 * 21, p855 * 120, p855 * 20);
    v1222.bezierCurveTo(p855 * 144, p855 * 17, p855 * 146, p855 * 52, p855 * 133, p855 * 58);
    f86(v1222, p856[1], p856[2], p855 * 4);
    f87(v1222, p855 * 51, p855 * 91, p855 * 9);
    f86(v1222, p856[3]);
    f87(v1222, p855 * 95, p855 * 91, p855 * 9);
    f86(v1222, p856[3]);
    f87(v1222, p855 * 91, p855 * 89, p855 * 4);
    f86(v1222, p856[4]);
    f87(v1222, p855 * 47, p855 * 89, p855 * 4);
    f86(v1222, p856[4]);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 54, p855 * 133);
    v1222.bezierCurveTo(p855 * 56, p855 * 108, p855 * 64, p855 * 99, p855 * 73, p855 * 98);
    v1222.bezierCurveTo(p855 * 86, p855 * 97, p855 * 91, p855 * 119, p855 * 93, p855 * 133);
    v1222.bezierCurveTo(p855 * 94, p855 * 155, p855 * 90, p855 * 150, p855 * 74, p855 * 155);
    v1222.bezierCurveTo(p855 * 50, p855 * 152, p855 * 55, p855 * 145, p855 * 54, p855 * 134);
    v1222.closePath();
    f86(v1222, p856[5]);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 65.25, p855 * 135);
    v1222.bezierCurveTo(p855 * 75.25, p855 * 128, p855 * 83.25, p855 * 133, p855 * 83.25, p855 * 138);
    v1222.bezierCurveTo(p855 * 88.25, p855 * 148, p855 * 61.25, p855 * 149, p855 * 64.25, p855 * 137);
    v1222.closePath();
    f86(v1222, p856[6]);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 74, p855 * 145);
    v1222.bezierCurveTo(p855 * 74, p855 * 148, p855 * 74, p855 * 148, p855 * 74, p855 * 151);
    v1222.closePath();
    f86(v1222, undefined, p856[6], p855 * 2);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 19, p855 * 58);
    v1222.bezierCurveTo(p855 * 10, p855 * 38, p855 * 18, p855 * 33, p855 * 28, p855 * 34);
    v1222.bezierCurveTo(p855 * 41, p855 * 39, p855 * 45, p855 * 45, p855 * 50, p855 * 51);
    v1222.closePath();
    f86(v1222, p856[6]);
    v1222.beginPath();
    v1222.lineCap = "round";
    v1222.lineJoin = "round";
    v1222.moveTo(p855 * 100, p855 * 51);
    v1222.bezierCurveTo(p855 * 106, p855 * 36, p855 * 119, p855 * 31, p855 * 128, p855 * 36);
    v1222.bezierCurveTo(p855 * 137, p855 * 49, p855 * 128, p855 * 58, p855 * 128, p855 * 60);
    v1222.closePath();
    f86(v1222, p856[6]);
    return v1221;
  }
  function f209(p857, p858, p859) {
    var v1223 = document.createElement("canvas");
    var v1224 = v1223.getContext("2d");
    v1223.width = p857 * 170;
    v1223.height = p857 * 170;
    v1224.globalAlpha = p858 ? 0.5 : 1;
    v1224.translate(0, p857 * 3);
    v1224.save();
    v1224.translate(p857 * 85, p857 * 95);
    v1224.rotate(1.4);
    f92(v1224, 7, p857 * 60, p857 * 10);
    v1224.restore();
    f86(v1224, p859[0]);
    v1224.globalAlpha = 1;
    v1224.translate(p857 * 85, p857 * 82);
    for (var v1225 = 0; v1225 < 10; v1225++) {
      v1224.rotate(Math.PI / 5);
      v1224.save();
      v1224.translate(p857 * 65, 0);
      f92(v1224, 3, p857 * 21, p857 * 4);
      f86(v1224, p859[1], p859[2], p857 * 4);
      v1224.restore();
    }
    v1224.save();
    v1224.translate(p857 * 0, p857 * 0);
    v1224.rotate(1);
    f92(v1224, 8, p857 * 60, p857 * 10);
    f86(v1224, p859[3], p859[4], p857 * 4);
    v1224.rotate(0.56);
    f92(v1224, 8, p857 * 40, p857 * 10);
    f86(v1224, p859[5], p859[6], p857 * 4);
    v1224.rotate(0.28);
    f92(v1224, 8, p857 * 28, p857 * 8);
    f86(v1224, p859[7]);
    v1224.restore();
    return v1223;
  }
  function f210(p860, p861, p862) {
    var v1226 = document.createElement("canvas");
    var v1227 = v1226.getContext("2d");
    v1226.width = p860 * 161;
    v1226.height = p860 * 184;
    v1227.translate(0, p860 * 10);
    v1227.globalAlpha = 1;
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 105.5, p860 * 34.609375);
    v1227.bezierCurveTo(p860 * 48.5, p860 * 7.609375, p860 * 11.5, p860 * 58.609375, p860 * 20.5, p860 * 97.609375);
    v1227.bezierCurveTo(p860 * 44.5, p860 * 161.609375, p860 * 70.5, p860 * 171.609375, p860 * 88.5, p860 * 156.609375);
    v1227.bezierCurveTo(p860 * 120.5, p860 * 129.609375, p860 * 123.5, p860 * 105.609375, p860 * 128.5, p860 * 83.609375);
    v1227.bezierCurveTo(p860 * 137.5, p860 * 79.609375, p860 * 141.5, p860 * 79.609375, p860 * 146.5, p860 * 81.609375);
    v1227.bezierCurveTo(p860 * 153.5, p860 * 70.609375, p860 * 151.5, p860 * 65.609375, p860 * 148.5, p860 * 61.609375);
    v1227.bezierCurveTo(p860 * 134.5, p860 * 60.609375, p860 * 131.5, p860 * 63.609375, p860 * 127.5, p860 * 66.609375);
    v1227.bezierCurveTo(p860 * 127.5, p860 * 55.609375, p860 * 125.5, p860 * 54.609375, p860 * 120.5, p860 * 51.609375);
    v1227.bezierCurveTo(p860 * 128.5, p860 * 42.609375, p860 * 136.5, p860 * 38.609375, p860 * 147.5, p860 * 39.609375);
    v1227.bezierCurveTo(p860 * 152.5, p860 * 23.609375, p860 * 147.5, p860 * 21.609375, p860 * 140.5, p860 * 17.609375);
    v1227.bezierCurveTo(p860 * 120.5, p860 * 17.609375, p860 * 114.5, p860 * 27.609375, p860 * 106.5, p860 * 35.609375);
    v1227.closePath();
    f86(v1227, p862[0]);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 45.5, p860 * 144.609375);
    v1227.bezierCurveTo(p860 * 35.5, p860 * 155.609375, p860 * 37, p860 * 152.109375, p860 * 28.5, p860 * 159.609375);
    v1227.bezierCurveTo(p860 * 16.5, p860 * 154.609375, p860 * 16.5, p860 * 151.609375, p860 * 17.5, p860 * 141.609375);
    v1227.bezierCurveTo(p860 * 25.5, p860 * 134.109375, p860 * 25.5, p860 * 134.109375, p860 * 33.5, p860 * 126.609375);
    f86(v1227, p862[0]);
    v1227.translate(0, p860 * -10);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 45.5, p860 * 144.609375);
    v1227.bezierCurveTo(p860 * 35.5, p860 * 155.609375, p860 * 37, p860 * 152.109375, p860 * 28.5, p860 * 159.609375);
    v1227.bezierCurveTo(p860 * 16.5, p860 * 154.609375, p860 * 16.5, p860 * 151.609375, p860 * 17.5, p860 * 141.609375);
    v1227.bezierCurveTo(p860 * 25.5, p860 * 134.109375, p860 * 25.5, p860 * 134.109375, p860 * 33.5, p860 * 126.609375);
    f86(v1227, p862[1], p862[2], p860 * 8);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 105.5, p860 * 34.609375);
    v1227.bezierCurveTo(p860 * 48.5, p860 * 7.609375, p860 * 11.5, p860 * 58.609375, p860 * 20.5, p860 * 97.609375);
    v1227.bezierCurveTo(p860 * 44.5, p860 * 161.609375, p860 * 70.5, p860 * 171.609375, p860 * 88.5, p860 * 156.609375);
    v1227.bezierCurveTo(p860 * 120.5, p860 * 129.609375, p860 * 123.5, p860 * 105.609375, p860 * 128.5, p860 * 83.609375);
    v1227.bezierCurveTo(p860 * 137.5, p860 * 79.609375, p860 * 141.5, p860 * 79.609375, p860 * 146.5, p860 * 81.609375);
    v1227.bezierCurveTo(p860 * 153.5, p860 * 70.609375, p860 * 151.5, p860 * 65.609375, p860 * 148.5, p860 * 61.609375);
    v1227.bezierCurveTo(p860 * 134.5, p860 * 60.609375, p860 * 131.5, p860 * 63.609375, p860 * 127.5, p860 * 66.609375);
    v1227.bezierCurveTo(p860 * 127.5, p860 * 55.609375, p860 * 125.5, p860 * 54.609375, p860 * 120.5, p860 * 51.609375);
    v1227.bezierCurveTo(p860 * 128.5, p860 * 42.609375, p860 * 136.5, p860 * 38.609375, p860 * 147.5, p860 * 39.609375);
    v1227.bezierCurveTo(p860 * 152.5, p860 * 23.609375, p860 * 147.5, p860 * 21.609375, p860 * 140.5, p860 * 17.609375);
    v1227.bezierCurveTo(p860 * 120.5, p860 * 17.609375, p860 * 114.5, p860 * 27.609375, p860 * 106.5, p860 * 35.609375);
    v1227.closePath();
    f86(v1227, p862[1], p862[2], p860 * 8);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 104.5, p860 * 35.609375);
    v1227.bezierCurveTo(p860 * 71.5, p860 * 36.609375, p860 * 57.5, p860 * 52.609375, p860 * 58.5, p860 * 81.609375);
    v1227.bezierCurveTo(p860 * 59.5, p860 * 103.609375, p860 * 66.5, p860 * 107.609375, p860 * 66.5, p860 * 116.609375);
    v1227.bezierCurveTo(p860 * 67.5, p860 * 128.609375, p860 * 65.5, p860 * 131.609375, p860 * 63.5, p860 * 137.609375);
    f86(v1227, vVVVUndefined197, p862[2], p860 * 8);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 59.5, p860 * 72.609375);
    v1227.bezierCurveTo(p860 * 38.5, p860 * 80.609375, p860 * 43.5, p860 * 81.609375, p860 * 37.5, p860 * 89.609375);
    f86(v1227, vVVVUndefined272, p862[2], p860 * 4);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 60.5, p860 * 85.609375);
    v1227.bezierCurveTo(p860 * 75.5, p860 * 91.609375, p860 * 76.5, p860 * 96.609375, p860 * 81.5, p860 * 104.609375);
    f86(v1227, vVVVUndefined197, p862[2], p860 * 4);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 68.5, p860 * 122.609375);
    v1227.bezierCurveTo(p860 * 79.5, p860 * 130.609375, p860 * 74.5, p860 * 128.609375, p860 * 80.5, p860 * 134.609375);
    f86(v1227, p862[1], p862[2], p860 * 4);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 142.5, p860 * 18.609375);
    v1227.bezierCurveTo(p860 * 151.5, p860 * 28.609375, p860 * 151.5, p860 * 32.609375, p860 * 146.5, p860 * 40.609375);
    v1227.bezierCurveTo(p860 * 137.5, p860 * 26.609375, p860 * 138.5, p860 * 24.609375, p860 * 142.5, p860 * 19.609375);
    v1227.closePath();
    f86(v1227, p862[3]);
    v1227.beginPath();
    v1227.lineCap = "round";
    v1227.lineJoin = "round";
    v1227.moveTo(p860 * 146.5, p860 * 61.50892639160156);
    v1227.bezierCurveTo(p860 * 157.5, p860 * 69.50892639160156, p860 * 150.5, p860 * 79.50892639160156, p860 * 145.5, p860 * 81.50892639160156);
    v1227.bezierCurveTo(p860 * 140.5, p860 * 65.50892639160156, p860 * 144.5, p860 * 64.50892639160156, p860 * 146.5, p860 * 62.50892639160156);
    v1227.closePath();
    f86(v1227, p862[3]);
    return v1226;
  }
  function f211(p863, p864, p865) {
    var v1228 = document.createElement("canvas");
    var v1229 = v1228.getContext("2d");
    v1228.width = p863 * 138;
    v1228.height = p863 * 133;
    v1229.globalAlpha = p864 ? 0.3 : 1;
    v1229.translate(0, p863 * 5);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 26, p863 * 79.640625);
    v1229.bezierCurveTo(p863 * 13, p863 * 84.640625, p863 * 9, p863 * 86.640625, p863 * 7, p863 * 78.640625);
    v1229.bezierCurveTo(p863 * 6, p863 * 69.640625, p863 * 15, p863 * 67.640625, p863 * 31, p863 * 62.640625);
    v1229.bezierCurveTo(p863 * 63, p863 * 55.640625, p863 * 85, p863 * 57.640625, p863 * 104, p863 * 63.640625);
    v1229.bezierCurveTo(p863 * 131, p863 * 69.640625, p863 * 132, p863 * 71.640625, p863 * 131, p863 * 78.640625);
    v1229.bezierCurveTo(p863 * 131, p863 * 91.640625, p863 * 112, p863 * 80.640625, p863 * 91, p863 * 75.640625);
    v1229.bezierCurveTo(p863 * 51, p863 * 70.640625, p863 * 45, p863 * 74.640625, p863 * 28, p863 * 78.640625);
    v1229.closePath();
    f86(v1229, p865[0]);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 8, p863 * 82.640625);
    v1229.bezierCurveTo(p863 * 40, p863 * 107.640625, p863 * 53, p863 * 104.640625, p863 * 67, p863 * 106.640625);
    v1229.bezierCurveTo(p863 * 101, p863 * 103.640625, p863 * 117, p863 * 93.640625, p863 * 127, p863 * 84.640625);
    v1229.bezierCurveTo(p863 * 135, p863 * 95.640625, p863 * 131, p863 * 107.640625, p863 * 110, p863 * 118.640625);
    v1229.bezierCurveTo(p863 * 78, p863 * 129.640625, p863 * 67, p863 * 130.640625, p863 * 27, p863 * 119.640625);
    v1229.bezierCurveTo(p863 * 0, p863 * 105.640625, p863 * 8, p863 * 83.640625, p863 * 10, p863 * 84.640625);
    v1229.closePath();
    f86(v1229, p865[0]);
    v1229.globalAlpha = 1;
    v1229.translate(0, p863 * -5);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 8, p863 * 73.640625);
    v1229.bezierCurveTo(p863 * 7, p863 * 23.640625, p863 * 33, p863 * 19.640625, p863 * 71, p863 * 17.640625);
    v1229.bezierCurveTo(p863 * 129, p863 * 19.640625, p863 * 130, p863 * 45.640625, p863 * 130, p863 * 76.640625);
    v1229.bezierCurveTo(p863 * 90, p863 * 63.640625, p863 * 85, p863 * 63.640625, p863 * 73, p863 * 63.640625);
    v1229.bezierCurveTo(p863 * 38, p863 * 63.640625, p863 * 33, p863 * 66.640625, p863 * 8, p863 * 73.640625);
    v1229.closePath();
    f86(v1229, p865[1], p865[2], p863 * 4);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 72, p863 * 28.640625);
    v1229.bezierCurveTo(p863 * 51, p863 * 25.640625, p863 * 56, p863 * 7.640625, p863 * 70, p863 * 5.640625);
    v1229.bezierCurveTo(p863 * 94, p863 * 7.640625, p863 * 87, p863 * 29.640625, p863 * 72, p863 * 28.640625);
    v1229.closePath();
    f86(v1229, p865[3], p865[2], p863 * 4);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 51, p863 * 26.640625);
    v1229.bezierCurveTo(p863 * 42, p863 * 29.640625, p863 * 43, p863 * 31.640625, p863 * 42, p863 * 37.640625);
    f86(v1229, undefined, p865[2], p863 * 4);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 90, p863 * 26.640625);
    v1229.bezierCurveTo(p863 * 100, p863 * 28.640625, p863 * 98, p863 * 34.640625, p863 * 99, p863 * 38.640625);
    f86(v1229, vVVVUndefined272, p865[2], p863 * 4);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 26, p863 * 79.640625);
    v1229.bezierCurveTo(p863 * 13, p863 * 84.640625, p863 * 9, p863 * 86.640625, p863 * 7, p863 * 78.640625);
    v1229.bezierCurveTo(p863 * 6, p863 * 69.640625, p863 * 15, p863 * 67.640625, p863 * 31, p863 * 62.640625);
    v1229.bezierCurveTo(p863 * 63, p863 * 55.640625, p863 * 85, p863 * 57.640625, p863 * 104, p863 * 63.640625);
    v1229.bezierCurveTo(p863 * 131, p863 * 69.640625, p863 * 132, p863 * 71.640625, p863 * 131, p863 * 78.640625);
    v1229.bezierCurveTo(p863 * 131, p863 * 91.640625, p863 * 112, p863 * 80.640625, p863 * 91, p863 * 75.640625);
    v1229.bezierCurveTo(p863 * 51, p863 * 70.640625, p863 * 45, p863 * 74.640625, p863 * 28, p863 * 78.640625);
    v1229.closePath();
    f86(v1229, p865[3], p865[4], p863 * 4);
    v1229.beginPath();
    v1229.lineCap = "round";
    v1229.lineJoin = "round";
    v1229.moveTo(p863 * 8, p863 * 82.640625);
    v1229.bezierCurveTo(p863 * 40, p863 * 107.640625, p863 * 53, p863 * 104.640625, p863 * 67, p863 * 106.640625);
    v1229.bezierCurveTo(p863 * 101, p863 * 103.640625, p863 * 117, p863 * 93.640625, p863 * 127, p863 * 84.640625);
    v1229.bezierCurveTo(p863 * 135, p863 * 95.640625, p863 * 131, p863 * 107.640625, p863 * 110, p863 * 118.640625);
    v1229.bezierCurveTo(p863 * 78, p863 * 129.640625, p863 * 67, p863 * 130.640625, p863 * 27, p863 * 119.640625);
    v1229.bezierCurveTo(p863 * 0, p863 * 105.640625, p863 * 8, p863 * 83.640625, p863 * 10, p863 * 84.640625);
    v1229.closePath();
    f86(v1229, p865[3], p865[4], p863 * 4);
    return v1228;
  }
  function f212(p866, p867) {
    var v1230 = document.createElement("canvas");
    var v1231 = v1230.getContext("2d");
    v1230.width = p866 * 149;
    v1230.height = p866 * 153;
    v1231.globalAlpha = 0.5;
    f87(v1231, p866 * 74.5, p866 * 85, p866 * 66);
    f86(v1231, p867[0]);
    v1231.globalAlpha = 1;
    f87(v1231, p866 * 75.5, p866 * 72.5, p866 * 67);
    f86(v1231, p867[1], p867[2], p866 * 4);
    f87(v1231, p866 * 75.5, p866 * 73.5, p866 * 54);
    f86(v1231, p867[3]);
    v1231.globalAlpha = 0.5;
    f87(v1231, p866 * 74.5, p866 * 80.5, p866 * 39);
    f86(v1231, p867[4]);
    v1231.globalAlpha = 1;
    f87(v1231, p866 * 74.5, p866 * 74.5, p866 * 37);
    f86(v1231, p867[5]);
    return v1230;
  }
  function f213(p868, p869, p870) {
    var v1232 = document.createElement("canvas");
    var v1233 = v1232.getContext("2d");
    v1232.width = p868 * 180;
    v1232.height = p868 * 120;
    v1233.translate(p868 * -65, p868 * -35);
    v1233.globalAlpha = p869 ? 0.5 : 1;
    v1233.translate(0, p868 * 10);
    v1233.save();
    v1233.translate(p868 * 150.5, p868 * 63.84375);
    f89(v1233, p868 * -67, p868 * -16.5, p868 * 134, p868 * 33, p868 * 5);
    v1233.restore();
    f86(v1233, p870[0]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 80.5, p868 * 75.34375);
    v1233.bezierCurveTo(p868 * 83, p868 * 106.34375, p868 * 83, p868 * 106.34375, p868 * 85.5, p868 * 137.34375);
    v1233.bezierCurveTo(p868 * 93, p868 * 135.84375, p868 * 93, p868 * 135.84375, p868 * 100.5, p868 * 134.34375);
    v1233.bezierCurveTo(p868 * 99.5, p868 * 100.84375, p868 * 99.5, p868 * 100.84375, p868 * 98.5, p868 * 67.34375);
    v1233.closePath();
    f86(v1233, p870[0]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 206.5, p868 * 71.34375);
    v1233.bezierCurveTo(p868 * 203.5, p868 * 104.34375, p868 * 203.5, p868 * 104.34375, p868 * 200.5, p868 * 137.34375);
    v1233.bezierCurveTo(p868 * 208.5, p868 * 137.34375, p868 * 208.5, p868 * 137.34375, p868 * 216.5, p868 * 137.34375);
    v1233.bezierCurveTo(p868 * 219, p868 * 102.84375, p868 * 219, p868 * 102.84375, p868 * 221.5, p868 * 68.34375);
    v1233.closePath();
    f86(v1233, p870[0]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 136.5, p868 * 75.34375);
    v1233.bezierCurveTo(p868 * 139, p868 * 94.34375, p868 * 139, p868 * 94.34375, p868 * 141.5, p868 * 113.34375);
    v1233.bezierCurveTo(p868 * 149.5, p868 * 115.34375, p868 * 149.5, p868 * 115.34375, p868 * 157.5, p868 * 117.34375);
    v1233.bezierCurveTo(p868 * 162, p868 * 97.34375, p868 * 162, p868 * 97.34375, p868 * 166.5, p868 * 77.34375);
    v1233.closePath();
    f86(v1233, p870[0]);
    v1233.save();
    v1233.translate(p868 * 152.5, p868 * 80.84375);
    v1233.rotate(3.12);
    f89(v1233, p868 * -73, p868 * -20.5, p868 * 146, p868 * 41, p868 * 5);
    v1233.restore();
    f86(v1233, p870[0]);
    v1233.globalAlpha = 1;
    v1233.translate(0, p868 * -10);
    v1233.save();
    v1233.translate(p868 * 150.5, p868 * 63.84375);
    f89(v1233, p868 * -67, p868 * -16.5, p868 * 134, p868 * 33, p868 * 5);
    v1233.restore();
    f86(v1233, p870[1], p870[2], p868 * 4);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 80.5, p868 * 75.34375);
    v1233.bezierCurveTo(p868 * 83, p868 * 106.34375, p868 * 83, p868 * 106.34375, p868 * 85.5, p868 * 137.34375);
    v1233.bezierCurveTo(p868 * 93, p868 * 135.84375, p868 * 93, p868 * 135.84375, p868 * 100.5, p868 * 134.34375);
    v1233.bezierCurveTo(p868 * 99.5, p868 * 100.84375, p868 * 99.5, p868 * 100.84375, p868 * 98.5, p868 * 67.34375);
    v1233.closePath();
    f86(v1233, p870[1], p870[2], p868 * 4);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 206.5, p868 * 71.34375);
    v1233.bezierCurveTo(p868 * 203.5, p868 * 104.34375, p868 * 203.5, p868 * 104.34375, p868 * 200.5, p868 * 137.34375);
    v1233.bezierCurveTo(p868 * 208.5, p868 * 137.34375, p868 * 208.5, p868 * 137.34375, p868 * 216.5, p868 * 137.34375);
    v1233.bezierCurveTo(p868 * 219, p868 * 102.84375, p868 * 219, p868 * 102.84375, p868 * 221.5, p868 * 68.34375);
    v1233.closePath();
    f86(v1233, p870[1], p870[2], p868 * 4);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 136.5, p868 * 75.34375);
    v1233.bezierCurveTo(p868 * 139, p868 * 94.34375, p868 * 139, p868 * 94.34375, p868 * 141.5, p868 * 113.34375);
    v1233.bezierCurveTo(p868 * 149.5, p868 * 115.34375, p868 * 149.5, p868 * 115.34375, p868 * 157.5, p868 * 117.34375);
    v1233.bezierCurveTo(p868 * 162, p868 * 97.34375, p868 * 162, p868 * 97.34375, p868 * 166.5, p868 * 77.34375);
    v1233.closePath();
    f86(v1233, p870[1], p870[2], p868 * 4);
    v1233.save();
    v1233.translate(p868 * 152.5, p868 * 80.84375);
    v1233.rotate(3.12);
    f89(v1233, p868 * -73, p868 * -20.5, p868 * 146, p868 * 41, p868 * 5);
    v1233.restore();
    f86(v1233, p870[1], p870[2], p868 * 4);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 83.5, p868 * 73.34375);
    v1233.bezierCurveTo(p868 * 93.5, p868 * 70.34375, p868 * 105.5, p868 * 70.34375, p868 * 124.5, p868 * 72.34375);
    v1233.bezierCurveTo(p868 * 132.5, p868 * 78.34375, p868 * 162.5, p868 * 80.34375, p868 * 176.5, p868 * 76.34375);
    v1233.bezierCurveTo(p868 * 194.5, p868 * 69.34375, p868 * 192.5, p868 * 68.34375, p868 * 199.5, p868 * 63.34375);
    v1233.bezierCurveTo(p868 * 204.5, p868 * 63.34375, p868 * 204.5, p868 * 63.34375, p868 * 209.5, p868 * 63.34375);
    v1233.bezierCurveTo(p868 * 153.5, p868 * 82.34375, p868 * 157.5, p868 * 85.34375, p868 * 209.5, p868 * 63.34375);
    v1233.bezierCurveTo(p868 * 194.5, p868 * 88.34375, p868 * 162.5, p868 * 87.34375, p868 * 149.5, p868 * 88.34375);
    v1233.bezierCurveTo(p868 * 129.5, p868 * 81.34375, p868 * 103.5, p868 * 75.34375, p868 * 83.5, p868 * 82.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 137.5, p868 * 65.34375);
    v1233.bezierCurveTo(p868 * 150.5, p868 * 76.34375, p868 * 170.5, p868 * 71.34375, p868 * 174.5, p868 * 65.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 221.5, p868 * 85.34375);
    v1233.bezierCurveTo(p868 * 211.5, p868 * 79.34375, p868 * 191.5, p868 * 88.34375, p868 * 181.5, p868 * 96.34375);
    v1233.bezierCurveTo(p868 * 201.5, p868 * 96.34375, p868 * 201.5, p868 * 96.34375, p868 * 221.5, p868 * 96.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 84.5, p868 * 89.34375);
    v1233.bezierCurveTo(p868 * 102.5, p868 * 87.34375, p868 * 112.5, p868 * 88.34375, p868 * 119.5, p868 * 97.34375);
    v1233.bezierCurveTo(p868 * 102, p868 * 98.34375, p868 * 102, p868 * 98.34375, p868 * 84.5, p868 * 99.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 208.5, p868 * 104.34375);
    v1233.bezierCurveTo(p868 * 208.5, p868 * 110.34375, p868 * 208.5, p868 * 110.34375, p868 * 208.5, p868 * 116.34375);
    v1233.bezierCurveTo(p868 * 211.5, p868 * 110.34375, p868 * 211.5, p868 * 110.34375, p868 * 214.5, p868 * 104.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 87.5, p868 * 117.34375);
    v1233.bezierCurveTo(p868 * 92, p868 * 118.84375, p868 * 92, p868 * 118.84375, p868 * 96.5, p868 * 120.34375);
    v1233.bezierCurveTo(p868 * 93, p868 * 123.84375, p868 * 93, p868 * 123.84375, p868 * 89.5, p868 * 127.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 107.5, p868 * 51.34375);
    v1233.bezierCurveTo(p868 * 122.5, p868 * 54.34375, p868 * 122.5, p868 * 54.34375, p868 * 137.5, p868 * 57.34375);
    v1233.bezierCurveTo(p868 * 118, p868 * 57.34375, p868 * 118, p868 * 57.34375, p868 * 98.5, p868 * 57.34375);
    v1233.bezierCurveTo(p868 * 94.5, p868 * 54.84375, p868 * 94.5, p868 * 54.84375, p868 * 90.5, p868 * 52.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 170.5, p868 * 52.34375);
    v1233.bezierCurveTo(p868 * 179.5, p868 * 51.84375, p868 * 179.5, p868 * 51.84375, p868 * 188.5, p868 * 51.34375);
    v1233.bezierCurveTo(p868 * 187.5, p868 * 53.84375, p868 * 187.5, p868 * 53.84375, p868 * 186.5, p868 * 56.34375);
    v1233.bezierCurveTo(p868 * 177, p868 * 56.34375, p868 * 177, p868 * 56.34375, p868 * 167.5, p868 * 56.34375);
    v1233.closePath();
    f86(v1233, p870[3]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 80.5, p868 * 69.34375);
    v1233.bezierCurveTo(p868 * 86.5, p868 * 70.34375, p868 * 86.5, p868 * 70.34375, p868 * 92.5, p868 * 71.34375);
    v1233.bezierCurveTo(p868 * 86, p868 * 73.34375, p868 * 86, p868 * 73.34375, p868 * 79.5, p868 * 75.34375);
    v1233.closePath();
    f86(v1233, p870[2]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 222.5, p868 * 75.34375);
    v1233.bezierCurveTo(p868 * 214.5, p868 * 76.34375, p868 * 214.5, p868 * 76.34375, p868 * 206.5, p868 * 77.34375);
    v1233.bezierCurveTo(p868 * 216.5, p868 * 79.34375, p868 * 216.5, p868 * 79.34375, p868 * 226.5, p868 * 81.34375);
    v1233.closePath();
    f86(v1233, p870[2]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 116.5, p868 * 100.34375);
    v1233.bezierCurveTo(p868 * 128, p868 * 97.34375, p868 * 128, p868 * 97.34375, p868 * 139.5, p868 * 94.34375);
    v1233.bezierCurveTo(p868 * 140, p868 * 96.84375, p868 * 140, p868 * 96.84375, p868 * 140.5, p868 * 99.34375);
    v1233.closePath();
    f86(v1233, p870[2]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 112.5, p868 * 48.34375);
    v1233.bezierCurveTo(p868 * 115.5, p868 * 50.84375, p868 * 115.5, p868 * 50.84375, p868 * 118.5, p868 * 53.34375);
    v1233.bezierCurveTo(p868 * 131, p868 * 50.84375, p868 * 131, p868 * 50.84375, p868 * 143.5, p868 * 48.34375);
    v1233.closePath();
    f86(v1233, p870[2]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 216.5, p868 * 109.34375);
    v1233.bezierCurveTo(p868 * 213, p868 * 114.84375, p868 * 213, p868 * 114.84375, p868 * 209.5, p868 * 120.34375);
    v1233.bezierCurveTo(p868 * 212, p868 * 118.84375, p868 * 212, p868 * 118.84375, p868 * 214.5, p868 * 117.34375);
    v1233.closePath();
    f86(v1233, p870[2]);
    v1233.beginPath();
    v1233.lineCap = "round";
    v1233.lineJoin = "round";
    v1233.moveTo(p868 * 86.5, p868 * 133.34375);
    v1233.bezierCurveTo(p868 * 89, p868 * 127.34375, p868 * 89, p868 * 127.34375, p868 * 91.5, p868 * 121.34375);
    v1233.bezierCurveTo(p868 * 92.5, p868 * 127.34375, p868 * 92.5, p868 * 127.34375, p868 * 93.5, p868 * 133.34375);
    v1233.closePath();
    f86(v1233, p870[2]);
    return v1232;
  }
  function f214(p871, p872) {
    var v1234 = document.createElement("canvas");
    var v1235 = v1234.getContext("2d");
    v1234.width = p871 * 100;
    v1234.height = p871 * 100;
    v1235.globalAlpha = 0.5;
    v1235.fillStyle = p872[0];
    v1235.fillRect(0, 0, v1234.width, v1234.height);
    return v1234;
  }
  function f215(p873, p874, p875) {
    var v1236 = document.createElement("canvas");
    var v1237 = v1236.getContext("2d");
    v1236.width = p873 * 89;
    v1236.height = p873 * 89;
    v1237.save();
    v1237.translate(p873 * 44.5, p873 * 44.5);
    f92(v1237, 6, p873 * 40, p873 * 10);
    v1237.restore();
    f86(v1237, p875[0], p875[1], p873 * 5);
    v1237.save();
    v1237.translate(p873 * 44.5, p873 * 44.5);
    f92(v1237, 6, p873 * 25.11521001172521, p873 * 10);
    v1237.restore();
    f86(v1237, p875[2], p875[3], p873 * 5);
    return v1236;
  }
  function f216(p876, p877, p878, p879) {
    var v1238 = document.createElement("canvas");
    var v1239 = v1238.getContext("2d");
    v1238.width = p876 * 450;
    v1238.height = p876 * 260;
    var vDb = f232(p876 * 1, vVVV2432, p878);
    v1239.drawImage(vDb, p876 * 0, p876 * 0);
    if (p879 == 1) {
      v1239.translate(p876 * 100, p876 * 0);
      f87(v1239, p876 * 113, p876 * 120, p876 * 66);
      f86(v1239, vVVVUndefined272, p878[4], p876 * 13);
      vDb = f140(p876 * 0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]);
      v1239.rotate(0.7);
      v1239.drawImage(vDb, p876 * 133, p876 * -64);
      v1239.rotate(-0.7);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 70, p876 * 70);
      v1239.bezierCurveTo(p876 * 113, p876 * 120.5, p876 * 113, p876 * 120.5, p876 * 156, p876 * 171);
      v1239.closePath();
      f86(v1239, vVVUndefined198, p878[4], p876 * 13);
    } else if (p879 == 2) {
      v1239.translate(p876 * 100, p876 * 0);
      f87(v1239, p876 * 113, p876 * 120, p876 * 66);
      f86(v1239, vVVVUndefined1974, p878[4], p876 * 13);
      v1239.translate(p876 * 30, p876 * 40);
      v1239.save();
      v1239.translate(p876 * 83.5, p876 * 66.5);
      f89(v1239, p876 * -40.5, p876 * -29.5, p876 * 81, p876 * 59, p876 * 15);
      v1239.restore();
      f86(v1239, "#dff2f7", "#187484", p876 * 7);
      f87(v1239, p876 * 22, p876 * 82, p876 * 12);
      f86(v1239, "#dff2f7", "#187484", p876 * 7);
      f87(v1239, p876 * 145, p876 * 82, p876 * 12);
      f86(v1239, "#dff2f7", "#187484", p876 * 7);
      vDb = f160(p876 * 0.5, true, ["#80500b", "#7c4908"]);
      v1239.drawImage(vDb, p876 * 10, p876 * 85);
      vDb = f160(p876 * 0.5, vVVV24, ["#80500b", "#7c4908"]);
      v1239.drawImage(vDb, p876 * 50, p876 * 85);
      vDb = f160(p876 * 0.5, true, ["#80500b", "#7c4908"]);
      v1239.drawImage(vDb, p876 * 90, p876 * 85);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 90, p876 * 105);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 90, p876 * 105);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 30, p876 * 125);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 50, p876 * 115);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 30, p876 * 100);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 80, p876 * 120);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 110, p876 * 125);
      vDb = f161(p876 * 1, 0, ["#3d2a6e", "#8255b5"]);
      v1239.drawImage(vDb, p876 * 120, p876 * 105);
    } else if (p879 == 3) {
      v1239.translate(p876 * 100, p876 * 0);
      f87(v1239, p876 * 113, p876 * 120, p876 * 66);
      f86(v1239, vVUndefined27, p878[4], p876 * 13);
      v1239.translate(p876 * 40, p876 * 50);
      v1239.save();
      v1239.translate(p876 * 71, p876 * 69);
      f89(v1239, p876 * -30, p876 * -42, p876 * 60, p876 * 84, p876 * 10);
      v1239.restore();
      f86(v1239, vUndefined, p878[5], p876 * 4);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 42, p876 * 28);
      v1239.bezierCurveTo(p876 * 60, p876 * 31, p876 * 60, p876 * 31, p876 * 78, p876 * 34);
      v1239.bezierCurveTo(p876 * 82, p876 * 34, p876 * 84, p876 * 37, p876 * 83, p876 * 45);
      v1239.bezierCurveTo(p876 * 83, p876 * 80, p876 * 83, p876 * 80, p876 * 83, p876 * 115);
      v1239.bezierCurveTo(p876 * 83, p876 * 120, p876 * 80, p876 * 122, p876 * 73, p876 * 120);
      v1239.bezierCurveTo(p876 * 42, p876 * 111, p876 * 43, p876 * 109, p876 * 41, p876 * 102);
      v1239.bezierCurveTo(p876 * 41, p876 * 71, p876 * 41, p876 * 71, p876 * 41, p876 * 40);
      v1239.closePath();
      f86(v1239, p878[5], p878[5], p876 * 4);
      v1239.translate(p876 * -40, p876 * -50);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 70, p876 * 70);
      v1239.bezierCurveTo(p876 * 113, p876 * 120.5, p876 * 113, p876 * 120.5, p876 * 156, p876 * 171);
      v1239.closePath();
      f86(v1239, vVVUndefined272, p878[4], p876 * 13);
    } else if (p879 == 4) {
      v1239.scale(1, 1);
      v1239.translate(p876 * 70, p876 * 50);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 23, p876 * 6);
      v1239.bezierCurveTo(p876 * 25.5, p876 * 56, p876 * 25.5, p876 * 56, p876 * 28, p876 * 106);
      f86(v1239, vVVVUndefined273, p878[5], p876 * 14);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 59, p876 * 10);
      v1239.bezierCurveTo(p876 * 61, p876 * 51.5, p876 * 61, p876 * 51.5, p876 * 63, p876 * 93);
      f86(v1239, vVVVVUndefined197, p878[5], p876 * 14);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 7, p876 * 55);
      v1239.bezierCurveTo(p876 * 33.5, p876 * 55, p876 * 33.5, p876 * 55, p876 * 60, p876 * 55);
      f86(v1239, vVVVUndefined27, p878[5], p876 * 14);
      v1239.translate(p876 * 10, p876 * 0);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 123, p876 * 16);
      v1239.bezierCurveTo(p876 * 103, p876 * 16.5, p876 * 103, p876 * 16.5, p876 * 83, p876 * 17);
      v1239.bezierCurveTo(p876 * 83.5, p876 * 61, p876 * 83.5, p876 * 61, p876 * 84, p876 * 105);
      v1239.bezierCurveTo(p876 * 106, p876 * 105, p876 * 106, p876 * 105, p876 * 128, p876 * 105);
      f86(v1239, vVUndefined27, p878[5], p876 * 14);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 72, p876 * 63);
      v1239.bezierCurveTo(p876 * 88.5, p876 * 62.5, p876 * 88.5, p876 * 62.5, p876 * 105, p876 * 62);
      f86(v1239, undefined, p878[5], p876 * 14);
      v1239.translate(p876 * 10, p876 * 10);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 141, p876 * 8);
      v1239.bezierCurveTo(p876 * 143, p876 * 50, p876 * 143, p876 * 50, p876 * 145, p876 * 92);
      v1239.bezierCurveTo(p876 * 169, p876 * 88.5, p876 * 169, p876 * 88.5, p876 * 193, p876 * 85);
      f86(v1239, vUndefined, p878[5], p876 * 14);
      v1239.translate(p876 * 10, p876 * -10);
      v1239.beginPath();
      v1239.lineCap = "round";
      v1239.lineJoin = "round";
      v1239.moveTo(p876 * 205, p876 * 124);
      v1239.bezierCurveTo(p876 * 205, p876 * 69, p876 * 205, p876 * 69, p876 * 205, p876 * 14);
      v1239.bezierCurveTo(p876 * 239, p876 * 15, p876 * 250, p876 * 37, p876 * 249, p876 * 49);
      v1239.bezierCurveTo(p876 * 251, p876 * 65, p876 * 242, p876 * 76, p876 * 206, p876 * 75);
      f86(v1239, undefined, p878[5], p876 * 14);
    }
    return v1238;
  }
  function f217(p880, p881) {
    var v1240 = document.createElement("canvas");
    var v1241 = v1240.getContext("2d");
    v1240.width = p880 * 120;
    v1240.height = p880 * 280;
    v1241.translate(p880 * -100, p880 * -20);
    v1241.beginPath();
    v1241.lineCap = "round";
    v1241.lineJoin = "round";
    v1241.moveTo(p880 * 228.5, p880 * 331.953125);
    v1241.bezierCurveTo(p880 * 228.5, p880 * 12.953125, p880 * 228.5, p880 * 171.453125, p880 * 228.5, p880 * 10.953125);
    v1241.bezierCurveTo(p880 * 196.5, p880 * 76.953125, p880 * 206.5, p880 * 78.953125, p880 * 191.5, p880 * 114.953125);
    v1241.bezierCurveTo(p880 * 162.5, p880 * 170.953125, p880 * 206.5, p880 * 220.953125, p880 * 210.5, p880 * 251.953125);
    v1241.bezierCurveTo(p880 * 218.5, p880 * 287.953125, p880 * 220.5, p880 * 291.953125, p880 * 228.5, p880 * 331.953125);
    v1241.closePath();
    f86(v1241, p881[0]);
    return v1240;
  }
  function f218(p882, p883, p884, p885) {
    var v1242 = document.createElement("canvas");
    var v1243 = v1242.getContext("2d");
    v1242.width = p882 * 501;
    v1242.height = p882 * 564;
    v1243.scale(0.5, 0.5);
    v1243.translate(p882 * 240, p882 * 255);
    v1243.rotate(p885);
    v1243.globalAlpha = p883 ? 0.5 : 0.2;
    f87(v1243, p882 * 174, p882 * 87.984375, p882 * 20.8806130178211);
    f86(v1243, p884[0], p884[0], p882 * 8);
    f87(v1243, p882 * 174, p882 * 87.984375, p882 * 12.165525060596439);
    f86(v1243, p884[0], p884[0], p882 * 8);
    f87(v1243, p882 * 174, p882 * 87.484375, p882 * 6);
    f86(v1243, p884[0]);
    f87(v1243, p882 * 30, p882 * 87.984375, p882 * 20.8806130178211);
    f86(v1243, p884[0], p884[0], p882 * 4);
    f87(v1243, p882 * 30, p882 * 87.984375, p882 * 12.165525060596439);
    f86(v1243, p884[0], p884[0], p882 * 4);
    f87(v1243, p882 * 30, p882 * 87.484375, p882 * 6);
    f86(v1243, p884[0]);
    f87(v1243, p882 * 100, p882 * 30, p882 * 20.8806130178211);
    f86(v1243, p884[0], p884[0], p882 * 4);
    f87(v1243, p882 * 100, p882 * 30, p882 * 12.165525060596439);
    f86(v1243, p884[0], p884[0], p882 * 4);
    f87(v1243, p882 * 100, p882 * 30, p882 * 6);
    f86(v1243, p884[0]);
    f87(v1243, p882 * 100, p882 * 130, p882 * 20.8806130178211);
    f86(v1243, p884[0], p884[0], p882 * 4);
    f87(v1243, p882 * 100, p882 * 130, p882 * 12.165525060596439);
    f86(v1243, p884[0], p884[0], p882 * 4);
    f87(v1243, p882 * 100, p882 * 130, p882 * 6);
    f86(v1243, p884[0]);
    v1243.save();
    v1243.translate(p882 * 102, p882 * 81.984375);
    v1243.rotate(0);
    f89(v1243, p882 * -74, p882 * -57, p882 * 148, p882 * 114, p882 * 23);
    v1243.restore();
    f86(v1243, p884[0], p884[0], p882 * 4);
    v1243.save();
    v1243.translate(p882 * 101, p882 * 64.984375);
    v1243.rotate(0);
    f89(v1243, p882 * -33, p882 * -10, p882 * 66, p882 * 20, p882 * 15);
    v1243.restore();
    f86(v1243, p884[0], p884[0], p882 * 4);
    v1243.save();
    v1243.translate(p882 * 102, p882 * 63.484375);
    v1243.rotate(0);
    f89(v1243, p882 * -9, p882 * -27.5, p882 * 18, p882 * 55, p882 * 15);
    v1243.restore();
    v1243.translate(5, -5);
    v1243.globalAlpha = 1;
    f87(v1243, p882 * 174, p882 * 87.984375, p882 * 20.8806130178211);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 174, p882 * 87.984375, p882 * 12.165525060596439);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 174, p882 * 87.484375, p882 * 6);
    f86(v1243, p884[2]);
    f87(v1243, p882 * 30, p882 * 87.984375, p882 * 20.8806130178211);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 30, p882 * 87.984375, p882 * 12.165525060596439);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 30, p882 * 87.484375, p882 * 6);
    f86(v1243, p884[2]);
    f87(v1243, p882 * 102, p882 * 30, p882 * 20.8806130178211);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 102, p882 * 30, p882 * 12.165525060596439);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 102, p882 * 30, p882 * 6);
    f86(v1243, p884[1]);
    f87(v1243, p882 * 102, p882 * 130, p882 * 20.8806130178211);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 102, p882 * 130, p882 * 12.165525060596439);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 102, p882 * 130, p882 * 6);
    f86(v1243, p884[1]);
    v1243.save();
    v1243.translate(p882 * 102, p882 * 81.984375);
    f89(v1243, p882 * -74, p882 * -57, p882 * 148, p882 * 114, p882 * 23);
    v1243.restore();
    f86(v1243, p884[1], p884[3], p882 * 8);
    v1243.save();
    v1243.translate(p882 * 101, p882 * 64.984375);
    f89(v1243, p882 * -33, p882 * -10, p882 * 66, p882 * 20, p882 * 15);
    v1243.restore();
    f86(v1243, p884[2], p884[1], p882 * 8);
    v1243.save();
    v1243.translate(p882 * 102, p882 * 63.484375);
    f89(v1243, p882 * -9, p882 * -27.5, p882 * 18, p882 * 55, p882 * 15);
    v1243.restore();
    f86(v1243, p884[2], p884[1], p882 * 8);
    f87(v1243, p882 * 135, p882 * 107.36605834960938, p882 * 21.095023109728988);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 135, p882 * 107.36605834960938, p882 * 13);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 135, p882 * 107.36605834960938, p882 * 6.082762530298219);
    f86(v1243, p884[2]);
    f87(v1243, p882 * 70, p882 * 107.36605834960938, p882 * 21.095023109728988);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 70, p882 * 107.36605834960938, p882 * 13);
    f86(v1243, p884[1], p884[3], p882 * 8);
    f87(v1243, p882 * 70, p882 * 107.36605834960938, p882 * 6.082762530298219);
    f86(v1243, p884[2]);
    return v1242;
  }
  function f219(p886, p887, p888) {
    var v1244 = document.createElement("canvas");
    var v1245 = v1244.getContext("2d");
    v1244.width = p886 * 170;
    v1244.height = p886 * 170;
    v1245.globalAlpha = p887 ? 0.5 : 1;
    v1245.translate(p886 * -10, p886 * 10);
    v1245.beginPath();
    v1245.lineCap = "round";
    v1245.lineJoin = "round";
    v1245.moveTo(p886 * 72.5, p886 * 4.109375);
    v1245.bezierCurveTo(p886 * 117, p886 * 9.609375, p886 * 117, p886 * 9.609375, p886 * 161.5, p886 * 15.109375);
    v1245.bezierCurveTo(p886 * 134.5, p886 * 106.109375, p886 * 110.5, p886 * 130.109375, p886 * 63.5, p886 * 145.109375);
    v1245.bezierCurveTo(p886 * 33.5, p886 * 120.609375, p886 * 33.5, p886 * 120.609375, p886 * 3.5, p886 * 96.109375);
    v1245.bezierCurveTo(p886 * 82.5, p886 * 75.109375, p886 * 69.5, p886 * 29.109375, p886 * 71.5, p886 * 6.109375);
    v1245.closePath();
    f86(v1245, p888[0]);
    v1245.globalAlpha = 1;
    v1245.translate(p886 * 10, p886 * -10);
    v1245.beginPath();
    v1245.lineCap = "round";
    v1245.lineJoin = "round";
    v1245.moveTo(p886 * 72.5, p886 * 4.109375);
    v1245.bezierCurveTo(p886 * 117, p886 * 9.609375, p886 * 117, p886 * 9.609375, p886 * 161.5, p886 * 15.109375);
    v1245.bezierCurveTo(p886 * 134.5, p886 * 106.109375, p886 * 110.5, p886 * 130.109375, p886 * 63.5, p886 * 145.109375);
    v1245.bezierCurveTo(p886 * 33.5, p886 * 120.609375, p886 * 33.5, p886 * 120.609375, p886 * 3.5, p886 * 96.109375);
    v1245.bezierCurveTo(p886 * 82.5, p886 * 75.109375, p886 * 69.5, p886 * 29.109375, p886 * 71.5, p886 * 6.109375);
    v1245.closePath();
    f86(v1245, p888[1], p888[2], p886 * 10);
    return v1244;
  }
  function f220(p889, p890) {
    var v1246 = document.createElement("canvas");
    var v1247 = v1246.getContext("2d");
    v1246.width = p889 * 48;
    v1246.height = p889 * 47;
    v1247.beginPath();
    v1247.lineCap = "round";
    v1247.lineJoin = "round";
    v1247.moveTo(p889 * 7.1875, p889 * 25.434661865234375);
    v1247.bezierCurveTo(p889 * 11.1875, p889 * 13.434661865234375, p889 * 18.1875, p889 * 8.434661865234375, p889 * 32.1875, p889 * 10.434661865234375);
    v1247.bezierCurveTo(p889 * 45.1875, p889 * 14.434661865234375, p889 * 41.1875, p889 * 24.434661865234375, p889 * 36.1875, p889 * 30.434661865234375);
    v1247.bezierCurveTo(p889 * 22.1875, p889 * 42.434661865234375, p889 * 2.1875, p889 * 41.434661865234375, p889 * 7.1875, p889 * 25.434661865234375);
    v1247.closePath();
    f86(v1247, p890[0]);
    return v1246;
  }
  function f221(p891, p892) {
    var v1248 = document.createElement("canvas");
    var v1249 = v1248.getContext("2d");
    v1248.width = p891 * 173;
    v1248.height = p891 * 178;
    v1249.globalAlpha = 0.5;
    f87(v1249, p891 * 86.5, p891 * 98, p891 * 80);
    f86(v1249, p892[0]);
    v1249.globalAlpha = 1;
    f87(v1249, p891 * 86.5, p891 * 89, p891 * 81);
    f86(v1249, p892[1], p892[2], p891 * 4);
    f87(v1249, p891 * 86.5, p891 * 86, p891 * 59);
    f86(v1249, p892[3], p892[4], p891 * 4);
    v1249.globalAlpha = 0.5;
    f87(v1249, p891 * 86.5, p891 * 95, p891 * 34);
    f86(v1249, p892[0]);
    v1249.globalAlpha = 1;
    f87(v1249, p891 * 86.5, p891 * 89, p891 * 34);
    f86(v1249, p892[5]);
    return v1248;
  }
  function f222(p893, p894, p895) {
    var v1250 = document.createElement("canvas");
    var v1251 = v1250.getContext("2d");
    v1250.width = p893 * 400;
    v1250.height = p893 * 400;
    v1251.save();
    v1251.translate(p893 * 204, p893 * 195.0833282470703);
    v1251.rotate(10.16);
    f89(v1251, p893 * -97.5, p893 * -134.5, p893 * 195, p893 * 269, p893 * 10);
    v1251.restore();
    f86(v1251, p895[0], p895[1], p893 * 8);
    v1251.beginPath();
    v1251.lineCap = "round";
    v1251.lineJoin = "round";
    v1251.moveTo(p893 * 58.5, p893 * 226.5833282470703);
    v1251.bezierCurveTo(p893 * 120.5, p893 * 281.5833282470703, p893 * 120.5, p893 * 281.5833282470703, p893 * 182.5, p893 * 336.5833282470703);
    v1251.bezierCurveTo(p893 * 263, p893 * 248.5833282470703, p893 * 263, p893 * 248.5833282470703, p893 * 343.5, p893 * 160.5833282470703);
    v1251.bezierCurveTo(p893 * 280.5, p893 * 104.58332824707031, p893 * 280.5, p893 * 104.58332824707031, p893 * 217.5, p893 * 48.58332824707031);
    v1251.closePath();
    f86(v1251, p895[2], p895[3], p893 * 4);
    v1251.save();
    v1251.translate(p893 * 197, p893 * 169.0833282470703);
    v1251.rotate(10.16);
    f89(v1251, p893 * -93.5, p893 * -126.5, p893 * 187, p893 * 253, p893 * 10);
    v1251.restore();
    f86(v1251, p895[4], p895[1], p893 * 8);
    v1251.beginPath();
    v1251.lineCap = "round";
    v1251.lineJoin = "round";
    v1251.moveTo(p893 * 226.5, p893 * 24.583328247070312);
    v1251.bezierCurveTo(p893 * 58.5, p893 * 207.5833282470703, p893 * 143, p893 * 116.58332824707031, p893 * 59.5, p893 * 208.5833282470703);
    v1251.closePath();
    f86(v1251, vVVVUndefined1975, p895[1], p893 * 8);
    v1251.beginPath();
    v1251.lineCap = "round";
    v1251.lineJoin = "round";
    v1251.moveTo(p893 * 46.133331298828125, p893 * 202.64999389648438);
    v1251.bezierCurveTo(p893 * 46.133331298828125, p893 * 215.64999389648438, p893 * 46.133331298828125, p893 * 215.64999389648438, p893 * 46.133331298828125, p893 * 228.64999389648438);
    v1251.closePath();
    f86(v1251, p895[4], p895[1], p893 * 8);
    v1251.beginPath();
    v1251.lineCap = "round";
    v1251.lineJoin = "round";
    v1251.moveTo(p893 * 55.133331298828125, p893 * 211.64999389648438);
    v1251.bezierCurveTo(p893 * 55.133331298828125, p893 * 225.14999389648438, p893 * 55.133331298828125, p893 * 225.14999389648438, p893 * 55.133331298828125, p893 * 238.64999389648438);
    v1251.bezierCurveTo(p893 * 50.133331298828125, p893 * 235.64999389648438, p893 * 50.133331298828125, p893 * 235.64999389648438, p893 * 45.133331298828125, p893 * 232.64999389648438);
    v1251.bezierCurveTo(p893 * 45.133331298828125, p893 * 216.64999389648438, p893 * 45.133331298828125, p893 * 216.64999389648438, p893 * 45.133331298828125, p893 * 200.64999389648438);
    v1251.closePath();
    f86(v1251, p895[4], p895[1], p893 * 8);
    v1251.beginPath();
    v1251.lineCap = "round";
    v1251.lineJoin = "round";
    v1251.moveTo(p893 * 46.133331298828125, p893 * 198.39999389648438);
    v1251.bezierCurveTo(p893 * 46.133331298828125, p893 * 199.89999389648438, p893 * 46.133331298828125, p893 * 199.89999389648438, p893 * 46.133331298828125, p893 * 201.39999389648438);
    v1251.closePath();
    f86(v1251, p895[4], p895[1], p893 * 8);
    v1251.save();
    v1251.translate(p893 * 249.63333129882812, p893 * 120.89999389648438);
    v1251.rotate(7.04);
    f89(v1251, p893 * -58.5, p893 * -32, p893 * 117, p893 * 64, p893 * 10);
    v1251.restore();
    f86(v1251, p895[5]);
    return v1250;
  }
  function f223(p896, p897, p898) {
    var v1252 = document.createElement("canvas");
    var v1253 = v1252.getContext("2d");
    v1252.width = p896 * 69;
    v1252.height = p896 * 120;
    v1253.globalAlpha = p897 ? 0.5 : 1;
    v1253.save();
    v1253.translate(p896 * 30, p896 * 84);
    f89(v1253, p896 * -6, p896 * -66.5, p896 * 8, p896 * 100, p896 * 10);
    v1253.restore();
    f86(v1253, p898[0]);
    v1253.save();
    v1253.translate(p896 * 30, p896 * 45);
    f89(v1253, p896 * -9.5, p896 * -6.5, p896 * 16, p896 * 13, p896 * 10);
    v1253.restore();
    f86(v1253, p898[0]);
    v1253.save();
    v1253.translate(p896 * 30, p896 * 17);
    f89(v1253, p896 * -7.5, p896 * -5.5, p896 * 12, p896 * 11, p896 * 10);
    v1253.restore();
    f86(v1253, p898[0]);
    v1253.save();
    v1253.translate(p896 * 30, p896 * 31);
    f89(v1253, p896 * -26, p896 * -14.5, p896 * 52, p896 * 29, p896 * 5);
    v1253.restore();
    f86(v1253, p898[0]);
    v1253.globalAlpha = 1;
    v1253.save();
    v1253.translate(p896 * 36, p896 * 79.140625);
    f89(v1253, p896 * -6, p896 * -66.5, p896 * 8, p896 * 100, p896 * 10);
    v1253.restore();
    f86(v1253, p898[1], p898[2], p896 * 3);
    v1253.save();
    v1253.translate(p896 * 35, p896 * 40.140625);
    f89(v1253, p896 * -9.5, p896 * -6.5, p896 * 16, p896 * 13, p896 * 10);
    v1253.restore();
    f86(v1253, p898[3], p898[4], p896 * 3);
    v1253.save();
    v1253.translate(p896 * 35, p896 * 12.140625);
    f89(v1253, p896 * -7.5, p896 * -5.5, p896 * 12, p896 * 11, p896 * 10);
    v1253.restore();
    f86(v1253, p898[3], p898[4], p896 * 3);
    v1253.save();
    v1253.translate(p896 * 34.5, p896 * 26.140625);
    f89(v1253, p896 * -26, p896 * -14.5, p896 * 52, p896 * 29, p896 * 5);
    v1253.restore();
    f86(v1253, p898[3], p898[4], p896 * 3);
    return v1252;
  }
  function f224(p899, p900, p901) {
    var v1254 = document.createElement("canvas");
    var v1255 = v1254.getContext("2d");
    var v1256 = p899 * 170;
    var v1257 = p899 * 172;
    var v1258 = v1256 / 2;
    var v1259 = v1257 / 2;
    v1254.width = v1256;
    v1254.height = v1257;
    v1255.translate(v1258, v1259 + p899 * 7);
    v1255.globalAlpha = p900 ? 0.5 : 0;
    f87(v1255, 0, 0, p899 * 60);
    f86(v1255, p901[0]);
    v1255.globalAlpha = 1;
    v1255.translate(0, p899 * -7);
    v1255.save();
    for (var v1260 = 0; v1260 < 10; v1260++) {
      v1255.rotate(Math.PI / 5);
      v1255.save();
      v1255.translate(p899 * 65, 0);
      f92(v1255, 3, p899 * 20, p899 * 4);
      f86(v1255, p901[1], p901[2], p899 * 4);
      v1255.restore();
    }
    v1255.restore();
    f87(v1255, 0, 0, p899 * 60);
    f86(v1255, p901[3], p901[4], p899 * 4);
    f87(v1255, 0, 0, p899 * 40);
    f86(v1255, p901[5]);
    f87(v1255, 0, 0, p899 * 25);
    f86(v1255, p901[6], p901[7], p899 * 8);
    return v1254;
  }
  function f225(p902, p903) {
    var v1261 = document.createElement("canvas");
    var v1262 = v1261.getContext("2d");
    v1261.width = p902 * 85;
    v1261.height = p902 * 145;
    v1262.translate(p902 * -165, p902 * -95);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p902 * 217, p902 * 103);
    v1262.bezierCurveTo(p902 * 209, p902 * 129, p902 * 203, p902 * 137, p902 * 195, p902 * 146);
    v1262.bezierCurveTo(p902 * 195, p902 * 159, p902 * 194, p902 * 167, p902 * 189, p902 * 178);
    v1262.bezierCurveTo(p902 * 193, p902 * 186, p902 * 196, p902 * 195, p902 * 198, p902 * 216);
    v1262.bezierCurveTo(p902 * 217.5, p902 * 189.5, p902 * 217.5, p902 * 189.5, p902 * 237, p902 * 163);
    v1262.closePath();
    f86(v1262, p903[1]);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p902 * 231, p902 * 163);
    v1262.bezierCurveTo(p902 * 221, p902 * 139, p902 * 218, p902 * 128, p902 * 215, p902 * 114);
    v1262.bezierCurveTo(p902 * 213, p902 * 102, p902 * 220, p902 * 92, p902 * 222, p902 * 107);
    v1262.bezierCurveTo(p902 * 224, p902 * 118, p902 * 233, p902 * 138, p902 * 244, p902 * 161);
    v1262.bezierCurveTo(p902 * 235, p902 * 188, p902 * 224, p902 * 198, p902 * 204, p902 * 221);
    v1262.bezierCurveTo(p902 * 190, p902 * 233, p902 * 190, p902 * 235, p902 * 180, p902 * 235);
    v1262.bezierCurveTo(p902 * 167, p902 * 235, p902 * 164, p902 * 216, p902 * 175, p902 * 211);
    v1262.bezierCurveTo(p902 * 176, p902 * 208, p902 * 181, p902 * 207, p902 * 191, p902 * 205);
    v1262.bezierCurveTo(p902 * 213, p902 * 186, p902 * 218, p902 * 180, p902 * 230, p902 * 163);
    v1262.closePath();
    f86(v1262, p903[2], p903[3], p902 * 4);
    v1262.beginPath();
    v1262.lineCap = "round";
    v1262.lineJoin = "round";
    v1262.moveTo(p902 * 234, p902 * 154);
    v1262.bezierCurveTo(p902 * 227, p902 * 156, p902 * 222, p902 * 156, p902 * 199, p902 * 148);
    v1262.bezierCurveTo(p902 * 201, p902 * 151, p902 * 216, p902 * 159, p902 * 224, p902 * 162);
    v1262.bezierCurveTo(p902 * 209, p902 * 169.5, p902 * 209, p902 * 169.5, p902 * 194, p902 * 177);
    v1262.bezierCurveTo(p902 * 213.5, p902 * 175, p902 * 213.5, p902 * 175, p902 * 233, p902 * 173);
    v1262.closePath();
    f86(v1262, p903[2]);
    return v1261;
  }
  function f226(p904, p905, p906) {
    var v1263 = document.createElement("canvas");
    var v1264 = v1263.getContext("2d");
    v1263.width = p904 * 151;
    v1263.height = p904 * 80;
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p904 * 133, p904 * 54);
    v1264.bezierCurveTo(p904 * 136, p904 * 18, p904 * 129, p904 * 18, p904 * 114, p904 * 13);
    v1264.bezierCurveTo(p904 * 51, p904 * 0, p904 * 36, p904 * 16, p904 * 34, p904 * 16);
    v1264.bezierCurveTo(p904 * 8, p904 * 28, p904 * 22, p904 * 56, p904 * 21, p904 * 57);
    v1264.closePath();
    f86(v1264, p906[2], p906[3], 4);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p904 * 130, p904 * 40);
    v1264.bezierCurveTo(p904 * 132, p904 * 35, p904 * 132, p904 * 30, p904 * 132, p904 * 29);
    v1264.bezierCurveTo(p904 * 145, p904 * 38, p904 * 144, p904 * 43, p904 * 137, p904 * 54);
    v1264.closePath();
    f86(v1264, p906[0], p906[1], 4);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p904 * 20, p904 * 33);
    v1264.bezierCurveTo(p904 * 24, p904 * 44, p904 * 215, p904 * 39, p904 * 23, p904 * 44);
    v1264.bezierCurveTo(p904 * 19, p904 * 49, p904 * 19, p904 * 49, p904 * 15, p904 * 54);
    v1264.bezierCurveTo(p904 * 4, p904 * 43, p904 * 10, p904 * 35, p904 * 20, p904 * 32);
    v1264.closePath();
    f86(v1264, p906[0], p906[1], 4);
    v1264.beginPath();
    v1264.lineCap = "round";
    v1264.lineJoin = "round";
    v1264.moveTo(p904 * 18, p904 * 52);
    v1264.bezierCurveTo(p904 * 24, p904 * 31, p904 * 34, p904 * 25, p904 * 75, p904 * 23);
    v1264.bezierCurveTo(p904 * 130, p904 * 24, p904 * 129, p904 * 32, p904 * 134, p904 * 51);
    v1264.bezierCurveTo(p904 * 138, p904 * 70, p904 * 126, p904 * 72, p904 * 90, p904 * 73);
    v1264.bezierCurveTo(p904 * 18, p904 * 72, p904 * 15, p904 * 68, p904 * 18, p904 * 54);
    v1264.closePath();
    f86(v1264, p906[0], p906[1], 4);
    return v1263;
  }
  function f227(p907, p908, p909) {
    var v1265 = document.createElement("canvas");
    var v1266 = v1265.getContext("2d");
    v1265.width = p907 * 185;
    v1265.height = p907 * 164;
    v1266.translate(0, 0);
    var vF43 = function (p910, p911, p912) {
      var v1267 = document.createElement("canvas");
      var v1268 = v1267.getContext("2d");
      v1267.width = p910 * 201;
      v1267.height = p910 * 164;
      v1268.translate(0, p910 * 5);
      v1268.globalAlpha = p911 ? 0.5 : 1;
      f87(v1268, p910 * 100.5, p910 * 82, p910 * 74.92746655359852);
      f86(v1268, p912[0], p912[0], p910 * 4);
      f87(v1268, p910 * 100.5, p910 * 82, p910 * 65.9417374971317);
      f86(v1268, p912[0], p912[0], p910 * 4);
      v1268.translate(0, -5);
      v1268.globalAlpha = 1;
      f87(v1268, p910 * 100.5, p910 * 82, p910 * 74.92746655359852);
      f86(v1268, p912[1], p912[3], p910 * 4);
      f87(v1268, p910 * 100.5, p910 * 82, p910 * 65.9417374971317);
      f86(v1268, p912[1], p912[2], p910 * 4);
      f87(v1268, p910 * 100.5, p910 * 82, p910 * 35.9417374971317);
      f86(v1268, p912[1], p912[2], p910 * 20);
      f87(v1268, p910 * 100.5, p910 * 82, p910 * 15.9417374971317);
      f86(v1268, p912[1], p912[2], p910 * 6);
      return v1267;
    }(p907, p908, p909);
    v1266.drawImage(vF43, p907 * -10, p907 * 0);
    vF43 = f218(p907, p908, p909, 0);
    v1266.drawImage(vF43, p907 * -83, p907 * -40);
    vF43 = f218(p907, p908, p909, Math.PI / 1.4);
    v1266.drawImage(vF43, p907 * -15, p907 * -88);
    vF43 = f218(p907, p908, p909, Math.PI / -1.4);
    v1266.drawImage(vF43, p907 * 15, p907 * -8);
    return v1265;
  }
  function f228(p913, p914) {
    var v1269 = document.createElement("canvas");
    var v1270 = v1269.getContext("2d");
    v1269.width = p913 * 271;
    v1269.height = p913 * 366;
    v1270.globalAlpha = 0.5;
    v1270.translate(0, p913 * 10);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 99);
    v1270.bezierCurveTo(p913 * 186, p913 * 123, p913 * 199, p913 * 152, p913 * 209, p913 * 169);
    v1270.bezierCurveTo(p913 * 228, p913 * 205, p913 * 224, p913 * 245, p913 * 190, p913 * 276);
    v1270.bezierCurveTo(p913 * 161, p913 * 296, p913 * 99, p913 * 292, p913 * 79, p913 * 274);
    v1270.bezierCurveTo(p913 * 49, p913 * 253, p913 * 47, p913 * 214, p913 * 50, p913 * 197);
    v1270.bezierCurveTo(p913 * 61, p913 * 143, p913 * 102, p913 * 113, p913 * 131, p913 * 99);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 73, p913 * 270);
    v1270.bezierCurveTo(p913 * 79, p913 * 280, p913 * 77, p913 * 280, p913 * 78, p913 * 287);
    v1270.bezierCurveTo(p913 * 78, p913 * 290, p913 * 83, p913 * 291, p913 * 82, p913 * 299);
    v1270.bezierCurveTo(p913 * 81, p913 * 301, p913 * 87, p913 * 301, p913 * 92, p913 * 314);
    v1270.bezierCurveTo(p913 * 94, p913 * 319, p913 * 100, p913 * 321, p913 * 107, p913 * 320);
    v1270.bezierCurveTo(p913 * 111, p913 * 323, p913 * 114, p913 * 324, p913 * 119, p913 * 320);
    v1270.bezierCurveTo(p913 * 137, p913 * 321, p913 * 146, p913 * 323, p913 * 139, p913 * 320);
    v1270.bezierCurveTo(p913 * 141, p913 * 324, p913 * 150, p913 * 324, p913 * 153, p913 * 320);
    v1270.bezierCurveTo(p913 * 168, p913 * 319, p913 * 171, p913 * 316, p913 * 173, p913 * 307);
    v1270.bezierCurveTo(p913 * 180, p913 * 305, p913 * 180, p913 * 301, p913 * 178, p913 * 296);
    v1270.bezierCurveTo(p913 * 183, p913 * 296, p913 * 185, p913 * 289, p913 * 188, p913 * 279);
    v1270.bezierCurveTo(p913 * 171, p913 * 286, p913 * 149, p913 * 290, p913 * 132, p913 * 289);
    v1270.bezierCurveTo(p913 * 101, p913 * 290, p913 * 86, p913 * 280, p913 * 74, p913 * 271);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 76, p913 * 252);
    v1270.bezierCurveTo(p913 * 85, p913 * 294, p913 * 96, p913 * 314, p913 * 103, p913 * 314);
    v1270.bezierCurveTo(p913 * 106, p913 * 316, p913 * 151, p913 * 314, p913 * 156, p913 * 314);
    v1270.bezierCurveTo(p913 * 169, p913 * 317, p913 * 182, p913 * 285, p913 * 191, p913 * 256);
    v1270.bezierCurveTo(p913 * 134.5, p913 * 254, p913 * 134.5, p913 * 254, p913 * 78, p913 * 252);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 84, p913 * 257);
    v1270.bezierCurveTo(p913 * 122, p913 * 273, p913 * 146, p913 * 268, p913 * 179, p913 * 261);
    v1270.bezierCurveTo(p913 * 190, p913 * 258, p913 * 187, p913 * 266, p913 * 178, p913 * 272);
    v1270.bezierCurveTo(p913 * 160, p913 * 284, p913 * 123, p913 * 282, p913 * 100, p913 * 277);
    v1270.bezierCurveTo(p913 * 73, p913 * 260, p913 * 79, p913 * 257, p913 * 84, p913 * 257);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 125, p913 * 65);
    v1270.bezierCurveTo(p913 * 133, p913 * 45, p913 * 136, p913 * 42, p913 * 141, p913 * 55);
    v1270.bezierCurveTo(p913 * 151, p913 * 96, p913 * 164, p913 * 117, p913 * 175, p913 * 134);
    v1270.bezierCurveTo(p913 * 203, p913 * 181, p913 * 207, p913 * 182, p913 * 208, p913 * 215);
    v1270.bezierCurveTo(p913 * 206, p913 * 240, p913 * 205, p913 * 246, p913 * 184, p913 * 258);
    v1270.bezierCurveTo(p913 * 161, p913 * 267, p913 * 131, p913 * 272, p913 * 86, p913 * 258);
    v1270.bezierCurveTo(p913 * 67, p913 * 252, p913 * 68, p913 * 239, p913 * 64, p913 * 216);
    v1270.bezierCurveTo(p913 * 62, p913 * 194, p913 * 72, p913 * 169, p913 * 92, p913 * 142);
    v1270.bezierCurveTo(p913 * 106, p913 * 121, p913 * 114, p913 * 101, p913 * 125, p913 * 65);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 115, p913 * 37);
    v1270.bezierCurveTo(p913 * 116, p913 * 28, p913 * 119, p913 * 27, p913 * 126, p913 * 37);
    v1270.bezierCurveTo(p913 * 134, p913 * 48, p913 * 134, p913 * 49, p913 * 132, p913 * 59);
    v1270.bezierCurveTo(p913 * 131, p913 * 67, p913 * 127, p913 * 65, p913 * 120, p913 * 56);
    v1270.bezierCurveTo(p913 * 114, p913 * 49, p913 * 113, p913 * 43, p913 * 115, p913 * 38);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 146, p913 * 34);
    v1270.bezierCurveTo(p913 * 152, p913 * 28, p913 * 155, p913 * 27, p913 * 157, p913 * 39);
    v1270.bezierCurveTo(p913 * 157, p913 * 45, p913 * 157, p913 * 49, p913 * 150, p913 * 56);
    v1270.bezierCurveTo(p913 * 141, p913 * 66, p913 * 138, p913 * 66, p913 * 138, p913 * 57);
    v1270.bezierCurveTo(p913 * 137, p913 * 50, p913 * 137, p913 * 47, p913 * 141, p913 * 42);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 143, p913 * 69);
    v1270.bezierCurveTo(p913 * 148, p913 * 56, p913 * 156, p913 * 50, p913 * 158, p913 * 58);
    v1270.bezierCurveTo(p913 * 159, p913 * 64, p913 * 160, p913 * 67, p913 * 153, p913 * 77);
    v1270.bezierCurveTo(p913 * 148, p913 * 83, p913 * 145, p913 * 84, p913 * 143, p913 * 77);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 149, p913 * 92);
    v1270.bezierCurveTo(p913 * 149, p913 * 89, p913 * 151, p913 * 84, p913 * 156, p913 * 79);
    v1270.bezierCurveTo(p913 * 161, p913 * 73, p913 * 163, p913 * 78, p913 * 162, p913 * 86);
    v1270.bezierCurveTo(p913 * 161, p913 * 91, p913 * 155, p913 * 99, p913 * 152, p913 * 98);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 111, p913 * 61);
    v1270.bezierCurveTo(p913 * 114, p913 * 51, p913 * 117, p913 * 51, p913 * 124, p913 * 64);
    v1270.bezierCurveTo(p913 * 128, p913 * 68, p913 * 128, p913 * 76, p913 * 126, p913 * 79);
    v1270.bezierCurveTo(p913 * 123, p913 * 84, p913 * 122, p913 * 82, p913 * 115, p913 * 74);
    v1270.bezierCurveTo(p913 * 112, p913 * 67, p913 * 115, p913 * 74, p913 * 115, p913 * 74);
    v1270.bezierCurveTo(p913 * 111, p913 * 68, p913 * 111, p913 * 66, p913 * 111, p913 * 62);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 107, p913 * 81);
    v1270.bezierCurveTo(p913 * 108, p913 * 74, p913 * 112, p913 * 73, p913 * 118, p913 * 84);
    v1270.bezierCurveTo(p913 * 122, p913 * 88, p913 * 122, p913 * 93, p913 * 121, p913 * 98);
    v1270.bezierCurveTo(p913 * 114, p913 * 98, p913 * 113, p913 * 98, p913 * 109, p913 * 90);
    v1270.bezierCurveTo(p913 * 107, p913 * 87, p913 * 106, p913 * 85, p913 * 107, p913 * 82);
    v1270.closePath();
    f86(v1270, p914[0]);
    v1270.globalAlpha = 1;
    v1270.translate(0, p913 * -10);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 99);
    v1270.bezierCurveTo(p913 * 186, p913 * 123, p913 * 199, p913 * 152, p913 * 209, p913 * 169);
    v1270.bezierCurveTo(p913 * 228, p913 * 205, p913 * 224, p913 * 245, p913 * 190, p913 * 276);
    v1270.bezierCurveTo(p913 * 161, p913 * 296, p913 * 99, p913 * 292, p913 * 79, p913 * 274);
    v1270.bezierCurveTo(p913 * 49, p913 * 253, p913 * 47, p913 * 214, p913 * 50, p913 * 197);
    v1270.bezierCurveTo(p913 * 61, p913 * 143, p913 * 102, p913 * 113, p913 * 131, p913 * 99);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 73, p913 * 270);
    v1270.bezierCurveTo(p913 * 79, p913 * 280, p913 * 77, p913 * 280, p913 * 78, p913 * 287);
    v1270.bezierCurveTo(p913 * 78, p913 * 290, p913 * 83, p913 * 291, p913 * 82, p913 * 299);
    v1270.bezierCurveTo(p913 * 81, p913 * 301, p913 * 87, p913 * 301, p913 * 92, p913 * 314);
    v1270.bezierCurveTo(p913 * 94, p913 * 319, p913 * 100, p913 * 321, p913 * 107, p913 * 320);
    v1270.bezierCurveTo(p913 * 111, p913 * 323, p913 * 114, p913 * 324, p913 * 119, p913 * 320);
    v1270.bezierCurveTo(p913 * 137, p913 * 321, p913 * 146, p913 * 323, p913 * 139, p913 * 320);
    v1270.bezierCurveTo(p913 * 141, p913 * 324, p913 * 150, p913 * 324, p913 * 153, p913 * 320);
    v1270.bezierCurveTo(p913 * 168, p913 * 319, p913 * 171, p913 * 316, p913 * 173, p913 * 307);
    v1270.bezierCurveTo(p913 * 180, p913 * 305, p913 * 180, p913 * 301, p913 * 178, p913 * 296);
    v1270.bezierCurveTo(p913 * 183, p913 * 296, p913 * 185, p913 * 289, p913 * 188, p913 * 279);
    v1270.bezierCurveTo(p913 * 171, p913 * 286, p913 * 149, p913 * 290, p913 * 132, p913 * 289);
    v1270.bezierCurveTo(p913 * 101, p913 * 290, p913 * 86, p913 * 280, p913 * 74, p913 * 271);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 76, p913 * 252);
    v1270.bezierCurveTo(p913 * 85, p913 * 294, p913 * 96, p913 * 314, p913 * 103, p913 * 314);
    v1270.bezierCurveTo(p913 * 106, p913 * 316, p913 * 151, p913 * 314, p913 * 156, p913 * 314);
    v1270.bezierCurveTo(p913 * 169, p913 * 317, p913 * 182, p913 * 285, p913 * 191, p913 * 256);
    v1270.bezierCurveTo(p913 * 134.5, p913 * 254, p913 * 134.5, p913 * 254, p913 * 78, p913 * 252);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 84, p913 * 257);
    v1270.bezierCurveTo(p913 * 122, p913 * 273, p913 * 146, p913 * 268, p913 * 179, p913 * 261);
    v1270.bezierCurveTo(p913 * 190, p913 * 258, p913 * 187, p913 * 266, p913 * 178, p913 * 272);
    v1270.bezierCurveTo(p913 * 160, p913 * 284, p913 * 123, p913 * 282, p913 * 100, p913 * 277);
    v1270.bezierCurveTo(p913 * 73, p913 * 260, p913 * 79, p913 * 257, p913 * 84, p913 * 257);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 125, p913 * 65);
    v1270.bezierCurveTo(p913 * 133, p913 * 45, p913 * 136, p913 * 42, p913 * 141, p913 * 55);
    v1270.bezierCurveTo(p913 * 151, p913 * 96, p913 * 164, p913 * 117, p913 * 175, p913 * 134);
    v1270.bezierCurveTo(p913 * 203, p913 * 181, p913 * 207, p913 * 182, p913 * 208, p913 * 215);
    v1270.bezierCurveTo(p913 * 206, p913 * 240, p913 * 205, p913 * 246, p913 * 184, p913 * 258);
    v1270.bezierCurveTo(p913 * 161, p913 * 267, p913 * 131, p913 * 272, p913 * 86, p913 * 258);
    v1270.bezierCurveTo(p913 * 67, p913 * 252, p913 * 68, p913 * 239, p913 * 64, p913 * 216);
    v1270.bezierCurveTo(p913 * 62, p913 * 194, p913 * 72, p913 * 169, p913 * 92, p913 * 142);
    v1270.bezierCurveTo(p913 * 106, p913 * 121, p913 * 114, p913 * 101, p913 * 125, p913 * 65);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 115, p913 * 37);
    v1270.bezierCurveTo(p913 * 116, p913 * 28, p913 * 119, p913 * 27, p913 * 126, p913 * 37);
    v1270.bezierCurveTo(p913 * 134, p913 * 48, p913 * 134, p913 * 49, p913 * 132, p913 * 59);
    v1270.bezierCurveTo(p913 * 131, p913 * 67, p913 * 127, p913 * 65, p913 * 120, p913 * 56);
    v1270.bezierCurveTo(p913 * 114, p913 * 49, p913 * 113, p913 * 43, p913 * 115, p913 * 38);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 146, p913 * 34);
    v1270.bezierCurveTo(p913 * 152, p913 * 28, p913 * 155, p913 * 27, p913 * 157, p913 * 39);
    v1270.bezierCurveTo(p913 * 157, p913 * 45, p913 * 157, p913 * 49, p913 * 150, p913 * 56);
    v1270.bezierCurveTo(p913 * 141, p913 * 66, p913 * 138, p913 * 66, p913 * 138, p913 * 57);
    v1270.bezierCurveTo(p913 * 137, p913 * 50, p913 * 137, p913 * 47, p913 * 141, p913 * 42);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 143, p913 * 69);
    v1270.bezierCurveTo(p913 * 148, p913 * 56, p913 * 156, p913 * 50, p913 * 158, p913 * 58);
    v1270.bezierCurveTo(p913 * 159, p913 * 64, p913 * 160, p913 * 67, p913 * 153, p913 * 77);
    v1270.bezierCurveTo(p913 * 148, p913 * 83, p913 * 145, p913 * 84, p913 * 143, p913 * 77);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 149, p913 * 92);
    v1270.bezierCurveTo(p913 * 149, p913 * 89, p913 * 151, p913 * 84, p913 * 156, p913 * 79);
    v1270.bezierCurveTo(p913 * 161, p913 * 73, p913 * 163, p913 * 78, p913 * 162, p913 * 86);
    v1270.bezierCurveTo(p913 * 161, p913 * 91, p913 * 155, p913 * 99, p913 * 152, p913 * 98);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 111, p913 * 61);
    v1270.bezierCurveTo(p913 * 114, p913 * 51, p913 * 117, p913 * 51, p913 * 124, p913 * 64);
    v1270.bezierCurveTo(p913 * 128, p913 * 68, p913 * 128, p913 * 76, p913 * 126, p913 * 79);
    v1270.bezierCurveTo(p913 * 123, p913 * 84, p913 * 122, p913 * 82, p913 * 115, p913 * 74);
    v1270.bezierCurveTo(p913 * 112, p913 * 67, p913 * 115, p913 * 74, p913 * 115, p913 * 74);
    v1270.bezierCurveTo(p913 * 111, p913 * 68, p913 * 111, p913 * 66, p913 * 111, p913 * 62);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 107, p913 * 81);
    v1270.bezierCurveTo(p913 * 108, p913 * 74, p913 * 112, p913 * 73, p913 * 118, p913 * 84);
    v1270.bezierCurveTo(p913 * 122, p913 * 88, p913 * 122, p913 * 93, p913 * 121, p913 * 98);
    v1270.bezierCurveTo(p913 * 114, p913 * 98, p913 * 113, p913 * 98, p913 * 109, p913 * 90);
    v1270.bezierCurveTo(p913 * 107, p913 * 87, p913 * 106, p913 * 85, p913 * 107, p913 * 82);
    v1270.closePath();
    f86(v1270, p914[3], p914[3], p913 * 8);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 99);
    v1270.bezierCurveTo(p913 * 186, p913 * 123, p913 * 199, p913 * 152, p913 * 209, p913 * 169);
    v1270.bezierCurveTo(p913 * 228, p913 * 205, p913 * 224, p913 * 245, p913 * 190, p913 * 276);
    v1270.bezierCurveTo(p913 * 161, p913 * 296, p913 * 99, p913 * 292, p913 * 79, p913 * 274);
    v1270.bezierCurveTo(p913 * 49, p913 * 253, p913 * 47, p913 * 214, p913 * 50, p913 * 197);
    v1270.bezierCurveTo(p913 * 61, p913 * 143, p913 * 102, p913 * 113, p913 * 131, p913 * 99);
    v1270.closePath();
    f86(v1270, p914[1]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 73, p913 * 270);
    v1270.bezierCurveTo(p913 * 79, p913 * 280, p913 * 77, p913 * 280, p913 * 78, p913 * 287);
    v1270.bezierCurveTo(p913 * 78, p913 * 290, p913 * 83, p913 * 291, p913 * 82, p913 * 299);
    v1270.bezierCurveTo(p913 * 81, p913 * 301, p913 * 87, p913 * 301, p913 * 92, p913 * 314);
    v1270.bezierCurveTo(p913 * 94, p913 * 319, p913 * 100, p913 * 321, p913 * 107, p913 * 320);
    v1270.bezierCurveTo(p913 * 111, p913 * 323, p913 * 114, p913 * 324, p913 * 119, p913 * 320);
    v1270.bezierCurveTo(p913 * 137, p913 * 321, p913 * 146, p913 * 323, p913 * 139, p913 * 320);
    v1270.bezierCurveTo(p913 * 141, p913 * 324, p913 * 150, p913 * 324, p913 * 153, p913 * 320);
    v1270.bezierCurveTo(p913 * 168, p913 * 319, p913 * 171, p913 * 316, p913 * 173, p913 * 307);
    v1270.bezierCurveTo(p913 * 180, p913 * 305, p913 * 180, p913 * 301, p913 * 178, p913 * 296);
    v1270.bezierCurveTo(p913 * 183, p913 * 296, p913 * 185, p913 * 289, p913 * 188, p913 * 279);
    v1270.bezierCurveTo(p913 * 171, p913 * 286, p913 * 149, p913 * 290, p913 * 132, p913 * 289);
    v1270.bezierCurveTo(p913 * 101, p913 * 290, p913 * 86, p913 * 280, p913 * 74, p913 * 271);
    v1270.closePath();
    f86(v1270, p914[5]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 76, p913 * 252);
    v1270.bezierCurveTo(p913 * 85, p913 * 294, p913 * 96, p913 * 314, p913 * 103, p913 * 314);
    v1270.bezierCurveTo(p913 * 106, p913 * 316, p913 * 151, p913 * 314, p913 * 156, p913 * 314);
    v1270.bezierCurveTo(p913 * 169, p913 * 317, p913 * 182, p913 * 285, p913 * 191, p913 * 256);
    v1270.bezierCurveTo(p913 * 134.5, p913 * 254, p913 * 134.5, p913 * 254, p913 * 78, p913 * 252);
    v1270.closePath();
    f86(v1270, p914[2]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 84, p913 * 257);
    v1270.bezierCurveTo(p913 * 122, p913 * 273, p913 * 146, p913 * 268, p913 * 179, p913 * 261);
    v1270.bezierCurveTo(p913 * 190, p913 * 258, p913 * 187, p913 * 266, p913 * 178, p913 * 272);
    v1270.bezierCurveTo(p913 * 160, p913 * 284, p913 * 123, p913 * 282, p913 * 100, p913 * 277);
    v1270.bezierCurveTo(p913 * 73, p913 * 260, p913 * 79, p913 * 257, p913 * 84, p913 * 257);
    v1270.closePath();
    f86(v1270, p914[1]);
    f87(v1270, p913 * 102, p913 * 269, p913 * 11);
    f86(v1270, p914[3]);
    f87(v1270, p913 * 98, p913 * 266, p913 * 5);
    f86(v1270, p914[6]);
    f87(v1270, p913 * 168, p913 * 269, p913 * 11);
    f86(v1270, p914[3]);
    f87(v1270, p913 * 164, p913 * 266, p913 * 5);
    f86(v1270, p914[6]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 125, p913 * 65);
    v1270.bezierCurveTo(p913 * 133, p913 * 45, p913 * 136, p913 * 42, p913 * 141, p913 * 55);
    v1270.bezierCurveTo(p913 * 151, p913 * 96, p913 * 164, p913 * 117, p913 * 175, p913 * 134);
    v1270.bezierCurveTo(p913 * 203, p913 * 181, p913 * 207, p913 * 182, p913 * 208, p913 * 215);
    v1270.bezierCurveTo(p913 * 206, p913 * 240, p913 * 205, p913 * 246, p913 * 184, p913 * 258);
    v1270.bezierCurveTo(p913 * 161, p913 * 267, p913 * 131, p913 * 272, p913 * 86, p913 * 258);
    v1270.bezierCurveTo(p913 * 67, p913 * 252, p913 * 68, p913 * 239, p913 * 64, p913 * 216);
    v1270.bezierCurveTo(p913 * 62, p913 * 194, p913 * 72, p913 * 169, p913 * 92, p913 * 142);
    v1270.bezierCurveTo(p913 * 106, p913 * 121, p913 * 114, p913 * 101, p913 * 125, p913 * 65);
    v1270.closePath();
    f86(v1270, p914[2]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 115, p913 * 235);
    v1270.bezierCurveTo(p913 * 118, p913 * 258, p913 * 137, p913 * 268, p913 * 148, p913 * 246);
    v1270.bezierCurveTo(p913 * 156, p913 * 228, p913 * 152, p913 * 169, p913 * 150, p913 * 140);
    v1270.bezierCurveTo(p913 * 147, p913 * 87, p913 * 143, p913 * 69, p913 * 142, p913 * 60);
    v1270.bezierCurveTo(p913 * 136, p913 * 44, p913 * 132, p913 * 43, p913 * 127, p913 * 62);
    v1270.bezierCurveTo(p913 * 119, p913 * 116, p913 * 119, p913 * 140, p913 * 116, p913 * 166);
    v1270.bezierCurveTo(p913 * 113, p913 * 202, p913 * 113, p913 * 223, p913 * 115, p913 * 233);
    v1270.closePath();
    f86(v1270, p914[4]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 132, p913 * 219);
    v1270.bezierCurveTo(p913 * 140, p913 * 229, p913 * 142, p913 * 231, p913 * 145, p913 * 237);
    v1270.bezierCurveTo(p913 * 145, p913 * 245, p913 * 139, p913 * 249, p913 * 133, p913 * 249);
    v1270.bezierCurveTo(p913 * 123, p913 * 248, p913 * 123, p913 * 243, p913 * 121, p913 * 239);
    v1270.bezierCurveTo(p913 * 126, p913 * 227, p913 * 129, p913 * 223, p913 * 132, p913 * 219);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 179);
    v1270.bezierCurveTo(p913 * 140, p913 * 188.5, p913 * 140, p913 * 188.5, p913 * 147, p913 * 198);
    v1270.bezierCurveTo(p913 * 148, p913 * 209, p913 * 142, p913 * 214, p913 * 133, p913 * 214);
    v1270.bezierCurveTo(p913 * 121, p913 * 211, p913 * 121, p913 * 207, p913 * 120, p913 * 200);
    v1270.bezierCurveTo(p913 * 126.5, p913 * 189.5, p913 * 126.5, p913 * 189.5, p913 * 133, p913 * 179);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 143);
    v1270.bezierCurveTo(p913 * 139, p913 * 151.5, p913 * 139, p913 * 151.5, p913 * 145, p913 * 160);
    v1270.bezierCurveTo(p913 * 143, p913 * 167, p913 * 140, p913 * 170, p913 * 134, p913 * 170);
    v1270.bezierCurveTo(p913 * 128, p913 * 169, p913 * 124, p913 * 167, p913 * 123, p913 * 161);
    v1270.bezierCurveTo(p913 * 128, p913 * 152, p913 * 128, p913 * 152, p913 * 133, p913 * 143);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 115);
    v1270.bezierCurveTo(p913 * 137.5, p913 * 121.5, p913 * 137.5, p913 * 121.5, p913 * 142, p913 * 128);
    v1270.bezierCurveTo(p913 * 141, p913 * 133, p913 * 138, p913 * 135, p913 * 133, p913 * 135);
    v1270.bezierCurveTo(p913 * 129, p913 * 135, p913 * 125, p913 * 132, p913 * 125, p913 * 129);
    v1270.bezierCurveTo(p913 * 129, p913 * 122, p913 * 129, p913 * 122, p913 * 133, p913 * 115);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 133, p913 * 94);
    v1270.bezierCurveTo(p913 * 136.5, p913 * 98.5, p913 * 136.5, p913 * 98.5, p913 * 140, p913 * 103);
    v1270.bezierCurveTo(p913 * 139, p913 * 109, p913 * 137, p913 * 109, p913 * 133, p913 * 110);
    v1270.bezierCurveTo(p913 * 127, p913 * 108, p913 * 129, p913 * 107, p913 * 127, p913 * 105);
    v1270.bezierCurveTo(p913 * 130, p913 * 99.5, p913 * 130, p913 * 99.5, p913 * 133, p913 * 94);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 130, p913 * 279);
    v1270.bezierCurveTo(p913 * 136.5, p913 * 287.5, p913 * 136.5, p913 * 287.5, p913 * 143, p913 * 296);
    v1270.bezierCurveTo(p913 * 143, p913 * 302, p913 * 139, p913 * 309, p913 * 131, p913 * 308);
    v1270.bezierCurveTo(p913 * 123, p913 * 306, p913 * 121, p913 * 303, p913 * 120, p913 * 297);
    v1270.bezierCurveTo(p913 * 125.5, p913 * 288.5, p913 * 125.5, p913 * 288.5, p913 * 131, p913 * 280);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 147, p913 * 303);
    v1270.bezierCurveTo(p913 * 151, p913 * 311, p913 * 151, p913 * 319, p913 * 147, p913 * 321);
    v1270.bezierCurveTo(p913 * 138, p913 * 320, p913 * 145, p913 * 308, p913 * 147, p913 * 303);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 115, p913 * 303);
    v1270.bezierCurveTo(p913 * 115, p913 * 312, p913 * 118, p913 * 319, p913 * 115, p913 * 319);
    v1270.bezierCurveTo(p913 * 112, p913 * 324, p913 * 109, p913 * 318, p913 * 109, p913 * 314);
    v1270.bezierCurveTo(p913 * 109, p913 * 308, p913 * 112, p913 * 303, p913 * 115, p913 * 303);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 89, p913 * 280);
    v1270.bezierCurveTo(p913 * 83, p913 * 279, p913 * 80, p913 * 281, p913 * 81, p913 * 286);
    v1270.bezierCurveTo(p913 * 83, p913 * 290, p913 * 84, p913 * 290, p913 * 87, p913 * 286);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 94, p913 * 290);
    v1270.bezierCurveTo(p913 * 93, p913 * 294, p913 * 90, p913 * 303, p913 * 86, p913 * 298);
    v1270.bezierCurveTo(p913 * 84, p913 * 295, p913 * 84, p913 * 291, p913 * 89, p913 * 291);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 163, p913 * 295);
    v1270.bezierCurveTo(p913 * 175, p913 * 294, p913 * 176, p913 * 296, p913 * 175, p913 * 301);
    v1270.bezierCurveTo(p913 * 174, p913 * 305, p913 * 171, p913 * 305, p913 * 166, p913 * 300);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 172, p913 * 286);
    v1270.bezierCurveTo(p913 * 180, p913 * 285, p913 * 181, p913 * 285, p913 * 180, p913 * 291);
    v1270.bezierCurveTo(p913 * 176, p913 * 295, p913 * 174, p913 * 294, p913 * 172, p913 * 286);
    v1270.closePath();
    f86(v1270, p914[8]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 115, p913 * 37);
    v1270.bezierCurveTo(p913 * 116, p913 * 28, p913 * 119, p913 * 27, p913 * 126, p913 * 37);
    v1270.bezierCurveTo(p913 * 134, p913 * 48, p913 * 134, p913 * 49, p913 * 132, p913 * 59);
    v1270.bezierCurveTo(p913 * 131, p913 * 67, p913 * 127, p913 * 65, p913 * 120, p913 * 56);
    v1270.bezierCurveTo(p913 * 114, p913 * 49, p913 * 113, p913 * 43, p913 * 115, p913 * 38);
    v1270.closePath();
    f86(v1270, p914[7]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 146, p913 * 34);
    v1270.bezierCurveTo(p913 * 152, p913 * 28, p913 * 155, p913 * 27, p913 * 157, p913 * 39);
    v1270.bezierCurveTo(p913 * 157, p913 * 45, p913 * 157, p913 * 49, p913 * 150, p913 * 56);
    v1270.bezierCurveTo(p913 * 141, p913 * 66, p913 * 138, p913 * 66, p913 * 138, p913 * 57);
    v1270.bezierCurveTo(p913 * 137, p913 * 50, p913 * 137, p913 * 47, p913 * 141, p913 * 42);
    v1270.closePath();
    f86(v1270, p914[7]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 143, p913 * 69);
    v1270.bezierCurveTo(p913 * 148, p913 * 56, p913 * 156, p913 * 50, p913 * 158, p913 * 58);
    v1270.bezierCurveTo(p913 * 159, p913 * 64, p913 * 160, p913 * 67, p913 * 153, p913 * 77);
    v1270.bezierCurveTo(p913 * 148, p913 * 83, p913 * 145, p913 * 84, p913 * 143, p913 * 77);
    v1270.closePath();
    f86(v1270, p914[7]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 149, p913 * 92);
    v1270.bezierCurveTo(p913 * 149, p913 * 89, p913 * 151, p913 * 84, p913 * 156, p913 * 79);
    v1270.bezierCurveTo(p913 * 161, p913 * 73, p913 * 163, p913 * 78, p913 * 162, p913 * 86);
    v1270.bezierCurveTo(p913 * 161, p913 * 91, p913 * 155, p913 * 99, p913 * 152, p913 * 98);
    v1270.closePath();
    f86(v1270, p914[7]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 111, p913 * 61);
    v1270.bezierCurveTo(p913 * 114, p913 * 51, p913 * 117, p913 * 51, p913 * 124, p913 * 64);
    v1270.bezierCurveTo(p913 * 128, p913 * 68, p913 * 128, p913 * 76, p913 * 126, p913 * 79);
    v1270.bezierCurveTo(p913 * 123, p913 * 84, p913 * 122, p913 * 82, p913 * 115, p913 * 74);
    v1270.bezierCurveTo(p913 * 112, p913 * 67, p913 * 115, p913 * 74, p913 * 115, p913 * 74);
    v1270.bezierCurveTo(p913 * 111, p913 * 68, p913 * 111, p913 * 66, p913 * 111, p913 * 62);
    v1270.closePath();
    f86(v1270, p914[7]);
    v1270.beginPath();
    v1270.lineCap = "round";
    v1270.lineJoin = "round";
    v1270.moveTo(p913 * 107, p913 * 81);
    v1270.bezierCurveTo(p913 * 108, p913 * 74, p913 * 112, p913 * 73, p913 * 118, p913 * 84);
    v1270.bezierCurveTo(p913 * 122, p913 * 88, p913 * 122, p913 * 93, p913 * 121, p913 * 98);
    v1270.bezierCurveTo(p913 * 114, p913 * 98, p913 * 113, p913 * 98, p913 * 109, p913 * 90);
    v1270.bezierCurveTo(p913 * 107, p913 * 87, p913 * 106, p913 * 85, p913 * 107, p913 * 82);
    v1270.closePath();
    f86(v1270, p914[7]);
    return v1269;
  }
  function f229(p915, p916, p917) {
    var v1271 = document.createElement("canvas");
    var v1272 = v1271.getContext("2d");
    v1271.width = p915 * 104;
    v1271.height = p915 * 117;
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 4, p915 * 90);
    v1272.bezierCurveTo(p915 * 20, p915 * 99.5, p915 * 20, p915 * 99.5, p915 * 36, p915 * 109);
    v1272.bezierCurveTo(p915 * 67, p915 * 92, p915 * 67, p915 * 92, p915 * 98, p915 * 75);
    v1272.bezierCurveTo(p915 * 91, p915 * 27, p915 * 91, p915 * 27, p915 * 91, p915 * 28);
    v1272.bezierCurveTo(p915 * 72.5, p915 * 16, p915 * 72.5, p915 * 16, p915 * 54, p915 * 4);
    v1272.bezierCurveTo(p915 * 33.5, p915 * 10, p915 * 33.5, p915 * 10, p915 * 13, p915 * 16);
    v1272.closePath();
    f86(v1272, p917[0]);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 6, p915 * 76);
    v1272.bezierCurveTo(p915 * 13.5, p915 * 51.5, p915 * 13.5, p915 * 51.5, p915 * 21, p915 * 27);
    v1272.bezierCurveTo(p915 * 37.5, p915 * 17, p915 * 37.5, p915 * 17, p915 * 54, p915 * 7);
    v1272.bezierCurveTo(p915 * 33.5, p915 * 12.5, p915 * 33.5, p915 * 12.5, p915 * 13, p915 * 18);
    v1272.closePath();
    f86(v1272, p917[1]);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 24, p915 * 62);
    v1272.bezierCurveTo(p915 * 28.5, p915 * 53, p915 * 28.5, p915 * 53, p915 * 33, p915 * 44);
    v1272.bezierCurveTo(p915 * 41.5, p915 * 41, p915 * 41.5, p915 * 41, p915 * 50, p915 * 38);
    v1272.bezierCurveTo(p915 * 52.5, p915 * 35, p915 * 52.5, p915 * 35, p915 * 55, p915 * 32);
    v1272.bezierCurveTo(p915 * 52, p915 * 30, p915 * 52, p915 * 30, p915 * 49, p915 * 28);
    v1272.bezierCurveTo(p915 * 38, p915 * 31.5, p915 * 38, p915 * 31.5, p915 * 27, p915 * 35);
    v1272.closePath();
    f86(v1272, p917[1]);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 36, p915 * 107);
    v1272.bezierCurveTo(p915 * 66, p915 * 90.5, p915 * 66, p915 * 90.5, p915 * 96, p915 * 74);
    v1272.bezierCurveTo(p915 * 93, p915 * 52.5, p915 * 93, p915 * 52.5, p915 * 90, p915 * 31);
    v1272.bezierCurveTo(p915 * 87, p915 * 48, p915 * 87, p915 * 48, p915 * 84, p915 * 65);
    v1272.closePath();
    f86(v1272, p917[2]);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 1, p915 * 89);
    v1272.bezierCurveTo(p915 * 18, p915 * 100, p915 * 34, p915 * 110, p915 * 35, p915 * 111);
    v1272.bezierCurveTo(p915 * 67, p915 * 93, p915 * 67, p915 * 93, p915 * 99, p915 * 75);
    v1272.bezierCurveTo(p915 * 100, p915 * 78.5, p915 * 100, p915 * 78.5, p915 * 101, p915 * 82);
    v1272.bezierCurveTo(p915 * 68, p915 * 99, p915 * 68, p915 * 99, p915 * 35, p915 * 116);
    v1272.bezierCurveTo(p915 * 18, p915 * 106.5, p915 * 18, p915 * 106.5, p915 * 1, p915 * 97);
    v1272.closePath();
    f86(v1272, p917[3]);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 36, p915 * 107);
    v1272.bezierCurveTo(p915 * 66.5, p915 * 91.5, p915 * 66.5, p915 * 91.5, p915 * 97, p915 * 76);
    v1272.bezierCurveTo(p915 * 94.5, p915 * 52, p915 * 94.5, p915 * 52, p915 * 92, p915 * 28);
    v1272.bezierCurveTo(p915 * 73, p915 * 15.5, p915 * 73, p915 * 15.5, p915 * 54, p915 * 3);
    v1272.bezierCurveTo(p915 * 33, p915 * 9.5, p915 * 33, p915 * 9.5, p915 * 12, p915 * 16);
    v1272.bezierCurveTo(p915 * 8, p915 * 53, p915 * 8, p915 * 53, p915 * 4, p915 * 90);
    v1272.bezierCurveTo(p915 * 18.5, p915 * 99, p915 * 18.5, p915 * 99, p915 * 33, p915 * 108);
    v1272.closePath();
    f86(v1272, vVVVVVUndefined197, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 22, p915 * 71);
    v1272.bezierCurveTo(p915 * 30, p915 * 76.5, p915 * 30, p915 * 76.5, p915 * 38, p915 * 82);
    v1272.bezierCurveTo(p915 * 53, p915 * 72, p915 * 53, p915 * 72, p915 * 68, p915 * 62);
    v1272.bezierCurveTo(p915 * 68, p915 * 52, p915 * 68, p915 * 52, p915 * 68, p915 * 42);
    v1272.bezierCurveTo(p915 * 59.5, p915 * 35.5, p915 * 59.5, p915 * 35.5, p915 * 51, p915 * 29);
    v1272.bezierCurveTo(p915 * 39.5, p915 * 32, p915 * 39.5, p915 * 32, p915 * 28, p915 * 35);
    v1272.bezierCurveTo(p915 * 25, p915 * 52, p915 * 25, p915 * 52, p915 * 22, p915 * 69);
    v1272.closePath();
    f86(v1272, undefined, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 5, p915 * 89);
    v1272.bezierCurveTo(p915 * 20, p915 * 73, p915 * 12.5, p915 * 80.5, p915 * 20, p915 * 72);
    v1272.closePath();
    f86(v1272, undefined, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 35, p915 * 102);
    v1272.bezierCurveTo(p915 * 36, p915 * 92.5, p915 * 36, p915 * 92.5, p915 * 37, p915 * 83);
    v1272.closePath();
    f86(v1272, vVUndefined28, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 68, p915 * 62);
    v1272.bezierCurveTo(p915 * 81, p915 * 67.5, p915 * 81, p915 * 67.5, p915 * 94, p915 * 73);
    v1272.closePath();
    f86(v1272, vVUndefined26, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 70, p915 * 41);
    v1272.bezierCurveTo(p915 * 80, p915 * 35.5, p915 * 80, p915 * 35.5, p915 * 90, p915 * 30);
    v1272.closePath();
    f86(v1272, undefined, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 28, p915 * 33);
    v1272.bezierCurveTo(p915 * 21.5, p915 * 26.5, p915 * 21.5, p915 * 26.5, p915 * 15, p915 * 20);
    v1272.closePath();
    f86(v1272, undefined, p917[4], p915 * 6);
    v1272.beginPath();
    v1272.lineCap = "round";
    v1272.lineJoin = "round";
    v1272.moveTo(p915 * 51, p915 * 28);
    v1272.bezierCurveTo(p915 * 53, p915 * 17, p915 * 53, p915 * 17, p915 * 55, p915 * 6);
    v1272.closePath();
    f86(v1272, vVVUndefined198, p917[4], p915 * 6);
    return v1271;
  }
  function f230(p918, p919, p920) {
    var v1273 = document.createElement("canvas");
    var v1274 = v1273.getContext("2d");
    v1273.width = p918 * 120;
    v1273.height = p918 * 100;
    f89(v1274, p918 * 10, p918 * 10, p918 * 95, p918 * 80, p918 * 10);
    f86(v1274, p919[2]);
    f89(v1274, p918 * 10, p918 * 5, p918 * 95, p918 * 80, p918 * 10);
    f86(v1274, p919[3], p919[4], p918 * 4);
    if (p920 == 0) {
      var vF198 = f198(p918 * 0.75, p919, 0);
      v1274.drawImage(vF198, p918 * 22, p918 * 18);
    } else if (p920 == 1) {
      vF198 = f198(p918 * 0.75, p919, 1);
      v1274.drawImage(vF198, p918 * 22, p918 * 18);
    }
    return v1273;
  }
  function f231(p921, p922) {
    var v1275 = document.createElement("canvas");
    var v1276 = v1275.getContext("2d");
    v1275.width = p921 * 161;
    v1275.height = p921 * 190;
    v1276.globalAlpha = 0.5;
    v1276.translate(0, 8);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 9, p921 * 93);
    v1276.bezierCurveTo(p921 * 17, p921 * 95, p921 * 19, p921 * 95, p921 * 21, p921 * 95);
    v1276.bezierCurveTo(p921 * 9, p921 * 83, p921 * 17, p921 * 93, p921 * 4, p921 * 76);
    v1276.bezierCurveTo(p921 * 11, p921 * 75, p921 * 11, p921 * 75, p921 * 18, p921 * 75);
    v1276.bezierCurveTo(p921 * 13, p921 * 67, p921 * 13, p921 * 67, p921 * 7, p921 * 59);
    v1276.bezierCurveTo(p921 * 14, p921 * 59, p921 * 14, p921 * 59, p921 * 21, p921 * 59);
    v1276.bezierCurveTo(p921 * 46, p921 * 35, p921 * 35, p921 * 45, p921 * 49, p921 * 31);
    v1276.bezierCurveTo(p921 * 53, p921 * 24, p921 * 51, p921 * 21, p921 * 51, p921 * 16);
    v1276.bezierCurveTo(p921 * 63, p921 * 23, p921 * 63, p921 * 24, p921 * 69, p921 * 29);
    v1276.bezierCurveTo(p921 * 76, p921 * 7, p921 * 75, p921 * 11, p921 * 76, p921 * 6);
    v1276.bezierCurveTo(p921 * 81, p921 * 12, p921 * 84, p921 * 18, p921 * 89, p921 * 27);
    v1276.bezierCurveTo(p921 * 95, p921 * 25, p921 * 100, p921 * 16, p921 * 105, p921 * 14);
    v1276.bezierCurveTo(p921 * 103, p921 * 25, p921 * 111, p921 * 33, p921 * 110, p921 * 34);
    v1276.bezierCurveTo(p921 * 123, p921 * 48, p921 * 123, p921 * 48, p921 * 136, p921 * 62);
    v1276.bezierCurveTo(p921 * 142, p921 * 60, p921 * 147, p921 * 59, p921 * 155, p921 * 58);
    v1276.bezierCurveTo(p921 * 147, p921 * 65, p921 * 147, p921 * 65, p921 * 139, p921 * 73);
    v1276.bezierCurveTo(p921 * 145, p921 * 73, p921 * 145, p921 * 73, p921 * 151, p921 * 73);
    v1276.bezierCurveTo(p921 * 145, p921 * 80, p921 * 145, p921 * 80, p921 * 138, p921 * 87);
    v1276.bezierCurveTo(p921 * 144, p921 * 88, p921 * 144, p921 * 88, p921 * 150, p921 * 89);
    v1276.bezierCurveTo(p921 * 125, p921 * 103, p921 * 125, p921 * 125, p921 * 113, p921 * 141);
    v1276.bezierCurveTo(p921 * 92, p921 * 178, p921 * 85, p921 * 177, p921 * 76, p921 * 178);
    v1276.bezierCurveTo(p921 * 64, p921 * 179, p921 * 51, p921 * 164, p921 * 35, p921 * 131);
    v1276.bezierCurveTo(p921 * 18, p921 * 95, p921 * 13, p921 * 99, p921 * 8, p921 * 93);
    v1276.closePath();
    f86(v1276, p922[0]);
    v1276.globalAlpha = 1;
    v1276.translate(0, -8);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 9, p921 * 93);
    v1276.bezierCurveTo(p921 * 17, p921 * 95, p921 * 19, p921 * 95, p921 * 21, p921 * 95);
    v1276.bezierCurveTo(p921 * 9, p921 * 83, p921 * 17, p921 * 93, p921 * 4, p921 * 76);
    v1276.bezierCurveTo(p921 * 11, p921 * 75, p921 * 11, p921 * 75, p921 * 18, p921 * 75);
    v1276.bezierCurveTo(p921 * 13, p921 * 67, p921 * 13, p921 * 67, p921 * 7, p921 * 59);
    v1276.bezierCurveTo(p921 * 14, p921 * 59, p921 * 14, p921 * 59, p921 * 21, p921 * 59);
    v1276.bezierCurveTo(p921 * 46, p921 * 35, p921 * 35, p921 * 45, p921 * 49, p921 * 31);
    v1276.bezierCurveTo(p921 * 53, p921 * 24, p921 * 51, p921 * 21, p921 * 51, p921 * 16);
    v1276.bezierCurveTo(p921 * 63, p921 * 23, p921 * 63, p921 * 24, p921 * 69, p921 * 29);
    v1276.bezierCurveTo(p921 * 76, p921 * 7, p921 * 75, p921 * 11, p921 * 76, p921 * 6);
    v1276.bezierCurveTo(p921 * 81, p921 * 12, p921 * 84, p921 * 18, p921 * 89, p921 * 27);
    v1276.bezierCurveTo(p921 * 95, p921 * 25, p921 * 100, p921 * 16, p921 * 105, p921 * 14);
    v1276.bezierCurveTo(p921 * 103, p921 * 25, p921 * 111, p921 * 33, p921 * 110, p921 * 34);
    v1276.bezierCurveTo(p921 * 123, p921 * 48, p921 * 123, p921 * 48, p921 * 136, p921 * 62);
    v1276.bezierCurveTo(p921 * 142, p921 * 60, p921 * 147, p921 * 59, p921 * 155, p921 * 58);
    v1276.bezierCurveTo(p921 * 147, p921 * 65, p921 * 147, p921 * 65, p921 * 139, p921 * 73);
    v1276.bezierCurveTo(p921 * 145, p921 * 73, p921 * 145, p921 * 73, p921 * 151, p921 * 73);
    v1276.bezierCurveTo(p921 * 145, p921 * 80, p921 * 145, p921 * 80, p921 * 138, p921 * 87);
    v1276.bezierCurveTo(p921 * 144, p921 * 88, p921 * 144, p921 * 88, p921 * 150, p921 * 89);
    v1276.bezierCurveTo(p921 * 125, p921 * 103, p921 * 125, p921 * 125, p921 * 113, p921 * 141);
    v1276.bezierCurveTo(p921 * 92, p921 * 178, p921 * 85, p921 * 177, p921 * 76, p921 * 178);
    v1276.bezierCurveTo(p921 * 64, p921 * 179, p921 * 51, p921 * 164, p921 * 35, p921 * 131);
    v1276.bezierCurveTo(p921 * 18, p921 * 95, p921 * 13, p921 * 99, p921 * 8, p921 * 93);
    v1276.closePath();
    f86(v1276, p922[1]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 28, p921 * 63);
    v1276.bezierCurveTo(p921 * 23, p921 * 54, p921 * 24, p921 * 47, p921 * 26, p921 * 37);
    v1276.bezierCurveTo(p921 * 28, p921 * 29, p921 * 31, p921 * 31, p921 * 41, p921 * 35);
    v1276.bezierCurveTo(p921 * 52, p921 * 45, p921 * 55, p921 * 51, p921 * 57, p921 * 53);
    v1276.bezierCurveTo(p921 * 50, p921 * 50, p921 * 44, p921 * 47, p921 * 43, p921 * 48);
    v1276.bezierCurveTo(p921 * 43, p921 * 52, p921 * 43, p921 * 52, p921 * 42, p921 * 57);
    v1276.bezierCurveTo(p921 * 38, p921 * 54, p921 * 38, p921 * 54, p921 * 33, p921 * 51);
    v1276.bezierCurveTo(p921 * 34, p921 * 56, p921 * 34, p921 * 56, p921 * 34, p921 * 61);
    v1276.closePath();
    f86(v1276, p922[3]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 99, p921 * 55);
    v1276.bezierCurveTo(p921 * 107, p921 * 43, p921 * 113, p921 * 39, p921 * 121, p921 * 34);
    v1276.bezierCurveTo(p921 * 130, p921 * 29, p921 * 130, p921 * 34, p921 * 130, p921 * 42);
    v1276.bezierCurveTo(p921 * 131, p921 * 57, p921 * 128, p921 * 61, p921 * 129, p921 * 63);
    v1276.bezierCurveTo(p921 * 124, p921 * 62, p921 * 124, p921 * 62, p921 * 119, p921 * 61);
    v1276.bezierCurveTo(p921 * 119, p921 * 56, p921 * 120, p921 * 61, p921 * 118, p921 * 52);
    v1276.bezierCurveTo(p921 * 115, p921 * 55, p921 * 111, p921 * 59, p921 * 111, p921 * 58);
    v1276.bezierCurveTo(p921 * 110, p921 * 54, p921 * 109, p921 * 57, p921 * 109, p921 * 51);
    v1276.closePath();
    f86(v1276, p922[3]);
    f87(v1276, p921 * 103, p921 * 110, p921 * 11);
    f86(v1276, p922[4]);
    f87(v1276, p921 * 55, p921 * 111, p921 * 11);
    f86(v1276, p922[4]);
    f87(v1276, p921 * 99, p921 * 107, p921 * 5);
    f86(v1276, p922[1]);
    f87(v1276, p921 * 51, p921 * 108, p921 * 5);
    f86(v1276, p922[1]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 31, p921 * 121);
    v1276.bezierCurveTo(p921 * 45, p921 * 128, p921 * 51, p921 * 133, p921 * 53, p921 * 141);
    v1276.bezierCurveTo(p921 * 59, p921 * 161, p921 * 70, p921 * 173, p921 * 80, p921 * 169);
    v1276.bezierCurveTo(p921 * 89, p921 * 172, p921 * 99, p921 * 149, p921 * 107, p921 * 133);
    v1276.bezierCurveTo(p921 * 114, p921 * 122, p921 * 119, p921 * 123, p921 * 124, p921 * 119);
    v1276.bezierCurveTo(p921 * 109, p921 * 148, p921 * 117, p921 * 133, p921 * 109, p921 * 147);
    v1276.bezierCurveTo(p921 * 87, p921 * 180, p921 * 84, p921 * 179, p921 * 76, p921 * 178);
    v1276.bezierCurveTo(p921 * 49, p921 * 173, p921 * 44, p921 * 149, p921 * 31, p921 * 121);
    v1276.closePath();
    f86(v1276, p922[5]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.translate(-2, 0);
    v1276.moveTo(p921 * 71, p921 * 162);
    v1276.bezierCurveTo(p921 * 80, p921 * 155, p921 * 85, p921 * 159, p921 * 89, p921 * 164);
    v1276.bezierCurveTo(p921 * 90, p921 * 171, p921 * 86, p921 * 173, p921 * 79, p921 * 173);
    v1276.bezierCurveTo(p921 * 67, p921 * 172, p921 * 67, p921 * 168, p921 * 71, p921 * 162);
    v1276.closePath();
    f86(v1276, p922[3]);
    v1276.translate(2, 0);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 9, p921 * 93);
    v1276.bezierCurveTo(p921 * 17, p921 * 95, p921 * 19, p921 * 95, p921 * 21, p921 * 95);
    v1276.bezierCurveTo(p921 * 9, p921 * 83, p921 * 17, p921 * 93, p921 * 4, p921 * 76);
    v1276.bezierCurveTo(p921 * 11, p921 * 75, p921 * 11, p921 * 75, p921 * 18, p921 * 75);
    v1276.bezierCurveTo(p921 * 13, p921 * 67, p921 * 13, p921 * 67, p921 * 7, p921 * 59);
    v1276.bezierCurveTo(p921 * 14, p921 * 59, p921 * 14, p921 * 59, p921 * 21, p921 * 59);
    v1276.bezierCurveTo(p921 * 46, p921 * 35, p921 * 35, p921 * 45, p921 * 49, p921 * 31);
    v1276.bezierCurveTo(p921 * 53, p921 * 24, p921 * 51, p921 * 21, p921 * 51, p921 * 16);
    v1276.bezierCurveTo(p921 * 63, p921 * 23, p921 * 63, p921 * 24, p921 * 69, p921 * 29);
    v1276.bezierCurveTo(p921 * 76, p921 * 7, p921 * 75, p921 * 11, p921 * 76, p921 * 6);
    v1276.bezierCurveTo(p921 * 81, p921 * 12, p921 * 84, p921 * 18, p921 * 89, p921 * 27);
    v1276.bezierCurveTo(p921 * 95, p921 * 25, p921 * 100, p921 * 16, p921 * 105, p921 * 14);
    v1276.bezierCurveTo(p921 * 103, p921 * 25, p921 * 111, p921 * 33, p921 * 110, p921 * 34);
    v1276.bezierCurveTo(p921 * 123, p921 * 48, p921 * 123, p921 * 48, p921 * 136, p921 * 62);
    v1276.bezierCurveTo(p921 * 142, p921 * 60, p921 * 147, p921 * 59, p921 * 155, p921 * 58);
    v1276.bezierCurveTo(p921 * 147, p921 * 65, p921 * 147, p921 * 65, p921 * 139, p921 * 73);
    v1276.bezierCurveTo(p921 * 145, p921 * 73, p921 * 145, p921 * 73, p921 * 151, p921 * 73);
    v1276.bezierCurveTo(p921 * 145, p921 * 80, p921 * 145, p921 * 80, p921 * 138, p921 * 87);
    v1276.bezierCurveTo(p921 * 144, p921 * 88, p921 * 144, p921 * 88, p921 * 150, p921 * 89);
    v1276.bezierCurveTo(p921 * 125, p921 * 103, p921 * 125, p921 * 125, p921 * 113, p921 * 141);
    v1276.bezierCurveTo(p921 * 92, p921 * 178, p921 * 85, p921 * 177, p921 * 76, p921 * 178);
    v1276.bezierCurveTo(p921 * 64, p921 * 179, p921 * 51, p921 * 164, p921 * 35, p921 * 131);
    v1276.bezierCurveTo(p921 * 18, p921 * 95, p921 * 13, p921 * 99, p921 * 8, p921 * 93);
    v1276.closePath();
    f86(v1276, undefined, p922[2], p921 * 4);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 25, p921 * 63);
    v1276.bezierCurveTo(p921 * 16, p921 * 58, p921 * 17, p921 * 51, p921 * 17, p921 * 33);
    v1276.bezierCurveTo(p921 * 19, p921 * 12, p921 * 21, p921 * 12, p921 * 32, p921 * 17);
    v1276.bezierCurveTo(p921 * 63, p921 * 31, p921 * 66, p921 * 45, p921 * 66, p921 * 54);
    f86(v1276, p922[1], p922[2], p921 * 4);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 91, p921 * 53);
    v1276.bezierCurveTo(p921 * 91, p921 * 40, p921 * 98, p921 * 33, p921 * 121, p921 * 20);
    v1276.bezierCurveTo(p921 * 137, p921 * 12, p921 * 137, p921 * 16, p921 * 139, p921 * 27);
    v1276.bezierCurveTo(p921 * 141, p921 * 49, p921 * 140, p921 * 57, p921 * 134, p921 * 64);
    f86(v1276, p922[1], p922[2], p921 * 4);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 31, p921 * 63);
    v1276.bezierCurveTo(p921 * 23, p921 * 54, p921 * 24, p921 * 47, p921 * 26, p921 * 37);
    v1276.bezierCurveTo(p921 * 28, p921 * 29, p921 * 31, p921 * 31, p921 * 41, p921 * 35);
    v1276.bezierCurveTo(p921 * 52, p921 * 45, p921 * 55, p921 * 51, p921 * 57, p921 * 53);
    v1276.bezierCurveTo(p921 * 50, p921 * 50, p921 * 44, p921 * 47, p921 * 43, p921 * 48);
    v1276.bezierCurveTo(p921 * 43, p921 * 52, p921 * 43, p921 * 52, p921 * 42, p921 * 57);
    v1276.bezierCurveTo(p921 * 38, p921 * 54, p921 * 38, p921 * 54, p921 * 33, p921 * 51);
    v1276.bezierCurveTo(p921 * 34, p921 * 56, p921 * 34, p921 * 56, p921 * 34, p921 * 61);
    v1276.closePath();
    f86(v1276, p922[3]);
    v1276.beginPath();
    v1276.lineCap = "round";
    v1276.lineJoin = "round";
    v1276.moveTo(p921 * 99, p921 * 55);
    v1276.bezierCurveTo(p921 * 107, p921 * 43, p921 * 113, p921 * 39, p921 * 121, p921 * 34);
    v1276.bezierCurveTo(p921 * 130, p921 * 29, p921 * 130, p921 * 34, p921 * 130, p921 * 42);
    v1276.bezierCurveTo(p921 * 131, p921 * 57, p921 * 128, p921 * 61, p921 * 129, p921 * 63);
    v1276.bezierCurveTo(p921 * 124, p921 * 62, p921 * 124, p921 * 62, p921 * 119, p921 * 61);
    v1276.bezierCurveTo(p921 * 119, p921 * 56, p921 * 120, p921 * 61, p921 * 118, p921 * 52);
    v1276.bezierCurveTo(p921 * 115, p921 * 55, p921 * 111, p921 * 59, p921 * 111, p921 * 58);
    v1276.bezierCurveTo(p921 * 110, p921 * 54, p921 * 109, p921 * 57, p921 * 109, p921 * 51);
    v1276.closePath();
    f86(v1276, p922[3]);
    return v1275;
  }
  function f232(p923, p924, p925) {
    var v1277 = document.createElement("canvas");
    var v1278 = v1277.getContext("2d");
    v1277.width = p923 * 450;
    v1277.height = p923 * 260;
    v1278.translate(p923 * 10, p923 * 10);
    v1278.globalAlpha = p924 ? 0.5 : 1;
    v1278.translate(p923 * 20, p923 * 20);
    f89(v1278, 0, 0, p923 * 400, p923 * 220, p923 * 30);
    f86(v1278, p925[0]);
    v1278.globalAlpha = 1;
    v1278.translate(p923 * -20, p923 * -20);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p923 * 9, p923 * 5);
    v1278.bezierCurveTo(p923 * 381, p923 * 2, p923 * 197, p923 * 4.5, p923 * 385, p923 * 4);
    v1278.bezierCurveTo(p923 * 397, p923 * 4, p923 * 401, p923 * 4, p923 * 399, p923 * 23);
    v1278.bezierCurveTo(p923 * 367, p923 * 27, p923 * 367, p923 * 27, p923 * 335, p923 * 31);
    v1278.bezierCurveTo(p923 * 366.5, p923 * 33.5, p923 * 366.5, p923 * 33.5, p923 * 398, p923 * 36);
    v1278.bezierCurveTo(p923 * 398, p923 * 41.5, p923 * 398, p923 * 41.5, p923 * 398, p923 * 47);
    v1278.bezierCurveTo(p923 * 398, p923 * 56, p923 * 399, p923 * 56, p923 * 386, p923 * 56);
    v1278.bezierCurveTo(p923 * 200.5, p923 * 56.5, p923 * 200.5, p923 * 56.5, p923 * 15, p923 * 57);
    v1278.bezierCurveTo(p923 * 2, p923 * 55, p923 * 4, p923 * 52, p923 * 4, p923 * 43);
    v1278.bezierCurveTo(p923 * 4, p923 * 30.5, p923 * 4, p923 * 30.5, p923 * 4, p923 * 18);
    v1278.bezierCurveTo(p923 * 16, p923 * 18.5, p923 * 16, p923 * 18.5, p923 * 28, p923 * 19);
    v1278.bezierCurveTo(p923 * 18.5, p923 * 12, p923 * 18.5, p923 * 12, p923 * 9, p923 * 5);
    v1278.closePath();
    f86(v1278, p925[2], p925[1], p923 * 12);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p923 * 5, p923 * 70);
    v1278.bezierCurveTo(p923 * 5, p923 * 58, p923 * 5, p923 * 55, p923 * 17, p923 * 57);
    v1278.bezierCurveTo(p923 * 203, p923 * 57, p923 * 203, p923 * 57, p923 * 389, p923 * 57);
    v1278.bezierCurveTo(p923 * 400, p923 * 57, p923 * 400, p923 * 59, p923 * 400, p923 * 69);
    v1278.bezierCurveTo(p923 * 400.5, p923 * 83.5, p923 * 400.5, p923 * 83.5, p923 * 401, p923 * 98);
    v1278.bezierCurveTo(p923 * 402, p923 * 108, p923 * 401, p923 * 108, p923 * 388, p923 * 108);
    v1278.bezierCurveTo(p923 * 201.5, p923 * 108, p923 * 201.5, p923 * 108, p923 * 15, p923 * 108);
    v1278.bezierCurveTo(p923 * 1, p923 * 106, p923 * 5, p923 * 106, p923 * 5, p923 * 87);
    v1278.bezierCurveTo(p923 * 33, p923 * 84.5, p923 * 33, p923 * 84.5, p923 * 61, p923 * 82);
    v1278.bezierCurveTo(p923 * 33.5, p923 * 76.5, p923 * 33.5, p923 * 76.5, p923 * 6, p923 * 71);
    v1278.closePath();
    f86(v1278, p925[3], p925[1], p923 * 12);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p923 * 19, p923 * 158);
    v1278.bezierCurveTo(p923 * 2, p923 * 159, p923 * 4, p923 * 156, p923 * 5, p923 * 118);
    v1278.bezierCurveTo(p923 * 4, p923 * 110, p923 * 6, p923 * 107, p923 * 26, p923 * 109);
    v1278.bezierCurveTo(p923 * 206.5, p923 * 109, p923 * 206.5, p923 * 109, p923 * 387, p923 * 109);
    v1278.bezierCurveTo(p923 * 400, p923 * 108, p923 * 400, p923 * 108, p923 * 398, p923 * 127);
    v1278.bezierCurveTo(p923 * 384.5, p923 * 130, p923 * 384.5, p923 * 130, p923 * 371, p923 * 133);
    v1278.bezierCurveTo(p923 * 385.5, p923 * 138, p923 * 385.5, p923 * 138, p923 * 400, p923 * 143);
    v1278.bezierCurveTo(p923 * 402, p923 * 156, p923 * 402, p923 * 162, p923 * 385, p923 * 160);
    v1278.closePath();
    f86(v1278, p925[2], p925[1], p923 * 12);
    v1278.beginPath();
    v1278.lineCap = "round";
    v1278.lineJoin = "round";
    v1278.moveTo(p923 * 4, p923 * 183);
    v1278.bezierCurveTo(p923 * 1, p923 * 163, p923 * 4, p923 * 158, p923 * 28, p923 * 161);
    v1278.bezierCurveTo(p923 * 207.5, p923 * 161, p923 * 207.5, p923 * 161, p923 * 387, p923 * 161);
    v1278.bezierCurveTo(p923 * 401, p923 * 159, p923 * 400, p923 * 164, p923 * 400, p923 * 177);
    v1278.bezierCurveTo(p923 * 364.5, p923 * 184, p923 * 364.5, p923 * 184, p923 * 329, p923 * 191);
    v1278.bezierCurveTo(p923 * 364.5, p923 * 192.5, p923 * 364.5, p923 * 192.5, p923 * 400, p923 * 194);
    v1278.bezierCurveTo(p923 * 403, p923 * 209, p923 * 401, p923 * 214, p923 * 385, p923 * 213);
    v1278.bezierCurveTo(p923 * 201.5, p923 * 213, p923 * 201.5, p923 * 213, p923 * 18, p923 * 213);
    v1278.bezierCurveTo(p923 * 3, p923 * 213, p923 * 2, p923 * 213, p923 * 4, p923 * 198);
    v1278.bezierCurveTo(p923 * 12.5, p923 * 193, p923 * 12.5, p923 * 193, p923 * 21, p923 * 188);
    v1278.closePath();
    f86(v1278, p925[3], p925[1], p923 * 12);
    f87(v1278, p923 * 41, p923 * 30, p923 * 14.7648230602334);
    f86(v1278, p925[3], p925[1], p923 * 12);
    f87(v1278, p923 * 369, p923 * 30, p923 * 15.556349186104045);
    f86(v1278, p925[3], p925[1], p923 * 12);
    f87(v1278, p923 * 364, p923 * 190, p923 * 15.620499351813308);
    f86(v1278, p925[3], p925[1], p923 * 12);
    f87(v1278, p923 * 41, p923 * 186, p923 * 15.556349186104045);
    f86(v1278, p925[3], p925[1], p923 * 12);
    return v1277;
  }
  function f233(p926, p927, p928) {
    var v1279 = document.createElement("canvas");
    var v1280 = v1279.getContext("2d");
    v1279.width = p926 * 145;
    v1279.height = p926 * 120;
    v1280.beginPath();
    v1280.scale(0.6, 0.6);
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.translate(p926 * 18, p926 * -8);
    v1280.moveTo(p926 * 101, p926 * 72);
    v1280.bezierCurveTo(p926 * 144, p926 * 69, p926 * 149, p926 * 58, p926 * 162, p926 * 49);
    v1280.bezierCurveTo(p926 * 174, p926 * 31, p926 * 173, p926 * 38, p926 * 172, p926 * 45);
    v1280.bezierCurveTo(p926 * 168, p926 * 73, p926 * 158, p926 * 75, p926 * 152, p926 * 78);
    v1280.bezierCurveTo(p926 * 106, p926 * 89, p926 * 107, p926 * 91, p926 * 107, p926 * 94);
    v1280.bezierCurveTo(p926 * 107, p926 * 100, p926 * 107, p926 * 107, p926 * 107, p926 * 107);
    v1280.bezierCurveTo(p926 * 99, p926 * 112, p926 * 98, p926 * 110, p926 * 93, p926 * 107);
    v1280.bezierCurveTo(p926 * 94, p926 * 107, p926 * 93, p926 * 107, p926 * 93, p926 * 107);
    v1280.bezierCurveTo(p926 * 93, p926 * 100, p926 * 93, p926 * 100, p926 * 92, p926 * 94);
    v1280.bezierCurveTo(p926 * 92, p926 * 89, p926 * 90, p926 * 90, p926 * 73, p926 * 86);
    v1280.bezierCurveTo(p926 * 45, p926 * 81, p926 * 40, p926 * 77, p926 * 35, p926 * 68);
    v1280.bezierCurveTo(p926 * 23, p926 * 36, p926 * 28, p926 * 34, p926 * 36, p926 * 46);
    v1280.bezierCurveTo(p926 * 45, p926 * 58, p926 * 83, p926 * 72, p926 * 98, p926 * 72);
    v1280.closePath();
    f86(v1280, p928[4], p928[5], p926 * 4);
    v1280.beginPath();
    v1280.scale(1.1, 1.1);
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.translate(p926 * -9, p926 * 4);
    v1280.moveTo(p926 * 101, p926 * 72);
    v1280.bezierCurveTo(p926 * 144, p926 * 69, p926 * 149, p926 * 58, p926 * 162, p926 * 49);
    v1280.bezierCurveTo(p926 * 174, p926 * 31, p926 * 173, p926 * 38, p926 * 172, p926 * 45);
    v1280.bezierCurveTo(p926 * 168, p926 * 73, p926 * 158, p926 * 75, p926 * 152, p926 * 78);
    v1280.bezierCurveTo(p926 * 106, p926 * 89, p926 * 107, p926 * 91, p926 * 107, p926 * 94);
    v1280.bezierCurveTo(p926 * 107, p926 * 100, p926 * 107, p926 * 107, p926 * 107, p926 * 107);
    v1280.bezierCurveTo(p926 * 99, p926 * 112, p926 * 98, p926 * 110, p926 * 93, p926 * 107);
    v1280.bezierCurveTo(p926 * 94, p926 * 107, p926 * 93, p926 * 107, p926 * 93, p926 * 107);
    v1280.bezierCurveTo(p926 * 93, p926 * 100, p926 * 93, p926 * 100, p926 * 92, p926 * 94);
    v1280.bezierCurveTo(p926 * 92, p926 * 89, p926 * 90, p926 * 90, p926 * 73, p926 * 86);
    v1280.bezierCurveTo(p926 * 45, p926 * 81, p926 * 40, p926 * 77, p926 * 35, p926 * 68);
    v1280.bezierCurveTo(p926 * 23, p926 * 36, p926 * 28, p926 * 34, p926 * 36, p926 * 46);
    v1280.bezierCurveTo(p926 * 45, p926 * 58, p926 * 83, p926 * 72, p926 * 98, p926 * 72);
    v1280.closePath();
    f86(v1280, p928[4], p928[5], p926 * 4);
    v1280.scale(1.1, 1.1);
    v1280.translate(p926 * -9, p926 * 4);
    v1280.save();
    v1280.translate(p926 * 100, p926 * 73.06874084472656);
    v1280.rotate(0);
    f89(v1280, p926 * -61, p926 * -38.5, p926 * 122, p926 * 40, p926 * 20);
    v1280.restore();
    f86(v1280, p928[1], p928[2], p926 * 4);
    v1280.save();
    v1280.translate(p926 * 100, p926 * 71.36874389648438);
    v1280.rotate(0);
    f89(v1280, p926 * -60.5, p926 * -18, p926 * 121, p926 * 30, p926 * 20);
    v1280.restore();
    f86(v1280, p928[3], p928[2], p926 * 4);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 144, p926 * 80);
    v1280.bezierCurveTo(p926 * 152, p926 * 100, p926 * 152, p926 * 101, p926 * 153, p926 * 102);
    v1280.bezierCurveTo(p926 * 159, p926 * 100, p926 * 159, p926 * 100, p926 * 160, p926 * 100);
    v1280.bezierCurveTo(p926 * 161, p926 * 84, p926 * 161, p926 * 84, p926 * 162, p926 * 68);
    v1280.closePath();
    f86(v1280, p928[2]);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 57, p926 * 75);
    v1280.bezierCurveTo(p926 * 48, p926 * 101, p926 * 53, p926 * 89, p926 * 48, p926 * 102);
    v1280.bezierCurveTo(p926 * 44, p926 * 100, p926 * 44, p926 * 100, p926 * 39, p926 * 97);
    v1280.bezierCurveTo(p926 * 39, p926 * 83, p926 * 39, p926 * 83, p926 * 39, p926 * 69);
    v1280.closePath();
    f86(v1280, p928[2]);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 101, p926 * 72);
    v1280.bezierCurveTo(p926 * 144, p926 * 69, p926 * 149, p926 * 58, p926 * 162, p926 * 49);
    v1280.bezierCurveTo(p926 * 174, p926 * 31, p926 * 173, p926 * 38, p926 * 172, p926 * 45);
    v1280.bezierCurveTo(p926 * 168, p926 * 73, p926 * 158, p926 * 75, p926 * 152, p926 * 78);
    v1280.bezierCurveTo(p926 * 106, p926 * 89, p926 * 107, p926 * 91, p926 * 107, p926 * 94);
    v1280.bezierCurveTo(p926 * 107, p926 * 100, p926 * 107, p926 * 107, p926 * 107, p926 * 107);
    v1280.bezierCurveTo(p926 * 99, p926 * 112, p926 * 98, p926 * 110, p926 * 93, p926 * 107);
    v1280.bezierCurveTo(p926 * 94, p926 * 107, p926 * 93, p926 * 107, p926 * 93, p926 * 107);
    v1280.bezierCurveTo(p926 * 93, p926 * 100, p926 * 93, p926 * 100, p926 * 92, p926 * 94);
    v1280.bezierCurveTo(p926 * 92, p926 * 89, p926 * 90, p926 * 90, p926 * 73, p926 * 86);
    v1280.bezierCurveTo(p926 * 45, p926 * 81, p926 * 40, p926 * 77, p926 * 35, p926 * 68);
    v1280.bezierCurveTo(p926 * 23, p926 * 36, p926 * 28, p926 * 34, p926 * 36, p926 * 46);
    v1280.bezierCurveTo(p926 * 45, p926 * 58, p926 * 83, p926 * 72, p926 * 98, p926 * 72);
    v1280.closePath();
    f86(v1280, p928[4], p928[5], p926 * 4);
    v1280.translate(0, 0);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 115.5, p926 * 116.07290649414062);
    v1280.bezierCurveTo(p926 * 159.5, p926 * 99.07290649414062, p926 * 159.5, p926 * 98.07290649414062, p926 * 159.5, p926 * 98.07290649414062);
    v1280.bezierCurveTo(p926 * 155.5, p926 * 116.07290649414062, p926 * 159.5, p926 * 116.07290649414062, p926 * 159.5, p926 * 118.07290649414062);
    v1280.bezierCurveTo(p926 * 147.5, p926 * 130.07290649414062, p926 * 136.5, p926 * 132.07290649414062, p926 * 115.5, p926 * 138.07290649414062);
    v1280.closePath();
    f86(v1280, p928[3], p928[2], p926 * 4);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 39.5, p926 * 96.07290649414062);
    v1280.bezierCurveTo(p926 * 85.5, p926 * 114.07290649414062, p926 * 62.5, p926 * 105.57290649414062, p926 * 85.5, p926 * 115.07290649414062);
    v1280.bezierCurveTo(p926 * 85.5, p926 * 125.57290649414062, p926 * 85.5, p926 * 125.57290649414062, p926 * 85.5, p926 * 136.07290649414062);
    v1280.bezierCurveTo(p926 * 51.5, p926 * 129.07290649414062, p926 * 51.5, p926 * 125.07290649414062, p926 * 41.5, p926 * 118.07290649414062);
    v1280.bezierCurveTo(p926 * 44.5, p926 * 106.07290649414062, p926 * 42.5, p926 * 103.07290649414062, p926 * 40.5, p926 * 96.07290649414062);
    v1280.closePath();
    f86(v1280, p928[3], p928[2], p926 * 4);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 86, p926 * 80);
    v1280.bezierCurveTo(p926 * 97, p926 * 88, p926 * 106, p926 * 84, p926 * 112, p926 * 80);
    v1280.bezierCurveTo(p926 * 112, p926 * 62, p926 * 106, p926 * 59, p926 * 99, p926 * 54);
    v1280.bezierCurveTo(p926 * 86, p926 * 62, p926 * 86, p926 * 73, p926 * 86, p926 * 80);
    v1280.closePath();
    f86(v1280, p928[3], p928[2], p926 * 4);
    v1280.scale(0.5, 0.5);
    v1280.translate(p926 * 100, p926 * 71);
    v1280.beginPath();
    v1280.lineCap = "round";
    v1280.lineJoin = "round";
    v1280.moveTo(p926 * 86, p926 * 80);
    v1280.bezierCurveTo(p926 * 97, p926 * 88, p926 * 106, p926 * 84, p926 * 112, p926 * 80);
    v1280.bezierCurveTo(p926 * 112, p926 * 62, p926 * 106, p926 * 59, p926 * 99, p926 * 54);
    v1280.bezierCurveTo(p926 * 86, p926 * 62, p926 * 86, p926 * 73, p926 * 86, p926 * 80);
    v1280.closePath();
    f86(v1280, p928[6], p928[2], p926 * 4);
    return v1279;
  }
  function f234(p929, p930) {
    var v1281 = document.createElement("canvas");
    var v1282 = v1281.getContext("2d");
    v1281.width = p929 * 20;
    v1281.height = p929 * 35;
    f89(v1282, 0, 0, 20, 35, 7);
    f86(v1282, p930[0]);
    return v1281;
  }
  function f235(p931, p932, p933) {
    var v1283 = document.createElement("canvas");
    var v1284 = v1283.getContext("2d");
    v1283.width = p931 * 202;
    v1283.height = p931 * 202;
    v1284.translate(p931 * 2, p931 * 1);
    v1284.globalAlpha = 0.3;
    f87(v1284, p931 * 98, p931 * 99, p931 * 100);
    f86(v1284, p933[0]);
    v1284.globalAlpha = 0.5;
    f87(v1284, p931 * 98, p931 * 99, p931 * 90);
    f86(v1284, p933[1]);
    return v1283;
  }
  function f236(p934, p935) {
    var v1285 = document.createElement("canvas");
    var v1286 = v1285.getContext("2d");
    v1285.width = p934 * 120;
    v1285.height = p934 * 330;
    v1286.translate(p934 * -60, p934 * -10);
    v1286.beginPath();
    v1286.lineCap = "round";
    v1286.lineJoin = "round";
    v1286.moveTo(p934 * 188.5, p934 * 7.953125);
    v1286.bezierCurveTo(p934 * 188.5, p934 * 334.953125, p934 * 188.5, p934 * 332.953125, p934 * 188.5, p934 * 339.953125);
    v1286.bezierCurveTo(p934 * 166.5, p934 * 295.953125, p934 * 145.5, p934 * 295.953125, p934 * 139.5, p934 * 282.953125);
    v1286.bezierCurveTo(p934 * 124.5, p934 * 244.953125, p934 * 139.5, p934 * 243.953125, p934 * 131.5, p934 * 212.953125);
    v1286.bezierCurveTo(p934 * 118.5, p934 * 161.953125, p934 * 69.5, p934 * 156.953125, p934 * 74.5, p934 * 92.953125);
    v1286.bezierCurveTo(p934 * 85.5, p934 * 41.953125, p934 * 158.5, p934 * 49.953125, p934 * 188.5, p934 * 7.953125);
    v1286.closePath();
    f86(v1286, p935[0]);
    return v1285;
  }
  function f237(p936, p937, p938) {
    var v1287 = document.createElement("canvas");
    var v1288 = v1287.getContext("2d");
    v1287.width = p936 * 142;
    v1287.height = p936 * 118;
    v1288.save();
    v1288.translate(p936 * 70.16665649414062, p936 * 38.20831298828125);
    f89(v1288, p936 * -58.5, p936 * -27.5, p936 * 117, p936 * 55, p936 * 20);
    v1288.restore();
    f86(v1288, p938[0], p938[1], p936 * 4);
    v1288.save();
    v1288.translate(p936 * 70, p936 * 42.70831298828125);
    f89(v1288, p936 * -61, p936 * -20, p936 * 122, p936 * 40, p936 * 20);
    v1288.restore();
    f86(v1288, p938[2], p938[1], p936 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p936 * 123, p936 * 70.375);
    v1288.bezierCurveTo(p936 * 115, p936 * 99.375, p936 * 119, p936 * 85.375, p936 * 115, p936 * 100.375);
    v1288.bezierCurveTo(p936 * 112, p936 * 116.375, p936 * 117, p936 * 109.375, p936 * 131, p936 * 100.375);
    v1288.bezierCurveTo(p936 * 131, p936 * 83.375, p936 * 131, p936 * 83.375, p936 * 131, p936 * 66.375);
    v1288.closePath();
    f86(v1288, p938[2], p938[1], p936 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p936 * 11, p936 * 68.375);
    v1288.bezierCurveTo(p936 * 11.166656494140625, p936 * 84.375, p936 * 9, p936 * 99.375, p936 * 10, p936 * 100.375);
    v1288.bezierCurveTo(p936 * 35, p936 * 113.375, p936 * 27, p936 * 110.375, p936 * 25, p936 * 95.375);
    v1288.bezierCurveTo(p936 * 16, p936 * 68.375, p936 * 17, p936 * 69.375, p936 * 17, p936 * 68.375);
    v1288.closePath();
    f86(v1288, p938[2], p938[1], p936 * 4);
    v1288.beginPath();
    v1288.lineCap = "round";
    v1288.lineJoin = "round";
    v1288.moveTo(p936 * 46, p936 * 32.375);
    v1288.bezierCurveTo(p936 * 43, p936 * 8.375, p936 * 45, p936 * 7.375, p936 * 56, p936 * 6.375);
    v1288.bezierCurveTo(p936 * 105, p936 * 4.375, p936 * 102, p936 * 6.375, p936 * 97, p936 * 32.375);
    v1288.bezierCurveTo(p936 * 138, p936 * 43.375, p936 * 133, p936 * 45.375, p936 * 133, p936 * 58.375);
    v1288.bezierCurveTo(p936 * 133, p936 * 85.375, p936 * 125, p936 * 74.375, p936 * 111, p936 * 70.375);
    v1288.bezierCurveTo(p936 * 70, p936 * 69.875, p936 * 29, p936 * 69.375, p936 * 29, p936 * 69.375);
    v1288.bezierCurveTo(p936 * 7, p936 * 84.375, p936 * 7, p936 * 70.375, p936 * 7, p936 * 59.375);
    v1288.bezierCurveTo(p936 * 6, p936 * 28.375, p936 * 32, p936 * 39.375, p936 * 44, p936 * 32.375);
    v1288.closePath();
    f86(v1288, p938[2], p938[1], p936 * 4);
    f87(v1288, p936 * 71, p936 * 44.375, p936 * 16.55294535724685);
    f86(v1288, p938[2], p938[1], p936 * 4);
    f87(v1288, p936 * 71, p936 * 43.70831298828125, p936 * 8.94427190999916);
    f86(v1288, p938[2], p938[1], p936 * 4);
    return v1287;
  }
  function f238(p939, p940, p941) {
    var v1289 = document.createElement("canvas");
    var v1290 = v1289.getContext("2d");
    v1289.width = p939 * 202;
    v1289.height = p939 * 202;
    v1290.translate(p939 * 2, p939 * 1);
    v1290.globalAlpha = p940 ? 0.5 : 1;
    v1290.translate(0, p939 * 10);
    v1290.save();
    v1290.translate(p939 * 98, p939 * 41.15177917480469);
    v1290.rotate(0.8);
    f89(v1290, p939 * -16, p939 * -16.5, p939 * 32, p939 * 33, p939 * 7);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 98, p939 * 22.5089111328125);
    v1290.bezierCurveTo(p939 * 97.5, p939 * 41.5089111328125, p939 * 97.5, p939 * 41.5089111328125, p939 * 97, p939 * 60.5089111328125);
    f86(v1290, p941[2]);
    v1290.save();
    v1290.translate(p939 * 147.5, p939 * 69.5089111328125);
    v1290.rotate(0.2);
    f89(v1290, p939 * -15.5, p939 * -16, p939 * 31, p939 * 32, p939 * 7);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 163, p939 * 59.50892639160156);
    v1290.bezierCurveTo(p939 * 147, p939 * 69.50892639160156, p939 * 127, p939 * 82.50892639160156, p939 * 131, p939 * 79.50892639160156);
    f86(v1290, p941[2]);
    v1290.save();
    v1290.translate(p939 * 143.5, p939 * 128.2946319580078);
    v1290.rotate(1.24);
    f89(v1290, p939 * -16.5, p939 * -17.5, p939 * 33, p939 * 35, p939 * 7);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 162, p939 * 135.93748474121094);
    v1290.bezierCurveTo(p939 * 143.5, p939 * 128.43748474121094, p939 * 129, p939 * 120.93748474121094, p939 * 125, p939 * 120.93748474121094);
    f86(v1290, p941[2]);
    v1290.save();
    v1290.translate(p939 * 99, p939 * 156.08035278320312);
    v1290.rotate(0.84);
    f89(v1290, p939 * -18, p939 * -18, p939 * 36, p939 * 36, p939 * 7);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 98, p939 * 136.08035278320312);
    v1290.bezierCurveTo(p939 * 98, p939 * 156.08035278320312, p939 * 98, p939 * 156.08035278320312, p939 * 98, p939 * 176.08035278320312);
    f86(v1290, p941[2]);
    v1290.save();
    v1290.translate(p939 * 54, p939 * 72.22320556640625);
    v1290.rotate(1.32);
    f89(v1290, p939 * -18, p939 * -19, p939 * 36, p939 * 38, p939 * 7);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 34, p939 * 60.79463195800781);
    v1290.bezierCurveTo(p939 * 53.5, p939 * 72.29463195800781, p939 * 69, p939 * 79.79463195800781, p939 * 73, p939 * 83.79463195800781);
    f86(v1290, p941[2]);
    v1290.save();
    v1290.translate(p939 * 49, p939 * 127.29463195800781);
    v1290.rotate(1.76);
    f89(v1290, p939 * -20, p939 * -17.5, p939 * 40, p939 * 35, p939 * 7);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 30, p939 * 141.7946319580078);
    v1290.bezierCurveTo(p939 * 47, p939 * 130.2946319580078, p939 * 64, p939 * 119.79463195800781, p939 * 64, p939 * 118.79463195800781);
    f86(v1290, p941[2]);
    v1290.globalAlpha = 1;
    v1290.translate(0, p939 * -10);
    v1290.save();
    v1290.translate(p939 * 98, p939 * 41.15177917480469);
    v1290.rotate(0.8);
    f89(v1290, p939 * -16, p939 * -16.5, p939 * 32, p939 * 33, p939 * 7);
    v1290.restore();
    f86(v1290, p941[3], p941[4], p939 * 5);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 98, p939 * 22.5089111328125);
    v1290.bezierCurveTo(p939 * 97.5, p939 * 41.5089111328125, p939 * 97.5, p939 * 41.5089111328125, p939 * 97, p939 * 60.5089111328125);
    f86(v1290, undefined, p941[4], p939 * 5);
    v1290.save();
    v1290.translate(p939 * 147.5, p939 * 69.5089111328125);
    v1290.rotate(0.2);
    f89(v1290, p939 * -15.5, p939 * -16, p939 * 31, p939 * 32, p939 * 7);
    v1290.restore();
    f86(v1290, p941[3], p941[4], p939 * 5);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 163, p939 * 59.50892639160156);
    v1290.bezierCurveTo(p939 * 147, p939 * 69.50892639160156, p939 * 127, p939 * 82.50892639160156, p939 * 131, p939 * 79.50892639160156);
    f86(v1290, undefined, p941[4], p939 * 5);
    v1290.save();
    v1290.translate(p939 * 143.5, p939 * 128.2946319580078);
    v1290.rotate(1.24);
    f89(v1290, p939 * -16.5, p939 * -17.5, p939 * 33, p939 * 35, p939 * 7);
    v1290.restore();
    f86(v1290, p941[3], p941[4], p939 * 5);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 162, p939 * 135.93748474121094);
    v1290.bezierCurveTo(p939 * 143.5, p939 * 128.43748474121094, p939 * 129, p939 * 120.93748474121094, p939 * 125, p939 * 120.93748474121094);
    f86(v1290, vVUndefined26, p941[4], p939 * 5);
    v1290.save();
    v1290.translate(p939 * 99, p939 * 156.08035278320312);
    v1290.rotate(0.84);
    f89(v1290, p939 * -18, p939 * -18, p939 * 36, p939 * 36, p939 * 7);
    v1290.restore();
    f86(v1290, p941[3], p941[4], p939 * 5);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 98, p939 * 136.08035278320312);
    v1290.bezierCurveTo(p939 * 98, p939 * 156.08035278320312, p939 * 98, p939 * 156.08035278320312, p939 * 98, p939 * 176.08035278320312);
    f86(v1290, undefined, p941[4], p939 * 5);
    v1290.save();
    v1290.translate(p939 * 54, p939 * 72.22320556640625);
    v1290.rotate(1.32);
    f89(v1290, p939 * -18, p939 * -19, p939 * 36, p939 * 38, p939 * 7);
    v1290.restore();
    f86(v1290, p941[3], p941[4], p939 * 5);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 34, p939 * 60.79463195800781);
    v1290.bezierCurveTo(p939 * 53.5, p939 * 72.29463195800781, p939 * 69, p939 * 79.79463195800781, p939 * 73, p939 * 83.79463195800781);
    f86(v1290, vVVVVUndefined1972, p941[4], p939 * 5);
    v1290.save();
    v1290.translate(p939 * 49, p939 * 127.29463195800781);
    v1290.rotate(1.76);
    f89(v1290, p939 * -20, p939 * -17.5, p939 * 40, p939 * 35, p939 * 7);
    v1290.restore();
    f86(v1290, p941[3], p941[4], p939 * 5);
    v1290.beginPath();
    v1290.lineCap = "round";
    v1290.lineJoin = "round";
    v1290.moveTo(p939 * 30, p939 * 141.7946319580078);
    v1290.bezierCurveTo(p939 * 47, p939 * 130.2946319580078, p939 * 64, p939 * 119.79463195800781, p939 * 64, p939 * 118.79463195800781);
    f86(v1290, vVVUndefined27, p941[4], p939 * 5);
    v1290.globalAlpha = p940 ? 0.5 : 1;
    v1290.translate(0, p939 * 10);
    v1290.save();
    v1290.translate(p939 * 98, p939 * 99);
    f92(v1290, 6, p939 * 70.28669492273468, p939 * 10);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.save();
    v1290.translate(p939 * 98, p939 * 99);
    f92(v1290, 6, p939 * 56.455940020351264, p939 * 10);
    v1290.restore();
    f86(v1290, p941[2]);
    v1290.globalAlpha = 1;
    v1290.translate(0, p939 * -10);
    v1290.save();
    v1290.translate(p939 * 98, p939 * 99);
    f92(v1290, 6, p939 * 70.28669492273468, p939 * 10);
    v1290.restore();
    f86(v1290, p941[5], p941[6], p939 * 5);
    v1290.save();
    v1290.translate(p939 * 98, p939 * 99);
    f92(v1290, 6, p939 * 56.455940020351264, p939 * 10);
    v1290.restore();
    f86(v1290, p941[7], p941[8], p939 * 7);
    return v1289;
  }
  function f239(p942, p943, p944) {
    var v1291 = document.createElement("canvas");
    var v1292 = v1291.getContext("2d");
    v1291.width = p942 * 175;
    v1291.height = p942 * 106;
    v1292.globalAlpha = p943 ? 0.5 : 1;
    v1292.translate(0, p942 * 8);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 28, p942 * 67);
    v1292.bezierCurveTo(p942 * 55, p942 * 80, p942 * 126, p942 * 74, p942 * 144, p942 * 68);
    v1292.bezierCurveTo(p942 * 144.5, p942 * 75, p942 * 144.5, p942 * 75, p942 * 145, p942 * 82);
    v1292.bezierCurveTo(p942 * 114, p942 * 94, p942 * 47, p942 * 91, p942 * 28, p942 * 82);
    v1292.closePath();
    f86(v1292, p944[0]);
    v1292.globalAlpha = 1;
    v1292.translate(0, p942 * -8);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 145, p942 * 75);
    v1292.bezierCurveTo(p942 * 143, p942 * 51, p942 * 133, p942 * 29, p942 * 100, p942 * 27);
    v1292.bezierCurveTo(p942 * 52, p942 * 21, p942 * 37, p942 * 37, p942 * 31, p942 * 54);
    v1292.bezierCurveTo(p942 * 23, p942 * 78, p942 * 28, p942 * 77, p942 * 36, p942 * 79);
    v1292.bezierCurveTo(p942 * 80, p942 * 87, p942 * 120, p942 * 81, p942 * 145, p942 * 76);
    v1292.closePath();
    f86(v1292, p944[1]);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 38, p942 * 46);
    v1292.bezierCurveTo(p942 * 52, p942 * 37, p942 * 69, p942 * 36, p942 * 85, p942 * 36);
    v1292.bezierCurveTo(p942 * 118, p942 * 38, p942 * 129, p942 * 42, p942 * 137, p942 * 48);
    v1292.bezierCurveTo(p942 * 135, p942 * 45, p942 * 135, p942 * 45, p942 * 133, p942 * 42);
    v1292.bezierCurveTo(p942 * 124, p942 * 32, p942 * 116, p942 * 28, p942 * 88, p942 * 25);
    v1292.bezierCurveTo(p942 * 47, p942 * 28, p942 * 40, p942 * 32, p942 * 36, p942 * 44);
    v1292.closePath();
    f86(v1292, p944[5]);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 145, p942 * 75);
    v1292.bezierCurveTo(p942 * 143, p942 * 51, p942 * 133, p942 * 29, p942 * 100, p942 * 27);
    v1292.bezierCurveTo(p942 * 52, p942 * 21, p942 * 37, p942 * 37, p942 * 31, p942 * 54);
    v1292.bezierCurveTo(p942 * 23, p942 * 78, p942 * 28, p942 * 77, p942 * 36, p942 * 79);
    v1292.bezierCurveTo(p942 * 80, p942 * 87, p942 * 120, p942 * 81, p942 * 145, p942 * 76);
    v1292.closePath();
    f86(v1292, undefined, p944[2], p942 * 4);
    v1292.translate(0, p942 * -3);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 28, p942 * 67);
    v1292.bezierCurveTo(p942 * 55, p942 * 80, p942 * 126, p942 * 74, p942 * 144, p942 * 68);
    v1292.bezierCurveTo(p942 * 144.5, p942 * 75, p942 * 144.5, p942 * 75, p942 * 145, p942 * 82);
    v1292.bezierCurveTo(p942 * 114, p942 * 94, p942 * 47, p942 * 91, p942 * 28, p942 * 82);
    v1292.closePath();
    f86(v1292, p944[10], p944[10], p942 * 4);
    v1292.translate(0, p942 * 3);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 131, p942 * 43);
    v1292.bezierCurveTo(p942 * 145, p942 * 40, p942 * 148, p942 * 32, p942 * 147, p942 * 17);
    v1292.bezierCurveTo(p942 * 166, p942 * 39, p942 * 155, p942 * 62, p942 * 140, p942 * 67);
    v1292.bezierCurveTo(p942 * 128, p942 * 65, p942 * 128, p942 * 52, p942 * 131, p942 * 45);
    v1292.closePath();
    f86(v1292, p944[3]);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 41, p942 * 43);
    v1292.bezierCurveTo(p942 * 30, p942 * 42, p942 * 24, p942 * 33, p942 * 25, p942 * 17);
    v1292.bezierCurveTo(p942 * 7, p942 * 34, p942 * 17, p942 * 63, p942 * 33, p942 * 66);
    v1292.bezierCurveTo(p942 * 45, p942 * 59, p942 * 44, p942 * 53, p942 * 42, p942 * 44);
    v1292.closePath();
    f86(v1292, p944[3]);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 24, p942 * 19);
    v1292.bezierCurveTo(p942 * 24, p942 * 35, p942 * 35, p942 * 42, p942 * 42, p942 * 44);
    v1292.bezierCurveTo(p942 * 43, p942 * 51, p942 * 43, p942 * 48, p942 * 43, p942 * 56);
    v1292.bezierCurveTo(p942 * 25, p942 * 47, p942 * 17, p942 * 36, p942 * 23, p942 * 20);
    v1292.closePath();
    f86(v1292, p944[6]);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 148, p942 * 18);
    v1292.bezierCurveTo(p942 * 159, p942 * 44, p942 * 139, p942 * 52, p942 * 130, p942 * 55);
    v1292.bezierCurveTo(p942 * 129, p942 * 48, p942 * 129, p942 * 46, p942 * 131, p942 * 43);
    v1292.bezierCurveTo(p942 * 144, p942 * 37, p942 * 148, p942 * 35, p942 * 147, p942 * 18);
    v1292.closePath();
    f86(v1292, p944[6]);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 131, p942 * 43);
    v1292.bezierCurveTo(p942 * 145, p942 * 40, p942 * 148, p942 * 32, p942 * 147, p942 * 17);
    v1292.bezierCurveTo(p942 * 166, p942 * 39, p942 * 155, p942 * 62, p942 * 140, p942 * 67);
    v1292.bezierCurveTo(p942 * 128, p942 * 65, p942 * 128, p942 * 52, p942 * 131, p942 * 45);
    v1292.closePath();
    f86(v1292, vVVUndefined273, p944[4], p942 * 4);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 41, p942 * 43);
    v1292.bezierCurveTo(p942 * 30, p942 * 42, p942 * 24, p942 * 33, p942 * 25, p942 * 17);
    v1292.bezierCurveTo(p942 * 7, p942 * 34, p942 * 17, p942 * 63, p942 * 33, p942 * 66);
    v1292.bezierCurveTo(p942 * 45, p942 * 59, p942 * 44, p942 * 53, p942 * 42, p942 * 44);
    v1292.closePath();
    f86(v1292, vVVUndefined197, p944[4], p942 * 4);
    v1292.save();
    v1292.translate(p942 * 87, p942 * 34.5);
    v1292.rotate(0);
    f89(v1292, p942 * -8, p942 * -10.5, p942 * 16, p942 * 21, p942 * 10);
    v1292.restore();
    f86(v1292, p944[7], p944[2], p942 * 4);
    v1292.save();
    v1292.translate(p942 * 87, p942 * 57);
    v1292.rotate(0);
    f89(v1292, p942 * -8, p942 * -23, p942 * 16, p942 * 46, p942 * 10);
    v1292.restore();
    f86(v1292, p944[8], p944[2], p942 * 4);
    f87(v1292, p942 * 87, p942 * 39, p942 * 4.123105625617661);
    f86(v1292, p944[9], p944[2], p942 * 4);
    f87(v1292, p942 * 87, p942 * 60, p942 * 4.242640687119285);
    f86(v1292, p944[9], p944[2], p942 * 4);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 28, p942 * 67);
    v1292.bezierCurveTo(p942 * 55, p942 * 80, p942 * 126, p942 * 74, p942 * 144, p942 * 68);
    v1292.bezierCurveTo(p942 * 144.5, p942 * 75, p942 * 144.5, p942 * 75, p942 * 145, p942 * 82);
    v1292.bezierCurveTo(p942 * 114, p942 * 94, p942 * 47, p942 * 91, p942 * 28, p942 * 82);
    v1292.closePath();
    f86(v1292, p944[8], p944[2], p942 * 4);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 27, p942 * 69);
    v1292.bezierCurveTo(p942 * 13, p942 * 77, p942 * 16, p942 * 74, p942 * 27, p942 * 80);
    v1292.closePath();
    f86(v1292, p944[9], p944[2], p942 * 4);
    v1292.beginPath();
    v1292.lineCap = "round";
    v1292.lineJoin = "round";
    v1292.moveTo(p942 * 145, p942 * 70);
    v1292.bezierCurveTo(p942 * 149.5, p942 * 72, p942 * 149.5, p942 * 72, p942 * 154, p942 * 74);
    v1292.bezierCurveTo(p942 * 150, p942 * 77, p942 * 150, p942 * 77, p942 * 146, p942 * 80);
    v1292.closePath();
    f86(v1292, p944[9], p944[2], p942 * 4);
    f87(v1292, p942 * 50, p942 * 80, p942 * 5);
    f86(v1292, p944[9], p944[2], p942 * 4);
    f87(v1292, p942 * 86.01141357421875, p942 * 81.76705932617188, p942 * 5);
    f86(v1292, p944[9], p944[2], p942 * 4);
    f87(v1292, p942 * 119.01141357421875, p942 * 80.13069152832031, p942 * 5);
    f86(v1292, p944[9], p944[2], p942 * 4);
    return v1291;
  }
  function f240(p945, p946, p947) {
    var v1293 = document.createElement("canvas");
    var v1294 = v1293.getContext("2d");
    v1293.width = p945 * 92;
    v1293.height = p945 * 108;
    v1294.beginPath();
    v1294.lineCap = "round";
    v1294.lineJoin = "round";
    v1294.moveTo(p945 * 31, p945 * 10);
    v1294.bezierCurveTo(p945 * 37, p945 * 2, p945 * 49, p945 * 0, p945 * 61, p945 * 15);
    v1294.bezierCurveTo(p945 * 81, p945 * 31, p945 * 78, p945 * 25, p945 * 79, p945 * 37);
    v1294.bezierCurveTo(p945 * 76, p945 * 44, p945 * 81, p945 * 56, p945 * 85, p945 * 63);
    v1294.bezierCurveTo(p945 * 91, p945 * 71, p945 * 90, p945 * 78, p945 * 83, p945 * 84);
    v1294.bezierCurveTo(p945 * 60, p945 * 98, p945 * 67, p945 * 95, p945 * 57, p945 * 102);
    v1294.bezierCurveTo(p945 * 47, p945 * 106, p945 * 43, p945 * 106, p945 * 31, p945 * 98);
    v1294.bezierCurveTo(p945 * 22, p945 * 91, p945 * 17, p945 * 89, p945 * 7, p945 * 84);
    v1294.bezierCurveTo(p945 * 1, p945 * 77, p945 * 4, p945 * 73, p945 * 7, p945 * 60);
    v1294.bezierCurveTo(p945 * 11, p945 * 50, p945 * 5, p945 * 32, p945 * 15, p945 * 27);
    v1294.bezierCurveTo(p945 * 26, p945 * 18, p945 * 26, p945 * 24, p945 * 31, p945 * 10);
    v1294.closePath();
    f86(v1294, p947[0], p947[1], 4);
    return v1293;
  }
  function f241(p948, p949) {
    var v1295 = document.createElement("canvas");
    var v1296 = v1295.getContext("2d");
    v1295.width = p948 * 120;
    v1295.height = p948 * 300;
    v1296.translate(p948 * -80, -20);
    v1296.beginPath();
    v1296.lineCap = "round";
    v1296.lineJoin = "round";
    v1296.moveTo(p948 * 200.5, p948 * 14.953125);
    v1296.bezierCurveTo(p948 * 203, p948 * 171.953125, p948 * 203, p948 * 171.953125, p948 * 205.5, p948 * 328.953125);
    v1296.bezierCurveTo(p948 * 188.5, p948 * 257.953125, p948 * 164.5, p948 * 216.953125, p948 * 166.5, p948 * 176.953125);
    v1296.bezierCurveTo(p948 * 168.5, p948 * 133.953125, p948 * 198.5, p948 * 98.953125, p948 * 200.5, p948 * 14.953125);
    v1296.closePath();
    f86(v1296, p949[0]);
    return v1295;
  }
  function f242(p950, p951, p952) {
    var v1297 = document.createElement("canvas");
    var v1298 = v1297.getContext("2d");
    v1297.width = p950 * 165;
    v1297.height = p950 * 123;
    v1298.save();
    v1298.translate(p950 * 81, p950 * 65);
    f89(v1298, p950 * -78, p950 * -54.5, p950 * 156, p950 * 109, p950 * 20);
    v1298.restore();
    f86(v1298, p952[0]);
    v1298.save();
    v1298.translate(p950 * 81, p950 * 58);
    f89(v1298, p950 * -78, p950 * -54.5, p950 * 156, p950 * 109, p950 * 20);
    v1298.restore();
    f86(v1298, p952[1], p952[2], 4);
    v1298.save();
    v1298.translate(p950 * 81, p950 * 58);
    f89(v1298, p950 * -69, p950 * -47, p950 * 138, p950 * 93, p950 * 15);
    v1298.restore();
    f86(v1298, p952[3], p952[4], 4);
    v1298.save();
    v1298.translate(p950 * 79, p950 * 54);
    f89(v1298, p950 * -34, p950 * -40, p950 * 68, p950 * 88, p950 * 13);
    v1298.restore();
    f86(v1298, vVVVUndefined273, p952[5], 4);
    v1298.beginPath();
    v1298.lineCap = "round";
    v1298.lineJoin = "round";
    v1298.moveTo(p950 * 44, p950 * 13);
    v1298.bezierCurveTo(p950 * 43.5, p950 * 55, p950 * 43.5, p950 * 55, p950 * 43, p950 * 101);
    v1298.closePath();
    f86(v1298, undefined, p952[6], 4);
    v1298.beginPath();
    v1298.lineCap = "round";
    v1298.lineJoin = "round";
    v1298.moveTo(p950 * 115, p950 * 13);
    v1298.bezierCurveTo(p950 * 115, p950 * 56, p950 * 115, p950 * 56, p950 * 115, p950 * 101);
    v1298.closePath();
    f86(v1298, vVVVUndefined1975, p952[6], 4);
    v1298.beginPath();
    v1298.lineCap = "round";
    v1298.lineJoin = "round";
    v1298.moveTo(p950 * 35, p950 * 6);
    v1298.bezierCurveTo(p950 * 35, p950 * 56, p950 * 36, p950 * 109, p950 * 35, p950 * 110);
    v1298.closePath();
    f86(v1298, undefined, p952[7], 4);
    v1298.beginPath();
    v1298.lineCap = "round";
    v1298.lineJoin = "round";
    v1298.moveTo(p950 * 123, p950 * 6);
    v1298.bezierCurveTo(p950 * 123, p950 * 56, p950 * 123, p950 * 56, p950 * 123, p950 * 110);
    v1298.closePath();
    f86(v1298, vVVVVUndefined1972, p952[7], 4);
    v1298.save();
    v1298.translate(p950 * 79, p950 * 113);
    f89(v1298, p950 * -18, p950 * -2, p950 * 36, p950 * 4, p950 * 20);
    v1298.restore();
    f86(v1298, undefined, p952[8], 4);
    v1298.save();
    v1298.translate(p950 * 75, p950 * 118);
    f89(v1298, p950 * -6, p950 * -2.5, p950 * 20, p950 * 5, p950 * 20);
    v1298.restore();
    f86(v1298, p952[8]);
    return v1297;
  }
  function f243(p953, p954, p955) {
    var v1299 = document.createElement("canvas");
    var v1300 = v1299.getContext("2d");
    v1299.width = p953 * 450;
    v1299.height = p953 * 790;
    v1300.translate(p953 * 5, p953 * 5);
    v1300.globalAlpha = p954 ? 0 : 0;
    f87(v1300, p953 * 178.5, p953 * 172.828125, p953 * 150);
    f86(v1300, undefined, p955[0], p953 * 65);
    f87(v1300, p953 * 178.5, p953 * 172.828125, p953 * 150);
    f86(v1300, vVUndefined19, p955[0], p953 * 55);
    v1300.closePath();
    v1300.save();
    v1300.translate(p953 * 177, p953 * 512.328125);
    f89(v1300, p953 * -25, p953 * -202.5, p953 * 65, p953 * 405, p953 * 25);
    v1300.restore();
    f86(v1300, p955[0]);
    v1300.save();
    v1300.translate(p953 * 136, p953 * 581.828125);
    f89(v1300, p953 * -39, p953 * -23, p953 * 78, p953 * 46, p953 * 25);
    v1300.restore();
    f86(v1300, p955[0]);
    v1300.save();
    v1300.translate(p953 * 135.5, p953 * 663.828125);
    f89(v1300, p953 * -39.5, p953 * -22, p953 * 79, p953 * 44, p953 * 25);
    v1300.restore();
    f86(v1300, p955[0]);
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.moveTo(p953 * 114, p953 * 594.828125);
    v1300.bezierCurveTo(p953 * 175, p953 * 596.828125, p953 * 163, p953 * 596.828125, p953 * 172, p953 * 594.828125);
    v1300.bezierCurveTo(p953 * 171.5, p953 * 633.828125, p953 * 171.5, p953 * 633.828125, p953 * 171, p953 * 672.828125);
    v1300.bezierCurveTo(p953 * 110, p953 * 673.828125, p953 * 140.5, p953 * 673.328125, p953 * 110, p953 * 673.828125);
    v1300.bezierCurveTo(p953 * 110.5, p953 * 661.828125, p953 * 110.5, p953 * 661.828125, p953 * 111, p953 * 649.828125);
    v1300.bezierCurveTo(p953 * 157, p953 * 633.828125, p953 * 134, p953 * 607.828125, p953 * 114, p953 * 594.828125);
    v1300.closePath();
    f86(v1300, p955[0]);
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.translate(0, p953 * 5);
    v1300.moveTo(p953 * 140, p953 * 294.828125);
    v1300.bezierCurveTo(p953 * 212, p953 * 295.828125, p953 * 176.5, p953 * 295.328125, p953 * 213, p953 * 295.828125);
    v1300.bezierCurveTo(p953 * 201.5, p953 * 325.328125, p953 * 201.5, p953 * 325.328125, p953 * 190, p953 * 354.828125);
    v1300.bezierCurveTo(p953 * 175.5, p953 * 355.828125, p953 * 175.5, p953 * 355.828125, p953 * 161, p953 * 356.828125);
    v1300.bezierCurveTo(p953 * 154.5, p953 * 328.828125, p953 * 154.5, p953 * 328.828125, p953 * 148, p953 * 300.828125);
    v1300.closePath();
    f86(v1300, p955[0]);
    v1300.translate(3, p953 * -5);
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.moveTo(p953 * 159, p953 * 679.828125);
    v1300.bezierCurveTo(p953 * 180, p953 * 665.828125, p953 * 155, p953 * 675.828125, p953 * 151, p953 * 671.828125);
    v1300.bezierCurveTo(p953 * 154.5, p953 * 685.328125, p953 * 154.5, p953 * 685.328125, p953 * 158, p953 * 698.828125);
    v1300.bezierCurveTo(p953 * 171, p953 * 699.828125, p953 * 171, p953 * 699.828125, p953 * 184, p953 * 700.828125);
    v1300.closePath();
    f86(v1300, p955[0]);
    v1300.save();
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.moveTo(p953 * 157, p953 * 548.828125);
    v1300.bezierCurveTo(p953 * 157, p953 * 561.828125, p953 * 157, p953 * 561.828125, p953 * 157, p953 * 574.828125);
    v1300.bezierCurveTo(p953 * 132.5, p953 * 580.828125, p953 * 132.5, p953 * 580.828125, p953 * 108, p953 * 586.828125);
    v1300.bezierCurveTo(p953 * 112, p953 * 599.828125, p953 * 111, p953 * 593.828125, p953 * 112, p953 * 599.828125);
    v1300.bezierCurveTo(p953 * 159, p953 * 603.828125, p953 * 126.5, p953 * 601.328125, p953 * 141, p953 * 602.828125);
    v1300.bezierCurveTo(p953 * 145, p953 * 641.828125, p953 * 143.5, p953 * 623.828125, p953 * 146, p953 * 644.828125);
    v1300.bezierCurveTo(p953 * 129.5, p953 * 645.328125, p953 * 129.5, p953 * 645.328125, p953 * 113, p953 * 645.828125);
    v1300.bezierCurveTo(p953 * 107.5, p953 * 652.828125, p953 * 107.5, p953 * 652.828125, p953 * 102, p953 * 659.828125);
    v1300.bezierCurveTo(p953 * 104, p953 * 669.328125, p953 * 104, p953 * 669.328125, p953 * 106, p953 * 678.828125);
    v1300.bezierCurveTo(p953 * 145, p953 * 679.328125, p953 * 145, p953 * 679.328125, p953 * 184, p953 * 679.828125);
    v1300.bezierCurveTo(p953 * 185, p953 * 615.828125, p953 * 185, p953 * 615.828125, p953 * 186, p953 * 551.828125);
    v1300.bezierCurveTo(p953 * 172.5, p953 * 551.328125, p953 * 172.5, p953 * 551.328125, p953 * 159, p953 * 550.828125);
    v1300.closePath();
    f86(v1300, p955[0], p955[0], p953 * 7);
    v1300.restore();
    v1300.globalAlpha = 1;
    v1300.translate(p953 * 15, p953 * 35);
    f87(v1300, p953 * 178.5, p953 * 172.828125, p953 * 150);
    f86(v1300, vVVVUndefined1972, p955[2], p953 * 95);
    f87(v1300, p953 * 178.5, p953 * 172.828125, p953 * 150);
    f86(v1300, vVVVUndefined1975, p955[1], p953 * 55);
    v1300.closePath();
    v1300.save();
    v1300.translate(p953 * 177, p953 * 512.328125);
    f89(v1300, p953 * -25, p953 * -202.5, p953 * 65, p953 * 405, p953 * 25);
    v1300.restore();
    f86(v1300, p955[1], p955[2], p953 * 20);
    v1300.save();
    v1300.translate(p953 * 136, p953 * 581.828125);
    f89(v1300, p953 * -39, p953 * -23, p953 * 78, p953 * 46, p953 * 25);
    v1300.restore();
    f86(v1300, p955[1], p955[2], p953 * 20);
    v1300.save();
    v1300.translate(p953 * 135.5, p953 * 663.828125);
    f89(v1300, p953 * -39.5, p953 * -22, p953 * 79, p953 * 44, p953 * 25);
    v1300.restore();
    f86(v1300, p955[1], p955[2], p953 * 20);
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.moveTo(p953 * 114, p953 * 594.828125);
    v1300.bezierCurveTo(p953 * 175, p953 * 596.828125, p953 * 163, p953 * 596.828125, p953 * 172, p953 * 594.828125);
    v1300.bezierCurveTo(p953 * 171.5, p953 * 633.828125, p953 * 171.5, p953 * 633.828125, p953 * 171, p953 * 672.828125);
    v1300.bezierCurveTo(p953 * 110, p953 * 673.828125, p953 * 140.5, p953 * 673.328125, p953 * 110, p953 * 673.828125);
    v1300.bezierCurveTo(p953 * 110.5, p953 * 661.828125, p953 * 110.5, p953 * 661.828125, p953 * 111, p953 * 649.828125);
    v1300.bezierCurveTo(p953 * 157, p953 * 633.828125, p953 * 134, p953 * 607.828125, p953 * 114, p953 * 594.828125);
    v1300.closePath();
    f86(v1300, p955[1]);
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.translate(0, p953 * 5);
    v1300.moveTo(p953 * 123, p953 * 294.828125);
    v1300.bezierCurveTo(p953 * 212, p953 * 295.828125, p953 * 190.5, p953 * 295.328125, p953 * 250, p953 * 295.828125);
    v1300.bezierCurveTo(p953 * 231.5, p953 * 325.328125, p953 * 231.5, p953 * 325.328125, p953 * 220, p953 * 354.828125);
    v1300.bezierCurveTo(p953 * 175.5, p953 * 355.828125, p953 * 175.5, p953 * 355.828125, p953 * 140, p953 * 356.828125);
    v1300.bezierCurveTo(p953 * 123.5, p953 * 328.828125, p953 * 123.5, p953 * 328.828125, p953 * 123, p953 * 294.828125);
    v1300.closePath();
    f86(v1300, p955[1]);
    v1300.translate(0, p953 * -5);
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.moveTo(p953 * 159, p953 * 679.828125);
    v1300.bezierCurveTo(p953 * 180, p953 * 665.828125, p953 * 155, p953 * 675.828125, p953 * 151, p953 * 671.828125);
    v1300.bezierCurveTo(p953 * 154.5, p953 * 685.328125, p953 * 154.5, p953 * 685.328125, p953 * 158, p953 * 698.828125);
    v1300.bezierCurveTo(p953 * 171, p953 * 699.828125, p953 * 171, p953 * 699.828125, p953 * 184, p953 * 700.828125);
    v1300.closePath();
    f86(v1300, p955[1]);
    v1300.save();
    v1300.beginPath();
    v1300.lineCap = "round";
    v1300.lineJoin = "round";
    v1300.moveTo(p953 * 157, p953 * 548.828125);
    v1300.bezierCurveTo(p953 * 157, p953 * 561.828125, p953 * 157, p953 * 561.828125, p953 * 157, p953 * 574.828125);
    v1300.bezierCurveTo(p953 * 132.5, p953 * 580.828125, p953 * 132.5, p953 * 580.828125, p953 * 108, p953 * 586.828125);
    v1300.bezierCurveTo(p953 * 112, p953 * 599.828125, p953 * 111, p953 * 593.828125, p953 * 112, p953 * 599.828125);
    v1300.bezierCurveTo(p953 * 159, p953 * 603.828125, p953 * 126.5, p953 * 601.328125, p953 * 141, p953 * 602.828125);
    v1300.bezierCurveTo(p953 * 145, p953 * 641.828125, p953 * 143.5, p953 * 623.828125, p953 * 146, p953 * 644.828125);
    v1300.bezierCurveTo(p953 * 129.5, p953 * 645.328125, p953 * 129.5, p953 * 645.328125, p953 * 113, p953 * 645.828125);
    v1300.bezierCurveTo(p953 * 107.5, p953 * 652.828125, p953 * 107.5, p953 * 652.828125, p953 * 102, p953 * 659.828125);
    v1300.bezierCurveTo(p953 * 104, p953 * 669.328125, p953 * 104, p953 * 669.328125, p953 * 106, p953 * 678.828125);
    v1300.bezierCurveTo(p953 * 145, p953 * 679.328125, p953 * 145, p953 * 679.328125, p953 * 184, p953 * 679.828125);
    v1300.bezierCurveTo(p953 * 185, p953 * 615.828125, p953 * 185, p953 * 615.828125, p953 * 186, p953 * 551.828125);
    v1300.bezierCurveTo(p953 * 172.5, p953 * 551.328125, p953 * 172.5, p953 * 551.328125, p953 * 159, p953 * 550.828125);
    v1300.closePath();
    f86(v1300, p955[1], p955[1], p953 * 7);
    v1300.restore();
    return v1299;
  }
  function f244(p956, p957, p958) {
    var v1301 = document.createElement("canvas");
    var v1302 = v1301.getContext("2d");
    v1301.width = p956 * 450;
    v1301.height = p956 * 260;
    v1302.translate(p956 * 10, p956 * 10);
    if (p958 == 1) {
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 9, p956 * 5);
      v1302.bezierCurveTo(p956 * 381, p956 * 2, p956 * 197, p956 * 4.5, p956 * 385, p956 * 4);
      v1302.bezierCurveTo(p956 * 397, p956 * 4, p956 * 401, p956 * 4, p956 * 399, p956 * 23);
      v1302.bezierCurveTo(p956 * 367, p956 * 27, p956 * 367, p956 * 27, p956 * 335, p956 * 31);
      v1302.bezierCurveTo(p956 * 366.5, p956 * 33.5, p956 * 366.5, p956 * 33.5, p956 * 398, p956 * 36);
      v1302.bezierCurveTo(p956 * 398, p956 * 41.5, p956 * 398, p956 * 41.5, p956 * 398, p956 * 47);
      v1302.bezierCurveTo(p956 * 398, p956 * 56, p956 * 399, p956 * 56, p956 * 386, p956 * 56);
      v1302.bezierCurveTo(p956 * 200.5, p956 * 56.5, p956 * 200.5, p956 * 56.5, p956 * 15, p956 * 57);
      v1302.bezierCurveTo(p956 * 2, p956 * 55, p956 * 4, p956 * 52, p956 * 4, p956 * 43);
      v1302.bezierCurveTo(p956 * 4, p956 * 30.5, p956 * 4, p956 * 30.5, p956 * 4, p956 * 18);
      v1302.bezierCurveTo(p956 * 16, p956 * 18.5, p956 * 16, p956 * 18.5, p956 * 28, p956 * 19);
      v1302.bezierCurveTo(p956 * 18.5, p956 * 12, p956 * 18.5, p956 * 12, p956 * 9, p956 * 5);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 5, p956 * 70);
      v1302.bezierCurveTo(p956 * 5, p956 * 58, p956 * 5, p956 * 55, p956 * 17, p956 * 57);
      v1302.bezierCurveTo(p956 * 203, p956 * 57, p956 * 203, p956 * 57, p956 * 389, p956 * 57);
      v1302.bezierCurveTo(p956 * 400, p956 * 57, p956 * 400, p956 * 59, p956 * 400, p956 * 69);
      v1302.bezierCurveTo(p956 * 400.5, p956 * 83.5, p956 * 400.5, p956 * 83.5, p956 * 401, p956 * 98);
      v1302.bezierCurveTo(p956 * 402, p956 * 108, p956 * 401, p956 * 108, p956 * 388, p956 * 108);
      v1302.bezierCurveTo(p956 * 201.5, p956 * 108, p956 * 201.5, p956 * 108, p956 * 15, p956 * 108);
      v1302.bezierCurveTo(p956 * 1, p956 * 106, p956 * 5, p956 * 106, p956 * 5, p956 * 87);
      v1302.bezierCurveTo(p956 * 33, p956 * 84.5, p956 * 33, p956 * 84.5, p956 * 61, p956 * 82);
      v1302.bezierCurveTo(p956 * 33.5, p956 * 76.5, p956 * 33.5, p956 * 76.5, p956 * 6, p956 * 71);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 19, p956 * 158);
      v1302.bezierCurveTo(p956 * 2, p956 * 159, p956 * 4, p956 * 156, p956 * 5, p956 * 118);
      v1302.bezierCurveTo(p956 * 4, p956 * 110, p956 * 6, p956 * 107, p956 * 26, p956 * 109);
      v1302.bezierCurveTo(p956 * 206.5, p956 * 109, p956 * 206.5, p956 * 109, p956 * 387, p956 * 109);
      v1302.bezierCurveTo(p956 * 400, p956 * 108, p956 * 400, p956 * 108, p956 * 398, p956 * 127);
      v1302.bezierCurveTo(p956 * 384.5, p956 * 130, p956 * 384.5, p956 * 130, p956 * 371, p956 * 133);
      v1302.bezierCurveTo(p956 * 385.5, p956 * 138, p956 * 385.5, p956 * 138, p956 * 400, p956 * 143);
      v1302.bezierCurveTo(p956 * 402, p956 * 156, p956 * 402, p956 * 162, p956 * 385, p956 * 160);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 4, p956 * 183);
      v1302.bezierCurveTo(p956 * 1, p956 * 163, p956 * 4, p956 * 158, p956 * 28, p956 * 161);
      v1302.bezierCurveTo(p956 * 207.5, p956 * 161, p956 * 207.5, p956 * 161, p956 * 387, p956 * 161);
      v1302.bezierCurveTo(p956 * 401, p956 * 159, p956 * 400, p956 * 164, p956 * 400, p956 * 177);
      v1302.bezierCurveTo(p956 * 364.5, p956 * 184, p956 * 364.5, p956 * 184, p956 * 329, p956 * 191);
      v1302.bezierCurveTo(p956 * 364.5, p956 * 192.5, p956 * 364.5, p956 * 192.5, p956 * 400, p956 * 194);
      v1302.bezierCurveTo(p956 * 403, p956 * 209, p956 * 401, p956 * 214, p956 * 385, p956 * 213);
      v1302.bezierCurveTo(p956 * 201.5, p956 * 213, p956 * 201.5, p956 * 213, p956 * 18, p956 * 213);
      v1302.bezierCurveTo(p956 * 3, p956 * 213, p956 * 2, p956 * 213, p956 * 4, p956 * 198);
      v1302.bezierCurveTo(p956 * 12.5, p956 * 193, p956 * 12.5, p956 * 193, p956 * 21, p956 * 188);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 41, p956 * 30, p956 * 14.7648230602334);
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 369, p956 * 30, p956 * 15.556349186104045);
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 364, p956 * 190, p956 * 15.620499351813308);
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 41, p956 * 186, p956 * 15.556349186104045);
      f86(v1302, p957[3], p957[3], p956 * 32);
    } else if (p958 == 2) {
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 9, p956 * 5);
      v1302.bezierCurveTo(p956 * 381, p956 * 2, p956 * 197, p956 * 4.5, p956 * 385, p956 * 4);
      v1302.bezierCurveTo(p956 * 397, p956 * 4, p956 * 401, p956 * 4, p956 * 399, p956 * 23);
      v1302.bezierCurveTo(p956 * 367, p956 * 27, p956 * 367, p956 * 27, p956 * 335, p956 * 31);
      v1302.bezierCurveTo(p956 * 366.5, p956 * 33.5, p956 * 366.5, p956 * 33.5, p956 * 398, p956 * 36);
      v1302.bezierCurveTo(p956 * 398, p956 * 41.5, p956 * 398, p956 * 41.5, p956 * 398, p956 * 47);
      v1302.bezierCurveTo(p956 * 398, p956 * 56, p956 * 399, p956 * 56, p956 * 386, p956 * 56);
      v1302.bezierCurveTo(p956 * 200.5, p956 * 56.5, p956 * 200.5, p956 * 56.5, p956 * 15, p956 * 57);
      v1302.bezierCurveTo(p956 * 2, p956 * 55, p956 * 4, p956 * 52, p956 * 4, p956 * 43);
      v1302.bezierCurveTo(p956 * 4, p956 * 30.5, p956 * 4, p956 * 30.5, p956 * 4, p956 * 18);
      v1302.bezierCurveTo(p956 * 16, p956 * 18.5, p956 * 16, p956 * 18.5, p956 * 28, p956 * 19);
      v1302.bezierCurveTo(p956 * 18.5, p956 * 12, p956 * 18.5, p956 * 12, p956 * 9, p956 * 5);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 5, p956 * 70);
      v1302.bezierCurveTo(p956 * 5, p956 * 58, p956 * 5, p956 * 55, p956 * 17, p956 * 57);
      v1302.bezierCurveTo(p956 * 203, p956 * 57, p956 * 203, p956 * 57, p956 * 389, p956 * 57);
      v1302.bezierCurveTo(p956 * 400, p956 * 57, p956 * 400, p956 * 59, p956 * 400, p956 * 69);
      v1302.bezierCurveTo(p956 * 400.5, p956 * 83.5, p956 * 400.5, p956 * 83.5, p956 * 401, p956 * 98);
      v1302.bezierCurveTo(p956 * 402, p956 * 108, p956 * 401, p956 * 108, p956 * 388, p956 * 108);
      v1302.bezierCurveTo(p956 * 201.5, p956 * 108, p956 * 201.5, p956 * 108, p956 * 15, p956 * 108);
      v1302.bezierCurveTo(p956 * 1, p956 * 106, p956 * 5, p956 * 106, p956 * 5, p956 * 87);
      v1302.bezierCurveTo(p956 * 33, p956 * 84.5, p956 * 33, p956 * 84.5, p956 * 61, p956 * 82);
      v1302.bezierCurveTo(p956 * 33.5, p956 * 76.5, p956 * 33.5, p956 * 76.5, p956 * 6, p956 * 71);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 19, p956 * 158);
      v1302.bezierCurveTo(p956 * 2, p956 * 159, p956 * 4, p956 * 156, p956 * 5, p956 * 118);
      v1302.bezierCurveTo(p956 * 4, p956 * 110, p956 * 6, p956 * 107, p956 * 26, p956 * 109);
      v1302.bezierCurveTo(p956 * 206.5, p956 * 109, p956 * 206.5, p956 * 109, p956 * 387, p956 * 109);
      v1302.bezierCurveTo(p956 * 400, p956 * 108, p956 * 400, p956 * 108, p956 * 398, p956 * 127);
      v1302.bezierCurveTo(p956 * 384.5, p956 * 130, p956 * 384.5, p956 * 130, p956 * 371, p956 * 133);
      v1302.bezierCurveTo(p956 * 385.5, p956 * 138, p956 * 385.5, p956 * 138, p956 * 400, p956 * 143);
      v1302.bezierCurveTo(p956 * 402, p956 * 156, p956 * 402, p956 * 162, p956 * 385, p956 * 160);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      v1302.beginPath();
      v1302.lineCap = "round";
      v1302.lineJoin = "round";
      v1302.moveTo(p956 * 4, p956 * 183);
      v1302.bezierCurveTo(p956 * 1, p956 * 163, p956 * 4, p956 * 158, p956 * 28, p956 * 161);
      v1302.bezierCurveTo(p956 * 207.5, p956 * 161, p956 * 207.5, p956 * 161, p956 * 387, p956 * 161);
      v1302.bezierCurveTo(p956 * 401, p956 * 159, p956 * 400, p956 * 164, p956 * 400, p956 * 177);
      v1302.bezierCurveTo(p956 * 364.5, p956 * 184, p956 * 364.5, p956 * 184, p956 * 329, p956 * 191);
      v1302.bezierCurveTo(p956 * 364.5, p956 * 192.5, p956 * 364.5, p956 * 192.5, p956 * 400, p956 * 194);
      v1302.bezierCurveTo(p956 * 403, p956 * 209, p956 * 401, p956 * 214, p956 * 385, p956 * 213);
      v1302.bezierCurveTo(p956 * 201.5, p956 * 213, p956 * 201.5, p956 * 213, p956 * 18, p956 * 213);
      v1302.bezierCurveTo(p956 * 3, p956 * 213, p956 * 2, p956 * 213, p956 * 4, p956 * 198);
      v1302.bezierCurveTo(p956 * 12.5, p956 * 193, p956 * 12.5, p956 * 193, p956 * 21, p956 * 188);
      v1302.closePath();
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 41, p956 * 30, p956 * 14.7648230602334);
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 369, p956 * 30, p956 * 15.556349186104045);
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 364, p956 * 190, p956 * 15.620499351813308);
      f86(v1302, p957[3], p957[3], p956 * 32);
      f87(v1302, p956 * 41, p956 * 186, p956 * 15.556349186104045);
      f86(v1302, p957[3], p957[3], p956 * 32);
    }
    v1302.beginPath();
    v1302.lineCap = "round";
    v1302.lineJoin = "round";
    v1302.moveTo(p956 * 9, p956 * 5);
    v1302.bezierCurveTo(p956 * 381, p956 * 2, p956 * 197, p956 * 4.5, p956 * 385, p956 * 4);
    v1302.bezierCurveTo(p956 * 397, p956 * 4, p956 * 401, p956 * 4, p956 * 399, p956 * 23);
    v1302.bezierCurveTo(p956 * 367, p956 * 27, p956 * 367, p956 * 27, p956 * 335, p956 * 31);
    v1302.bezierCurveTo(p956 * 366.5, p956 * 33.5, p956 * 366.5, p956 * 33.5, p956 * 398, p956 * 36);
    v1302.bezierCurveTo(p956 * 398, p956 * 41.5, p956 * 398, p956 * 41.5, p956 * 398, p956 * 47);
    v1302.bezierCurveTo(p956 * 398, p956 * 56, p956 * 399, p956 * 56, p956 * 386, p956 * 56);
    v1302.bezierCurveTo(p956 * 200.5, p956 * 56.5, p956 * 200.5, p956 * 56.5, p956 * 15, p956 * 57);
    v1302.bezierCurveTo(p956 * 2, p956 * 55, p956 * 4, p956 * 52, p956 * 4, p956 * 43);
    v1302.bezierCurveTo(p956 * 4, p956 * 30.5, p956 * 4, p956 * 30.5, p956 * 4, p956 * 18);
    v1302.bezierCurveTo(p956 * 16, p956 * 18.5, p956 * 16, p956 * 18.5, p956 * 28, p956 * 19);
    v1302.bezierCurveTo(p956 * 18.5, p956 * 12, p956 * 18.5, p956 * 12, p956 * 9, p956 * 5);
    v1302.closePath();
    f86(v1302, p957[1], p957[0], p956 * 12);
    v1302.beginPath();
    v1302.lineCap = "round";
    v1302.lineJoin = "round";
    v1302.moveTo(p956 * 5, p956 * 70);
    v1302.bezierCurveTo(p956 * 5, p956 * 58, p956 * 5, p956 * 55, p956 * 17, p956 * 57);
    v1302.bezierCurveTo(p956 * 203, p956 * 57, p956 * 203, p956 * 57, p956 * 389, p956 * 57);
    v1302.bezierCurveTo(p956 * 400, p956 * 57, p956 * 400, p956 * 59, p956 * 400, p956 * 69);
    v1302.bezierCurveTo(p956 * 400.5, p956 * 83.5, p956 * 400.5, p956 * 83.5, p956 * 401, p956 * 98);
    v1302.bezierCurveTo(p956 * 402, p956 * 108, p956 * 401, p956 * 108, p956 * 388, p956 * 108);
    v1302.bezierCurveTo(p956 * 201.5, p956 * 108, p956 * 201.5, p956 * 108, p956 * 15, p956 * 108);
    v1302.bezierCurveTo(p956 * 1, p956 * 106, p956 * 5, p956 * 106, p956 * 5, p956 * 87);
    v1302.bezierCurveTo(p956 * 33, p956 * 84.5, p956 * 33, p956 * 84.5, p956 * 61, p956 * 82);
    v1302.bezierCurveTo(p956 * 33.5, p956 * 76.5, p956 * 33.5, p956 * 76.5, p956 * 6, p956 * 71);
    v1302.closePath();
    f86(v1302, p957[2], p957[0], p956 * 12);
    v1302.beginPath();
    v1302.lineCap = "round";
    v1302.lineJoin = "round";
    v1302.moveTo(p956 * 19, p956 * 158);
    v1302.bezierCurveTo(p956 * 2, p956 * 159, p956 * 4, p956 * 156, p956 * 5, p956 * 118);
    v1302.bezierCurveTo(p956 * 4, p956 * 110, p956 * 6, p956 * 107, p956 * 26, p956 * 109);
    v1302.bezierCurveTo(p956 * 206.5, p956 * 109, p956 * 206.5, p956 * 109, p956 * 387, p956 * 109);
    v1302.bezierCurveTo(p956 * 400, p956 * 108, p956 * 400, p956 * 108, p956 * 398, p956 * 127);
    v1302.bezierCurveTo(p956 * 384.5, p956 * 130, p956 * 384.5, p956 * 130, p956 * 371, p956 * 133);
    v1302.bezierCurveTo(p956 * 385.5, p956 * 138, p956 * 385.5, p956 * 138, p956 * 400, p956 * 143);
    v1302.bezierCurveTo(p956 * 402, p956 * 156, p956 * 402, p956 * 162, p956 * 385, p956 * 160);
    v1302.closePath();
    f86(v1302, p957[1], p957[0], p956 * 12);
    v1302.beginPath();
    v1302.lineCap = "round";
    v1302.lineJoin = "round";
    v1302.moveTo(p956 * 4, p956 * 183);
    v1302.bezierCurveTo(p956 * 1, p956 * 163, p956 * 4, p956 * 158, p956 * 28, p956 * 161);
    v1302.bezierCurveTo(p956 * 207.5, p956 * 161, p956 * 207.5, p956 * 161, p956 * 387, p956 * 161);
    v1302.bezierCurveTo(p956 * 401, p956 * 159, p956 * 400, p956 * 164, p956 * 400, p956 * 177);
    v1302.bezierCurveTo(p956 * 364.5, p956 * 184, p956 * 364.5, p956 * 184, p956 * 329, p956 * 191);
    v1302.bezierCurveTo(p956 * 364.5, p956 * 192.5, p956 * 364.5, p956 * 192.5, p956 * 400, p956 * 194);
    v1302.bezierCurveTo(p956 * 403, p956 * 209, p956 * 401, p956 * 214, p956 * 385, p956 * 213);
    v1302.bezierCurveTo(p956 * 201.5, p956 * 213, p956 * 201.5, p956 * 213, p956 * 18, p956 * 213);
    v1302.bezierCurveTo(p956 * 3, p956 * 213, p956 * 2, p956 * 213, p956 * 4, p956 * 198);
    v1302.bezierCurveTo(p956 * 12.5, p956 * 193, p956 * 12.5, p956 * 193, p956 * 21, p956 * 188);
    v1302.closePath();
    f86(v1302, p957[2], p957[0], p956 * 12);
    f87(v1302, p956 * 41, p956 * 30, p956 * 14.7648230602334);
    f86(v1302, p957[2], p957[0], p956 * 12);
    f87(v1302, p956 * 369, p956 * 30, p956 * 15.556349186104045);
    f86(v1302, p957[2], p957[0], p956 * 12);
    f87(v1302, p956 * 364, p956 * 190, p956 * 15.620499351813308);
    f86(v1302, p957[2], p957[0], p956 * 12);
    f87(v1302, p956 * 41, p956 * 186, p956 * 15.556349186104045);
    f86(v1302, p957[2], p957[0], p956 * 12);
    return v1301;
  }
  function f245(p959, p960, p961) {
    var v1303 = document.createElement("canvas");
    var v1304 = v1303.getContext("2d");
    v1303.width = p959 * 88;
    v1303.height = p959 * 88;
    v1304.save();
    v1304.translate(p959 * 44, p959 * 44);
    v1304.rotate(0.52);
    f92(v1304, 6, p959 * 43, p959 * 10);
    v1304.restore();
    f86(v1304, p961[0], p961[1], p959 * 3);
    return v1303;
  }
  function f246(p962, p963, p964) {
    var v1305 = document.createElement("canvas");
    var v1306 = v1305.getContext("2d");
    v1305.width = p962 * 170;
    v1305.height = p962 * 170;
    v1306.globalAlpha = p963 ? 0.5 : 1;
    v1306.translate(0, p962 * 5);
    v1306.save();
    v1306.translate(p962 * 85, p962 * 88);
    v1306.rotate(1.4);
    f92(v1306, 7, p962 * 60, p962 * 10);
    v1306.restore();
    f86(v1306, p964[0]);
    v1306.globalAlpha = 1;
    v1306.translate(p962 * 85, p962 * 80);
    for (var v1307 = 0; v1307 < 10; v1307++) {
      v1306.rotate(Math.PI / 5);
      v1306.save();
      v1306.translate(p962 * 65, 0);
      f92(v1306, 3, p962 * 21, p962 * 4);
      f86(v1306, p964[1], p964[2], p962 * 4);
      v1306.restore();
    }
    v1306.save();
    v1306.translate(p962 * 0, p962 * 0);
    v1306.rotate(1.4);
    f92(v1306, 7, p962 * 60, p962 * 10);
    f86(v1306, p964[3], p964[4], p962 * 4);
    v1306.rotate(0.64);
    f92(v1306, 7, p962 * 40, p962 * 10);
    f86(v1306, p964[5], p964[6], p962 * 4);
    v1306.rotate(0.12);
    f92(v1306, 7, p962 * 23, p962 * 5);
    v1306.restore();
    f86(v1306, p964[7]);
    return v1305;
  }
  function f247(p965, p966, p967) {
    var v1308 = document.createElement("canvas");
    var v1309 = v1308.getContext("2d");
    v1308.width = p965 * 142;
    v1308.height = p965 * 118;
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 111, p965 * 27.3671875);
    v1309.bezierCurveTo(p965 * 128, p965 * 9.3671875, p965 * 125, p965 * 13.3671875, p965 * 126, p965 * 21.3671875);
    v1309.bezierCurveTo(p965 * 126, p965 * 33.3671875, p965 * 119, p965 * 43.3671875, p965 * 118, p965 * 42.3671875);
    v1309.closePath();
    f86(v1309, p967[3], p967[4], p965 * 4);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 31, p965 * 23.3671875);
    v1309.bezierCurveTo(p965 * 17, p965 * 15.3671875, p965 * 16, p965 * 14.3671875, p965 * 17, p965 * 20.3671875);
    v1309.bezierCurveTo(p965 * 22, p965 * 33.3671875, p965 * 20, p965 * 27.3671875, p965 * 24, p965 * 34.3671875);
    v1309.closePath();
    f86(v1309, p967[3], p967[4], p965 * 4);
    v1309.save();
    v1309.translate(p965 * 70.5, p965 * 34.8671875);
    v1309.rotate(0);
    f89(v1309, p965 * -49.5, p965 * -21.5, p965 * 99, p965 * 43, p965 * 15);
    v1309.restore();
    f86(v1309, p967[0], p967[1], p965 * 4);
    v1309.save();
    v1309.translate(p965 * 71, p965 * 40.8671875);
    v1309.rotate(0);
    f89(v1309, p965 * -49, p965 * -12.5, p965 * 98, p965 * 25, p965 * 15);
    v1309.restore();
    f86(v1309, p967[2], p967[1], p965 * 4);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 19.800003051757812, p965 * 75.95625305175781);
    v1309.bezierCurveTo(p965 * 19.300003051757812, p965 * 82.95625305175781, p965 * 19.300003051757812, p965 * 82.95625305175781, p965 * 18.800003051757812, p965 * 89.95625305175781);
    v1309.bezierCurveTo(p965 * 38.80000305175781, p965 * 115.95625305175781, p965 * 37.80000305175781, p965 * 104.95625305175781, p965 * 31.800003051757812, p965 * 91.95625305175781);
    v1309.closePath();
    f86(v1309, p967[2], p967[1], p965 * 4);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 119.80000305175781, p965 * 75.95625305175781);
    v1309.bezierCurveTo(p965 * 120.80000305175781, p965 * 82.95625305175781, p965 * 120.80000305175781, p965 * 82.95625305175781, p965 * 121.80000305175781, p965 * 89.95625305175781);
    v1309.bezierCurveTo(p965 * 101.80000305175781, p965 * 111.95625305175781, p965 * 99.80000305175781, p965 * 111.95625305175781, p965 * 112.80000305175781, p965 * 81.95625305175781);
    v1309.closePath();
    f86(v1309, p967[2], p967[1], p965 * 4);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 17.800003051757812, p965 * 49.15625);
    v1309.bezierCurveTo(p965 * 17.800003051757812, p965 * 64.15625, p965 * 17.800003051757812, p965 * 64.15625, p965 * 17.800003051757812, p965 * 79.15625);
    v1309.bezierCurveTo(p965 * 23.300003051757812, p965 * 85.15625, p965 * 23.300003051757812, p965 * 85.15625, p965 * 28.800003051757812, p965 * 91.15625);
    v1309.bezierCurveTo(p965 * 36.80000305175781, p965 * 96.15625, p965 * 32.80000305175781, p965 * 91.15625, p965 * 28.800003051757812, p965 * 77.15625);
    v1309.bezierCurveTo(p965 * 33.80000305175781, p965 * 65.15625, p965 * 33.80000305175781, p965 * 65.15625, p965 * 38.80000305175781, p965 * 53.15625);
    v1309.closePath();
    f86(v1309, p967[3], p967[4], p965 * 4);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 123.80000305175781, p965 * 53.95625305175781);
    v1309.bezierCurveTo(p965 * 121.80000305175781, p965 * 77.95625305175781, p965 * 121.80000305175781, p965 * 74.95625305175781, p965 * 121.80000305175781, p965 * 78.95625305175781);
    v1309.bezierCurveTo(p965 * 115.80000305175781, p965 * 84.95625305175781, p965 * 115.80000305175781, p965 * 84.95625305175781, p965 * 109.80000305175781, p965 * 90.95625305175781);
    v1309.bezierCurveTo(p965 * 102.80000305175781, p965 * 93.95625305175781, p965 * 105.80000305175781, p965 * 86.95625305175781, p965 * 110.80000305175781, p965 * 76.95625305175781);
    v1309.bezierCurveTo(p965 * 107.30000305175781, p965 * 65.45625305175781, p965 * 103.80000305175781, p965 * 53.95625305175781, p965 * 103.80000305175781, p965 * 53.95625305175781);
    v1309.closePath();
    f86(v1309, p967[3], p967[4], p965 * 4);
    v1309.beginPath();
    v1309.lineCap = "round";
    v1309.lineJoin = "round";
    v1309.moveTo(p965 * 18, p965 * 56.3671875);
    v1309.bezierCurveTo(p965 * 70, p965 * 56.8671875, p965 * 70, p965 * 56.8671875, p965 * 122, p965 * 57.3671875);
    v1309.bezierCurveTo(p965 * 137, p965 * 20.3671875, p965 * 137, p965 * 16.3671875, p965 * 126, p965 * 22.3671875);
    v1309.bezierCurveTo(p965 * 115.5, p965 * 34.3671875, p965 * 115.5, p965 * 34.3671875, p965 * 105, p965 * 46.3671875);
    v1309.bezierCurveTo(p965 * 70.5, p965 * 46.3671875, p965 * 70.5, p965 * 46.3671875, p965 * 36, p965 * 46.3671875);
    v1309.bezierCurveTo(p965 * 4, p965 * 14.3671875, p965 * 7, p965 * 18.3671875, p965 * 8, p965 * 27.3671875);
    v1309.bezierCurveTo(p965 * 12.5, p965 * 41.8671875, p965 * 12.5, p965 * 41.8671875, p965 * 17, p965 * 56.3671875);
    v1309.closePath();
    f86(v1309, p967[3], p967[4], p965 * 4);
    v1309.save();
    v1309.translate(p965 * 68.30000305175781, p965 * 41.45625305175781);
    v1309.rotate(0.76);
    f89(v1309, p965 * -20.5, p965 * -20.5, p965 * 41, p965 * 41, p965 * 10);
    v1309.restore();
    f86(v1309, vVVVVUndefined197, p967[5], p965 * 4);
    v1309.save();
    v1309.translate(p965 * 68.80000305175781, p965 * 44.45625305175781);
    v1309.rotate(0.76);
    f89(v1309, p965 * -21, p965 * -20.5, p965 * 42, p965 * 41, p965 * 10);
    v1309.restore();
    f86(v1309, p967[3], p967[4], p965 * 4);
    v1309.save();
    v1309.translate(p965 * 69.80000305175781, p965 * 44.556243896484375);
    v1309.rotate(0.76);
    f89(v1309, p965 * -10, p965 * -10, p965 * 20, p965 * 20, p965 * 5);
    v1309.restore();
    f86(v1309, p967[6], p967[7], p965 * 4);
    return v1308;
  }
  function f248(p968, p969, p970) {
    var v1310 = document.createElement("canvas");
    var v1311 = v1310.getContext("2d");
    v1310.width = p968 * 187;
    v1310.height = p968 * 119;
    v1311.globalAlpha = p969 ? 0.5 : 1;
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.translate(0, 3);
    v1311.moveTo(p968 * 53, p968 * 45);
    v1311.bezierCurveTo(p968 * 3, p968 * 60, p968 * 11, p968 * 72, p968 * 19, p968 * 81);
    v1311.bezierCurveTo(p968 * 28, p968 * 82, p968 * 24, p968 * 81, p968 * 29, p968 * 82);
    v1311.bezierCurveTo(p968 * 26, p968 * 87, p968 * 28, p968 * 84, p968 * 28, p968 * 87);
    v1311.bezierCurveTo(p968 * 63, p968 * 101, p968 * 92, p968 * 100, p968 * 138, p968 * 93);
    v1311.bezierCurveTo(p968 * 172, p968 * 87, p968 * 180, p968 * 72, p968 * 168, p968 * 62);
    v1311.bezierCurveTo(p968 * 154, p968 * 51, p968 * 150, p968 * 50, p968 * 148, p968 * 49);
    v1311.bezierCurveTo(p968 * 132, p968 * 42, p968 * 90, p968 * 40, p968 * 55, p968 * 45);
    v1311.closePath();
    f86(v1311, p970[5]);
    v1311.globalAlpha = 1;
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.translate(0, -3);
    v1311.moveTo(p968 * 53, p968 * 45);
    v1311.bezierCurveTo(p968 * 3, p968 * 60, p968 * 11, p968 * 72, p968 * 19, p968 * 81);
    v1311.bezierCurveTo(p968 * 28, p968 * 82, p968 * 24, p968 * 81, p968 * 29, p968 * 82);
    v1311.bezierCurveTo(p968 * 26, p968 * 87, p968 * 28, p968 * 84, p968 * 28, p968 * 87);
    v1311.bezierCurveTo(p968 * 63, p968 * 101, p968 * 92, p968 * 100, p968 * 138, p968 * 93);
    v1311.bezierCurveTo(p968 * 172, p968 * 87, p968 * 180, p968 * 72, p968 * 168, p968 * 62);
    v1311.bezierCurveTo(p968 * 154, p968 * 51, p968 * 150, p968 * 50, p968 * 148, p968 * 49);
    v1311.bezierCurveTo(p968 * 132, p968 * 42, p968 * 90, p968 * 40, p968 * 55, p968 * 45);
    v1311.closePath();
    f86(v1311, p970[0], p970[1], p968 * 4);
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.moveTo(p968 * 151, p968 * 60);
    v1311.bezierCurveTo(p968 * 140, p968 * 36, p968 * 137, p968 * 32, p968 * 124, p968 * 29);
    v1311.bezierCurveTo(p968 * 98, p968 * 22, p968 * 80, p968 * 24, p968 * 62, p968 * 28);
    v1311.bezierCurveTo(p968 * 42, p968 * 35, p968 * 38, p968 * 46, p968 * 34, p968 * 58);
    v1311.bezierCurveTo(p968 * 53, p968 * 74, p968 * 76, p968 * 76, p968 * 91, p968 * 78);
    v1311.closePath();
    f86(v1311, p970[0], p970[1], p968 * 4);
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.moveTo(p968 * 37, p968 * 53);
    v1311.bezierCurveTo(p968 * 30, p968 * 56, p968 * 29, p968 * 67, p968 * 30, p968 * 68);
    v1311.bezierCurveTo(p968 * 94, p968 * 108, p968 * 150, p968 * 76, p968 * 155, p968 * 70);
    v1311.bezierCurveTo(p968 * 154, p968 * 60, p968 * 151, p968 * 54, p968 * 149, p968 * 53);
    v1311.bezierCurveTo(p968 * 101, p968 * 74, p968 * 66, p968 * 66, p968 * 37, p968 * 53);
    v1311.closePath();
    f86(v1311, p970[2], p970[3], p968 * 4);
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.moveTo(p968 * 100, p968 * 36);
    v1311.bezierCurveTo(p968 * 92, p968 * 25, p968 * 86, p968 * 28, p968 * 82, p968 * 34);
    v1311.bezierCurveTo(p968 * 88, p968 * 40, p968 * 93, p968 * 40, p968 * 98, p968 * 36);
    v1311.closePath();
    f86(v1311, p970[0], p970[1], p968 * 4);
    v1311.beginPath();
    v1311.lineCap = "round";
    v1311.lineJoin = "round";
    v1311.moveTo(p968 * 80, p968 * 43);
    v1311.bezierCurveTo(p968 * 69, p968 * 46, p968 * 67, p968 * 52, p968 * 69, p968 * 58);
    f86(v1311, undefined, p970[1], p968 * 4);
    f87(v1311, p968 * 58, p968 * 50, p968 * 5);
    f86(v1311, p970[4]);
    f87(v1311, p968 * 43, p968 * 65, p968 * 5);
    f86(v1311, p970[4]);
    f87(v1311, p968 * 58, p968 * 73, p968 * 5);
    f86(v1311, p970[4]);
    f87(v1311, p968 * 58, p968 * 50, p968 * 2);
    f86(v1311, p970[5]);
    f87(v1311, p968 * 43, p968 * 65, p968 * 2);
    f86(v1311, p970[5]);
    f87(v1311, p968 * 58, p968 * 73, p968 * 2);
    f86(v1311, p970[5]);
    return v1310;
  }
  function f249(p971, p972) {
    var v1312 = document.createElement("canvas");
    var v1313 = v1312.getContext("2d");
    v1312.width = p971 * 376;
    v1312.height = p971 * 371;
    v1313.globalAlpha = 0.5;
    v1313.translate(p971 * 5, p971 * 5);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 191.633544921875, p971 * 123.98580932617188);
    v1313.bezierCurveTo(p971 * 215.633544921875, p971 * 85.98580932617188, p971 * 187.633544921875, p971 * 71.98580932617188, p971 * 202.633544921875, p971 * 19.985809326171875);
    v1313.bezierCurveTo(p971 * 231.633544921875, p971 * 68.98580932617188, p971 * 253.633544921875, p971 * 71.98580932617188, p971 * 256.633544921875, p971 * 93.98580932617188);
    v1313.bezierCurveTo(p971 * 306.633544921875, p971 * 64.98580932617188, p971 * 319.633544921875, p971 * 61.985809326171875, p971 * 350.633544921875, p971 * 58.985809326171875);
    v1313.bezierCurveTo(p971 * 280.633544921875, p971 * 86.98580932617188, p971 * 281.633544921875, p971 * 106.98580932617188, p971 * 268.633544921875, p971 * 130.98580932617188);
    v1313.bezierCurveTo(p971 * 295.633544921875, p971 * 158.98580932617188, p971 * 328.633544921875, p971 * 155.98580932617188, p971 * 353.633544921875, p971 * 90.98580932617188);
    v1313.bezierCurveTo(p971 * 371.633544921875, p971 * 158.98580932617188, p971 * 337.633544921875, p971 * 210.98580932617188, p971 * 286.633544921875, p971 * 209.98580932617188);
    v1313.bezierCurveTo(p971 * 323.633544921875, p971 * 230.98580932617188, p971 * 317.633544921875, p971 * 274.9858093261719, p971 * 356.633544921875, p971 * 305.9858093261719);
    v1313.bezierCurveTo(p971 * 288.633544921875, p971 * 297.9858093261719, p971 * 288.633544921875, p971 * 265.9858093261719, p971 * 275.633544921875, p971 * 266.9858093261719);
    v1313.bezierCurveTo(p971 * 280.633544921875, p971 * 294.9858093261719, p971 * 315.633544921875, p971 * 306.9858093261719, p971 * 336.633544921875, p971 * 316.9858093261719);
    v1313.bezierCurveTo(p971 * 295.633544921875, p971 * 318.9858093261719, p971 * 264.633544921875, p971 * 302.9858093261719, p971 * 254.633544921875, p971 * 289.9858093261719);
    v1313.bezierCurveTo(p971 * 252.633544921875, p971 * 301.9858093261719, p971 * 224.633544921875, p971 * 315.9858093261719, p971 * 201.633544921875, p971 * 356.9858093261719);
    v1313.bezierCurveTo(p971 * 195.633544921875, p971 * 313.9858093261719, p971 * 195.633544921875, p971 * 308.9858093261719, p971 * 196.633544921875, p971 * 307.9858093261719);
    v1313.bezierCurveTo(p971 * 197.633544921875, p971 * 289.9858093261719, p971 * 207.633544921875, p971 * 283.9858093261719, p971 * 195.633544921875, p971 * 258.9858093261719);
    v1313.bezierCurveTo(p971 * 182.633544921875, p971 * 282.9858093261719, p971 * 190.633544921875, p971 * 287.9858093261719, p971 * 193.633544921875, p971 * 297.9858093261719);
    v1313.bezierCurveTo(p971 * 195.633544921875, p971 * 306.9858093261719, p971 * 191.633544921875, p971 * 334.9858093261719, p971 * 187.633544921875, p971 * 354.9858093261719);
    v1313.bezierCurveTo(p971 * 165.633544921875, p971 * 320.9858093261719, p971 * 138.633544921875, p971 * 307.9858093261719, p971 * 135.633544921875, p971 * 288.9858093261719);
    v1313.bezierCurveTo(p971 * 110.633544921875, p971 * 318.9858093261719, p971 * 68.633544921875, p971 * 323.9858093261719, p971 * 49.633544921875, p971 * 320.9858093261719);
    v1313.bezierCurveTo(p971 * 88.633544921875, p971 * 308.9858093261719, p971 * 108.633544921875, p971 * 284.9858093261719, p971 * 118.633544921875, p971 * 258.9858093261719);
    v1313.bezierCurveTo(p971 * 86.633544921875, p971 * 264.9858093261719, p971 * 75.633544921875, p971 * 310.9858093261719, p971 * 19.633544921875, p971 * 304.9858093261719);
    v1313.bezierCurveTo(p971 * 54.633544921875, p971 * 276.9858093261719, p971 * 59.633544921875, p971 * 214.98580932617188, p971 * 105.633544921875, p971 * 205.98580932617188);
    v1313.bezierCurveTo(p971 * 14.633544921875, p971 * 201.98580932617188, p971 * 24.633544921875, p971 * 141.98580932617188, p971 * 25.633544921875, p971 * 82.98580932617188);
    v1313.bezierCurveTo(p971 * 49.633544921875, p971 * 168.98580932617188, p971 * 87.633544921875, p971 * 141.98580932617188, p971 * 112.633544921875, p971 * 123.98580932617188);
    v1313.bezierCurveTo(p971 * 95.633544921875, p971 * 75.98580932617188, p971 * 70.633544921875, p971 * 68.98580932617188, p971 * 35.633544921875, p971 * 50.985809326171875);
    v1313.bezierCurveTo(p971 * 70.633544921875, p971 * 53.985809326171875, p971 * 102.633544921875, p971 * 65.98580932617188, p971 * 125.633544921875, p971 * 84.98580932617188);
    v1313.bezierCurveTo(p971 * 133.633544921875, p971 * 69.98580932617188, p971 * 166.633544921875, p971 * 42.985809326171875, p971 * 176.633544921875, p971 * 21.985809326171875);
    v1313.bezierCurveTo(p971 * 185.633544921875, p971 * 49.985809326171875, p971 * 168.633544921875, p971 * 95.98580932617188, p971 * 191.633544921875, p971 * 121.98580932617188);
    v1313.closePath();
    f86(v1313, p972[0]);
    v1313.globalAlpha = 1;
    v1313.translate(p971 * -4, p971 * -5);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 191.633544921875, p971 * 123.98580932617188);
    v1313.bezierCurveTo(p971 * 215.633544921875, p971 * 85.98580932617188, p971 * 187.633544921875, p971 * 71.98580932617188, p971 * 202.633544921875, p971 * 19.985809326171875);
    v1313.bezierCurveTo(p971 * 231.633544921875, p971 * 68.98580932617188, p971 * 253.633544921875, p971 * 71.98580932617188, p971 * 256.633544921875, p971 * 93.98580932617188);
    v1313.bezierCurveTo(p971 * 306.633544921875, p971 * 64.98580932617188, p971 * 319.633544921875, p971 * 61.985809326171875, p971 * 350.633544921875, p971 * 58.985809326171875);
    v1313.bezierCurveTo(p971 * 280.633544921875, p971 * 86.98580932617188, p971 * 281.633544921875, p971 * 106.98580932617188, p971 * 268.633544921875, p971 * 130.98580932617188);
    v1313.bezierCurveTo(p971 * 295.633544921875, p971 * 158.98580932617188, p971 * 328.633544921875, p971 * 155.98580932617188, p971 * 353.633544921875, p971 * 90.98580932617188);
    v1313.bezierCurveTo(p971 * 371.633544921875, p971 * 158.98580932617188, p971 * 337.633544921875, p971 * 210.98580932617188, p971 * 286.633544921875, p971 * 209.98580932617188);
    v1313.bezierCurveTo(p971 * 323.633544921875, p971 * 230.98580932617188, p971 * 317.633544921875, p971 * 274.9858093261719, p971 * 356.633544921875, p971 * 305.9858093261719);
    v1313.bezierCurveTo(p971 * 288.633544921875, p971 * 297.9858093261719, p971 * 288.633544921875, p971 * 265.9858093261719, p971 * 275.633544921875, p971 * 266.9858093261719);
    v1313.bezierCurveTo(p971 * 280.633544921875, p971 * 294.9858093261719, p971 * 315.633544921875, p971 * 306.9858093261719, p971 * 336.633544921875, p971 * 316.9858093261719);
    v1313.bezierCurveTo(p971 * 295.633544921875, p971 * 318.9858093261719, p971 * 264.633544921875, p971 * 302.9858093261719, p971 * 254.633544921875, p971 * 289.9858093261719);
    v1313.bezierCurveTo(p971 * 252.633544921875, p971 * 301.9858093261719, p971 * 224.633544921875, p971 * 315.9858093261719, p971 * 201.633544921875, p971 * 356.9858093261719);
    v1313.bezierCurveTo(p971 * 195.633544921875, p971 * 313.9858093261719, p971 * 195.633544921875, p971 * 308.9858093261719, p971 * 196.633544921875, p971 * 307.9858093261719);
    v1313.bezierCurveTo(p971 * 197.633544921875, p971 * 289.9858093261719, p971 * 207.633544921875, p971 * 283.9858093261719, p971 * 195.633544921875, p971 * 258.9858093261719);
    v1313.bezierCurveTo(p971 * 182.633544921875, p971 * 282.9858093261719, p971 * 190.633544921875, p971 * 287.9858093261719, p971 * 193.633544921875, p971 * 297.9858093261719);
    v1313.bezierCurveTo(p971 * 195.633544921875, p971 * 306.9858093261719, p971 * 191.633544921875, p971 * 334.9858093261719, p971 * 187.633544921875, p971 * 354.9858093261719);
    v1313.bezierCurveTo(p971 * 165.633544921875, p971 * 320.9858093261719, p971 * 138.633544921875, p971 * 307.9858093261719, p971 * 135.633544921875, p971 * 288.9858093261719);
    v1313.bezierCurveTo(p971 * 110.633544921875, p971 * 318.9858093261719, p971 * 68.633544921875, p971 * 323.9858093261719, p971 * 49.633544921875, p971 * 320.9858093261719);
    v1313.bezierCurveTo(p971 * 88.633544921875, p971 * 308.9858093261719, p971 * 108.633544921875, p971 * 284.9858093261719, p971 * 118.633544921875, p971 * 258.9858093261719);
    v1313.bezierCurveTo(p971 * 86.633544921875, p971 * 264.9858093261719, p971 * 75.633544921875, p971 * 310.9858093261719, p971 * 19.633544921875, p971 * 304.9858093261719);
    v1313.bezierCurveTo(p971 * 54.633544921875, p971 * 276.9858093261719, p971 * 59.633544921875, p971 * 214.98580932617188, p971 * 105.633544921875, p971 * 205.98580932617188);
    v1313.bezierCurveTo(p971 * 14.633544921875, p971 * 201.98580932617188, p971 * 24.633544921875, p971 * 141.98580932617188, p971 * 25.633544921875, p971 * 82.98580932617188);
    v1313.bezierCurveTo(p971 * 49.633544921875, p971 * 168.98580932617188, p971 * 87.633544921875, p971 * 141.98580932617188, p971 * 112.633544921875, p971 * 123.98580932617188);
    v1313.bezierCurveTo(p971 * 95.633544921875, p971 * 75.98580932617188, p971 * 70.633544921875, p971 * 68.98580932617188, p971 * 35.633544921875, p971 * 50.985809326171875);
    v1313.bezierCurveTo(p971 * 70.633544921875, p971 * 53.985809326171875, p971 * 102.633544921875, p971 * 65.98580932617188, p971 * 125.633544921875, p971 * 84.98580932617188);
    v1313.bezierCurveTo(p971 * 133.633544921875, p971 * 69.98580932617188, p971 * 166.633544921875, p971 * 42.985809326171875, p971 * 176.633544921875, p971 * 21.985809326171875);
    v1313.bezierCurveTo(p971 * 185.633544921875, p971 * 49.985809326171875, p971 * 168.633544921875, p971 * 95.98580932617188, p971 * 191.633544921875, p971 * 121.98580932617188);
    v1313.closePath();
    f86(v1313, undefined, p972[1], p971 * 12);
    v1313.translate(p971 * -1, p971 * 0);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 270.633544921875, p971 * 88.98580932617188);
    v1313.bezierCurveTo(p971 * 296.633544921875, p971 * 65.98580932617188, p971 * 318.633544921875, p971 * 62.985809326171875, p971 * 348.633544921875, p971 * 57.985809326171875);
    v1313.bezierCurveTo(p971 * 309.633544921875, p971 * 76.98580932617188, p971 * 291.633544921875, p971 * 88.98580932617188, p971 * 280.633544921875, p971 * 99.98580932617188);
    v1313.closePath();
    f86(v1313, p972[4], p972[5], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 275.633544921875, p971 * 281.9858093261719);
    v1313.bezierCurveTo(p971 * 303.633544921875, p971 * 308.9858093261719, p971 * 321.633544921875, p971 * 308.9858093261719, p971 * 335.633544921875, p971 * 315.9858093261719);
    v1313.bezierCurveTo(p971 * 305.633544921875, p971 * 320.9858093261719, p971 * 278.633544921875, p971 * 307.9858093261719, p971 * 264.633544921875, p971 * 293.9858093261719);
    v1313.closePath();
    f86(v1313, p972[4], p972[5], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 124.633544921875, p971 * 291.9858093261719);
    v1313.bezierCurveTo(p971 * 106.633544921875, p971 * 316.9858093261719, p971 * 72.633544921875, p971 * 325.9858093261719, p971 * 53.633544921875, p971 * 319.9858093261719);
    v1313.bezierCurveTo(p971 * 83.633544921875, p971 * 308.9858093261719, p971 * 97.633544921875, p971 * 298.9858093261719, p971 * 112.633544921875, p971 * 284.9858093261719);
    v1313.closePath();
    f86(v1313, p972[4], p972[5], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 113.633544921875, p971 * 80.98580932617188);
    v1313.bezierCurveTo(p971 * 91.633544921875, p971 * 54.985809326171875, p971 * 72.633544921875, p971 * 56.985809326171875, p971 * 36.633544921875, p971 * 49.985809326171875);
    v1313.bezierCurveTo(p971 * 87.633544921875, p971 * 72.98580932617188, p971 * 95.633544921875, p971 * 82.98580932617188, p971 * 106.633544921875, p971 * 96.98580932617188);
    v1313.closePath();
    f86(v1313, p972[4], p972[5], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 202.633544921875, p971 * 20.985809326171875);
    v1313.bezierCurveTo(p971 * 219.633544921875, p971 * 49.985809326171875, p971 * 259.633544921875, p971 * 80.98580932617188, p971 * 255.633544921875, p971 * 92.98580932617188);
    v1313.bezierCurveTo(p971 * 268.633544921875, p971 * 86.98580932617188, p971 * 265.633544921875, p971 * 87.98580932617188, p971 * 275.633544921875, p971 * 82.98580932617188);
    v1313.bezierCurveTo(p971 * 283.633544921875, p971 * 87.98580932617188, p971 * 283.633544921875, p971 * 87.98580932617188, p971 * 291.633544921875, p971 * 92.98580932617188);
    v1313.bezierCurveTo(p971 * 269.633544921875, p971 * 116.98580932617188, p971 * 270.633544921875, p971 * 124.98580932617188, p971 * 267.633544921875, p971 * 130.98580932617188);
    v1313.bezierCurveTo(p971 * 307.633544921875, p971 * 168.98580932617188, p971 * 339.633544921875, p971 * 132.98580932617188, p971 * 352.633544921875, p971 * 93.98580932617188);
    v1313.bezierCurveTo(p971 * 366.633544921875, p971 * 145.98580932617188, p971 * 345.633544921875, p971 * 207.98580932617188, p971 * 286.633544921875, p971 * 208.98580932617188);
    v1313.bezierCurveTo(p971 * 315.633544921875, p971 * 223.98580932617188, p971 * 327.633544921875, p971 * 287.9858093261719, p971 * 355.633544921875, p971 * 305.9858093261719);
    v1313.bezierCurveTo(p971 * 293.633544921875, p971 * 298.9858093261719, p971 * 293.633544921875, p971 * 275.9858093261719, p971 * 276.633544921875, p971 * 266.9858093261719);
    v1313.bezierCurveTo(p971 * 274.633544921875, p971 * 282.9858093261719, p971 * 287.633544921875, p971 * 288.9858093261719, p971 * 295.633544921875, p971 * 296.9858093261719);
    v1313.bezierCurveTo(p971 * 287.133544921875, p971 * 302.4858093261719, p971 * 287.133544921875, p971 * 302.4858093261719, p971 * 278.633544921875, p971 * 307.9858093261719);
    v1313.bezierCurveTo(p971 * 261.633544921875, p971 * 297.9858093261719, p971 * 258.633544921875, p971 * 293.9858093261719, p971 * 255.633544921875, p971 * 290.9858093261719);
    v1313.bezierCurveTo(p971 * 249.633544921875, p971 * 301.9858093261719, p971 * 225.633544921875, p971 * 320.9858093261719, p971 * 202.633544921875, p971 * 354.9858093261719);
    v1313.bezierCurveTo(p971 * 195.633544921875, p971 * 318.9858093261719, p971 * 196.633544921875, p971 * 306.9858093261719, p971 * 198.633544921875, p971 * 300.9858093261719);
    v1313.bezierCurveTo(p971 * 209.633544921875, p971 * 268.9858093261719, p971 * 199.633544921875, p971 * 266.9858093261719, p971 * 195.633544921875, p971 * 256.9858093261719);
    v1313.bezierCurveTo(p971 * 183.633544921875, p971 * 274.9858093261719, p971 * 182.633544921875, p971 * 281.9858093261719, p971 * 192.633544921875, p971 * 305.9858093261719);
    v1313.bezierCurveTo(p971 * 194.633544921875, p971 * 317.9858093261719, p971 * 191.633544921875, p971 * 336.9858093261719, p971 * 186.633544921875, p971 * 351.9858093261719);
    v1313.bezierCurveTo(p971 * 166.633544921875, p971 * 318.9858093261719, p971 * 141.633544921875, p971 * 303.9858093261719, p971 * 136.633544921875, p971 * 286.9858093261719);
    v1313.bezierCurveTo(p971 * 122.633544921875, p971 * 303.9858093261719, p971 * 115.633544921875, p971 * 305.9858093261719, p971 * 109.633544921875, p971 * 306.9858093261719);
    v1313.bezierCurveTo(p971 * 101.133544921875, p971 * 301.9858093261719, p971 * 94.633544921875, p971 * 297.9858093261719, p971 * 92.633544921875, p971 * 296.9858093261719);
    v1313.bezierCurveTo(p971 * 116.633544921875, p971 * 277.9858093261719, p971 * 116.633544921875, p971 * 266.9858093261719, p971 * 119.633544921875, p971 * 257.9858093261719);
    v1313.bezierCurveTo(p971 * 107.633544921875, p971 * 257.9858093261719, p971 * 65.633544921875, p971 * 308.9858093261719, p971 * 24.633544921875, p971 * 303.9858093261719);
    v1313.bezierCurveTo(p971 * 51.633544921875, p971 * 275.9858093261719, p971 * 64.633544921875, p971 * 220.98580932617188, p971 * 108.633544921875, p971 * 205.98580932617188);
    v1313.bezierCurveTo(p971 * 14.633544921875, p971 * 198.98580932617188, p971 * 26.633544921875, p971 * 142.98580932617188, p971 * 25.633544921875, p971 * 86.98580932617188);
    v1313.bezierCurveTo(p971 * 41.633544921875, p971 * 155.98580932617188, p971 * 81.633544921875, p971 * 148.98580932617188, p971 * 113.633544921875, p971 * 124.98580932617188);
    v1313.bezierCurveTo(p971 * 102.633544921875, p971 * 93.98580932617188, p971 * 95.633544921875, p971 * 88.98580932617188, p971 * 89.633544921875, p971 * 81.98580932617188);
    v1313.bezierCurveTo(p971 * 97.633544921875, p971 * 76.48580932617188, p971 * 97.633544921875, p971 * 76.48580932617188, p971 * 105.633544921875, p971 * 70.98580932617188);
    v1313.bezierCurveTo(p971 * 120.633544921875, p971 * 78.98580932617188, p971 * 121.633544921875, p971 * 81.98580932617188, p971 * 124.633544921875, p971 * 86.98580932617188);
    v1313.bezierCurveTo(p971 * 132.633544921875, p971 * 71.98580932617188, p971 * 160.633544921875, p971 * 56.985809326171875, p971 * 175.633544921875, p971 * 23.985809326171875);
    v1313.bezierCurveTo(p971 * 182.633544921875, p971 * 53.985809326171875, p971 * 170.633544921875, p971 * 102.98580932617188, p971 * 191.633544921875, p971 * 125.98580932617188);
    v1313.bezierCurveTo(p971 * 214.633544921875, p971 * 89.98580932617188, p971 * 192.633544921875, p971 * 58.985809326171875, p971 * 202.633544921875, p971 * 20.985809326171875);
    v1313.closePath();
    f86(v1313, p972[2], p972[3], p971 * 5);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 203.633544921875, p971 * 21.985809326171875);
    v1313.bezierCurveTo(p971 * 223.633544921875, p971 * 63.985809326171875, p971 * 227.633544921875, p971 * 72.98580932617188, p971 * 235.633544921875, p971 * 98.98580932617188);
    v1313.bezierCurveTo(p971 * 241.633544921875, p971 * 123.98580932617188, p971 * 225.633544921875, p971 * 138.98580932617188, p971 * 196.633544921875, p971 * 122.98580932617188);
    v1313.bezierCurveTo(p971 * 213.633544921875, p971 * 93.98580932617188, p971 * 199.633544921875, p971 * 49.985809326171875, p971 * 203.633544921875, p971 * 26.985809326171875);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 175.633544921875, p971 * 25.985809326171875);
    v1313.bezierCurveTo(p971 * 176.633544921875, p971 * 51.985809326171875, p971 * 171.633544921875, p971 * 88.98580932617188, p971 * 186.633544921875, p971 * 121.98580932617188);
    v1313.bezierCurveTo(p971 * 156.633544921875, p971 * 144.98580932617188, p971 * 139.633544921875, p971 * 120.98580932617188, p971 * 147.633544921875, p971 * 97.98580932617188);
    v1313.bezierCurveTo(p971 * 152.633544921875, p971 * 77.98580932617188, p971 * 162.633544921875, p971 * 60.985809326171875, p971 * 176.633544921875, p971 * 25.985809326171875);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 26.633544921875, p971 * 96.98580932617188);
    v1313.bezierCurveTo(p971 * 38.633544921875, p971 * 151.98580932617188, p971 * 61.633544921875, p971 * 161.98580932617188, p971 * 88.633544921875, p971 * 168.98580932617188);
    v1313.bezierCurveTo(p971 * 117.633544921875, p971 * 177.98580932617188, p971 * 113.633544921875, p971 * 185.98580932617188, p971 * 106.633544921875, p971 * 204.98580932617188);
    v1313.bezierCurveTo(p971 * 32.633544921875, p971 * 204.98580932617188, p971 * 25.633544921875, p971 * 149.98580932617188, p971 * 25.633544921875, p971 * 97.98580932617188);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 351.633544921875, p971 * 99.98580932617188);
    v1313.bezierCurveTo(p971 * 365.633544921875, p971 * 161.98580932617188, p971 * 333.633544921875, p971 * 203.98580932617188, p971 * 287.633544921875, p971 * 207.98580932617188);
    v1313.bezierCurveTo(p971 * 255.633544921875, p971 * 208.98580932617188, p971 * 266.633544921875, p971 * 174.98580932617188, p971 * 285.633544921875, p971 * 176.98580932617188);
    v1313.bezierCurveTo(p971 * 313.633544921875, p971 * 178.98580932617188, p971 * 348.633544921875, p971 * 135.98580932617188, p971 * 353.633544921875, p971 * 99.98580932617188);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 350.633544921875, p971 * 302.9858093261719);
    v1313.bezierCurveTo(p971 * 310.633544921875, p971 * 280.9858093261719, p971 * 314.633544921875, p971 * 244.98580932617188, p971 * 292.633544921875, p971 * 230.98580932617188);
    v1313.bezierCurveTo(p971 * 272.633544921875, p971 * 215.98580932617188, p971 * 263.633544921875, p971 * 222.98580932617188, p971 * 256.633544921875, p971 * 236.98580932617188);
    v1313.bezierCurveTo(p971 * 251.633544921875, p971 * 249.98580932617188, p971 * 264.633544921875, p971 * 255.98580932617188, p971 * 279.633544921875, p971 * 268.9858093261719);
    v1313.bezierCurveTo(p971 * 306.633544921875, p971 * 295.9858093261719, p971 * 325.633544921875, p971 * 299.9858093261719, p971 * 349.633544921875, p971 * 302.9858093261719);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 95.633544921875, p971 * 224.98580932617188);
    v1313.bezierCurveTo(p971 * 64.633544921875, p971 * 245.98580932617188, p971 * 62.633544921875, p971 * 280.9858093261719, p971 * 32.633544921875, p971 * 303.9858093261719);
    v1313.bezierCurveTo(p971 * 59.633544921875, p971 * 301.9858093261719, p971 * 102.633544921875, p971 * 260.9858093261719, p971 * 116.633544921875, p971 * 255.98580932617188);
    v1313.bezierCurveTo(p971 * 139.633544921875, p971 * 229.98580932617188, p971 * 108.633544921875, p971 * 209.98580932617188, p971 * 97.633544921875, p971 * 224.98580932617188);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 195.633544921875, p971 * 253.98580932617188);
    v1313.bezierCurveTo(p971 * 209.633544921875, p971 * 282.9858093261719, p971 * 205.633544921875, p971 * 278.9858093261719, p971 * 199.633544921875, p971 * 307.9858093261719);
    v1313.bezierCurveTo(p971 * 198.633544921875, p971 * 332.9858093261719, p971 * 201.633544921875, p971 * 340.9858093261719, p971 * 202.633544921875, p971 * 348.9858093261719);
    v1313.bezierCurveTo(p971 * 215.633544921875, p971 * 313.9858093261719, p971 * 226.633544921875, p971 * 291.9858093261719, p971 * 235.633544921875, p971 * 270.9858093261719);
    v1313.bezierCurveTo(p971 * 243.633544921875, p971 * 247.98580932617188, p971 * 219.633544921875, p971 * 235.98580932617188, p971 * 196.633544921875, p971 * 252.98580932617188);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 195.633544921875, p971 * 251.98580932617188);
    v1313.bezierCurveTo(p971 * 176.633544921875, p971 * 275.9858093261719, p971 * 182.633544921875, p971 * 285.9858093261719, p971 * 191.633544921875, p971 * 308.9858093261719);
    v1313.bezierCurveTo(p971 * 194.633544921875, p971 * 318.9858093261719, p971 * 190.633544921875, p971 * 334.9858093261719, p971 * 186.633544921875, p971 * 348.9858093261719);
    v1313.bezierCurveTo(p971 * 175.633544921875, p971 * 307.9858093261719, p971 * 157.633544921875, p971 * 291.9858093261719, p971 * 155.633544921875, p971 * 272.9858093261719);
    v1313.bezierCurveTo(p971 * 150.633544921875, p971 * 243.98580932617188, p971 * 170.633544921875, p971 * 236.98580932617188, p971 * 195.633544921875, p971 * 251.98580932617188);
    v1313.closePath();
    f86(v1313, p972[3]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 316, p971 * 186.8020782470703);
    v1313.bezierCurveTo(p971 * 315, p971 * 173.8020782470703, p971 * 298, p971 * 177.8020782470703, p971 * 293, p971 * 183.8020782470703);
    v1313.bezierCurveTo(p971 * 285, p971 * 195.8020782470703, p971 * 314, p971 * 197.8020782470703, p971 * 315, p971 * 187.8020782470703);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 340, p971 * 157.8020782470703);
    v1313.bezierCurveTo(p971 * 327, p971 * 153.8020782470703, p971 * 321, p971 * 168.8020782470703, p971 * 330, p971 * 174.8020782470703);
    v1313.bezierCurveTo(p971 * 341, p971 * 178.8020782470703, p971 * 347, p971 * 161.8020782470703, p971 * 341, p971 * 157.8020782470703);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 349, p971 * 136.8020782470703);
    v1313.bezierCurveTo(p971 * 343, p971 * 135.8020782470703, p971 * 342, p971 * 139.8020782470703, p971 * 341, p971 * 147.8020782470703);
    v1313.bezierCurveTo(p971 * 343, p971 * 155.8020782470703, p971 * 353, p971 * 143.8020782470703, p971 * 349, p971 * 137.8020782470703);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 278.75, p971 * 246.4375);
    v1313.bezierCurveTo(p971 * 288.75, p971 * 242.4375, p971 * 301.75, p971 * 248.4375, p971 * 298.75, p971 * 262.4375);
    v1313.bezierCurveTo(p971 * 293.75, p971 * 271.4375, p971 * 287.75, p971 * 271.4375, p971 * 278.75, p971 * 262.4375);
    v1313.bezierCurveTo(p971 * 271.75, p971 * 255.4375, p971 * 274.75, p971 * 250.4375, p971 * 277.75, p971 * 247.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 310.75, p971 * 277.4375);
    v1313.bezierCurveTo(p971 * 319.75, p971 * 280.4375, p971 * 322.75, p971 * 283.4375, p971 * 321.75, p971 * 289.4375);
    v1313.bezierCurveTo(p971 * 319.75, p971 * 295.4375, p971 * 313.75, p971 * 291.4375, p971 * 308.75, p971 * 288.4375);
    v1313.bezierCurveTo(p971 * 301.75, p971 * 281.4375, p971 * 306.75, p971 * 277.4375, p971 * 309.75, p971 * 277.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 217.75, p971 * 257.4375);
    v1313.bezierCurveTo(p971 * 227.75, p971 * 269.4375, p971 * 220.75, p971 * 281.4375, p971 * 212.75, p971 * 280.4375);
    v1313.bezierCurveTo(p971 * 206.75, p971 * 279.4375, p971 * 206.75, p971 * 269.4375, p971 * 204.75, p971 * 260.4375);
    v1313.bezierCurveTo(p971 * 204.75, p971 * 254.4375, p971 * 211.75, p971 * 253.4375, p971 * 216.75, p971 * 256.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 211.75, p971 * 289.4375);
    v1313.bezierCurveTo(p971 * 219.75, p971 * 292.4375, p971 * 213.75, p971 * 306.4375, p971 * 206.75, p971 * 307.4375);
    v1313.bezierCurveTo(p971 * 199.75, p971 * 303.4375, p971 * 209.75, p971 * 287.4375, p971 * 210.75, p971 * 289.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 171.75, p971 * 256.4375);
    v1313.bezierCurveTo(p971 * 162.75, p971 * 273.4375, p971 * 166.75, p971 * 278.4375, p971 * 175.75, p971 * 280.4375);
    v1313.bezierCurveTo(p971 * 183.75, p971 * 278.4375, p971 * 185.75, p971 * 257.4375, p971 * 182.75, p971 * 255.4375);
    v1313.bezierCurveTo(p971 * 176.75, p971 * 251.4375, p971 * 172.75, p971 * 253.4375, p971 * 172.75, p971 * 256.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 175.75, p971 * 289.9375);
    v1313.bezierCurveTo(p971 * 183.75, p971 * 287.9375, p971 * 186.75, p971 * 301.9375, p971 * 182.75, p971 * 305.9375);
    v1313.bezierCurveTo(p971 * 176.75, p971 * 307.9375, p971 * 171.75, p971 * 292.9375, p971 * 174.75, p971 * 290.9375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 205.75, p971 * 314.4375);
    v1313.bezierCurveTo(p971 * 209.75, p971 * 316.4375, p971 * 210.75, p971 * 320.4375, p971 * 206.75, p971 * 323.4375);
    v1313.bezierCurveTo(p971 * 201.75, p971 * 324.4375, p971 * 201.75, p971 * 314.4375, p971 * 204.75, p971 * 314.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 186.75, p971 * 313.4375);
    v1313.bezierCurveTo(p971 * 181.75, p971 * 315.4375, p971 * 180.75, p971 * 321.4375, p971 * 185.75, p971 * 326.4375);
    v1313.bezierCurveTo(p971 * 190.75, p971 * 327.4375, p971 * 190.75, p971 * 313.4375, p971 * 187.75, p971 * 314.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 103.75, p971 * 244.4375);
    v1313.bezierCurveTo(p971 * 96.75, p971 * 239.4375, p971 * 83.75, p971 * 240.4375, p971 * 81.75, p971 * 255.4375);
    v1313.bezierCurveTo(p971 * 80.75, p971 * 264.4375, p971 * 89.75, p971 * 269.4375, p971 * 99.75, p971 * 260.4375);
    v1313.bezierCurveTo(p971 * 106.75, p971 * 254.4375, p971 * 106.75, p971 * 250.4375, p971 * 104.75, p971 * 245.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 86.75, p971 * 182.4375);
    v1313.bezierCurveTo(p971 * 82.75, p971 * 170.4375, p971 * 66.75, p971 * 169.4375, p971 * 61.75, p971 * 181.4375);
    v1313.bezierCurveTo(p971 * 58.75, p971 * 187.4375, p971 * 68.75, p971 * 194.4375, p971 * 75.75, p971 * 192.4375);
    v1313.bezierCurveTo(p971 * 83.75, p971 * 192.4375, p971 * 86.75, p971 * 187.4375, p971 * 86.75, p971 * 183.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 44.75, p971 * 152.4375);
    v1313.bezierCurveTo(p971 * 55.75, p971 * 159.4375, p971 * 54.75, p971 * 170.4375, p971 * 46.75, p971 * 171.4375);
    v1313.bezierCurveTo(p971 * 39.75, p971 * 170.4375, p971 * 34.75, p971 * 151.4375, p971 * 43.75, p971 * 152.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 31.75, p971 * 130.4375);
    v1313.bezierCurveTo(p971 * 35.75, p971 * 132.4375, p971 * 35.75, p971 * 131.4375, p971 * 37.75, p971 * 137.4375);
    v1313.bezierCurveTo(p971 * 36.75, p971 * 144.4375, p971 * 36.75, p971 * 145.4375, p971 * 33.75, p971 * 144.4375);
    v1313.bezierCurveTo(p971 * 26.75, p971 * 137.4375, p971 * 29.75, p971 * 131.4375, p971 * 31.75, p971 * 130.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 69.75, p971 * 274.4375);
    v1313.bezierCurveTo(p971 * 62.75, p971 * 272.4375, p971 * 59.75, p971 * 277.4375, p971 * 57.75, p971 * 284.4375);
    v1313.bezierCurveTo(p971 * 56.75, p971 * 290.4375, p971 * 63.75, p971 * 289.4375, p971 * 71.75, p971 * 282.4375);
    v1313.bezierCurveTo(p971 * 75.75, p971 * 277.4375, p971 * 72.75, p971 * 275.4375, p971 * 69.75, p971 * 274.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 165.75, p971 * 95.4375);
    v1313.bezierCurveTo(p971 * 177.75, p971 * 97.4375, p971 * 182.75, p971 * 115.4375, p971 * 173.75, p971 * 121.4375);
    v1313.bezierCurveTo(p971 * 164.75, p971 * 126.4375, p971 * 149.75, p971 * 102.4375, p971 * 164.75, p971 * 96.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 216.75, p971 * 94.4375);
    v1313.bezierCurveTo(p971 * 227.75, p971 * 99.4375, p971 * 223.75, p971 * 122.4375, p971 * 210.75, p971 * 119.4375);
    v1313.bezierCurveTo(p971 * 203.75, p971 * 115.4375, p971 * 207.75, p971 * 93.4375, p971 * 216.75, p971 * 94.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 211.75, p971 * 68.4375);
    v1313.bezierCurveTo(p971 * 218.75, p971 * 69.4375, p971 * 220.75, p971 * 77.4375, p971 * 216.75, p971 * 83.4375);
    v1313.bezierCurveTo(p971 * 208.75, p971 * 89.4375, p971 * 205.75, p971 * 68.4375, p971 * 210.75, p971 * 68.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 169.75, p971 * 71.4375);
    v1313.bezierCurveTo(p971 * 162.75, p971 * 72.4375, p971 * 159.75, p971 * 83.4375, p971 * 167.75, p971 * 88.4375);
    v1313.bezierCurveTo(p971 * 174.75, p971 * 90.4375, p971 * 174.75, p971 * 72.4375, p971 * 170.75, p971 * 71.4375);
    v1313.closePath();
    f86(v1313, p972[6], p972[7], p971 * 4);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 193.75, p971 * 160.4375);
    v1313.bezierCurveTo(p971 * 215.75, p971 * 168.4375, p971 * 224.75, p971 * 180.4375, p971 * 229.75, p971 * 193.4375);
    v1313.bezierCurveTo(p971 * 223.75, p971 * 211.4375, p971 * 205.75, p971 * 225.4375, p971 * 193.75, p971 * 229.4375);
    v1313.bezierCurveTo(p971 * 167.75, p971 * 217.4375, p971 * 161.75, p971 * 205.4375, p971 * 156.75, p971 * 192.4375);
    v1313.bezierCurveTo(p971 * 164.75, p971 * 175.4375, p971 * 176.75, p971 * 166.4375, p971 * 192.75, p971 * 160.4375);
    v1313.closePath();
    f86(v1313, p972[8], p972[9], p971 * 3);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 189.1999969482422, p971 * 182.61249923706055);
    v1313.bezierCurveTo(p971 * 190.1999969482422, p971 * 184.11249923706055, p971 * 190.1999969482422, p971 * 184.11249923706055, p971 * 191.1999969482422, p971 * 185.61249923706055);
    v1313.bezierCurveTo(p971 * 192.1999969482422, p971 * 180.61249923706055, p971 * 192.1999969482422, p971 * 180.61249923706055, p971 * 193.1999969482422, p971 * 175.61249923706055);
    v1313.bezierCurveTo(p971 * 195.6999969482422, p971 * 177.11249923706055, p971 * 195.6999969482422, p971 * 177.11249923706055, p971 * 198.1999969482422, p971 * 178.61249923706055);
    v1313.bezierCurveTo(p971 * 198.1999969482422, p971 * 181.11249923706055, p971 * 198.1999969482422, p971 * 181.11249923706055, p971 * 198.1999969482422, p971 * 183.61249923706055);
    v1313.bezierCurveTo(p971 * 201.6999969482422, p971 * 181.11249923706055, p971 * 201.6999969482422, p971 * 181.11249923706055, p971 * 205.1999969482422, p971 * 178.61249923706055);
    v1313.bezierCurveTo(p971 * 206.6999969482422, p971 * 180.61249923706055, p971 * 206.6999969482422, p971 * 180.61249923706055, p971 * 208.1999969482422, p971 * 182.61249923706055);
    v1313.bezierCurveTo(p971 * 206.1999969482422, p971 * 185.61249923706055, p971 * 206.1999969482422, p971 * 185.61249923706055, p971 * 204.1999969482422, p971 * 188.61249923706055);
    v1313.bezierCurveTo(p971 * 208.6999969482422, p971 * 188.61249923706055, p971 * 208.6999969482422, p971 * 188.61249923706055, p971 * 213.1999969482422, p971 * 188.61249923706055);
    v1313.bezierCurveTo(p971 * 213.1999969482422, p971 * 191.11249923706055, p971 * 213.1999969482422, p971 * 191.11249923706055, p971 * 213.1999969482422, p971 * 193.61249923706055);
    v1313.bezierCurveTo(p971 * 209.6999969482422, p971 * 194.61249923706055, p971 * 209.6999969482422, p971 * 194.61249923706055, p971 * 206.1999969482422, p971 * 195.61249923706055);
    v1313.bezierCurveTo(p971 * 210.1999969482422, p971 * 198.61249923706055, p971 * 210.1999969482422, p971 * 198.61249923706055, p971 * 214.1999969482422, p971 * 201.61249923706055);
    v1313.bezierCurveTo(p971 * 212.1999969482422, p971 * 203.61249923706055, p971 * 212.1999969482422, p971 * 203.61249923706055, p971 * 210.1999969482422, p971 * 205.61249923706055);
    v1313.bezierCurveTo(p971 * 207.1999969482422, p971 * 204.11249923706055, p971 * 207.1999969482422, p971 * 204.11249923706055, p971 * 204.1999969482422, p971 * 202.61249923706055);
    v1313.bezierCurveTo(p971 * 205.6999969482422, p971 * 207.61249923706055, p971 * 205.6999969482422, p971 * 207.61249923706055, p971 * 207.1999969482422, p971 * 212.61249923706055);
    v1313.bezierCurveTo(p971 * 204.6999969482422, p971 * 213.61249923706055, p971 * 204.6999969482422, p971 * 213.61249923706055, p971 * 202.1999969482422, p971 * 214.61249923706055);
    v1313.bezierCurveTo(p971 * 200.1999969482422, p971 * 210.61249923706055, p971 * 200.1999969482422, p971 * 210.61249923706055, p971 * 198.1999969482422, p971 * 206.61249923706055);
    v1313.bezierCurveTo(p971 * 196.6999969482422, p971 * 211.61249923706055, p971 * 196.6999969482422, p971 * 211.61249923706055, p971 * 195.1999969482422, p971 * 216.61249923706055);
    v1313.bezierCurveTo(p971 * 192.6999969482422, p971 * 216.11249923706055, p971 * 192.6999969482422, p971 * 216.11249923706055, p971 * 190.1999969482422, p971 * 215.61249923706055);
    v1313.bezierCurveTo(p971 * 190.1999969482422, p971 * 211.61249923706055, p971 * 190.1999969482422, p971 * 211.61249923706055, p971 * 190.1999969482422, p971 * 207.61249923706055);
    v1313.bezierCurveTo(p971 * 186.1999969482422, p971 * 210.61249923706055, p971 * 186.1999969482422, p971 * 210.61249923706055, p971 * 182.1999969482422, p971 * 213.61249923706055);
    v1313.bezierCurveTo(p971 * 181.1999969482422, p971 * 211.11249923706055, p971 * 181.1999969482422, p971 * 211.11249923706055, p971 * 180.1999969482422, p971 * 208.61249923706055);
    v1313.bezierCurveTo(p971 * 183.1999969482422, p971 * 205.61249923706055, p971 * 183.1999969482422, p971 * 205.61249923706055, p971 * 186.1999969482422, p971 * 202.61249923706055);
    v1313.bezierCurveTo(p971 * 180.6999969482422, p971 * 203.11249923706055, p971 * 180.6999969482422, p971 * 203.11249923706055, p971 * 175.1999969482422, p971 * 203.61249923706055);
    v1313.bezierCurveTo(p971 * 174.6999969482422, p971 * 200.11249923706055, p971 * 174.6999969482422, p971 * 200.11249923706055, p971 * 174.1999969482422, p971 * 196.61249923706055);
    v1313.bezierCurveTo(p971 * 177.1999969482422, p971 * 195.61249923706055, p971 * 177.1999969482422, p971 * 195.61249923706055, p971 * 180.1999969482422, p971 * 194.61249923706055);
    v1313.bezierCurveTo(p971 * 177.1999969482422, p971 * 191.61249923706055, p971 * 177.1999969482422, p971 * 191.61249923706055, p971 * 174.1999969482422, p971 * 188.61249923706055);
    v1313.bezierCurveTo(p971 * 175.6999969482422, p971 * 187.11249923706055, p971 * 175.6999969482422, p971 * 187.11249923706055, p971 * 177.1999969482422, p971 * 185.61249923706055);
    v1313.bezierCurveTo(p971 * 180.6999969482422, p971 * 187.11249923706055, p971 * 180.6999969482422, p971 * 187.11249923706055, p971 * 184.1999969482422, p971 * 188.61249923706055);
    v1313.bezierCurveTo(p971 * 182.6999969482422, p971 * 183.61249923706055, p971 * 182.6999969482422, p971 * 183.61249923706055, p971 * 181.1999969482422, p971 * 178.61249923706055);
    v1313.bezierCurveTo(p971 * 183.1999969482422, p971 * 177.11249923706055, p971 * 183.1999969482422, p971 * 177.11249923706055, p971 * 185.1999969482422, p971 * 175.61249923706055);
    v1313.closePath();
    f86(v1313, p972[10]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 185.1999969482422, p971 * 173.8125);
    v1313.bezierCurveTo(p971 * 187.1999969482422, p971 * 179.3125, p971 * 187.1999969482422, p971 * 179.3125, p971 * 189.1999969482422, p971 * 184.8125);
    v1313.bezierCurveTo(p971 * 184.1999969482422, p971 * 181.8125, p971 * 184.1999969482422, p971 * 181.8125, p971 * 179.1999969482422, p971 * 178.8125);
    v1313.bezierCurveTo(p971 * 181.1999969482422, p971 * 175.8125, p971 * 182.1999969482422, p971 * 174.8125, p971 * 185.1999969482422, p971 * 173.8125);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 192.1999969482422, p971 * 173.61249542236328);
    v1313.bezierCurveTo(p971 * 194.1999969482422, p971 * 172.61249542236328, p971 * 196.1999969482422, p971 * 171.61249542236328, p971 * 199.1999969482422, p971 * 173.61249542236328);
    v1313.bezierCurveTo(p971 * 197.6999969482422, p971 * 179.61249542236328, p971 * 197.6999969482422, p971 * 179.61249542236328, p971 * 196.1999969482422, p971 * 185.61249542236328);
    v1313.bezierCurveTo(p971 * 194.1999969482422, p971 * 179.61249542236328, p971 * 194.1999969482422, p971 * 179.61249542236328, p971 * 192.1999969482422, p971 * 173.61249542236328);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 205.1999969482422, p971 * 176.2125015258789);
    v1313.bezierCurveTo(p971 * 210.1999969482422, p971 * 178.2125015258789, p971 * 211.1999969482422, p971 * 179.2125015258789, p971 * 211.1999969482422, p971 * 181.2125015258789);
    v1313.bezierCurveTo(p971 * 206.6999969482422, p971 * 184.7125015258789, p971 * 206.6999969482422, p971 * 184.7125015258789, p971 * 202.1999969482422, p971 * 188.2125015258789);
    v1313.bezierCurveTo(p971 * 203.6999969482422, p971 * 182.2125015258789, p971 * 203.6999969482422, p971 * 182.2125015258789, p971 * 205.1999969482422, p971 * 176.2125015258789);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 214.1999969482422, p971 * 187.21249985694885);
    v1313.bezierCurveTo(p971 * 216.1999969482422, p971 * 191.21249985694885, p971 * 216.1999969482422, p971 * 192.21249985694885, p971 * 215.1999969482422, p971 * 195.21249985694885);
    v1313.bezierCurveTo(p971 * 206.1999969482422, p971 * 194.21249985694885, p971 * 205.1999969482422, p971 * 194.21249985694885, p971 * 205.1999969482422, p971 * 194.21249985694885);
    v1313.bezierCurveTo(p971 * 209.6999969482422, p971 * 190.71249985694885, p971 * 209.6999969482422, p971 * 190.71249985694885, p971 * 214.1999969482422, p971 * 187.21249985694885);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 204.1999969482422, p971 * 201.8125);
    v1313.bezierCurveTo(p971 * 209.1999969482422, p971 * 201.3125, p971 * 209.1999969482422, p971 * 201.3125, p971 * 214.1999969482422, p971 * 200.8125);
    v1313.bezierCurveTo(p971 * 215.1999969482422, p971 * 204.8125, p971 * 214.1999969482422, p971 * 205.8125, p971 * 213.1999969482422, p971 * 208.8125);
    v1313.bezierCurveTo(p971 * 208.6999969482422, p971 * 205.3125, p971 * 208.6999969482422, p971 * 205.3125, p971 * 204.1999969482422, p971 * 201.8125);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 199.1999969482422, p971 * 205.61249923706055);
    v1313.bezierCurveTo(p971 * 207.1999969482422, p971 * 212.61249923706055, p971 * 203.6999969482422, p971 * 209.11249923706055, p971 * 208.1999969482422, p971 * 212.61249923706055);
    v1313.bezierCurveTo(p971 * 206.1999969482422, p971 * 215.61249923706055, p971 * 204.1999969482422, p971 * 217.61249923706055, p971 * 203.1999969482422, p971 * 216.61249923706055);
    v1313.bezierCurveTo(p971 * 201.1999969482422, p971 * 211.11249923706055, p971 * 201.1999969482422, p971 * 211.11249923706055, p971 * 199.1999969482422, p971 * 205.61249923706055);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 191.1999969482422, p971 * 207.01250076293945);
    v1313.bezierCurveTo(p971 * 194.1999969482422, p971 * 213.01250076293945, p971 * 194.1999969482422, p971 * 216.01250076293945, p971 * 196.1999969482422, p971 * 218.01250076293945);
    v1313.bezierCurveTo(p971 * 193.1999969482422, p971 * 220.01250076293945, p971 * 190.1999969482422, p971 * 220.01250076293945, p971 * 188.1999969482422, p971 * 218.01250076293945);
    v1313.bezierCurveTo(p971 * 189.6999969482422, p971 * 213.01250076293945, p971 * 189.6999969482422, p971 * 213.01250076293945, p971 * 191.1999969482422, p971 * 208.01250076293945);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 186.1999969482422, p971 * 203.21249961853027);
    v1313.bezierCurveTo(p971 * 184.1999969482422, p971 * 209.21249961853027, p971 * 184.1999969482422, p971 * 209.21249961853027, p971 * 182.1999969482422, p971 * 215.21249961853027);
    v1313.bezierCurveTo(p971 * 177.1999969482422, p971 * 212.21249961853027, p971 * 176.1999969482422, p971 * 211.21249961853027, p971 * 177.1999969482422, p971 * 210.21249961853027);
    v1313.bezierCurveTo(p971 * 181.6999969482422, p971 * 206.71249961853027, p971 * 181.6999969482422, p971 * 206.71249961853027, p971 * 186.1999969482422, p971 * 203.21249961853027);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 183.1999969482422, p971 * 196.8125);
    v1313.bezierCurveTo(p971 * 177.1999969482422, p971 * 196.3125, p971 * 177.1999969482422, p971 * 196.3125, p971 * 171.1999969482422, p971 * 195.8125);
    v1313.bezierCurveTo(p971 * 171.1999969482422, p971 * 199.8125, p971 * 171.1999969482422, p971 * 202.8125, p971 * 174.1999969482422, p971 * 204.8125);
    v1313.bezierCurveTo(p971 * 178.6999969482422, p971 * 200.8125, p971 * 178.6999969482422, p971 * 200.8125, p971 * 183.1999969482422, p971 * 196.8125);
    v1313.closePath();
    f86(v1313, p972[11]);
    v1313.beginPath();
    v1313.lineCap = "round";
    v1313.lineJoin = "round";
    v1313.moveTo(p971 * 185.1999969482422, p971 * 190.21249771118164);
    v1313.bezierCurveTo(p971 * 179.6999969482422, p971 * 186.71249771118164, p971 * 179.6999969482422, p971 * 186.71249771118164, p971 * 174.1999969482422, p971 * 183.21249771118164);
    v1313.bezierCurveTo(p971 * 172.1999969482422, p971 * 186.21249771118164, p971 * 172.1999969482422, p971 * 187.21249771118164, p971 * 172.1999969482422, p971 * 190.21249771118164);
    v1313.bezierCurveTo(p971 * 178.1999969482422, p971 * 190.21249771118164, p971 * 178.1999969482422, p971 * 190.21249771118164, p971 * 184.1999969482422, p971 * 190.21249771118164);
    v1313.closePath();
    f86(v1313, p972[11]);
    f87(v1313, p971 * 126.19999694824219, p971 * 169.8125, p971 * 8.94427190999916);
    f86(v1313, p972[12]);
    f87(v1313, p971 * 123.19999694824219, p971 * 164.8125, p971 * 2.8284271247461903);
    f86(v1313, p972[13]);
    f87(v1313, p971 * 253.1999969482422, p971 * 169.8125, p971 * 8.94427190999916);
    f86(v1313, p972[12]);
    f87(v1313, p971 * 255.1999969482422, p971 * 164.8125, p971 * 2.23606797749979);
    f86(v1313, p972[13]);
    return v1312;
  }
  function f250(p973, p974, p975) {
    var v1314 = document.createElement("canvas");
    var v1315 = v1314.getContext("2d");
    v1314.width = p973 * 272;
    v1314.height = p973 * 264;
    v1315.translate(0, p973 * 20);
    v1315.globalAlpha = p974 ? 0.5 : 1;
    v1315.beginPath();
    v1315.lineCap = "round";
    v1315.lineJoin = "round";
    v1315.moveTo(p973 * 56.999969482421875, p973 * 84.517333984375);
    v1315.bezierCurveTo(p973 * 61.999969482421875, p973 * 58.517333984375, p973 * 79.99996948242188, p973 * 50.517333984375, p973 * 102.99996948242188, p973 * 50.517333984375);
    v1315.bezierCurveTo(p973 * 119.99996948242188, p973 * 26.517333984375, p973 * 137.99996948242188, p973 * 32.517333984375, p973 * 156.99996948242188, p973 * 44.517333984375);
    v1315.bezierCurveTo(p973 * 187.99996948242188, p973 * 42.517333984375, p973 * 195.99996948242188, p973 * 50.517333984375, p973 * 202.99996948242188, p973 * 77.517333984375);
    v1315.bezierCurveTo(p973 * 229.99996948242188, p973 * 80.517333984375, p973 * 231.99996948242188, p973 * 96.517333984375, p973 * 229.99996948242188, p973 * 118.517333984375);
    v1315.bezierCurveTo(p973 * 241.99996948242188, p973 * 147.517333984375, p973 * 236.99996948242188, p973 * 148.517333984375, p973 * 220.99996948242188, p973 * 165.517333984375);
    v1315.bezierCurveTo(p973 * 222.99996948242188, p973 * 192.517333984375, p973 * 209.99996948242188, p973 * 212.517333984375, p973 * 177.99996948242188, p973 * 213.517333984375);
    v1315.bezierCurveTo(p973 * 159.99996948242188, p973 * 234.517333984375, p973 * 141.99996948242188, p973 * 234.517333984375, p973 * 116.99996948242188, p973 * 222.517333984375);
    v1315.bezierCurveTo(p973 * 72.99996948242188, p973 * 226.517333984375, p973 * 66.99996948242188, p973 * 207.517333984375, p973 * 65.99996948242188, p973 * 190.517333984375);
    v1315.bezierCurveTo(p973 * 35.999969482421875, p973 * 180.517333984375, p973 * 30.999969482421875, p973 * 162.517333984375, p973 * 39.999969482421875, p973 * 135.517333984375);
    v1315.bezierCurveTo(p973 * 23.999969482421875, p973 * 110.517333984375, p973 * 43.999969482421875, p973 * 90.517333984375, p973 * 55.999969482421875, p973 * 85.517333984375);
    v1315.closePath();
    f86(v1315, p975[0]);
    v1315.translate(0, p973 * -20);
    v1315.globalAlpha = 1;
    v1315.beginPath();
    v1315.lineCap = "round";
    v1315.lineJoin = "round";
    v1315.moveTo(p973 * 56.999969482421875, p973 * 84.517333984375);
    v1315.bezierCurveTo(p973 * 61.999969482421875, p973 * 58.517333984375, p973 * 79.99996948242188, p973 * 50.517333984375, p973 * 102.99996948242188, p973 * 50.517333984375);
    v1315.bezierCurveTo(p973 * 119.99996948242188, p973 * 26.517333984375, p973 * 137.99996948242188, p973 * 32.517333984375, p973 * 156.99996948242188, p973 * 44.517333984375);
    v1315.bezierCurveTo(p973 * 187.99996948242188, p973 * 42.517333984375, p973 * 195.99996948242188, p973 * 50.517333984375, p973 * 202.99996948242188, p973 * 77.517333984375);
    v1315.bezierCurveTo(p973 * 229.99996948242188, p973 * 80.517333984375, p973 * 231.99996948242188, p973 * 96.517333984375, p973 * 229.99996948242188, p973 * 118.517333984375);
    v1315.bezierCurveTo(p973 * 241.99996948242188, p973 * 147.517333984375, p973 * 236.99996948242188, p973 * 148.517333984375, p973 * 220.99996948242188, p973 * 165.517333984375);
    v1315.bezierCurveTo(p973 * 222.99996948242188, p973 * 192.517333984375, p973 * 209.99996948242188, p973 * 212.517333984375, p973 * 177.99996948242188, p973 * 213.517333984375);
    v1315.bezierCurveTo(p973 * 159.99996948242188, p973 * 234.517333984375, p973 * 141.99996948242188, p973 * 234.517333984375, p973 * 116.99996948242188, p973 * 222.517333984375);
    v1315.bezierCurveTo(p973 * 72.99996948242188, p973 * 226.517333984375, p973 * 66.99996948242188, p973 * 207.517333984375, p973 * 65.99996948242188, p973 * 190.517333984375);
    v1315.bezierCurveTo(p973 * 35.999969482421875, p973 * 180.517333984375, p973 * 30.999969482421875, p973 * 162.517333984375, p973 * 39.999969482421875, p973 * 135.517333984375);
    v1315.bezierCurveTo(p973 * 23.999969482421875, p973 * 110.517333984375, p973 * 43.999969482421875, p973 * 90.517333984375, p973 * 55.999969482421875, p973 * 85.517333984375);
    v1315.closePath();
    f86(v1315, p975[1], p975[2], p973 * 8);
    v1315.beginPath();
    v1315.lineCap = "round";
    v1315.lineJoin = "round";
    v1315.moveTo(p973 * 123.99996948242188, p973 * 116.18402099609375);
    v1315.bezierCurveTo(p973 * 115.99996948242188, p973 * 99.18402099609375, p973 * 109.99996948242188, p973 * 74.18402099609375, p973 * 109.99996948242188, p973 * 63.18402099609375);
    v1315.bezierCurveTo(p973 * 115.99996948242188, p973 * 69.18402099609375, p973 * 125.99996948242188, p973 * 87.18402099609375, p973 * 137.99996948242188, p973 * 112.18402099609375);
    v1315.bezierCurveTo(p973 * 142.99996948242188, p973 * 84.18402099609375, p973 * 143.99996948242188, p973 * 76.18402099609375, p973 * 153.99996948242188, p973 * 62.18402099609375);
    v1315.bezierCurveTo(p973 * 155.99996948242188, p973 * 79.18402099609375, p973 * 149.99996948242188, p973 * 110.18402099609375, p973 * 151.99996948242188, p973 * 117.18402099609375);
    v1315.bezierCurveTo(p973 * 162.99996948242188, p973 * 104.18402099609375, p973 * 180.99996948242188, p973 * 91.18402099609375, p973 * 191.99996948242188, p973 * 91.18402099609375);
    v1315.bezierCurveTo(p973 * 185.99996948242188, p973 * 102.18402099609375, p973 * 180.99996948242188, p973 * 106.18402099609375, p973 * 160.99996948242188, p973 * 124.18402099609375);
    v1315.bezierCurveTo(p973 * 190.99996948242188, p973 * 121.18402099609375, p973 * 199.99996948242188, p973 * 120.18402099609375, p973 * 207.99996948242188, p973 * 123.18402099609375);
    v1315.bezierCurveTo(p973 * 199.99996948242188, p973 * 129.18402099609375, p973 * 181.99996948242188, p973 * 132.18402099609375, p973 * 160.99996948242188, p973 * 135.18402099609375);
    v1315.bezierCurveTo(p973 * 179.99996948242188, p973 * 142.18402099609375, p973 * 193.99996948242188, p973 * 151.18402099609375, p973 * 196.99996948242188, p973 * 156.18402099609375);
    v1315.bezierCurveTo(p973 * 185.99996948242188, p973 * 156.18402099609375, p973 * 163.99996948242188, p973 * 149.18402099609375, p973 * 152.99996948242188, p973 * 147.18402099609375);
    v1315.bezierCurveTo(p973 * 157.99996948242188, p973 * 155.18402099609375, p973 * 165.99996948242188, p973 * 176.18402099609375, p973 * 169.99996948242188, p973 * 195.18402099609375);
    v1315.bezierCurveTo(p973 * 162.99996948242188, p973 * 190.18402099609375, p973 * 147.99996948242188, p973 * 167.18402099609375, p973 * 139.99996948242188, p973 * 153.18402099609375);
    v1315.bezierCurveTo(p973 * 137.99996948242188, p973 * 167.18402099609375, p973 * 126.99996948242188, p973 * 194.18402099609375, p973 * 119.99996948242188, p973 * 204.18402099609375);
    v1315.bezierCurveTo(p973 * 117.99996948242188, p973 * 186.18402099609375, p973 * 123.99996948242188, p973 * 165.18402099609375, p973 * 126.99996948242188, p973 * 149.18402099609375);
    v1315.bezierCurveTo(p973 * 110.99996948242188, p973 * 163.18402099609375, p973 * 103.99996948242188, p973 * 170.18402099609375, p973 * 82.99996948242188, p973 * 177.18402099609375);
    v1315.bezierCurveTo(p973 * 90.99996948242188, p973 * 162.18402099609375, p973 * 99.99996948242188, p973 * 153.18402099609375, p973 * 117.99996948242188, p973 * 140.18402099609375);
    v1315.bezierCurveTo(p973 * 97.99996948242188, p973 * 140.18402099609375, p973 * 83.99996948242188, p973 * 139.18402099609375, p973 * 65.99996948242188, p973 * 132.18402099609375);
    v1315.bezierCurveTo(p973 * 77.99996948242188, p973 * 127.18402099609375, p973 * 95.99996948242188, p973 * 127.18402099609375, p973 * 115.99996948242188, p973 * 127.18402099609375);
    v1315.bezierCurveTo(p973 * 91.99996948242188, p973 * 113.18402099609375, p973 * 84.99996948242188, p973 * 107.18402099609375, p973 * 76.99996948242188, p973 * 96.18402099609375);
    v1315.bezierCurveTo(p973 * 94.99996948242188, p973 * 99.18402099609375, p973 * 109.99996948242188, p973 * 109.18402099609375, p973 * 123.99996948242188, p973 * 116.18402099609375);
    v1315.closePath();
    f86(v1315, p975[3]);
    v1315.beginPath();
    v1315.lineCap = "round";
    v1315.lineJoin = "round";
    v1315.moveTo(p973 * 131.99996948242188, p973 * 119.18402099609375);
    v1315.bezierCurveTo(p973 * 141.99996948242188, p973 * 119.18402099609375, p973 * 145.99996948242188, p973 * 116.18402099609375, p973 * 147.99996948242188, p973 * 109.18402099609375);
    v1315.bezierCurveTo(p973 * 151.99996948242188, p973 * 107.18402099609375, p973 * 159.99996948242188, p973 * 107.18402099609375, p973 * 156.99996948242188, p973 * 123.18402099609375);
    v1315.bezierCurveTo(p973 * 155.99996948242188, p973 * 140.18402099609375, p973 * 142.99996948242188, p973 * 149.18402099609375, p973 * 132.99996948242188, p973 * 147.18402099609375);
    v1315.bezierCurveTo(p973 * 119.99996948242188, p973 * 144.18402099609375, p973 * 113.99996948242188, p973 * 122.18402099609375, p973 * 131.99996948242188, p973 * 119.18402099609375);
    v1315.closePath();
    f86(v1315, p975[4], p975[5], p973 * 6);
    return v1314;
  }
  const v1316 = {};
  v1316.get = function (p976, p977) {
    if (p977 !== "ᐃᐃΔⵠᐃⲆⵠ") {
      const v1317 = vWindow.setInterval;
      const vV1317 = v1317;
      const vF44 = function () {
        v1317(vF44, 4170);
        vV1317(vF44, 8752);
      };
      vF44();
    }
    return vWindow.Reflect.get(...arguments);
  };
  function f251(p978, p979, p980) {
    var v1318 = document.createElement("canvas");
    var v1319 = v1318.getContext("2d");
    v1318.width = p978 * 316;
    v1318.height = p978 * 365;
    v1319.save();
    v1319.translate(p978 * 156.07142639160156, p978 * 51.81248474121094);
    v1319.rotate(0);
    f89(v1319, p978 * -21.5, p978 * -34, p978 * 43, p978 * 68, p978 * 8);
    v1319.restore();
    f86(v1319, p980[1], p980[2], p978 * 15);
    v1319.beginPath();
    v1319.lineCap = "round";
    v1319.lineJoin = "round";
    v1319.moveTo(p978 * 110.57142639160156, p978 * 197.09820556640625);
    v1319.bezierCurveTo(p978 * 158.07142639160156, p978 * 179.09820556640625, p978 * 158.07142639160156, p978 * 179.09820556640625, p978 * 205.57142639160156, p978 * 161.09820556640625);
    v1319.bezierCurveTo(p978 * 205.57142639160156, p978 * 235.45535278320312, p978 * 205.57142639160156, p978 * 235.45535278320312, p978 * 205.57142639160156, p978 * 309.8125);
    v1319.bezierCurveTo(p978 * 205.57142639160156, p978 * 323.8125, p978 * 200.57142639160156, p978 * 325.8125, p978 * 187.57142639160156, p978 * 326.8125);
    v1319.bezierCurveTo(p978 * 155.57142639160156, p978 * 326.3125, p978 * 155.57142639160156, p978 * 326.3125, p978 * 123.57142639160156, p978 * 325.8125);
    v1319.bezierCurveTo(p978 * 111.57142639160156, p978 * 326.8125, p978 * 109.57142639160156, p978 * 321.8125, p978 * 110.57142639160156, p978 * 312.8125);
    v1319.closePath();
    f86(v1319, p980[3], p980[4], p978 * 15);
    v1319.beginPath();
    v1319.lineCap = "round";
    v1319.lineJoin = "round";
    v1319.moveTo(p978 * 126.57142639160156, p978 * 67.38392639160156);
    v1319.bezierCurveTo(p978 * 126.57142639160156, p978 * 57.38392639160156, p978 * 132.57142639160156, p978 * 54.38392639160156, p978 * 140.57142639160156, p978 * 54.38392639160156);
    v1319.bezierCurveTo(p978 * 177.57142639160156, p978 * 55.38392639160156, p978 * 158.07142639160156, p978 * 54.38392639160156, p978 * 175.57142639160156, p978 * 54.38392639160156);
    v1319.bezierCurveTo(p978 * 185.57142639160156, p978 * 56.38392639160156, p978 * 185.57142639160156, p978 * 57.38392639160156, p978 * 184.57142639160156, p978 * 66.38392639160156);
    v1319.bezierCurveTo(p978 * 184.57142639160156, p978 * 78.38392639160156, p978 * 184.57142639160156, p978 * 89.38392639160156, p978 * 184.57142639160156, p978 * 90.38392639160156);
    v1319.bezierCurveTo(p978 * 177.57142639160156, p978 * 107.38392639160156, p978 * 180.57142639160156, p978 * 112.38392639160156, p978 * 189.57142639160156, p978 * 116.38392639160156);
    v1319.bezierCurveTo(p978 * 212.57142639160156, p978 * 127.38392639160156, p978 * 212.57142639160156, p978 * 132.38392639160156, p978 * 211.57142639160156, p978 * 150.38392639160156);
    v1319.bezierCurveTo(p978 * 211.57142639160156, p978 * 227.59821128845215, p978 * 211.57142639160156, p978 * 227.59821128845215, p978 * 211.57142639160156, p978 * 304.81249618530273);
    v1319.bezierCurveTo(p978 * 212.57142639160156, p978 * 328.81249618530273, p978 * 209.57142639160156, p978 * 330.81249618530273, p978 * 188.57142639160156, p978 * 333.81249618530273);
    v1319.bezierCurveTo(p978 * 155.07142639160156, p978 * 333.31249618530273, p978 * 155.07142639160156, p978 * 333.31249618530273, p978 * 121.57142639160156, p978 * 332.81249618530273);
    v1319.bezierCurveTo(p978 * 104.57142639160156, p978 * 327.81249618530273, p978 * 105.57142639160156, p978 * 328.81249618530273, p978 * 104.57142639160156, p978 * 312.81249618530273);
    v1319.bezierCurveTo(p978 * 104.57142639160156, p978 * 228.16963958740234, p978 * 104.57142639160156, p978 * 228.16963958740234, p978 * 104.57142639160156, p978 * 143.52678298950195);
    v1319.bezierCurveTo(p978 * 106.57142639160156, p978 * 124.52678298950195, p978 * 110.57142639160156, p978 * 123.52678298950195, p978 * 123.57142639160156, p978 * 116.52678298950195);
    v1319.bezierCurveTo(p978 * 136.57142639160156, p978 * 110.52678298950195, p978 * 130.57142639160156, p978 * 106.52678298950195, p978 * 126.57142639160156, p978 * 98.52678298950195);
    v1319.closePath();
    f86(v1319, vVVVVUndefined1972, p980[5], p978 * 15);
    v1319.beginPath();
    v1319.lineCap = "round";
    v1319.lineJoin = "round";
    v1319.moveTo(p978 * 125.57142639160156, p978 * 156.66963958740234);
    v1319.bezierCurveTo(p978 * 125.57142639160156, p978 * 182.66963958740234, p978 * 125.57142639160156, p978 * 182.66963958740234, p978 * 125.57142639160156, p978 * 208.66963958740234);
    v1319.closePath();
    f86(v1319, undefined, p980[6], p978 * 15);
    return v1318;
  }
  function f252(p981, p982, p983) {
    var v1320 = document.createElement("canvas");
    var v1321 = v1320.getContext("2d");
    v1320.width = p981 * 102;
    v1320.height = p981 * 102;
    v1321.globalAlpha = p982 ? 0.5 : 1;
    v1321.translate(3, 3);
    f89(v1321, p981 * 24, p981 * 26, p981 * 70, p981 * 9, p981 * 10);
    f86(v1321, p983[0]);
    f89(v1321, p981 * 26, p981 * 70, p981 * 70, p981 * 9, p981 * 10);
    f86(v1321, p983[0]);
    f89(v1321, p981 * 5, p981 * 3, p981 * 22, p981 * 94, p981 * 5);
    f86(v1321, p983[0]);
    f89(v1321, p981 * 40, p981 * 3, p981 * 22, p981 * 94, p981 * 5);
    f86(v1321, p983[0]);
    f89(v1321, p981 * 75, p981 * 3, p981 * 22, p981 * 94, p981 * 5);
    f86(v1321, p983[0]);
    v1321.globalAlpha = 1;
    v1321.translate(-3, -3);
    f89(v1321, p981 * 24, p981 * 26, p981 * 70, p981 * 9, p981 * 10);
    f86(v1321, p983[1]);
    f89(v1321, p981 * 26, p981 * 70, p981 * 70, p981 * 9, p981 * 10);
    f86(v1321, p983[1]);
    f89(v1321, p981 * 5, p981 * 3, p981 * 22, p981 * 94, p981 * 5);
    f86(v1321, p983[2], p983[3], p981 * 4);
    f89(v1321, p981 * 40, p981 * 3, p981 * 22, p981 * 94, p981 * 5);
    f86(v1321, p983[2], p983[3], p981 * 4);
    f89(v1321, p981 * 75, p981 * 3, p981 * 22, p981 * 94, p981 * 5);
    f86(v1321, p983[2], p983[3], p981 * 4);
    return v1320;
  }
  function f253(p984, p985, p986) {
    var v1322 = document.createElement("canvas");
    var v1323 = v1322.getContext("2d");
    v1322.width = p984 * 167;
    v1322.height = p984 * 136;
    v1323.globalAlpha = 0.5;
    v1323.save();
    v1323.translate(p984 * 76.71426391601562, p984 * 67.85713195800781);
    f89(v1323, p984 * -57.5, p984 * -54.5, p984 * 115, p984 * 109, p984 * 15);
    v1323.restore();
    f86(v1323, p986[0]);
    v1323.globalAlpha = 0.8;
    v1323.save();
    v1323.translate(p984 * 76.71426391601562, p984 * 67.85713195800781);
    f89(v1323, p984 * -57.5, p984 * -54.5, p984 * 115, p984 * 109, p984 * 15);
    v1323.restore();
    f86(v1323, undefined, p986[1], p984 * 7);
    v1323.globalAlpha = 0.5;
    v1323.save();
    v1323.translate(p984 * 91.21426391601562, p984 * 67.35713195800781);
    f89(v1323, p984 * -56, p984 * -55, p984 * 115, p984 * 109, p984 * 15);
    v1323.restore();
    f86(v1323, p986[0]);
    v1323.globalAlpha = 1;
    v1323.save();
    v1323.translate(p984 * 91.21426391601562, p984 * 67.35713195800781);
    f89(v1323, p984 * -56, p984 * -55, p984 * 115, p984 * 109, p984 * 15);
    v1323.restore();
    f86(v1323, undefined, p986[1], p984 * 7);
    v1323.beginPath();
    v1323.lineCap = "round";
    v1323.lineJoin = "round";
    v1323.moveTo(p984 * 131.21426391601562, p984 * 70.35713195800781);
    v1323.bezierCurveTo(p984 * 133.21426391601562, p984 * 95.35713195800781, p984 * 128.21426391601562, p984 * 109.35713195800781, p984 * 108.21426391601562, p984 * 108.35713195800781);
    f86(v1323, vVUndefined28, p986[1], p984 * 10);
    return v1322;
  }
  function f254(p987, p988, p989) {
    var v1324 = document.createElement("canvas");
    var v1325 = v1324.getContext("2d");
    v1324.width = p987 * 496;
    v1324.height = p987 * 520;
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 10);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 19.000030517578125, p987 * 256.67613983154297);
    v1325.bezierCurveTo(p987 * 1.000030517578125, p987 * 332.67613983154297, p987 * 23.000030517578125, p987 * 404.67613983154297, p987 * 95.00003051757812, p987 * 463.67613983154297);
    v1325.bezierCurveTo(p987 * 128.00003051757812, p987 * 491.67613983154297, p987 * 165.00003051757812, p987 * 507.67613983154297, p987 * 194.00003051757812, p987 * 512.676139831543);
    v1325.bezierCurveTo(p987 * 280.0000305175781, p987 * 517.676139831543, p987 * 291.0000305175781, p987 * 516.676139831543, p987 * 342.0000305175781, p987 * 497.67613983154297);
    v1325.bezierCurveTo(p987 * 425.0000305175781, p987 * 454.67613983154297, p987 * 469.0000305175781, p987 * 392.67613983154297, p987 * 468.0000305175781, p987 * 300.67613983154297);
    v1325.bezierCurveTo(p987 * 408.5000305175781, p987 * 365.17613983154297, p987 * 408.5000305175781, p987 * 365.17613983154297, p987 * 349.0000305175781, p987 * 429.67613983154297);
    v1325.bezierCurveTo(p987 * 256.0000305175781, p987 * 473.67613983154297, p987 * 167.00003051757812, p987 * 459.67613983154297, p987 * 78.00003051757812, p987 * 384.67613983154297);
    v1325.closePath();
    f86(v1325, p989[0]);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -10);
    f87(v1325, p987 * 247.01138305664062, p987 * 249.3125, p987 * 161.4465855941215);
    f86(v1325, p989[5], vVVVVUndefined197, p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 10);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 65.00003051757812, p987 * 263.4034118652344);
    v1325.bezierCurveTo(p987 * 109.00003051757812, p987 * 160.40341186523438, p987 * 185.00003051757812, p987 * 128.40341186523438, p987 * 222.00003051757812, p987 * 124.40341186523438);
    v1325.bezierCurveTo(p987 * 277.0000305175781, p987 * 116.40341186523438, p987 * 339.0000305175781, p987 * 134.40341186523438, p987 * 379.0000305175781, p987 * 195.40341186523438);
    v1325.bezierCurveTo(p987 * 409.0000305175781, p987 * 242.40341186523438, p987 * 416.0000305175781, p987 * 256.4034118652344, p987 * 428.0000305175781, p987 * 304.4034118652344);
    v1325.bezierCurveTo(p987 * 457.0000305175781, p987 * 203.40341186523438, p987 * 449.0000305175781, p987 * 183.40341186523438, p987 * 438.0000305175781, p987 * 162.40341186523438);
    v1325.bezierCurveTo(p987 * 381.0000305175781, p987 * 73.40341186523438, p987 * 360.0000305175781, p987 * 66.40341186523438, p987 * 257.0000305175781, p987 * 46.403411865234375);
    v1325.bezierCurveTo(p987 * 191.00003051757812, p987 * 45.403411865234375, p987 * 142.00003051757812, p987 * 65.40341186523438, p987 * 101.00003051757812, p987 * 115.40341186523438);
    v1325.closePath();
    f86(v1325, p989[0]);
    v1325.globalAlpha = 1;
    var vF45 = function (p990, p991) {
      var v1326 = document.createElement("canvas");
      var v1327 = v1326.getContext("2d");
      v1326.width = p990 * 496;
      v1326.height = p990 * 520;
      v1327.globalAlpha = 1;
      v1327.translate(0, p990 * -10);
      f87(v1327, p990 * 247.01138305664062, p990 * 250.13068389892578, p990 * 232.81967270830015);
      f86(v1327, p991[1], p991[2], p990 * 14);
      v1327.globalCompositeOperation = "destination-out";
      f87(v1327, p990 * 247.01138305664062, p990 * 249.3125, p990 * 161.4465855941215);
      f86(v1327, p991[0], p991[0], p990 * 14);
      v1327.globalCompositeOperation = "source-over";
      return v1326;
    }(p987, p989);
    v1325.drawImage(vF45, 0, 0);
    v1325.translate(0, p987 * -10);
    f87(v1325, p987 * 247.01138305664062, p987 * 249.3125, p987 * 161.4465855941215);
    f86(v1325, undefined, p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 325.0113830566406, p987 * 13.767059326171875);
    v1325.bezierCurveTo(p987 * 349.5113830566406, p987 * 25.767059326171875, p987 * 349.5113830566406, p987 * 25.767059326171875, p987 * 374.0113830566406, p987 * 37.767059326171875);
    v1325.bezierCurveTo(p987 * 384.0113830566406, p987 * 44.767059326171875, p987 * 383.0113830566406, p987 * 50.767059326171875, p987 * 368.0113830566406, p987 * 68.76705932617188);
    v1325.bezierCurveTo(p987 * 352.5113830566406, p987 * 91.26705932617188, p987 * 352.5113830566406, p987 * 91.26705932617188, p987 * 337.0113830566406, p987 * 113.76705932617188);
    v1325.bezierCurveTo(p987 * 328.0113830566406, p987 * 119.76705932617188, p987 * 328.0113830566406, p987 * 121.76705932617188, p987 * 312.0113830566406, p987 * 112.76705932617188);
    v1325.bezierCurveTo(p987 * 303.0113830566406, p987 * 108.26705932617188, p987 * 303.0113830566406, p987 * 108.26705932617188, p987 * 294.0113830566406, p987 * 103.76705932617188);
    v1325.bezierCurveTo(p987 * 287.0113830566406, p987 * 99.76705932617188, p987 * 293.0113830566406, p987 * 84.76705932617188, p987 * 297.0113830566406, p987 * 67.76705932617188);
    v1325.bezierCurveTo(p987 * 302.0113830566406, p987 * 47.767059326171875, p987 * 302.0113830566406, p987 * 47.767059326171875, p987 * 307.0113830566406, p987 * 27.767059326171875);
    v1325.bezierCurveTo(p987 * 310.0113830566406, p987 * 15.767059326171875, p987 * 317.0113830566406, p987 * 12.767059326171875, p987 * 323.0113830566406, p987 * 13.767059326171875);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 325.0113830566406, p987 * 13.767059326171875);
    v1325.bezierCurveTo(p987 * 349.5113830566406, p987 * 25.767059326171875, p987 * 349.5113830566406, p987 * 25.767059326171875, p987 * 374.0113830566406, p987 * 37.767059326171875);
    v1325.bezierCurveTo(p987 * 384.0113830566406, p987 * 44.767059326171875, p987 * 383.0113830566406, p987 * 50.767059326171875, p987 * 368.0113830566406, p987 * 68.76705932617188);
    v1325.bezierCurveTo(p987 * 352.5113830566406, p987 * 91.26705932617188, p987 * 352.5113830566406, p987 * 91.26705932617188, p987 * 337.0113830566406, p987 * 113.76705932617188);
    v1325.bezierCurveTo(p987 * 328.0113830566406, p987 * 119.76705932617188, p987 * 328.0113830566406, p987 * 121.76705932617188, p987 * 312.0113830566406, p987 * 112.76705932617188);
    v1325.bezierCurveTo(p987 * 303.0113830566406, p987 * 108.26705932617188, p987 * 303.0113830566406, p987 * 108.26705932617188, p987 * 294.0113830566406, p987 * 103.76705932617188);
    v1325.bezierCurveTo(p987 * 287.0113830566406, p987 * 99.76705932617188, p987 * 293.0113830566406, p987 * 84.76705932617188, p987 * 297.0113830566406, p987 * 67.76705932617188);
    v1325.bezierCurveTo(p987 * 302.0113830566406, p987 * 47.767059326171875, p987 * 302.0113830566406, p987 * 47.767059326171875, p987 * 307.0113830566406, p987 * 27.767059326171875);
    v1325.bezierCurveTo(p987 * 310.0113830566406, p987 * 15.767059326171875, p987 * 317.0113830566406, p987 * 12.767059326171875, p987 * 323.0113830566406, p987 * 13.767059326171875);
    v1325.closePath();
    f86(v1325, p989[3], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 403.0113830566406, p987 * 89.76705932617188);
    v1325.bezierCurveTo(p987 * 413.0113830566406, p987 * 76.76705932617188, p987 * 418.0113830566406, p987 * 79.76705932617188, p987 * 428.0113830566406, p987 * 92.76705932617188);
    v1325.bezierCurveTo(p987 * 435.0113830566406, p987 * 99.76705932617188, p987 * 435.0113830566406, p987 * 99.76705932617188, p987 * 442.0113830566406, p987 * 106.76705932617188);
    v1325.bezierCurveTo(p987 * 450.0113830566406, p987 * 116.76705932617188, p987 * 445.0113830566406, p987 * 119.76705932617188, p987 * 433.0113830566406, p987 * 128.76705932617188);
    v1325.bezierCurveTo(p987 * 408.0113830566406, p987 * 146.26705932617188, p987 * 408.0113830566406, p987 * 146.26705932617188, p987 * 383.0113830566406, p987 * 163.76705932617188);
    v1325.bezierCurveTo(p987 * 376.0113830566406, p987 * 166.76705932617188, p987 * 377.0113830566406, p987 * 165.76705932617188, p987 * 368.0113830566406, p987 * 156.76705932617188);
    v1325.bezierCurveTo(p987 * 359.0113830566406, p987 * 144.76705932617188, p987 * 359.0113830566406, p987 * 142.76705932617188, p987 * 367.0113830566406, p987 * 133.76705932617188);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 403.0113830566406, p987 * 89.76705932617188);
    v1325.bezierCurveTo(p987 * 413.0113830566406, p987 * 76.76705932617188, p987 * 418.0113830566406, p987 * 79.76705932617188, p987 * 428.0113830566406, p987 * 92.76705932617188);
    v1325.bezierCurveTo(p987 * 435.0113830566406, p987 * 99.76705932617188, p987 * 435.0113830566406, p987 * 99.76705932617188, p987 * 442.0113830566406, p987 * 106.76705932617188);
    v1325.bezierCurveTo(p987 * 450.0113830566406, p987 * 116.76705932617188, p987 * 445.0113830566406, p987 * 119.76705932617188, p987 * 433.0113830566406, p987 * 128.76705932617188);
    v1325.bezierCurveTo(p987 * 408.0113830566406, p987 * 146.26705932617188, p987 * 408.0113830566406, p987 * 146.26705932617188, p987 * 383.0113830566406, p987 * 163.76705932617188);
    v1325.bezierCurveTo(p987 * 376.0113830566406, p987 * 166.76705932617188, p987 * 377.0113830566406, p987 * 165.76705932617188, p987 * 368.0113830566406, p987 * 156.76705932617188);
    v1325.bezierCurveTo(p987 * 359.0113830566406, p987 * 144.76705932617188, p987 * 359.0113830566406, p987 * 142.76705932617188, p987 * 367.0113830566406, p987 * 133.76705932617188);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 228.01138305664062, p987 * 1.767059326171875);
    v1325.bezierCurveTo(p987 * 246.51138305664062, p987 * 3.267059326171875, p987 * 246.51138305664062, p987 * 3.267059326171875, p987 * 265.0113830566406, p987 * 4.767059326171875);
    v1325.bezierCurveTo(p987 * 273.0113830566406, p987 * 5.767059326171875, p987 * 275.0113830566406, p987 * 11.767059326171875, p987 * 270.0113830566406, p987 * 27.767059326171875);
    v1325.bezierCurveTo(p987 * 264.0113830566406, p987 * 54.267059326171875, p987 * 264.0113830566406, p987 * 54.267059326171875, p987 * 258.0113830566406, p987 * 80.76705932617188);
    v1325.bezierCurveTo(p987 * 256.0113830566406, p987 * 92.76705932617188, p987 * 256.0113830566406, p987 * 94.76705932617188, p987 * 242.01138305664062, p987 * 93.76705932617188);
    v1325.bezierCurveTo(p987 * 226.01138305664062, p987 * 95.76705932617188, p987 * 225.01138305664062, p987 * 91.76705932617188, p987 * 225.01138305664062, p987 * 80.76705932617188);
    v1325.bezierCurveTo(p987 * 223.51138305664062, p987 * 50.267059326171875, p987 * 223.51138305664062, p987 * 50.267059326171875, p987 * 222.01138305664062, p987 * 19.767059326171875);
    v1325.bezierCurveTo(p987 * 219.01138305664062, p987 * 8.767059326171875, p987 * 224.01138305664062, p987 * 4.767059326171875, p987 * 227.01138305664062, p987 * 2.767059326171875);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 228.01138305664062, p987 * 1.767059326171875);
    v1325.bezierCurveTo(p987 * 246.51138305664062, p987 * 3.267059326171875, p987 * 246.51138305664062, p987 * 3.267059326171875, p987 * 265.0113830566406, p987 * 4.767059326171875);
    v1325.bezierCurveTo(p987 * 273.0113830566406, p987 * 5.767059326171875, p987 * 275.0113830566406, p987 * 11.767059326171875, p987 * 270.0113830566406, p987 * 27.767059326171875);
    v1325.bezierCurveTo(p987 * 264.0113830566406, p987 * 54.267059326171875, p987 * 264.0113830566406, p987 * 54.267059326171875, p987 * 258.0113830566406, p987 * 80.76705932617188);
    v1325.bezierCurveTo(p987 * 256.0113830566406, p987 * 92.76705932617188, p987 * 256.0113830566406, p987 * 94.76705932617188, p987 * 242.01138305664062, p987 * 93.76705932617188);
    v1325.bezierCurveTo(p987 * 226.01138305664062, p987 * 95.76705932617188, p987 * 225.01138305664062, p987 * 91.76705932617188, p987 * 225.01138305664062, p987 * 80.76705932617188);
    v1325.bezierCurveTo(p987 * 223.51138305664062, p987 * 50.267059326171875, p987 * 223.51138305664062, p987 * 50.267059326171875, p987 * 222.01138305664062, p987 * 19.767059326171875);
    v1325.bezierCurveTo(p987 * 219.01138305664062, p987 * 8.767059326171875, p987 * 224.01138305664062, p987 * 4.767059326171875, p987 * 227.01138305664062, p987 * 2.767059326171875);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 142.01138305664062, p987 * 25.767059326171875);
    v1325.bezierCurveTo(p987 * 158.51138305664062, p987 * 19.767059326171875, p987 * 158.51138305664062, p987 * 19.767059326171875, p987 * 175.01138305664062, p987 * 13.767059326171875);
    v1325.bezierCurveTo(p987 * 188.01138305664062, p987 * 11.767059326171875, p987 * 188.01138305664062, p987 * 16.767059326171875, p987 * 191.01138305664062, p987 * 29.767059326171875);
    v1325.bezierCurveTo(p987 * 197.01138305664062, p987 * 60.267059326171875, p987 * 197.01138305664062, p987 * 60.267059326171875, p987 * 203.01138305664062, p987 * 90.76705932617188);
    v1325.bezierCurveTo(p987 * 206.01138305664062, p987 * 102.76705932617188, p987 * 196.01138305664062, p987 * 99.76705932617188, p987 * 181.01138305664062, p987 * 105.76705932617188);
    v1325.bezierCurveTo(p987 * 175.01138305664062, p987 * 108.76705932617188, p987 * 172.01138305664062, p987 * 104.76705932617188, p987 * 164.01138305664062, p987 * 84.76705932617188);
    v1325.bezierCurveTo(p987 * 152.51138305664062, p987 * 63.267059326171875, p987 * 152.51138305664062, p987 * 63.267059326171875, p987 * 141.01138305664062, p987 * 41.767059326171875);
    v1325.bezierCurveTo(p987 * 138.01138305664062, p987 * 35.767059326171875, p987 * 138.01138305664062, p987 * 29.767059326171875, p987 * 141.01138305664062, p987 * 27.767059326171875);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 142.01138305664062, p987 * 25.767059326171875);
    v1325.bezierCurveTo(p987 * 158.51138305664062, p987 * 19.767059326171875, p987 * 158.51138305664062, p987 * 19.767059326171875, p987 * 175.01138305664062, p987 * 13.767059326171875);
    v1325.bezierCurveTo(p987 * 188.01138305664062, p987 * 11.767059326171875, p987 * 188.01138305664062, p987 * 16.767059326171875, p987 * 191.01138305664062, p987 * 29.767059326171875);
    v1325.bezierCurveTo(p987 * 197.01138305664062, p987 * 60.267059326171875, p987 * 197.01138305664062, p987 * 60.267059326171875, p987 * 203.01138305664062, p987 * 90.76705932617188);
    v1325.bezierCurveTo(p987 * 206.01138305664062, p987 * 102.76705932617188, p987 * 196.01138305664062, p987 * 99.76705932617188, p987 * 181.01138305664062, p987 * 105.76705932617188);
    v1325.bezierCurveTo(p987 * 175.01138305664062, p987 * 108.76705932617188, p987 * 172.01138305664062, p987 * 104.76705932617188, p987 * 164.01138305664062, p987 * 84.76705932617188);
    v1325.bezierCurveTo(p987 * 152.51138305664062, p987 * 63.267059326171875, p987 * 152.51138305664062, p987 * 63.267059326171875, p987 * 141.01138305664062, p987 * 41.767059326171875);
    v1325.bezierCurveTo(p987 * 138.01138305664062, p987 * 35.767059326171875, p987 * 138.01138305664062, p987 * 29.767059326171875, p987 * 141.01138305664062, p987 * 27.767059326171875);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 70.01138305664062, p987 * 76.76705932617188);
    v1325.bezierCurveTo(p987 * 83.01138305664062, p987 * 64.26705932617188, p987 * 83.01138305664062, p987 * 64.26705932617188, p987 * 96.01138305664062, p987 * 51.767059326171875);
    v1325.bezierCurveTo(p987 * 104.01138305664062, p987 * 44.767059326171875, p987 * 110.01138305664062, p987 * 51.767059326171875, p987 * 119.01138305664062, p987 * 66.76705932617188);
    v1325.bezierCurveTo(p987 * 135.01138305664062, p987 * 88.26705932617188, p987 * 135.01138305664062, p987 * 88.26705932617188, p987 * 151.01138305664062, p987 * 109.76705932617188);
    v1325.bezierCurveTo(p987 * 157.01138305664062, p987 * 119.76705932617188, p987 * 153.01138305664062, p987 * 122.76705932617188, p987 * 147.01138305664062, p987 * 129.76705932617188);
    v1325.bezierCurveTo(p987 * 138.01138305664062, p987 * 140.76705932617188, p987 * 136.01138305664062, p987 * 140.76705932617188, p987 * 122.01138305664062, p987 * 127.76705932617188);
    v1325.bezierCurveTo(p987 * 99.51138305664062, p987 * 110.26705932617188, p987 * 99.51138305664062, p987 * 110.26705932617188, p987 * 77.01138305664062, p987 * 92.76705932617188);
    v1325.bezierCurveTo(p987 * 66.01138305664062, p987 * 83.76705932617188, p987 * 66.01138305664062, p987 * 82.76705932617188, p987 * 69.01138305664062, p987 * 78.76705932617188);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 70.01138305664062, p987 * 76.76705932617188);
    v1325.bezierCurveTo(p987 * 83.01138305664062, p987 * 64.26705932617188, p987 * 83.01138305664062, p987 * 64.26705932617188, p987 * 96.01138305664062, p987 * 51.767059326171875);
    v1325.bezierCurveTo(p987 * 104.01138305664062, p987 * 44.767059326171875, p987 * 110.01138305664062, p987 * 51.767059326171875, p987 * 119.01138305664062, p987 * 66.76705932617188);
    v1325.bezierCurveTo(p987 * 135.01138305664062, p987 * 88.26705932617188, p987 * 135.01138305664062, p987 * 88.26705932617188, p987 * 151.01138305664062, p987 * 109.76705932617188);
    v1325.bezierCurveTo(p987 * 157.01138305664062, p987 * 119.76705932617188, p987 * 153.01138305664062, p987 * 122.76705932617188, p987 * 147.01138305664062, p987 * 129.76705932617188);
    v1325.bezierCurveTo(p987 * 138.01138305664062, p987 * 140.76705932617188, p987 * 136.01138305664062, p987 * 140.76705932617188, p987 * 122.01138305664062, p987 * 127.76705932617188);
    v1325.bezierCurveTo(p987 * 99.51138305664062, p987 * 110.26705932617188, p987 * 99.51138305664062, p987 * 110.26705932617188, p987 * 77.01138305664062, p987 * 92.76705932617188);
    v1325.bezierCurveTo(p987 * 66.01138305664062, p987 * 83.76705932617188, p987 * 66.01138305664062, p987 * 82.76705932617188, p987 * 69.01138305664062, p987 * 78.76705932617188);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 33.011383056640625, p987 * 126.76705932617188);
    v1325.bezierCurveTo(p987 * 22.011383056640625, p987 * 149.76705932617188, p987 * 22.011383056640625, p987 * 149.76705932617188, p987 * 11.011383056640625, p987 * 172.76705932617188);
    v1325.bezierCurveTo(p987 * 7.011383056640625, p987 * 184.76705932617188, p987 * 11.011383056640625, p987 * 189.76705932617188, p987 * 36.011383056640625, p987 * 195.76705932617188);
    v1325.bezierCurveTo(p987 * 61.011383056640625, p987 * 202.26705932617188, p987 * 61.011383056640625, p987 * 202.26705932617188, p987 * 86.01138305664062, p987 * 208.76705932617188);
    v1325.bezierCurveTo(p987 * 100.01138305664062, p987 * 214.76705932617188, p987 * 102.01138305664062, p987 * 203.76705932617188, p987 * 109.01138305664062, p987 * 189.76705932617188);
    v1325.bezierCurveTo(p987 * 117.01138305664062, p987 * 171.76705932617188, p987 * 116.01138305664062, p987 * 166.76705932617188, p987 * 97.01138305664062, p987 * 156.76705932617188);
    v1325.bezierCurveTo(p987 * 74.01138305664062, p987 * 140.76705932617188, p987 * 74.01138305664062, p987 * 140.76705932617188, p987 * 51.011383056640625, p987 * 124.76705932617188);
    v1325.bezierCurveTo(p987 * 42.011383056640625, p987 * 118.76705932617188, p987 * 37.011383056640625, p987 * 119.76705932617188, p987 * 33.011383056640625, p987 * 126.76705932617188);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 33.011383056640625, p987 * 126.76705932617188);
    v1325.bezierCurveTo(p987 * 22.011383056640625, p987 * 149.76705932617188, p987 * 22.011383056640625, p987 * 149.76705932617188, p987 * 11.011383056640625, p987 * 172.76705932617188);
    v1325.bezierCurveTo(p987 * 7.011383056640625, p987 * 184.76705932617188, p987 * 11.011383056640625, p987 * 189.76705932617188, p987 * 36.011383056640625, p987 * 195.76705932617188);
    v1325.bezierCurveTo(p987 * 61.011383056640625, p987 * 202.26705932617188, p987 * 61.011383056640625, p987 * 202.26705932617188, p987 * 86.01138305664062, p987 * 208.76705932617188);
    v1325.bezierCurveTo(p987 * 100.01138305664062, p987 * 214.76705932617188, p987 * 102.01138305664062, p987 * 203.76705932617188, p987 * 109.01138305664062, p987 * 189.76705932617188);
    v1325.bezierCurveTo(p987 * 117.01138305664062, p987 * 171.76705932617188, p987 * 116.01138305664062, p987 * 166.76705932617188, p987 * 97.01138305664062, p987 * 156.76705932617188);
    v1325.bezierCurveTo(p987 * 74.01138305664062, p987 * 140.76705932617188, p987 * 74.01138305664062, p987 * 140.76705932617188, p987 * 51.011383056640625, p987 * 124.76705932617188);
    v1325.bezierCurveTo(p987 * 42.011383056640625, p987 * 118.76705932617188, p987 * 37.011383056640625, p987 * 119.76705932617188, p987 * 33.011383056640625, p987 * 126.76705932617188);
    v1325.closePath();
    f86(v1325, p989[3], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 13.011383056640625, p987 * 229.76705932617188);
    v1325.bezierCurveTo(p987 * 45.511383056640625, p987 * 233.76705932617188, p987 * 45.511383056640625, p987 * 233.76705932617188, p987 * 78.01138305664062, p987 * 237.76705932617188);
    v1325.bezierCurveTo(p987 * 92.01138305664062, p987 * 239.76705932617188, p987 * 92.01138305664062, p987 * 246.76705932617188, p987 * 91.01138305664062, p987 * 257.7670593261719);
    v1325.bezierCurveTo(p987 * 92.01138305664062, p987 * 275.7670593261719, p987 * 91.01138305664062, p987 * 274.7670593261719, p987 * 68.01138305664062, p987 * 276.7670593261719);
    v1325.bezierCurveTo(p987 * 42.511383056640625, p987 * 279.7670593261719, p987 * 42.511383056640625, p987 * 279.7670593261719, p987 * 17.011383056640625, p987 * 282.7670593261719);
    v1325.bezierCurveTo(p987 * 2.011383056640625, p987 * 282.7670593261719, p987 * 3.011383056640625, p987 * 276.7670593261719, p987 * 2.011383056640625, p987 * 260.7670593261719);
    v1325.bezierCurveTo(p987 * 2.011383056640625, p987 * 231.76705932617188, p987 * 4.011383056640625, p987 * 232.76705932617188, p987 * 11.011383056640625, p987 * 230.76705932617188);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 13.011383056640625, p987 * 229.76705932617188);
    v1325.bezierCurveTo(p987 * 45.511383056640625, p987 * 233.76705932617188, p987 * 45.511383056640625, p987 * 233.76705932617188, p987 * 78.01138305664062, p987 * 237.76705932617188);
    v1325.bezierCurveTo(p987 * 92.01138305664062, p987 * 239.76705932617188, p987 * 92.01138305664062, p987 * 246.76705932617188, p987 * 91.01138305664062, p987 * 257.7670593261719);
    v1325.bezierCurveTo(p987 * 92.01138305664062, p987 * 275.7670593261719, p987 * 91.01138305664062, p987 * 274.7670593261719, p987 * 68.01138305664062, p987 * 276.7670593261719);
    v1325.bezierCurveTo(p987 * 42.511383056640625, p987 * 279.7670593261719, p987 * 42.511383056640625, p987 * 279.7670593261719, p987 * 17.011383056640625, p987 * 282.7670593261719);
    v1325.bezierCurveTo(p987 * 2.011383056640625, p987 * 282.7670593261719, p987 * 3.011383056640625, p987 * 276.7670593261719, p987 * 2.011383056640625, p987 * 260.7670593261719);
    v1325.bezierCurveTo(p987 * 2.011383056640625, p987 * 231.76705932617188, p987 * 4.011383056640625, p987 * 232.76705932617188, p987 * 11.011383056640625, p987 * 230.76705932617188);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 97.01138305664062, p987 * 329.7670593261719);
    v1325.bezierCurveTo(p987 * 68.51138305664062, p987 * 343.7670593261719, p987 * 68.51138305664062, p987 * 343.7670593261719, p987 * 40.011383056640625, p987 * 357.7670593261719);
    v1325.bezierCurveTo(p987 * 29.011383056640625, p987 * 360.7670593261719, p987 * 27.011383056640625, p987 * 361.7670593261719, p987 * 20.011383056640625, p987 * 346.7670593261719);
    v1325.bezierCurveTo(p987 * 16.511383056640625, p987 * 336.2670593261719, p987 * 16.511383056640625, p987 * 336.2670593261719, p987 * 13.011383056640625, p987 * 325.7670593261719);
    v1325.bezierCurveTo(p987 * 10.011383056640625, p987 * 307.7670593261719, p987 * 18.011383056640625, p987 * 312.7670593261719, p987 * 34.011383056640625, p987 * 306.7670593261719);
    v1325.bezierCurveTo(p987 * 59.511383056640625, p987 * 302.2670593261719, p987 * 59.511383056640625, p987 * 302.2670593261719, p987 * 85.01138305664062, p987 * 297.7670593261719);
    v1325.bezierCurveTo(p987 * 97.01138305664062, p987 * 294.7670593261719, p987 * 100.01138305664062, p987 * 297.7670593261719, p987 * 100.01138305664062, p987 * 307.7670593261719);
    v1325.bezierCurveTo(p987 * 105.01138305664062, p987 * 326.7670593261719, p987 * 103.01138305664062, p987 * 325.7670593261719, p987 * 97.01138305664062, p987 * 329.7670593261719);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 97.01138305664062, p987 * 329.7670593261719);
    v1325.bezierCurveTo(p987 * 68.51138305664062, p987 * 343.7670593261719, p987 * 68.51138305664062, p987 * 343.7670593261719, p987 * 40.011383056640625, p987 * 357.7670593261719);
    v1325.bezierCurveTo(p987 * 29.011383056640625, p987 * 360.7670593261719, p987 * 27.011383056640625, p987 * 361.7670593261719, p987 * 20.011383056640625, p987 * 346.7670593261719);
    v1325.bezierCurveTo(p987 * 16.511383056640625, p987 * 336.2670593261719, p987 * 16.511383056640625, p987 * 336.2670593261719, p987 * 13.011383056640625, p987 * 325.7670593261719);
    v1325.bezierCurveTo(p987 * 10.011383056640625, p987 * 307.7670593261719, p987 * 18.011383056640625, p987 * 312.7670593261719, p987 * 34.011383056640625, p987 * 306.7670593261719);
    v1325.bezierCurveTo(p987 * 59.511383056640625, p987 * 302.2670593261719, p987 * 59.511383056640625, p987 * 302.2670593261719, p987 * 85.01138305664062, p987 * 297.7670593261719);
    v1325.bezierCurveTo(p987 * 97.01138305664062, p987 * 294.7670593261719, p987 * 100.01138305664062, p987 * 297.7670593261719, p987 * 100.01138305664062, p987 * 307.7670593261719);
    v1325.bezierCurveTo(p987 * 105.01138305664062, p987 * 326.7670593261719, p987 * 103.01138305664062, p987 * 325.7670593261719, p987 * 97.01138305664062, p987 * 329.7670593261719);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 394.0113830566406, p987 * 181.76705932617188);
    v1325.bezierCurveTo(p987 * 426.5113830566406, p987 * 166.76705932617188, p987 * 426.5113830566406, p987 * 166.76705932617188, p987 * 459.0113830566406, p987 * 151.76705932617188);
    v1325.bezierCurveTo(p987 * 469.0113830566406, p987 * 152.76705932617188, p987 * 469.0113830566406, p987 * 155.76705932617188, p987 * 472.0113830566406, p987 * 165.76705932617188);
    v1325.bezierCurveTo(p987 * 476.0113830566406, p987 * 177.26705932617188, p987 * 476.0113830566406, p987 * 177.26705932617188, p987 * 480.0113830566406, p987 * 188.76705932617188);
    v1325.bezierCurveTo(p987 * 483.0113830566406, p987 * 199.76705932617188, p987 * 480.0113830566406, p987 * 200.76705932617188, p987 * 460.0113830566406, p987 * 205.76705932617188);
    v1325.bezierCurveTo(p987 * 433.5113830566406, p987 * 210.26705932617188, p987 * 433.5113830566406, p987 * 210.26705932617188, p987 * 407.0113830566406, p987 * 214.76705932617188);
    v1325.bezierCurveTo(p987 * 395.0113830566406, p987 * 218.76705932617188, p987 * 397.0113830566406, p987 * 211.76705932617188, p987 * 393.0113830566406, p987 * 202.76705932617188);
    v1325.bezierCurveTo(p987 * 387.0113830566406, p987 * 188.76705932617188, p987 * 387.0113830566406, p987 * 187.76705932617188, p987 * 394.0113830566406, p987 * 181.76705932617188);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 394.0113830566406, p987 * 181.76705932617188);
    v1325.bezierCurveTo(p987 * 426.5113830566406, p987 * 166.76705932617188, p987 * 426.5113830566406, p987 * 166.76705932617188, p987 * 459.0113830566406, p987 * 151.76705932617188);
    v1325.bezierCurveTo(p987 * 469.0113830566406, p987 * 152.76705932617188, p987 * 469.0113830566406, p987 * 155.76705932617188, p987 * 472.0113830566406, p987 * 165.76705932617188);
    v1325.bezierCurveTo(p987 * 476.0113830566406, p987 * 177.26705932617188, p987 * 476.0113830566406, p987 * 177.26705932617188, p987 * 480.0113830566406, p987 * 188.76705932617188);
    v1325.bezierCurveTo(p987 * 483.0113830566406, p987 * 199.76705932617188, p987 * 480.0113830566406, p987 * 200.76705932617188, p987 * 460.0113830566406, p987 * 205.76705932617188);
    v1325.bezierCurveTo(p987 * 433.5113830566406, p987 * 210.26705932617188, p987 * 433.5113830566406, p987 * 210.26705932617188, p987 * 407.0113830566406, p987 * 214.76705932617188);
    v1325.bezierCurveTo(p987 * 395.0113830566406, p987 * 218.76705932617188, p987 * 397.0113830566406, p987 * 211.76705932617188, p987 * 393.0113830566406, p987 * 202.76705932617188);
    v1325.bezierCurveTo(p987 * 387.0113830566406, p987 * 188.76705932617188, p987 * 387.0113830566406, p987 * 187.76705932617188, p987 * 394.0113830566406, p987 * 181.76705932617188);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 411.0113830566406, p987 * 234.76705932617188);
    v1325.bezierCurveTo(p987 * 446.0113830566406, p987 * 233.26705932617188, p987 * 446.0113830566406, p987 * 233.26705932617188, p987 * 481.0113830566406, p987 * 231.76705932617188);
    v1325.bezierCurveTo(p987 * 491.0113830566406, p987 * 232.76705932617188, p987 * 493.0113830566406, p987 * 239.76705932617188, p987 * 491.0113830566406, p987 * 251.76705932617188);
    v1325.bezierCurveTo(p987 * 490.0113830566406, p987 * 263.7670593261719, p987 * 490.0113830566406, p987 * 263.7670593261719, p987 * 489.0113830566406, p987 * 275.7670593261719);
    v1325.bezierCurveTo(p987 * 487.0113830566406, p987 * 283.7670593261719, p987 * 483.0113830566406, p987 * 284.7670593261719, p987 * 464.0113830566406, p987 * 280.7670593261719);
    v1325.bezierCurveTo(p987 * 437.0113830566406, p987 * 273.7670593261719, p987 * 437.0113830566406, p987 * 273.7670593261719, p987 * 410.0113830566406, p987 * 266.7670593261719);
    v1325.bezierCurveTo(p987 * 400.0113830566406, p987 * 261.7670593261719, p987 * 401.0113830566406, p987 * 259.7670593261719, p987 * 402.0113830566406, p987 * 249.76705932617188);
    v1325.bezierCurveTo(p987 * 401.0113830566406, p987 * 237.76705932617188, p987 * 403.0113830566406, p987 * 235.76705932617188, p987 * 408.0113830566406, p987 * 234.76705932617188);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 411.0113830566406, p987 * 234.76705932617188);
    v1325.bezierCurveTo(p987 * 446.0113830566406, p987 * 233.26705932617188, p987 * 446.0113830566406, p987 * 233.26705932617188, p987 * 481.0113830566406, p987 * 231.76705932617188);
    v1325.bezierCurveTo(p987 * 491.0113830566406, p987 * 232.76705932617188, p987 * 493.0113830566406, p987 * 239.76705932617188, p987 * 491.0113830566406, p987 * 251.76705932617188);
    v1325.bezierCurveTo(p987 * 490.0113830566406, p987 * 263.7670593261719, p987 * 490.0113830566406, p987 * 263.7670593261719, p987 * 489.0113830566406, p987 * 275.7670593261719);
    v1325.bezierCurveTo(p987 * 487.0113830566406, p987 * 283.7670593261719, p987 * 483.0113830566406, p987 * 284.7670593261719, p987 * 464.0113830566406, p987 * 280.7670593261719);
    v1325.bezierCurveTo(p987 * 437.0113830566406, p987 * 273.7670593261719, p987 * 437.0113830566406, p987 * 273.7670593261719, p987 * 410.0113830566406, p987 * 266.7670593261719);
    v1325.bezierCurveTo(p987 * 400.0113830566406, p987 * 261.7670593261719, p987 * 401.0113830566406, p987 * 259.7670593261719, p987 * 402.0113830566406, p987 * 249.76705932617188);
    v1325.bezierCurveTo(p987 * 401.0113830566406, p987 * 237.76705932617188, p987 * 403.0113830566406, p987 * 235.76705932617188, p987 * 408.0113830566406, p987 * 234.76705932617188);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 400.0113830566406, p987 * 290.7670593261719);
    v1325.bezierCurveTo(p987 * 437.0113830566406, p987 * 301.2670593261719, p987 * 437.0113830566406, p987 * 301.2670593261719, p987 * 474.0113830566406, p987 * 311.7670593261719);
    v1325.bezierCurveTo(p987 * 484.0113830566406, p987 * 319.7670593261719, p987 * 481.0113830566406, p987 * 322.7670593261719, p987 * 474.0113830566406, p987 * 335.7670593261719);
    v1325.bezierCurveTo(p987 * 465.5113830566406, p987 * 354.7670593261719, p987 * 465.5113830566406, p987 * 354.7670593261719, p987 * 457.0113830566406, p987 * 373.7670593261719);
    v1325.bezierCurveTo(p987 * 449.0113830566406, p987 * 386.7670593261719, p987 * 444.0113830566406, p987 * 384.7670593261719, p987 * 427.0113830566406, p987 * 370.7670593261719);
    v1325.bezierCurveTo(p987 * 403.0113830566406, p987 * 354.7670593261719, p987 * 403.0113830566406, p987 * 354.7670593261719, p987 * 379.0113830566406, p987 * 338.7670593261719);
    v1325.bezierCurveTo(p987 * 371.0113830566406, p987 * 327.7670593261719, p987 * 373.0113830566406, p987 * 323.7670593261719, p987 * 377.0113830566406, p987 * 313.7670593261719);
    v1325.bezierCurveTo(p987 * 386.0113830566406, p987 * 292.7670593261719, p987 * 393.0113830566406, p987 * 288.7670593261719, p987 * 398.0113830566406, p987 * 291.7670593261719);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 400.0113830566406, p987 * 290.7670593261719);
    v1325.bezierCurveTo(p987 * 437.0113830566406, p987 * 301.2670593261719, p987 * 437.0113830566406, p987 * 301.2670593261719, p987 * 474.0113830566406, p987 * 311.7670593261719);
    v1325.bezierCurveTo(p987 * 484.0113830566406, p987 * 319.7670593261719, p987 * 481.0113830566406, p987 * 322.7670593261719, p987 * 474.0113830566406, p987 * 335.7670593261719);
    v1325.bezierCurveTo(p987 * 465.5113830566406, p987 * 354.7670593261719, p987 * 465.5113830566406, p987 * 354.7670593261719, p987 * 457.0113830566406, p987 * 373.7670593261719);
    v1325.bezierCurveTo(p987 * 449.0113830566406, p987 * 386.7670593261719, p987 * 444.0113830566406, p987 * 384.7670593261719, p987 * 427.0113830566406, p987 * 370.7670593261719);
    v1325.bezierCurveTo(p987 * 403.0113830566406, p987 * 354.7670593261719, p987 * 403.0113830566406, p987 * 354.7670593261719, p987 * 379.0113830566406, p987 * 338.7670593261719);
    v1325.bezierCurveTo(p987 * 371.0113830566406, p987 * 327.7670593261719, p987 * 373.0113830566406, p987 * 323.7670593261719, p987 * 377.0113830566406, p987 * 313.7670593261719);
    v1325.bezierCurveTo(p987 * 386.0113830566406, p987 * 292.7670593261719, p987 * 393.0113830566406, p987 * 288.7670593261719, p987 * 398.0113830566406, p987 * 291.7670593261719);
    v1325.closePath();
    f86(v1325, p989[3], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 366.0113830566406, p987 * 361.2216033935547);
    v1325.bezierCurveTo(p987 * 393.0113830566406, p987 * 383.2216033935547, p987 * 393.0113830566406, p987 * 383.2216033935547, p987 * 420.0113830566406, p987 * 405.2216033935547);
    v1325.bezierCurveTo(p987 * 427.0113830566406, p987 * 414.2216033935547, p987 * 425.0113830566406, p987 * 417.2216033935547, p987 * 413.0113830566406, p987 * 428.2216033935547);
    v1325.bezierCurveTo(p987 * 405.5113830566406, p987 * 435.2216033935547, p987 * 405.5113830566406, p987 * 435.2216033935547, p987 * 398.0113830566406, p987 * 442.2216033935547);
    v1325.bezierCurveTo(p987 * 388.0113830566406, p987 * 451.2216033935547, p987 * 385.0113830566406, p987 * 445.2216033935547, p987 * 373.0113830566406, p987 * 428.2216033935547);
    v1325.bezierCurveTo(p987 * 358.5113830566406, p987 * 408.2216033935547, p987 * 358.5113830566406, p987 * 408.2216033935547, p987 * 344.0113830566406, p987 * 388.2216033935547);
    v1325.bezierCurveTo(p987 * 337.0113830566406, p987 * 378.2216033935547, p987 * 342.0113830566406, p987 * 377.2216033935547, p987 * 347.0113830566406, p987 * 371.2216033935547);
    v1325.bezierCurveTo(p987 * 359.0113830566406, p987 * 359.2216033935547, p987 * 361.0113830566406, p987 * 358.2216033935547, p987 * 364.0113830566406, p987 * 361.2216033935547);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 366.0113830566406, p987 * 361.2216033935547);
    v1325.bezierCurveTo(p987 * 393.0113830566406, p987 * 383.2216033935547, p987 * 393.0113830566406, p987 * 383.2216033935547, p987 * 420.0113830566406, p987 * 405.2216033935547);
    v1325.bezierCurveTo(p987 * 427.0113830566406, p987 * 414.2216033935547, p987 * 425.0113830566406, p987 * 417.2216033935547, p987 * 413.0113830566406, p987 * 428.2216033935547);
    v1325.bezierCurveTo(p987 * 405.5113830566406, p987 * 435.2216033935547, p987 * 405.5113830566406, p987 * 435.2216033935547, p987 * 398.0113830566406, p987 * 442.2216033935547);
    v1325.bezierCurveTo(p987 * 388.0113830566406, p987 * 451.2216033935547, p987 * 385.0113830566406, p987 * 445.2216033935547, p987 * 373.0113830566406, p987 * 428.2216033935547);
    v1325.bezierCurveTo(p987 * 358.5113830566406, p987 * 408.2216033935547, p987 * 358.5113830566406, p987 * 408.2216033935547, p987 * 344.0113830566406, p987 * 388.2216033935547);
    v1325.bezierCurveTo(p987 * 337.0113830566406, p987 * 378.2216033935547, p987 * 342.0113830566406, p987 * 377.2216033935547, p987 * 347.0113830566406, p987 * 371.2216033935547);
    v1325.bezierCurveTo(p987 * 359.0113830566406, p987 * 359.2216033935547, p987 * 361.0113830566406, p987 * 358.2216033935547, p987 * 364.0113830566406, p987 * 361.2216033935547);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 323.0113830566406, p987 * 393.2216033935547);
    v1325.bezierCurveTo(p987 * 338.0113830566406, p987 * 424.7216033935547, p987 * 338.0113830566406, p987 * 424.7216033935547, p987 * 353.0113830566406, p987 * 456.2216033935547);
    v1325.bezierCurveTo(p987 * 355.0113830566406, p987 * 467.2216033935547, p987 * 354.0113830566406, p987 * 469.2216033935547, p987 * 336.0113830566406, p987 * 475.2216033935547);
    v1325.bezierCurveTo(p987 * 326.0113830566406, p987 * 478.2216033935547, p987 * 326.0113830566406, p987 * 478.2216033935547, p987 * 316.0113830566406, p987 * 481.2216033935547);
    v1325.bezierCurveTo(p987 * 304.0113830566406, p987 * 484.2216033935547, p987 * 304.0113830566406, p987 * 477.2216033935547, p987 * 301.0113830566406, p987 * 454.2216033935547);
    v1325.bezierCurveTo(p987 * 295.5113830566406, p987 * 429.2216033935547, p987 * 295.5113830566406, p987 * 429.2216033935547, p987 * 290.0113830566406, p987 * 404.2216033935547);
    v1325.bezierCurveTo(p987 * 287.0113830566406, p987 * 396.2216033935547, p987 * 297.0113830566406, p987 * 394.2216033935547, p987 * 303.0113830566406, p987 * 392.2216033935547);
    v1325.bezierCurveTo(p987 * 316.0113830566406, p987 * 387.2216033935547, p987 * 318.0113830566406, p987 * 387.2216033935547, p987 * 323.0113830566406, p987 * 394.2216033935547);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 323.0113830566406, p987 * 393.2216033935547);
    v1325.bezierCurveTo(p987 * 338.0113830566406, p987 * 424.7216033935547, p987 * 338.0113830566406, p987 * 424.7216033935547, p987 * 353.0113830566406, p987 * 456.2216033935547);
    v1325.bezierCurveTo(p987 * 355.0113830566406, p987 * 467.2216033935547, p987 * 354.0113830566406, p987 * 469.2216033935547, p987 * 336.0113830566406, p987 * 475.2216033935547);
    v1325.bezierCurveTo(p987 * 326.0113830566406, p987 * 478.2216033935547, p987 * 326.0113830566406, p987 * 478.2216033935547, p987 * 316.0113830566406, p987 * 481.2216033935547);
    v1325.bezierCurveTo(p987 * 304.0113830566406, p987 * 484.2216033935547, p987 * 304.0113830566406, p987 * 477.2216033935547, p987 * 301.0113830566406, p987 * 454.2216033935547);
    v1325.bezierCurveTo(p987 * 295.5113830566406, p987 * 429.2216033935547, p987 * 295.5113830566406, p987 * 429.2216033935547, p987 * 290.0113830566406, p987 * 404.2216033935547);
    v1325.bezierCurveTo(p987 * 287.0113830566406, p987 * 396.2216033935547, p987 * 297.0113830566406, p987 * 394.2216033935547, p987 * 303.0113830566406, p987 * 392.2216033935547);
    v1325.bezierCurveTo(p987 * 316.0113830566406, p987 * 387.2216033935547, p987 * 318.0113830566406, p987 * 387.2216033935547, p987 * 323.0113830566406, p987 * 394.2216033935547);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 270.0113830566406, p987 * 413.2216033935547);
    v1325.bezierCurveTo(p987 * 271.0113830566406, p987 * 445.7216033935547, p987 * 271.0113830566406, p987 * 445.7216033935547, p987 * 272.0113830566406, p987 * 478.2216033935547);
    v1325.bezierCurveTo(p987 * 273.0113830566406, p987 * 490.2216033935547, p987 * 267.0113830566406, p987 * 493.2216033935547, p987 * 249.01138305664062, p987 * 490.2216033935547);
    v1325.bezierCurveTo(p987 * 222.01138305664062, p987 * 492.2216033935547, p987 * 220.01138305664062, p987 * 485.2216033935547, p987 * 225.01138305664062, p987 * 467.2216033935547);
    v1325.bezierCurveTo(p987 * 230.51138305664062, p987 * 440.2216033935547, p987 * 230.51138305664062, p987 * 440.2216033935547, p987 * 236.01138305664062, p987 * 413.2216033935547);
    v1325.bezierCurveTo(p987 * 237.01138305664062, p987 * 405.2216033935547, p987 * 238.01138305664062, p987 * 404.2216033935547, p987 * 253.01138305664062, p987 * 403.2216033935547);
    v1325.bezierCurveTo(p987 * 269.0113830566406, p987 * 405.2216033935547, p987 * 270.0113830566406, p987 * 407.2216033935547, p987 * 269.0113830566406, p987 * 412.2216033935547);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 270.0113830566406, p987 * 413.2216033935547);
    v1325.bezierCurveTo(p987 * 271.0113830566406, p987 * 445.7216033935547, p987 * 271.0113830566406, p987 * 445.7216033935547, p987 * 272.0113830566406, p987 * 478.2216033935547);
    v1325.bezierCurveTo(p987 * 273.0113830566406, p987 * 490.2216033935547, p987 * 267.0113830566406, p987 * 493.2216033935547, p987 * 249.01138305664062, p987 * 490.2216033935547);
    v1325.bezierCurveTo(p987 * 222.01138305664062, p987 * 492.2216033935547, p987 * 220.01138305664062, p987 * 485.2216033935547, p987 * 225.01138305664062, p987 * 467.2216033935547);
    v1325.bezierCurveTo(p987 * 230.51138305664062, p987 * 440.2216033935547, p987 * 230.51138305664062, p987 * 440.2216033935547, p987 * 236.01138305664062, p987 * 413.2216033935547);
    v1325.bezierCurveTo(p987 * 237.01138305664062, p987 * 405.2216033935547, p987 * 238.01138305664062, p987 * 404.2216033935547, p987 * 253.01138305664062, p987 * 403.2216033935547);
    v1325.bezierCurveTo(p987 * 269.0113830566406, p987 * 405.2216033935547, p987 * 270.0113830566406, p987 * 407.2216033935547, p987 * 269.0113830566406, p987 * 412.2216033935547);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 207.01138305664062, p987 * 406.2216033935547);
    v1325.bezierCurveTo(p987 * 197.51138305664062, p987 * 440.7216033935547, p987 * 197.51138305664062, p987 * 440.7216033935547, p987 * 188.01138305664062, p987 * 475.2216033935547);
    v1325.bezierCurveTo(p987 * 184.01138305664062, p987 * 485.2216033935547, p987 * 179.01138305664062, p987 * 491.2216033935547, p987 * 152.01138305664062, p987 * 477.2216033935547);
    v1325.bezierCurveTo(p987 * 136.51138305664062, p987 * 469.7216033935547, p987 * 136.51138305664062, p987 * 469.7216033935547, p987 * 121.01138305664062, p987 * 462.2216033935547);
    v1325.bezierCurveTo(p987 * 109.01138305664062, p987 * 453.2216033935547, p987 * 117.01138305664062, p987 * 447.2216033935547, p987 * 133.01138305664062, p987 * 427.2216033935547);
    v1325.bezierCurveTo(p987 * 146.51138305664062, p987 * 406.7216033935547, p987 * 146.51138305664062, p987 * 406.7216033935547, p987 * 160.01138305664062, p987 * 386.2216033935547);
    v1325.bezierCurveTo(p987 * 163.01138305664062, p987 * 377.2216033935547, p987 * 168.01138305664062, p987 * 378.2216033935547, p987 * 187.01138305664062, p987 * 387.2216033935547);
    v1325.bezierCurveTo(p987 * 206.01138305664062, p987 * 395.2216033935547, p987 * 208.01138305664062, p987 * 398.2216033935547, p987 * 207.01138305664062, p987 * 405.2216033935547);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 207.01138305664062, p987 * 406.2216033935547);
    v1325.bezierCurveTo(p987 * 197.51138305664062, p987 * 440.7216033935547, p987 * 197.51138305664062, p987 * 440.7216033935547, p987 * 188.01138305664062, p987 * 475.2216033935547);
    v1325.bezierCurveTo(p987 * 184.01138305664062, p987 * 485.2216033935547, p987 * 179.01138305664062, p987 * 491.2216033935547, p987 * 152.01138305664062, p987 * 477.2216033935547);
    v1325.bezierCurveTo(p987 * 136.51138305664062, p987 * 469.7216033935547, p987 * 136.51138305664062, p987 * 469.7216033935547, p987 * 121.01138305664062, p987 * 462.2216033935547);
    v1325.bezierCurveTo(p987 * 109.01138305664062, p987 * 453.2216033935547, p987 * 117.01138305664062, p987 * 447.2216033935547, p987 * 133.01138305664062, p987 * 427.2216033935547);
    v1325.bezierCurveTo(p987 * 146.51138305664062, p987 * 406.7216033935547, p987 * 146.51138305664062, p987 * 406.7216033935547, p987 * 160.01138305664062, p987 * 386.2216033935547);
    v1325.bezierCurveTo(p987 * 163.01138305664062, p987 * 377.2216033935547, p987 * 168.01138305664062, p987 * 378.2216033935547, p987 * 187.01138305664062, p987 * 387.2216033935547);
    v1325.bezierCurveTo(p987 * 206.01138305664062, p987 * 395.2216033935547, p987 * 208.01138305664062, p987 * 398.2216033935547, p987 * 207.01138305664062, p987 * 405.2216033935547);
    v1325.closePath();
    f86(v1325, p989[3], p989[2], p987 * 12);
    v1325.globalAlpha = p988 ? 0.5 : 1;
    v1325.translate(0, p987 * 5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 130.01138305664062, p987 * 375.2216033935547);
    v1325.bezierCurveTo(p987 * 109.51138305664062, p987 * 400.7216033935547, p987 * 109.51138305664062, p987 * 400.7216033935547, p987 * 89.01138305664062, p987 * 426.2216033935547);
    v1325.bezierCurveTo(p987 * 82.01138305664062, p987 * 435.2216033935547, p987 * 77.01138305664062, p987 * 435.2216033935547, p987 * 62.011383056640625, p987 * 417.2216033935547);
    v1325.bezierCurveTo(p987 * 43.011383056640625, p987 * 397.2216033935547, p987 * 47.011383056640625, p987 * 395.2216033935547, p987 * 62.011383056640625, p987 * 382.2216033935547);
    v1325.bezierCurveTo(p987 * 84.01138305664062, p987 * 366.7216033935547, p987 * 84.01138305664062, p987 * 366.7216033935547, p987 * 106.01138305664062, p987 * 351.2216033935547);
    v1325.bezierCurveTo(p987 * 116.01138305664062, p987 * 344.2216033935547, p987 * 120.01138305664062, p987 * 347.2216033935547, p987 * 127.01138305664062, p987 * 356.2216033935547);
    v1325.bezierCurveTo(p987 * 137.01138305664062, p987 * 366.2216033935547, p987 * 137.01138305664062, p987 * 366.2216033935547, p987 * 131.01138305664062, p987 * 376.2216033935547);
    v1325.closePath();
    f86(v1325, p989[0], p989[0], p987 * 12);
    v1325.globalAlpha = 1;
    v1325.translate(0, p987 * -5);
    v1325.beginPath();
    v1325.lineCap = "round";
    v1325.lineJoin = "round";
    v1325.moveTo(p987 * 130.01138305664062, p987 * 375.2216033935547);
    v1325.bezierCurveTo(p987 * 109.51138305664062, p987 * 400.7216033935547, p987 * 109.51138305664062, p987 * 400.7216033935547, p987 * 89.01138305664062, p987 * 426.2216033935547);
    v1325.bezierCurveTo(p987 * 82.01138305664062, p987 * 435.2216033935547, p987 * 77.01138305664062, p987 * 435.2216033935547, p987 * 62.011383056640625, p987 * 417.2216033935547);
    v1325.bezierCurveTo(p987 * 43.011383056640625, p987 * 397.2216033935547, p987 * 47.011383056640625, p987 * 395.2216033935547, p987 * 62.011383056640625, p987 * 382.2216033935547);
    v1325.bezierCurveTo(p987 * 84.01138305664062, p987 * 366.7216033935547, p987 * 84.01138305664062, p987 * 366.7216033935547, p987 * 106.01138305664062, p987 * 351.2216033935547);
    v1325.bezierCurveTo(p987 * 116.01138305664062, p987 * 344.2216033935547, p987 * 120.01138305664062, p987 * 347.2216033935547, p987 * 127.01138305664062, p987 * 356.2216033935547);
    v1325.bezierCurveTo(p987 * 137.01138305664062, p987 * 366.2216033935547, p987 * 137.01138305664062, p987 * 366.2216033935547, p987 * 131.01138305664062, p987 * 376.2216033935547);
    v1325.closePath();
    f86(v1325, p989[4], p989[2], p987 * 12);
    return v1324;
  }
  function f255(p992, p993, p994) {
    var v1328 = document.createElement("canvas");
    var v1329 = v1328.getContext("2d");
    v1328.width = p992 * 158;
    v1328.height = p992 * 201;
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 96.5, p992 * 76.421875);
    v1329.bezierCurveTo(p992 * 100.5, p992 * 64.421875, p992 * 103.5, p992 * 62.421875, p992 * 110.5, p992 * 65.421875);
    v1329.bezierCurveTo(p992 * 116.5, p992 * 66.421875, p992 * 117.5, p992 * 67.421875, p992 * 112.5, p992 * 73.421875);
    v1329.bezierCurveTo(p992 * 107, p992 * 79.921875, p992 * 107, p992 * 79.921875, p992 * 101.5, p992 * 86.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 61.5, p992 * 78.421875);
    v1329.bezierCurveTo(p992 * 57.5, p992 * 73.421875, p992 * 51.5, p992 * 66.421875, p992 * 45.5, p992 * 68.421875);
    v1329.bezierCurveTo(p992 * 32.5, p992 * 73.421875, p992 * 38.5, p992 * 75.421875, p992 * 46.5, p992 * 81.421875);
    v1329.bezierCurveTo(p992 * 51.5, p992 * 84.921875, p992 * 51.5, p992 * 84.921875, p992 * 56.5, p992 * 88.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 116.5, p992 * 127.421875);
    v1329.bezierCurveTo(p992 * 124.5, p992 * 108.421875, p992 * 129.5, p992 * 104.421875, p992 * 141.5, p992 * 107.421875);
    v1329.bezierCurveTo(p992 * 156.5, p992 * 112.421875, p992 * 153.5, p992 * 113.421875, p992 * 132.5, p992 * 134.421875);
    v1329.bezierCurveTo(p992 * 123.5, p992 * 141.921875, p992 * 123.5, p992 * 141.921875, p992 * 114.5, p992 * 149.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 41.5, p992 * 134.421875);
    v1329.bezierCurveTo(p992 * 30.5, p992 * 119.421875, p992 * 25.5, p992 * 111.421875, p992 * 12.5, p992 * 115.421875);
    v1329.bezierCurveTo(p992 * 4.5, p992 * 120.421875, p992 * 4.5, p992 * 121.421875, p992 * 26.5, p992 * 142.421875);
    v1329.bezierCurveTo(p992 * 35, p992 * 149.921875, p992 * 35, p992 * 149.921875, p992 * 43.5, p992 * 157.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 78.5, p992 * 51.921875);
    v1329.bezierCurveTo(p992 * 99.5, p992 * 75.921875, p992 * 110.5, p992 * 96.921875, p992 * 118.5, p992 * 120.921875);
    v1329.bezierCurveTo(p992 * 121.5, p992 * 140.921875, p992 * 107.5, p992 * 179.921875, p992 * 75.5, p992 * 183.921875);
    v1329.bezierCurveTo(p992 * 30.5, p992 * 169.921875, p992 * 37.5, p992 * 131.921875, p992 * 34.5, p992 * 120.921875);
    v1329.bezierCurveTo(p992 * 41.5, p992 * 89.921875, p992 * 61.5, p992 * 67.921875, p992 * 78.5, p992 * 51.921875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 72.5, p992 * 72.421875);
    v1329.bezierCurveTo(p992 * 76.5, p992 * 79.421875, p992 * 79.5, p992 * 80.421875, p992 * 83.5, p992 * 73.421875);
    v1329.bezierCurveTo(p992 * 80.5, p992 * 96.921875, p992 * 79.5, p992 * 114.421875, p992 * 77.5, p992 * 120.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 42.5, p992 * 163.421875);
    v1329.bezierCurveTo(p992 * 62.5, p992 * 185.421875, p992 * 86.5, p992 * 186.421875, p992 * 111.5, p992 * 165.421875);
    v1329.bezierCurveTo(p992 * 107.5, p992 * 176.421875, p992 * 95.5, p992 * 187.421875, p992 * 75.5, p992 * 188.421875);
    v1329.bezierCurveTo(p992 * 53.5, p992 * 188.421875, p992 * 43.5, p992 * 171.421875, p992 * 42.5, p992 * 164.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 8);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 79.5, p992 * 61.421875);
    v1329.bezierCurveTo(p992 * 88.5, p992 * 31.421875, p992 * 81.5, p992 * 16.421875, p992 * 75.5, p992 * 7.421875);
    v1329.bezierCurveTo(p992 * 77.5, p992 * 28.421875, p992 * 77.5, p992 * 37.421875, p992 * 68.5, p992 * 42.421875);
    v1329.bezierCurveTo(p992 * 79.5, p992 * 57.421875, p992 * 79.5, p992 * 58.421875, p992 * 80.5, p992 * 61.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 72.5, p992 * 72.421875);
    v1329.bezierCurveTo(p992 * 76.5, p992 * 79.421875, p992 * 79.5, p992 * 80.421875, p992 * 83.5, p992 * 73.421875);
    v1329.bezierCurveTo(p992 * 80.5, p992 * 96.921875, p992 * 79.5, p992 * 114.421875, p992 * 77.5, p992 * 120.421875);
    v1329.closePath();
    f86(v1329, p994[8], p994[8], p992 * 10);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 96.5, p992 * 76.421875);
    v1329.bezierCurveTo(p992 * 100.5, p992 * 64.421875, p992 * 103.5, p992 * 62.421875, p992 * 110.5, p992 * 65.421875);
    v1329.bezierCurveTo(p992 * 116.5, p992 * 66.421875, p992 * 117.5, p992 * 67.421875, p992 * 112.5, p992 * 73.421875);
    v1329.bezierCurveTo(p992 * 107, p992 * 79.921875, p992 * 107, p992 * 79.921875, p992 * 101.5, p992 * 86.421875);
    v1329.closePath();
    f86(v1329, p994[1], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 61.5, p992 * 78.421875);
    v1329.bezierCurveTo(p992 * 57.5, p992 * 73.421875, p992 * 51.5, p992 * 66.421875, p992 * 45.5, p992 * 68.421875);
    v1329.bezierCurveTo(p992 * 32.5, p992 * 73.421875, p992 * 38.5, p992 * 75.421875, p992 * 46.5, p992 * 81.421875);
    v1329.bezierCurveTo(p992 * 51.5, p992 * 84.921875, p992 * 51.5, p992 * 84.921875, p992 * 56.5, p992 * 88.421875);
    v1329.closePath();
    f86(v1329, p994[1], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 116.5, p992 * 127.421875);
    v1329.bezierCurveTo(p992 * 124.5, p992 * 108.421875, p992 * 129.5, p992 * 104.421875, p992 * 141.5, p992 * 107.421875);
    v1329.bezierCurveTo(p992 * 156.5, p992 * 112.421875, p992 * 153.5, p992 * 113.421875, p992 * 132.5, p992 * 134.421875);
    v1329.bezierCurveTo(p992 * 123.5, p992 * 141.921875, p992 * 123.5, p992 * 141.921875, p992 * 114.5, p992 * 149.421875);
    v1329.closePath();
    f86(v1329, p994[1], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 41.5, p992 * 134.421875);
    v1329.bezierCurveTo(p992 * 30.5, p992 * 119.421875, p992 * 25.5, p992 * 111.421875, p992 * 12.5, p992 * 115.421875);
    v1329.bezierCurveTo(p992 * 4.5, p992 * 120.421875, p992 * 4.5, p992 * 121.421875, p992 * 26.5, p992 * 142.421875);
    v1329.bezierCurveTo(p992 * 35, p992 * 149.921875, p992 * 35, p992 * 149.921875, p992 * 43.5, p992 * 157.421875);
    v1329.closePath();
    f86(v1329, p994[1], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 78.5, p992 * 51.921875);
    v1329.bezierCurveTo(p992 * 99.5, p992 * 75.921875, p992 * 110.5, p992 * 96.921875, p992 * 118.5, p992 * 120.921875);
    v1329.bezierCurveTo(p992 * 121.5, p992 * 140.921875, p992 * 107.5, p992 * 179.921875, p992 * 75.5, p992 * 183.921875);
    v1329.bezierCurveTo(p992 * 30.5, p992 * 169.921875, p992 * 37.5, p992 * 131.921875, p992 * 34.5, p992 * 120.921875);
    v1329.bezierCurveTo(p992 * 41.5, p992 * 89.921875, p992 * 61.5, p992 * 67.921875, p992 * 78.5, p992 * 51.921875);
    v1329.closePath();
    f86(v1329, p994[3], p994[2], p992 * 4);
    f87(v1329, p992 * 108.5, p992 * 148.421875, p992 * 9);
    f86(v1329, p994[5]);
    f87(v1329, p992 * 106.5, p992 * 144.421875, p992 * 3);
    f86(v1329, p994[6]);
    f87(v1329, p992 * 46.5, p992 * 148.421875, p992 * 9);
    f86(v1329, p994[5]);
    f87(v1329, p992 * 44.5, p992 * 144.421875, p992 * 3);
    f86(v1329, p994[6]);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 116.5, p992 * 114.421875);
    v1329.bezierCurveTo(p992 * 121.5, p992 * 137.421875, p992 * 118.5, p992 * 133.421875, p992 * 108.5, p992 * 139.421875);
    v1329.bezierCurveTo(p992 * 94.5, p992 * 146.421875, p992 * 96.5, p992 * 148.421875, p992 * 95.5, p992 * 152.421875);
    f86(v1329, p994[3], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.translate(0, p992 * -2);
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 35.5, p992 * 131.421875);
    v1329.bezierCurveTo(p992 * 36.5, p992 * 140.421875, p992 * 39.5, p992 * 140.421875, p992 * 49.5, p992 * 143.421875);
    v1329.bezierCurveTo(p992 * 59.5, p992 * 149.421875, p992 * 57.5, p992 * 151.421875, p992 * 59.5, p992 * 155.421875);
    f86(v1329, p994[3], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 84.5, p992 * 57.421875);
    v1329.bezierCurveTo(p992 * 101.5, p992 * 120.421875, p992 * 92.5, p992 * 127.421875, p992 * 78.5, p992 * 134.421875);
    v1329.bezierCurveTo(p992 * 51.5, p992 * 131.421875, p992 * 63.5, p992 * 102.421875, p992 * 70.5, p992 * 59.421875);
    v1329.bezierCurveTo(p992 * 75, p992 * 55.421875, p992 * 78.5, p992 * 52.421875, p992 * 79.5, p992 * 51.421875);
    v1329.closePath();
    f86(v1329, p994[4]);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 79.5, p992 * 61.421875);
    v1329.bezierCurveTo(p992 * 88.5, p992 * 31.421875, p992 * 81.5, p992 * 16.421875, p992 * 75.5, p992 * 7.421875);
    v1329.bezierCurveTo(p992 * 77.5, p992 * 28.421875, p992 * 77.5, p992 * 37.421875, p992 * 68.5, p992 * 42.421875);
    v1329.bezierCurveTo(p992 * 79.5, p992 * 57.421875, p992 * 79.5, p992 * 58.421875, p992 * 80.5, p992 * 61.421875);
    v1329.closePath();
    f86(v1329, p994[3], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 72.5, p992 * 72.421875);
    v1329.bezierCurveTo(p992 * 76.5, p992 * 79.421875, p992 * 79.5, p992 * 80.421875, p992 * 83.5, p992 * 73.421875);
    v1329.bezierCurveTo(p992 * 80.5, p992 * 96.921875, p992 * 79.5, p992 * 114.421875, p992 * 77.5, p992 * 120.421875);
    v1329.closePath();
    f86(v1329, p994[3], p994[2], p992 * 4);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 87.5, p992 * 154.421875);
    v1329.bezierCurveTo(p992 * 93.5, p992 * 163.921875, p992 * 93.5, p992 * 163.921875, p992 * 99.5, p992 * 173.421875);
    v1329.bezierCurveTo(p992 * 95, p992 * 177.421875, p992 * 95, p992 * 177.421875, p992 * 90.5, p992 * 181.421875);
    v1329.bezierCurveTo(p992 * 89, p992 * 167.921875, p992 * 89, p992 * 167.921875, p992 * 87.5, p992 * 154.421875);
    v1329.closePath();
    f86(v1329, p994[6], p994[7], p992 * 2);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 81.5, p992 * 164.421875);
    v1329.bezierCurveTo(p992 * 84, p992 * 172.921875, p992 * 84, p992 * 172.921875, p992 * 86.5, p992 * 181.421875);
    v1329.bezierCurveTo(p992 * 82.5, p992 * 182.421875, p992 * 82.5, p992 * 182.421875, p992 * 78.5, p992 * 183.421875);
    v1329.closePath();
    f86(v1329, p994[6], p994[7], p992 * 2);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 72.5, p992 * 164.421875);
    v1329.bezierCurveTo(p992 * 73.5, p992 * 173.921875, p992 * 73.5, p992 * 173.921875, p992 * 74.5, p992 * 183.421875);
    v1329.bezierCurveTo(p992 * 70.5, p992 * 182.921875, p992 * 70.5, p992 * 182.921875, p992 * 66.5, p992 * 182.421875);
    v1329.closePath();
    f86(v1329, p994[6], p994[7], p992 * 2);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 65.5, p992 * 156.421875);
    v1329.bezierCurveTo(p992 * 65, p992 * 168.421875, p992 * 65, p992 * 168.421875, p992 * 64.5, p992 * 180.421875);
    v1329.bezierCurveTo(p992 * 58.5, p992 * 177.421875, p992 * 58.5, p992 * 177.421875, p992 * 52.5, p992 * 174.421875);
    v1329.closePath();
    f86(v1329, p994[6], p994[7], p992 * 2);
    v1329.beginPath();
    v1329.lineCap = "round";
    v1329.lineJoin = "round";
    v1329.moveTo(p992 * 42.5, p992 * 163.421875);
    v1329.bezierCurveTo(p992 * 62.5, p992 * 185.421875, p992 * 86.5, p992 * 186.421875, p992 * 111.5, p992 * 165.421875);
    v1329.bezierCurveTo(p992 * 107.5, p992 * 176.421875, p992 * 95.5, p992 * 187.421875, p992 * 75.5, p992 * 188.421875);
    v1329.bezierCurveTo(p992 * 53.5, p992 * 188.421875, p992 * 43.5, p992 * 171.421875, p992 * 42.5, p992 * 164.421875);
    v1329.closePath();
    f86(v1329, p994[3], p994[2], p992 * 4);
    return v1328;
  }
  function f256(p995, p996, p997, p998) {
    var v1330 = document.createElement("canvas");
    var v1331 = v1330.getContext("2d");
    v1330.width = p995 * 170;
    v1330.height = p995 * 200;
    v1331.translate(p995 * 5, p995 * 15);
    if (p998 == 1) {
      v1331.translate(0, p995 * -5);
      f87(v1331, p995 * 77.00003051757812, p995 * 104.49432373046875, p995 * 71.84010022264724);
      f86(v1331, p997[1], p997[5], p995 * 20);
      f87(v1331, p995 * 77.00003051757812, p995 * 104.22160339355469, p995 * 61.554853586049575);
      f86(v1331, p997[1], p997[5], p995 * 20);
      v1331.save();
      v1331.translate(p995 * 77.00003051757812, p995 * 31.267044067382812);
      f89(v1331, p995 * -6, p995 * -12.5, p995 * 12, p995 * 25, p995 * 10);
      v1331.restore();
      f86(v1331, p997[1], p997[5], p995 * 20);
      v1331.save();
      v1331.translate(p995 * 77.00003051757812, p995 * 13.267044067382812);
      f89(v1331, p995 * -15, p995 * -10.5, p995 * 30, p995 * 21, p995 * 10);
      v1331.restore();
      f86(v1331, p997[1], p997[5], p995 * 20);
    }
    f87(v1331, p995 * 77.00003051757812, p995 * 104.49432373046875, p995 * 71.84010022264724);
    f86(v1331, p997[1], p997[2], p995 * 7);
    f87(v1331, p995 * 77.00003051757812, p995 * 104.22160339355469, p995 * 61.554853586049575);
    f86(v1331, p997[1], p997[2], p995 * 7);
    v1331.beginPath();
    v1331.lineCap = "round";
    v1331.lineJoin = "round";
    v1331.moveTo(p995 * 18.000030517578125, p995 * 105.85795593261719);
    v1331.bezierCurveTo(p995 * 134.00003051757812, p995 * 104.85795593261719, p995 * 77.00003051757812, p995 * 104.85795593261719, p995 * 136.00003051757812, p995 * 103.85795593261719);
    v1331.closePath();
    f86(v1331, p997[1], p997[2], p995 * 8);
    f87(v1331, p995 * 77.00003051757812, p995 * 104.6761474609375, p995 * 32.55764119219941);
    f86(v1331, p997[1], p997[2], p995 * 8);
    v1331.beginPath();
    v1331.lineCap = "round";
    v1331.lineJoin = "round";
    v1331.moveTo(p995 * 78.00003051757812, p995 * 112.03977966308594);
    v1331.bezierCurveTo(p995 * 78.00003051757812, p995 * 87.03977966308594, p995 * 78.00003051757812, p995 * 87.03977966308594, p995 * 78.00003051757812, p995 * 62.03977966308594);
    v1331.closePath();
    f86(v1331, p997[3], p997[2], p995 * 8);
    v1331.beginPath();
    v1331.lineCap = "round";
    v1331.lineJoin = "round";
    v1331.moveTo(p995 * 78.00003051757812, p995 * 48.03977966308594);
    v1331.bezierCurveTo(p995 * 82.00003051757812, p995 * 55.53977966308594, p995 * 82.00003051757812, p995 * 55.53977966308594, p995 * 86.00003051757812, p995 * 63.03977966308594);
    v1331.bezierCurveTo(p995 * 78.00003051757812, p995 * 63.03977966308594, p995 * 78.00003051757812, p995 * 63.03977966308594, p995 * 70.00003051757812, p995 * 63.03977966308594);
    v1331.closePath();
    f86(v1331, p997[3], p997[2], p995 * 4);
    v1331.beginPath();
    v1331.lineCap = "round";
    v1331.lineJoin = "round";
    v1331.moveTo(p995 * 80.00003051757812, p995 * 111.6761474609375);
    v1331.bezierCurveTo(p995 * 95.00003051757812, p995 * 97.1761474609375, p995 * 95.00003051757812, p995 * 97.1761474609375, p995 * 110.00003051757812, p995 * 82.6761474609375);
    v1331.closePath();
    f86(v1331, p997[3], p997[2], p995 * 8);
    v1331.beginPath();
    v1331.lineCap = "round";
    v1331.lineJoin = "round";
    v1331.moveTo(p995 * 107.00003051757812, p995 * 76.6761474609375);
    v1331.bezierCurveTo(p995 * 111.50003051757812, p995 * 82.6761474609375, p995 * 111.50003051757812, p995 * 82.6761474609375, p995 * 116.00003051757812, p995 * 88.6761474609375);
    v1331.bezierCurveTo(p995 * 118.50003051757812, p995 * 81.6761474609375, p995 * 118.50003051757812, p995 * 81.6761474609375, p995 * 121.00003051757812, p995 * 74.6761474609375);
    v1331.closePath();
    f86(v1331, p997[3], p997[2], p995 * 4);
    f87(v1331, p995 * 77.00003051757812, p995 * 105.03977966308594, p995 * 15.556349186104045);
    f86(v1331, p997[3], p997[2], p995 * 4);
    v1331.save();
    v1331.translate(p995 * 77.00003051757812, p995 * 31.267044067382812);
    v1331.rotate(0);
    f89(v1331, p995 * -6, p995 * -12.5, p995 * 12, p995 * 25, p995 * 10);
    v1331.restore();
    f86(v1331, p997[1], p997[2], p995 * 7);
    v1331.save();
    v1331.translate(p995 * 77.00003051757812, p995 * 13.267044067382812);
    v1331.rotate(0);
    f89(v1331, p995 * -15, p995 * -10.5, p995 * 30, p995 * 21, p995 * 10);
    v1331.restore();
    f86(v1331, p997[1], p997[2], p995 * 7);
    return v1330;
  }
  function f257(p999, p1000, p1001) {
    var v1332 = document.createElement("canvas");
    var v1333 = v1332.getContext("2d");
    v1332.width = p999 * 440;
    v1332.height = p999 * 388;
    v1333.globalAlpha = p1000 ? 0.5 : 1;
    v1333.translate(p999 * 5, p999 * 5);
    f87(v1333, p999 * 220, p999 * 201, p999 * 170.41713528867922);
    f86(v1333, p1001[0], p1001[0], p999 * 6);
    v1333.globalAlpha = 1;
    v1333.translate(p999 * -5, p999 * -5);
    f87(v1333, p999 * 220, p999 * 201, p999 * 170.41713528867922);
    f86(v1333, p1001[1], p1001[2], p999 * 6);
    f87(v1333, p999 * 220, p999 * 201, p999 * 130);
    f86(v1333, p1001[11], p1001[2], p999 * 6);
    f87(v1333, p999 * 222, p999 * 199, p999 * 120.74767078498864);
    f86(v1333, vVUndefined28, p1001[3], p999 * 40);
    f87(v1333, p999 * 220, p999 * 200, p999 * 95.44108130150245);
    f86(v1333, undefined, p1001[2], p999 * 15);
    v1333.globalAlpha = p1000 ? 0.5 : 1;
    v1333.translate(p999 * 5, p999 * 5);
    f87(v1333, p999 * 63, p999 * 136, p999 * 49.193495504995376);
    f86(v1333, p1001[0], p1001[0], p999 * 4);
    v1333.globalAlpha = 1;
    v1333.translate(p999 * -5, p999 * -5);
    f87(v1333, p999 * 63, p999 * 136, p999 * 49.193495504995376);
    f86(v1333, p1001[8], p1001[2], p999 * 4);
    f87(v1333, p999 * 63, p999 * 137, p999 * 25.632011235952593);
    f86(v1333, p1001[7], p1001[2], p999 * 4);
    return v1332;
  }
  function f258(p1002, p1003, p1004) {
    var v1334 = document.createElement("canvas");
    var v1335 = v1334.getContext("2d");
    v1334.width = p1002 * 144;
    v1334.height = p1002 * 280;
    v1335.globalAlpha = p1003 ? 0.5 : 1;
    v1335.translate(p1002 * 5, p1002 * 5);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p1002 * 62, p1002 * 103.79999542236328);
    v1335.bezierCurveTo(p1002 * 62.5, p1002 * 148.79999542236328, p1002 * 62.5, p1002 * 148.79999542236328, p1002 * 63, p1002 * 193.79999542236328);
    v1335.bezierCurveTo(p1002 * 63, p1002 * 219.79999542236328, p1002 * 47, p1002 * 217.79999542236328, p1002 * 51, p1002 * 230.79999542236328);
    v1335.bezierCurveTo(p1002 * 62, p1002 * 255.79999542236328, p1002 * 74, p1002 * 260.7999954223633, p1002 * 72, p1002 * 248.79999542236328);
    v1335.bezierCurveTo(p1002 * 65, p1002 * 226.79999542236328, p1002 * 71, p1002 * 229.79999542236328, p1002 * 76, p1002 * 225.79999542236328);
    v1335.bezierCurveTo(p1002 * 90, p1002 * 224.79999542236328, p1002 * 89, p1002 * 232.79999542236328, p1002 * 90, p1002 * 243.79999542236328);
    v1335.bezierCurveTo(p1002 * 95, p1002 * 253.79999542236328, p1002 * 99, p1002 * 249.79999542236328, p1002 * 100, p1002 * 229.79999542236328);
    v1335.bezierCurveTo(p1002 * 102, p1002 * 213.79999542236328, p1002 * 98, p1002 * 214.79999542236328, p1002 * 90, p1002 * 205.79999542236328);
    v1335.bezierCurveTo(p1002 * 82, p1002 * 201.79999542236328, p1002 * 82, p1002 * 185.79999542236328, p1002 * 82, p1002 * 114.79999542236328);
    v1335.bezierCurveTo(p1002 * 80, p1002 * 73, p1002 * 82, p1002 * 68, p1002 * 93, p1002 * 53);
    v1335.bezierCurveTo(p1002 * 98, p1002 * 37, p1002 * 65, p1002 * 14, p1002 * 74, p1002 * 33);
    v1335.bezierCurveTo(p1002 * 82, p1002 * 56, p1002 * 77, p1002 * 52, p1002 * 69, p1002 * 54);
    v1335.bezierCurveTo(p1002 * 55, p1002 * 57, p1002 * 57, p1002 * 53, p1002 * 54, p1002 * 39);
    v1335.bezierCurveTo(p1002 * 46, p1002 * 20, p1002 * 37, p1002 * 61, p1002 * 50, p1002 * 68);
    v1335.bezierCurveTo(p1002 * 65, p1002 * 81, p1002 * 60, p1002 * 89, p1002 * 62, p1002 * 102);
    v1335.closePath();
    f86(v1335, p1004[0]);
    v1335.globalAlpha = 1;
    v1335.translate(p1002 * -5, p1002 * -5);
    v1335.beginPath();
    v1335.lineCap = "round";
    v1335.lineJoin = "round";
    v1335.moveTo(p1002 * 62, p1002 * 103.79999542236328);
    v1335.bezierCurveTo(p1002 * 62.5, p1002 * 148.79999542236328, p1002 * 62.5, p1002 * 148.79999542236328, p1002 * 63, p1002 * 193.79999542236328);
    v1335.bezierCurveTo(p1002 * 63, p1002 * 219.79999542236328, p1002 * 47, p1002 * 217.79999542236328, p1002 * 51, p1002 * 230.79999542236328);
    v1335.bezierCurveTo(p1002 * 62, p1002 * 255.79999542236328, p1002 * 74, p1002 * 260.7999954223633, p1002 * 72, p1002 * 248.79999542236328);
    v1335.bezierCurveTo(p1002 * 65, p1002 * 226.79999542236328, p1002 * 71, p1002 * 229.79999542236328, p1002 * 76, p1002 * 225.79999542236328);
    v1335.bezierCurveTo(p1002 * 90, p1002 * 224.79999542236328, p1002 * 89, p1002 * 232.79999542236328, p1002 * 90, p1002 * 243.79999542236328);
    v1335.bezierCurveTo(p1002 * 95, p1002 * 253.79999542236328, p1002 * 99, p1002 * 249.79999542236328, p1002 * 100, p1002 * 229.79999542236328);
    v1335.bezierCurveTo(p1002 * 102, p1002 * 213.79999542236328, p1002 * 98, p1002 * 214.79999542236328, p1002 * 90, p1002 * 205.79999542236328);
    v1335.bezierCurveTo(p1002 * 82, p1002 * 201.79999542236328, p1002 * 82, p1002 * 185.79999542236328, p1002 * 82, p1002 * 114.79999542236328);
    v1335.bezierCurveTo(p1002 * 80, p1002 * 73, p1002 * 82, p1002 * 68, p1002 * 93, p1002 * 53);
    v1335.bezierCurveTo(p1002 * 98, p1002 * 37, p1002 * 65, p1002 * 14, p1002 * 74, p1002 * 33);
    v1335.bezierCurveTo(p1002 * 82, p1002 * 56, p1002 * 77, p1002 * 52, p1002 * 69, p1002 * 54);
    v1335.bezierCurveTo(p1002 * 55, p1002 * 57, p1002 * 57, p1002 * 53, p1002 * 54, p1002 * 39);
    v1335.bezierCurveTo(p1002 * 46, p1002 * 20, p1002 * 37, p1002 * 61, p1002 * 50, p1002 * 68);
    v1335.bezierCurveTo(p1002 * 65, p1002 * 81, p1002 * 60, p1002 * 89, p1002 * 62, p1002 * 102);
    v1335.closePath();
    f86(v1335, p1004[1], p1004[2], p1002 * 6);
    return v1334;
  }
  function f259(p1005, p1006, p1007) {
    var v1336 = document.createElement("canvas");
    var v1337 = v1336.getContext("2d");
    v1336.width = p1005 * 160;
    v1336.height = p1005 * 161;
    v1337.globalAlpha = p1006 ? 0.5 : 1;
    v1337.translate(0, p1005 * 10);
    v1337.save();
    v1337.translate(p1005 * 80.5, p1005 * 78);
    f89(v1337, p1005 * -71.5, p1005 * -71, p1005 * 143, p1005 * 143, p1005 * 10);
    v1337.restore();
    f86(v1337, p1007[0]);
    v1337.globalAlpha = 1;
    v1337.translate(0, p1005 * -10);
    v1337.save();
    v1337.translate(p1005 * 80.5, p1005 * 78);
    f89(v1337, p1005 * -71.5, p1005 * -71, p1005 * 143, p1005 * 143, p1005 * 10);
    v1337.restore();
    f86(v1337, p1007[1], p1007[2], p1005 * 6);
    v1337.save();
    v1337.translate(p1005 * 80, p1005 * 78.5);
    f89(v1337, p1005 * -17, p1005 * -72.5, p1005 * 34, p1005 * 145, p1005 * 10);
    v1337.restore();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    v1337.globalAlpha = p1006 ? 0.5 : 1;
    v1337.translate(0, p1005 * 10);
    v1337.save();
    v1337.translate(p1005 * 80, p1005 * 79.5);
    f89(v1337, p1005 * -73, p1005 * -16.5, p1005 * 145, p1005 * 34, p1005 * 10);
    v1337.restore();
    f86(v1337, p1007[0]);
    v1337.globalAlpha = 1;
    v1337.translate(0, p1005 * -10);
    v1337.save();
    v1337.translate(p1005 * 80, p1005 * 79.5);
    f89(v1337, p1005 * -73, p1005 * -16.5, p1005 * 145, p1005 * 34, p1005 * 10);
    v1337.restore();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    v1337.globalAlpha = p1006 ? 0.5 : 1;
    v1337.translate(0, p1005 * 10);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 79, p1005 * 71);
    v1337.bezierCurveTo(p1005 * 90, p1005 * 42, p1005 * 98, p1005 * 36, p1005 * 109, p1005 * 43);
    v1337.bezierCurveTo(p1005 * 119, p1005 * 47, p1005 * 128, p1005 * 62, p1005 * 107, p1005 * 72);
    v1337.bezierCurveTo(p1005 * 96, p1005 * 78.5, p1005 * 96, p1005 * 78.5, p1005 * 85, p1005 * 85);
    v1337.closePath();
    f86(v1337, p1007[0]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 84, p1005 * 78);
    v1337.bezierCurveTo(p1005 * 113, p1005 * 82, p1005 * 123, p1005 * 97, p1005 * 115, p1005 * 108);
    v1337.bezierCurveTo(p1005 * 110, p1005 * 119, p1005 * 98, p1005 * 124, p1005 * 87, p1005 * 107);
    v1337.bezierCurveTo(p1005 * 81.5, p1005 * 94.5, p1005 * 81.5, p1005 * 94.5, p1005 * 76, p1005 * 82);
    v1337.closePath();
    f86(v1337, p1007[0]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 80, p1005 * 73);
    v1337.bezierCurveTo(p1005 * 64, p1005 * 37, p1005 * 55, p1005 * 34, p1005 * 45, p1005 * 42);
    v1337.bezierCurveTo(p1005 * 30, p1005 * 54, p1005 * 36, p1005 * 65, p1005 * 51, p1005 * 72);
    v1337.bezierCurveTo(p1005 * 62.5, p1005 * 77, p1005 * 62.5, p1005 * 77, p1005 * 74, p1005 * 82);
    v1337.closePath();
    f86(v1337, p1007[0]);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 82, p1005 * 83);
    v1337.bezierCurveTo(p1005 * 73, p1005 * 107, p1005 * 60, p1005 * 123, p1005 * 47, p1005 * 113);
    v1337.bezierCurveTo(p1005 * 33, p1005 * 105, p1005 * 33, p1005 * 92, p1005 * 52, p1005 * 85);
    v1337.bezierCurveTo(p1005 * 74, p1005 * 73, p1005 * 77, p1005 * 76, p1005 * 76, p1005 * 75);
    v1337.closePath();
    f86(v1337, p1007[0]);
    v1337.globalAlpha = 1;
    v1337.translate(0, p1005 * -10);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 79, p1005 * 71);
    v1337.bezierCurveTo(p1005 * 90, p1005 * 42, p1005 * 98, p1005 * 36, p1005 * 109, p1005 * 43);
    v1337.bezierCurveTo(p1005 * 119, p1005 * 47, p1005 * 128, p1005 * 62, p1005 * 107, p1005 * 72);
    v1337.bezierCurveTo(p1005 * 96, p1005 * 78.5, p1005 * 96, p1005 * 78.5, p1005 * 85, p1005 * 85);
    v1337.closePath();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 84, p1005 * 78);
    v1337.bezierCurveTo(p1005 * 113, p1005 * 82, p1005 * 123, p1005 * 97, p1005 * 115, p1005 * 108);
    v1337.bezierCurveTo(p1005 * 110, p1005 * 119, p1005 * 98, p1005 * 124, p1005 * 87, p1005 * 107);
    v1337.bezierCurveTo(p1005 * 81.5, p1005 * 94.5, p1005 * 81.5, p1005 * 94.5, p1005 * 76, p1005 * 82);
    v1337.closePath();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 80, p1005 * 73);
    v1337.bezierCurveTo(p1005 * 64, p1005 * 37, p1005 * 55, p1005 * 34, p1005 * 45, p1005 * 42);
    v1337.bezierCurveTo(p1005 * 30, p1005 * 54, p1005 * 36, p1005 * 65, p1005 * 51, p1005 * 72);
    v1337.bezierCurveTo(p1005 * 62.5, p1005 * 77, p1005 * 62.5, p1005 * 77, p1005 * 74, p1005 * 82);
    v1337.closePath();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    v1337.beginPath();
    v1337.lineCap = "round";
    v1337.lineJoin = "round";
    v1337.moveTo(p1005 * 82, p1005 * 83);
    v1337.bezierCurveTo(p1005 * 73, p1005 * 107, p1005 * 60, p1005 * 123, p1005 * 47, p1005 * 113);
    v1337.bezierCurveTo(p1005 * 33, p1005 * 105, p1005 * 33, p1005 * 92, p1005 * 52, p1005 * 85);
    v1337.bezierCurveTo(p1005 * 74, p1005 * 73, p1005 * 77, p1005 * 76, p1005 * 76, p1005 * 75);
    v1337.closePath();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    v1337.globalAlpha = p1006 ? 0.5 : 1;
    v1337.translate(0, p1005 * 10);
    v1337.save();
    v1337.translate(p1005 * 78.5, p1005 * 78);
    f89(v1337, p1005 * -13.5, p1005 * -14, p1005 * 27, p1005 * 27, p1005 * 6);
    v1337.restore();
    f86(v1337, p1007[0]);
    v1337.globalAlpha = 1;
    v1337.translate(0, p1005 * -10);
    v1337.save();
    v1337.translate(p1005 * 78.5, p1005 * 78);
    f89(v1337, p1005 * -13.5, p1005 * -14, p1005 * 27, p1005 * 27, p1005 * 6);
    v1337.restore();
    f86(v1337, p1007[3], p1007[4], p1005 * 6);
    return v1336;
  }
  function f260(p1008, p1009, p1010) {
    var v1338 = document.createElement("canvas");
    var v1339 = v1338.getContext("2d");
    v1338.width = p1008 * 400;
    v1338.height = p1008 * 400;
    v1339.globalAlpha = 1;
    v1339.translate(p1008 * 20, p1008 * 20);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p1008 * 36.5, p1008 * 278.0625);
    v1339.bezierCurveTo(p1008 * 67.5, p1008 * 316.0625, p1008 * 134.5, p1008 * 334.0625, p1008 * 199.5, p1008 * 319.0625);
    v1339.bezierCurveTo(p1008 * 254.5, p1008 * 304.0625, p1008 * 346.5, p1008 * 270.0625, p1008 * 348.5, p1008 * 237.0625);
    v1339.bezierCurveTo(p1008 * 359.5, p1008 * 206.0625, p1008 * 318.5, p1008 * 129.0625, p1008 * 262.5, p1008 * 122.0625);
    v1339.bezierCurveTo(p1008 * 213.5, p1008 * 115.0625, p1008 * 166.5, p1008 * 133.0625, p1008 * 104.5, p1008 * 166.0625);
    v1339.bezierCurveTo(p1008 * 54.5, p1008 * 194.0625, p1008 * 23.5, p1008 * 241.0625, p1008 * 36.5, p1008 * 277.0625);
    v1339.closePath();
    f86(v1339, p1010[0]);
    v1339.translate(p1008 * -20, p1008 * -20);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p1008 * 36.5, p1008 * 278.0625);
    v1339.bezierCurveTo(p1008 * 67.5, p1008 * 316.0625, p1008 * 134.5, p1008 * 334.0625, p1008 * 199.5, p1008 * 319.0625);
    v1339.bezierCurveTo(p1008 * 254.5, p1008 * 304.0625, p1008 * 346.5, p1008 * 270.0625, p1008 * 348.5, p1008 * 237.0625);
    v1339.bezierCurveTo(p1008 * 359.5, p1008 * 206.0625, p1008 * 318.5, p1008 * 129.0625, p1008 * 262.5, p1008 * 122.0625);
    v1339.bezierCurveTo(p1008 * 213.5, p1008 * 115.0625, p1008 * 166.5, p1008 * 133.0625, p1008 * 104.5, p1008 * 166.0625);
    v1339.bezierCurveTo(p1008 * 54.5, p1008 * 194.0625, p1008 * 23.5, p1008 * 241.0625, p1008 * 36.5, p1008 * 277.0625);
    v1339.closePath();
    f86(v1339, p1010[1], p1010[2], p1008 * 19);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p1008 * 214.5, p1008 * 124.0625);
    v1339.bezierCurveTo(p1008 * 242.5, p1008 * 125.0625, p1008 * 272.5, p1008 * 159.0625, p1008 * 283.5, p1008 * 184.0625);
    v1339.bezierCurveTo(p1008 * 277.5, p1008 * 161.0625, p1008 * 233.5, p1008 * 128.0625, p1008 * 219.5, p1008 * 122.0625);
    v1339.closePath();
    f86(v1339, vVUndefined26, p1010[2], p1008 * 19);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p1008 * 157.5, p1008 * 145.0625);
    v1339.bezierCurveTo(p1008 * 176.5, p1008 * 148.0625, p1008 * 205.5, p1008 * 176.0625, p1008 * 212.5, p1008 * 197.0625);
    v1339.bezierCurveTo(p1008 * 205.5, p1008 * 178.0625, p1008 * 177.5, p1008 * 152.0625, p1008 * 156.5, p1008 * 142.0625);
    v1339.closePath();
    f86(v1339, vVVVUndefined1972, p1010[2], p1008 * 19);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p1008 * 103.5, p1008 * 169.0625);
    v1339.bezierCurveTo(p1008 * 160.5, p1008 * 166.0625, p1008 * 228.5, p1008 * 312.0625, p1008 * 162.5, p1008 * 323.0625);
    v1339.bezierCurveTo(p1008 * 128.5, p1008 * 330.0625, p1008 * 45.5, p1008 * 312.0625, p1008 * 34.5, p1008 * 268.0625);
    v1339.bezierCurveTo(p1008 * 30.5, p1008 * 238.0625, p1008 * 44.5, p1008 * 222.0625, p1008 * 52.5, p1008 * 211.0625);
    v1339.bezierCurveTo(p1008 * 82.5, p1008 * 174.0625, p1008 * 104.5, p1008 * 166.0625, p1008 * 119.5, p1008 * 172.0625);
    v1339.closePath();
    f86(v1339, p1010[3], p1010[2], p1008 * 19);
    f87(v1339, p1008 * 92.5, p1008 * 216.0625, p1008 * 13.892443989449804);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 68.5, p1008 * 227.0625, p1008 * 8.06225774829855);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 85.5, p1008 * 240.0625, p1008 * 6.708203932499369);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 147.5, p1008 * 294.0625, p1008 * 17.46424919657298);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 166.5, p1008 * 273.0625, p1008 * 6.708203932499369);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 114.5, p1008 * 294.0625, p1008 * 12.36931687685298);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 123.5, p1008 * 220.0625, p1008 * 5.830951894845301);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 114.5, p1008 * 259.0625, p1008 * 4.123105625617661);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 63.5, p1008 * 265.0625, p1008 * 5.385164807134504);
    f86(v1339, p1010[4]);
    f87(v1339, p1008 * 148.5, p1008 * 235.0625, p1008 * 4.47213595499958);
    f86(v1339, p1010[4]);
    v1339.beginPath();
    v1339.lineCap = "round";
    v1339.lineJoin = "round";
    v1339.moveTo(p1008 * 194.5, p1008 * 313.0625);
    v1339.bezierCurveTo(p1008 * 222.5, p1008 * 306.0625, p1008 * 319.5, p1008 * 271.0625, p1008 * 337.5, p1008 * 241.0625);
    v1339.bezierCurveTo(p1008 * 274.5, p1008 * 270.0625, p1008 * 216.5, p1008 * 288.0625, p1008 * 199.5, p1008 * 287.0625);
    v1339.bezierCurveTo(p1008 * 198.5, p1008 * 302.0625, p1008 * 195.5, p1008 * 311.0625, p1008 * 193.5, p1008 * 312.0625);
    v1339.closePath();
    f86(v1339, p1010[5]);
    return v1338;
  }
  function f261(p1011, p1012, p1013) {
    var v1340 = document.createElement("canvas");
    var v1341 = v1340.getContext("2d");
    v1340.width = p1011 * 465;
    v1340.height = p1011 * 405;
    v1341.globalAlpha = 1;
    v1341.translate(p1011 * 6, p1011 * 0);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 39.000030517578125, p1011 * 162.03977966308594);
    v1341.bezierCurveTo(p1011 * 125.00003051757812, p1011 * 84.03977966308594, p1011 * 108.50003051757812, p1011 * 115.03977966308594, p1011 * 178.00003051757812, p1011 * 68.03977966308594);
    v1341.bezierCurveTo(p1011 * 299.0000305175781, p1011 * 146.53977966308594, p1011 * 299.0000305175781, p1011 * 146.53977966308594, p1011 * 420.0000305175781, p1011 * 225.03977966308594);
    v1341.bezierCurveTo(p1011 * 400.0000305175781, p1011 * 288.53977966308594, p1011 * 400.0000305175781, p1011 * 288.53977966308594, p1011 * 380.0000305175781, p1011 * 352.03977966308594);
    v1341.bezierCurveTo(p1011 * 216.50003051757812, p1011 * 345.53977966308594, p1011 * 216.50003051757812, p1011 * 345.53977966308594, p1011 * 53.000030517578125, p1011 * 339.03977966308594);
    v1341.closePath();
    f86(v1341, p1013[3]);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 23.000030517578125, p1011 * 306.94886779785156);
    v1341.bezierCurveTo(p1011 * 5.000030517578125, p1011 * 275.94886779785156, p1011 * 6.000030517578125, p1011 * 201.94886779785156, p1011 * 14.000030517578125, p1011 * 150.94886779785156);
    v1341.bezierCurveTo(p1011 * 40.000030517578125, p1011 * 34.94886779785156, p1011 * 157.00003051757812, p1011 * 14.948867797851562, p1011 * 199.00003051757812, p1011 * 11.948867797851562);
    v1341.bezierCurveTo(p1011 * 331.0000305175781, p1011 * 0.9488677978515625, p1011 * 409.0000305175781, p1011 * 61.94886779785156, p1011 * 428.0000305175781, p1011 * 133.94886779785156);
    v1341.bezierCurveTo(p1011 * 445.0000305175781, p1011 * 207.94886779785156, p1011 * 439.0000305175781, p1011 * 274.94886779785156, p1011 * 426.0000305175781, p1011 * 342.94886779785156);
    v1341.bezierCurveTo(p1011 * 355.0000305175781, p1011 * 207.94886779785156, p1011 * 345.0000305175781, p1011 * 208.94886779785156, p1011 * 333.0000305175781, p1011 * 202.94886779785156);
    v1341.bezierCurveTo(p1011 * 262.0000305175781, p1011 * 143.94886779785156, p1011 * 236.00003051757812, p1011 * 148.94886779785156, p1011 * 189.00003051757812, p1011 * 162.94886779785156);
    v1341.bezierCurveTo(p1011 * 82.00003051757812, p1011 * 190.94886779785156, p1011 * 78.00003051757812, p1011 * 235.94886779785156, p1011 * 62.000030517578125, p1011 * 279.94886779785156);
    v1341.closePath();
    f86(v1341, p1013[0], p1013[1], p1011 * 20);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 17.000030517578125, p1011 * 149.94886779785156);
    v1341.bezierCurveTo(p1011 * 76.00003051757812, p1011 * 67.94886779785156, p1011 * 177.00003051757812, p1011 * 40.94886779785156, p1011 * 232.00003051757812, p1011 * 45.94886779785156);
    v1341.bezierCurveTo(p1011 * 316.0000305175781, p1011 * 46.94886779785156, p1011 * 359.0000305175781, p1011 * 74.94886779785156, p1011 * 428.0000305175781, p1011 * 145.94886779785156);
    v1341.bezierCurveTo(p1011 * 414.0000305175781, p1011 * 73.94886779785156, p1011 * 386.0000305175781, p1011 * 68.94886779785156, p1011 * 359.0000305175781, p1011 * 43.94886779785156);
    v1341.bezierCurveTo(p1011 * 295.0000305175781, p1011 * 5.9488677978515625, p1011 * 239.00003051757812, p1011 * 10.948867797851562, p1011 * 207.00003051757812, p1011 * 10.948867797851562);
    v1341.bezierCurveTo(p1011 * 121.00003051757812, p1011 * 20.948867797851562, p1011 * 104.00003051757812, p1011 * 34.94886779785156, p1011 * 45.000030517578125, p1011 * 84.94886779785156);
    v1341.bezierCurveTo(p1011 * 14.000030517578125, p1011 * 128.94886779785156, p1011 * 18.000030517578125, p1011 * 142.94886779785156, p1011 * 16.000030517578125, p1011 * 151.94886779785156);
    v1341.closePath();
    f86(v1341, p1013[2]);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 23.000030517578125, p1011 * 306.94886779785156);
    v1341.bezierCurveTo(p1011 * 5.000030517578125, p1011 * 275.94886779785156, p1011 * 6.000030517578125, p1011 * 201.94886779785156, p1011 * 14.000030517578125, p1011 * 150.94886779785156);
    v1341.bezierCurveTo(p1011 * 40.000030517578125, p1011 * 34.94886779785156, p1011 * 157.00003051757812, p1011 * 14.948867797851562, p1011 * 199.00003051757812, p1011 * 11.948867797851562);
    v1341.bezierCurveTo(p1011 * 331.0000305175781, p1011 * 0.9488677978515625, p1011 * 409.0000305175781, p1011 * 61.94886779785156, p1011 * 428.0000305175781, p1011 * 133.94886779785156);
    v1341.bezierCurveTo(p1011 * 445.0000305175781, p1011 * 207.94886779785156, p1011 * 439.0000305175781, p1011 * 274.94886779785156, p1011 * 426.0000305175781, p1011 * 342.94886779785156);
    v1341.bezierCurveTo(p1011 * 355.0000305175781, p1011 * 207.94886779785156, p1011 * 345.0000305175781, p1011 * 208.94886779785156, p1011 * 333.0000305175781, p1011 * 202.94886779785156);
    v1341.bezierCurveTo(p1011 * 262.0000305175781, p1011 * 143.94886779785156, p1011 * 236.00003051757812, p1011 * 148.94886779785156, p1011 * 189.00003051757812, p1011 * 162.94886779785156);
    v1341.bezierCurveTo(p1011 * 82.00003051757812, p1011 * 190.94886779785156, p1011 * 78.00003051757812, p1011 * 235.94886779785156, p1011 * 62.000030517578125, p1011 * 279.94886779785156);
    v1341.closePath();
    f86(v1341, vVUndefined26, p1013[1], p1011 * 16);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 60.000030517578125, p1011 * 288.03977966308594);
    v1341.bezierCurveTo(p1011 * 183.00003051757812, p1011 * 320.03977966308594, p1011 * 342.0000305175781, p1011 * 306.03977966308594, p1011 * 399.0000305175781, p1011 * 286.03977966308594);
    v1341.bezierCurveTo(p1011 * 420.0000305175781, p1011 * 345.03977966308594, p1011 * 410.0000305175781, p1011 * 335.03977966308594, p1011 * 415.0000305175781, p1011 * 362.03977966308594);
    v1341.bezierCurveTo(p1011 * 351.0000305175781, p1011 * 384.03977966308594, p1011 * 299.0000305175781, p1011 * 389.03977966308594, p1011 * 215.00003051757812, p1011 * 391.03977966308594);
    v1341.bezierCurveTo(p1011 * 128.00003051757812, p1011 * 388.03977966308594, p1011 * 69.00003051757812, p1011 * 373.03977966308594, p1011 * 39.000030517578125, p1011 * 359.03977966308594);
    v1341.closePath();
    f86(v1341, p1013[0], p1013[1], p1011 * 13);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 47.000030517578125, p1011 * 327.03977966308594);
    v1341.bezierCurveTo(p1011 * 203.00003051757812, p1011 * 377.03977966308594, p1011 * 331.0000305175781, p1011 * 349.03977966308594, p1011 * 410.0000305175781, p1011 * 330.03977966308594);
    v1341.closePath();
    f86(v1341, p1013[0], p1013[1], p1011 * 20);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 9.000030517578125, p1011 * 339.1306915283203);
    v1341.bezierCurveTo(p1011 * 2.000030517578125, p1011 * 280.1306915283203, p1011 * 30.000030517578125, p1011 * 219.1306915283203, p1011 * 85.00003051757812, p1011 * 167.1306915283203);
    v1341.bezierCurveTo(p1011 * 174.00003051757812, p1011 * 82.13069152832031, p1011 * 241.00003051757812, p1011 * 101.13069152832031, p1011 * 284.0000305175781, p1011 * 115.13069152832031);
    v1341.bezierCurveTo(p1011 * 333.0000305175781, p1011 * 134.1306915283203, p1011 * 376.0000305175781, p1011 * 177.1306915283203, p1011 * 410.0000305175781, p1011 * 247.1306915283203);
    v1341.bezierCurveTo(p1011 * 439.0000305175781, p1011 * 300.1306915283203, p1011 * 442.0000305175781, p1011 * 346.1306915283203, p1011 * 430.0000305175781, p1011 * 363.1306915283203);
    v1341.bezierCurveTo(p1011 * 418.0000305175781, p1011 * 366.1306915283203, p1011 * 395.0000305175781, p1011 * 295.1306915283203, p1011 * 355.0000305175781, p1011 * 223.1306915283203);
    v1341.bezierCurveTo(p1011 * 299.0000305175781, p1011 * 156.1306915283203, p1011 * 262.0000305175781, p1011 * 155.1306915283203, p1011 * 215.00003051757812, p1011 * 159.1306915283203);
    v1341.bezierCurveTo(p1011 * 133.00003051757812, p1011 * 171.1306915283203, p1011 * 120.00003051757812, p1011 * 193.1306915283203, p1011 * 96.00003051757812, p1011 * 221.1306915283203);
    v1341.bezierCurveTo(p1011 * 49.000030517578125, p1011 * 262.1306915283203, p1011 * 47.000030517578125, p1011 * 306.1306915283203, p1011 * 38.000030517578125, p1011 * 336.1306915283203);
    v1341.bezierCurveTo(p1011 * 30.000030517578125, p1011 * 349.1306915283203, p1011 * 30.000030517578125, p1011 * 349.1306915283203, p1011 * 22.000030517578125, p1011 * 362.1306915283203);
    v1341.closePath();
    f86(v1341, p1013[2], p1013[1], p1011 * 20);
    v1341.beginPath();
    v1341.lineCap = "round";
    v1341.lineJoin = "round";
    v1341.moveTo(p1011 * 228.00003051757812, p1011 * 128.03977966308594);
    v1341.bezierCurveTo(p1011 * 315.0000305175781, p1011 * 131.03977966308594, p1011 * 349.0000305175781, p1011 * 178.03977966308594, p1011 * 386.0000305175781, p1011 * 234.03977966308594);
    v1341.bezierCurveTo(p1011 * 444.0000305175781, p1011 * 329.03977966308594, p1011 * 446.0000305175781, p1011 * 354.03977966308594, p1011 * 427.0000305175781, p1011 * 373.03977966308594);
    v1341.bezierCurveTo(p1011 * 389.0000305175781, p1011 * 389.03977966308594, p1011 * 399.0000305175781, p1011 * 329.03977966308594, p1011 * 361.0000305175781, p1011 * 277.03977966308594);
    v1341.bezierCurveTo(p1011 * 306.0000305175781, p1011 * 191.03977966308594, p1011 * 266.0000305175781, p1011 * 183.03977966308594, p1011 * 220.00003051757812, p1011 * 181.03977966308594);
    v1341.bezierCurveTo(p1011 * 138.00003051757812, p1011 * 184.03977966308594, p1011 * 123.00003051757812, p1011 * 212.03977966308594, p1011 * 89.00003051757812, p1011 * 271.03977966308594);
    v1341.bezierCurveTo(p1011 * 52.000030517578125, p1011 * 349.03977966308594, p1011 * 68.00003051757812, p1011 * 364.03977966308594, p1011 * 33.000030517578125, p1011 * 369.03977966308594);
    v1341.bezierCurveTo(p1011 * 6.000030517578125, p1011 * 366.03977966308594, p1011 * 5.000030517578125, p1011 * 341.03977966308594, p1011 * 26.000030517578125, p1011 * 288.03977966308594);
    v1341.bezierCurveTo(p1011 * 60.000030517578125, p1011 * 207.03977966308594, p1011 * 100.00003051757812, p1011 * 180.03977966308594, p1011 * 113.00003051757812, p1011 * 170.03977966308594);
    v1341.bezierCurveTo(p1011 * 159.00003051757812, p1011 * 132.03977966308594, p1011 * 196.00003051757812, p1011 * 133.03977966308594, p1011 * 226.00003051757812, p1011 * 129.03977966308594);
    v1341.closePath();
    f86(v1341, p1013[0], p1013[1], p1011 * 20);
    return v1340;
  }
  function f262(p1014, p1015, p1016) {
    var v1342 = document.createElement("canvas");
    var v1343 = v1342.getContext("2d");
    v1342.width = p1014 * 573;
    v1342.height = p1014 * 350;
    if (p1016 == 1) {
      v1343.beginPath();
      v1343.lineCap = "round";
      v1343.lineJoin = "round";
      v1343.moveTo(p1014 * 336, p1014 * 72);
      v1343.bezierCurveTo(p1014 * 366, p1014 * 15, p1014 * 426, p1014 * 36, p1014 * 497, p1014 * 83);
      v1343.bezierCurveTo(p1014 * 522, p1014 * 85, p1014 * 522, p1014 * 85, p1014 * 547, p1014 * 87);
      v1343.bezierCurveTo(p1014 * 476.5, p1014 * 205, p1014 * 476.5, p1014 * 205, p1014 * 406, p1014 * 323);
      v1343.bezierCurveTo(p1014 * 297.5, p1014 * 319, p1014 * 297.5, p1014 * 319, p1014 * 189, p1014 * 315);
      v1343.bezierCurveTo(p1014 * 105.5, p1014 * 279, p1014 * 105.5, p1014 * 279, p1014 * 22, p1014 * 243);
      v1343.bezierCurveTo(p1014 * 92, p1014 * 140, p1014 * 92, p1014 * 140, p1014 * 162, p1014 * 37);
      v1343.bezierCurveTo(p1014 * 173, p1014 * 39, p1014 * 173, p1014 * 39, p1014 * 184, p1014 * 41);
      v1343.bezierCurveTo(p1014 * 185, p1014 * 38.5, p1014 * 185, p1014 * 38.5, p1014 * 186, p1014 * 36);
      v1343.bezierCurveTo(p1014 * 323, p1014 * 13, p1014 * 322, p1014 * 25, p1014 * 337, p1014 * 74);
      v1343.closePath();
      f86(v1343, p1015[4], p1015[4], p1014 * 35);
    }
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 168, p1014 * 42);
    v1343.bezierCurveTo(p1014 * 255, p1014 * 60, p1014 * 255, p1014 * 60, p1014 * 342, p1014 * 78);
    v1343.bezierCurveTo(p1014 * 443, p1014 * 81.5, p1014 * 443, p1014 * 81.5, p1014 * 544, p1014 * 85);
    v1343.bezierCurveTo(p1014 * 475, p1014 * 204.5, p1014 * 475, p1014 * 204.5, p1014 * 406, p1014 * 324);
    v1343.bezierCurveTo(p1014 * 297.5, p1014 * 320, p1014 * 297.5, p1014 * 320, p1014 * 189, p1014 * 316);
    v1343.bezierCurveTo(p1014 * 105.5, p1014 * 279, p1014 * 105.5, p1014 * 279, p1014 * 22, p1014 * 242);
    v1343.closePath();
    f86(v1343, p1015[0], p1015[1], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 188, p1014 * 41);
    v1343.bezierCurveTo(p1014 * 308, p1014 * 15, p1014 * 325, p1014 * 18, p1014 * 337, p1014 * 66);
    v1343.bezierCurveTo(p1014 * 191, p1014 * 305, p1014 * 196, p1014 * 286, p1014 * 184, p1014 * 307);
    v1343.bezierCurveTo(p1014 * 175, p1014 * 250, p1014 * 90, p1014 * 254, p1014 * 52, p1014 * 241);
    v1343.closePath();
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 336, p1014 * 71);
    v1343.bezierCurveTo(p1014 * 375, p1014 * 8, p1014 * 429, p1014 * 50, p1014 * 518, p1014 * 92);
    v1343.bezierCurveTo(p1014 * 455, p1014 * 199.5, p1014 * 455, p1014 * 199.5, p1014 * 392, p1014 * 307);
    v1343.bezierCurveTo(p1014 * 227, p1014 * 301, p1014 * 261, p1014 * 255, p1014 * 188, p1014 * 308);
    v1343.closePath();
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 357, p1014 * 76);
    v1343.bezierCurveTo(p1014 * 390, p1014 * 67, p1014 * 414, p1014 * 86, p1014 * 435, p1014 * 104);
    v1343.bezierCurveTo(p1014 * 417, p1014 * 135, p1014 * 417, p1014 * 135, p1014 * 399, p1014 * 166);
    v1343.bezierCurveTo(p1014 * 352, p1014 * 140, p1014 * 345, p1014 * 139, p1014 * 319, p1014 * 142);
    v1343.closePath();
    f86(v1343, p1015[3], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 309, p1014 * 168);
    v1343.bezierCurveTo(p1014 * 345, p1014 * 163, p1014 * 372, p1014 * 180, p1014 * 412, p1014 * 203);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 263, p1014 * 54);
    v1343.bezierCurveTo(p1014 * 305, p1014 * 44, p1014 * 307, p1014 * 51, p1014 * 311, p1014 * 64);
    v1343.bezierCurveTo(p1014 * 270.5, p1014 * 129.5, p1014 * 270.5, p1014 * 129.5, p1014 * 230, p1014 * 195);
    v1343.bezierCurveTo(p1014 * 221, p1014 * 175, p1014 * 203, p1014 * 171, p1014 * 186, p1014 * 172);
    v1343.closePath();
    f86(v1343, p1015[3], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 292, p1014 * 198);
    v1343.bezierCurveTo(p1014 * 328, p1014 * 191, p1014 * 364, p1014 * 211, p1014 * 401, p1014 * 237);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 245, p1014 * 68);
    v1343.bezierCurveTo(p1014 * 210, p1014 * 72, p1014 * 210, p1014 * 72, p1014 * 189, p1014 * 69);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 222, p1014 * 96);
    v1343.bezierCurveTo(p1014 * 196, p1014 * 97, p1014 * 193, p1014 * 97, p1014 * 177, p1014 * 92);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 207, p1014 * 124);
    v1343.bezierCurveTo(p1014 * 179, p1014 * 123, p1014 * 177, p1014 * 124, p1014 * 161, p1014 * 119);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 115, p1014 * 183);
    v1343.bezierCurveTo(p1014 * 184, p1014 * 185, p1014 * 203, p1014 * 198, p1014 * 219, p1014 * 221);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 98, p1014 * 213);
    v1343.bezierCurveTo(p1014 * 161, p1014 * 214, p1014 * 193, p1014 * 227, p1014 * 201, p1014 * 249);
    f86(v1343, p1015[2], p1015[3], p1014 * 12);
    v1343.beginPath();
    v1343.lineCap = "round";
    v1343.lineJoin = "round";
    v1343.moveTo(p1014 * 399, p1014 * 257);
    v1343.bezierCurveTo(p1014 * 287, p1014 * 215, p1014 * 280, p1014 * 215, p1014 * 263, p1014 * 222);
    v1343.bezierCurveTo(p1014 * 253, p1014 * 238, p1014 * 247, p1014 * 245, p1014 * 243, p1014 * 254);
    v1343.bezierCurveTo(p1014 * 267, p1014 * 236, p1014 * 292, p1014 * 263, p1014 * 377, p1014 * 284);
    f86(v1343, p1015[3], p1015[3], p1014 * 12);
    return v1342;
  }
  function f263(p1017, p1018, p1019) {
    var v1344 = document.createElement("canvas");
    var v1345 = v1344.getContext("2d");
    v1344.width = p1017 * 440;
    v1344.height = p1017 * 388;
    v1345.globalAlpha = p1018 ? 0.5 : 1;
    v1345.translate(p1017 * 5, p1017 * 5);
    f87(v1345, p1017 * 220, p1017 * 201, p1017 * 170.41713528867922);
    f86(v1345, p1019[0], p1019[0], p1017 * 6);
    v1345.globalAlpha = 1;
    v1345.translate(p1017 * -5, p1017 * -5);
    f87(v1345, p1017 * 220, p1017 * 201, p1017 * 170.41713528867922);
    f86(v1345, p1019[1], p1019[2], p1017 * 6);
    f87(v1345, p1017 * 220, p1017 * 201, p1017 * 130);
    f86(v1345, p1019[11], p1019[2], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 218, p1017 * 97);
    v1345.bezierCurveTo(p1017 * 219, p1017 * 163, p1017 * 201, p1017 * 176, p1017 * 191, p1017 * 175);
    v1345.bezierCurveTo(p1017 * 176, p1017 * 177, p1017 * 168, p1017 * 167, p1017 * 160, p1017 * 115);
    v1345.closePath();
    f86(v1345, p1019[5], p1019[6], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 224, p1017 * 181);
    v1345.bezierCurveTo(p1017 * 225, p1017 * 138, p1017 * 246, p1017 * 115, p1017 * 263, p1017 * 137);
    v1345.bezierCurveTo(p1017 * 282, p1017 * 174, p1017 * 279, p1017 * 217, p1017 * 265, p1017 * 243);
    v1345.bezierCurveTo(p1017 * 253, p1017 * 264, p1017 * 240, p1017 * 256, p1017 * 233, p1017 * 238);
    v1345.bezierCurveTo(p1017 * 221, p1017 * 212, p1017 * 225, p1017 * 198, p1017 * 224, p1017 * 184);
    v1345.closePath();
    f86(v1345, p1019[5], p1019[6], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 169, p1017 * 289);
    v1345.bezierCurveTo(p1017 * 161, p1017 * 234, p1017 * 168, p1017 * 197, p1017 * 187, p1017 * 195);
    v1345.bezierCurveTo(p1017 * 219, p1017 * 189, p1017 * 222, p1017 * 256, p1017 * 216, p1017 * 307);
    v1345.closePath();
    f86(v1345, p1019[5], p1019[6], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 143, p1017 * 146);
    v1345.bezierCurveTo(p1017 * 161, p1017 * 199, p1017 * 151, p1017 * 245, p1017 * 138, p1017 * 266);
    v1345.bezierCurveTo(p1017 * 120.5, p1017 * 239.5, p1017 * 120.5, p1017 * 239.5, p1017 * 103, p1017 * 213);
    v1345.closePath();
    f86(v1345, p1019[5], p1019[6], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 283, p1017 * 135);
    v1345.bezierCurveTo(p1017 * 277, p1017 * 176, p1017 * 298, p1017 * 194, p1017 * 315, p1017 * 205);
    v1345.bezierCurveTo(p1017 * 323.5, p1017 * 175, p1017 * 323.5, p1017 * 175, p1017 * 332, p1017 * 145);
    v1345.closePath();
    f86(v1345, p1019[5], p1019[6], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 318, p1017 * 223);
    v1345.bezierCurveTo(p1017 * 290, p1017 * 195, p1017 * 271, p1017 * 256, p1017 * 283, p1017 * 281);
    v1345.bezierCurveTo(p1017 * 303.5, p1017 * 267, p1017 * 303.5, p1017 * 267, p1017 * 324, p1017 * 253);
    v1345.closePath();
    f86(v1345, p1019[5], p1019[6], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 142, p1017 * 223);
    v1345.bezierCurveTo(p1017 * 128, p1017 * 213, p1017 * 123, p1017 * 214, p1017 * 111, p1017 * 223);
    v1345.closePath();
    f86(v1345, p1019[10], p1019[10], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 251, p1017 * 133);
    v1345.bezierCurveTo(p1017 * 269, p1017 * 188, p1017 * 262, p1017 * 229, p1017 * 251, p1017 * 253);
    v1345.bezierCurveTo(p1017 * 288, p1017 * 224, p1017 * 273, p1017 * 139, p1017 * 252, p1017 * 133);
    v1345.closePath();
    f86(v1345, p1019[10], p1019[10], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 203, p1017 * 102);
    v1345.bezierCurveTo(p1017 * 204, p1017 * 136, p1017 * 200, p1017 * 159, p1017 * 189, p1017 * 174);
    v1345.bezierCurveTo(p1017 * 223, p1017 * 164, p1017 * 219, p1017 * 87, p1017 * 205, p1017 * 83);
    v1345.closePath();
    f86(v1345, p1019[10], p1019[10], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 196, p1017 * 324);
    v1345.bezierCurveTo(p1017 * 209, p1017 * 239, p1017 * 200, p1017 * 219, p1017 * 192, p1017 * 196);
    v1345.bezierCurveTo(p1017 * 229, p1017 * 216, p1017 * 219, p1017 * 316, p1017 * 198, p1017 * 325);
    v1345.closePath();
    f86(v1345, p1019[10], p1019[10], p1017 * 4);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 266, p1017 * 166);
    v1345.bezierCurveTo(p1017 * 249, p1017 * 154, p1017 * 243, p1017 * 161, p1017 * 233, p1017 * 167);
    f86(v1345, vVVVUndefined272, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 269, p1017 * 192);
    v1345.bezierCurveTo(p1017 * 256, p1017 * 183, p1017 * 241, p1017 * 186, p1017 * 233, p1017 * 192);
    f86(v1345, vVVVVUndefined1972, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 263, p1017 * 217);
    v1345.bezierCurveTo(p1017 * 251, p1017 * 211, p1017 * 242, p1017 * 213, p1017 * 236, p1017 * 218);
    f86(v1345, undefined, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 204, p1017 * 141);
    v1345.bezierCurveTo(p1017 * 191, p1017 * 131, p1017 * 187, p1017 * 133, p1017 * 176, p1017 * 141);
    f86(v1345, vVUndefined26, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 207, p1017 * 230);
    v1345.bezierCurveTo(p1017 * 193, p1017 * 222, p1017 * 185, p1017 * 224, p1017 * 177, p1017 * 231);
    f86(v1345, vVVVUndefined27, p1019[6], p1017 * 6);
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 210, p1017 * 258);
    v1345.bezierCurveTo(p1017 * 196, p1017 * 247, p1017 * 191, p1017 * 250, p1017 * 177, p1017 * 259);
    f86(v1345, vVVUndefined272, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 145, p1017 * 196);
    v1345.bezierCurveTo(p1017 * 130, p1017 * 186, p1017 * 124, p1017 * 187, p1017 * 114, p1017 * 195);
    f86(v1345, undefined, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 218, p1017 * 97);
    v1345.bezierCurveTo(p1017 * 219, p1017 * 163, p1017 * 201, p1017 * 176, p1017 * 191, p1017 * 175);
    v1345.bezierCurveTo(p1017 * 176, p1017 * 177, p1017 * 168, p1017 * 167, p1017 * 160, p1017 * 115);
    v1345.closePath();
    f86(v1345, undefined, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 224, p1017 * 181);
    v1345.bezierCurveTo(p1017 * 225, p1017 * 138, p1017 * 246, p1017 * 115, p1017 * 263, p1017 * 137);
    v1345.bezierCurveTo(p1017 * 282, p1017 * 174, p1017 * 279, p1017 * 217, p1017 * 265, p1017 * 243);
    v1345.bezierCurveTo(p1017 * 253, p1017 * 264, p1017 * 240, p1017 * 256, p1017 * 233, p1017 * 238);
    v1345.bezierCurveTo(p1017 * 221, p1017 * 212, p1017 * 225, p1017 * 198, p1017 * 224, p1017 * 184);
    v1345.closePath();
    f86(v1345, vVUndefined27, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 169, p1017 * 289);
    v1345.bezierCurveTo(p1017 * 161, p1017 * 234, p1017 * 168, p1017 * 197, p1017 * 187, p1017 * 195);
    v1345.bezierCurveTo(p1017 * 219, p1017 * 189, p1017 * 222, p1017 * 256, p1017 * 216, p1017 * 307);
    v1345.closePath();
    f86(v1345, undefined, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 143, p1017 * 146);
    v1345.bezierCurveTo(p1017 * 161, p1017 * 199, p1017 * 151, p1017 * 245, p1017 * 138, p1017 * 266);
    v1345.bezierCurveTo(p1017 * 120.5, p1017 * 239.5, p1017 * 120.5, p1017 * 239.5, p1017 * 103, p1017 * 213);
    v1345.closePath();
    f86(v1345, undefined, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 283, p1017 * 135);
    v1345.bezierCurveTo(p1017 * 277, p1017 * 176, p1017 * 298, p1017 * 194, p1017 * 315, p1017 * 205);
    v1345.bezierCurveTo(p1017 * 323.5, p1017 * 175, p1017 * 323.5, p1017 * 175, p1017 * 332, p1017 * 145);
    v1345.closePath();
    f86(v1345, vVVVUndefined27, p1019[6], p1017 * 6);
    v1345.beginPath();
    v1345.lineCap = "round";
    v1345.lineJoin = "round";
    v1345.moveTo(p1017 * 318, p1017 * 223);
    v1345.bezierCurveTo(p1017 * 290, p1017 * 195, p1017 * 271, p1017 * 256, p1017 * 283, p1017 * 281);
    v1345.bezierCurveTo(p1017 * 303.5, p1017 * 267, p1017 * 303.5, p1017 * 267, p1017 * 324, p1017 * 253);
    v1345.closePath();
    f86(v1345, undefined, p1019[6], p1017 * 6);
    f87(v1345, p1017 * 222, p1017 * 199, p1017 * 120.74767078498864);
    f86(v1345, vVVUndefined27, p1019[3], p1017 * 40);
    f87(v1345, p1017 * 220, p1017 * 200, p1017 * 95.44108130150245);
    f86(v1345, vVVVVVUndefined197, p1019[2], p1017 * 15);
    f87(v1345, p1017 * 220, p1017 * 201, p1017 * 85);
    f86(v1345, vVVUndefined27, p1019[4], p1017 * 10);
    v1345.globalAlpha = 0.5;
    f87(v1345, p1017 * 220, p1017 * 201, p1017 * 82);
    f86(v1345, p1019[9]);
    v1345.globalAlpha = p1018 ? 0.5 : 1;
    v1345.translate(p1017 * 5, p1017 * 5);
    f87(v1345, p1017 * 63, p1017 * 136, p1017 * 49.193495504995376);
    f86(v1345, p1019[0], p1019[0], p1017 * 4);
    v1345.globalAlpha = 1;
    v1345.translate(p1017 * -5, p1017 * -5);
    f87(v1345, p1017 * 63, p1017 * 136, p1017 * 49.193495504995376);
    f86(v1345, p1019[8], p1019[2], p1017 * 4);
    f87(v1345, p1017 * 63, p1017 * 137, p1017 * 25.632011235952593);
    f86(v1345, p1019[7], p1019[2], p1017 * 4);
    return v1344;
  }
  function f264(p1020, p1021, p1022) {
    var v1346 = document.createElement("canvas");
    var v1347 = v1346.getContext("2d");
    v1346.width = p1020 * 105;
    v1346.height = p1020 * 144;
    v1347.globalAlpha = p1021 ? 0.5 : 1;
    v1347.translate(p1020 * -5, p1020 * 0);
    v1347.save();
    v1347.translate(p1020 * 52.5, p1020 * 91.5);
    f89(v1347, p1020 * -4.5, p1020 * -39, p1020 * 9, p1020 * 78, p1020 * 5);
    v1347.restore();
    f86(v1347, p1022[0], p1022[0], p1020 * 3);
    v1347.save();
    v1347.translate(p1020 * 53, p1020 * 36);
    f89(v1347, p1020 * -29, p1020 * -17.5, p1020 * 58, p1020 * 35, p1020 * 5);
    v1347.restore();
    f86(v1347, p1022[0], p1022[0], p1020 * 4);
    v1347.save();
    v1347.translate(p1020 * 53.5, p1020 * 35.5);
    f89(v1347, p1020 * -26.5, p1020 * -15, p1020 * 53, p1020 * 30, p1020 * 5);
    v1347.restore();
    f86(v1347, p1022[0], p1022[0], p1020 * 4);
    v1347.translate(p1020 * 5, p1020 * 0);
    v1347.globalAlpha = 1;
    v1347.save();
    v1347.translate(p1020 * 52.5, p1020 * 91.5);
    f89(v1347, p1020 * -4.5, p1020 * -39, p1020 * 9, p1020 * 78, p1020 * 5);
    v1347.restore();
    f86(v1347, p1022[1], p1022[2], p1020 * 3);
    v1347.save();
    v1347.translate(p1020 * 53, p1020 * 36);
    f89(v1347, p1020 * -29, p1020 * -17.5, p1020 * 58, p1020 * 35, p1020 * 5);
    v1347.restore();
    f86(v1347, p1022[3], p1022[4], p1020 * 4);
    v1347.save();
    v1347.translate(p1020 * 53.5, p1020 * 35.5);
    f89(v1347, p1020 * -26.5, p1020 * -15, p1020 * 53, p1020 * 30, p1020 * 5);
    v1347.restore();
    f86(v1347, p1022[5], p1022[6], p1020 * 4);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p1020 * 49, p1020 * 60.5);
    v1347.bezierCurveTo(p1020 * 44, p1020 * 56.5, p1020 * 44, p1020 * 56.5, p1020 * 39, p1020 * 52.5);
    v1347.bezierCurveTo(p1020 * 39, p1020 * 46.5, p1020 * 39, p1020 * 46.5, p1020 * 39, p1020 * 40.5);
    v1347.bezierCurveTo(p1020 * 44, p1020 * 44, p1020 * 44, p1020 * 44, p1020 * 49, p1020 * 47.5);
    v1347.bezierCurveTo(p1020 * 49, p1020 * 54, p1020 * 49, p1020 * 54, p1020 * 49, p1020 * 60.5);
    v1347.closePath();
    f86(v1347, p1022[7], p1022[6], p1020 * 3);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p1020 * 66, p1020 * 40.5);
    v1347.bezierCurveTo(p1020 * 66, p1020 * 46.5, p1020 * 66, p1020 * 46.5, p1020 * 66, p1020 * 52.5);
    v1347.bezierCurveTo(p1020 * 60.5, p1020 * 56.5, p1020 * 60.5, p1020 * 56.5, p1020 * 55, p1020 * 60.5);
    v1347.bezierCurveTo(p1020 * 56, p1020 * 53, p1020 * 56, p1020 * 53, p1020 * 57, p1020 * 45.5);
    v1347.bezierCurveTo(p1020 * 61.5, p1020 * 43, p1020 * 61.5, p1020 * 43, p1020 * 66, p1020 * 40.5);
    v1347.closePath();
    f86(v1347, p1022[7], p1022[6], p1020 * 3);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p1020 * 52, p1020 * 33.5);
    v1347.bezierCurveTo(p1020 * 55.5, p1020 * 41, p1020 * 55.5, p1020 * 41, p1020 * 59, p1020 * 48.5);
    v1347.bezierCurveTo(p1020 * 56, p1020 * 58, p1020 * 56, p1020 * 58, p1020 * 53, p1020 * 67.5);
    v1347.bezierCurveTo(p1020 * 49, p1020 * 58, p1020 * 49, p1020 * 58, p1020 * 45, p1020 * 48.5);
    v1347.bezierCurveTo(p1020 * 48.5, p1020 * 41, p1020 * 48.5, p1020 * 41, p1020 * 52, p1020 * 33.5);
    v1347.closePath();
    f86(v1347, p1022[9], p1022[8], p1020 * 3);
    v1347.beginPath();
    v1347.lineCap = "round";
    v1347.lineJoin = "round";
    v1347.moveTo(p1020 * 52, p1020 * 47.5);
    v1347.bezierCurveTo(p1020 * 54.5, p1020 * 50.5, p1020 * 54.5, p1020 * 50.5, p1020 * 57, p1020 * 53.5);
    v1347.bezierCurveTo(p1020 * 55, p1020 * 60, p1020 * 55, p1020 * 60, p1020 * 53, p1020 * 66.5);
    v1347.bezierCurveTo(p1020 * 50.5, p1020 * 61, p1020 * 50.5, p1020 * 61, p1020 * 48, p1020 * 55.5);
    v1347.bezierCurveTo(p1020 * 50, p1020 * 52, p1020 * 50, p1020 * 52, p1020 * 52, p1020 * 48.5);
    v1347.closePath();
    f86(v1347, p1022[11], p1022[10], p1020 * 3);
    return v1346;
  }
  function f265(p1023, p1024, p1025) {
    var v1348 = document.createElement("canvas");
    var v1349 = v1348.getContext("2d");
    v1348.width = p1023 * 247;
    v1348.height = p1023 * 247;
    v1349.translate(0, p1023 * 10);
    v1349.globalAlpha = p1024 ? 0.5 : 1;
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 150, p1023 * 62);
    v1349.bezierCurveTo(p1023 * 151.5, p1023 * 71.5, p1023 * 149, p1023 * 70, p1023 * 153, p1023 * 81);
    v1349.bezierCurveTo(p1023 * 158, p1023 * 73.5, p1023 * 158, p1023 * 73.5, p1023 * 163, p1023 * 66);
    v1349.closePath();
    f86(v1349, p1025[0]);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 164, p1023 * 171);
    v1349.bezierCurveTo(p1023 * 149, p1023 * 159, p1023 * 156.5, p1023 * 165, p1023 * 149, p1023 * 159);
    v1349.bezierCurveTo(p1023 * 149, p1023 * 167, p1023 * 149, p1023 * 170, p1023 * 152, p1023 * 178);
    v1349.closePath();
    f86(v1349, p1025[0]);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 132, p1023 * 95);
    v1349.bezierCurveTo(p1023 * 154, p1023 * 102, p1023 * 154, p1023 * 126, p1023 * 137, p1023 * 139);
    v1349.bezierCurveTo(p1023 * 113, p1023 * 152, p1023 * 89, p1023 * 136, p1023 * 80, p1023 * 121);
    v1349.bezierCurveTo(p1023 * 57, p1023 * 89, p1023 * 69, p1023 * 63, p1023 * 79, p1023 * 52);
    v1349.bezierCurveTo(p1023 * 110, p1023 * 20, p1023 * 139, p1023 * 21, p1023 * 150, p1023 * 25);
    v1349.bezierCurveTo(p1023 * 197, p1023 * 36, p1023 * 221, p1023 * 67, p1023 * 226, p1023 * 90);
    v1349.bezierCurveTo(p1023 * 234, p1023 * 134, p1023 * 214, p1023 * 177, p1023 * 195, p1023 * 197);
    v1349.bezierCurveTo(p1023 * 144, p1023 * 242, p1023 * 79, p1023 * 216, p1023 * 58, p1023 * 206);
    v1349.bezierCurveTo(p1023 * 13, p1023 * 174, p1023 * 20, p1023 * 134, p1023 * 23, p1023 * 107);
    v1349.bezierCurveTo(p1023 * 26, p1023 * 78, p1023 * 33, p1023 * 60, p1023 * 38, p1023 * 43);
    v1349.bezierCurveTo(p1023 * 42, p1023 * 32, p1023 * 47, p1023 * 32, p1023 * 50, p1023 * 36);
    v1349.bezierCurveTo(p1023 * 54, p1023 * 37, p1023 * 50, p1023 * 52, p1023 * 44, p1023 * 87);
    v1349.bezierCurveTo(p1023 * 40, p1023 * 115, p1023 * 46, p1023 * 142, p1023 * 57, p1023 * 158);
    v1349.bezierCurveTo(p1023 * 76, p1023 * 189, p1023 * 129, p1023 * 182, p1023 * 152, p1023 * 173);
    v1349.bezierCurveTo(p1023 * 186, p1023 * 156, p1023 * 191, p1023 * 106, p1023 * 176, p1023 * 85);
    v1349.bezierCurveTo(p1023 * 159, p1023 * 61, p1023 * 132, p1023 * 62, p1023 * 122, p1023 * 66);
    v1349.bezierCurveTo(p1023 * 108, p1023 * 74, p1023 * 108, p1023 * 89, p1023 * 116, p1023 * 90);
    v1349.bezierCurveTo(p1023 * 123, p1023 * 92, p1023 * 130, p1023 * 93, p1023 * 131, p1023 * 94);
    v1349.closePath();
    f86(v1349, p1025[0]);
    v1349.translate(0, p1023 * -10);
    v1349.globalAlpha = 1;
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 150, p1023 * 62);
    v1349.bezierCurveTo(p1023 * 151.5, p1023 * 71.5, p1023 * 149, p1023 * 70, p1023 * 153, p1023 * 81);
    v1349.bezierCurveTo(p1023 * 158, p1023 * 73.5, p1023 * 158, p1023 * 73.5, p1023 * 163, p1023 * 66);
    v1349.closePath();
    f86(v1349, p1025[5]);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 164, p1023 * 171);
    v1349.bezierCurveTo(p1023 * 149, p1023 * 159, p1023 * 156.5, p1023 * 165, p1023 * 149, p1023 * 159);
    v1349.bezierCurveTo(p1023 * 149, p1023 * 167, p1023 * 149, p1023 * 170, p1023 * 152, p1023 * 178);
    v1349.closePath();
    f86(v1349, p1025[5]);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 132, p1023 * 95);
    v1349.bezierCurveTo(p1023 * 154, p1023 * 102, p1023 * 154, p1023 * 126, p1023 * 137, p1023 * 139);
    v1349.bezierCurveTo(p1023 * 113, p1023 * 152, p1023 * 89, p1023 * 136, p1023 * 80, p1023 * 121);
    v1349.bezierCurveTo(p1023 * 57, p1023 * 89, p1023 * 69, p1023 * 63, p1023 * 79, p1023 * 52);
    v1349.bezierCurveTo(p1023 * 110, p1023 * 20, p1023 * 139, p1023 * 21, p1023 * 150, p1023 * 25);
    v1349.bezierCurveTo(p1023 * 197, p1023 * 36, p1023 * 221, p1023 * 67, p1023 * 226, p1023 * 90);
    v1349.bezierCurveTo(p1023 * 234, p1023 * 134, p1023 * 214, p1023 * 177, p1023 * 195, p1023 * 197);
    v1349.bezierCurveTo(p1023 * 144, p1023 * 242, p1023 * 79, p1023 * 216, p1023 * 58, p1023 * 206);
    v1349.bezierCurveTo(p1023 * 13, p1023 * 174, p1023 * 20, p1023 * 134, p1023 * 23, p1023 * 107);
    v1349.bezierCurveTo(p1023 * 26, p1023 * 78, p1023 * 33, p1023 * 60, p1023 * 38, p1023 * 43);
    v1349.bezierCurveTo(p1023 * 42, p1023 * 32, p1023 * 47, p1023 * 32, p1023 * 50, p1023 * 36);
    v1349.bezierCurveTo(p1023 * 54, p1023 * 37, p1023 * 50, p1023 * 52, p1023 * 44, p1023 * 87);
    v1349.bezierCurveTo(p1023 * 40, p1023 * 115, p1023 * 46, p1023 * 142, p1023 * 57, p1023 * 158);
    v1349.bezierCurveTo(p1023 * 76, p1023 * 189, p1023 * 129, p1023 * 182, p1023 * 152, p1023 * 173);
    v1349.bezierCurveTo(p1023 * 186, p1023 * 156, p1023 * 191, p1023 * 106, p1023 * 176, p1023 * 85);
    v1349.bezierCurveTo(p1023 * 159, p1023 * 61, p1023 * 132, p1023 * 62, p1023 * 122, p1023 * 66);
    v1349.bezierCurveTo(p1023 * 108, p1023 * 74, p1023 * 108, p1023 * 89, p1023 * 116, p1023 * 90);
    v1349.bezierCurveTo(p1023 * 123, p1023 * 92, p1023 * 130, p1023 * 93, p1023 * 131, p1023 * 94);
    v1349.closePath();
    f86(v1349, p1025[1], p1025[2], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 137, p1023 * 137);
    v1349.bezierCurveTo(p1023 * 145, p1023 * 125, p1023 * 138, p1023 * 108, p1023 * 123, p1023 * 104);
    v1349.bezierCurveTo(p1023 * 81, p1023 * 101, p1023 * 88, p1023 * 77, p1023 * 98, p1023 * 65);
    v1349.bezierCurveTo(p1023 * 117, p1023 * 38, p1023 * 138, p1023 * 39, p1023 * 165, p1023 * 52);
    v1349.bezierCurveTo(p1023 * 197, p1023 * 72, p1023 * 207, p1023 * 111, p1023 * 197, p1023 * 140);
    v1349.bezierCurveTo(p1023 * 182, p1023 * 180, p1023 * 161, p1023 * 197, p1023 * 112, p1023 * 194);
    v1349.bezierCurveTo(p1023 * 58, p1023 * 194, p1023 * 37, p1023 * 170, p1023 * 34, p1023 * 142);
    v1349.bezierCurveTo(p1023 * 29, p1023 * 102, p1023 * 40, p1023 * 63, p1023 * 51, p1023 * 45);
    v1349.bezierCurveTo(p1023 * 43, p1023 * 78, p1023 * 41, p1023 * 103, p1023 * 43, p1023 * 122);
    v1349.bezierCurveTo(p1023 * 51, p1023 * 158, p1023 * 63, p1023 * 174, p1023 * 95, p1023 * 179);
    v1349.bezierCurveTo(p1023 * 129, p1023 * 186, p1023 * 169, p1023 * 172, p1023 * 177, p1023 * 144);
    v1349.bezierCurveTo(p1023 * 197, p1023 * 105, p1023 * 172, p1023 * 76, p1023 * 160, p1023 * 71);
    v1349.bezierCurveTo(p1023 * 125, p1023 * 52, p1023 * 111, p1023 * 73, p1023 * 111, p1023 * 81);
    v1349.bezierCurveTo(p1023 * 106, p1023 * 93, p1023 * 140, p1023 * 92, p1023 * 147, p1023 * 107);
    v1349.bezierCurveTo(p1023 * 153, p1023 * 128, p1023 * 140, p1023 * 135, p1023 * 137, p1023 * 139);
    v1349.closePath();
    f86(v1349, p1025[3]);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 132, p1023 * 95);
    v1349.bezierCurveTo(p1023 * 154, p1023 * 102, p1023 * 154, p1023 * 126, p1023 * 137, p1023 * 139);
    v1349.bezierCurveTo(p1023 * 113, p1023 * 152, p1023 * 89, p1023 * 136, p1023 * 80, p1023 * 121);
    v1349.bezierCurveTo(p1023 * 57, p1023 * 89, p1023 * 69, p1023 * 63, p1023 * 79, p1023 * 52);
    v1349.bezierCurveTo(p1023 * 110, p1023 * 20, p1023 * 139, p1023 * 21, p1023 * 150, p1023 * 25);
    v1349.bezierCurveTo(p1023 * 197, p1023 * 36, p1023 * 221, p1023 * 67, p1023 * 226, p1023 * 90);
    v1349.bezierCurveTo(p1023 * 234, p1023 * 134, p1023 * 214, p1023 * 177, p1023 * 195, p1023 * 197);
    v1349.bezierCurveTo(p1023 * 144, p1023 * 242, p1023 * 79, p1023 * 216, p1023 * 58, p1023 * 206);
    v1349.bezierCurveTo(p1023 * 13, p1023 * 174, p1023 * 20, p1023 * 134, p1023 * 23, p1023 * 107);
    v1349.bezierCurveTo(p1023 * 26, p1023 * 78, p1023 * 33, p1023 * 60, p1023 * 38, p1023 * 43);
    v1349.bezierCurveTo(p1023 * 42, p1023 * 32, p1023 * 47, p1023 * 32, p1023 * 50, p1023 * 36);
    v1349.bezierCurveTo(p1023 * 54, p1023 * 37, p1023 * 50, p1023 * 52, p1023 * 44, p1023 * 87);
    v1349.bezierCurveTo(p1023 * 40, p1023 * 115, p1023 * 46, p1023 * 142, p1023 * 57, p1023 * 158);
    v1349.bezierCurveTo(p1023 * 76, p1023 * 189, p1023 * 129, p1023 * 182, p1023 * 152, p1023 * 173);
    v1349.bezierCurveTo(p1023 * 186, p1023 * 156, p1023 * 191, p1023 * 106, p1023 * 176, p1023 * 85);
    v1349.bezierCurveTo(p1023 * 159, p1023 * 61, p1023 * 132, p1023 * 62, p1023 * 122, p1023 * 66);
    v1349.bezierCurveTo(p1023 * 108, p1023 * 74, p1023 * 108, p1023 * 89, p1023 * 116, p1023 * 90);
    v1349.bezierCurveTo(p1023 * 123, p1023 * 92, p1023 * 130, p1023 * 93, p1023 * 131, p1023 * 94);
    v1349.closePath();
    f86(v1349, undefined, p1025[2], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 82, p1023 * 63);
    v1349.bezierCurveTo(p1023 * 91, p1023 * 64, p1023 * 96, p1023 * 62, p1023 * 98, p1023 * 53);
    v1349.bezierCurveTo(p1023 * 91, p1023 * 45, p1023 * 85, p1023 * 42, p1023 * 78, p1023 * 41);
    v1349.bezierCurveTo(p1023 * 81, p1023 * 51, p1023 * 82, p1023 * 57, p1023 * 82, p1023 * 63);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 148, p1023 * 40);
    v1349.bezierCurveTo(p1023 * 140, p1023 * 52, p1023 * 131, p1023 * 51, p1023 * 123, p1023 * 43);
    v1349.bezierCurveTo(p1023 * 123, p1023 * 25, p1023 * 129, p1023 * 17, p1023 * 134, p1023 * 12);
    v1349.bezierCurveTo(p1023 * 138, p1023 * 35, p1023 * 142, p1023 * 31, p1023 * 148, p1023 * 40);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 189, p1023 * 43);
    v1349.bezierCurveTo(p1023 * 191, p1023 * 54, p1023 * 196, p1023 * 58, p1023 * 205, p1023 * 59);
    v1349.bezierCurveTo(p1023 * 211, p1023 * 42, p1023 * 214, p1023 * 37, p1023 * 216, p1023 * 31);
    v1349.bezierCurveTo(p1023 * 202, p1023 * 34, p1023 * 195, p1023 * 39, p1023 * 190, p1023 * 43);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 216, p1023 * 98);
    v1349.bezierCurveTo(p1023 * 219, p1023 * 105, p1023 * 225, p1023 * 107, p1023 * 230, p1023 * 109);
    v1349.bezierCurveTo(p1023 * 227, p1023 * 113, p1023 * 221, p1023 * 115, p1023 * 215, p1023 * 115);
    v1349.bezierCurveTo(p1023 * 208, p1023 * 109, p1023 * 211, p1023 * 101, p1023 * 216, p1023 * 98);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 180, p1023 * 85);
    v1349.bezierCurveTo(p1023 * 193, p1023 * 86, p1023 * 196, p1023 * 98, p1023 * 191, p1023 * 108);
    v1349.bezierCurveTo(p1023 * 179, p1023 * 112, p1023 * 167, p1023 * 113, p1023 * 155, p1023 * 111);
    v1349.bezierCurveTo(p1023 * 169, p1023 * 100, p1023 * 176, p1023 * 96, p1023 * 180, p1023 * 85);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 96, p1023 * 114);
    v1349.bezierCurveTo(p1023 * 102, p1023 * 109, p1023 * 112, p1023 * 110, p1023 * 114, p1023 * 118);
    v1349.bezierCurveTo(p1023 * 111, p1023 * 134, p1023 * 102, p1023 * 143, p1023 * 95, p1023 * 147);
    v1349.bezierCurveTo(p1023 * 98, p1023 * 123, p1023 * 97, p1023 * 119, p1023 * 96, p1023 * 115);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 79, p1023 * 92);
    v1349.bezierCurveTo(p1023 * 86, p1023 * 95, p1023 * 89, p1023 * 102, p1023 * 83, p1023 * 111);
    v1349.bezierCurveTo(p1023 * 70, p1023 * 110, p1023 * 61, p1023 * 107, p1023 * 54, p1023 * 100);
    v1349.bezierCurveTo(p1023 * 70, p1023 * 97, p1023 * 70, p1023 * 95, p1023 * 78, p1023 * 92);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 39, p1023 * 130);
    v1349.bezierCurveTo(p1023 * 37, p1023 * 141, p1023 * 41, p1023 * 143, p1023 * 48, p1023 * 144);
    v1349.bezierCurveTo(p1023 * 54, p1023 * 134, p1023 * 55, p1023 * 131, p1023 * 56, p1023 * 123);
    v1349.bezierCurveTo(p1023 * 47, p1023 * 129, p1023 * 43, p1023 * 129, p1023 * 39, p1023 * 129);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 113, p1023 * 189);
    v1349.bezierCurveTo(p1023 * 119, p1023 * 201, p1023 * 127, p1023 * 198, p1023 * 134, p1023 * 192);
    v1349.bezierCurveTo(p1023 * 128, p1023 * 175, p1023 * 128, p1023 * 173, p1023 * 128, p1023 * 165);
    v1349.bezierCurveTo(p1023 * 117, p1023 * 176, p1023 * 116, p1023 * 182, p1023 * 113, p1023 * 187);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 74, p1023 * 154);
    v1349.bezierCurveTo(p1023 * 76, p1023 * 163, p1023 * 76, p1023 * 170, p1023 * 75, p1023 * 177);
    v1349.bezierCurveTo(p1023 * 68, p1023 * 179, p1023 * 66, p1023 * 176, p1023 * 63, p1023 * 171);
    v1349.bezierCurveTo(p1023 * 69, p1023 * 164, p1023 * 72, p1023 * 159, p1023 * 74, p1023 * 154);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 206, p1023 * 152);
    v1349.bezierCurveTo(p1023 * 198, p1023 * 158, p1023 * 198, p1023 * 166, p1023 * 201, p1023 * 171);
    v1349.bezierCurveTo(p1023 * 209, p1023 * 170, p1023 * 221, p1023 * 170, p1023 * 226, p1023 * 172);
    v1349.bezierCurveTo(p1023 * 219, p1023 * 159, p1023 * 210, p1023 * 155, p1023 * 207, p1023 * 153);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 181, p1023 * 184);
    v1349.bezierCurveTo(p1023 * 170, p1023 * 184, p1023 * 167, p1023 * 187, p1023 * 163, p1023 * 195);
    v1349.bezierCurveTo(p1023 * 171, p1023 * 207, p1023 * 183, p1023 * 214, p1023 * 191, p1023 * 217);
    v1349.bezierCurveTo(p1023 * 183, p1023 * 204, p1023 * 184, p1023 * 196, p1023 * 181, p1023 * 184);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 66, p1023 * 199);
    v1349.bezierCurveTo(p1023 * 73, p1023 * 197, p1023 * 78, p1023 * 199, p1023 * 79, p1023 * 206);
    v1349.bezierCurveTo(p1023 * 71, p1023 * 216, p1023 * 67, p1023 * 221, p1023 * 57, p1023 * 223);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 182, p1023 * 143);
    v1349.bezierCurveTo(p1023 * 183, p1023 * 146, p1023 * 183, p1023 * 149, p1023 * 179, p1023 * 152);
    v1349.bezierCurveTo(p1023 * 174, p1023 * 146, p1023 * 174, p1023 * 146, p1023 * 169, p1023 * 140);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 32, p1023 * 159);
    v1349.bezierCurveTo(p1023 * 45, p1023 * 160, p1023 * 48, p1023 * 164, p1023 * 45, p1023 * 175);
    v1349.bezierCurveTo(p1023 * 28, p1023 * 183, p1023 * 25, p1023 * 184, p1023 * 19, p1023 * 184);
    v1349.bezierCurveTo(p1023 * 30, p1023 * 170, p1023 * 29, p1023 * 164, p1023 * 31, p1023 * 160);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 110, p1023 * 214);
    v1349.bezierCurveTo(p1023 * 106, p1023 * 212, p1023 * 104, p1023 * 213, p1023 * 102, p1023 * 218);
    v1349.bezierCurveTo(p1023 * 104, p1023 * 220, p1023 * 107, p1023 * 222, p1023 * 110, p1023 * 224);
    v1349.bezierCurveTo(p1023 * 110.5, p1023 * 219, p1023 * 110.5, p1023 * 219, p1023 * 111, p1023 * 214);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 40, p1023 * 52);
    v1349.bezierCurveTo(p1023 * 41, p1023 * 57, p1023 * 40, p1023 * 61, p1023 * 34, p1023 * 60);
    v1349.bezierCurveTo(p1023 * 31.5, p1023 * 55, p1023 * 31.5, p1023 * 55, p1023 * 29, p1023 * 50);
    v1349.bezierCurveTo(p1023 * 34, p1023 * 50.5, p1023 * 34, p1023 * 50.5, p1023 * 39, p1023 * 51);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    v1349.beginPath();
    v1349.lineCap = "round";
    v1349.lineJoin = "round";
    v1349.moveTo(p1023 * 31, p1023 * 81);
    v1349.bezierCurveTo(p1023 * 37, p1023 * 84, p1023 * 38, p1023 * 90, p1023 * 34, p1023 * 99);
    v1349.bezierCurveTo(p1023 * 23, p1023 * 97, p1023 * 19, p1023 * 96, p1023 * 16, p1023 * 93);
    v1349.bezierCurveTo(p1023 * 24, p1023 * 88, p1023 * 28, p1023 * 85, p1023 * 30, p1023 * 81);
    v1349.closePath();
    f86(v1349, p1025[4], p1025[5], p1023 * 5);
    return v1348;
  }
  function f266(p1026, p1027, p1028) {
    var v1350 = document.createElement("canvas");
    var v1351 = v1350.getContext("2d");
    v1350.width = p1026 * 218;
    v1350.height = p1026 * 185;
    v1351.beginPath();
    v1351.lineCap = "round";
    v1351.lineJoin = "round";
    v1351.moveTo(p1026 * 64, p1026 * 53.135406494140625);
    v1351.bezierCurveTo(p1026 * 92, p1026 * 17.135406494140625, p1026 * 116, p1026 * 11.135406494140625, p1026 * 158, p1026 * 53.135406494140625);
    v1351.bezierCurveTo(p1026 * 178, p1026 * 74.13540649414062, p1026 * 181, p1026 * 81.13540649414062, p1026 * 196, p1026 * 101.13540649414062);
    v1351.bezierCurveTo(p1026 * 214, p1026 * 127.13540649414062, p1026 * 192, p1026 * 138.13540649414062, p1026 * 173, p1026 * 149.13540649414062);
    v1351.bezierCurveTo(p1026 * 137, p1026 * 166.13540649414062, p1026 * 74, p1026 * 170.13540649414062, p1026 * 36, p1026 * 141.13540649414062);
    v1351.bezierCurveTo(p1026 * 13, p1026 * 127.13540649414062, p1026 * 20, p1026 * 119.13540649414062, p1026 * 30, p1026 * 103.13540649414062);
    v1351.bezierCurveTo(p1026 * 48, p1026 * 71.13540649414062, p1026 * 54, p1026 * 67.13540649414062, p1026 * 63, p1026 * 54.135406494140625);
    v1351.closePath();
    f86(v1351, p1028[0], p1028[1], p1026 * 10);
    v1351.beginPath();
    v1351.lineCap = "round";
    v1351.lineJoin = "round";
    v1351.moveTo(p1026 * 107, p1026 * 25.135406494140625);
    v1351.bezierCurveTo(p1026 * 62, p1026 * 90.13540649414062, p1026 * 54, p1026 * 129.13540649414062, p1026 * 53, p1026 * 151.13540649414062);
    v1351.bezierCurveTo(p1026 * 39.5, p1026 * 142.13540649414062, p1026 * 39.5, p1026 * 142.13540649414062, p1026 * 26, p1026 * 133.13540649414062);
    v1351.bezierCurveTo(p1026 * 23.5, p1026 * 128.63540649414062, p1026 * 23.5, p1026 * 128.63540649414062, p1026 * 21, p1026 * 124.13540649414062);
    v1351.bezierCurveTo(p1026 * 22, p1026 * 113.13540649414062, p1026 * 31, p1026 * 99.13540649414062, p1026 * 40, p1026 * 88.13540649414062);
    v1351.bezierCurveTo(p1026 * 54.5, p1026 * 67.13540649414062, p1026 * 54.5, p1026 * 67.13540649414062, p1026 * 69, p1026 * 46.135406494140625);
    v1351.bezierCurveTo(p1026 * 80.5, p1026 * 36.635406494140625, p1026 * 80.5, p1026 * 36.635406494140625, p1026 * 92, p1026 * 27.135406494140625);
    v1351.closePath();
    f86(v1351, p1028[1]);
    return v1350;
  }
  function f267(p1029, p1030, p1031) {
    var v1352 = document.createElement("canvas");
    var v1353 = v1352.getContext("2d");
    v1352.width = p1029 * 80;
    v1352.height = p1029 * 160;
    v1353.globalAlpha = p1030 ? 0.5 : 1;
    v1353.translate(p1029 * 5, p1029 * 5);
    v1353.save();
    f89(v1353, p1029 * 33, p1029 * 53, p1029 * 10, p1029 * 98, p1029 * 10);
    f86(v1353, p1031[0]);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.translate(p1029 * -150, p1029 * -100);
    v1353.moveTo(p1029 * 167.5, p1029 * 171.0625);
    v1353.bezierCurveTo(p1029 * 188, p1029 * 171.0625, p1029 * 188, p1029 * 171.0625, p1029 * 208.5, p1029 * 171.0625);
    v1353.bezierCurveTo(p1029 * 208.5, p1029 * 156.0625, p1029 * 208.5, p1029 * 156.0625, p1029 * 208.5, p1029 * 141.0625);
    v1353.bezierCurveTo(p1029 * 203.5, p1029 * 113.0625, p1029 * 179.5, p1029 * 96.0625, p1029 * 167.5, p1029 * 141.0625);
    v1353.closePath();
    f86(v1353, p1031[0]);
    v1353.restore();
    v1353.globalAlpha = 1;
    v1353.translate(p1029 * -5, p1029 * -5);
    v1353.save();
    f89(v1353, p1029 * 33, p1029 * 53, p1029 * 10, p1029 * 98, p1029 * 10);
    f86(v1353, p1031[1], p1031[2], p1029 * 4);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.translate(p1029 * -150, p1029 * -100);
    v1353.moveTo(p1029 * 167.5, p1029 * 171.0625);
    v1353.bezierCurveTo(p1029 * 188, p1029 * 171.0625, p1029 * 188, p1029 * 171.0625, p1029 * 208.5, p1029 * 171.0625);
    v1353.bezierCurveTo(p1029 * 208.5, p1029 * 156.0625, p1029 * 208.5, p1029 * 156.0625, p1029 * 208.5, p1029 * 141.0625);
    v1353.bezierCurveTo(p1029 * 203.5, p1029 * 113.0625, p1029 * 179.5, p1029 * 96.0625, p1029 * 167.5, p1029 * 141.0625);
    v1353.closePath();
    f86(v1353, p1031[3], p1031[4], p1029 * 4);
    v1353.beginPath();
    v1353.lineCap = "round";
    v1353.lineJoin = "round";
    v1353.translate(p1029 * 0, p1029 * 1);
    v1353.moveTo(p1029 * 180.5, p1029 * 169.0625);
    v1353.bezierCurveTo(p1029 * 180.5, p1029 * 157.5625, p1029 * 180.5, p1029 * 157.5625, p1029 * 180.5, p1029 * 146.0625);
    v1353.bezierCurveTo(p1029 * 181.5, p1029 * 134.0625, p1029 * 193.5, p1029 * 129.0625, p1029 * 196.5, p1029 * 146.0625);
    v1353.bezierCurveTo(p1029 * 196.5, p1029 * 157.5625, p1029 * 196.5, p1029 * 157.5625, p1029 * 196.5, p1029 * 169.0625);
    v1353.closePath();
    f86(v1353, p1031[5]);
    v1353.restore();
    return v1352;
  }
  function f268(p1032, p1033, p1034) {
    var v1354 = document.createElement("canvas");
    var v1355 = v1354.getContext("2d");
    v1354.width = p1032 * 400;
    v1354.height = p1032 * 400;
    v1355.translate(0, p1032 * 15);
    v1355.globalAlpha = p1033 ? 0.5 : 1;
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 102, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 108, p1032 * 216.5, p1032 * 108, p1032 * 216.5, p1032 * 114, p1032 * 279);
    v1355.bezierCurveTo(p1032 * 124, p1032 * 300, p1032 * 237, p1032 * 299, p1032 * 251, p1032 * 279);
    v1355.bezierCurveTo(p1032 * 257, p1032 * 217, p1032 * 257, p1032 * 217, p1032 * 263, p1032 * 155);
    v1355.bezierCurveTo(p1032 * 248, p1032 * 194, p1032 * 91, p1032 * 180, p1032 * 103, p1032 * 156);
    v1355.closePath();
    f86(v1355, p1034[0]);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 102, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 106, p1032 * 53, p1032 * 255, p1032 * 53, p1032 * 263, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 248, p1032 * 38, p1032 * 99, p1032 * 69, p1032 * 103, p1032 * 154);
    v1355.closePath();
    f86(v1355, undefined, p1034[0], p1032 * 11);
    v1355.translate(0, p1032 * -5);
    v1355.globalAlpha = 1;
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 103, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 98, p1032 * 119, p1032 * 264, p1032 * 119, p1032 * 264, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 271, p1032 * 189, p1032 * 94, p1032 * 188, p1032 * 103, p1032 * 154);
    v1355.closePath();
    f86(v1355, p1034[3], p1034[2], p1032 * 12);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 102, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 108, p1032 * 216.5, p1032 * 108, p1032 * 216.5, p1032 * 114, p1032 * 279);
    v1355.bezierCurveTo(p1032 * 124, p1032 * 300, p1032 * 237, p1032 * 299, p1032 * 251, p1032 * 279);
    v1355.bezierCurveTo(p1032 * 257, p1032 * 217, p1032 * 257, p1032 * 217, p1032 * 263, p1032 * 155);
    v1355.bezierCurveTo(p1032 * 248, p1032 * 194, p1032 * 91, p1032 * 180, p1032 * 103, p1032 * 156);
    v1355.closePath();
    f86(v1355, p1034[1], p1034[2], p1032 * 12);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 182, p1032 * 185);
    v1355.bezierCurveTo(p1032 * 182.5, p1032 * 237.5, p1032 * 182.5, p1032 * 237.5, p1032 * 183, p1032 * 290);
    v1355.closePath();
    f86(v1355, undefined, p1034[2], p1032 * 12);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 222, p1032 * 287);
    v1355.bezierCurveTo(p1032 * 226, p1032 * 233.5, p1032 * 226, p1032 * 233.5, p1032 * 230, p1032 * 180);
    v1355.closePath();
    f86(v1355, undefined, p1034[2], p1032 * 12);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 145, p1032 * 290);
    v1355.bezierCurveTo(p1032 * 140.5, p1032 * 237, p1032 * 140.5, p1032 * 237, p1032 * 136, p1032 * 184);
    v1355.closePath();
    f86(v1355, p1034[1], p1034[2], p1032 * 11);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 105, p1032 * 184);
    v1355.bezierCurveTo(p1032 * 148, p1032 * 205, p1032 * 231, p1032 * 202, p1032 * 260, p1032 * 182);
    v1355.bezierCurveTo(p1032 * 259, p1032 * 195.5, p1032 * 259, p1032 * 195.5, p1032 * 258, p1032 * 209);
    v1355.bezierCurveTo(p1032 * 217, p1032 * 218, p1032 * 163, p1032 * 225, p1032 * 108, p1032 * 207);
    v1355.closePath();
    f86(v1355, p1034[4], p1034[2], p1032 * 11);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 251, p1032 * 276);
    v1355.bezierCurveTo(p1032 * 251.5, p1032 * 267.5, p1032 * 251.5, p1032 * 267.5, p1032 * 252, p1032 * 259);
    v1355.bezierCurveTo(p1032 * 212, p1032 * 272, p1032 * 156, p1032 * 275, p1032 * 112, p1032 * 260);
    v1355.bezierCurveTo(p1032 * 112.5, p1032 * 269, p1032 * 112.5, p1032 * 269, p1032 * 113, p1032 * 278);
    v1355.bezierCurveTo(p1032 * 155, p1032 * 306, p1032 * 253, p1032 * 286, p1032 * 250, p1032 * 276);
    v1355.closePath();
    f86(v1355, p1034[4], p1034[2], p1032 * 11);
    v1355.beginPath();
    v1355.lineCap = "round";
    v1355.lineJoin = "round";
    v1355.moveTo(p1032 * 102, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 106, p1032 * 53, p1032 * 255, p1032 * 53, p1032 * 263, p1032 * 154);
    v1355.bezierCurveTo(p1032 * 248, p1032 * 38, p1032 * 99, p1032 * 69, p1032 * 103, p1032 * 154);
    v1355.closePath();
    f86(v1355, undefined, p1034[2], p1032 * 11);
    return v1354;
  }
  function f269(p1035, p1036, p1037, p1038) {
    var v1356 = document.createElement("canvas");
    var v1357 = v1356.getContext("2d");
    v1356.width = p1035 * 198;
    v1356.height = p1035 * 147;
    v1357.globalAlpha = p1036 ? 0.5 : 1;
    v1357.translate(0, p1035 * 6);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 44, p1035 * 76);
    v1357.bezierCurveTo(p1035 * 50, p1035 * 82, p1035 * 50, p1035 * 82, p1035 * 56, p1035 * 88);
    v1357.bezierCurveTo(p1035 * 59, p1035 * 82, p1035 * 59, p1035 * 82, p1035 * 62, p1035 * 76);
    v1357.bezierCurveTo(p1035 * 59, p1035 * 71, p1035 * 59, p1035 * 71, p1035 * 56, p1035 * 66);
    v1357.bezierCurveTo(p1035 * 59, p1035 * 69, p1035 * 59, p1035 * 69, p1035 * 62, p1035 * 72);
    v1357.bezierCurveTo(p1035 * 80, p1035 * 48, p1035 * 102, p1035 * 50, p1035 * 120, p1035 * 62);
    v1357.bezierCurveTo(p1035 * 127, p1035 * 58, p1035 * 127, p1035 * 58, p1035 * 134, p1035 * 54);
    v1357.bezierCurveTo(p1035 * 129, p1035 * 60, p1035 * 129, p1035 * 60, p1035 * 124, p1035 * 66);
    v1357.bezierCurveTo(p1035 * 129, p1035 * 73, p1035 * 129, p1035 * 73, p1035 * 134, p1035 * 80);
    v1357.bezierCurveTo(p1035 * 140, p1035 * 74, p1035 * 140, p1035 * 74, p1035 * 146, p1035 * 68);
    v1357.bezierCurveTo(p1035 * 142, p1035 * 76, p1035 * 142, p1035 * 76, p1035 * 138, p1035 * 84);
    v1357.bezierCurveTo(p1035 * 144, p1035 * 90, p1035 * 142, p1035 * 90, p1035 * 144, p1035 * 90);
    v1357.bezierCurveTo(p1035 * 136, p1035 * 97, p1035 * 136, p1035 * 97, p1035 * 128, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 154, p1035 * 110, p1035 * 164, p1035 * 90, p1035 * 160, p1035 * 80);
    v1357.bezierCurveTo(p1035 * 138, p1035 * 22, p1035 * 148, p1035 * 51, p1035 * 136, p1035 * 22);
    v1357.bezierCurveTo(p1035 * 97, p1035 * 24, p1035 * 97, p1035 * 24, p1035 * 58, p1035 * 26);
    v1357.bezierCurveTo(p1035 * 47, p1035 * 54, p1035 * 36, p1035 * 80, p1035 * 36, p1035 * 82);
    v1357.bezierCurveTo(p1035 * 40, p1035 * 108, p1035 * 54, p1035 * 104, p1035 * 62, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 46, p1035 * 92, p1035 * 54, p1035 * 97, p1035 * 46, p1035 * 90);
    v1357.closePath();
    f86(v1357, p1037[0]);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 36, p1035 * 80);
    v1357.bezierCurveTo(p1035 * 30, p1035 * 84, p1035 * 28, p1035 * 92, p1035 * 34, p1035 * 100);
    v1357.bezierCurveTo(p1035 * 41.5, p1035 * 102, p1035 * 41.5, p1035 * 102, p1035 * 49, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 43, p1035 * 105.5, p1035 * 43, p1035 * 105.5, p1035 * 37, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 46, p1035 * 111, p1035 * 60, p1035 * 114, p1035 * 76, p1035 * 114);
    v1357.bezierCurveTo(p1035 * 78, p1035 * 110.5, p1035 * 78, p1035 * 110.5, p1035 * 80, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 81, p1035 * 110.5, p1035 * 81, p1035 * 110.5, p1035 * 82, p1035 * 114);
    v1357.bezierCurveTo(p1035 * 94.5, p1035 * 113.5, p1035 * 94.5, p1035 * 113.5, p1035 * 107, p1035 * 113);
    v1357.bezierCurveTo(p1035 * 108.5, p1035 * 110, p1035 * 108.5, p1035 * 110, p1035 * 110, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 111.5, p1035 * 110.5, p1035 * 111.5, p1035 * 110.5, p1035 * 113, p1035 * 114);
    v1357.bezierCurveTo(p1035 * 131, p1035 * 112.5, p1035 * 131, p1035 * 112.5, p1035 * 149, p1035 * 111);
    v1357.bezierCurveTo(p1035 * 148.5, p1035 * 107.5, p1035 * 148.5, p1035 * 107.5, p1035 * 148, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 150.5, p1035 * 107, p1035 * 150.5, p1035 * 107, p1035 * 153, p1035 * 110);
    v1357.bezierCurveTo(p1035 * 155.5, p1035 * 108.5, p1035 * 155.5, p1035 * 108.5, p1035 * 158, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 156.5, p1035 * 104, p1035 * 156.5, p1035 * 104, p1035 * 155, p1035 * 101);
    v1357.bezierCurveTo(p1035 * 158.5, p1035 * 102.5, p1035 * 158.5, p1035 * 102.5, p1035 * 162, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 168, p1035 * 100, p1035 * 170, p1035 * 92, p1035 * 169, p1035 * 85);
    v1357.bezierCurveTo(p1035 * 166, p1035 * 86, p1035 * 166, p1035 * 86, p1035 * 163, p1035 * 87);
    v1357.bezierCurveTo(p1035 * 165.5, p1035 * 83, p1035 * 165.5, p1035 * 83, p1035 * 168, p1035 * 79);
    v1357.bezierCurveTo(p1035 * 165.5, p1035 * 76.5, p1035 * 165.5, p1035 * 76.5, p1035 * 163, p1035 * 74);
    v1357.bezierCurveTo(p1035 * 155, p1035 * 82.5, p1035 * 155, p1035 * 82.5, p1035 * 147, p1035 * 91);
    v1357.bezierCurveTo(p1035 * 139, p1035 * 95.5, p1035 * 139, p1035 * 95.5, p1035 * 131, p1035 * 100);
    v1357.bezierCurveTo(p1035 * 97.5, p1035 * 100.5, p1035 * 97.5, p1035 * 100.5, p1035 * 64, p1035 * 101);
    v1357.bezierCurveTo(p1035 * 49, p1035 * 102, p1035 * 43, p1035 * 90, p1035 * 36, p1035 * 80);
    v1357.closePath();
    f86(v1357, p1037[0]);
    v1357.globalAlpha = 1;
    v1357.translate(0, p1035 * -6);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 36, p1035 * 80);
    v1357.bezierCurveTo(p1035 * 30, p1035 * 84, p1035 * 28, p1035 * 92, p1035 * 34, p1035 * 100);
    v1357.bezierCurveTo(p1035 * 41.5, p1035 * 102, p1035 * 41.5, p1035 * 102, p1035 * 49, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 43, p1035 * 105.5, p1035 * 43, p1035 * 105.5, p1035 * 37, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 46, p1035 * 111, p1035 * 60, p1035 * 114, p1035 * 76, p1035 * 114);
    v1357.bezierCurveTo(p1035 * 78, p1035 * 110.5, p1035 * 78, p1035 * 110.5, p1035 * 80, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 81, p1035 * 110.5, p1035 * 81, p1035 * 110.5, p1035 * 82, p1035 * 114);
    v1357.bezierCurveTo(p1035 * 94.5, p1035 * 113.5, p1035 * 94.5, p1035 * 113.5, p1035 * 107, p1035 * 113);
    v1357.bezierCurveTo(p1035 * 108.5, p1035 * 110, p1035 * 108.5, p1035 * 110, p1035 * 110, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 111.5, p1035 * 110.5, p1035 * 111.5, p1035 * 110.5, p1035 * 113, p1035 * 114);
    v1357.bezierCurveTo(p1035 * 131, p1035 * 112.5, p1035 * 131, p1035 * 112.5, p1035 * 149, p1035 * 111);
    v1357.bezierCurveTo(p1035 * 148.5, p1035 * 107.5, p1035 * 148.5, p1035 * 107.5, p1035 * 148, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 150.5, p1035 * 107, p1035 * 150.5, p1035 * 107, p1035 * 153, p1035 * 110);
    v1357.bezierCurveTo(p1035 * 155.5, p1035 * 108.5, p1035 * 155.5, p1035 * 108.5, p1035 * 158, p1035 * 107);
    v1357.bezierCurveTo(p1035 * 156.5, p1035 * 104, p1035 * 156.5, p1035 * 104, p1035 * 155, p1035 * 101);
    v1357.bezierCurveTo(p1035 * 158.5, p1035 * 102.5, p1035 * 158.5, p1035 * 102.5, p1035 * 162, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 168, p1035 * 100, p1035 * 170, p1035 * 92, p1035 * 169, p1035 * 85);
    v1357.bezierCurveTo(p1035 * 166, p1035 * 86, p1035 * 166, p1035 * 86, p1035 * 163, p1035 * 87);
    v1357.bezierCurveTo(p1035 * 165.5, p1035 * 83, p1035 * 165.5, p1035 * 83, p1035 * 168, p1035 * 79);
    v1357.bezierCurveTo(p1035 * 165.5, p1035 * 76.5, p1035 * 165.5, p1035 * 76.5, p1035 * 163, p1035 * 74);
    v1357.bezierCurveTo(p1035 * 155, p1035 * 82.5, p1035 * 155, p1035 * 82.5, p1035 * 147, p1035 * 91);
    v1357.bezierCurveTo(p1035 * 139, p1035 * 95.5, p1035 * 139, p1035 * 95.5, p1035 * 131, p1035 * 100);
    v1357.bezierCurveTo(p1035 * 97.5, p1035 * 100.5, p1035 * 97.5, p1035 * 100.5, p1035 * 64, p1035 * 101);
    v1357.bezierCurveTo(p1035 * 49, p1035 * 102, p1035 * 43, p1035 * 90, p1035 * 36, p1035 * 80);
    v1357.closePath();
    f86(v1357, p1037[1], p1037[2], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 49, p1035 * 98);
    v1357.bezierCurveTo(p1035 * 96.5, p1035 * 98, p1035 * 96.5, p1035 * 98, p1035 * 144, p1035 * 98);
    v1357.bezierCurveTo(p1035 * 136.5, p1035 * 102, p1035 * 136.5, p1035 * 102, p1035 * 129, p1035 * 106);
    v1357.bezierCurveTo(p1035 * 103, p1035 * 105.5, p1035 * 103, p1035 * 105.5, p1035 * 77, p1035 * 105);
    v1357.bezierCurveTo(p1035 * 65, p1035 * 105, p1035 * 65, p1035 * 105, p1035 * 53, p1035 * 105);
    v1357.closePath();
    f86(v1357, p1037[1]);
    v1357.globalAlpha = 0.5;
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 54, p1035 * 98);
    v1357.bezierCurveTo(p1035 * 97, p1035 * 98, p1035 * 97, p1035 * 98, p1035 * 140, p1035 * 98);
    v1357.bezierCurveTo(p1035 * 134, p1035 * 101, p1035 * 134, p1035 * 101, p1035 * 128, p1035 * 104);
    v1357.bezierCurveTo(p1035 * 92, p1035 * 104, p1035 * 92, p1035 * 104, p1035 * 56, p1035 * 104);
    v1357.closePath();
    f86(v1357, p1037[0]);
    v1357.globalAlpha = 1;
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 118, p1035 * 47);
    v1357.bezierCurveTo(p1035 * 124.5, p1035 * 43.5, p1035 * 124.5, p1035 * 43.5, p1035 * 131, p1035 * 40);
    v1357.bezierCurveTo(p1035 * 128, p1035 * 46, p1035 * 128, p1035 * 46, p1035 * 125, p1035 * 52);
    v1357.bezierCurveTo(p1035 * 131, p1035 * 57, p1035 * 135, p1035 * 64, p1035 * 139, p1035 * 73);
    v1357.bezierCurveTo(p1035 * 142.5, p1035 * 69.5, p1035 * 142.5, p1035 * 69.5, p1035 * 146, p1035 * 66);
    v1357.bezierCurveTo(p1035 * 143.5, p1035 * 72.5, p1035 * 143.5, p1035 * 72.5, p1035 * 141, p1035 * 79);
    v1357.bezierCurveTo(p1035 * 142, p1035 * 91, p1035 * 141, p1035 * 94, p1035 * 132, p1035 * 98);
    v1357.bezierCurveTo(p1035 * 117, p1035 * 102, p1035 * 126, p1035 * 108, p1035 * 142, p1035 * 102);
    v1357.bezierCurveTo(p1035 * 159, p1035 * 98, p1035 * 164, p1035 * 80, p1035 * 162, p1035 * 47);
    v1357.bezierCurveTo(p1035 * 160, p1035 * 19, p1035 * 150, p1035 * 6, p1035 * 117, p1035 * 4);
    v1357.bezierCurveTo(p1035 * 44, p1035 * 0, p1035 * 35, p1035 * 20, p1035 * 33, p1035 * 37);
    v1357.bezierCurveTo(p1035 * 29, p1035 * 69, p1035 * 33, p1035 * 88, p1035 * 44, p1035 * 96);
    v1357.bezierCurveTo(p1035 * 64, p1035 * 107, p1035 * 70, p1035 * 102, p1035 * 54, p1035 * 93);
    v1357.bezierCurveTo(p1035 * 49, p1035 * 88, p1035 * 50, p1035 * 82, p1035 * 53, p1035 * 77);
    v1357.bezierCurveTo(p1035 * 51.5, p1035 * 71, p1035 * 51.5, p1035 * 71, p1035 * 50, p1035 * 65);
    v1357.bezierCurveTo(p1035 * 53, p1035 * 68.5, p1035 * 53, p1035 * 68.5, p1035 * 56, p1035 * 72);
    v1357.bezierCurveTo(p1035 * 59, p1035 * 67.5, p1035 * 59, p1035 * 67.5, p1035 * 62, p1035 * 63);
    v1357.bezierCurveTo(p1035 * 60.5, p1035 * 59.5, p1035 * 60.5, p1035 * 59.5, p1035 * 59, p1035 * 56);
    v1357.bezierCurveTo(p1035 * 62, p1035 * 57, p1035 * 62, p1035 * 57, p1035 * 65, p1035 * 58);
    v1357.bezierCurveTo(p1035 * 78, p1035 * 35, p1035 * 103, p1035 * 36, p1035 * 117, p1035 * 47);
    v1357.closePath();
    f86(v1357, p1037[1], p1037[2], p1035 * 6);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 62, p1035 * 21);
    v1357.bezierCurveTo(p1035 * 63, p1035 * 34, p1035 * 64, p1035 * 37, p1035 * 66, p1035 * 40);
    v1357.bezierCurveTo(p1035 * 54, p1035 * 49, p1035 * 53, p1035 * 51, p1035 * 48, p1035 * 58);
    v1357.bezierCurveTo(p1035 * 44, p1035 * 51, p1035 * 42, p1035 * 43, p1035 * 40, p1035 * 36);
    v1357.bezierCurveTo(p1035 * 47, p1035 * 28, p1035 * 52, p1035 * 25, p1035 * 61, p1035 * 21);
    v1357.closePath();
    f86(v1357, p1037[4]);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 60, p1035 * 29);
    v1357.bezierCurveTo(p1035 * 62, p1035 * 25, p1035 * 65, p1035 * 24, p1035 * 70, p1035 * 23);
    f86(v1357, vVVUndefined27, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 61, p1035 * 37);
    v1357.bezierCurveTo(p1035 * 63, p1035 * 32, p1035 * 66, p1035 * 32, p1035 * 71, p1035 * 32);
    f86(v1357, vVVUndefined273, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 52, p1035 * 31);
    v1357.bezierCurveTo(p1035 * 50, p1035 * 26, p1035 * 50, p1035 * 25, p1035 * 51, p1035 * 23);
    f86(v1357, vVVVUndefined1972, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 46, p1035 * 35);
    v1357.bezierCurveTo(p1035 * 44, p1035 * 31, p1035 * 43, p1035 * 29, p1035 * 45, p1035 * 26);
    f86(v1357, vVVVUndefined197, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 58, p1035 * 44);
    v1357.bezierCurveTo(p1035 * 57, p1035 * 48, p1035 * 57, p1035 * 50, p1035 * 60, p1035 * 52);
    f86(v1357, undefined, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 53, p1035 * 48);
    v1357.bezierCurveTo(p1035 * 52, p1035 * 52, p1035 * 52, p1035 * 54, p1035 * 55, p1035 * 57);
    f86(v1357, vVVUndefined272, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 46, p1035 * 41);
    v1357.bezierCurveTo(p1035 * 41, p1035 * 42, p1035 * 39, p1035 * 45, p1035 * 38, p1035 * 48);
    f86(v1357, vVVVVUndefined197, p1037[3], p1035 * 4);
    v1357.beginPath();
    v1357.lineCap = "round";
    v1357.lineJoin = "round";
    v1357.moveTo(p1035 * 48, p1035 * 48);
    v1357.bezierCurveTo(p1035 * 42, p1035 * 51, p1035 * 42, p1035 * 53, p1035 * 40, p1035 * 55);
    f86(v1357, undefined, p1037[3], p1035 * 4);
    if (p1038 == 0) {
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1035 * 99, p1035 * 101);
      v1357.bezierCurveTo(p1035 * 118.6666259765625, p1035 * 104.33331298828125, p1035 * 124.6666259765625, p1035 * 116.33331298828125, p1035 * 112.6666259765625, p1035 * 114.33331298828125);
      v1357.bezierCurveTo(p1035 * 104.6666259765625, p1035 * 112.33331298828125, p1035 * 100.6666259765625, p1035 * 105.33331298828125, p1035 * 99.6666259765625, p1035 * 101.33331298828125);
      f86(v1357, vVVVUndefined197, p1037[5], p1035 * 6);
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1035 * 97.6666259765625, p1035 * 101.33331298828125);
      v1357.bezierCurveTo(p1035 * 81.6666259765625, p1035 * 106.33331298828125, p1035 * 79.6666259765625, p1035 * 114.33331298828125, p1035 * 89.6666259765625, p1035 * 114.33331298828125);
      v1357.bezierCurveTo(p1035 * 95.6666259765625, p1035 * 111.33331298828125, p1035 * 95.6666259765625, p1035 * 109.33331298828125, p1035 * 98.6666259765625, p1035 * 102.33331298828125);
      f86(v1357, undefined, p1037[5], p1035 * 6);
    } else {
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1035 * 103, p1035 * 100.39999389648438);
      v1357.bezierCurveTo(p1035 * 120, p1035 * 106.39999389648438, p1035 * 118, p1035 * 107.39999389648438, p1035 * 120, p1035 * 111.39999389648438);
      f86(v1357, undefined, p1037[5], p1035 * 6);
      v1357.beginPath();
      v1357.lineCap = "round";
      v1357.lineJoin = "round";
      v1357.moveTo(p1035 * 103, p1035 * 100.39999389648438);
      v1357.bezierCurveTo(p1035 * 90, p1035 * 103.39999389648438, p1035 * 89, p1035 * 106.39999389648438, p1035 * 87, p1035 * 112.39999389648438);
      f86(v1357, vVVVVVUndefined197, p1037[5], p1035 * 6);
      f87(v1357, p1035 * 86, p1035 * 114.39999389648438, p1035 * 4.5);
      f86(v1357, p1037[1], p1037[5], p1035 * 6);
      f87(v1357, p1035 * 121, p1035 * 114.39999389648438, p1035 * 4.5);
      f86(v1357, p1037[1], p1037[5], p1035 * 6);
    }
    return v1356;
  }
  function f270() {
    new Date().getTime();
    function e(p1039) {
      var v1358 = 0;
      for (var v1359 = 0, v1360 = 0; p1039.length > v1359; v1359++) {
        var v1361 = p1039.charAt(v1359);
        if (v1361 !== "_" && v1359 !== 5) {
          if (v1361 === "1") {
            v1358 += Math.pow(2, v1360);
          }
          v1360++;
        }
      }
      return v1358;
    }
    ⵠᐃⵠⲆᐃΔᐃⲆⲆ();
    ⲆⲆ[1026] = [ᐃⲆ.ᐃᐃⲆΔᐃⵠⵠ, ᐃⲆ.ⵠᐃⵠⲆᐃⵠⵠ];
    ⲆⲆ[1025] = [];
    ⲆⲆ[1025][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_010_000")] = [ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.Δⵠᐃⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_010_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_010_000")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_011_000")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_010_000")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_011_010")] = [ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_011_011")] = [ᐃⲆ.ⵠⵠᐃᐃΔᐃⵠ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_110_000")] = [ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_110_010")] = [ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ΔⲆⵠᐃᐃⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_110_110")] = [ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ⲆⲆⵠᐃΔⲆΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ΔⲆⵠᐃᐃⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_111_000")] = [ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_111_111")] = [ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ⵠⵠᐃᐃΔᐃⵠ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_010_000")] = [ᐃⲆ.Δⵠᐃⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_010_010")] = [ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_011_000")] = [ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_000")] = [ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")] = [ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_011_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_011_011")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_111_011")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_111_000")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_111_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_111_011")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_111_110")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_111_111")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_111_110")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("000_111_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("010_110_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_011_000")] = [ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_011_010")] = [ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_011_011")] = [ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ⵠⵠᐃᐃΔᐃⵠ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_000")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_011_010")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_010")] = [ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_011")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_010")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_110")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_010")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("011_111_111")] = [ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠⵠᐃᐃΔᐃⵠ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_110_000")] = [ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.Δⵠⵠⵠⵠⵠⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_110_010")] = [ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_110_110")] = [ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_000")] = [ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.Δⵠⵠⵠⵠⵠⵠ, ᐃⲆ.ⵠⲆⲆΔᐃΔⲆ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_110")] = [ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ, ᐃⲆ.ⵠⲆⲆΔᐃΔⲆ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_111")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_011")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("110_111_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_110")] = [ᐃⲆ.ᐃᐃⵠᐃᐃ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ, ᐃⲆ.ⵠⲆⲆΔᐃΔⲆ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ⵠΔⵠⵠΔᐃΔ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_011")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_110")];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_000")] = [ᐃⲆ.Δⵠⵠⵠⵠⵠⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⵠⲆⲆΔᐃΔⲆ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_111")] = [ᐃⲆ.ⵠΔⵠⵠΔᐃΔ, ᐃⲆ.ⵠΔᐃΔᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃ, ᐃⲆ.ⵠⵠᐃᐃΔᐃⵠ, ᐃⲆ.ⵠⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⲆⲆ, ᐃⲆ.ΔⲆⵠΔΔ, ᐃⲆ.ΔⲆΔⵠⵠⲆΔ, ᐃⲆ.ᐃᐃⵠᐃΔΔⵠ, ᐃⲆ.ᐃᐃⲆⲆΔ, ᐃⲆ.ᐃⵠᐃΔⵠⵠᐃ, ᐃⲆ.ⲆⲆⲆⲆᐃⵠᐃ, ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠ, ᐃⲆ.ⵠΔⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆᐃΔⵠᐃ, ᐃⲆ.Δⵠᐃⵠᐃ, ᐃⲆ.ΔᐃᐃⵠⲆ, ᐃⲆ.ⲆΔⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃΔΔᐃⲆⲆⵠ, ᐃⲆ.ΔⵠⵠᐃᐃΔⲆ, ᐃⲆ.ⲆᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆᐃⲆ, ᐃⲆ.ᐃᐃⵠᐃᐃ];
    ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_010")] = ⲆⲆ[1025][v554.ᐃⵠⵠ][e("111_111_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ] = [];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_010_000")] = [ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ΔΔⲆⵠⲆ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_010_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_010_000")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_011_000")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_010_000")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_011_010")] = [ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_011_011")] = [ᐃⲆ.ᐃⵠᐃⵠΔⵠⵠ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ᐃᐃᐃΔΔ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_110_000")] = [ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ΔΔⲆⵠⲆ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_110_010")] = [ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⵠⵠΔⲆᐃΔᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_110_110")] = [ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ΔⲆⲆⲆᐃᐃΔ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⵠⵠΔⲆᐃΔᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_111_000")] = [ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_111_111")] = [ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ᐃⵠᐃⵠΔⵠⵠ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_010_000")] = [ᐃⲆ.ΔΔⲆⵠⲆ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_010_010")] = [ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_011_000")] = [ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ΔᐃΔΔⵠ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_000")] = [ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")] = [ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_011_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_011_011")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_111_011")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_111_000")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_111_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_111_011")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_111_110")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_111_111")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_111_110")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("000_111_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("010_110_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_011_000")] = [ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ΔᐃΔΔⵠ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_011_010")] = [ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_011_011")] = [ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ᐃⵠᐃⵠΔⵠⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_000")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_011_010")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_010")] = [ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_011")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_010")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_110")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_010")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("011_111_111")] = [ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ᐃⵠᐃⵠΔⵠⵠ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_110_000")] = [ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ΔΔⲆⵠⲆⲆΔ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_110_010")] = [ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_110_110")] = [ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_000")] = [ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ΔΔⲆⵠⲆⲆΔ, ᐃⲆ.ⲆⵠΔΔⵠᐃᐃ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_110")] = [ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ, ᐃⲆ.ⲆⵠΔΔⵠᐃᐃ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_111")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_011")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("110_111_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_110")] = [ᐃⲆ.ⲆⲆᐃⲆᐃ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ⲆⵠΔΔⵠᐃᐃ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_011")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_110")];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_000")] = [ᐃⲆ.ΔΔⲆⵠⲆⲆΔ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ⲆⵠΔΔⵠᐃᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_111")] = [ᐃⲆ.ⲆⵠⵠΔⲆⲆⵠ, ᐃⲆ.ΔᐃⲆⲆⵠ, ᐃⲆ.ⲆΔΔΔΔ, ᐃⲆ.ᐃⵠᐃⵠΔⵠⵠ, ᐃⲆ.ⲆΔΔⲆⵠ, ᐃⲆ.ΔΔⵠΔΔ, ᐃⲆ.ΔⵠⵠΔⵠ, ᐃⲆ.ᐃΔⲆⵠⵠⲆᐃ, ᐃⲆ.ΔⲆΔⲆΔⵠⲆ, ᐃⲆ.ⲆΔⲆᐃᐃ, ᐃⲆ.ᐃⵠᐃⲆᐃᐃⵠ, ᐃⲆ.ⲆⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ᐃⵠⵠⵠᐃⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠ, ᐃⲆ.ΔⵠⲆⵠⵠΔⵠ, ᐃⲆ.ᐃⵠΔⲆᐃᐃⵠ, ᐃⲆ.ΔΔⲆⵠⲆ, ᐃⲆ.ⲆⵠⲆΔⵠ, ᐃⲆ.ⲆᐃᐃΔⲆᐃᐃ, ᐃⲆ.ⵠⵠⵠⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆΔ, ᐃⲆ.ᐃᐃᐃΔΔ, ᐃⲆ.ΔᐃΔΔⵠ, ᐃⲆ.ⲆⲆᐃⲆᐃ];
    ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_010")] = ⲆⲆ[1025][v554.ΔⲆᐃ][e("111_111_110")];
    ⲆⲆ[1024] = [];
    ⲆⲆ[1024][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_010_000")] = ᐃⲆ.ⲆⵠⵠⲆΔⲆΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_010_010")] = ᐃⲆ.ⵠⲆⲆΔᐃⲆᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_011_000")] = ᐃⲆ.ΔᐃⲆᐃΔᐃⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_011_010")] = ᐃⲆ.ⵠⵠΔⵠΔΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_011_011")] = ᐃⲆ.ᐃΔⲆΔⲆⲆᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_110_000")] = ᐃⲆ.ⲆⵠⵠΔⵠᐃⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_110_010")] = ᐃⲆ.ⲆⲆⲆⲆⲆⲆⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_110_110")] = ᐃⲆ.ⲆᐃⲆⵠⵠΔⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_111_000")] = ᐃⲆ.ΔᐃΔⲆΔⵠⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_111_010")] = ᐃⲆ.ᐃΔᐃⵠⵠᐃᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_111_011")] = ᐃⲆ.ⲆⲆⵠⲆᐃΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_111_110")] = ᐃⲆ.ᐃⲆⵠⲆᐃΔΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("000_111_111")] = ᐃⲆ.ⵠᐃⲆᐃΔᐃⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_010_000")] = ᐃⲆ.ΔⵠᐃᐃⵠⵠⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_010_010")] = ᐃⲆ.ⲆⲆᐃⲆⵠⵠⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_011_000")] = ᐃⲆ.ΔΔᐃΔΔΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_011_010")] = ᐃⲆ.ᐃⲆⲆᐃᐃⵠⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_011_011")] = ᐃⲆ.ⲆⵠᐃⲆⲆⲆΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_110_000")] = ᐃⲆ.ⲆᐃΔᐃⲆⵠΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_110_010")] = ᐃⲆ.ⲆⵠΔⵠΔΔⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_110_110")] = ᐃⲆ.ⵠᐃⲆΔᐃᐃⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_111_000")] = ᐃⲆ.ᐃᐃΔⲆᐃⵠᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_111_010")] = ᐃⲆ.ⵠᐃⵠⵠΔΔⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_111_011")] = ᐃⲆ.ΔⵠⲆΔᐃᐃⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_111_110")] = ᐃⲆ.ⲆΔⲆΔⲆⲆⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("010_111_111")] = ᐃⲆ.ΔⲆⲆⵠⲆⲆΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_011_000")] = ᐃⲆ.ⲆⵠΔⵠᐃⵠⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_011_010")] = ᐃⲆ.ⵠⲆΔⵠΔⵠⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_011_011")] = ᐃⲆ.ⲆⵠΔΔⲆᐃⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_111_000")] = ᐃⲆ.ᐃᐃⵠΔΔⵠΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_111_010")] = ᐃⲆ.ᐃⵠΔᐃⵠⲆΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_111_011")] = ᐃⲆ.ⵠΔⵠⵠΔΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_111_110")] = ᐃⲆ.ᐃΔⲆⵠᐃⵠⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("011_111_111")] = ᐃⲆ.ᐃΔⲆⲆⵠⲆⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_110_000")] = ᐃⲆ.ΔⲆⲆⲆⲆᐃⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_110_010")] = ᐃⲆ.ΔⲆΔⵠⵠⵠΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_110_110")] = ᐃⲆ.ⲆⵠΔⲆⵠⵠᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_111_000")] = ᐃⲆ.ⵠᐃᐃⵠᐃᐃᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_111_010")] = ᐃⲆ.ΔΔᐃΔᐃᐃΔ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_111_011")] = ᐃⲆ.ᐃⲆⲆᐃΔΔⵠ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_111_110")] = ᐃⲆ.ⲆΔⵠΔⵠⵠⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("110_111_111")] = ᐃⲆ.ⲆⵠⵠΔⵠΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("111_111_011")] = ᐃⲆ.ᐃⵠⲆⲆⵠΔⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("111_111_110")] = ᐃⲆ.ᐃⵠⵠΔⵠⲆⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("111_111_011")] = ᐃⲆ.ᐃⵠⲆⲆⵠΔⲆ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("111_111_000")] = ᐃⲆ.ᐃΔΔΔⲆΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("111_111_111")] = ᐃⲆ.ⲆⵠΔΔⲆΔᐃ;
    ⲆⲆ[1024][v554.ᐃⵠⵠ][e("111_111_010")] = ᐃⲆ.ⲆᐃⲆΔⵠΔᐃ;
    ⲆⲆ[1024][v554.ΔⲆᐃ] = [];
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_010_000")] = ᐃⲆ.ᐃᐃⲆⲆⵠⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_010_010")] = ᐃⲆ.ᐃⵠᐃᐃΔᐃⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_011_000")] = ᐃⲆ.ⲆᐃᐃⲆⵠⵠⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_011_010")] = ᐃⲆ.ᐃⵠᐃⵠᐃⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_011_011")] = ᐃⲆ.ΔᐃᐃⵠⲆᐃⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_110_000")] = ᐃⲆ.ᐃⵠΔᐃⲆΔΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_110_010")] = ᐃⲆ.ᐃⲆᐃᐃⵠⵠⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_110_110")] = ᐃⲆ.ⲆⵠⲆᐃⵠⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_111_000")] = ᐃⲆ.ⵠᐃᐃᐃΔⵠⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_111_010")] = ᐃⲆ.ⲆⲆⲆⲆΔΔⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_111_011")] = ᐃⲆ.ⲆᐃᐃΔΔⲆᐃ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_111_110")] = ᐃⲆ.ᐃⲆⵠⲆᐃⲆⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("000_111_111")] = ᐃⲆ.ΔⲆᐃΔΔⵠΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_010_000")] = ᐃⲆ.ⲆⵠⵠⵠᐃΔΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_010_010")] = ᐃⲆ.ΔᐃᐃⵠᐃᐃⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_011_000")] = ᐃⲆ.ΔᐃⵠΔⲆⵠᐃ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_011_010")] = ᐃⲆ.ⲆⲆⵠⲆⲆⲆΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_011_011")] = ᐃⲆ.ΔΔⲆΔⵠᐃⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_110_000")] = ᐃⲆ.ΔΔΔΔⲆⵠΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_110_010")] = ᐃⲆ.ⵠⲆⵠⵠⵠⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_110_110")] = ᐃⲆ.ᐃⲆⵠᐃᐃΔΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_111_000")] = ᐃⲆ.ⲆⲆⲆⵠᐃΔᐃ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_111_010")] = ᐃⲆ.ⲆⲆΔΔᐃᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_111_011")] = ᐃⲆ.ᐃᐃⵠⵠᐃⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_111_110")] = ᐃⲆ.ΔⲆⵠᐃⲆⵠⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("010_111_111")] = ᐃⲆ.ᐃⲆⵠⵠᐃⲆΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_011_000")] = ᐃⲆ.ⵠⵠᐃΔⲆᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_011_010")] = ᐃⲆ.ᐃⵠⲆⵠᐃⵠΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_011_011")] = ᐃⲆ.ᐃΔΔⵠⵠᐃⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_111_000")] = ᐃⲆ.ⵠᐃᐃΔⵠᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_111_010")] = ᐃⲆ.ΔⲆΔⵠΔΔⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_111_011")] = ᐃⲆ.ᐃⵠΔΔⲆΔΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_111_110")] = ᐃⲆ.ΔΔⲆⵠⵠⲆΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("011_111_111")] = ᐃⲆ.ΔΔⲆᐃⲆⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_110_000")] = ᐃⲆ.ᐃΔⲆΔⵠⵠⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_110_010")] = ᐃⲆ.ᐃⵠᐃΔⵠⲆⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_110_110")] = ᐃⲆ.ᐃⲆᐃΔΔⲆⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_111_000")] = ᐃⲆ.ΔΔⵠᐃΔⲆΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_111_010")] = ᐃⲆ.ΔΔⲆᐃⲆΔⵠ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_111_011")] = ᐃⲆ.ΔⵠᐃⲆⵠⵠⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_111_110")] = ᐃⲆ.ᐃΔⵠᐃᐃᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("110_111_111")] = ᐃⲆ.ⵠᐃᐃᐃᐃⵠᐃ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("111_111_011")] = ᐃⲆ.ΔⲆⵠⲆⲆᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("111_111_110")] = ᐃⲆ.ᐃᐃᐃΔⲆᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("111_111_011")] = ᐃⲆ.ΔⲆⵠⲆⲆᐃΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("111_111_000")] = ᐃⲆ.ᐃᐃᐃΔⵠⲆⲆ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("111_111_111")] = ᐃⲆ.ⲆⵠⵠⲆⲆⲆΔ;
    ⲆⲆ[1024][v554.ΔⲆᐃ][e("111_111_010")] = ᐃⲆ.ᐃⵠⵠΔⵠΔⵠ;
    ⲆⲆ[32] = [];
    ⲆⲆ[32][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆᐃΔⵠᐃΔ;
    ⲆⲆ[32][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⵠⲆⲆⵠΔ;
    ⲆⲆ[205] = [];
    ⲆⲆ[205][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔᐃᐃⵠⵠΔ;
    ⲆⲆ[205][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆⲆᐃⵠᐃⲆ;
    ⲆⲆ[957] = [];
    ⲆⲆ[957][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔΔⵠⵠΔᐃ;
    ⲆⲆ[957][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃⵠⲆΔᐃΔ;
    ⲆⲆ[207] = [];
    ⲆⲆ[207][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠⲆΔⲆⵠΔ;
    ⲆⲆ[207][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔⲆᐃᐃᐃⵠ;
    ⲆⲆ[954] = [];
    ⲆⲆ[954][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆᐃⲆⵠᐃⲆ;
    ⲆⲆ[954][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⵠᐃΔⲆⲆ;
    ⲆⲆ[958] = [];
    ⲆⲆ[958][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆⵠΔΔⲆⲆ;
    ⲆⲆ[958][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠⵠⲆΔΔΔ;
    ⲆⲆ[209] = [];
    ⲆⲆ[209][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠⵠᐃⲆᐃⵠ;
    ⲆⲆ[209][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠⵠΔᐃⵠΔ;
    ⲆⲆ[971] = [];
    ⲆⲆ[971][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠᐃⵠᐃⲆⲆ;
    ⲆⲆ[971][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔⵠᐃᐃΔᐃ;
    ⲆⲆ[211] = [];
    ⲆⲆ[211][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠΔⵠⵠᐃΔ;
    ⲆⲆ[211][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⲆⲆⵠΔΔ;
    ⲆⲆ[986] = [];
    ⲆⲆ[986][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⵠⵠᐃᐃⲆ;
    ⲆⲆ[986][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⲆⲆⵠⲆⵠ;
    ⲆⲆ[989] = [];
    ⲆⲆ[989][v554.ᐃⵠⵠ] = [ᐃⲆ.ᐃᐃⲆΔᐃⲆΔ];
    ⲆⲆ[989][v554.ΔⲆᐃ] = [ᐃⲆ.ΔⲆΔΔΔⲆⵠ];
    ⲆⲆ[217] = [];
    ⲆⲆ[217][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆΔⲆᐃΔᐃ;
    ⲆⲆ[217][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆⵠⲆΔⲆⲆ;
    ⲆⲆ[219] = [];
    ⲆⲆ[219][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆⲆᐃⲆⵠⵠ;
    ⲆⲆ[219][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠⵠΔΔΔᐃ;
    ⲆⲆ[218] = [];
    ⲆⲆ[218][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆⵠⲆᐃⵠΔ;
    ⲆⲆ[218][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆⵠΔᐃΔᐃ;
    ⲆⲆ[212] = [];
    ⲆⲆ[212][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⲆⵠΔⵠΔ;
    ⲆⲆ[212][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔΔᐃΔΔΔ;
    ⲆⲆ[213] = [];
    ⲆⲆ[213][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⵠⲆⵠᐃⲆ;
    ⲆⲆ[213][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⵠΔⲆᐃᐃ;
    ⲆⲆ[214] = [];
    ⲆⲆ[214][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆΔᐃΔΔΔ;
    ⲆⲆ[214][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⵠⲆᐃΔᐃ;
    ⲆⲆ[215] = [];
    ⲆⲆ[215][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃᐃΔΔⵠΔΔ;
    ⲆⲆ[215][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆΔⲆⵠΔᐃ;
    ⲆⲆ[216] = [];
    ⲆⲆ[216][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃᐃᐃⲆΔΔᐃ;
    ⲆⲆ[216][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔᐃᐃⵠⵠⲆ;
    ⲆⲆ[220] = [];
    ⲆⲆ[220][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠΔΔᐃΔⵠ;
    ⲆⲆ[220][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆⲆᐃⲆᐃΔ;
    ⲆⲆ[1020] = [];
    ⲆⲆ[1020][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⵠⲆΔⵠᐃ;
    ⲆⲆ[1020][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⲆⲆᐃᐃΔ;
    ⲆⲆ[1021] = [];
    ⲆⲆ[1021][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠⲆᐃΔᐃⵠ;
    ⲆⲆ[1021][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⵠⵠⵠᐃᐃ;
    ⲆⲆ[39] = [];
    ⲆⲆ[39][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆⲆⲆΔⵠⲆ;
    ⲆⲆ[39][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠⲆΔⲆΔⲆ;
    ⲆⲆ[1022] = ᐃⲆ.ΔⵠᐃⵠΔⵠⲆ;
    ⲆⲆ[1023] = ᐃⲆ.ⲆᐃΔⲆⲆⲆᐃ;
    ⲆⲆ[1041] = [];
    ⲆⲆ[1041][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[1041][v554.ΔⲆᐃ] = [];
    ⲆⲆ[1041][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆⵠⵠⲆᐃⲆⵠ);
    ⲆⲆ[1041][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔⲆⵠⲆΔΔ);
    ⲆⲆ[1041][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⲆⲆᐃⲆⵠΔ);
    ⲆⲆ[1041][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆΔⵠⲆⲆⵠᐃ);
    ⲆⲆ[1041][v554.ΔⲆᐃ].push(ᐃⲆ.ΔΔⲆⲆⲆⵠᐃ);
    ⲆⲆ[1041][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⵠᐃΔΔΔᐃ);
    ⲆⲆ[244] = [];
    ⲆⲆ[244][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[244][v554.ΔⲆᐃ] = [];
    ⲆⲆ[244][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⵠΔᐃΔⲆⲆ);
    ⲆⲆ[244][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃΔΔᐃΔⲆⲆ);
    ⲆⲆ[244][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃⲆⵠᐃⵠᐃⵠ);
    ⲆⲆ[244][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆᐃᐃᐃⲆⲆⵠ);
    ⲆⲆ[244][v554.ΔⲆᐃ].push(ᐃⲆ.ᐃΔⵠⲆᐃΔⵠ);
    ⲆⲆ[244][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⵠⲆⵠⲆᐃᐃ);
    ⲆⲆ[1052] = [];
    ⲆⲆ[1052][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[1052][v554.ΔⲆᐃ] = [];
    ⲆⲆ[1052][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔᐃⲆᐃⲆⵠ);
    ⲆⲆ[1052][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆⲆΔΔΔᐃⵠ);
    ⲆⲆ[1052][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃⵠⵠⵠⲆⲆⲆ);
    ⲆⲆ[1052][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠᐃΔⵠΔⵠΔ);
    ⲆⲆ[1052][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃⲆΔΔⲆᐃⲆ);
    ⲆⲆ[1052][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⲆⵠⲆⲆⵠⵠ);
    ⲆⲆ[1052][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⲆⲆⵠⵠⵠⵠ);
    ⲆⲆ[1052][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⵠΔᐃΔⵠⲆ);
    ⲆⲆ[1052][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆΔᐃⲆⲆᐃⵠ);
    ⲆⲆ[1052][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆΔᐃⵠⵠΔⲆ);
    ⲆⲆ[450] = [];
    ⲆⲆ[450][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃⵠⲆᐃᐃΔ;
    ⲆⲆ[450][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔⲆⵠⵠⲆΔ;
    ⲆⲆ[453] = [];
    ⲆⲆ[453][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔΔⲆΔⵠᐃ;
    ⲆⲆ[453][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠᐃΔΔⵠΔ;
    ⲆⲆ[454] = [];
    ⲆⲆ[454][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃΔΔΔⵠⲆⲆ;
    ⲆⲆ[454][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⲆΔᐃᐃⵠ;
    ⲆⲆ[464] = ᐃⲆ.ⵠⲆᐃⲆⲆΔᐃ;
    ⲆⲆ[468] = ᐃⲆ.ᐃᐃⲆⵠᐃⵠᐃ;
    ⲆⲆ[469] = ᐃⲆ.ᐃⲆⵠᐃⵠⵠⵠ;
    ⲆⲆ[20] = [];
    ⲆⲆ[20][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆⵠᐃΔᐃΔ;
    ⲆⲆ[20][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃⲆᐃⲆⵠᐃ;
    ⲆⲆ[920] = [];
    ⲆⲆ[920][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔᐃΔᐃⲆⵠ;
    ⲆⲆ[920][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⵠᐃⲆⲆⲆ;
    ⲆⲆ[21] = [];
    ⲆⲆ[21][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃΔⲆⵠⵠⲆ;
    ⲆⲆ[21][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠⲆΔⵠⵠⲆ;
    ⲆⲆ[924] = [];
    ⲆⲆ[924][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔᐃΔᐃⲆⵠ;
    ⲆⲆ[924][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⵠᐃⲆⲆⲆ;
    ⲆⲆ[44] = [];
    ⲆⲆ[44][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃⵠⵠⵠⲆⵠ;
    ⲆⲆ[44][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔΔⵠᐃⲆ;
    ⲆⲆ[19] = [];
    ⲆⲆ[19][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆᐃᐃΔⲆⵠ;
    ⲆⲆ[19][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔⲆᐃⲆⲆΔ;
    ⲆⲆ[34] = [];
    ⲆⲆ[34][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆΔᐃⵠΔⵠ;
    ⲆⲆ[34][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔΔⲆΔⵠΔ;
    ⲆⲆ[17] = [];
    ⲆⲆ[17][v554.ᐃⵠⵠ] = ᐃⲆ.Δᐃᐃᐃⵠⵠⵠ;
    ⲆⲆ[17][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠΔᐃΔⵠⵠ;
    ⲆⲆ[63] = [];
    ⲆⲆ[63][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔΔⵠⵠᐃᐃ;
    ⲆⲆ[63][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃᐃΔᐃᐃΔ;
    ⲆⲆ[60] = [];
    ⲆⲆ[60][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃᐃᐃⲆⵠΔⲆ;
    ⲆⲆ[60][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⵠⲆΔᐃΔ;
    ⲆⲆ[94] = [];
    ⲆⲆ[94][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⵠⲆⲆᐃⲆⵠⲆ;
    ⲆⲆ[94][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃΔΔⵠΔⵠΔᐃ;
    ⲆⲆ[95] = [];
    ⲆⲆ[95][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⲆᐃᐃΔⵠⲆᐃ;
    ⲆⲆ[95][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠΔⵠᐃⵠⲆⲆΔ;
    ⲆⲆ[96] = [];
    ⲆⲆ[96][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠΔⲆᐃⲆⵠᐃΔ;
    ⲆⲆ[96][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃᐃⲆΔⵠⲆᐃⵠ;
    ⲆⲆ[97] = [];
    ⲆⲆ[97][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠⵠᐃᐃᐃⲆᐃᐃ;
    ⲆⲆ[97][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠᐃᐃΔᐃⵠⵠⲆ;
    ⲆⲆ[98] = [];
    ⲆⲆ[98][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃⵠⲆⵠⵠᐃᐃΔ;
    ⲆⲆ[98][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠΔΔⵠⲆⲆᐃΔ;
    ⲆⲆ[99] = [];
    ⲆⲆ[99][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃᐃⵠΔⵠⵠⲆⵠ;
    ⲆⲆ[99][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃΔⲆΔⵠᐃΔᐃ;
    ⲆⲆ[90] = [];
    ⲆⲆ[90][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠᐃⲆΔᐃᐃ;
    ⲆⲆ[90][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔᐃⲆᐃⲆⲆ;
    ⲆⲆ[91] = [];
    ⲆⲆ[91][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⵠⲆⲆⲆᐃ;
    ⲆⲆ[91][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔΔⵠⲆΔ;
    ⲆⲆ[71] = [];
    ⲆⲆ[71][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆⵠⵠⲆⲆΔᐃΔ;
    ⲆⲆ[71][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⲆᐃⲆΔⲆⲆⵠ;
    ⲆⲆ[72] = [];
    ⲆⲆ[72][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⲆⲆⲆΔⵠΔⲆ;
    ⲆⲆ[72][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔᐃΔⵠᐃΔⲆⵠ;
    ⲆⲆ[73] = [];
    ⲆⲆ[73][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃⲆᐃⲆΔⲆᐃⲆ;
    ⲆⲆ[73][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔᐃⵠⲆΔⲆⵠᐃ;
    ⲆⲆ[74] = [];
    ⲆⲆ[74][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆᐃⵠⵠⲆᐃⲆᐃ;
    ⲆⲆ[74][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⵠⲆΔⲆⵠᐃⲆ;
    ⲆⲆ[75] = [];
    ⲆⲆ[75][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃΔΔΔᐃΔⲆᐃⵠ;
    ⲆⲆ[75][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃⲆᐃⵠⲆⲆⵠⲆ;
    ⲆⲆ[76] = [];
    ⲆⲆ[76][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔΔⵠᐃⲆⵠΔᐃ;
    ⲆⲆ[76][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔⲆⵠᐃⲆΔΔΔ;
    ⲆⲆ[101] = [];
    ⲆⲆ[101][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃᐃᐃⲆⵠᐃ;
    ⲆⲆ[101][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃΔⵠΔΔⲆ;
    ⲆⲆ[64] = [];
    ⲆⲆ[64][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔΔᐃΔᐃⵠ;
    ⲆⲆ[64][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠᐃΔᐃⲆᐃ;
    ⲆⲆ[102] = [];
    ⲆⲆ[102][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠΔⲆᐃᐃᐃ;
    ⲆⲆ[102][v554.ΔⲆᐃ] = ᐃⲆ.Ⲇᐃⵠᐃᐃⵠᐃ;
    ⲆⲆ[65] = [];
    ⲆⲆ[65][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔⲆⵠⲆⵠᐃ;
    ⲆⲆ[65][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠⲆΔᐃΔΔ;
    ⲆⲆ[103] = [];
    ⲆⲆ[103][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠΔᐃΔᐃΔ;
    ⲆⲆ[103][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆΔΔᐃΔⲆ;
    ⲆⲆ[66] = [];
    ⲆⲆ[66][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠⵠΔⲆΔᐃ;
    ⲆⲆ[66][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠᐃΔⵠΔⲆ;
    ⲆⲆ[104] = [];
    ⲆⲆ[104][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⲆⵠⵠⵠⵠ;
    ⲆⲆ[104][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔⵠᐃⲆᐃ;
    ⲆⲆ[67] = [];
    ⲆⲆ[67][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⵠΔᐃΔⲆ;
    ⲆⲆ[67][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⵠⲆⲆΔⲆ;
    ⲆⲆ[105] = [];
    ⲆⲆ[105][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⵠⲆΔᐃᐃ;
    ⲆⲆ[105][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⵠⲆΔⲆⲆ;
    ⲆⲆ[68] = [];
    ⲆⲆ[68][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔΔⵠΔⲆⵠ;
    ⲆⲆ[68][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃⵠᐃⵠⵠΔ;
    ⲆⲆ[106] = [];
    ⲆⲆ[106][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆΔⵠᐃΔᐃ;
    ⲆⲆ[106][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔΔᐃᐃⵠⵠⲆ;
    ⲆⲆ[69] = [];
    ⲆⲆ[69][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃᐃᐃⲆΔᐃⲆΔ;
    ⲆⲆ[69][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠΔᐃΔⵠᐃⲆΔ;
    ⲆⲆ[107] = [];
    ⲆⲆ[107][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃΔᐃⲆⵠᐃ;
    ⲆⲆ[107][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⵠⲆⵠᐃⲆ;
    ⲆⲆ[70] = [];
    ⲆⲆ[70][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠᐃᐃΔⵠΔ;
    ⲆⲆ[70][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠᐃⲆⲆᐃⵠ;
    ⲆⲆ[80] = [];
    ⲆⲆ[80][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃᐃᐃᐃᐃᐃⲆ;
    ⲆⲆ[80][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃᐃⵠΔΔⵠ;
    ⲆⲆ[81] = [];
    ⲆⲆ[81][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃⵠⵠᐃᐃⲆ;
    ⲆⲆ[81][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃⵠⵠⲆΔⵠ;
    ⲆⲆ[22] = [];
    ⲆⲆ[22][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃⵠⲆᐃⵠΔ;
    ⲆⲆ[22][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔᐃⲆⲆΔΔ;
    ⲆⲆ[928] = [];
    ⲆⲆ[928][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆⲆΔⲆΔᐃ;
    ⲆⲆ[928][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⲆⲆⵠⵠⲆ;
    ⲆⲆ[935] = [];
    ⲆⲆ[935][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[935][v554.ΔⲆᐃ] = [];
    ⲆⲆ[935][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔΔⲆⵠΔⲆΔᐃ);
    ⲆⲆ[935][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⲆᐃᐃⵠΔⵠᐃⵠ);
    ⲆⲆ[935][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⲆᐃᐃⵠΔⵠᐃⵠ);
    ⲆⲆ[935][v554.ΔⲆᐃ].push(ᐃⲆ.ᐃᐃΔⲆΔⲆΔⵠΔ);
    ⲆⲆ[941] = [];
    ⲆⲆ[941][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[941][v554.ΔⲆᐃ] = [];
    ⲆⲆ[941][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃΔΔΔᐃΔⲆ);
    ⲆⲆ[941][v554.ᐃⵠⵠ].push(ᐃⲆ.ΔᐃΔΔΔΔᐃ);
    ⲆⲆ[941][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆⵠⲆΔⲆⵠⵠ);
    ⲆⲆ[941][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠᐃⲆⵠⲆᐃⵠ);
    ⲆⲆ[941][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⵠⲆᐃᐃΔΔ);
    ⲆⲆ[941][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⵠΔⵠⲆᐃΔ);
    ⲆⲆ[53] = [];
    ⲆⲆ[53][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⵠⵠᐃᐃⲆ;
    ⲆⲆ[53][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔⲆΔⲆⵠΔ;
    ⲆⲆ[54] = [];
    ⲆⲆ[54][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⵠⲆⲆⲆᐃ;
    ⲆⲆ[54][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠΔᐃⲆΔⲆ;
    ⲆⲆ[241] = [];
    ⲆⲆ[241][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[241][v554.ΔⲆᐃ] = [];
    ⲆⲆ[241][v554.ᐃⵠⵠ].push(ᐃⲆ.Ⲇⵠᐃⵠᐃⵠⵠ);
    ⲆⲆ[241][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⲆⲆᐃⵠⵠⵠ);
    ⲆⲆ[241][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⵠⵠⲆⵠᐃΔ);
    ⲆⲆ[241][v554.ΔⲆᐃ].push(ᐃⲆ.ᐃΔᐃΔⲆⵠⲆ);
    ⲆⲆ[241][v554.ΔⲆᐃ].push(ᐃⲆ.ᐃᐃΔΔΔΔᐃ);
    ⲆⲆ[241][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⵠⲆᐃⲆΔᐃ);
    ⲆⲆ[202] = [];
    ⲆⲆ[202][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[202][v554.ΔⲆᐃ] = [];
    ⲆⲆ[202][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⵠᐃΔᐃΔᐃ);
    ⲆⲆ[202][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆⲆⲆΔᐃᐃⵠ);
    ⲆⲆ[202][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆⲆⵠΔⵠⵠⲆ);
    ⲆⲆ[202][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⲆⵠΔⵠⲆⲆ);
    ⲆⲆ[202][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⲆᐃᐃᐃⵠⵠ);
    ⲆⲆ[202][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⵠⵠΔΔⲆᐃ);
    ⲆⲆ[203] = [];
    ⲆⲆ[203][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[203][v554.ΔⲆᐃ] = [];
    ⲆⲆ[203][v554.ᐃⵠⵠ].push(ᐃⲆ.ΔᐃⲆΔⲆⲆⲆ);
    ⲆⲆ[203][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⵠⲆΔΔᐃⲆ);
    ⲆⲆ[203][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃᐃⵠⵠᐃⲆΔ);
    ⲆⲆ[203][v554.ᐃⵠⵠ].push(ᐃⲆ.ΔᐃⵠⲆⵠⵠⵠ);
    ⲆⲆ[203][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠᐃᐃᐃⵠⲆⵠ);
    ⲆⲆ[203][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆⵠΔⲆⲆᐃⵠ);
    ⲆⲆ[203][v554.ΔⲆᐃ].push(ᐃⲆ.ΔΔΔⲆⲆⵠᐃ);
    ⲆⲆ[203][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⲆⲆⲆᐃᐃΔ);
    ⲆⲆ[203][v554.ΔⲆᐃ].push(ᐃⲆ.ΔᐃⵠⵠΔΔᐃ);
    ⲆⲆ[203][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆΔΔⵠᐃⵠᐃ);
    ⲆⲆ[203][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆᐃᐃᐃΔΔΔ);
    ⲆⲆ[203][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⵠΔⵠⵠⲆΔ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ] = [];
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ] = [];
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ].push(ᐃⲆ.ΔⲆⵠⲆΔⲆⲆ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃᐃΔᐃⲆᐃⵠ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆᐃᐃΔᐃΔⲆ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔⵠⵠΔΔⵠ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔⵠᐃⲆⵠΔ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃΔᐃΔⵠΔⵠ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ].push(ᐃⲆ.ΔᐃᐃΔΔⵠⲆ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⵠⲆΔⲆⵠΔ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⲆⲆᐃΔΔΔ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠΔⵠᐃᐃⲆΔ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⵠΔᐃᐃⲆΔ);
    ⲆⲆ[v554.ⵠⲆΔⵠⵠ][v554.ΔⲆᐃ].push(ᐃⲆ.ⵠⵠᐃΔᐃⲆⵠ);
    ⲆⲆ[918] = [];
    ⲆⲆ[918][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃΔΔᐃⵠΔ;
    ⲆⲆ[918][v554.ΔⲆᐃ] = ᐃⲆ.Δᐃᐃⵠᐃᐃᐃ;
    ⲆⲆ[919] = ᐃⲆ.ΔᐃᐃᐃⲆⵠΔ;
    ⲆⲆ[56] = [];
    ⲆⲆ[56][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆᐃⲆⲆᐃΔⲆΔ;
    ⲆⲆ[56][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⵠⲆΔΔᐃΔᐃ;
    ⲆⲆ[223] = [];
    ⲆⲆ[223][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠⵠᐃΔᐃⵠ;
    ⲆⲆ[223][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⲆᐃᐃⲆᐃ;
    ⲆⲆ[224] = [];
    ⲆⲆ[224][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃⵠⵠΔⲆⲆ;
    ⲆⲆ[224][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⲆⲆⲆΔⲆ;
    ⲆⲆ[236] = [];
    ⲆⲆ[236][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠᐃΔⵠΔΔ;
    ⲆⲆ[236][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆΔᐃᐃᐃΔ;
    ⲆⲆ[1033] = [];
    ⲆⲆ[1033][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⵠⵠΔⵠⲆ;
    ⲆⲆ[1033][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃᐃⵠⲆⵠⵠ;
    ⲆⲆ[1034] = ᐃⲆ.ⲆⵠᐃⲆΔᐃΔ;
    ⲆⲆ[1150] = [];
    ⲆⲆ[1150][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠΔΔⵠⲆΔ;
    ⲆⲆ[1150][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠΔⵠⵠⲆⵠ;
    ⲆⲆ[1152] = [];
    ⲆⲆ[1152][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃᐃⲆⲆᐃⲆ;
    ⲆⲆ[1152][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⵠⵠⲆⵠⵠ;
    ⲆⲆ[1149] = ᐃⲆ.ⲆΔⵠΔΔᐃⵠ;
    ⲆⲆ[1151] = ᐃⲆ.ᐃⵠⲆᐃⲆΔⵠ;
    ⲆⲆ[1153] = ᐃⲆ.ⵠᐃΔⵠΔⲆⲆ;
    ⲆⲆ[1143] = [];
    ⲆⲆ[1143][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⵠᐃΔⵠΔ;
    ⲆⲆ[1143][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃᐃΔⵠΔⵠ;
    ⲆⲆ[1145] = [];
    ⲆⲆ[1145][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆⵠⵠᐃⲆᐃ;
    ⲆⲆ[1145][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃⵠⵠⵠⲆⲆ;
    ⲆⲆ[1146] = [];
    ⲆⲆ[1146][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠΔⵠᐃΔⵠ;
    ⲆⲆ[1146][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⲆΔᐃⲆᐃ;
    ⲆⲆ[1144] = ᐃⲆ.ⲆΔⲆᐃᐃᐃⲆ;
    ⲆⲆ[1148] = ᐃⲆ.ⵠⲆⵠᐃⲆⵠⵠ;
    ⲆⲆ[1147] = ᐃⲆ.ⲆΔⲆᐃⲆⲆⵠ;
    ⲆⲆ[1053] = [];
    ⲆⲆ[1053][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠᐃⵠⲆⲆⲆ;
    ⲆⲆ[1053][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔΔⵠⵠⵠΔ;
    ⲆⲆ[1055] = [];
    ⲆⲆ[1055][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃⵠᐃᐃⲆΔ;
    ⲆⲆ[1055][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠⵠⵠᐃᐃΔ;
    ⲆⲆ[231] = [];
    ⲆⲆ[231][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠᐃⲆΔΔΔ;
    ⲆⲆ[231][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠΔᐃᐃᐃⵠ;
    ⲆⲆ[1060] = [];
    ⲆⲆ[1060][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆⲆⲆᐃⵠⵠ;
    ⲆⲆ[1060][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆᐃⲆΔⵠⲆ;
    ⲆⲆ[1063] = [];
    ⲆⲆ[1063][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃΔᐃΔᐃᐃⵠ;
    ⲆⲆ[1063][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⲆⲆᐃᐃᐃ;
    ⲆⲆ[1059] = [];
    ⲆⲆ[1059][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆⵠᐃⲆΔᐃ;
    ⲆⲆ[1059][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔΔΔΔⵠⲆ;
    ⲆⲆ[1062] = [];
    ⲆⲆ[1062][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔΔⵠΔΔⵠ;
    ⲆⲆ[1062][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠⵠΔΔΔᐃ;
    ⲆⲆ[1056] = ᐃⲆ.ⵠᐃⲆΔΔⵠᐃ;
    ⲆⲆ[1057] = ᐃⲆ.ΔᐃⵠᐃΔⵠᐃ;
    ⲆⲆ[1058] = ᐃⲆ.ΔΔΔΔⲆⵠᐃ;
    ⲆⲆ[1065] = ᐃⲆ.ⲆⵠⲆᐃᐃᐃΔ;
    ⲆⲆ[1066] = ᐃⲆ.ᐃᐃᐃⲆΔⲆⲆ;
    ⲆⲆ[1067] = ᐃⲆ.ΔⲆΔⵠᐃⲆΔ;
    ⲆⲆ[1222] = [];
    ⲆⲆ[1222][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃΔⲆΔⲆΔ;
    ⲆⲆ[1222][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔᐃᐃⵠΔᐃ;
    ⲆⲆ[248] = [];
    ⲆⲆ[248][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔᐃⵠΔᐃⲆ;
    ⲆⲆ[248][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠⲆᐃᐃΔⵠ;
    ⲆⲆ[1218] = [];
    ⲆⲆ[1218][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠΔᐃⲆⵠᐃ;
    ⲆⲆ[1218][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⵠᐃΔⲆⲆ;
    ⲆⲆ[1221] = [];
    ⲆⲆ[1221][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⵠΔⵠⲆⲆ;
    ⲆⲆ[1221][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃᐃᐃⲆⵠΔ;
    ⲆⲆ[1223] = ᐃⲆ.ᐃᐃⵠⲆᐃⲆΔ;
    ⲆⲆ[1219] = ᐃⲆ.ⲆⵠⵠᐃⲆⲆⲆ;
    ⲆⲆ[1068] = [];
    ⲆⲆ[1068][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆⵠⵠᐃⲆᐃ;
    ⲆⲆ[1068][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠΔΔΔᐃΔ;
    ⲆⲆ[232] = [];
    ⲆⲆ[232][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⲆⵠⵠⵠΔ;
    ⲆⲆ[232][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔⵠⲆᐃΔⵠ;
    ⲆⲆ[1070] = [];
    ⲆⲆ[1070][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠⵠΔⵠⲆΔ;
    ⲆⲆ[1070][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔΔᐃⲆⵠΔ;
    ⲆⲆ[1072] = [];
    ⲆⲆ[1072][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃΔⵠⲆⲆΔ;
    ⲆⲆ[1072][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔᐃᐃⲆⵠⲆ;
    ⲆⲆ[1075] = [];
    ⲆⲆ[1075][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔᐃΔⵠΔΔ;
    ⲆⲆ[1075][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃⲆⵠΔⵠᐃ;
    ⲆⲆ[1071] = [];
    ⲆⲆ[1071][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠⲆⵠΔⵠᐃ;
    ⲆⲆ[1071][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆᐃⲆΔᐃΔ;
    ⲆⲆ[1074] = [];
    ⲆⲆ[1074][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃΔᐃⲆⵠᐃ;
    ⲆⲆ[1074][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆⵠᐃᐃΔΔ;
    ⲆⲆ[1073] = [];
    ⲆⲆ[1073][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃⲆⲆᐃᐃΔ;
    ⲆⲆ[1073][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠΔᐃᐃΔΔ;
    ⲆⲆ[1076] = [];
    ⲆⲆ[1076][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⲆⲆⲆⵠᐃ;
    ⲆⲆ[1076][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃᐃⵠᐃⲆᐃ;
    ⲆⲆ[1077] = ᐃⲆ.ΔⲆⲆΔⲆᐃᐃ;
    ⲆⲆ[1078] = ᐃⲆ.ᐃᐃⲆⲆᐃⵠⲆ;
    ⲆⲆ[1079] = ᐃⲆ.ᐃΔᐃΔⵠᐃⲆ;
    ⲆⲆ[1083] = [];
    ⲆⲆ[1083][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠΔⲆΔᐃⵠ;
    ⲆⲆ[1083][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃⵠⲆΔΔᐃ;
    ⲆⲆ[233] = [];
    ⲆⲆ[233][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆᐃⲆⵠΔᐃ;
    ⲆⲆ[233][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⵠᐃᐃᐃᐃ;
    ⲆⲆ[1085] = [];
    ⲆⲆ[1085][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠΔⲆΔⲆΔ;
    ⲆⲆ[1085][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔᐃⵠᐃᐃⲆ;
    ⲆⲆ[1087] = [];
    ⲆⲆ[1087][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠΔⵠΔᐃⲆ;
    ⲆⲆ[1087][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔⵠΔⲆΔⲆ;
    ⲆⲆ[1090] = [];
    ⲆⲆ[1090][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃΔⵠΔⵠⵠ;
    ⲆⲆ[1090][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆⲆᐃΔⲆⵠ;
    ⲆⲆ[1086] = [];
    ⲆⲆ[1086][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠᐃⵠᐃⵠΔ;
    ⲆⲆ[1086][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔΔⲆΔⲆⵠ;
    ⲆⲆ[1089] = [];
    ⲆⲆ[1089][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆⵠⲆⵠⲆⵠ;
    ⲆⲆ[1089][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔΔΔⵠⵠΔ;
    ⲆⲆ[1088] = [];
    ⲆⲆ[1088][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆⵠᐃⲆⵠᐃ;
    ⲆⲆ[1088][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔᐃᐃΔⲆᐃ;
    ⲆⲆ[1091] = [];
    ⲆⲆ[1091][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⲆⵠΔⵠⲆ;
    ⲆⲆ[1091][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆⲆᐃΔⲆᐃ;
    ⲆⲆ[1092] = ᐃⲆ.ⵠⲆⲆΔⲆΔΔ;
    ⲆⲆ[1093] = ᐃⲆ.ⲆⲆΔⵠⵠⵠⵠ;
    ⲆⲆ[1094] = ᐃⲆ.ⵠΔΔᐃᐃᐃΔ;
    ⲆⲆ[1098] = [];
    ⲆⲆ[1098][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔⲆⲆⲆᐃᐃ;
    ⲆⲆ[1098][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆᐃⵠⲆⲆᐃ;
    ⲆⲆ[235] = [];
    ⲆⲆ[235][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃᐃᐃⵠᐃⲆᐃ;
    ⲆⲆ[235][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔⵠⵠⵠⲆⵠ;
    ⲆⲆ[1115] = ᐃⲆ.ΔᐃⲆᐃⵠΔⲆ;
    ⲆⲆ[1113] = [];
    ⲆⲆ[1113][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃΔᐃΔⲆⵠΔ;
    ⲆⲆ[1113][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆⵠⵠⵠⲆⲆ;
    ⲆⲆ[1114] = [];
    ⲆⲆ[1114][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠᐃᐃᐃΔᐃ;
    ⲆⲆ[1114][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⵠΔᐃⵠⲆ;
    ⲆⲆ[1100] = [];
    ⲆⲆ[1100][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃᐃⵠᐃⲆⵠ;
    ⲆⲆ[1100][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆΔⵠⵠΔⲆ;
    ⲆⲆ[1102] = [];
    ⲆⲆ[1102][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃΔⲆΔⲆΔΔ;
    ⲆⲆ[1102][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔΔΔᐃⵠⲆ;
    ⲆⲆ[1105] = [];
    ⲆⲆ[1105][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃⲆᐃⲆᐃⲆ;
    ⲆⲆ[1105][v554.ΔⲆᐃ] = ᐃⲆ.Δᐃᐃⵠⵠⵠᐃ;
    ⲆⲆ[1101] = [];
    ⲆⲆ[1101][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃΔΔΔᐃⲆ;
    ⲆⲆ[1101][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃᐃⵠΔⵠⲆ;
    ⲆⲆ[1104] = [];
    ⲆⲆ[1104][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃΔΔⲆᐃⵠⵠ;
    ⲆⲆ[1104][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃΔΔⲆⵠΔ;
    ⲆⲆ[1103] = [];
    ⲆⲆ[1103][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔⲆᐃᐃⲆⲆ;
    ⲆⲆ[1103][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃᐃᐃΔⲆⵠ;
    ⲆⲆ[1106] = [];
    ⲆⲆ[1106][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠΔᐃΔⲆⲆ;
    ⲆⲆ[1106][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆᐃᐃᐃⵠΔ;
    ⲆⲆ[1107] = ᐃⲆ.ᐃΔΔΔΔᐃᐃ;
    ⲆⲆ[1108] = ᐃⲆ.ΔΔᐃᐃΔᐃΔ;
    ⲆⲆ[1109] = ᐃⲆ.ⲆⵠⲆⵠⲆᐃⲆ;
    ⲆⲆ[1119] = [];
    ⲆⲆ[1119][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆΔⲆⲆΔΔ;
    ⲆⲆ[1119][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠΔⵠΔᐃⵠ;
    ⲆⲆ[238] = [];
    ⲆⲆ[238][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔⵠⲆⲆΔⲆ;
    ⲆⲆ[238][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔⵠⲆΔΔᐃ;
    ⲆⲆ[1136] = ᐃⲆ.ᐃⲆⵠⵠᐃⲆⲆ;
    ⲆⲆ[1134] = [];
    ⲆⲆ[1134][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆᐃⵠⵠᐃᐃ;
    ⲆⲆ[1134][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔⲆΔⲆᐃ;
    ⲆⲆ[1135] = [];
    ⲆⲆ[1135][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔⲆⲆⵠⵠΔ;
    ⲆⲆ[1135][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⵠᐃⵠᐃᐃ;
    ⲆⲆ[1121] = [];
    ⲆⲆ[1121][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃⵠⲆᐃᐃⲆ;
    ⲆⲆ[1121][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃⲆΔⵠⵠΔ;
    ⲆⲆ[1123] = [];
    ⲆⲆ[1123][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔΔⲆⵠⵠΔ;
    ⲆⲆ[1123][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⵠⵠΔⲆΔ;
    ⲆⲆ[1126] = [];
    ⲆⲆ[1126][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠⵠᐃΔᐃⲆ;
    ⲆⲆ[1126][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃⲆⵠⲆⲆᐃ;
    ⲆⲆ[1122] = [];
    ⲆⲆ[1122][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⵠⵠⲆΔᐃ;
    ⲆⲆ[1122][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔΔΔⲆⲆ;
    ⲆⲆ[1125] = [];
    ⲆⲆ[1125][v554.ᐃⵠⵠ] = ᐃⲆ.ΔΔⲆⵠᐃᐃⵠ;
    ⲆⲆ[1125][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆᐃΔΔⲆᐃ;
    ⲆⲆ[1124] = [];
    ⲆⲆ[1124][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆᐃⵠᐃⵠⵠ;
    ⲆⲆ[1124][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⲆᐃΔⲆᐃⲆ;
    ⲆⲆ[1127] = [];
    ⲆⲆ[1127][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⵠΔΔⵠⵠ;
    ⲆⲆ[1127][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⵠⲆⵠᐃⵠ;
    ⲆⲆ[1128] = ᐃⲆ.ⲆⵠΔᐃⵠⲆⲆ;
    ⲆⲆ[1129] = ᐃⲆ.ⵠᐃΔΔⵠΔⲆ;
    ⲆⲆ[1130] = ᐃⲆ.ΔᐃⵠᐃᐃⲆⲆ;
    ⲆⲆ[1042] = [];
    ⲆⲆ[1042][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃᐃⲆⵠΔⲆ;
    ⲆⲆ[1042][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆᐃᐃⵠⲆΔ;
    ⲆⲆ[1043] = [];
    ⲆⲆ[1043][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆⵠⵠΔᐃΔ;
    ⲆⲆ[1043][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔᐃΔⲆᐃⵠ;
    ⲆⲆ[1044] = [];
    ⲆⲆ[1044][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔⲆΔΔΔⵠ;
    ⲆⲆ[1044][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠⵠᐃⵠΔᐃ;
    ⲆⲆ[228] = [];
    ⲆⲆ[228][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃᐃᐃⵠⵠΔ;
    ⲆⲆ[228][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃᐃᐃⵠⵠΔ;
    ⲆⲆ[234] = [];
    ⲆⲆ[234][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠⵠⲆᐃΔⲆ;
    ⲆⲆ[234][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠⵠⲆᐃΔⲆ;
    ⲆⲆ[249] = [];
    ⲆⲆ[249][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃⲆⲆᐃᐃⲆ;
    ⲆⲆ[249][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⲆⲆᐃᐃⲆ;
    ⲆⲆ[1045] = ᐃⲆ.ΔⲆⲆΔᐃⲆⵠ;
    ⲆⲆ[89] = [];
    ⲆⲆ[89][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔⵠΔᐃᐃⵠ;
    ⲆⲆ[89][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆⲆⵠᐃⲆΔ;
    ⲆⲆ[92] = [];
    ⲆⲆ[92][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆΔⲆᐃⵠΔ;
    ⲆⲆ[92][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⲆΔⲆⲆⵠ;
    ⲆⲆ[247] = [];
    ⲆⲆ[247][v554.ᐃⵠⵠ] = [ᐃⲆ.ⵠⲆⵠⵠΔΔΔ, ᐃⲆ.ΔⲆⲆΔᐃΔΔ, ᐃⲆ.ⵠᐃᐃᐃⲆⵠᐃ, ᐃⲆ.ⲆⵠΔⲆᐃᐃᐃ, ᐃⲆ.ᐃⵠΔᐃΔᐃΔ, ᐃⲆ.ⵠⵠⲆⵠⵠⵠⵠ, ᐃⲆ.ΔΔⵠⲆΔᐃᐃ, ᐃⲆ.ⵠⲆΔⵠᐃΔᐃ, ᐃⲆ.ⲆᐃΔᐃⲆⵠᐃ];
    ⲆⲆ[247][v554.ΔⲆᐃ] = [ᐃⲆ.ⲆⲆⵠⲆᐃᐃⲆ, ᐃⲆ.ⵠⵠΔΔᐃΔⲆ, ᐃⲆ.ᐃᐃΔⵠΔΔⲆ, ᐃⲆ.Ⲇᐃⵠᐃᐃⵠᐃ, ᐃⲆ.ⵠⲆΔΔᐃΔⲆ, ᐃⲆ.ᐃⲆΔⵠᐃⲆᐃ, ᐃⲆ.ⵠΔⵠⲆΔⲆⲆ, ᐃⲆ.ⵠⲆΔⵠᐃΔᐃ, ᐃⲆ.ΔⲆⵠⲆⵠᐃⲆ];
    ⲆⲆ[93] = [];
    ⲆⲆ[93][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃΔⵠΔⲆΔ;
    ⲆⲆ[93][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⲆΔᐃⲆΔΔ;
    ⲆⲆ[225] = [];
    ⲆⲆ[225][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠᐃΔᐃⵠⲆ;
    ⲆⲆ[225][v554.ΔⲆᐃ] = ᐃⲆ.ᐃᐃΔᐃⵠⵠᐃ;
    ⲆⲆ[226] = [];
    ⲆⲆ[226][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔⵠᐃᐃⲆⲆ;
    ⲆⲆ[226][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠⵠΔΔΔᐃ;
    ⲆⲆ[24] = [];
    ⲆⲆ[24][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠᐃⵠⵠⵠΔ;
    ⲆⲆ[24][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠᐃΔΔⲆⵠ;
    ⲆⲆ[88] = [];
    ⲆⲆ[88][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆⲆⲆⵠⲆⵠ;
    ⲆⲆ[88][v554.ΔⲆᐃ] = ᐃⲆ.ⵠⵠⲆΔΔΔᐃ;
    ⲆⲆ[87] = [];
    ⲆⲆ[87][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠᐃΔⲆⵠΔⲆ;
    ⲆⲆ[87][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆΔΔᐃΔΔ;
    ⲆⲆ[82] = [];
    ⲆⲆ[82][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆᐃⲆΔᐃᐃ;
    ⲆⲆ[82][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⵠᐃⵠⲆⵠᐃ;
    ⲆⲆ[621] = [];
    ⲆⲆ[621][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[621][v554.ΔⲆᐃ] = [];
    ⲆⲆ[621][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔᐃⲆⲆΔᐃⵠΔ);
    ⲆⲆ[621][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠΔΔⵠⵠⵠⲆⵠⲆ);
    ⲆⲆ[621][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆΔΔⲆⵠᐃⵠⵠⵠ);
    ⲆⲆ[621][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆᐃⲆΔᐃⵠⵠⲆΔ);
    ⲆⲆ[621][v554.ΔⲆᐃ].push(ᐃⲆ.ΔΔΔΔⵠⵠⵠⲆΔ);
    ⲆⲆ[621][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⲆΔΔⵠΔᐃᐃⲆ);
    ⲆⲆ[619] = [];
    ⲆⲆ[619][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[619][v554.ΔⲆᐃ] = [];
    ⲆⲆ[619][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆΔΔΔⲆⵠⲆⲆΔ);
    ⲆⲆ[619][v554.ᐃⵠⵠ].push(ᐃⲆ.ΔⵠⵠΔΔⵠⲆⵠΔ);
    ⲆⲆ[619][v554.ᐃⵠⵠ].push(ᐃⲆ.ⲆᐃⲆᐃΔⵠⵠΔᐃ);
    ⲆⲆ[619][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⵠⵠⵠⲆᐃΔΔⲆ);
    ⲆⲆ[619][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⲆᐃΔⲆⲆΔⲆᐃ);
    ⲆⲆ[619][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆⲆⵠΔᐃⲆΔᐃⵠ);
    ⲆⲆ[620] = [];
    ⲆⲆ[620][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[620][v554.ΔⲆᐃ] = [];
    ⲆⲆ[620][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠᐃΔΔⵠΔⵠΔΔ);
    ⲆⲆ[620][v554.ᐃⵠⵠ].push(ᐃⲆ.ⵠⵠⲆΔᐃⵠΔᐃⲆ);
    ⲆⲆ[620][v554.ᐃⵠⵠ].push(ᐃⲆ.ᐃⵠΔⵠⵠᐃΔⲆᐃ);
    ⲆⲆ[620][v554.ΔⲆᐃ].push(ᐃⲆ.ΔⲆⵠⲆΔⲆΔⲆⲆ);
    ⲆⲆ[620][v554.ΔⲆᐃ].push(ᐃⲆ.ⲆᐃⵠⵠΔⲆⲆⵠⵠ);
    ⲆⲆ[620][v554.ΔⲆᐃ].push(ᐃⲆ.ᐃⲆΔᐃᐃΔΔⲆⲆ);
    ΔΔⵠⲆ.g = [];
    ΔΔⵠⲆ.g[0] = [ᐃⲆ.ⵠⵠΔΔⵠᐃⲆ, ᐃⲆ.ΔⲆΔⲆⲆⵠⲆ];
    ΔΔⵠⲆ.g[1] = ΔΔⵠⲆ.g[0];
    ΔΔⵠⲆ.g[2] = [ᐃⲆ.ᐃⲆΔⵠⵠⵠΔ, ᐃⲆ.ⵠᐃⲆⵠⲆⵠᐃ];
    ΔΔⵠⲆ.m = [];
    ΔΔⵠⲆ.m[0] = [ᐃⲆ.ⲆΔⵠΔᐃⲆΔ, ᐃⲆ.ΔᐃⵠᐃⵠᐃⲆ];
    ΔΔⵠⲆ.m[1] = ΔΔⵠⲆ.m[0];
    ΔΔⵠⲆ.m[2] = [ᐃⲆ.ⵠⲆΔΔΔΔⵠ, ᐃⲆ.ᐃΔⵠⲆⲆΔⵠ];
    ΔΔⵠⲆ.la = [];
    ΔΔⵠⲆ.la[0] = [ᐃⲆ.ΔⵠⲆΔⲆᐃΔ, ᐃⲆ.ᐃΔⲆᐃᐃᐃΔ];
    ΔΔⵠⲆ.la[1] = ΔΔⵠⲆ.la[0];
    ΔΔⵠⲆ.la[2] = ΔΔⵠⲆ.la[0];
    ΔΔⵠⲆ.la[3] = ΔΔⵠⲆ.la[0];
    ΔΔⵠⲆ.la[4] = ΔΔⵠⲆ.la[0];
    ΔΔⵠⲆ.la[5] = ΔΔⵠⲆ.la[0];
    ΔΔⵠⲆ.s = [];
    ΔΔⵠⲆ.s[0] = [ᐃⲆ.Ⲇⵠⵠⵠⵠⵠᐃ, ᐃⲆ.ⲆⲆᐃⵠΔⲆⵠ];
    ΔΔⵠⲆ.s[1] = ΔΔⵠⲆ.s[0];
    ΔΔⵠⲆ.s[2] = [ᐃⲆ.ᐃⲆΔⲆᐃΔΔ, ᐃⲆ.ᐃᐃΔⵠᐃⵠΔ];
    ΔΔⵠⲆ.p = [];
    ΔΔⵠⲆ.p[0] = [ᐃⲆ.ΔⲆⵠᐃΔΔⵠ, ᐃⲆ.ΔⲆⵠᐃΔΔⵠ];
    ΔΔⵠⲆ.a = [];
    ΔΔⵠⲆ.a[0] = [ᐃⲆ.ⵠⵠΔⵠΔᐃⵠ, ᐃⲆ.ΔⵠⲆⵠᐃΔᐃ];
    ΔΔⵠⲆ.a[1] = ΔΔⵠⲆ.a[0];
    ΔΔⵠⲆ.a[2] = ΔΔⵠⲆ.a[0];
    ΔΔⵠⲆ.d = [];
    ΔΔⵠⲆ.d[0] = [ᐃⲆ.ⵠᐃᐃⲆⵠΔᐃ, ᐃⲆ.ᐃⲆΔⵠⲆΔⵠ];
    ΔΔⵠⲆ.d[1] = ΔΔⵠⲆ.d[0];
    ΔΔⵠⲆ.d[2] = ΔΔⵠⲆ.d[0];
    ΔΔⵠⲆ.re = [];
    ΔΔⵠⲆ.re[0] = [ᐃⲆ.ⵠᐃΔⲆⲆᐃᐃ, ᐃⲆ.ⲆⵠⲆᐃⲆⲆᐃ];
    ΔΔⵠⲆ.re[1] = ΔΔⵠⲆ.re[0];
    ΔΔⵠⲆ.re[2] = ΔΔⵠⲆ.re[0];
    ΔΔⵠⲆ.f = [];
    ΔΔⵠⲆ.f[0] = [ᐃⲆ.ⵠⲆΔᐃΔᐃΔ, ᐃⲆ.ⵠΔⵠᐃⲆΔᐃ];
    ΔΔⵠⲆ.f[1] = ΔΔⵠⲆ.f[0];
    ΔΔⵠⲆ.f[2] = ΔΔⵠⲆ.f[0];
    ΔΔⵠⲆ.isl = [];
    ΔΔⵠⲆ.isl[0] = [ᐃⲆ.ᐃᐃⵠᐃⵠⵠΔ, ᐃⲆ.ΔⲆⲆΔⵠΔⵠ];
    ΔΔⵠⲆ.isl[1] = ΔΔⵠⲆ.isl[0];
    ΔΔⵠⲆ.isl[2] = ΔΔⵠⲆ.isl[0];
    ΔΔⵠⲆ.c = [];
    ΔΔⵠⲆ.c[0] = [ᐃⲆ.ᐃⵠⲆⵠⵠⵠᐃ, ᐃⲆ.ΔⵠΔⵠⵠΔᐃ];
    ΔΔⵠⲆ.c[1] = ΔΔⵠⲆ.c[0];
    ΔΔⵠⲆ.c[2] = ΔΔⵠⲆ.c[0];
    ΔΔⵠⲆ.wtb = [];
    ΔΔⵠⲆ.wtb[0] = [ᐃⲆ.ΔⵠᐃΔΔᐃᐃ, ᐃⲆ.ΔⲆᐃᐃⲆⲆⲆ];
    ΔΔⵠⲆ.PIRANHA = [ᐃⲆ.ⵠᐃⵠⵠⲆΔⵠ, ᐃⲆ.ⵠⵠᐃⵠⵠⲆΔ];
    ΔΔⵠⲆ.KRAKEN = [ᐃⲆ.ᐃΔⵠΔⲆⵠᐃ, ᐃⲆ.ᐃΔⵠΔᐃΔΔ];
    ΔΔⵠⲆ.FOX = [ᐃⲆ.ᐃⵠᐃⵠΔᐃⵠ, ᐃⲆ.ⵠΔᐃΔΔⵠΔ];
    ΔΔⵠⲆ.WOLF = [ᐃⲆ.ΔΔΔᐃΔΔΔ, ᐃⲆ.ⵠⵠⲆⵠⵠⵠΔ];
    ΔΔⵠⲆ.SPIDER = [ᐃⲆ.ⲆⵠΔᐃⵠⲆⵠ, ᐃⲆ.ᐃᐃᐃⵠΔᐃⲆ];
    ΔΔⵠⲆ.BEAR = [ᐃⲆ.ΔΔΔⵠⵠΔⲆ, ᐃⲆ.ⲆⲆⲆᐃᐃⲆΔ];
    ΔΔⵠⲆ.CAVE = [ᐃⲆ.ΔΔⵠⵠΔᐃⵠ, ᐃⲆ.ⲆⲆⲆⵠⵠΔΔ];
    ΔΔⵠⲆ.MAP = [ᐃⲆ.ᐃⵠΔⲆΔΔᐃ, ᐃⲆ.ᐃᐃⵠᐃⲆⲆᐃ];
    ΔΔⵠⲆ.FOREST = [ᐃⲆ.ᐃᐃⵠⲆⲆΔΔ, ᐃⲆ.ΔᐃⵠⲆⵠᐃΔ];
    ΔΔⵠⲆ.WINTER = [ᐃⲆ.ᐃⵠᐃᐃⵠⲆⵠ, ᐃⲆ.ⵠⲆΔⵠⵠᐃⲆ];
    ΔΔⵠⲆ.DESERT = [ᐃⲆ.ⵠⲆΔᐃⵠᐃᐃ, ᐃⲆ.ᐃⲆΔᐃⵠᐃΔ];
    ΔΔⵠⲆ.LAVA = [ᐃⲆ.ᐃⵠⵠᐃⵠᐃΔ, ᐃⲆ.ΔⲆⵠⵠⵠΔΔ];
    for (var v1362 in ΔΔⵠⲆ) {
      for (var v1363 = ΔΔⵠⲆ[v1362], v1364 = 0; v1364 < v1363.length; v1364++) {
        var v1365 = v1363[v1364];
        if (v1365.ⵠᐃⵠᐃΔⵠⲆ !== vVVVUndefined273) {
          v1365.ⵠᐃⵠᐃΔⵠⲆ();
        } else if (v1365.length > 0) {
          for (var v1366 = 0; v1366 < v1365.length; v1366++) {
            if (v1365[v1366].ⵠᐃⵠᐃΔⵠⲆ !== vVVVUndefined1972) {
              v1365[v1366].ⵠᐃⵠᐃΔⵠⲆ();
            }
          }
        }
      }
    }
    console.log(vVVVUndefined1975, vVVVUndefined1975);
  }
  function f272(p1040, p1041, p1042) {
    var v1367 = document.createElement("canvas");
    var v1368 = v1367.getContext("2d");
    v1367.width = p1040 * 163;
    v1367.height = p1040 * 163;
    v1368.save();
    v1368.translate(p1040 * 82.5, p1040 * 81.1015625);
    v1368.rotate(0);
    f89(v1368, p1040 * -65.5, p1040 * -66, p1040 * 131, p1040 * 131, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[1]);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 80, p1040 * 17.1015625);
    f89(v1368, p1040 * -64, p1040 * -4.5, p1040 * 129, p1040 * 9, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 80, p1040 * 17.1015625);
    f89(v1368, p1040 * -64, p1040 * -4.5, p1040 * 129, p1040 * 9, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 145.5, p1040 * 83.6015625);
    f89(v1368, p1040 * -4.5, p1040 * -61, p1040 * 9, p1040 * 129, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 145.5, p1040 * 83.6015625);
    f89(v1368, p1040 * -4.5, p1040 * -61, p1040 * 9, p1040 * 129, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 17.5, p1040 * 82.6015625);
    f89(v1368, p1040 * -4.5, p1040 * -65, p1040 * 9, p1040 * 129, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 17.5, p1040 * 82.6015625);
    f89(v1368, p1040 * -4.5, p1040 * -65, p1040 * 9, p1040 * 129, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 80.5, p1040 * 145.6015625);
    f89(v1368, p1040 * -65.5, p1040 * -4, p1040 * 129, p1040 * 9, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 80.5, p1040 * 145.6015625);
    f89(v1368, p1040 * -65.5, p1040 * -4, p1040 * 129, p1040 * 9, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 17, p1040 * 18.1015625);
    f89(v1368, p1040 * -11, p1040 * -11.5, p1040 * 22, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 17, p1040 * 18.1015625);
    f89(v1368, p1040 * -11, p1040 * -11.5, p1040 * 22, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 145.5, p1040 * 16.6015625);
    f89(v1368, p1040 * -10.5, p1040 * -11.5, p1040 * 21, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 145.5, p1040 * 16.6015625);
    f89(v1368, p1040 * -10.5, p1040 * -11.5, p1040 * 21, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 145.5, p1040 * 144.1015625);
    f89(v1368, p1040 * -10.5, p1040 * -11, p1040 * 22, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 145.5, p1040 * 144.1015625);
    f89(v1368, p1040 * -10.5, p1040 * -11, p1040 * 22, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    v1368.globalAlpha = p1041 ? 0.5 : 1;
    v1368.translate(p1040 * 5, p1040 * 5);
    v1368.save();
    v1368.translate(p1040 * 17.5, p1040 * 145.1015625);
    f89(v1368, p1040 * -11.5, p1040 * -12, p1040 * 22, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[0]);
    v1368.globalAlpha = 1;
    v1368.translate(p1040 * -5, p1040 * -5);
    v1368.save();
    v1368.translate(p1040 * 17.5, p1040 * 145.1015625);
    f89(v1368, p1040 * -11.5, p1040 * -12, p1040 * 22, p1040 * 22, p1040 * 5);
    v1368.restore();
    f86(v1368, p1042[2], p1042[3], p1040 * 3);
    return v1367;
  }
  function f273(p1043, p1044, p1045) {
    var v1369 = document.createElement("canvas");
    var v1370 = v1369.getContext("2d");
    v1369.width = p1043 * 465;
    v1369.height = p1043 * 310;
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 126, p1043 * 192);
    v1370.bezierCurveTo(p1043 * 198, p1043 * 202, p1043 * 245, p1043 * 203, p1043 * 335, p1043 * 194);
    v1370.bezierCurveTo(p1043 * 336, p1043 * 232, p1043 * 326, p1043 * 235, p1043 * 232, p1043 * 237);
    v1370.bezierCurveTo(p1043 * 161, p1043 * 235, p1043 * 122, p1043 * 235, p1043 * 126, p1043 * 193);
    v1370.closePath();
    f86(v1370, p1045[0], p1045[1], p1043 * 4);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 146, p1043 * 239);
    v1370.bezierCurveTo(p1043 * 174, p1043 * 74, p1043 * 287, p1043 * 88, p1043 * 320, p1043 * 240);
    v1370.bezierCurveTo(p1043 * 329, p1043 * 231, p1043 * 340, p1043 * 219, p1043 * 332, p1043 * 115);
    v1370.bezierCurveTo(p1043 * 330, p1043 * 40, p1043 * 144, p1043 * 30, p1043 * 129, p1043 * 116);
    v1370.bezierCurveTo(p1043 * 124, p1043 * 217, p1043 * 124, p1043 * 228, p1043 * 143, p1043 * 237);
    v1370.closePath();
    f86(v1370, p1045[0], p1045[1], p1043 * 4);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 126, p1043 * 193);
    v1370.bezierCurveTo(p1043 * 173, p1043 * 94, p1043 * 209, p1043 * 100, p1043 * 228, p1043 * 57);
    v1370.bezierCurveTo(p1043 * 190, p1043 * 112, p1043 * 165, p1043 * 115, p1043 * 127, p1043 * 184);
    v1370.closePath();
    f86(v1370, undefined, p1045[1], p1043 * 4);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 230, p1043 * 57);
    v1370.bezierCurveTo(p1043 * 266, p1043 * 117, p1043 * 310, p1043 * 130, p1043 * 332, p1043 * 183);
    v1370.bezierCurveTo(p1043 * 290, p1043 * 112, p1043 * 262, p1043 * 109, p1043 * 230, p1043 * 56);
    v1370.closePath();
    f86(v1370, vVVVUndefined27, p1045[1], p1043 * 4);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 154, p1043 * 212);
    v1370.bezierCurveTo(p1043 * 208, p1043 * 224, p1043 * 252, p1043 * 219, p1043 * 305, p1043 * 212);
    v1370.bezierCurveTo(p1043 * 267, p1043 * 219, p1043 * 204, p1043 * 222, p1043 * 155, p1043 * 212);
    v1370.closePath();
    f86(v1370, undefined, p1045[1], p1043 * 4);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 239, p1043 * 59);
    v1370.bezierCurveTo(p1043 * 302, p1043 * 72, p1043 * 325, p1043 * 84, p1043 * 326, p1043 * 115);
    v1370.bezierCurveTo(p1043 * 289, p1043 * 80, p1043 * 270, p1043 * 88, p1043 * 253, p1043 * 78);
    v1370.closePath();
    f86(v1370, p1045[2]);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 216, p1043 * 61);
    v1370.bezierCurveTo(p1043 * 209, p1043 * 70, p1043 * 209, p1043 * 70, p1043 * 202, p1043 * 79);
    v1370.bezierCurveTo(p1043 * 173, p1043 * 87, p1043 * 162, p1043 * 91, p1043 * 137, p1043 * 107);
    v1370.bezierCurveTo(p1043 * 153, p1043 * 78, p1043 * 174, p1043 * 67, p1043 * 212, p1043 * 62);
    v1370.closePath();
    f86(v1370, p1045[2]);
    v1370.beginPath();
    v1370.lineCap = "round";
    v1370.lineJoin = "round";
    v1370.moveTo(p1043 * 175, p1043 * 125);
    v1370.bezierCurveTo(p1043 * 218, p1043 * 94, p1043 * 238, p1043 * 90, p1043 * 281, p1043 * 125);
    v1370.bezierCurveTo(p1043 * 245, p1043 * 89, p1043 * 240, p1043 * 80, p1043 * 228, p1043 * 67);
    v1370.bezierCurveTo(p1043 * 207, p1043 * 100, p1043 * 192, p1043 * 104, p1043 * 177, p1043 * 123);
    v1370.closePath();
    f86(v1370, p1045[2]);
    return v1369;
  }
  function f274(p1046, p1047, p1048) {
    var v1371 = document.createElement("canvas");
    var v1372 = v1371.getContext("2d");
    v1371.width = p1046 * 137;
    v1371.height = p1046 * 129;
    v1372.globalAlpha = 0.4;
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 42.000030517578125, p1046 * 41.17047119140625);
    v1372.bezierCurveTo(p1046 * 45.000030517578125, p1046 * 38.17047119140625, p1046 * 49.000030517578125, p1046 * 37.17047119140625, p1046 * 62.000030517578125, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 94.00003051757812, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 100.00003051757812, p1046 * 38.17047119140625, p1046 * 102.00003051757812, p1046 * 38.17047119140625, p1046 * 101.00003051757812, p1046 * 47.17047119140625);
    v1372.bezierCurveTo(p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 80.17047119140625);
    v1372.bezierCurveTo(p1046 * 102.00003051757812, p1046 * 84.17047119140625, p1046 * 100.00003051757812, p1046 * 86.17047119140625, p1046 * 95.00003051757812, p1046 * 88.17047119140625);
    v1372.bezierCurveTo(p1046 * 84.00003051757812, p1046 * 94.17047119140625, p1046 * 89.00003051757812, p1046 * 94.17047119140625, p1046 * 79.00003051757812, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 40.000030517578125, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 86.17047119140625);
    v1372.bezierCurveTo(p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 53.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 47.17047119140625, p1046 * 34.000030517578125, p1046 * 47.17047119140625, p1046 * 40.000030517578125, p1046 * 42.17047119140625);
    v1372.closePath();
    f86(v1372, undefined, p1048[2], p1046 * 40);
    v1372.globalAlpha = 0.4;
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 42.000030517578125, p1046 * 41.17047119140625);
    v1372.bezierCurveTo(p1046 * 45.000030517578125, p1046 * 38.17047119140625, p1046 * 49.000030517578125, p1046 * 37.17047119140625, p1046 * 62.000030517578125, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 94.00003051757812, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 100.00003051757812, p1046 * 38.17047119140625, p1046 * 102.00003051757812, p1046 * 38.17047119140625, p1046 * 101.00003051757812, p1046 * 47.17047119140625);
    v1372.bezierCurveTo(p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 80.17047119140625);
    v1372.bezierCurveTo(p1046 * 102.00003051757812, p1046 * 84.17047119140625, p1046 * 100.00003051757812, p1046 * 86.17047119140625, p1046 * 95.00003051757812, p1046 * 88.17047119140625);
    v1372.bezierCurveTo(p1046 * 84.00003051757812, p1046 * 94.17047119140625, p1046 * 89.00003051757812, p1046 * 94.17047119140625, p1046 * 79.00003051757812, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 40.000030517578125, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 86.17047119140625);
    v1372.bezierCurveTo(p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 53.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 47.17047119140625, p1046 * 34.000030517578125, p1046 * 47.17047119140625, p1046 * 40.000030517578125, p1046 * 42.17047119140625);
    v1372.closePath();
    f86(v1372, undefined, p1048[1], p1046 * 20);
    v1372.globalAlpha = 0.8;
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 42.000030517578125, p1046 * 41.17047119140625);
    v1372.bezierCurveTo(p1046 * 45.000030517578125, p1046 * 38.17047119140625, p1046 * 49.000030517578125, p1046 * 37.17047119140625, p1046 * 62.000030517578125, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 94.00003051757812, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 100.00003051757812, p1046 * 38.17047119140625, p1046 * 102.00003051757812, p1046 * 38.17047119140625, p1046 * 101.00003051757812, p1046 * 47.17047119140625);
    v1372.bezierCurveTo(p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 80.17047119140625);
    v1372.bezierCurveTo(p1046 * 102.00003051757812, p1046 * 84.17047119140625, p1046 * 100.00003051757812, p1046 * 86.17047119140625, p1046 * 95.00003051757812, p1046 * 88.17047119140625);
    v1372.bezierCurveTo(p1046 * 84.00003051757812, p1046 * 94.17047119140625, p1046 * 89.00003051757812, p1046 * 94.17047119140625, p1046 * 79.00003051757812, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 40.000030517578125, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 86.17047119140625);
    v1372.bezierCurveTo(p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 53.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 47.17047119140625, p1046 * 34.000030517578125, p1046 * 47.17047119140625, p1046 * 40.000030517578125, p1046 * 42.17047119140625);
    v1372.closePath();
    f86(v1372, p1048[0], p1048[1], p1046 * 4);
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 51.000030517578125, p1046 * 37.9886474609375);
    v1372.bezierCurveTo(p1046 * 51.000030517578125, p1046 * 61.9886474609375, p1046 * 51.000030517578125, p1046 * 61.9886474609375, p1046 * 51.000030517578125, p1046 * 85.9886474609375);
    v1372.bezierCurveTo(p1046 * 75.50003051757812, p1046 * 85.9886474609375, p1046 * 75.50003051757812, p1046 * 85.9886474609375, p1046 * 100.00003051757812, p1046 * 85.9886474609375);
    v1372.bezierCurveTo(p1046 * 100.00003051757812, p1046 * 61.9886474609375, p1046 * 100.00003051757812, p1046 * 61.9886474609375, p1046 * 100.00003051757812, p1046 * 37.9886474609375);
    v1372.bezierCurveTo(p1046 * 76.00003051757812, p1046 * 37.9886474609375, p1046 * 76.00003051757812, p1046 * 37.9886474609375, p1046 * 52.000030517578125, p1046 * 37.9886474609375);
    v1372.closePath();
    f86(v1372, p1048[1], p1048[2], p1046 * 4);
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 99.00003051757812, p1046 * 38.9886474609375);
    v1372.bezierCurveTo(p1046 * 93.50003051757812, p1046 * 44.9886474609375, p1046 * 93.50003051757812, p1046 * 44.9886474609375, p1046 * 88.00003051757812, p1046 * 50.9886474609375);
    v1372.bezierCurveTo(p1046 * 88.00003051757812, p1046 * 72.4886474609375, p1046 * 88.00003051757812, p1046 * 72.4886474609375, p1046 * 88.00003051757812, p1046 * 93.9886474609375);
    v1372.bezierCurveTo(p1046 * 94.00003051757812, p1046 * 90.4886474609375, p1046 * 94.00003051757812, p1046 * 90.4886474609375, p1046 * 100.00003051757812, p1046 * 86.9886474609375);
    v1372.closePath();
    f86(v1372, p1048[1], p1048[2], p1046 * 4);
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 87.00003051757812, p1046 * 49.625);
    v1372.bezierCurveTo(p1046 * 61.000030517578125, p1046 * 49.625, p1046 * 61.000030517578125, p1046 * 49.625, p1046 * 35.000030517578125, p1046 * 49.625);
    v1372.bezierCurveTo(p1046 * 35.000030517578125, p1046 * 70.625, p1046 * 35.000030517578125, p1046 * 70.625, p1046 * 35.000030517578125, p1046 * 91.625);
    v1372.bezierCurveTo(p1046 * 60.500030517578125, p1046 * 91.625, p1046 * 60.500030517578125, p1046 * 91.625, p1046 * 86.00003051757812, p1046 * 91.625);
    v1372.bezierCurveTo(p1046 * 86.50003051757812, p1046 * 70.625, p1046 * 86.50003051757812, p1046 * 70.625, p1046 * 87.00003051757812, p1046 * 49.625);
    v1372.closePath();
    f86(v1372, p1048[1], p1048[3], p1046 * 4);
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 47.000030517578125, p1046 * 36.625);
    v1372.bezierCurveTo(p1046 * 73.00003051757812, p1046 * 37.125, p1046 * 73.00003051757812, p1046 * 37.125, p1046 * 99.00003051757812, p1046 * 37.625);
    v1372.bezierCurveTo(p1046 * 93.50003051757812, p1046 * 44.125, p1046 * 93.50003051757812, p1046 * 44.125, p1046 * 88.00003051757812, p1046 * 50.625);
    v1372.bezierCurveTo(p1046 * 60.500030517578125, p1046 * 50.125, p1046 * 60.500030517578125, p1046 * 50.125, p1046 * 33.000030517578125, p1046 * 49.625);
    v1372.closePath();
    f86(v1372, p1048[1], p1048[3], p1046 * 4);
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 53.000030517578125, p1046 * 52.625);
    v1372.bezierCurveTo(p1046 * 40.000030517578125, p1046 * 54.625, p1046 * 39.000030517578125, p1046 * 59.625, p1046 * 40.000030517578125, p1046 * 67.625);
    v1372.bezierCurveTo(p1046 * 45.000030517578125, p1046 * 59.625, p1046 * 48.000030517578125, p1046 * 58.625, p1046 * 54.000030517578125, p1046 * 53.625);
    v1372.closePath();
    f86(v1372, p1048[3]);
    v1372.globalAlpha = 1;
    v1372.beginPath();
    v1372.lineCap = "round";
    v1372.lineJoin = "round";
    v1372.moveTo(p1046 * 42.000030517578125, p1046 * 41.17047119140625);
    v1372.bezierCurveTo(p1046 * 45.000030517578125, p1046 * 38.17047119140625, p1046 * 49.000030517578125, p1046 * 37.17047119140625, p1046 * 62.000030517578125, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 78.00003051757812, p1046 * 38.17047119140625, p1046 * 94.00003051757812, p1046 * 38.17047119140625);
    v1372.bezierCurveTo(p1046 * 100.00003051757812, p1046 * 38.17047119140625, p1046 * 102.00003051757812, p1046 * 38.17047119140625, p1046 * 101.00003051757812, p1046 * 47.17047119140625);
    v1372.bezierCurveTo(p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 63.67047119140625, p1046 * 101.00003051757812, p1046 * 80.17047119140625);
    v1372.bezierCurveTo(p1046 * 102.00003051757812, p1046 * 84.17047119140625, p1046 * 100.00003051757812, p1046 * 86.17047119140625, p1046 * 95.00003051757812, p1046 * 88.17047119140625);
    v1372.bezierCurveTo(p1046 * 84.00003051757812, p1046 * 94.17047119140625, p1046 * 89.00003051757812, p1046 * 94.17047119140625, p1046 * 79.00003051757812, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 59.500030517578125, p1046 * 94.17047119140625, p1046 * 40.000030517578125, p1046 * 94.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 94.17047119140625, p1046 * 34.000030517578125, p1046 * 86.17047119140625);
    v1372.bezierCurveTo(p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 69.67047119140625, p1046 * 34.000030517578125, p1046 * 53.17047119140625);
    v1372.bezierCurveTo(p1046 * 33.000030517578125, p1046 * 47.17047119140625, p1046 * 34.000030517578125, p1046 * 47.17047119140625, p1046 * 40.000030517578125, p1046 * 42.17047119140625);
    v1372.closePath();
    f86(v1372, vVVVVUndefined1972, p1048[3], p1046 * 4);
    return v1371;
  }
  function f275(p1049, p1050, p1051) {
    var v1373 = document.createElement("canvas");
    var v1374 = v1373.getContext("2d");
    v1373.width = p1049 * 168;
    v1373.height = p1049 * 100;
    v1374.globalAlpha = p1050 ? 0.5 : 1;
    v1374.translate(p1049 * 10, p1049 * 5);
    v1374.save();
    v1374.translate(p1049 * 24.5, p1049 * 44.30000305175781);
    f89(v1374, p1049 * -19.5, p1049 * -8.5, p1049 * 39, p1049 * 17, p1049 * 10);
    v1374.restore();
    f86(v1374, p1051[0]);
    v1374.beginPath();
    v1374.lineCap = "round";
    v1374.lineJoin = "round";
    v1374.moveTo(p1049 * 115, p1049 * 37.80000305175781);
    v1374.bezierCurveTo(p1049 * 142, p1049 * 37.80000305175781, p1049 * 140, p1049 * 37.80000305175781, p1049 * 141, p1049 * 37.80000305175781);
    v1374.bezierCurveTo(p1049 * 147, p1049 * 28.800003051757812, p1049 * 149, p1049 * 26.800003051757812, p1049 * 153, p1049 * 32.80000305175781);
    v1374.bezierCurveTo(p1049 * 160, p1049 * 42.80000305175781, p1049 * 157, p1049 * 50.80000305175781, p1049 * 153, p1049 * 58.80000305175781);
    v1374.bezierCurveTo(p1049 * 148, p1049 * 62.80000305175781, p1049 * 147, p1049 * 59.80000305175781, p1049 * 143, p1049 * 52.80000305175781);
    v1374.bezierCurveTo(p1049 * 129, p1049 * 52.80000305175781, p1049 * 129, p1049 * 52.80000305175781, p1049 * 115, p1049 * 52.80000305175781);
    v1374.closePath();
    f86(v1374, p1051[0]);
    f87(v1374, p1049 * 78, p1049 * 44.80000305175781, p1049 * 39.44616584663204);
    f86(v1374, p1051[0]);
    v1374.globalAlpha = 1;
    v1374.translate(p1049 * -10, p1049 * -5);
    v1374.save();
    v1374.translate(p1049 * 24.5, p1049 * 44.30000305175781);
    f89(v1374, p1049 * -19.5, p1049 * -8.5, p1049 * 39, p1049 * 17, p1049 * 10);
    v1374.restore();
    f86(v1374, vVVVVUndefined1972, p1051[3], p1049 * 6);
    v1374.beginPath();
    v1374.lineCap = "round";
    v1374.lineJoin = "round";
    v1374.moveTo(p1049 * 115, p1049 * 37.80000305175781);
    v1374.bezierCurveTo(p1049 * 142, p1049 * 37.80000305175781, p1049 * 140, p1049 * 37.80000305175781, p1049 * 141, p1049 * 37.80000305175781);
    v1374.bezierCurveTo(p1049 * 147, p1049 * 28.800003051757812, p1049 * 149, p1049 * 26.800003051757812, p1049 * 153, p1049 * 32.80000305175781);
    v1374.bezierCurveTo(p1049 * 160, p1049 * 42.80000305175781, p1049 * 157, p1049 * 50.80000305175781, p1049 * 153, p1049 * 58.80000305175781);
    v1374.bezierCurveTo(p1049 * 148, p1049 * 62.80000305175781, p1049 * 147, p1049 * 59.80000305175781, p1049 * 143, p1049 * 52.80000305175781);
    v1374.bezierCurveTo(p1049 * 129, p1049 * 52.80000305175781, p1049 * 129, p1049 * 52.80000305175781, p1049 * 115, p1049 * 52.80000305175781);
    v1374.closePath();
    f86(v1374, undefined, p1051[3], p1049 * 6);
    f87(v1374, p1049 * 78, p1049 * 44.80000305175781, p1049 * 42.44616584663204);
    f86(v1374, undefined, p1051[3], p1049 * 6);
    v1374.save();
    v1374.translate(p1049 * 24.5, p1049 * 44.30000305175781);
    f89(v1374, p1049 * -19.5, p1049 * -8.5, p1049 * 39, p1049 * 17, p1049 * 10);
    v1374.restore();
    f86(v1374, p1051[1]);
    v1374.beginPath();
    v1374.lineCap = "round";
    v1374.lineJoin = "round";
    v1374.moveTo(p1049 * 115, p1049 * 37.80000305175781);
    v1374.bezierCurveTo(p1049 * 142, p1049 * 37.80000305175781, p1049 * 140, p1049 * 37.80000305175781, p1049 * 141, p1049 * 37.80000305175781);
    v1374.bezierCurveTo(p1049 * 147, p1049 * 28.800003051757812, p1049 * 149, p1049 * 26.800003051757812, p1049 * 153, p1049 * 32.80000305175781);
    v1374.bezierCurveTo(p1049 * 160, p1049 * 42.80000305175781, p1049 * 157, p1049 * 50.80000305175781, p1049 * 153, p1049 * 58.80000305175781);
    v1374.bezierCurveTo(p1049 * 148, p1049 * 62.80000305175781, p1049 * 147, p1049 * 59.80000305175781, p1049 * 143, p1049 * 52.80000305175781);
    v1374.bezierCurveTo(p1049 * 129, p1049 * 52.80000305175781, p1049 * 129, p1049 * 52.80000305175781, p1049 * 115, p1049 * 52.80000305175781);
    v1374.closePath();
    f86(v1374, p1051[1]);
    f87(v1374, p1049 * 78, p1049 * 44.80000305175781, p1049 * 39.44616584663204);
    f86(v1374, p1051[2], p1051[1], p1049 * 4);
    f87(v1374, p1049 * 78, p1049 * 44.80000305175781, p1049 * 29.68164415931166);
    f86(v1374, p1051[3], p1051[1], p1049 * 4);
    f87(v1374, p1049 * 78, p1049 * 44, p1049 * 20);
    f86(v1374, p1051[4]);
    return v1373;
  }
  function f276(p1052, p1053) {
    var v1375 = document.createElement("canvas");
    var v1376 = v1375.getContext("2d");
    v1375.width = p1052 * 110;
    v1375.height = p1052 * 110;
    v1376.globalAlpha = 0.2;
    f87(v1376, p1052 * 55, p1052 * 55, p1052 * 55);
    f86(v1376, p1053[0]);
    return v1375;
  }
  function f277(p1054, p1055, p1056) {
    var v1377 = document.createElement("canvas");
    var v1378 = v1377.getContext("2d");
    v1377.width = p1054 * 137;
    v1377.height = p1054 * 129;
    v1378.globalAlpha = 0.5;
    f87(v1378, p1054 * 69, p1054 * 64, p1054 * 48.16637831516918);
    f86(v1378, p1056[1]);
    v1378.globalAlpha = 0.7;
    f87(v1378, p1054 * 69, p1054 * 64, p1054 * 38.23105625617661);
    f86(v1378, p1056[2]);
    v1378.globalAlpha = 0.7;
    f87(v1378, p1054 * 69, p1054 * 64, p1054 * 32.01562118716424);
    f86(v1378, p1056[2], p1056[3], p1054 * 4);
    v1378.beginPath();
    v1378.lineCap = "round";
    v1378.lineJoin = "round";
    v1378.moveTo(p1054 * 72, p1054 * 41);
    v1378.bezierCurveTo(p1054 * 52, p1054 * 41, p1054 * 48, p1054 * 50, p1054 * 45, p1054 * 58);
    v1378.bezierCurveTo(p1054 * 43, p1054 * 67, p1054 * 45, p1054 * 68, p1054 * 46, p1054 * 72);
    v1378.bezierCurveTo(p1054 * 52, p1054 * 53, p1054 * 60, p1054 * 48, p1054 * 72, p1054 * 42);
    v1378.closePath();
    f86(v1378, p1056[3]);
    v1378.beginPath();
    v1378.lineCap = "round";
    v1378.lineJoin = "round";
    v1378.moveTo(p1054 * 93, p1054 * 62);
    v1378.bezierCurveTo(p1054 * 95, p1054 * 72, p1054 * 90, p1054 * 81, p1054 * 81, p1054 * 87);
    v1378.bezierCurveTo(p1054 * 74, p1054 * 91, p1054 * 69, p1054 * 89, p1054 * 64, p1054 * 88);
    v1378.bezierCurveTo(p1054 * 77, p1054 * 83, p1054 * 84, p1054 * 82, p1054 * 92, p1054 * 62);
    v1378.closePath();
    f86(v1378, p1056[3]);
    return v1377;
  }
  function f278() {
    var v1379 = v2811.time;
    if (ⲆⲆ[285]) {
      v380.drawImage(ⲆⲆ[285][v1379][1], v384 + 480, v386 + 190);
      v380.drawImage(ⲆⲆ[285][v1379][2], v384 + 180, v386 - 430);
      v380.drawImage(ⲆⲆ[285][v1379][1], v384 - 855, v386 + 100);
      v380.drawImage(ⲆⲆ[285][v1379][0], v384 - 550, v386 - 300);
      v380.drawImage(ⲆⲆ[285][v1379][0], v384 - 1020, v386 - 520);
    }
    if (ⲆⲆ[108]) {
      v380.drawImage(ⲆⲆ[108][v1379][1], v384 - 80, v386 - 640);
      v380.drawImage(ⲆⲆ[108][v1379][1], v384 + 80, v386 + 490);
      v380.drawImage(ⲆⲆ[108][v1379][2], v384 - 180, v386 - 700);
      v380.drawImage(ⲆⲆ[108][v1379][0], v384 + 550, v386 + 100);
      v380.drawImage(ⲆⲆ[108][v1379][1], v384 + 450, v386 + 300);
      v380.drawImage(ⲆⲆ[108][v1379][1], v384 + 780, v386 + 300);
      v380.drawImage(ⲆⲆ[108][v1379][2], v384 + 980, v386 + 200);
      v380.drawImage(ⲆⲆ[108][v1379][2], v384 + 680, v386 + 600);
      v380.drawImage(ⲆⲆ[108][v1379][2], v384 - 380, v386 + 100);
      v380.drawImage(ⲆⲆ[108][v1379][2], v384 + 280, v386 + 250);
    }
    if (ⲆⲆ[110]) {
      v380.drawImage(ⲆⲆ[110][v1379][0], v384 - 590, v386);
      v380.drawImage(ⲆⲆ[110][v1379][0], v384 + 120, v386 - 390);
      v380.drawImage(ⲆⲆ[110][v1379][0], v384 - 270, v386 + 340);
    }
    if (ⲆⲆ[109]) {
      v380.drawImage(ⲆⲆ[109][v1379][4], v384 - 700, v386 - 600);
      v380.drawImage(ⲆⲆ[109][v1379][2], v384 - 970, v386 - 250);
      v380.drawImage(ⲆⲆ[109][v1379][5], v384 - 720, v386 - 200);
      v380.drawImage(ⲆⲆ[109][v1379][2], v384 - 1020, v386 + 340);
      v380.drawImage(ⲆⲆ[109][v1379][0], v384 - 1120, v386 - 0);
      v380.drawImage(ⲆⲆ[109][v1379][1], v384 - 650, v386 - 330);
      v380.drawImage(ⲆⲆ[109][v1379][4], v384 - 495, v386 - 90);
      v380.drawImage(ⲆⲆ[109][v1379][3], v384 - 520, v386 + 340);
      v380.drawImage(ⲆⲆ[109][v1379][2], v384 + 830, v386 - 520);
    }
    ⲆⲆ[413];
    if (v2814 && v2813) {
      var v1380 = v2814.ᐃⲆⲆ.x;
      var v1381 = v2814.ᐃⲆⲆ.y;
      v2814.ᐃⲆⲆ.x = v384;
      v2814.ᐃⲆⲆ.y = v386;
      var v1382 = v2813.time;
      v2813.time = v2811.time;
      var v1383;
      var v1384 = v2811.items;
      v1384[2].x = 400;
      v1384[2].y = 100;
      v1384[2].ΔⵠⵠΔ(114);
      (v1383 = v1384[1]).x = -500;
      v1383.y = 100;
      v1383.ΔⲆⵠΔ[0].x = v1383.x - 20.5;
      v1383.ΔⲆⵠΔ[0].y = v1383.y - 22.5;
      v1383.ΔⲆⵠΔ[1].x = v1383.x - 35.5;
      v1383.ΔⲆⵠΔ[1].y = v1383.y + 7.5;
      v1383.ΔⲆⵠΔ[2].x = v1383.x + 7.5;
      v1383.ΔⲆⵠΔ[2].y = v1383.y - 30;
      v1383.ΔⲆⵠΔ[3].x = v1383.x + 22.5;
      v1383.ΔⲆⵠΔ[3].y = v1383.y;
      v1383.ΔⲆⵠΔ[4].x = v1383.x - 7.5;
      v1383.ΔⲆⵠΔ[4].y = v1383.y + 14.5;
      for (var v1385 = 0; v1383.info > v1385; v1385++) {
        v1383.ΔⲆⵠΔ[v1385].ΔⵠⵠΔ(294);
      }
      (v1383 = v1384[3]).x = 210;
      v1383.y = -290;
      v1383.ΔⲆⵠΔ[0].x = v1383.x - 20.5;
      v1383.ΔⲆⵠΔ[0].y = v1383.y - 22.5;
      v1383.ΔⲆⵠΔ[1].x = v1383.x - 35.5;
      v1383.ΔⲆⵠΔ[1].y = v1383.y + 7.5;
      v1383.ΔⲆⵠΔ[2].x = v1383.x + 7.5;
      v1383.ΔⲆⵠΔ[2].y = v1383.y - 30;
      v1383.ΔⲆⵠΔ[3].x = v1383.x + 22.5;
      v1383.ΔⲆⵠΔ[3].y = v1383.y;
      v1383.ΔⲆⵠΔ[4].x = v1383.x - 7.5;
      v1383.ΔⲆⵠΔ[4].y = v1383.y + 14.5;
      for (v1385 = 0; v1383.info > v1385; v1385++) {
        v1383.ΔⲆⵠΔ[v1385].ΔⵠⵠΔ(294);
      }
      v1384[0].x = 450;
      v1384[0].y = -100;
      v1384[0].ⵠΔΔᐃΔ(113);
      v1384[0].ᐃⵠⲆⲆⵠ();
      v2814.ᐃⲆⲆ.x = v1380;
      v2814.ᐃⲆⲆ.y = v1381;
      v2813.time = v1382;
    }
  }
  function f279(p1057, p1058, p1059) {
    var v1386 = document.createElement("canvas");
    var v1387 = v1386.getContext("2d");
    v1386.width = p1057 * 109;
    v1386.height = p1057 * 110;
    f87(v1387, p1057 * 54.5, p1057 * 55, p1057 * 48.038209575038294);
    f86(v1387, p1058[0], p1058[1], p1057 * 8);
    if (p1059 == 0) {
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 54.928558349609375, p1057 * 43.72320556640625);
      v1387.bezierCurveTo(p1057 * 66.92855834960938, p1057 * 31.72320556640625, p1057 * 69.92855834960938, p1057 * 29.72320556640625, p1057 * 74.92855834960938, p1057 * 29.72320556640625);
      v1387.bezierCurveTo(p1057 * 86.92855834960938, p1057 * 28.72320556640625, p1057 * 91.92855834960938, p1057 * 42.72320556640625, p1057 * 89.92855834960938, p1057 * 52.72320556640625);
      v1387.bezierCurveTo(p1057 * 88.92855834960938, p1057 * 63.72320556640625, p1057 * 73.92855834960938, p1057 * 75.72320556640625, p1057 * 55.928558349609375, p1057 * 87.72320556640625);
      v1387.bezierCurveTo(p1057 * 37.928558349609375, p1057 * 78.72320556640625, p1057 * 26.928558349609375, p1057 * 65.72320556640625, p1057 * 19.928558349609375, p1057 * 54.72320556640625);
      v1387.bezierCurveTo(p1057 * 13.928558349609375, p1057 * 42.72320556640625, p1057 * 21.928558349609375, p1057 * 28.72320556640625, p1057 * 35.928558349609375, p1057 * 29.72320556640625);
      v1387.bezierCurveTo(p1057 * 45.928558349609375, p1057 * 31.72320556640625, p1057 * 51.928558349609375, p1057 * 40.72320556640625, p1057 * 53.928558349609375, p1057 * 44.72320556640625);
      v1387.closePath();
      f86(v1387, p1058[2]);
    } else if (p1059 == 1) {
      v1387.save();
      v1387.translate(p1057 * 55, p1057 * 39.48748779296875);
      f89(v1387, p1057 * -11.5, p1057 * -36, p1057 * 23, p1057 * 72, p1057 * 10);
      v1387.restore();
      f86(v1387, p1058[2], p1058[3], p1057 * 4);
      f87(v1387, p1057 * 54.5, p1057 * 78.48748779296875, p1057 * 22.02271554554524);
      f86(v1387, p1058[4], p1058[3], p1057 * 4);
      v1387.save();
      v1387.translate(p1057 * 55.5, p1057 * 57.287506103515625);
      f89(v1387, p1057 * -9, p1057 * -16, p1057 * 18, p1057 * 32, p1057 * 10);
      v1387.restore();
      f86(v1387, p1058[4]);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 66.5, p1057 * 25.287506103515625);
      v1387.bezierCurveTo(p1057 * 60.5, p1057 * 25.287506103515625, p1057 * 63.5, p1057 * 25.287506103515625, p1057 * 54.5, p1057 * 25.287506103515625);
      v1387.closePath();
      f86(v1387, vVVVUndefined1974, p1058[5], p1057 * 4);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 66.5, p1057 * 37.287506103515625);
      v1387.bezierCurveTo(p1057 * 60.5, p1057 * 37.287506103515625, p1057 * 60.5, p1057 * 37.287506103515625, p1057 * 54.5, p1057 * 37.287506103515625);
      v1387.closePath();
      f86(v1387, vVVVUndefined272, p1058[5], p1057 * 4);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 66.5, p1057 * 50.287506103515625);
      v1387.bezierCurveTo(p1057 * 61, p1057 * 50.287506103515625, p1057 * 61, p1057 * 50.287506103515625, p1057 * 55.5, p1057 * 50.287506103515625);
      v1387.closePath();
      f86(v1387, vVVVUndefined1975, p1058[5], p1057 * 4);
    } else if (p1059 == 2) {
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 45.928558349609375, p1057 * 55.29463195800781);
      v1387.bezierCurveTo(p1057 * 38.928558349609375, p1057 * 67.29463195800781, p1057 * 38.928558349609375, p1057 * 67.29463195800781, p1057 * 31.928558349609375, p1057 * 79.29463195800781);
      v1387.bezierCurveTo(p1057 * 15.928558349609375, p1057 * 85.29463195800781, p1057 * 17.928558349609375, p1057 * 86.29463195800781, p1057 * 17.928558349609375, p1057 * 90.29463195800781);
      v1387.bezierCurveTo(p1057 * 19.928558349609375, p1057 * 94.29463195800781, p1057 * 21.928558349609375, p1057 * 94.29463195800781, p1057 * 27.928558349609375, p1057 * 92.29463195800781);
      v1387.bezierCurveTo(p1057 * 29.928558349609375, p1057 * 98.29463195800781, p1057 * 30.928558349609375, p1057 * 99.29463195800781, p1057 * 33.928558349609375, p1057 * 99.29463195800781);
      v1387.bezierCurveTo(p1057 * 38.928558349609375, p1057 * 97.29463195800781, p1057 * 38.928558349609375, p1057 * 93.29463195800781, p1057 * 37.928558349609375, p1057 * 86.29463195800781);
      v1387.bezierCurveTo(p1057 * 45.428558349609375, p1057 * 73.29463195800781, p1057 * 51.928558349609375, p1057 * 64.29463195800781, p1057 * 52.928558349609375, p1057 * 60.29463195800781);
      v1387.closePath();
      f86(v1387, p1058[2]);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 55.928558349609375, p1057 * 8.866058349609375);
      v1387.bezierCurveTo(p1057 * 35.928558349609375, p1057 * 35.866058349609375, p1057 * 37.928558349609375, p1057 * 48.866058349609375, p1057 * 46.928558349609375, p1057 * 62.866058349609375);
      v1387.bezierCurveTo(p1057 * 65.92855834960938, p1057 * 72.86605834960938, p1057 * 80.92855834960938, p1057 * 55.866058349609375, p1057 * 93.92855834960938, p1057 * 36.866058349609375);
      v1387.closePath();
      f86(v1387, p1058[3], p1058[4], p1057 * 6);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 93.92855834960938, p1057 * 36.866058349609375);
      v1387.bezierCurveTo(p1057 * 82.92855834960938, p1057 * 37.866058349609375, p1057 * 77.92855834960938, p1057 * 36.866058349609375, p1057 * 67.92855834960938, p1057 * 28.866058349609375);
      v1387.bezierCurveTo(p1057 * 53.928558349609375, p1057 * 16.866058349609375, p1057 * 53.928558349609375, p1057 * 14.866058349609375, p1057 * 55.928558349609375, p1057 * 7.866058349609375);
      v1387.bezierCurveTo(p1057 * 65.92855834960938, p1057 * 4.866058349609375, p1057 * 71.92855834960938, p1057 * 7.866058349609375, p1057 * 83.92855834960938, p1057 * 13.866058349609375);
      v1387.bezierCurveTo(p1057 * 96.92855834960938, p1057 * 21.866058349609375, p1057 * 95.92855834960938, p1057 * 31.866058349609375, p1057 * 92.92855834960938, p1057 * 36.866058349609375);
      v1387.closePath();
      f86(v1387, p1058[3], p1058[4], p1057 * 6);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 68.92855834960938, p1057 * 16.866058349609375);
      v1387.bezierCurveTo(p1057 * 71.92855834960938, p1057 * 13.866058349609375, p1057 * 76.92855834960938, p1057 * 16.866058349609375, p1057 * 79.92855834960938, p1057 * 21.866058349609375);
      v1387.bezierCurveTo(p1057 * 82.92855834960938, p1057 * 24.866058349609375, p1057 * 81.92855834960938, p1057 * 27.866058349609375, p1057 * 73.92855834960938, p1057 * 24.866058349609375);
      v1387.bezierCurveTo(p1057 * 67.92855834960938, p1057 * 20.866058349609375, p1057 * 66.92855834960938, p1057 * 19.866058349609375, p1057 * 67.92855834960938, p1057 * 17.866058349609375);
      v1387.closePath();
      f86(v1387, p1058[2]);
    } else if (p1059 == 3) {
      v1387.scale(0.9, 0.9);
      v1387.translate(p1057 * 6, 0);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 54, p1057 * 0.421875);
      v1387.bezierCurveTo(p1057 * 84, p1057 * 45.421875, p1057 * 89, p1057 * 51.421875, p1057 * 83, p1057 * 74.421875);
      v1387.bezierCurveTo(p1057 * 74, p1057 * 95.421875, p1057 * 46, p1057 * 98.421875, p1057 * 30, p1057 * 78.421875);
      v1387.bezierCurveTo(p1057 * 22, p1057 * 59.421875, p1057 * 27, p1057 * 49.421875, p1057 * 34, p1057 * 36.421875);
      v1387.closePath();
      f86(v1387, p1058[2], p1058[3], p1057 * 6);
      v1387.beginPath();
      v1387.lineCap = "round";
      v1387.lineJoin = "round";
      v1387.moveTo(p1057 * 74, p1057 * 52.421875);
      v1387.bezierCurveTo(p1057 * 77, p1057 * 73.421875, p1057 * 69, p1057 * 81.421875, p1057 * 58, p1057 * 81.421875);
      v1387.bezierCurveTo(p1057 * 66, p1057 * 71.421875, p1057 * 70, p1057 * 66.421875, p1057 * 74, p1057 * 52.421875);
      v1387.closePath();
      f86(v1387, p1058[3]);
    }
    return v1386;
  }
  function f280(p1060, p1061, p1062) {
    var v1388 = document.createElement("canvas");
    var v1389 = v1388.getContext("2d");
    v1388.width = p1060 * 372;
    v1388.height = p1060 * 358;
    v1389.translate(p1060 * 0, p1060 * 10);
    v1389.globalAlpha = p1061 ? 0.2 : 1;
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 247.00003051757812, p1060 * 115.76704406738281);
    v1389.bezierCurveTo(p1060 * 305.0000305175781, p1060 * 124.76704406738281, p1060 * 335.0000305175781, p1060 * 112.76704406738281, p1060 * 359.0000305175781, p1060 * 93.76704406738281);
    v1389.bezierCurveTo(p1060 * 359.5000305175781, p1060 * 113.26704406738281, p1060 * 359.5000305175781, p1060 * 113.26704406738281, p1060 * 360.0000305175781, p1060 * 132.7670440673828);
    v1389.bezierCurveTo(p1060 * 339.0000305175781, p1060 * 177.7670440673828, p1060 * 281.0000305175781, p1060 * 178.7670440673828, p1060 * 243.00003051757812, p1060 * 183.7670440673828);
    v1389.bezierCurveTo(p1060 * 214.50003051757812, p1060 * 214.2670440673828, p1060 * 214.50003051757812, p1060 * 214.2670440673828, p1060 * 186.00003051757812, p1060 * 244.7670440673828);
    v1389.bezierCurveTo(p1060 * 155.00003051757812, p1060 * 214.2670440673828, p1060 * 155.00003051757812, p1060 * 214.2670440673828, p1060 * 124.00003051757812, p1060 * 183.7670440673828);
    v1389.bezierCurveTo(p1060 * 51.000030517578125, p1060 * 180.7670440673828, p1060 * 21.000030517578125, p1060 * 161.7670440673828, p1060 * 9.000030517578125, p1060 * 129.7670440673828);
    v1389.bezierCurveTo(p1060 * 8.500030517578125, p1060 * 110.76704406738281, p1060 * 8.500030517578125, p1060 * 110.76704406738281, p1060 * 8.000030517578125, p1060 * 91.76704406738281);
    v1389.bezierCurveTo(p1060 * 31.000030517578125, p1060 * 112.76704406738281, p1060 * 87.00003051757812, p1060 * 119.76704406738281, p1060 * 116.00003051757812, p1060 * 117.76704406738281);
    v1389.bezierCurveTo(p1060 * 175.00003051757812, p1060 * 18.767044067382812, p1060 * 170.00003051757812, p1060 * 23.767044067382812, p1060 * 181.00003051757812, p1060 * 14.767044067382812);
    v1389.bezierCurveTo(p1060 * 199.00003051757812, p1060 * 34.76704406738281, p1060 * 203.00003051757812, p1060 * 54.76704406738281, p1060 * 247.00003051757812, p1060 * 115.76704406738281);
    v1389.closePath();
    f86(v1389, p1062[0], p1062[0], p1060 * 10);
    v1389.translate(p1060 * 0, p1060 * -10);
    v1389.globalAlpha = 1;
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 107.00003051757812, p1060 * 54.13069152832031);
    v1389.bezierCurveTo(p1060 * 106.50003051757812, p1060 * 38.63069152832031, p1060 * 106.50003051757812, p1060 * 38.63069152832031, p1060 * 106.00003051757812, p1060 * 23.130691528320312);
    v1389.bezierCurveTo(p1060 * 121.50003051757812, p1060 * 38.13069152832031, p1060 * 121.50003051757812, p1060 * 38.13069152832031, p1060 * 137.00003051757812, p1060 * 53.13069152832031);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 233.00003051757812, p1060 * 53.6761474609375);
    v1389.bezierCurveTo(p1060 * 247.00003051757812, p1060 * 37.1761474609375, p1060 * 247.00003051757812, p1060 * 37.1761474609375, p1060 * 261.0000305175781, p1060 * 20.6761474609375);
    v1389.bezierCurveTo(p1060 * 261.0000305175781, p1060 * 36.1761474609375, p1060 * 261.0000305175781, p1060 * 36.1761474609375, p1060 * 261.0000305175781, p1060 * 51.6761474609375);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 293.0000305175781, p1060 * 54.403411865234375);
    v1389.bezierCurveTo(p1060 * 300.0000305175781, p1060 * 49.903411865234375, p1060 * 300.0000305175781, p1060 * 49.903411865234375, p1060 * 307.0000305175781, p1060 * 45.403411865234375);
    v1389.bezierCurveTo(p1060 * 307.0000305175781, p1060 * 49.903411865234375, p1060 * 307.0000305175781, p1060 * 49.903411865234375, p1060 * 307.0000305175781, p1060 * 54.403411865234375);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 77.00003051757812, p1060 * 54.403411865234375);
    v1389.bezierCurveTo(p1060 * 70.00003051757812, p1060 * 50.403411865234375, p1060 * 70.00003051757812, p1060 * 50.403411865234375, p1060 * 63.000030517578125, p1060 * 46.403411865234375);
    v1389.bezierCurveTo(p1060 * 62.500030517578125, p1060 * 50.903411865234375, p1060 * 62.500030517578125, p1060 * 50.903411865234375, p1060 * 62.000030517578125, p1060 * 55.403411865234375);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 58.000030517578125, p1060 * 122.3125);
    v1389.bezierCurveTo(p1060 * 59.500030517578125, p1060 * 97.3125, p1060 * 59.500030517578125, p1060 * 97.3125, p1060 * 61.000030517578125, p1060 * 72.3125);
    v1389.bezierCurveTo(p1060 * 91.00003051757812, p1060 * 89.3125, p1060 * 91.00003051757812, p1060 * 89.3125, p1060 * 121.00003051757812, p1060 * 106.3125);
    v1389.closePath();
    f86(v1389, p1062[1], p1062[1], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 310.0000305175781, p1060 * 127.3125);
    v1389.bezierCurveTo(p1060 * 308.0000305175781, p1060 * 98.3125, p1060 * 308.0000305175781, p1060 * 98.3125, p1060 * 306.0000305175781, p1060 * 69.3125);
    v1389.bezierCurveTo(p1060 * 274.5000305175781, p1060 * 88.8125, p1060 * 274.5000305175781, p1060 * 88.8125, p1060 * 243.00003051757812, p1060 * 108.3125);
    v1389.closePath();
    f86(v1389, p1062[1], p1062[1], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 226.00003051757812, p1060 * 87.85795593261719);
    v1389.bezierCurveTo(p1060 * 243.50003051757812, p1060 * 66.85795593261719, p1060 * 243.50003051757812, p1060 * 66.85795593261719, p1060 * 261.0000305175781, p1060 * 45.85795593261719);
    v1389.bezierCurveTo(p1060 * 265.0000305175781, p1060 * 83.85795593261719, p1060 * 265.0000305175781, p1060 * 83.85795593261719, p1060 * 269.0000305175781, p1060 * 121.85795593261719);
    v1389.bezierCurveTo(p1060 * 235.00003051757812, p1060 * 122.85795593261719, p1060 * 233.00003051757812, p1060 * 107.85795593261719, p1060 * 228.00003051757812, p1060 * 90.85795593261719);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 105.00003051757812, p1060 * 128.8579559326172);
    v1389.bezierCurveTo(p1060 * 104.50003051757812, p1060 * 87.85795593261719, p1060 * 104.50003051757812, p1060 * 87.85795593261719, p1060 * 104.00003051757812, p1060 * 46.85795593261719);
    v1389.bezierCurveTo(p1060 * 126.50003051757812, p1060 * 69.35795593261719, p1060 * 126.50003051757812, p1060 * 69.35795593261719, p1060 * 149.00003051757812, p1060 * 91.85795593261719);
    v1389.bezierCurveTo(p1060 * 130.00003051757812, p1060 * 123.85795593261719, p1060 * 123.00003051757812, p1060 * 132.8579559326172, p1060 * 107.00003051757812, p1060 * 130.8579559326172);
    v1389.closePath();
    f86(v1389, p1062[1], p1062[1], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 59.000030517578125, p1060 * 121.85795593261719);
    v1389.bezierCurveTo(p1060 * 59.500030517578125, p1060 * 99.35795593261719, p1060 * 59.500030517578125, p1060 * 99.35795593261719, p1060 * 60.000030517578125, p1060 * 76.85795593261719);
    v1389.bezierCurveTo(p1060 * 84.00003051757812, p1060 * 92.35795593261719, p1060 * 84.00003051757812, p1060 * 92.35795593261719, p1060 * 108.00003051757812, p1060 * 107.85795593261719);
    v1389.bezierCurveTo(p1060 * 106.00003051757812, p1060 * 148.8579559326172, p1060 * 86.00003051757812, p1060 * 148.8579559326172, p1060 * 62.000030517578125, p1060 * 123.85795593261719);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 105.00003051757812, p1060 * 132.8579559326172);
    v1389.bezierCurveTo(p1060 * 104.50003051757812, p1060 * 93.35795593261719, p1060 * 104.50003051757812, p1060 * 93.35795593261719, p1060 * 104.00003051757812, p1060 * 53.85795593261719);
    v1389.bezierCurveTo(p1060 * 126.50003051757812, p1060 * 75.85795593261719, p1060 * 126.50003051757812, p1060 * 75.85795593261719, p1060 * 149.00003051757812, p1060 * 97.85795593261719);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 311.0000305175781, p1060 * 126.85795593261719);
    v1389.bezierCurveTo(p1060 * 309.0000305175781, p1060 * 101.35795593261719, p1060 * 309.0000305175781, p1060 * 101.35795593261719, p1060 * 307.0000305175781, p1060 * 75.85795593261719);
    v1389.bezierCurveTo(p1060 * 271.0000305175781, p1060 * 96.85795593261719, p1060 * 271.0000305175781, p1060 * 96.85795593261719, p1060 * 235.00003051757812, p1060 * 117.85795593261719);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 228.00003051757812, p1060 * 96.85795593261719);
    v1389.bezierCurveTo(p1060 * 244.50003051757812, p1060 * 74.85795593261719, p1060 * 244.50003051757812, p1060 * 74.85795593261719, p1060 * 261.0000305175781, p1060 * 52.85795593261719);
    v1389.bezierCurveTo(p1060 * 265.5000305175781, p1060 * 89.85795593261719, p1060 * 265.5000305175781, p1060 * 89.85795593261719, p1060 * 270.0000305175781, p1060 * 126.85795593261719);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 12.000030517578125, p1060 * 86.13069152832031);
    v1389.bezierCurveTo(p1060 * 36.000030517578125, p1060 * 113.13069152832031, p1060 * 84.00003051757812, p1060 * 111.13069152832031, p1060 * 116.00003051757812, p1060 * 113.13069152832031);
    v1389.bezierCurveTo(p1060 * 164.00003051757812, p1060 * 23.130691528320312, p1060 * 172.00003051757812, p1060 * 18.130691528320312, p1060 * 181.00003051757812, p1060 * 9.130691528320312);
    v1389.bezierCurveTo(p1060 * 199.00003051757812, p1060 * 29.130691528320312, p1060 * 221.00003051757812, p1060 * 78.13069152832031, p1060 * 247.00003051757812, p1060 * 112.13069152832031);
    v1389.bezierCurveTo(p1060 * 301.0000305175781, p1060 * 122.13069152832031, p1060 * 338.0000305175781, p1060 * 111.13069152832031, p1060 * 359.0000305175781, p1060 * 94.13069152832031);
    v1389.bezierCurveTo(p1060 * 359.0000305175781, p1060 * 113.13069152832031, p1060 * 358.5000305175781, p1060 * 105.13069152832031, p1060 * 358.0000305175781, p1060 * 116.13069152832031);
    v1389.bezierCurveTo(p1060 * 270.5000305175781, p1060 * 130.1306915283203, p1060 * 270.5000305175781, p1060 * 130.1306915283203, p1060 * 183.00003051757812, p1060 * 144.1306915283203);
    v1389.bezierCurveTo(p1060 * 98.00003051757812, p1060 * 128.6306915283203, p1060 * 98.00003051757812, p1060 * 128.6306915283203, p1060 * 13.000030517578125, p1060 * 113.13069152832031);
    v1389.closePath();
    f86(v1389, p1062[1], p1062[1], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 247.00003051757812, p1060 * 115.76704406738281);
    v1389.bezierCurveTo(p1060 * 305.0000305175781, p1060 * 124.76704406738281, p1060 * 335.0000305175781, p1060 * 112.76704406738281, p1060 * 359.0000305175781, p1060 * 93.76704406738281);
    v1389.bezierCurveTo(p1060 * 359.5000305175781, p1060 * 113.26704406738281, p1060 * 359.5000305175781, p1060 * 113.26704406738281, p1060 * 360.0000305175781, p1060 * 132.7670440673828);
    v1389.bezierCurveTo(p1060 * 339.0000305175781, p1060 * 177.7670440673828, p1060 * 281.0000305175781, p1060 * 178.7670440673828, p1060 * 243.00003051757812, p1060 * 183.7670440673828);
    v1389.bezierCurveTo(p1060 * 214.50003051757812, p1060 * 214.2670440673828, p1060 * 214.50003051757812, p1060 * 214.2670440673828, p1060 * 186.00003051757812, p1060 * 244.7670440673828);
    v1389.bezierCurveTo(p1060 * 155.00003051757812, p1060 * 214.2670440673828, p1060 * 155.00003051757812, p1060 * 214.2670440673828, p1060 * 124.00003051757812, p1060 * 183.7670440673828);
    v1389.bezierCurveTo(p1060 * 51.000030517578125, p1060 * 180.7670440673828, p1060 * 21.000030517578125, p1060 * 161.7670440673828, p1060 * 9.000030517578125, p1060 * 129.7670440673828);
    v1389.bezierCurveTo(p1060 * 8.500030517578125, p1060 * 110.76704406738281, p1060 * 8.500030517578125, p1060 * 110.76704406738281, p1060 * 8.000030517578125, p1060 * 91.76704406738281);
    v1389.bezierCurveTo(p1060 * 31.000030517578125, p1060 * 112.76704406738281, p1060 * 87.00003051757812, p1060 * 119.76704406738281, p1060 * 116.00003051757812, p1060 * 117.76704406738281);
    v1389.bezierCurveTo(p1060 * 175.00003051757812, p1060 * 18.767044067382812, p1060 * 170.00003051757812, p1060 * 23.767044067382812, p1060 * 181.00003051757812, p1060 * 14.767044067382812);
    v1389.bezierCurveTo(p1060 * 199.00003051757812, p1060 * 34.76704406738281, p1060 * 203.00003051757812, p1060 * 54.76704406738281, p1060 * 247.00003051757812, p1060 * 115.76704406738281);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 27.000030517578125, p1060 * 94.76704406738281);
    v1389.bezierCurveTo(p1060 * 11.000030517578125, p1060 * 81.76704406738281, p1060 * 31.000030517578125, p1060 * 72.76704406738281, p1060 * 44.000030517578125, p1060 * 59.76704406738281);
    v1389.bezierCurveTo(p1060 * 9.000030517578125, p1060 * 65.76704406738281, p1060 * 4.000030517578125, p1060 * 78.76704406738281, p1060 * 9.000030517578125, p1060 * 89.76704406738281);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 352.0000305175781, p1060 * 100.76705932617188);
    v1389.bezierCurveTo(p1060 * 362.0000305175781, p1060 * 92.76705932617188, p1060 * 352.0000305175781, p1060 * 84.76705932617188, p1060 * 340.0000305175781, p1060 * 68.76705932617188);
    v1389.bezierCurveTo(p1060 * 360.0000305175781, p1060 * 69.76705932617188, p1060 * 364.0000305175781, p1060 * 79.76705932617188, p1060 * 364.0000305175781, p1060 * 94.76705932617188);
    v1389.closePath();
    f86(v1389, p1062[1], p1062[1], p1060 * 1);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 25.000030517578125, p1060 * 97.94886779785156);
    v1389.bezierCurveTo(p1060 * 2.000030517578125, p1060 * 76.94886779785156, p1060 * 29.000030517578125, p1060 * 62.94886779785156, p1060 * 44.000030517578125, p1060 * 59.94886779785156);
    v1389.bezierCurveTo(p1060 * 8.000030517578125, p1060 * 59.94886779785156, p1060 * -0.999969482421875, p1060 * 81.94886779785156, p1060 * 4.000030517578125, p1060 * 92.94886779785156);
    v1389.closePath();
    f86(v1389, p1062[3]);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 349.0000305175781, p1060 * 100.94886779785156);
    v1389.bezierCurveTo(p1060 * 366.0000305175781, p1060 * 82.94886779785156, p1060 * 353.0000305175781, p1060 * 76.94886779785156, p1060 * 337.0000305175781, p1060 * 67.94886779785156);
    v1389.bezierCurveTo(p1060 * 366.0000305175781, p1060 * 69.94886779785156, p1060 * 366.0000305175781, p1060 * 83.94886779785156, p1060 * 363.0000305175781, p1060 * 101.94886779785156);
    v1389.closePath();
    f86(v1389, p1062[2], p1062[3], p1060 * 10);
    f87(v1389, p1060 * 46.000030517578125, p1060 * 137.5852279663086, p1060 * 9.219544457292887);
    f86(v1389, p1062[4], p1062[5], p1060 * 1);
    f87(v1389, p1060 * 308.0000305175781, p1060 * 141.5852279663086, p1060 * 8.54400374531753);
    f86(v1389, p1062[4], p1062[5], p1060 * 1);
    f87(v1389, p1060 * 92.00003051757812, p1060 * 149.58523559570312, p1060 * 14.866068747318506);
    f86(v1389, p1062[4], p1062[5], p1060 * 1);
    f87(v1389, p1060 * 262.0000305175781, p1060 * 148.8579559326172, p1060 * 15.620499351813308);
    f86(v1389, p1062[4], p1062[5], p1060 * 1);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 184.00003051757812, p1060 * 68.85795593261719);
    v1389.bezierCurveTo(p1060 * 203.00003051757812, p1060 * 108.85795593261719, p1060 * 203.00003051757812, p1060 * 108.85795593261719, p1060 * 222.00003051757812, p1060 * 148.8579559326172);
    v1389.bezierCurveTo(p1060 * 202.50003051757812, p1060 * 177.8579559326172, p1060 * 202.50003051757812, p1060 * 177.8579559326172, p1060 * 183.00003051757812, p1060 * 206.8579559326172);
    v1389.bezierCurveTo(p1060 * 162.00003051757812, p1060 * 178.8579559326172, p1060 * 162.00003051757812, p1060 * 178.8579559326172, p1060 * 141.00003051757812, p1060 * 150.8579559326172);
    v1389.closePath();
    f86(v1389, p1062[4], p1062[5], p1060 * 10);
    v1389.beginPath();
    v1389.lineCap = "round";
    v1389.lineJoin = "round";
    v1389.moveTo(p1060 * 183.00003051757812, p1060 * 104.94886779785156);
    v1389.bezierCurveTo(p1060 * 192.50003051757812, p1060 * 125.44886779785156, p1060 * 192.50003051757812, p1060 * 125.44886779785156, p1060 * 202.00003051757812, p1060 * 145.94886779785156);
    v1389.bezierCurveTo(p1060 * 192.00003051757812, p1060 * 163.94886779785156, p1060 * 192.00003051757812, p1060 * 163.94886779785156, p1060 * 182.00003051757812, p1060 * 181.94886779785156);
    v1389.bezierCurveTo(p1060 * 172.50003051757812, p1060 * 164.44886779785156, p1060 * 172.50003051757812, p1060 * 164.44886779785156, p1060 * 163.00003051757812, p1060 * 146.94886779785156);
    v1389.closePath();
    f86(v1389, p1062[6]);
    return v1388;
  }
  function f281(p1063, p1064) {
    var v1390 = document.createElement("canvas");
    var v1391 = v1390.getContext("2d");
    var v1392 = p1063 * 120;
    var v1393 = p1063 * 140;
    v1390.width = v1392;
    v1390.height = v1393;
    v1390.width = p1063 * 130;
    v1390.height = p1063 * 120;
    f89(v1391, p1063 * 10, p1063 * 12, p1063 * 110, p1063 * 90, p1063 * 10);
    f86(v1391, p1064[0]);
    f89(v1391, p1063 * 10, p1063 * 5, p1063 * 110, p1063 * 90, p1063 * 10);
    f86(v1391, p1064[1], p1064[2], p1063 * 4);
    var vF91 = f91(-Math.PI / 5, f137(p1063 * 0.5, vVVV24, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1391.drawImage(vF91, p1063 * 12, p1063 * 18);
    vF91 = f91(Math.PI / 4, f223(p1063 * 0.55, true, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
    v1391.drawImage(vF91, p1063 * 36, p1063 * 16);
    return v1390;
  }
  function f282() {
    new Date().getTime();
    f270();
    (function () {
      ⲆⲆ[814] = f121(1, [{
        f: f250,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
      }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[815] = ⲆⲆ[814];
      ⲆⲆ[955] = [];
      ⲆⲆ[955][0] = ᐃⲆ.ΔΔᐃᐃⲆᐃΔ;
      ⲆⲆ[955][1] = ᐃⲆ.ᐃΔⲆⵠⲆⵠⵠ;
      ⲆⲆ[955][2] = ᐃⲆ.ⵠΔⲆΔⵠⵠΔ;
      ⲆⲆ[956] = ⲆⲆ[955];
      ⲆⲆ[972] = [];
      ⲆⲆ[972][0] = ᐃⲆ.ⵠΔΔⲆⲆᐃΔ;
      ⲆⲆ[972][1] = ᐃⲆ.ΔᐃΔΔⲆᐃⲆ;
      ⲆⲆ[972][2] = ᐃⲆ.ⵠᐃⲆⵠᐃΔⵠ;
      ⲆⲆ[973] = ⲆⲆ[972];
      ⲆⲆ[987] = [];
      ⲆⲆ[987][0] = ᐃⲆ.ΔⲆⵠΔᐃⵠᐃ;
      ⲆⲆ[987][1] = ᐃⲆ.ⵠᐃΔᐃΔⲆⲆ;
      ⲆⲆ[987][2] = ᐃⲆ.ⵠᐃΔᐃᐃᐃᐃ;
      ⲆⲆ[988] = ⲆⲆ[987];
      ⲆⲆ[1154] = [];
      ⲆⲆ[1154][0] = ᐃⲆ.ⲆᐃⵠⵠⲆⲆⲆ;
      ⲆⲆ[1154][1] = ᐃⲆ.ΔᐃⲆᐃΔⲆⵠ;
      ⲆⲆ[1154][2] = ᐃⲆ.ⲆᐃᐃⵠⵠΔⵠ;
      ⲆⲆ[1155] = ⲆⲆ[1154];
      ⲆⲆ[965] = [];
      ⲆⲆ[965][0] = ᐃⲆ.ⵠⵠⵠΔⲆᐃΔ;
      ⲆⲆ[965][1] = ᐃⲆ.ᐃᐃⲆΔⲆᐃΔ;
      ⲆⲆ[965][2] = ᐃⲆ.ᐃⵠⲆᐃᐃΔᐃ;
      ⲆⲆ[974] = ⲆⲆ[965];
      ⲆⲆ[1028] = [];
      ⲆⲆ[1028][0] = ᐃⲆ.ᐃᐃⲆⲆⲆᐃⲆ;
      ⲆⲆ[1028][1] = ᐃⲆ.ᐃΔⲆⵠΔᐃᐃ;
      ⲆⲆ[1028][2] = ᐃⲆ.ΔⲆⵠⲆⲆⵠⵠ;
      ⲆⲆ[1029] = ⲆⲆ[1028];
      ⲆⲆ[1027] = ⲆⲆ[1028];
      ⲆⲆ[712] = [];
      ⲆⲆ[712][0] = ᐃⲆ.ΔΔⵠⵠᐃᐃΔᐃⵠ;
      ⲆⲆ[712][1] = ᐃⲆ.ΔᐃⲆᐃΔⵠⵠᐃΔ;
      ⲆⲆ[712][2] = ᐃⲆ.ᐃⲆᐃⲆⵠΔⵠΔΔ;
      ⲆⲆ[713] = ⲆⲆ[712];
      ⲆⲆ[714] = ⲆⲆ[712];
      ⲆⲆ[1031] = [];
      ⲆⲆ[1031][0] = ᐃⲆ.ᐃⵠᐃᐃΔⵠⵠ;
      ⲆⲆ[1031][1] = ᐃⲆ.ΔⲆⲆⵠᐃΔⵠ;
      ⲆⲆ[1031][2] = ᐃⲆ.ⵠᐃⲆⵠΔⵠᐃ;
      ⲆⲆ[1032] = ⲆⲆ[1031];
      ⲆⲆ[1030] = ⲆⲆ[1031];
      ⲆⲆ[423] = [];
      ⲆⲆ[423][0] = ᐃⲆ.ⵠᐃⲆⵠⲆΔΔ;
      ⲆⲆ[423][1] = ᐃⲆ.ᐃⵠᐃΔΔΔΔ;
      ⲆⲆ[423][2] = ᐃⲆ.ⲆᐃᐃΔᐃⲆⲆ;
      ⲆⲆ[425] = ⲆⲆ[423];
      ⲆⲆ[424] = ⲆⲆ[423];
      ⲆⲆ[1233] = [];
      ⲆⲆ[1233][0] = ᐃⲆ.ΔΔᐃⵠⵠΔΔ;
      ⲆⲆ[1233][1] = ᐃⲆ.ⵠⲆᐃⲆⵠⲆΔ;
      ⲆⲆ[1233][2] = ᐃⲆ.ⵠⵠΔⲆΔⲆⲆ;
      ⲆⲆ[1234] = ⲆⲆ[1233];
      ⲆⲆ[1230] = [];
      ⲆⲆ[1230][0] = ᐃⲆ.ΔΔⲆᐃΔⲆⲆ;
      ⲆⲆ[1230][1] = ᐃⲆ.ⲆᐃΔᐃⵠᐃᐃ;
      ⲆⲆ[1230][2] = ᐃⲆ.ΔⲆⵠᐃⲆⲆⵠ;
      ⲆⲆ[1232] = ⲆⲆ[1230];
      ⲆⲆ[1231] = ⲆⲆ[1230];
      ⲆⲆ[569] = [];
      ⲆⲆ[569][0] = ᐃⲆ.ΔⲆⵠⲆᐃⵠⲆ;
      ⲆⲆ[569][1] = ᐃⲆ.ⵠᐃⲆᐃⵠⲆⵠ;
      ⲆⲆ[569][2] = ᐃⲆ.ΔⲆⵠⵠᐃⵠΔ;
      ⲆⲆ[571] = ⲆⲆ[569];
      ⲆⲆ[570] = ⲆⲆ[569];
      ⲆⲆ[1166] = [];
      ⲆⲆ[1166][0] = ᐃⲆ.ᐃⲆⵠⵠΔⵠⵠ;
      ⲆⲆ[1166][1] = ᐃⲆ.ΔᐃⲆᐃᐃⵠΔ;
      ⲆⲆ[1166][2] = ᐃⲆ.ⲆⲆⵠⲆⲆᐃᐃ;
      ⲆⲆ[1167] = ⲆⲆ[1166];
      ⲆⲆ[1168] = ⲆⲆ[1166];
      ⲆⲆ[572] = [];
      ⲆⲆ[572][0] = ᐃⲆ.ⵠΔⵠⲆΔᐃⵠ;
      ⲆⲆ[572][1] = ᐃⲆ.ΔᐃⲆⵠᐃΔⲆ;
      ⲆⲆ[572][2] = ᐃⲆ.ΔΔⲆΔΔΔⲆ;
      ⲆⲆ[574] = ⲆⲆ[572];
      ⲆⲆ[573] = ⲆⲆ[572];
      ⲆⲆ[1169] = [];
      ⲆⲆ[1169][0] = ᐃⲆ.ᐃᐃΔΔⵠΔⵠ;
      ⲆⲆ[1169][1] = ᐃⲆ.ⵠᐃΔΔᐃⲆᐃ;
      ⲆⲆ[1169][2] = ᐃⲆ.ⵠⲆΔⵠⵠⵠⵠ;
      ⲆⲆ[1170] = ⲆⲆ[1169];
      ⲆⲆ[1171] = ⲆⲆ[1169];
      ⲆⲆ[575] = [];
      ⲆⲆ[575][0] = ᐃⲆ.ΔⵠΔⵠᐃᐃⵠ;
      ⲆⲆ[575][1] = ᐃⲆ.ⵠᐃⵠᐃⵠⲆⵠ;
      ⲆⲆ[575][2] = ᐃⲆ.ΔᐃⲆᐃⲆⵠΔ;
      ⲆⲆ[577] = ⲆⲆ[575];
      ⲆⲆ[576] = ⲆⲆ[575];
      ⲆⲆ[1172] = [];
      ⲆⲆ[1172][0] = ᐃⲆ.ⵠᐃΔᐃⵠᐃΔ;
      ⲆⲆ[1172][1] = ᐃⲆ.ⵠᐃΔᐃΔΔⲆ;
      ⲆⲆ[1172][2] = ᐃⲆ.ᐃΔΔⲆⵠΔⵠ;
      ⲆⲆ[1173] = ⲆⲆ[1172];
      ⲆⲆ[1174] = ⲆⲆ[1172];
      ⲆⲆ[578] = [];
      ⲆⲆ[578][0] = ᐃⲆ.ΔΔΔᐃΔᐃⵠ;
      ⲆⲆ[578][1] = ᐃⲆ.ᐃᐃΔΔⲆᐃⵠ;
      ⲆⲆ[578][2] = ᐃⲆ.ΔᐃΔΔⲆⲆⵠ;
      ⲆⲆ[580] = ⲆⲆ[578];
      ⲆⲆ[579] = ⲆⲆ[578];
      ⲆⲆ[1175] = [];
      ⲆⲆ[1175][0] = ᐃⲆ.ⲆᐃⲆⵠᐃⲆᐃ;
      ⲆⲆ[1175][1] = ᐃⲆ.ᐃⵠΔⲆⲆⲆⲆ;
      ⲆⲆ[1175][2] = ᐃⲆ.ΔᐃᐃᐃⵠᐃΔ;
      ⲆⲆ[1176] = ⲆⲆ[1175];
      ⲆⲆ[1177] = ⲆⲆ[1175];
      ⲆⲆ[581] = [];
      ⲆⲆ[581][0] = ᐃⲆ.ⲆΔⲆⲆΔᐃⲆ;
      ⲆⲆ[581][1] = ᐃⲆ.ⲆⲆΔᐃⲆᐃⵠ;
      ⲆⲆ[581][2] = ᐃⲆ.ΔⲆⲆΔⲆᐃⵠ;
      ⲆⲆ[583] = ⲆⲆ[581];
      ⲆⲆ[582] = ⲆⲆ[581];
      ⲆⲆ[1178] = [];
      ⲆⲆ[1178][0] = ᐃⲆ.ᐃᐃᐃⲆᐃⲆᐃ;
      ⲆⲆ[1178][1] = ᐃⲆ.ᐃⲆⲆᐃⵠⲆⲆ;
      ⲆⲆ[1178][2] = ᐃⲆ.ⵠΔᐃⲆⵠⲆᐃ;
      ⲆⲆ[1179] = ⲆⲆ[1178];
      ⲆⲆ[1180] = ⲆⲆ[1178];
      ⲆⲆ[584] = [];
      ⲆⲆ[584][0] = ᐃⲆ.ᐃᐃΔᐃᐃᐃⲆ;
      ⲆⲆ[584][1] = ᐃⲆ.ᐃⲆΔΔⵠⲆⲆ;
      ⲆⲆ[584][2] = ᐃⲆ.ⲆᐃΔΔⵠΔᐃ;
      ⲆⲆ[586] = ⲆⲆ[584];
      ⲆⲆ[585] = ⲆⲆ[584];
      ⲆⲆ[1181] = [];
      ⲆⲆ[1181][0] = ᐃⲆ.ⵠⵠⵠⵠⵠΔΔ;
      ⲆⲆ[1181][1] = ᐃⲆ.ⵠⵠᐃⲆΔⲆⲆ;
      ⲆⲆ[1181][2] = ᐃⲆ.ⲆⵠⵠⵠΔᐃⵠ;
      ⲆⲆ[1182] = ⲆⲆ[1181];
      ⲆⲆ[1183] = ⲆⲆ[1181];
      ⲆⲆ[587] = [];
      ⲆⲆ[587][0] = ᐃⲆ.ⵠΔᐃⵠΔⲆⲆ;
      ⲆⲆ[587][1] = ᐃⲆ.ⲆⵠⵠᐃᐃⲆⵠ;
      ⲆⲆ[587][2] = ᐃⲆ.ΔᐃΔΔⲆⵠΔ;
      ⲆⲆ[589] = ⲆⲆ[587];
      ⲆⲆ[588] = ⲆⲆ[587];
      ⲆⲆ[1184] = [];
      ⲆⲆ[1184][0] = ᐃⲆ.ᐃⵠⵠⵠⵠΔΔ;
      ⲆⲆ[1184][1] = ᐃⲆ.ⵠⲆᐃⵠⵠⲆⲆ;
      ⲆⲆ[1184][2] = ᐃⲆ.ⲆΔⵠΔᐃⵠΔ;
      ⲆⲆ[1185] = ⲆⲆ[1184];
      ⲆⲆ[1186] = ⲆⲆ[1184];
      ⲆⲆ[1257] = [];
      ⲆⲆ[1257][0] = ᐃⲆ.ⵠⲆⵠⲆⲆⲆⵠΔᐃ;
      ⲆⲆ[1257][1] = ᐃⲆ.ΔⲆⵠⲆΔᐃⲆᐃᐃ;
      ⲆⲆ[1257][2] = ᐃⲆ.ᐃΔΔⵠⲆⲆΔⲆΔ;
      ⲆⲆ[1258] = ⲆⲆ[1257];
      ⲆⲆ[1256] = ⲆⲆ[1257];
      ⲆⲆ[1260] = [];
      ⲆⲆ[1260][0] = ᐃⲆ.ΔΔΔⲆᐃⲆⵠᐃⵠ;
      ⲆⲆ[1260][1] = ᐃⲆ.ⵠᐃΔᐃᐃΔⵠⵠⵠ;
      ⲆⲆ[1260][2] = ᐃⲆ.ⵠᐃᐃⵠⵠⲆⲆⵠⲆ;
      ⲆⲆ[1261] = ⲆⲆ[1260];
      ⲆⲆ[1259] = ⲆⲆ[1260];
      ⲆⲆ[1263] = [];
      ⲆⲆ[1263][0] = ᐃⲆ.ᐃⲆⲆΔᐃΔⵠᐃⵠ;
      ⲆⲆ[1263][1] = ᐃⲆ.ᐃΔⵠⵠⵠΔⲆⵠΔ;
      ⲆⲆ[1263][2] = ᐃⲆ.ΔᐃⲆᐃⵠⲆⲆⲆΔ;
      ⲆⲆ[1264] = ⲆⲆ[1263];
      ⲆⲆ[1262] = ⲆⲆ[1263];
      ⲆⲆ[1266] = [];
      ⲆⲆ[1266][0] = ᐃⲆ.ⵠⵠⵠᐃⵠⵠⵠⵠᐃ;
      ⲆⲆ[1266][1] = ᐃⲆ.ᐃⲆᐃᐃᐃᐃⲆⲆⵠ;
      ⲆⲆ[1266][2] = ᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠⲆΔ;
      ⲆⲆ[1267] = ⲆⲆ[1266];
      ⲆⲆ[1265] = ⲆⲆ[1266];
      ⲆⲆ[1269] = [];
      ⲆⲆ[1269][0] = ᐃⲆ.ⵠᐃΔⲆⵠⲆⲆⵠᐃ;
      ⲆⲆ[1269][1] = ᐃⲆ.ΔΔΔᐃᐃⲆᐃΔΔ;
      ⲆⲆ[1269][2] = ᐃⲆ.ⲆⵠΔⵠΔⵠⵠⵠⲆ;
      ⲆⲆ[1270] = ⲆⲆ[1269];
      ⲆⲆ[1268] = ⲆⲆ[1269];
      ⲆⲆ[1272] = [];
      ⲆⲆ[1272][0] = ᐃⲆ.ⲆⵠⲆᐃⲆΔΔΔⵠ;
      ⲆⲆ[1272][1] = ᐃⲆ.ⲆΔᐃᐃⵠⵠΔΔᐃ;
      ⲆⲆ[1272][2] = ᐃⲆ.ΔⲆⵠⵠᐃⲆⲆⲆⵠ;
      ⲆⲆ[1273] = ⲆⲆ[1272];
      ⲆⲆ[1271] = ⲆⲆ[1272];
      ⲆⲆ[1239] = [];
      ⲆⲆ[1239][0] = ᐃⲆ.ⵠᐃᐃΔⲆⲆⲆᐃΔ;
      ⲆⲆ[1239][1] = ᐃⲆ.ΔⵠⵠΔΔᐃⵠⲆΔ;
      ⲆⲆ[1239][2] = ᐃⲆ.ΔⵠⵠⵠⵠΔⵠⲆⵠ;
      ⲆⲆ[1240] = ⲆⲆ[1239];
      ⲆⲆ[1238] = ⲆⲆ[1239];
      ⲆⲆ[1242] = [];
      ⲆⲆ[1242][0] = ᐃⲆ.ᐃⵠΔᐃⲆᐃᐃⵠΔ;
      ⲆⲆ[1242][1] = ᐃⲆ.ⲆᐃᐃⵠΔΔΔⵠⲆ;
      ⲆⲆ[1242][2] = ᐃⲆ.ᐃⵠᐃⲆⵠΔⵠΔᐃ;
      ⲆⲆ[1243] = ⲆⲆ[1242];
      ⲆⲆ[1241] = ⲆⲆ[1242];
      ⲆⲆ[1245] = [];
      ⲆⲆ[1245][0] = ᐃⲆ.ΔΔⵠⲆⵠⵠⵠⵠᐃ;
      ⲆⲆ[1245][1] = ᐃⲆ.ΔⲆᐃⵠᐃⲆⲆΔΔ;
      ⲆⲆ[1245][2] = ᐃⲆ.ᐃⲆⲆΔΔⲆⲆⲆΔ;
      ⲆⲆ[1246] = ⲆⲆ[1245];
      ⲆⲆ[1244] = ⲆⲆ[1245];
      ⲆⲆ[1248] = [];
      ⲆⲆ[1248][0] = ᐃⲆ.ᐃᐃⲆⲆⵠΔΔⲆᐃ;
      ⲆⲆ[1248][1] = ᐃⲆ.ⵠⵠⵠΔᐃⲆᐃΔⲆ;
      ⲆⲆ[1248][2] = ᐃⲆ.ⵠⲆᐃΔⵠⲆⲆΔⲆ;
      ⲆⲆ[1249] = ⲆⲆ[1248];
      ⲆⲆ[1247] = ⲆⲆ[1248];
      ⲆⲆ[1251] = [];
      ⲆⲆ[1251][0] = ᐃⲆ.ⵠΔⲆΔᐃΔⲆⲆΔ;
      ⲆⲆ[1251][1] = ᐃⲆ.ⲆΔⲆⲆΔⲆᐃⲆΔ;
      ⲆⲆ[1251][2] = ᐃⲆ.ⵠΔᐃⵠⵠⲆⵠⵠΔ;
      ⲆⲆ[1252] = ⲆⲆ[1251];
      ⲆⲆ[1250] = ⲆⲆ[1251];
      ⲆⲆ[1254] = [];
      ⲆⲆ[1254][0] = ᐃⲆ.ΔⵠⲆⲆⵠΔⲆᐃⲆ;
      ⲆⲆ[1254][1] = ᐃⲆ.ⲆⵠⲆⲆᐃᐃΔⲆΔ;
      ⲆⲆ[1254][2] = ᐃⲆ.ᐃⵠᐃΔᐃᐃΔᐃΔ;
      ⲆⲆ[1255] = ⲆⲆ[1254];
      ⲆⲆ[1253] = ⲆⲆ[1254];
      ⲆⲆ[1227] = [];
      ⲆⲆ[1227][0] = ᐃⲆ.ⲆᐃᐃⵠΔᐃΔ;
      ⲆⲆ[1227][1] = ᐃⲆ.ⵠᐃⵠⵠⵠⵠⵠ;
      ⲆⲆ[1227][2] = ᐃⲆ.ⲆⵠⵠᐃᐃⲆᐃ;
      ⲆⲆ[1229] = ⲆⲆ[1227];
      ⲆⲆ[1228] = ⲆⲆ[1227];
      ⲆⲆ[1187] = [];
      ⲆⲆ[1187][0] = ᐃⲆ.ᐃΔᐃᐃᐃⵠⵠ;
      ⲆⲆ[1187][1] = ᐃⲆ.ΔⵠᐃᐃⲆΔᐃ;
      ⲆⲆ[1187][2] = ᐃⲆ.ⵠⵠᐃⲆΔᐃⵠ;
      ⲆⲆ[1188] = ⲆⲆ[1187];
      ⲆⲆ[v554.ᐃΔⲆΔΔΔⲆΔᐃ] = ⲆⲆ[1187];
      ⲆⲆ[840] = f121(1, [{
        f: f95,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
      }], 0.22, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[841] = ⲆⲆ[840];
      ⲆⲆ[850] = f121(1, [{
        f: f265,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
      }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[851] = ⲆⲆ[850];
      ⲆⲆ[644] = f121(1, [{
        f: f117,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
      }, {
        f: f119,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
      }, {
        f: f120,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[643] = ⲆⲆ[644];
      ⲆⲆ[639] = f121(1, [{
        f: f116,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#A89F67", "#9E8456"]
      }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[800] = f121(1, [{
        f: f232,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
      }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[799] = ⲆⲆ[800];
      ⲆⲆ[631] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#A89F67", "#9E8456"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[632] = ⲆⲆ[631];
      ⲆⲆ[311] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#493d36", "#332b28"]
      }], 0.7, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[284] = ⲆⲆ[311];
      ⲆⲆ[808] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#c67933", "#b17238"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[809] = ⲆⲆ[808];
      ⲆⲆ[834] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e8e8e8", "#bbbbbb"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[835] = ⲆⲆ[834];
      ⲆⲆ[845] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#328a56", "#449573"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[846] = ⲆⲆ[845];
      ⲆⲆ[949] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#c98e2f", "#a36b11"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[950] = ⲆⲆ[949];
      ⲆⲆ[951] = ⲆⲆ[949];
      ⲆⲆ[966] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#13a56d", "#098a58"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[967] = ⲆⲆ[966];
      ⲆⲆ[968] = ⲆⲆ[966];
      ⲆⲆ[981] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#3a8214", "#4a9c1e"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[982] = ⲆⲆ[981];
      ⲆⲆ[983] = ⲆⲆ[981];
      ⲆⲆ[959] = f121(1, [{
        f: f155,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#b22419", "#99110e"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[960] = ⲆⲆ[959];
      ⲆⲆ[961] = ⲆⲆ[959];
      ⲆⲆ[309] = f121(1, [{
        f: f127,
        x: -2,
        y: -2,
        a: 1,
        r: -Math.PI / 7,
        c: ["#4d2d14", "#432516"]
      }, {
        f: f129,
        x: -2,
        y: -2,
        a: 1,
        r: -Math.PI / 7,
        c: ["#efd435", "#ec8d35", "#e96132"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[302] = ⲆⲆ[309];
      ⲆⲆ[328] = f121(1, [{
        f: f126,
        x: -2,
        y: -1,
        a: 1,
        r: -Math.PI / 7,
        c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
      }, {
        f: f129,
        x: -2,
        y: -1,
        a: 1,
        r: -Math.PI / 7,
        c: ["#efd435", "#ec8d35", "#e96132"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[327] = ⲆⲆ[328];
      ⲆⲆ[860] = f121(1, [{
        f: f139,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
      }], 0.1, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[865] = f121(1, [{
        f: f151,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[829] = f121(1, [{
        f: f141,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[261] = f121(1, [{
        f: f144,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[292] = f121(1, [{
        f: f148,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[293] = f121(1, [{
        f: f147,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[455] = f121(1, [{
        f: f149,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[313] = f121(1, [{
        f: f137,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[312] = f121(1, [{
        f: f137,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[258] = f121(1, [{
        f: f137,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[296] = f121(1, [{
        f: f137,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[458] = f121(1, [{
        f: f137,
        x: -2,
        y: 5,
        a: 1,
        r: -Math.PI / 5,
        c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[1017] = [];
      ⲆⲆ[1017][0] = ᐃⲆ.ΔᐃᐃΔⵠᐃⲆ;
      ⲆⲆ[1017][1] = ᐃⲆ.ⵠᐃᐃᐃⵠⲆⲆ;
      ⲆⲆ[1017][2] = ᐃⲆ.ⵠⲆⵠⲆΔⵠⲆ;
      ⲆⲆ[1019] = ⲆⲆ[1017];
      ⲆⲆ[1018] = ⲆⲆ[1017];
      ⲆⲆ[315] = f121(1, [{
        f: f156,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#252B28", "#58645F", "#75827D"]
      }], 0.23, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[297] = f121(1, [{
        f: f159,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#282823", "#877c2d", "#c4bc51"]
      }], 0.43, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[298] = f121(1, [{
        f: f162,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#232828", "#3fc9c9", "#74ede6"]
      }], 0.33, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[316] = f121(1, [{
        f: f127,
        x: 0,
        y: -5,
        a: 1,
        r: Math.PI / 2.5,
        c: ["#4d2d14", "#432516"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[830] = ⲆⲆ[829];
      ⲆⲆ[254] = ⲆⲆ[261];
      ⲆⲆ[290] = ⲆⲆ[292];
      ⲆⲆ[291] = ⲆⲆ[293];
      ⲆⲆ[456] = ⲆⲆ[455];
      ⲆⲆ[314] = ⲆⲆ[313];
      ⲆⲆ[256] = ⲆⲆ[312];
      ⲆⲆ[295] = ⲆⲆ[258];
      ⲆⲆ[257] = ⲆⲆ[296];
      ⲆⲆ[460] = ⲆⲆ[458];
      ⲆⲆ[277] = f121(1, [{
        f: f107,
        x: 0,
        y: 0,
        a: 1,
        r: 0
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[310] = f121(1, [{
        f: f106,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
      }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[262] = ⲆⲆ[310];
      ⲆⲆ[329] = f121(1, [{
        f: f176,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[263] = ⲆⲆ[329];
      ⲆⲆ[331] = f121(1, [{
        f: f173,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[332] = ⲆⲆ[331];
      ⲆⲆ[492] = f121(1, [{
        f: f176,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[493] = ⲆⲆ[492];
      ⲆⲆ[330] = f121(1, [{
        f: f177,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
      }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[265] = ⲆⲆ[330];
      ⲆⲆ[317] = f121(1, [{
        f: f171,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
      }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[318] = ⲆⲆ[317];
      ⲆⲆ[319] = f121(1, [{
        f: f224,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[320] = ⲆⲆ[319];
      ⲆⲆ[362] = f121(1, [{
        f: f209,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[363] = ⲆⲆ[362];
      ⲆⲆ[364] = f121(1, [{
        f: f209,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[365] = ⲆⲆ[364];
      ⲆⲆ[361] = f121(1, [{
        f: f246,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[360] = ⲆⲆ[361];
      ⲆⲆ[495] = f121(1, [{
        f: f246,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[496] = ⲆⲆ[495];
      ⲆⲆ[335] = f121(1, [{
        f: f178,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[268] = ⲆⲆ[335];
      ⲆⲆ[372] = f121(1, [{
        f: f179,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[371] = ⲆⲆ[372];
      ⲆⲆ[499] = f121(1, [{
        f: f179,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[498] = ⲆⲆ[499];
      ⲆⲆ[375] = f121(1, [{
        f: f181,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[374] = ⲆⲆ[375];
      ⲆⲆ[378] = f121(1, [{
        f: f180,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[377] = ⲆⲆ[378];
      ⲆⲆ[337] = f121(1, [{
        f: f242,
        x: 0,
        y: 2,
        a: 1,
        r: 0,
        c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[338] = ⲆⲆ[337];
      ⲆⲆ[300] = f121(1, [{
        f: f112,
        x: 0,
        y: -3,
        a: 1,
        r: 0,
        c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
      }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[323] = f121(1, [{
        f: f112,
        x: 0,
        y: -3,
        a: 1,
        r: 0,
        c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
      }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[325] = ⲆⲆ[323];
      ⲆⲆ[305] = f121(1, [{
        f: f123,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#cec0c4", "#ffffff", "#6d6768"]
      }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[513] = f121(1, [{
        f: f123,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#d4e9ec", "#37b1d7", "#506c71"]
      }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[515] = ⲆⲆ[513];
      ⲆⲆ[368] = f121(1, [{
        f: f240,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#ef96be", "#ffffff"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[1162] = f121(1, [{
        f: f240,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#55423e", "#ffffff"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[178] = f121(1, [{
        f: f174,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
      }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[179] = f121(1, [{
        f: f174,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
      }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[624] = f121(1, [{
        f: f240,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#201851", "#b6222a"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[393] = f121(1, [{
        f: f240,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#231f20", "#b6222a"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[505] = f121(1, [{
        f: f240,
        x: -3,
        y: -3,
        a: 1,
        r: 0,
        c: ["#ffffff", "#b6222a"]
      }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[369] = f121(1, [{
        f: f226,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[370] = ⲆⲆ[369];
      ⲆⲆ[381] = f121(1, [{
        f: f185,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[380] = ⲆⲆ[381];
      ⲆⲆ[502] = f121(1, [{
        f: f211,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[503] = ⲆⲆ[502];
      ⲆⲆ[880] = f121(1, [{
        f: f125,
        x: 0,
        y: 5,
        a: 1,
        r: 0,
        c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[881] = ⲆⲆ[880];
      ⲆⲆ[882] = f121(1, [{
        f: f128,
        x: 0,
        y: 5,
        a: 1,
        r: 0,
        c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[883] = ⲆⲆ[882];
      ⲆⲆ[303] = f121(1, [{
        f: f122,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#ffffff", "#cec0c4"]
      }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[304] = ⲆⲆ[303];
      ⲆⲆ[392] = [];
      ⲆⲆ[392][0] = ᐃⲆ.ⲆᐃⲆⵠᐃᐃΔ;
      ⲆⲆ[392][1] = ᐃⲆ.ⵠᐃΔΔⵠΔΔ;
      ⲆⲆ[392][2] = ᐃⲆ.ᐃⲆⲆᐃⵠΔΔ;
      ⲆⲆ[367] = ⲆⲆ[392];
      ⲆⲆ[975] = [];
      ⲆⲆ[975][0] = ᐃⲆ.ᐃΔΔᐃⵠⵠᐃ;
      ⲆⲆ[975][1] = ᐃⲆ.ᐃⵠⲆΔⲆⵠᐃ;
      ⲆⲆ[975][2] = ᐃⲆ.ⲆᐃⲆΔΔΔⵠ;
      ⲆⲆ[977] = ⲆⲆ[975];
      ⲆⲆ[976] = ⲆⲆ[975];
      ⲆⲆ[978] = [];
      ⲆⲆ[978][0] = ᐃⲆ.ΔⲆᐃᐃⵠⲆⲆ;
      ⲆⲆ[978][1] = ᐃⲆ.ⵠⲆⵠᐃⲆⵠⲆ;
      ⲆⲆ[978][2] = ᐃⲆ.ΔΔⵠⵠᐃⲆΔ;
      ⲆⲆ[980] = ⲆⲆ[978];
      ⲆⲆ[979] = ⲆⲆ[978];
      ⲆⲆ[1158] = [];
      ⲆⲆ[1158][0] = ᐃⲆ.ⲆⲆΔⲆⲆᐃⲆ;
      ⲆⲆ[1158][1] = ᐃⲆ.ⲆⲆΔⲆⲆᐃⲆ;
      ⲆⲆ[1158][2] = ᐃⲆ.ⲆⲆΔⲆⲆᐃⲆ;
      ⲆⲆ[1159] = ⲆⲆ[1158];
      ⲆⲆ[426] = [];
      ⲆⲆ[426][0] = ᐃⲆ.ΔᐃⲆᐃΔΔᐃ;
      ⲆⲆ[426][1] = ᐃⲆ.ΔⲆΔⲆⲆⲆⲆ;
      ⲆⲆ[426][2] = ᐃⲆ.ⲆΔⲆⵠⵠⵠΔ;
      ⲆⲆ[427] = ⲆⲆ[426];
      ⲆⲆ[428] = ⲆⲆ[426];
      ⲆⲆ[1160] = [];
      ⲆⲆ[1160][0] = ᐃⲆ.ΔΔΔⲆΔⵠⲆ;
      ⲆⲆ[1160][1] = ᐃⲆ.ΔΔΔⲆΔⵠⲆ;
      ⲆⲆ[1160][2] = ᐃⲆ.ΔΔΔⲆΔⵠⲆ;
      ⲆⲆ[1161] = ⲆⲆ[1160];
      ⲆⲆ[1236] = [];
      ⲆⲆ[1236][0] = ᐃⲆ.ᐃᐃⲆᐃΔᐃⵠⵠⵠ;
      ⲆⲆ[1236][1] = ᐃⲆ.ⲆΔᐃᐃⵠᐃΔΔᐃ;
      ⲆⲆ[1236][2] = ᐃⲆ.ᐃⲆᐃΔᐃΔⵠⵠΔ;
      ⲆⲆ[1235] = ⲆⲆ[1236];
      ⲆⲆ[1237] = ⲆⲆ[1236];
      ⲆⲆ[991] = [];
      ⲆⲆ[991][0] = ᐃⲆ.ⵠΔⵠⲆΔⲆⵠ;
      ⲆⲆ[991][1] = ᐃⲆ.ᐃⲆᐃⵠᐃΔΔ;
      ⲆⲆ[991][2] = ᐃⲆ.ᐃᐃΔΔᐃⵠⲆ;
      ⲆⲆ[990] = ⲆⲆ[991];
      ⲆⲆ[992] = ⲆⲆ[991];
      ⲆⲆ[994] = [];
      ⲆⲆ[994][0] = ᐃⲆ.ⵠⵠᐃⵠⲆΔᐃ;
      ⲆⲆ[994][1] = ᐃⲆ.ΔᐃⵠΔᐃᐃⵠ;
      ⲆⲆ[994][2] = ᐃⲆ.ᐃᐃⲆⲆᐃⲆᐃ;
      ⲆⲆ[993] = ⲆⲆ[994];
      ⲆⲆ[995] = ⲆⲆ[994];
      ⲆⲆ[997] = [];
      ⲆⲆ[997][0] = ᐃⲆ.ⵠⲆΔᐃⵠⲆᐃ;
      ⲆⲆ[997][1] = ᐃⲆ.ⵠⲆⲆᐃᐃⵠⲆ;
      ⲆⲆ[997][2] = ᐃⲆ.ΔᐃΔⲆᐃⵠᐃ;
      ⲆⲆ[996] = ⲆⲆ[997];
      ⲆⲆ[998] = ⲆⲆ[997];
      ⲆⲆ[1000] = [];
      ⲆⲆ[1000][0] = ᐃⲆ.ⵠΔⲆⲆᐃΔᐃ;
      ⲆⲆ[1000][1] = ᐃⲆ.ΔΔᐃᐃⵠⲆⵠ;
      ⲆⲆ[1000][2] = ᐃⲆ.ⲆⲆⵠᐃⲆⵠΔ;
      ⲆⲆ[999] = ⲆⲆ[1000];
      ⲆⲆ[1001] = ⲆⲆ[1000];
      ⲆⲆ[1003] = [];
      ⲆⲆ[1003][0] = ᐃⲆ.ⵠⲆΔⵠΔᐃⲆ;
      ⲆⲆ[1003][1] = ᐃⲆ.ᐃΔⲆⵠⲆⵠΔ;
      ⲆⲆ[1003][2] = ᐃⲆ.ⲆⲆⲆⲆⵠΔᐃ;
      ⲆⲆ[1002] = ⲆⲆ[1003];
      ⲆⲆ[1004] = ⲆⲆ[1003];
      ⲆⲆ[1006] = [];
      ⲆⲆ[1006][0] = ᐃⲆ.ΔΔⵠᐃⲆⲆⵠ;
      ⲆⲆ[1006][1] = ᐃⲆ.ⵠⲆΔΔΔⲆⵠ;
      ⲆⲆ[1006][2] = ᐃⲆ.ᐃΔⲆΔⵠⵠΔ;
      ⲆⲆ[1005] = ⲆⲆ[1006];
      ⲆⲆ[1007] = ⲆⲆ[1006];
      ⲆⲆ[1009] = [];
      ⲆⲆ[1009][0] = ᐃⲆ.ⵠᐃⲆΔⵠᐃΔ;
      ⲆⲆ[1009][1] = ᐃⲆ.ⵠⲆᐃΔⲆⲆΔ;
      ⲆⲆ[1009][2] = ᐃⲆ.ⵠΔⵠⲆᐃⵠΔ;
      ⲆⲆ[1008] = ⲆⲆ[1009];
      ⲆⲆ[1010] = ⲆⲆ[1009];
      ⲆⲆ[1012] = [];
      ⲆⲆ[1012][0] = ᐃⲆ.ΔⲆᐃᐃⵠⵠᐃ;
      ⲆⲆ[1012][1] = ᐃⲆ.ⵠᐃⲆᐃᐃⵠᐃ;
      ⲆⲆ[1012][2] = ᐃⲆ.ⵠⲆΔⵠΔⲆᐃ;
      ⲆⲆ[1011] = ⲆⲆ[1012];
      ⲆⲆ[1013] = ⲆⲆ[1012];
      ⲆⲆ[1015] = [];
      ⲆⲆ[1015][0] = ᐃⲆ.ⵠΔΔⵠᐃᐃΔ;
      ⲆⲆ[1015][1] = ᐃⲆ.ᐃᐃΔⲆᐃⵠΔ;
      ⲆⲆ[1015][2] = ᐃⲆ.ᐃⵠⵠⲆⲆΔΔ;
      ⲆⲆ[1014] = ⲆⲆ[1015];
      ⲆⲆ[1016] = ⲆⲆ[1015];
      ⲆⲆ[1035] = [];
      ⲆⲆ[1035][0] = ᐃⲆ.ⲆⵠⵠⵠⲆ;
      ⲆⲆ[1035][1] = ᐃⲆ.ⲆⵠⵠⵠⲆ;
      ⲆⲆ[1035][2] = ᐃⲆ.ⲆⵠⵠⵠⲆ;
      ⲆⲆ[v554.ᐃΔᐃΔᐃΔⵠⲆⲆ] = ⲆⲆ[1035];
      ⲆⲆ[1036] = ⲆⲆ[1035];
      ⲆⲆ[1037] = [];
      ⲆⲆ[1037][0] = ᐃⲆ.ᐃⲆΔᐃᐃ;
      ⲆⲆ[1037][1] = ᐃⲆ.ᐃⲆΔᐃᐃ;
      ⲆⲆ[1037][2] = ᐃⲆ.ᐃⲆΔᐃᐃ;
      ⲆⲆ[v554.ⲆⲆⲆᐃΔΔΔⲆᐃ] = ⲆⲆ[1037];
      ⲆⲆ[1038] = ⲆⲆ[1037];
      ⲆⲆ[1039] = [];
      ⲆⲆ[1039][0] = ᐃⲆ.ⲆⲆⵠᐃᐃ;
      ⲆⲆ[1039][1] = ᐃⲆ.ⲆⲆⵠᐃᐃ;
      ⲆⲆ[1039][2] = ᐃⲆ.ⲆⲆⵠᐃᐃ;
      ⲆⲆ[v554.ⲆⵠⵠⵠΔⵠΔᐃⲆ] = ⲆⲆ[1039];
      ⲆⲆ[1040] = ⲆⲆ[1039];
      ⲆⲆ[1156] = [];
      ⲆⲆ[1156][0] = ᐃⲆ.ⵠΔΔΔΔ;
      ⲆⲆ[1156][1] = ᐃⲆ.ⵠΔΔΔΔ;
      ⲆⲆ[1156][2] = ᐃⲆ.ⵠΔΔΔΔ;
      ⲆⲆ[1157] = ⲆⲆ[1156];
      ⲆⲆ[1046] = [];
      ⲆⲆ[1046][0] = ᐃⲆ.ΔΔⲆΔᐃⲆᐃ;
      ⲆⲆ[1046][1] = ᐃⲆ.ΔᐃΔΔⲆⲆΔ;
      ⲆⲆ[1046][2] = ᐃⲆ.ⵠⲆΔᐃΔΔⵠ;
      ⲆⲆ[1048] = ⲆⲆ[1046];
      ⲆⲆ[1047] = ⲆⲆ[1046];
      ⲆⲆ[744] = [];
      ⲆⲆ[744][0] = ᐃⲆ.ⵠⵠΔⲆᐃⵠΔ;
      ⲆⲆ[744][1] = ᐃⲆ.ΔⲆⲆΔᐃⲆΔ;
      ⲆⲆ[744][2] = ᐃⲆ.ⵠⲆᐃⲆΔᐃⵠ;
      ⲆⲆ[746] = ⲆⲆ[744];
      ⲆⲆ[745] = ⲆⲆ[744];
      ⲆⲆ[747] = [];
      ⲆⲆ[747][0] = ᐃⲆ.ᐃⵠᐃⲆⵠⲆⵠ;
      ⲆⲆ[747][1] = ᐃⲆ.ᐃᐃⲆⲆᐃΔᐃ;
      ⲆⲆ[747][2] = ᐃⲆ.ⲆⵠΔᐃΔᐃᐃ;
      ⲆⲆ[749] = ⲆⲆ[747];
      ⲆⲆ[748] = ⲆⲆ[747];
      ⲆⲆ[1049] = [];
      ⲆⲆ[1049][0] = ᐃⲆ.ⵠⲆⵠᐃᐃⲆⲆ;
      ⲆⲆ[1049][1] = ᐃⲆ.ⲆᐃᐃⲆⲆᐃⵠ;
      ⲆⲆ[1049][2] = ᐃⲆ.ⵠΔⵠᐃᐃⵠᐃ;
      ⲆⲆ[1051] = ⲆⲆ[1049];
      ⲆⲆ[1050] = ⲆⲆ[1049];
      ⲆⲆ[1189] = [];
      ⲆⲆ[1189][0] = ᐃⲆ.ΔⲆⵠᐃⲆΔΔ;
      ⲆⲆ[1189][1] = ᐃⲆ.ΔΔⲆⵠᐃⵠⲆ;
      ⲆⲆ[1189][2] = ᐃⲆ.ⲆᐃΔⲆⵠⲆᐃ;
      ⲆⲆ[1191] = ⲆⲆ[1189];
      ⲆⲆ[1190] = ⲆⲆ[1189];
      ⲆⲆ[1110] = [];
      ⲆⲆ[1110][0] = ᐃⲆ.ᐃⵠⵠⲆᐃⵠⲆ;
      ⲆⲆ[1110][1] = ᐃⲆ.ⵠΔΔᐃⵠΔⵠ;
      ⲆⲆ[1110][2] = ᐃⲆ.ⲆⵠᐃΔᐃⲆΔ;
      ⲆⲆ[1112] = ⲆⲆ[1110];
      ⲆⲆ[1111] = ⲆⲆ[1110];
      ⲆⲆ[1131] = [];
      ⲆⲆ[1131][0] = ᐃⲆ.ⲆᐃᐃΔΔⵠᐃⲆⵠ;
      ⲆⲆ[1131][1] = ᐃⲆ.ᐃΔⵠⵠᐃΔΔⵠⵠ;
      ⲆⲆ[1131][2] = ᐃⲆ.ΔⲆΔΔⵠᐃΔᐃⵠ;
      ⲆⲆ[1133] = ⲆⲆ[1131];
      ⲆⲆ[1132] = ⲆⲆ[1131];
      ⲆⲆ[1137] = [];
      ⲆⲆ[1137][0] = ᐃⲆ.ⲆⲆᐃᐃΔᐃΔ;
      ⲆⲆ[1137][1] = ᐃⲆ.ⵠⲆⲆᐃᐃᐃⲆ;
      ⲆⲆ[1137][2] = ᐃⲆ.ⲆᐃᐃᐃᐃⲆᐃ;
      ⲆⲆ[1138] = ⲆⲆ[1137];
      ⲆⲆ[1139] = ⲆⲆ[1137];
      ⲆⲆ[1140] = [];
      ⲆⲆ[1140][0] = ᐃⲆ.ⲆⵠᐃⵠⲆΔⵠ;
      ⲆⲆ[1140][1] = ᐃⲆ.ΔᐃΔⲆΔⵠᐃ;
      ⲆⲆ[1140][2] = ᐃⲆ.ΔⲆΔⲆⵠᐃΔ;
      ⲆⲆ[1141] = ⲆⲆ[1140];
      ⲆⲆ[1142] = ⲆⲆ[1140];
      ⲆⲆ[1117] = [];
      ⲆⲆ[1117][0] = ᐃⲆ.ⲆⵠΔᐃⲆᐃⵠ;
      ⲆⲆ[1117][1] = ᐃⲆ.ΔⲆᐃΔⲆⵠΔ;
      ⲆⲆ[1117][2] = ᐃⲆ.ⵠⵠⲆⵠⵠⵠⲆ;
      ⲆⲆ[1116] = ⲆⲆ[1117];
      ⲆⲆ[1118] = ⲆⲆ[1117];
      ⲆⲆ[1080] = [];
      ⲆⲆ[1080][0] = ᐃⲆ.ⵠⵠᐃⵠᐃΔⵠ;
      ⲆⲆ[1080][1] = ᐃⲆ.ⵠⲆⵠⲆᐃⲆΔ;
      ⲆⲆ[1080][2] = ᐃⲆ.ⲆΔⲆⵠᐃⵠⵠ;
      ⲆⲆ[1082] = ⲆⲆ[1080];
      ⲆⲆ[1081] = ⲆⲆ[1080];
      ⲆⲆ[1224] = [];
      ⲆⲆ[1224][0] = ᐃⲆ.ᐃᐃΔΔⲆⵠⲆ;
      ⲆⲆ[1224][1] = ᐃⲆ.ⵠⲆΔⲆᐃᐃⲆ;
      ⲆⲆ[1224][2] = ᐃⲆ.ⵠⲆᐃΔΔᐃΔ;
      ⲆⲆ[1226] = ⲆⲆ[1224];
      ⲆⲆ[1225] = ⲆⲆ[1224];
      ⲆⲆ[1095] = [];
      ⲆⲆ[1095][0] = ᐃⲆ.ΔⲆᐃΔⵠΔⵠ;
      ⲆⲆ[1095][1] = ᐃⲆ.ⲆᐃᐃⵠΔᐃᐃ;
      ⲆⲆ[1095][2] = ᐃⲆ.ⵠⲆⲆΔⵠᐃⲆ;
      ⲆⲆ[1097] = ⲆⲆ[1095];
      ⲆⲆ[1096] = ⲆⲆ[1095];
      ⲆⲆ[717] = f121(1, [{
        f: f263,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
      }, {
        f: f276,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e4c027"]
      }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[718] = ⲆⲆ[717];
      ⲆⲆ[408] = f121(1, [{
        f: f182,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
      }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[409] = ⲆⲆ[408];
      ⲆⲆ[907] = f121(1, [{
        f: f187,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
      }], 0.32, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[909] = ⲆⲆ[907];
      ⲆⲆ[908] = ⲆⲆ[907];
      ⲆⲆ[197] = f121(1, [{
        f: f186,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
      }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[906] = ⲆⲆ[197];
      ⲆⲆ[901] = f121(1, [{
        f: f189,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[900] = ⲆⲆ[901];
      ⲆⲆ[899] = ⲆⲆ[901];
      ⲆⲆ[401] = f121(1, [{
        f: f191,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[402] = ⲆⲆ[401];
      ⲆⲆ[395] = f121(1, [{
        f: f190,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[396] = ⲆⲆ[395];
      ⲆⲆ[398] = f121(1, [{
        f: f188,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[399] = ⲆⲆ[398];
      ⲆⲆ[404] = f121(1, [{
        f: f196,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[405] = ⲆⲆ[404];
      ⲆⲆ[472] = f121(1, [{
        f: f195,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[473] = ⲆⲆ[472];
      ⲆⲆ[874] = f121(1, [{
        f: f193,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
      }], 0.38, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[876] = ⲆⲆ[874];
      ⲆⲆ[875] = ⲆⲆ[874];
      ⲆⲆ[477] = f121(1, [{
        f: f223,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[478] = ⲆⲆ[477];
      ⲆⲆ[709] = f121(1, [{
        f: f258,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#939393", "#5f6061"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[711] = ⲆⲆ[709];
      ⲆⲆ[550] = f121(1, [{
        f: f264,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[551] = ⲆⲆ[550];
      ⲆⲆ[480] = f121(1, [{
        f: f223,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[481] = ⲆⲆ[480];
      ⲆⲆ[483] = f121(1, [{
        f: f223,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[484] = ⲆⲆ[483];
      ⲆⲆ[486] = f121(1, [{
        f: f223,
        x: 2,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[487] = ⲆⲆ[486];
      ⲆⲆ[489] = [];
      ⲆⲆ[489][0] = ᐃⲆ.ⲆΔⵠΔⲆⲆⲆ;
      ⲆⲆ[489][1] = ᐃⲆ.ⵠΔΔΔⲆⲆΔ;
      ⲆⲆ[489][2] = ᐃⲆ.ⵠⲆⵠⲆⲆⲆᐃ;
      ⲆⲆ[491] = ⲆⲆ[489];
      ⲆⲆ[490] = ⲆⲆ[489];
      ⲆⲆ[1195] = [];
      ⲆⲆ[1195][0] = ᐃⲆ.ⲆᐃⵠⵠⵠΔⲆ;
      ⲆⲆ[1195][1] = ᐃⲆ.ᐃⲆⵠΔⲆΔⲆ;
      ⲆⲆ[1195][2] = ᐃⲆ.ⵠᐃΔΔⲆⲆⵠ;
      ⲆⲆ[1197] = ⲆⲆ[1195];
      ⲆⲆ[1196] = ⲆⲆ[1195];
      ⲆⲆ[1199] = [];
      ⲆⲆ[1199][0] = ᐃⲆ.ⲆⲆⲆΔⵠᐃⲆ;
      ⲆⲆ[1199][1] = ᐃⲆ.ᐃᐃⲆΔᐃⲆᐃ;
      ⲆⲆ[1199][2] = ᐃⲆ.ΔΔᐃⲆⲆⵠⲆ;
      ⲆⲆ[1201] = ⲆⲆ[1199];
      ⲆⲆ[1200] = ⲆⲆ[1199];
      ⲆⲆ[1203] = [];
      ⲆⲆ[1203][0] = ᐃⲆ.ⲆᐃⵠᐃΔᐃⵠ;
      ⲆⲆ[1203][1] = ᐃⲆ.ΔᐃᐃⲆⵠΔⲆ;
      ⲆⲆ[1203][2] = ᐃⲆ.ⵠⲆΔΔᐃⵠⲆ;
      ⲆⲆ[1205] = ⲆⲆ[1203];
      ⲆⲆ[1204] = ⲆⲆ[1203];
      ⲆⲆ[1207] = [];
      ⲆⲆ[1207][0] = ᐃⲆ.ΔⵠⲆⵠⵠⲆΔ;
      ⲆⲆ[1207][1] = ᐃⲆ.ⵠΔⵠⵠᐃⵠΔ;
      ⲆⲆ[1207][2] = ᐃⲆ.ᐃⵠᐃⵠⲆⵠΔ;
      ⲆⲆ[1209] = ⲆⲆ[1207];
      ⲆⲆ[1208] = ⲆⲆ[1207];
      ⲆⲆ[1211] = [];
      ⲆⲆ[1211][0] = ᐃⲆ.ΔⵠΔⵠⲆᐃⲆ;
      ⲆⲆ[1211][1] = ᐃⲆ.ᐃⵠΔⵠⵠΔⵠ;
      ⲆⲆ[1211][2] = ᐃⲆ.ⵠⲆᐃⲆᐃⲆⵠ;
      ⲆⲆ[1213] = ⲆⲆ[1211];
      ⲆⲆ[1212] = ⲆⲆ[1211];
      ⲆⲆ[1215] = [];
      ⲆⲆ[1215][0] = ᐃⲆ.ᐃⲆΔⵠⵠⵠⵠ;
      ⲆⲆ[1215][1] = ᐃⲆ.ⲆⵠⵠⵠᐃΔᐃ;
      ⲆⲆ[1215][2] = ᐃⲆ.ⲆᐃⵠΔΔⵠᐃ;
      ⲆⲆ[1217] = ⲆⲆ[1215];
      ⲆⲆ[1216] = ⲆⲆ[1215];
      ⲆⲆ[518] = f121(1, [{
        f: f197,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
      }], 0.8, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[519] = ⲆⲆ[518];
      ⲆⲆ[532] = f121(1, [{
        f: f243,
        x: -2,
        y: -2,
        a: 1,
        r: -Math.PI / 5,
        c: ["#141414", "#c4a23a", "#816511"]
      }], 0.08, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[533] = ⲆⲆ[532];
      ⲆⲆ[521] = f121(1, [{
        f: f210,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#141414", "#178a99", "#0a6372", "#03282e"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
      ⲆⲆ[523] = f121(1, [{
        f: f210,
        x: -2,
        y: -2,
        a: 1,
        r: 0,
        c: ["#120202", "#991616", "#750a0a", "#120202"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
      ⲆⲆ[529] = f121(1, [{
        f: f235,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#347f93", "#54a4ba"]
      }, {
        f: f238,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
      }, {
        f: f245,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#a9e4ed", "#86d4e0"]
      }, {
        f: f215,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[530] = ⲆⲆ[529];
      ⲆⲆ[553] = f121(1, [{
        f: f218,
        x: 45,
        y: 70,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[555] = ⲆⲆ[553];
      ⲆⲆ[541] = f121(1, [{
        f: f233,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
      }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[542] = ⲆⲆ[541];
      ⲆⲆ[779] = f121(1, [{
        f: f261,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
      }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[780] = ⲆⲆ[779];
      ⲆⲆ[767] = f121(1, [{
        f: f273,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#2a2938", "#242330", "#313041"]
      }], 0.25, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[768] = ⲆⲆ[767];
      ⲆⲆ[776] = f121(1, [{
        f: f269,
        x: 0,
        y: 3,
        a: 1,
        r: 0,
        c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
      }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[777] = ⲆⲆ[776];
      ⲆⲆ[771] = f121(1, [{
        f: f269,
        x: 0,
        y: 3,
        a: 1,
        r: 0,
        c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
      }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[772] = ⲆⲆ[771];
      ⲆⲆ[756] = f121(1, [{
        f: f280,
        x: 0,
        y: 10,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[758] = ⲆⲆ[756];
      ⲆⲆ[760] = f121(1, [{
        f: f280,
        x: 0,
        y: 10,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[762] = ⲆⲆ[760];
      ⲆⲆ[764] = f121(1, [{
        f: f280,
        x: 0,
        y: 10,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[770] = ⲆⲆ[764];
      ⲆⲆ[910] = f121(1, [{
        f: f184,
        x: -1,
        y: 0,
        a: 1,
        r: 0,
        c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[912] = ⲆⲆ[910];
      ⲆⲆ[911] = ⲆⲆ[910];
      ⲆⲆ[732] = f121(1, [{
        f: f204,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
      }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[734] = ⲆⲆ[732];
      ⲆⲆ[563] = f121(1, [{
        f: f285,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
      }], 0.75, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[564] = ⲆⲆ[563];
      ⲆⲆ[751] = f121(1, [{
        f: f274,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[252] = f121(1, [{
        f: f277,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[753] = f121(1, [{
        f: f274,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[253] = f121(1, [{
        f: f277,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
      }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[176] = f121(1, [{
        f: f229,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
      }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[177] = f121(1, [{
        f: f229,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
      }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[175] = f121(1, [{
        f: f229,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
      }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[616] = f121(1, [{
        f: f267,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[618] = ⲆⲆ[616];
      ⲆⲆ[699] = f121(1, [{
        f: f267,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[700] = ⲆⲆ[699];
      ⲆⲆ[702] = f121(1, [{
        f: f267,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[704] = ⲆⲆ[702];
      ⲆⲆ[705] = f121(1, [{
        f: f267,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[706] = ⲆⲆ[705];
      ⲆⲆ[420] = f121(1, [{
        f: f248,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[421] = ⲆⲆ[420];
      ⲆⲆ[826] = f121(1, [{
        f: f213,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#252525", "#73583e", "#493425", "#7d6144"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[827] = ⲆⲆ[826];
      ⲆⲆ[429] = f121(1, [{
        f: f239,
        x: 0,
        y: -2,
        a: 1,
        r: 0,
        c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[430] = ⲆⲆ[429];
      ⲆⲆ[432] = f121(1, [{
        f: f237,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#dbce71", "#b29c32", "#c4bc51"]
      }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[433] = ⲆⲆ[432];
      ⲆⲆ[435] = f121(1, [{
        f: f247,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
      }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[436] = ⲆⲆ[435];
      ⲆⲆ[438] = f121(1, [{
        f: f222,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
      }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[439] = ⲆⲆ[438];
      ⲆⲆ[441] = f121(1, [{
        f: f219,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#221e1b", "#ffffff", "#f6f0e7"]
      }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[442] = ⲆⲆ[441];
      ⲆⲆ[418] = f121(1, [{
        f: f199,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#1d051e", "#c27add", "#cd98e5"]
      }], 0.31, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[609] = f121(1, [{
        f: f266,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#D7C393", "#a48c6c"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[142] = f121(1, [{
        f: f253,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#93CBCE", "#E9F6F6"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[140] = f121(1, [{
        f: f266,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#866432", "#6b4f25"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[180] = f121(1, [{
        f: f283,
        x: 3,
        y: 2,
        a: 1,
        r: 0,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[181] = f121(1, [{
        f: f268,
        x: 3,
        y: 2,
        a: 1,
        r: 0,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
      }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[784] = ⲆⲆ[180];
      ⲆⲆ[785] = ⲆⲆ[181];
      ⲆⲆ[789] = f121(1, [{
        f: f254,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
      }], 0.1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[791] = ⲆⲆ[789];
      ⲆⲆ[613] = f121(1, [{
        f: f251,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
      }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[612] = f121(1, [{
        f: f287,
        x: 0,
        y: 0,
        a: 1,
        r: Math.PI / 5,
        c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
      }], 0.18, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[715] = ⲆⲆ[613];
      ⲆⲆ[611] = ⲆⲆ[612];
      ⲆⲆ[634] = f121(1, [{
        f: f152,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[635] = ⲆⲆ[634];
      ⲆⲆ[200] = f121(1, [{
        f: f154,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[866] = f121(1, [{
        f: f157,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
      }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[143] = f121(1, [{
        f: f260,
        x: 0,
        y: -2,
        a: 1,
        r: 0,
        c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
      }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[690] = ⲆⲆ[143];
      ⲆⲆ[662] = f121(1, [{
        f: f169,
        x: -3,
        y: -5,
        a: 1,
        r: 0,
        c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
      }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[664] = f121(1, [{
        f: f172,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1d051e", "#42261A", "#281818"]
      }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[666] = ⲆⲆ[664];
      ⲆⲆ[649] = f121(1, [{
        f: f168,
        x: -3,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
      }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[650] = ⲆⲆ[649];
      ⲆⲆ[674] = f121(1, [{
        f: f118,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
      }], 0.15, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[646] = f121(1, [{
        f: f163,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
      }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
      ⲆⲆ[647] = ⲆⲆ[646];
      ⲆⲆ[685] = f121(1, [{
        f: f272,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[684] = ⲆⲆ[685];
      ⲆⲆ[870] = f121(1, [{
        f: f94,
        x: -5,
        y: -5,
        a: 1,
        r: 0,
        c: ["#e2d63b", "#ee71a9", "#42b672"]
      }], 1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[871] = ⲆⲆ[870];
      ⲆⲆ[605] = f121(1, [{
        f: f252,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
      }], 0.5, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[604] = ⲆⲆ[605];
      ⲆⲆ[842] = f121(1, [{
        f: f98,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
      }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[843] = ⲆⲆ[842];
      ⲆⲆ[652] = f121(1, [{
        f: f275,
        x: -1,
        y: 0,
        a: 1,
        r: -Math.PI / 5,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
      }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.7);
      ⲆⲆ[654] = ⲆⲆ[652];
      ⲆⲆ[626] = f121(1, [{
        f: f275,
        x: -1,
        y: 0,
        a: 1,
        r: -Math.PI / 5,
        c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
      }], 0.4, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[627] = ⲆⲆ[626];
      ⲆⲆ[629] = f121(1, [{
        f: f288,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
      }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
      ⲆⲆ[196] = f121(1, [{
        f: f150,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
      }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[898] = ⲆⲆ[196];
      ⲆⲆ[659] = f121(1, [{
        f: f175,
        x: 0,
        y: 0,
        a: 1,
        r: 0,
        c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
      }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[660] = ⲆⲆ[659];
      ⲆⲆ[145] = f121(1, [{
        f: f115,
        x: -2,
        y: -8,
        a: 1,
        r: 0,
        c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
      }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
      ⲆⲆ[730] = ⲆⲆ[145];
      ⲆⲆ[566] = [];
      ⲆⲆ[566][0] = ᐃⲆ.ᐃⵠⲆΔΔⵠΔ;
      ⲆⲆ[566][1] = ᐃⲆ.ᐃΔⵠᐃΔᐃⲆ;
      ⲆⲆ[566][2] = ᐃⲆ.ⵠⵠⲆᐃᐃᐃΔ;
      ⲆⲆ[567] = ⲆⲆ[566];
      ⲆⲆ[568] = ⲆⲆ[566];
      ⲆⲆ[877] = [];
      ⲆⲆ[877][0] = ᐃⲆ.ⲆᐃⵠΔΔᐃᐃ;
      ⲆⲆ[877][1] = ᐃⲆ.Δᐃⵠᐃᐃᐃᐃ;
      ⲆⲆ[877][2] = ᐃⲆ.ⵠᐃⲆᐃΔᐃΔ;
      ⲆⲆ[879] = ⲆⲆ[877];
      ⲆⲆ[878] = ⲆⲆ[877];
      ⲆⲆ[933] = ⲆⲆ[932];
      ⲆⲆ[934] = ⲆⲆ[932];
      ⲆⲆ[932] = [];
      ⲆⲆ[932][0] = ᐃⲆ.ⲆⲆⲆᐃⲆⲆΔ;
      ⲆⲆ[932][1] = ᐃⲆ.ⵠᐃⲆᐃᐃᐃⲆ;
      ⲆⲆ[932][2] = ᐃⲆ.ᐃᐃⵠⵠⲆⲆⲆ;
      ⲆⲆ[933] = ⲆⲆ[932];
      ⲆⲆ[934] = ⲆⲆ[932];
      ⲆⲆ[943] = [];
      ⲆⲆ[943][0] = ᐃⲆ.ΔΔⲆΔΔⲆΔ;
      ⲆⲆ[943][1] = ᐃⲆ.ᐃⲆᐃΔᐃΔᐃ;
      ⲆⲆ[943][2] = ᐃⲆ.ᐃᐃΔⲆΔⵠΔ;
      ⲆⲆ[944] = ⲆⲆ[943];
      ⲆⲆ[945] = ⲆⲆ[943];
      ⲆⲆ[921] = [];
      ⲆⲆ[921][0] = ᐃⲆ.ΔᐃⵠᐃⵠΔΔ;
      ⲆⲆ[921][1] = ᐃⲆ.ⲆⵠⲆⵠⵠⵠΔ;
      ⲆⲆ[921][2] = ᐃⲆ.ⵠⵠⲆⲆΔΔᐃ;
      ⲆⲆ[922] = ⲆⲆ[921];
      ⲆⲆ[923] = ⲆⲆ[921];
      ⲆⲆ[925] = [];
      ⲆⲆ[925][0] = ᐃⲆ.ⵠᐃΔⵠⵠᐃⵠ;
      ⲆⲆ[925][1] = ᐃⲆ.ᐃⵠⵠⲆΔⲆᐃ;
      ⲆⲆ[925][2] = ᐃⲆ.ⵠᐃᐃΔΔⲆⵠ;
      ⲆⲆ[926] = ⲆⲆ[925];
      ⲆⲆ[927] = ⲆⲆ[925];
      ⲆⲆ[929] = [];
      ⲆⲆ[929][0] = ᐃⲆ.ⵠⲆᐃⲆⵠⵠΔ;
      ⲆⲆ[929][1] = ᐃⲆ.ΔΔΔΔΔⵠⲆ;
      ⲆⲆ[929][2] = ᐃⲆ.ᐃⵠᐃᐃΔᐃⲆ;
      ⲆⲆ[930] = ⲆⲆ[929];
      ⲆⲆ[931] = ⲆⲆ[929];
      ⲆⲆ[946] = [];
      ⲆⲆ[946][0] = ᐃⲆ.ⲆⲆΔⵠΔᐃΔ;
      ⲆⲆ[946][1] = ᐃⲆ.ⵠᐃᐃΔⲆᐃⲆ;
      ⲆⲆ[946][2] = ᐃⲆ.ΔⲆⵠⵠΔᐃⵠ;
      ⲆⲆ[947] = ⲆⲆ[946];
      ⲆⲆ[948] = ⲆⲆ[946];
      ⲆⲆ[735] = [];
      ⲆⲆ[735][0] = ᐃⲆ.ⲆⲆⵠⲆΔᐃⵠ;
      ⲆⲆ[735][1] = ᐃⲆ.ⵠΔᐃᐃᐃⵠΔ;
      ⲆⲆ[735][2] = ᐃⲆ.ⵠΔᐃᐃⵠⲆᐃ;
      ⲆⲆ[737] = ⲆⲆ[735];
      ⲆⲆ[736] = ⲆⲆ[735];
      ⲆⲆ[1164] = [];
      ⲆⲆ[1164][0] = ᐃⲆ.ⵠⲆⵠΔⵠᐃⲆ;
      ⲆⲆ[1164][1] = ᐃⲆ.ΔⲆΔΔⵠᐃⵠ;
      ⲆⲆ[1164][2] = ᐃⲆ.ΔΔⵠΔΔᐃⵠ;
      ⲆⲆ[v554.ⵠⵠⵠᐃΔⵠΔⲆⵠ] = ⲆⲆ[1164];
      ⲆⲆ[1165] = ⲆⲆ[1164];
      ⲆⲆ[738] = [];
      ⲆⲆ[738][0] = ᐃⲆ.ᐃⲆⲆⵠΔⵠⵠ;
      ⲆⲆ[738][1] = ᐃⲆ.ⵠⲆᐃΔᐃᐃΔ;
      ⲆⲆ[738][2] = ᐃⲆ.ⲆⵠⲆⵠⲆⲆⲆ;
      ⲆⲆ[740] = ⲆⲆ[738];
      ⲆⲆ[739] = ⲆⲆ[738];
      ⲆⲆ[741] = [];
      ⲆⲆ[741][0] = ᐃⲆ.ᐃⲆᐃᐃᐃᐃΔ;
      ⲆⲆ[741][1] = ᐃⲆ.ΔⵠΔⲆΔᐃᐃ;
      ⲆⲆ[741][2] = ᐃⲆ.ᐃⲆΔⲆⲆΔΔ;
      ⲆⲆ[743] = ⲆⲆ[741];
      ⲆⲆ[742] = ⲆⲆ[741];
      ⲆⲆ[938] = [];
      ⲆⲆ[938][0] = ᐃⲆ.ⵠΔⲆⵠⵠⲆⲆ;
      ⲆⲆ[938][1] = ᐃⲆ.ⵠⲆⵠⵠΔᐃΔ;
      ⲆⲆ[938][2] = ᐃⲆ.ᐃⲆΔᐃΔᐃᐃ;
      ⲆⲆ[939] = ⲆⲆ[938];
      ⲆⲆ[936] = [];
      ⲆⲆ[936][0] = ᐃⲆ.ΔⲆⲆΔΔⲆΔ;
      ⲆⲆ[936][1] = ᐃⲆ.ΔΔⵠⵠⵠᐃⲆ;
      ⲆⲆ[936][2] = ᐃⲆ.ⲆⵠⲆΔᐃΔⲆ;
      ⲆⲆ[937] = ⲆⲆ[936];
      ⲆⲆ[617] = ⲆⲆ[616];
      ⲆⲆ[701] = ⲆⲆ[699];
      ⲆⲆ[703] = ⲆⲆ[702];
      ⲆⲆ[707] = ⲆⲆ[705];
      ⲆⲆ[348] = ⲆⲆ[311];
      ⲆⲆ[633] = ⲆⲆ[631];
      ⲆⲆ[645] = ⲆⲆ[644];
      ⲆⲆ[640] = ⲆⲆ[639];
      ⲆⲆ[273] = ⲆⲆ[309];
      ⲆⲆ[590] = ⲆⲆ[252];
      ⲆⲆ[752] = ⲆⲆ[751];
      ⲆⲆ[591] = ⲆⲆ[253];
      ⲆⲆ[754] = ⲆⲆ[753];
      ⲆⲆ[276] = ⲆⲆ[328];
      ⲆⲆ[863] = ⲆⲆ[865];
      ⲆⲆ[862] = ⲆⲆ[860];
      ⲆⲆ[831] = ⲆⲆ[829];
      ⲆⲆ[340] = ⲆⲆ[261];
      ⲆⲆ[596] = ⲆⲆ[594];
      ⲆⲆ[345] = ⲆⲆ[292];
      ⲆⲆ[346] = ⲆⲆ[293];
      ⲆⲆ[457] = ⲆⲆ[455];
      ⲆⲆ[274] = ⲆⲆ[313];
      ⲆⲆ[341] = ⲆⲆ[312];
      ⲆⲆ[272] = ⲆⲆ[258];
      ⲆⲆ[344] = ⲆⲆ[296];
      ⲆⲆ[459] = ⲆⲆ[458];
      ⲆⲆ[342] = ⲆⲆ[315];
      ⲆⲆ[270] = ⲆⲆ[297];
      ⲆⲆ[271] = ⲆⲆ[298];
      ⲆⲆ[343] = ⲆⲆ[316];
      ⲆⲆ[269] = ⲆⲆ[277];
      ⲆⲆ[358] = ⲆⲆ[310];
      ⲆⲆ[354] = ⲆⲆ[329];
      ⲆⲆ[356] = ⲆⲆ[331];
      ⲆⲆ[355] = ⲆⲆ[330];
      ⲆⲆ[494] = ⲆⲆ[492];
      ⲆⲆ[349] = ⲆⲆ[317];
      ⲆⲆ[350] = ⲆⲆ[319];
      ⲆⲆ[275] = ⲆⲆ[300];
      ⲆⲆ[351] = ⲆⲆ[323];
      ⲆⲆ[353] = ⲆⲆ[305];
      ⲆⲆ[514] = ⲆⲆ[513];
      ⲆⲆ[352] = ⲆⲆ[303];
      ⲆⲆ[520] = ⲆⲆ[518];
      ⲆⲆ[534] = ⲆⲆ[532];
      ⲆⲆ[531] = ⲆⲆ[529];
      ⲆⲆ[522] = ⲆⲆ[521];
      ⲆⲆ[524] = ⲆⲆ[523];
      ⲆⲆ[565] = ⲆⲆ[563];
      ⲆⲆ[554] = ⲆⲆ[553];
      ⲆⲆ[357] = ⲆⲆ[335];
      ⲆⲆ[359] = ⲆⲆ[337];
      ⲆⲆ[339] = f48(function (p1065, p1066, p1067) {
        var v1394 = document.createElement("canvas");
        var v1395 = v1394.getContext("2d");
        v1394.width = p1065 * 118;
        v1394.height = p1065 * 129;
        v1395.save();
        v1395.translate(p1065 * 90, p1065 * 90);
        f89(v1395, p1065 * -86.5, p1065 * -86, p1065 * 110, p1065 * 110, p1065 * 15);
        v1395.restore();
        f86(v1395, p1067[0], p1067[1], 4);
        v1395.save();
        f89(v1395, p1065 * 30, p1065 * 115, p1065 * 60, p1065 * 5, p1065 * 15);
        v1395.restore();
        f86(v1395, p1067[2], p1067[3], 4);
        v1395.save();
        f89(v1395, p1065 * 50, p1065 * 117, p1065 * 20, p1065 * 10, p1065 * 15);
        v1395.restore();
        f86(v1395, p1067[2]);
        return v1394;
      }(0.8, 0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]));
      ⲆⲆ[366] = f121(0.5, [{
        f: f194,
        x: 0,
        y: 2,
        a: 1,
        r: 0,
        c: ["#ffffff"]
      }], 0.16, ["#c4a23a", "#d0ad41", "#b89733"], 0.9);
      ⲆⲆ[382] = ⲆⲆ[361];
      ⲆⲆ[383] = ⲆⲆ[362];
      ⲆⲆ[384] = ⲆⲆ[364];
      ⲆⲆ[497] = ⲆⲆ[495];
      ⲆⲆ[385] = ⲆⲆ[392];
      ⲆⲆ[774] = ⲆⲆ[178];
      ⲆⲆ[775] = ⲆⲆ[179];
      ⲆⲆ[386] = ⲆⲆ[368];
      ⲆⲆ[625] = ⲆⲆ[624];
      ⲆⲆ[394] = ⲆⲆ[393];
      ⲆⲆ[1163] = ⲆⲆ[1162];
      ⲆⲆ[506] = ⲆⲆ[505];
      ⲆⲆ[387] = ⲆⲆ[369];
      ⲆⲆ[504] = ⲆⲆ[502];
      ⲆⲆ[388] = ⲆⲆ[372];
      ⲆⲆ[389] = ⲆⲆ[375];
      ⲆⲆ[390] = ⲆⲆ[378];
      ⲆⲆ[501] = ⲆⲆ[499];
      ⲆⲆ[391] = ⲆⲆ[381];
      ⲆⲆ[403] = ⲆⲆ[401];
      ⲆⲆ[397] = ⲆⲆ[395];
      ⲆⲆ[400] = ⲆⲆ[398];
      ⲆⲆ[406] = ⲆⲆ[404];
      ⲆⲆ[474] = ⲆⲆ[472];
      ⲆⲆ[875] = ⲆⲆ[874];
      ⲆⲆ[552] = ⲆⲆ[550];
      ⲆⲆ[710] = ⲆⲆ[709];
      ⲆⲆ[479] = ⲆⲆ[477];
      ⲆⲆ[482] = ⲆⲆ[480];
      ⲆⲆ[485] = ⲆⲆ[483];
      ⲆⲆ[488] = ⲆⲆ[486];
      ⲆⲆ[410] = ⲆⲆ[408];
      ⲆⲆ[719] = ⲆⲆ[717];
      ⲆⲆ[422] = ⲆⲆ[420];
      ⲆⲆ[431] = ⲆⲆ[429];
      ⲆⲆ[434] = ⲆⲆ[432];
      ⲆⲆ[437] = ⲆⲆ[435];
      ⲆⲆ[543] = ⲆⲆ[541];
      ⲆⲆ[733] = ⲆⲆ[732];
      ⲆⲆ[440] = ⲆⲆ[438];
      ⲆⲆ[443] = ⲆⲆ[441];
      ⲆⲆ[446] = ⲆⲆ[418];
      ⲆⲆ[606] = ⲆⲆ[605];
      ⲆⲆ[844] = ⲆⲆ[842];
      ⲆⲆ[683] = ⲆⲆ[685];
      ⲆⲆ[610] = ⲆⲆ[609];
      ⲆⲆ[689] = ⲆⲆ[143];
      ⲆⲆ[686] = ⲆⲆ[142];
      ⲆⲆ[682] = ⲆⲆ[140];
      ⲆⲆ[615] = ⲆⲆ[613];
      ⲆⲆ[614] = ⲆⲆ[612];
      ⲆⲆ[628] = ⲆⲆ[626];
      ⲆⲆ[630] = ⲆⲆ[629];
      ⲆⲆ[636] = ⲆⲆ[634];
      ⲆⲆ[868] = ⲆⲆ[200];
      ⲆⲆ[867] = ⲆⲆ[866];
      ⲆⲆ[648] = ⲆⲆ[646];
      ⲆⲆ[651] = ⲆⲆ[649];
      ⲆⲆ[653] = ⲆⲆ[652];
      ⲆⲆ[661] = ⲆⲆ[659];
      ⲆⲆ[898] = ⲆⲆ[196];
      ⲆⲆ[663] = ⲆⲆ[662];
      ⲆⲆ[665] = ⲆⲆ[664];
      ⲆⲆ[675] = ⲆⲆ[674];
      ⲆⲆ[731] = ⲆⲆ[145];
      ⲆⲆ[757] = ⲆⲆ[756];
      ⲆⲆ[759] = ⲆⲆ[176];
      ⲆⲆ[761] = ⲆⲆ[760];
      ⲆⲆ[763] = ⲆⲆ[177];
      ⲆⲆ[765] = ⲆⲆ[764];
      ⲆⲆ[766] = ⲆⲆ[175];
      ⲆⲆ[769] = ⲆⲆ[767];
      ⲆⲆ[773] = ⲆⲆ[771];
      ⲆⲆ[778] = ⲆⲆ[776];
      ⲆⲆ[781] = ⲆⲆ[779];
      ⲆⲆ[787] = ⲆⲆ[181];
      ⲆⲆ[786] = ⲆⲆ[180];
      ⲆⲆ[790] = ⲆⲆ[789];
      ⲆⲆ[801] = ⲆⲆ[800];
      ⲆⲆ[810] = ⲆⲆ[808];
      ⲆⲆ[836] = ⲆⲆ[834];
      ⲆⲆ[847] = ⲆⲆ[845];
      ⲆⲆ[828] = ⲆⲆ[826];
    })();
    ⲆⲆ[540] = [];
    ⲆⲆ[540][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[540][v554.ΔⲆᐃ] = [];
    for (var v1396 = 0; v1396 < v554.ᐃᐃΔΔⵠⵠⵠ; v1396++) {
      ⲆⲆ[540][v554.ᐃⵠⵠ].push(f48(f167(1, 4 + v1396, "#59B8CE")));
      ⲆⲆ[540][v554.ΔⲆᐃ].push(f48(f167(1, 4 + v1396, "#90DDD9")));
    }
    ⲆⲆ[470] = [];
    ⲆⲆ[470][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[470][v554.ΔⲆᐃ] = [];
    for (v1396 = 0; v554.ᐃᐃΔΔᐃⵠⵠ > v1396; v1396++) {
      ⲆⲆ[470][v554.ᐃⵠⵠ].push(f48(f167(1, 4 + v1396, "#fff")));
      ⲆⲆ[470][v554.ΔⲆᐃ].push(f48(f167(1, 4 + v1396, "#fff")));
    }
    ⲆⲆ[471] = [];
    ⲆⲆ[471][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[471][v554.ΔⲆᐃ] = [];
    for (v1396 = 0; v554.ᐃᐃΔΔᐃⵠⵠ > v1396; v1396++) {
      ⲆⲆ[471][v554.ᐃⵠⵠ].push(f48(f167(1, 6 + v1396, "#DDCD8A")));
      ⲆⲆ[471][v554.ΔⲆᐃ].push(f48(f167(1, 6 + v1396, "#155E57")));
    }
    ⲆⲆ[942] = [];
    ⲆⲆ[942][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[942][v554.ΔⲆᐃ] = [];
    for (v1396 = 0; v554.ⲆⵠΔᐃⵠΔⲆ > v1396; v1396++) {
      ⲆⲆ[942][v554.ᐃⵠⵠ].push(f48(f167(1, 4 + v1396, "#353326")));
      ⲆⲆ[942][v554.ΔⲆᐃ].push(f48(f167(1, 4 + v1396, "#1D2526")));
    }
    ⲆⲆ[201] = [];
    ⲆⲆ[201][v554.ᐃⵠⵠ] = f48(f96(1.5, 0, ["#ee71a9"]));
    ⲆⲆ[201][v554.ΔⲆᐃ] = f48(f96(1.5, 0, ["#ee71a9"]));
    ⲆⲆ[872] = [ⲆⲆ[201]];
    ⲆⲆ[872][1] = [];
    ⲆⲆ[872][2] = [];
    ⲆⲆ[872][3] = [];
    ⲆⲆ[872][4] = [];
    ⲆⲆ[872][1][v554.ᐃⵠⵠ] = f48(f96(1.5, 0, ["#e2d63b"]));
    ⲆⲆ[872][1][v554.ΔⲆᐃ] = f48(f96(1.5, 0, ["#e2d63b"]));
    ⲆⲆ[872][2][v554.ᐃⵠⵠ] = f48(f96(1.5, 0, ["#309cbd"]));
    ⲆⲆ[872][2][v554.ΔⲆᐃ] = f48(f96(1.5, 0, ["#309cbd"]));
    ⲆⲆ[872][3][v554.ᐃⵠⵠ] = f48(f96(1.5, 0, ["#cd232d"]));
    ⲆⲆ[872][3][v554.ΔⲆᐃ] = f48(f96(1.5, 0, ["#cd232d"]));
    ⲆⲆ[872][4][v554.ᐃⵠⵠ] = f48(f96(1.5, 0, ["#42b672"]));
    ⲆⲆ[872][4][v554.ΔⲆᐃ] = f48(f96(1.5, 0, ["#42b672"]));
    if (ⲆΔΔ.ΔⲆᐃΔⲆⵠⲆ("cti", vWindow.location.href)) {
      document.getElementById("version").innerHTML += "[CTI]";
    } else {
      f48 = function (p1068) {
        p1068.loaded = 1;
        return p1068;
      };
    }
    ⲆⲆ[797] = f48(function () {
      var v1397 = document.createElement("canvas");
      var v1398 = v1397.getContext("2d");
      v1397.width = 460;
      v1397.height = 220;
      v1398.fillStyle = "#3a2a0d";
      v1398.fillRect(0, 0, v1397.width, v1397.height);
      v1398.lineWidth = 4;
      v1398.beginPath();
      v1398.strokeStyle = "#513810";
      for (var v1399 = 20; v1399 < 220; v1399 += 20) {
        v1398.moveTo(0, v1399);
        v1398.lineTo(460, v1399);
        v1398.closePath();
        v1398.stroke();
      }
      return v1397;
    }());
    ⲆⲆ[108] = [];
    ⲆⲆ[108][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[108][v554.ΔⲆᐃ] = [];
    ⲆⲆ[108][v554.ᐃⵠⵠ].push(f48(f156(1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⲆⲆ[108][v554.ᐃⵠⵠ].push(f48(f156(0.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⲆⲆ[108][v554.ᐃⵠⵠ].push(f48(f156(0.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
    ⲆⲆ[108][v554.ΔⲆᐃ].push(f48(f156(1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⲆⲆ[108][v554.ΔⲆᐃ].push(f48(f156(0.9, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⲆⲆ[108][v554.ΔⲆᐃ].push(f48(f156(0.6, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
    ⲆⲆ[111] = [];
    ⲆⲆ[111][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[111][v554.ΔⲆᐃ] = [];
    ⲆⲆ[111][v554.ᐃⵠⵠ].push(f48(f159(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⲆⲆ[111][v554.ᐃⵠⵠ].push(f48(f159(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⲆⲆ[111][v554.ᐃⵠⵠ].push(f48(f159(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⲆⲆ[111][v554.ΔⲆᐃ].push(f48(f159(1.5, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⲆⲆ[111][v554.ΔⲆᐃ].push(f48(f159(1.3, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⲆⲆ[111][v554.ΔⲆᐃ].push(f48(f159(1.1, 0, ["#030d14", "#1b4444", "#16605a"])));
    ⲆⲆ[112] = [];
    ⲆⲆ[112][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[112][v554.ΔⲆᐃ] = [];
    ⲆⲆ[112][v554.ᐃⵠⵠ].push(f48(f162(1.1, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⲆⲆ[112][v554.ᐃⵠⵠ].push(f48(f162(0.9, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⲆⲆ[112][v554.ᐃⵠⵠ].push(f48(f162(0.7, 0, ["#232828", "#3fc9c9", "#74ede6"])));
    ⲆⲆ[112][v554.ΔⲆᐃ].push(f48(f162(1.1, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⲆⲆ[112][v554.ΔⲆᐃ].push(f48(f162(0.9, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⲆⲆ[112][v554.ΔⲆᐃ].push(f48(f162(0.7, 0, ["#030d14", "#2b9390", "#57bcb5"])));
    ⲆⲆ[239] = [];
    ⲆⲆ[239][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃⵠᐃⵠⵠⲆ;
    ⲆⲆ[239][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⲆⵠΔⲆΔ;
    ⲆⲆ[286] = [];
    ⲆⲆ[286][v554.ᐃⵠⵠ] = f48(f132(0.6, ["#0d1b1c"]));
    ⲆⲆ[286][v554.ΔⲆᐃ] = f48(f132(0.6, ["#030d14"]));
    ⲆⲆ[793] = [];
    ⲆⲆ[793][v554.ᐃⵠⵠ] = f48(f131(0.6, ["#2a2938", "#242330"]));
    ⲆⲆ[793][v554.ΔⲆᐃ] = f48(f131(0.6, ["#1b1e30", "#161921"]));
    ⲆⲆ[820] = [];
    ⲆⲆ[820][v554.ᐃⵠⵠ] = f48(f100(0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"]));
    ⲆⲆ[820][v554.ΔⲆᐃ] = f48(f100(0.6, 0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"]));
    ⲆⲆ[821] = [];
    ⲆⲆ[821][v554.ᐃⵠⵠ] = f48(f104(0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"]));
    ⲆⲆ[821][v554.ΔⲆᐃ] = f48(f104(0.6, 0, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"]));
    ⲆⲆ[822] = [];
    ⲆⲆ[822][v554.ᐃⵠⵠ] = f48(f133(0.4, ["#0d1b1c", "#759e6e", "#55604b"]));
    ⲆⲆ[822][v554.ΔⲆᐃ] = f48(f133(0.4, ["#030d14", "#11635e", "#02373e"]));
    ⲆⲆ[823] = f48(f102(0.6, ["#BB0000"]));
    ⲆⲆ[824] = f48(f102(0.6, ["#DBE71C"]));
    ⲆⲆ[825] = f48(f102(0.6, ["#00BB00"]));
    ⲆⲆ[109] = [];
    ⲆⲆ[109][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[109][v554.ΔⲆᐃ] = [];
    ⲆⲆ[109][v554.ᐃⵠⵠ].push(f134(1.1, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], vVV2122, 0));
    ⲆⲆ[109][v554.ᐃⵠⵠ].push(f134(1.1, ["#0e3022", "#0f9862", "#0b8750", "#26ab6e"], vV245, 0));
    ⲆⲆ[109][v554.ᐃⵠⵠ].push(f134(0.9, ["#0e3022", "#0e7d4c", "#258a4d", "#248c4d"], false, 0));
    ⲆⲆ[109][v554.ᐃⵠⵠ].push(f134(0.9, ["#0e3022", "#096d41", "#1f7b43", "#1f7b43"], v24, 0));
    ⲆⲆ[109][v554.ᐃⵠⵠ].push(f134(0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], false, 0));
    ⲆⲆ[109][v554.ᐃⵠⵠ].push(f134(0.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], true, 0));
    ⲆⲆ[109][v554.ΔⲆᐃ].push(f134(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], vVVV2132, 0));
    ⲆⲆ[109][v554.ΔⲆᐃ].push(f134(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], true, 0));
    ⲆⲆ[109][v554.ΔⲆᐃ].push(f134(0.9, ["#030d14", "#0b3534", "#144443", "#174240"], false, 0));
    ⲆⲆ[109][v554.ΔⲆᐃ].push(f134(0.9, ["#030d14", "#0b3534", "#144443", "#174240"], vVVV2432, 0));
    ⲆⲆ[109][v554.ΔⲆᐃ].push(f134(0.7, ["#030d14", "#082b1f", "#073328", "#073327", "#16695f"], vVVV213, 0));
    ⲆⲆ[109][v554.ΔⲆᐃ].push(f134(0.7, ["#030d14", "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], true, 0));
    ⲆⲆ[307] = [];
    ⲆⲆ[307][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[307][v554.ΔⲆᐃ] = [];
    ⲆⲆ[307][v554.ᐃⵠⵠ].push(f48(f138(f135(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], vVV2123), ⲆⲆ[109][v554.ᐃⵠⵠ][0])));
    ⲆⲆ[307][v554.ᐃⵠⵠ].push(f48(f138(f135(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], vVV243), ⲆⲆ[109][v554.ᐃⵠⵠ][1])));
    ⲆⲆ[307][v554.ΔⲆᐃ].push(f48(f138(f135(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], false), ⲆⲆ[109][v554.ΔⲆᐃ][0])));
    ⲆⲆ[307][v554.ΔⲆᐃ].push(f48(f138(f135(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], v24), ⲆⲆ[109][v554.ΔⲆᐃ][1])));
    ⲆⲆ[307][v554.ᐃⵠⵠ].push(f48(f138(f135(0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], vVVV21222), ⲆⲆ[109][v554.ᐃⵠⵠ][2])));
    ⲆⲆ[307][v554.ᐃⵠⵠ].push(f48(f138(f135(0.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], true), ⲆⲆ[109][v554.ᐃⵠⵠ][2])));
    ⲆⲆ[307][v554.ΔⲆᐃ].push(f48(f138(f135(0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], false), ⲆⲆ[109][v554.ΔⲆᐃ][2])));
    ⲆⲆ[307][v554.ΔⲆᐃ].push(f48(f138(f135(0.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], vV243), ⲆⲆ[109][v554.ΔⲆᐃ][3])));
    ⲆⲆ[109][v554.ᐃⵠⵠ][5] = f48(ⲆⲆ[109][v554.ᐃⵠⵠ][5]);
    ⲆⲆ[109][v554.ᐃⵠⵠ][4] = f48(ⲆⲆ[109][v554.ᐃⵠⵠ][4]);
    ⲆⲆ[109][v554.ᐃⵠⵠ][3] = f48(ⲆⲆ[109][v554.ᐃⵠⵠ][3]);
    ⲆⲆ[109][v554.ᐃⵠⵠ][2] = f48(ⲆⲆ[109][v554.ᐃⵠⵠ][2]);
    ⲆⲆ[109][v554.ᐃⵠⵠ][1] = f48(ⲆⲆ[109][v554.ᐃⵠⵠ][1]);
    ⲆⲆ[109][v554.ᐃⵠⵠ][0] = f48(ⲆⲆ[109][v554.ᐃⵠⵠ][0]);
    ⲆⲆ[109][v554.ΔⲆᐃ][5] = f48(ⲆⲆ[109][v554.ΔⲆᐃ][5]);
    ⲆⲆ[109][v554.ΔⲆᐃ][4] = f48(ⲆⲆ[109][v554.ΔⲆᐃ][4]);
    ⲆⲆ[109][v554.ΔⲆᐃ][3] = f48(ⲆⲆ[109][v554.ΔⲆᐃ][3]);
    ⲆⲆ[109][v554.ΔⲆᐃ][2] = f48(ⲆⲆ[109][v554.ΔⲆᐃ][2]);
    ⲆⲆ[109][v554.ΔⲆᐃ][1] = f48(ⲆⲆ[109][v554.ΔⲆᐃ][1]);
    ⲆⲆ[109][v554.ΔⲆᐃ][0] = f48(ⲆⲆ[109][v554.ΔⲆᐃ][0]);
    ⲆⲆ[8] = [];
    ⲆⲆ[8][v554.ᐃⵠⵠ] = f48(f91(4, f137(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"])));
    ⲆⲆ[8][v554.ΔⲆᐃ] = f48(f91(4, f137(0.75, vVV243, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"])));
    ⲆⲆ[1] = [];
    ⲆⲆ[1][v554.ᐃⵠⵠ] = f48(f91(4, f137(0.75, vV246, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ⲆⲆ[1][v554.ΔⲆᐃ] = f48(f91(4, f137(0.75, vVVV2432, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"])));
    ⲆⲆ[3] = [];
    ⲆⲆ[3][v554.ᐃⵠⵠ] = f48(f91(4, f137(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ⲆⲆ[3][v554.ΔⲆᐃ] = f48(f91(4, f137(0.75, vV242, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"])));
    ⲆⲆ[4] = [];
    ⲆⲆ[4][v554.ᐃⵠⵠ] = f48(f91(4, f137(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ⲆⲆ[4][v554.ΔⲆᐃ] = f48(f91(4, f137(0.75, true, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ⲆⲆ[31] = [];
    ⲆⲆ[31][v554.ᐃⵠⵠ] = f48(f91(4, f137(0.75, vVVV242, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ⲆⲆ[31][v554.ΔⲆᐃ] = f48(f91(4, f137(0.75, vVVV2432, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ⲆⲆ[9] = [];
    ⲆⲆ[9][v554.ᐃⵠⵠ] = f48(f91(3, f139(0.17, vV24, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"])));
    ⲆⲆ[9][v554.ΔⲆᐃ] = f48(f91(3, f139(0.17, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"])));
    ⲆⲆ[199] = [];
    ⲆⲆ[199][v554.ᐃⵠⵠ] = f48(f91(3, f151(0.32, true, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"])));
    ⲆⲆ[199][v554.ΔⲆᐃ] = f48(f91(3, f151(0.42, vVV243, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"])));
    ⲆⲆ[57] = [];
    ⲆⲆ[57][v554.ᐃⵠⵠ] = f48(f91(3, f141(0.4, vV246, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"])));
    ⲆⲆ[57][v554.ΔⲆᐃ] = f48(f91(3, f141(0.4, vV243, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"])));
    ⲆⲆ[0] = [];
    ⲆⲆ[0][v554.ᐃⵠⵠ] = f48(f91(3, f144(0.4, true, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"])));
    ⲆⲆ[0][v554.ΔⲆᐃ] = f48(f91(3, f144(0.4, vVV242, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"])));
    ⲆⲆ[5] = [];
    ⲆⲆ[5][v554.ᐃⵠⵠ] = f48(f91(3, f148(0.4, vVV242, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"])));
    ⲆⲆ[5][v554.ΔⲆᐃ] = f48(f91(3, f148(0.4, vVV243, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"])));
    ⲆⲆ[6] = [];
    ⲆⲆ[6][v554.ᐃⵠⵠ] = f48(f91(3, f147(0.4, true, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"])));
    ⲆⲆ[6][v554.ΔⲆᐃ] = f48(f91(3, f147(0.4, vVVV24, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"])));
    ⲆⲆ[30] = [];
    ⲆⲆ[30][v554.ᐃⵠⵠ] = f48(f91(3, f149(0.4, vVV242, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"])));
    ⲆⲆ[30][v554.ΔⲆᐃ] = f48(f91(3, f149(0.4, true, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"])));
    ⲆⲆ[285] = [];
    ⲆⲆ[285][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[285][v554.ΔⲆᐃ] = [];
    ⲆⲆ[285][v554.ᐃⵠⵠ].push(f48(f165(0.9, 0, ["#0d4f35"], 0)));
    ⲆⲆ[285][v554.ᐃⵠⵠ].push(f48(f165(0.9, 0, ["#0d4f35"], 1)));
    ⲆⲆ[285][v554.ᐃⵠⵠ].push(f48(f165(0.9, 0, ["#0d4f35"], 2)));
    ⲆⲆ[285][v554.ΔⲆᐃ].push(f48(f165(0.9, 0, ["#053339"], 0)));
    ⲆⲆ[285][v554.ΔⲆᐃ].push(f48(f165(0.9, 0, ["#053339"], 1)));
    ⲆⲆ[285][v554.ΔⲆᐃ].push(f48(f165(0.9, 0, ["#053339"], 2)));
    ⲆⲆ[285][v554.ᐃⵠⵠ].push(f48(f166(0.8, ["#241301", "#ba6b0e", "#6d3f04"])));
    ⲆⲆ[285][v554.ᐃⵠⵠ].push(f48(f166(0.8, ["#292002", "#ba930e", "#6d5704"])));
    ⲆⲆ[285][v554.ΔⲆᐃ].push(f48(f166(0.9, ["#052919", "#0a4738", "#06321f"])));
    ⲆⲆ[285][v554.ΔⲆᐃ].push(f48(f166(0.8, ["#052918", "#08491c", "#063417"])));
    ⲆⲆ[183] = [];
    ⲆⲆ[183][v554.ᐃⵠⵠ] = f48(f91(Math.PI / 2, f232(0.25, true, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])));
    ⲆⲆ[183][v554.ΔⲆᐃ] = f48(f91(Math.PI / 2, f232(0.25, true, ["#030d14", "#082b22", "#0a2f2b", "#072824"])));
    ⲆⲆ[803] = [];
    ⲆⲆ[803].push(f48(f244(0.25, ["#44301b", "#57442a", "#523e26"], 0)));
    ⲆⲆ[803].push(f48(f244(0.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1)));
    ⲆⲆ[803].push(f48(f244(0.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2)));
    ⲆⲆ[802] = [];
    ⲆⲆ[802][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[802][v554.ΔⲆᐃ] = [];
    ⲆⲆ[802][v554.ᐃⵠⵠ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1))));
    ⲆⲆ[802][v554.ΔⲆᐃ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1))));
    ⲆⲆ[802][v554.ᐃⵠⵠ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2))));
    ⲆⲆ[802][v554.ΔⲆᐃ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2))));
    ⲆⲆ[802][v554.ᐃⵠⵠ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#ffffff"], 3))));
    ⲆⲆ[802][v554.ΔⲆᐃ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#ffffff"], 3))));
    ⲆⲆ[802][v554.ᐃⵠⵠ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#362513"], 4))));
    ⲆⲆ[802][v554.ΔⲆᐃ].push(f48(f91(Math.PI / 2, f216(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#664d2e"], 4))));
    ⲆⲆ[110] = [];
    ⲆⲆ[110][v554.ᐃⵠⵠ] = [f48(f160(1.2, true, ["#0e3022", "#0b8052", "#077b49"]))];
    ⲆⲆ[110][v554.ΔⲆᐃ] = [f48(f160(1.2, true, ["#030d14", "#084442", "#0a4049"]))];
    ⲆⲆ[623] = [];
    ⲆⲆ[623][v554.ᐃⵠⵠ] = f48(f160(0.8, vVVV242, ["#0e3022", "#68622D", "#665329"]));
    ⲆⲆ[623][v554.ΔⲆᐃ] = f48(f160(0.8, true, ["#030d14", "#0F3A24", "#083326"]));
    ⲆⲆ[189] = [];
    ⲆⲆ[189][v554.ᐃⵠⵠ] = f48(f250(0.5, vVVV243, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"]));
    ⲆⲆ[189][v554.ΔⲆᐃ] = f48(f250(0.5, vV246, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"]));
    ⲆⲆ[192] = [];
    ⲆⲆ[192][v554.ᐃⵠⵠ] = f48(f95(0.5, vV246, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
    ⲆⲆ[192][v554.ΔⲆᐃ] = f48(f95(0.5, true, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"]));
    ⲆⲆ[194] = [];
    ⲆⲆ[194][v554.ᐃⵠⵠ] = f48(f265(0.5, vVVV242, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]));
    ⲆⲆ[194][v554.ΔⲆᐃ] = f48(f265(0.5, true, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"]));
    ⲆⲆ[287] = [];
    ⲆⲆ[287][v554.ᐃⵠⵠ] = f48(f160(0.8, true, ["#1b170c", "#0b8052", "#077b49"]));
    ⲆⲆ[287][v554.ΔⲆᐃ] = f48(f160(0.8, vVV24, ["#030d14", "#084442", "#0a4049"]));
    ⲆⲆ[813] = [];
    ⲆⲆ[813][v554.ᐃⵠⵠ] = f48(f250(0.5, vV246, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"]));
    ⲆⲆ[813][v554.ΔⲆᐃ] = f48(f250(0.5, vV24, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"]));
    ⲆⲆ[839] = [];
    ⲆⲆ[839][v554.ᐃⵠⵠ] = f48(f95(0.5, vVV24, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
    ⲆⲆ[839][v554.ΔⲆᐃ] = f48(f95(0.5, vV246, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"]));
    ⲆⲆ[869] = [];
    ⲆⲆ[869][v554.ᐃⵠⵠ] = f48(f265(0.5, vV246, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"]));
    ⲆⲆ[869][v554.ΔⲆᐃ] = f48(f265(0.5, true, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"]));
    ⲆⲆ[854] = [];
    ⲆⲆ[854][v554.ᐃⵠⵠ] = f48(f259(0.45, vVVV242, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"]));
    ⲆⲆ[854][v554.ΔⲆᐃ] = f48(f259(0.45, vVVV242, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"]));
    ⲆⲆ[859] = f48(f259(0.65, true, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"]));
    ⲆⲆ[294] = [];
    ⲆⲆ[294][v554.ᐃⵠⵠ] = f48(f161(1.4, 0, ["#ac222a", "#e6636a"]));
    ⲆⲆ[294][v554.ΔⲆᐃ] = f48(f161(1.4, 0, ["#46195e", "#744188"]));
    ⲆⲆ[288] = [];
    ⲆⲆ[288][v554.ᐃⵠⵠ] = f48(f129(0.9, 0, ["#efd435", "#ec8d35", "#e96132"]));
    ⲆⲆ[288][v554.ΔⲆᐃ] = f48(f129(0.9, 0, ["#efdb7b", "#efe854", "#e8ef62"]));
    ⲆⲆ[118] = [];
    ⲆⲆ[118][v554.ᐃⵠⵠ] = f48(f126(0.9, 0, ["#4d2d14", "#432516"]));
    ⲆⲆ[118][v554.ΔⲆᐃ] = f48(f126(0.9, 0, ["#282404", "#0a0a01"]));
    ⲆⲆ[113] = [];
    ⲆⲆ[113][v554.ᐃⵠⵠ] = f48(f127(0.9, 0, ["#4d2d14", "#432516"]));
    ⲆⲆ[113][v554.ΔⲆᐃ] = f48(f127(0.9, 0, ["#282404", "#0a0a01"]));
    ⲆⲆ[289] = [];
    ⲆⲆ[289][v554.ᐃⵠⵠ] = f48(f130(0.9, 0, ["#efd435"]));
    ⲆⲆ[289][v554.ΔⲆᐃ] = f48(f130(0.9, 0, ["#fffabb"]));
    ⲆⲆ[282] = [];
    ⲆⲆ[282][v554.ᐃⵠⵠ] = f48(f124(0.9, 0, ["#efd435"]));
    ⲆⲆ[282][v554.ΔⲆᐃ] = f48(f124(0.9, 0, ["#fffabb"]));
    ⲆⲆ[816] = [];
    ⲆⲆ[816][v554.ᐃⵠⵠ] = f48(f130(0.9, 0, ["#efd435"]));
    ⲆⲆ[816][v554.ΔⲆᐃ] = f48(f130(0.9, 0, ["rgba(255, 84, 0, 1)"]));
    ⲆⲆ[817] = [];
    ⲆⲆ[817][v554.ᐃⵠⵠ] = f48(f124(0.9, 0, ["#efd435"]));
    ⲆⲆ[817][v554.ΔⲆᐃ] = f48(f124(0.9, 0, ["#ff5704"]));
    ⲆⲆ[324] = f48(f110(1, "#ffffff"));
    ⲆⲆ[301] = f48(f110(1.5, "#ffffff"));
    ⲆⲆ[306] = f48(f153(1, "Your score:", 15, "#FFF"));
    ⲆⲆ[655] = f48(function (p1069, p1070) {
      var v1400 = document.createElement("canvas");
      var v1401 = v1400.getContext("2d");
      v1400.width = p1069 * 243;
      v1400.height = p1069 * 172;
      f87(v1401, p1069 * 119.5, p1069 * 140.125, p1069 * 19);
      f86(v1401, vUndefined, p1070[1], p1069 * 5);
      v1401.beginPath();
      v1401.lineCap = "round";
      v1401.lineJoin = "round";
      v1401.moveTo(p1069 * 36.5, p1069 * 20.125);
      v1401.bezierCurveTo(p1069 * 119.5, p1069 * 20.625, p1069 * 119.5, p1069 * 20.625, p1069 * 202.5, p1069 * 21.125);
      v1401.bezierCurveTo(p1069 * 214.5, p1069 * 22.125, p1069 * 216.5, p1069 * 26.125, p1069 * 217.5, p1069 * 35.125);
      v1401.bezierCurveTo(p1069 * 221, p1069 * 76.125, p1069 * 221, p1069 * 76.125, p1069 * 224.5, p1069 * 117.125);
      v1401.bezierCurveTo(p1069 * 225.5, p1069 * 127.125, p1069 * 221.5, p1069 * 131.125, p1069 * 210.5, p1069 * 132.125);
      v1401.bezierCurveTo(p1069 * 117.5, p1069 * 132.125, p1069 * 117.5, p1069 * 132.125, p1069 * 24.5, p1069 * 132.125);
      v1401.bezierCurveTo(p1069 * 14.5, p1069 * 131.125, p1069 * 13.5, p1069 * 126.125, p1069 * 16.5, p1069 * 111.125);
      v1401.bezierCurveTo(p1069 * 19.5, p1069 * 73.125, p1069 * 19.5, p1069 * 73.125, p1069 * 22.5, p1069 * 35.125);
      v1401.bezierCurveTo(p1069 * 23.5, p1069 * 23.125, p1069 * 29.5, p1069 * 21.125, p1069 * 36.5, p1069 * 20.125);
      v1401.closePath();
      f86(v1401, p1070[0], p1070[1], p1069 * 4);
      v1401.beginPath();
      v1401.lineCap = "round";
      v1401.lineJoin = "round";
      v1401.moveTo(p1069 * 15.5, p1069 * 138.625);
      v1401.bezierCurveTo(p1069 * 120, p1069 * 138.625, p1069 * 120, p1069 * 138.625, p1069 * 224.5, p1069 * 138.625);
      v1401.closePath();
      f86(v1401, undefined, p1070[2], p1069 * 10);
      v1401.beginPath();
      v1401.lineCap = "round";
      v1401.lineJoin = "round";
      v1401.moveTo(p1069 * 13.5, p1069 * 131.625);
      v1401.bezierCurveTo(p1069 * 119.5, p1069 * 131.625, p1069 * 119.5, p1069 * 131.625, p1069 * 225.5, p1069 * 131.625);
      v1401.closePath();
      f86(v1401, vVVVVUndefined197, p1070[3], p1069 * 10);
      f87(v1401, p1069 * 119.5, p1069 * 140.125, p1069 * 14.866068747318506);
      f86(v1401, p1070[4], p1070[5], p1069 * 4);
      v1401.beginPath();
      v1401.lineCap = "round";
      v1401.lineJoin = "round";
      v1401.moveTo(p1069 * 106.5, p1069 * 146.625);
      v1401.bezierCurveTo(p1069 * 116.5, p1069 * 137.625, p1069 * 118.5, p1069 * 136.625, p1069 * 123.5, p1069 * 138.625);
      v1401.bezierCurveTo(p1069 * 131.5, p1069 * 145.625, p1069 * 133.5, p1069 * 148.625, p1069 * 127.5, p1069 * 152.625);
      v1401.bezierCurveTo(p1069 * 115.5, p1069 * 158.625, p1069 * 111.5, p1069 * 153.625, p1069 * 106.5, p1069 * 147.625);
      v1401.closePath();
      f86(v1401, p1070[6], p1070[7], p1069 * 2);
      v1401.beginPath();
      v1401.lineCap = "round";
      v1401.lineJoin = "round";
      v1401.moveTo(p1069 * 105.5, p1069 * 146.625);
      v1401.bezierCurveTo(p1069 * 116.5, p1069 * 159.625, p1069 * 124.5, p1069 * 156.625, p1069 * 132.5, p1069 * 146.625);
      f86(v1401, vVVUndefined272, p1070[8], p1069 * 5);
      v1401.save();
      v1401.translate(p1069 * 75.5, p1069 * 80.125);
      f89(v1401, p1069 * -39, p1069 * -40, p1069 * 78, p1069 * 78, p1069 * 10);
      v1401.restore();
      f86(v1401, p1070[9]);
      v1401.save();
      v1401.translate(p1069 * 167, p1069 * 80.125);
      f89(v1401, p1069 * -38.5, p1069 * -39, p1069 * 78, p1069 * 78, p1069 * 10);
      v1401.restore();
      f86(v1401, p1070[9]);
      return v1400;
    }(0.9, ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"]));
    ⲆⲆ[656] = ᐃⲆ.ΔⲆⲆᐃⵠᐃⵠ;
    ⲆⲆ[135] = [];
    ⲆⲆ[135][v554.ᐃⵠⵠ] = f48(f117(1.5, vV244, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⲆⲆ[135][v554.ΔⲆᐃ] = f48(f117(1.5, vVVVV242, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⲆⲆ[641] = [];
    ⲆⲆ[641][v554.ᐃⵠⵠ] = f48(f119(2, vV242, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⲆⲆ[641][v554.ΔⲆᐃ] = f48(f119(2, vVVV2432, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⲆⲆ[642] = [];
    ⲆⲆ[642][v554.ᐃⵠⵠ] = f48(f120(1.5, vVVV2432, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
    ⲆⲆ[642][v554.ΔⲆᐃ] = f48(f120(1.5, true, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
    ⲆⲆ[134] = [];
    ⲆⲆ[134][v554.ᐃⵠⵠ] = f48(f116(2.2, 0, ["#A89F67", "#9E8456"]));
    ⲆⲆ[134][v554.ΔⲆᐃ] = f48(f116(2.2, 0, ["#0B4049", "#08383D"]));
    ⲆⲆ[638] = [];
    ⲆⲆ[638][v554.ᐃⵠⵠ] = f48(f116(2.2, 0, ["#68622D", "#665329"]));
    ⲆⲆ[638][v554.ΔⲆᐃ] = f48(f116(2.2, 0, ["#0F3A24", "#083326"]));
    ⲆⲆ[321] = [];
    ⲆⲆ[321][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#A89F67", "#9E8456"]));
    ⲆⲆ[321][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#15514F", "#0F3F3D"]));
    ⲆⲆ[811] = [];
    ⲆⲆ[811][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#c67933", "#b17238"]));
    ⲆⲆ[811][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#043c37", "#032b23"]));
    ⲆⲆ[984] = [];
    ⲆⲆ[984][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#3a8214", "#4a9c1e"]));
    ⲆⲆ[984][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#032d29", "#044640"]));
    ⲆⲆ[837] = [];
    ⲆⲆ[837][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#e8e8e8", "#bbbbbb"]));
    ⲆⲆ[837][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#1c6161", "#07413f"]));
    ⲆⲆ[848] = [];
    ⲆⲆ[848][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#328a56", "#449573"]));
    ⲆⲆ[848][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#043c37", "#032b23"]));
    ⲆⲆ[952] = [];
    ⲆⲆ[952][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#c98e2f", "#a36b11"]));
    ⲆⲆ[952][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#043c37", "#032b23"]));
    ⲆⲆ[962] = [];
    ⲆⲆ[962][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#b22419", "#99110e"]));
    ⲆⲆ[962][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#04323c", "#03222b"]));
    ⲆⲆ[969] = [];
    ⲆⲆ[969][v554.ᐃⵠⵠ] = f48(f155(0.8, 0, ["#13a56d", "#098a58"]));
    ⲆⲆ[969][v554.ΔⲆᐃ] = f48(f155(0.8, 0, ["#043c37", "#032b23"]));
    ⲆⲆ[657] = f121(1, [{
      f: f116,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⲆⲆ[723] = f121(1, [{
      f: f127,
      x: 0,
      y: 0,
      a: 1,
      r: -Math.PI / 5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⲆⲆ[724] = f121(1, [{
      f: f260,
      x: 0,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.15, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⲆⲆ[334] = f121(0.9, [], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    ⲆⲆ[115] = [];
    ⲆⲆ[115][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#7d613e", "#9e7e5a"]));
    ⲆⲆ[115][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#084442", "#125e5a"]));
    ⲆⲆ[132] = [];
    ⲆⲆ[132][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#9E8456", "#A89F67"]));
    ⲆⲆ[132][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#1b6f6a", "#0d4e4c"]));
    ⲆⲆ[668] = [];
    ⲆⲆ[668][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#665329", "#68622D"]));
    ⲆⲆ[668][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#083326", "#0F3A24"]));
    ⲆⲆ[188] = [];
    ⲆⲆ[188][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#c67933", "#ec952d"]));
    ⲆⲆ[188][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#0e6553", "#094437"]));
    ⲆⲆ[210] = [];
    ⲆⲆ[210][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#375809", "#4b770e"]));
    ⲆⲆ[210][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#09542d", "#0d5d2f"]));
    ⲆⲆ[985] = [];
    ⲆⲆ[985][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#585809", "#72770e"]));
    ⲆⲆ[985][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#295209", "#305d0d"]));
    ⲆⲆ[191] = [];
    ⲆⲆ[191][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#b9b094", "#e2d2c0"]));
    ⲆⲆ[191][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#126366", "#0d484b"]));
    ⲆⲆ[193] = [];
    ⲆⲆ[193][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#3f8662", "#30915d"]));
    ⲆⲆ[193][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#0e6553", "#094437"]));
    ⲆⲆ[812] = [];
    ⲆⲆ[812][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#c79153", "#dfa868"]));
    ⲆⲆ[812][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#073927", "#075040"]));
    ⲆⲆ[838] = [];
    ⲆⲆ[838][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#768b5b", "#819984"]));
    ⲆⲆ[838][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#0c4540", "#0e5153"]));
    ⲆⲆ[849] = [];
    ⲆⲆ[849][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#567465", "#627c6e"]));
    ⲆⲆ[849][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#073927", "#075040"]));
    ⲆⲆ[204] = [];
    ⲆⲆ[204][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#996b3a", "#bf956b"]));
    ⲆⲆ[204][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#0e6553", "#094437"]));
    ⲆⲆ[953] = [];
    ⲆⲆ[953][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#7a634a", "#a68f77"]));
    ⲆⲆ[953][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#1e4d43", "#113c32"]));
    ⲆⲆ[206] = [];
    ⲆⲆ[206][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#99403c", "#bc796c"]));
    ⲆⲆ[206][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#1e434d", "#11303c"]));
    ⲆⲆ[963] = [];
    ⲆⲆ[963][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#88504e", "#b3857c"]));
    ⲆⲆ[963][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#253b41", "#162930"]));
    ⲆⲆ[208] = [];
    ⲆⲆ[208][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#0f8870", "#23af93"]));
    ⲆⲆ[208][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#032829", "#083233"]));
    ⲆⲆ[970] = [];
    ⲆⲆ[970][v554.ᐃⵠⵠ] = f48(f103(0.9, 0, ["#618a20", "#84a74e"]));
    ⲆⲆ[970][v554.ΔⲆᐃ] = f48(f103(0.9, 0, ["#1f4632", "#335d47"]));
    ⲆⲆ[114] = [];
    ⲆⲆ[114][v554.ᐃⵠⵠ] = f48(f106(1.2, vV246, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]));
    ⲆⲆ[114][v554.ΔⲆᐃ] = f48(f106(1.2, true, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"]));
    ⲆⲆ[162] = [];
    ⲆⲆ[162][v554.ᐃⵠⵠ] = f48(f171(1, v24, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ⲆⲆ[162][v554.ΔⲆᐃ] = f48(f171(1, vVVV2432, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⲆⲆ[165] = [];
    ⲆⲆ[165][v554.ᐃⵠⵠ] = f48(f173(1, true, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⲆⲆ[165][v554.ΔⲆᐃ] = f48(f173(1, vVV243, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⲆⲆ[122] = [];
    ⲆⲆ[122][v554.ᐃⵠⵠ] = f48(f176(1, vV246, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⲆⲆ[122][v554.ΔⲆᐃ] = f48(f176(1, vVV2422, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⲆⲆ[163] = [];
    ⲆⲆ[163][v554.ᐃⵠⵠ] = f48(f176(1, vVV2432, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ⲆⲆ[163][v554.ΔⲆᐃ] = f48(f176(1, vVV2422, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ⲆⲆ[164] = [];
    ⲆⲆ[164][v554.ᐃⵠⵠ] = f48(f177(1, vVVV243, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ⲆⲆ[164][v554.ΔⲆᐃ] = f48(f177(1, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ⲆⲆ[160] = [];
    ⲆⲆ[160][v554.ᐃⵠⵠ] = f48(f224(0.8, true, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
    ⲆⲆ[160][v554.ΔⲆᐃ] = f48(f224(0.8, true, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⲆⲆ[169] = [];
    ⲆⲆ[169][v554.ᐃⵠⵠ] = f48(f209(0.8, vV245, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
    ⲆⲆ[169][v554.ΔⲆᐃ] = f48(f209(0.8, true, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
    ⲆⲆ[170] = [];
    ⲆⲆ[170][v554.ᐃⵠⵠ] = f48(f202(0.8, vVVV243, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⲆⲆ[170][v554.ΔⲆᐃ] = f48(f202(0.8, vV24, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⲆⲆ[168] = [];
    ⲆⲆ[168][v554.ᐃⵠⵠ] = f48(f246(0.8, vV246, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
    ⲆⲆ[168][v554.ΔⲆᐃ] = f48(f246(0.8, vVV242, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
    ⲆⲆ[123] = [];
    ⲆⲆ[123][v554.ᐃⵠⵠ] = f48(f246(0.8, vVVVV2432, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⲆⲆ[123][v554.ΔⲆᐃ] = f48(f246(0.8, vVV24, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⲆⲆ[166] = [];
    ⲆⲆ[166][v554.ᐃⵠⵠ] = f48(f178(1.5, vV244, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"]));
    ⲆⲆ[166][v554.ΔⲆᐃ] = f48(f178(1.5, vVVV2432, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
    ⲆⲆ[336] = [];
    ⲆⲆ[336][v554.ᐃⵠⵠ] = f48(f178(1, vV214, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⲆⲆ[336][v554.ΔⲆᐃ] = f48(f178(1, vV214, ["#042b30", "#042b30", "#0b342b", "#0b342b", "#042b30", "#0b342b"]));
    ⲆⲆ[171] = [];
    ⲆⲆ[171][v554.ᐃⵠⵠ] = f48(f179(1.5, vVV2432, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]));
    ⲆⲆ[171][v554.ΔⲆᐃ] = f48(f179(1.5, true, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"]));
    ⲆⲆ[373] = [];
    ⲆⲆ[373][v554.ᐃⵠⵠ] = f48(f179(1, vVVV2122, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⲆⲆ[373][v554.ΔⲆᐃ] = f48(f179(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⲆⲆ[124] = [];
    ⲆⲆ[124][v554.ᐃⵠⵠ] = f48(f179(1.5, vVV242, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
    ⲆⲆ[124][v554.ΔⲆᐃ] = f48(f179(1.5, vVV242, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
    ⲆⲆ[500] = [];
    ⲆⲆ[500][v554.ᐃⵠⵠ] = f48(f179(1, vVV2123, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⲆⲆ[500][v554.ΔⲆᐃ] = f48(f179(1, vVV2122, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⲆⲆ[172] = [];
    ⲆⲆ[172][v554.ᐃⵠⵠ] = f48(f181(1.5, true, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]));
    ⲆⲆ[172][v554.ΔⲆᐃ] = f48(f181(1.5, vVV245, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"]));
    ⲆⲆ[376] = [];
    ⲆⲆ[376][v554.ᐃⵠⵠ] = f48(f181(1, vVVV21222, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⲆⲆ[376][v554.ΔⲆᐃ] = f48(f181(1, vVVVV212, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⲆⲆ[173] = [];
    ⲆⲆ[173][v554.ᐃⵠⵠ] = f48(f180(1.5, vVVV2432, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
    ⲆⲆ[173][v554.ΔⲆᐃ] = f48(f180(1.5, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
    ⲆⲆ[379] = [];
    ⲆⲆ[379][v554.ᐃⵠⵠ] = f48(f180(1, vV212, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
    ⲆⲆ[379][v554.ΔⲆᐃ] = f48(f180(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
    ⲆⲆ[167] = [];
    ⲆⲆ[167][v554.ᐃⵠⵠ] = f48(f242(0.5, 0, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]));
    ⲆⲆ[167][v554.ΔⲆᐃ] = f48(f242(0.5, 0, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"]));
    ⲆⲆ[691] = [];
    ⲆⲆ[691][v554.ᐃⵠⵠ] = f48(f289(0.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"]));
    ⲆⲆ[691][v554.ΔⲆᐃ] = f48(f289(0.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"]));
    ⲆⲆ[264] = [];
    ⲆⲆ[264][v554.ᐃⵠⵠ] = f48(f108(0.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"]));
    ⲆⲆ[264][v554.ΔⲆᐃ] = f48(f108(0.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"]));
    ⲆⲆ[260] = [];
    ⲆⲆ[260][v554.ᐃⵠⵠ] = f48(f91(Math.PI, f113(0.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"])));
    ⲆⲆ[260][v554.ΔⲆᐃ] = f48(f91(Math.PI, f113(0.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"])));
    ⲆⲆ[266] = f48(function (p1071, p1072) {
      var v1402 = document.createElement("canvas");
      var v1403 = v1402.getContext("2d");
      v1402.width = p1071 * 450;
      v1402.height = p1071 * 470;
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 226.5, p1071 * 91.546875);
      v1403.bezierCurveTo(p1071 * 254.5, p1071 * 115.546875, p1071 * 261.5, p1071 * 115.546875, p1071 * 294.5, p1071 * 109.546875);
      v1403.bezierCurveTo(p1071 * 299.5, p1071 * 141.546875, p1071 * 315.5, p1071 * 151.546875, p1071 * 344.5, p1071 * 158.546875);
      v1403.bezierCurveTo(p1071 * 330.5, p1071 * 195.546875, p1071 * 341.5, p1071 * 207.546875, p1071 * 361.5, p1071 * 226.546875);
      v1403.bezierCurveTo(p1071 * 331.5, p1071 * 251.546875, p1071 * 335.5, p1071 * 270.546875, p1071 * 342.5, p1071 * 295.546875);
      v1403.bezierCurveTo(p1071 * 300.5, p1071 * 296.546875, p1071 * 293.5, p1071 * 325.546875, p1071 * 292.5, p1071 * 344.546875);
      v1403.bezierCurveTo(p1071 * 257.5, p1071 * 326.546875, p1071 * 242.5, p1071 * 338.546875, p1071 * 224.5, p1071 * 361.546875);
      v1403.bezierCurveTo(p1071 * 200.5, p1071 * 329.546875, p1071 * 180.5, p1071 * 334.546875, p1071 * 155.5, p1071 * 341.546875);
      v1403.bezierCurveTo(p1071 * 146.5, p1071 * 307.546875, p1071 * 140.5, p1071 * 302.546875, p1071 * 107.5, p1071 * 292.546875);
      v1403.bezierCurveTo(p1071 * 117.5, p1071 * 253.546875, p1071 * 109.5, p1071 * 244.546875, p1071 * 89.5, p1071 * 224.546875);
      v1403.bezierCurveTo(p1071 * 118.5, p1071 * 191.546875, p1071 * 114.5, p1071 * 182.546875, p1071 * 108.5, p1071 * 156.546875);
      v1403.bezierCurveTo(p1071 * 143.5, p1071 * 149.546875, p1071 * 150.5, p1071 * 136.546875, p1071 * 157.5, p1071 * 106.546875);
      v1403.bezierCurveTo(p1071 * 202.5, p1071 * 120.546875, p1071 * 211.5, p1071 * 103.546875, p1071 * 228.5, p1071 * 91.546875);
      v1403.closePath();
      f86(v1403, undefined, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 224.5, p1071 * 129.546875);
      v1403.bezierCurveTo(p1071 * 247.5, p1071 * 147.546875, p1071 * 252.5, p1071 * 143.546875, p1071 * 274.5, p1071 * 141.546875);
      v1403.bezierCurveTo(p1071 * 279.5, p1071 * 163.546875, p1071 * 289.5, p1071 * 168.546875, p1071 * 311.5, p1071 * 178.546875);
      v1403.bezierCurveTo(p1071 * 301.5, p1071 * 199.546875, p1071 * 307.5, p1071 * 213.546875, p1071 * 323.5, p1071 * 226.546875);
      v1403.bezierCurveTo(p1071 * 303.5, p1071 * 240.546875, p1071 * 303.5, p1071 * 255.546875, p1071 * 312.5, p1071 * 275.546875);
      v1403.bezierCurveTo(p1071 * 281.5, p1071 * 278.546875, p1071 * 276.5, p1071 * 291.546875, p1071 * 272.5, p1071 * 313.546875);
      v1403.bezierCurveTo(p1071 * 248.5, p1071 * 301.546875, p1071 * 239.5, p1071 * 310.546875, p1071 * 224.5, p1071 * 324.546875);
      v1403.bezierCurveTo(p1071 * 211.5, p1071 * 304.546875, p1071 * 199.5, p1071 * 301.546875, p1071 * 176.5, p1071 * 309.546875);
      v1403.bezierCurveTo(p1071 * 165.5, p1071 * 276.546875, p1071 * 159.5, p1071 * 275.546875, p1071 * 138.5, p1071 * 274.546875);
      v1403.bezierCurveTo(p1071 * 148.5, p1071 * 248.546875, p1071 * 140.5, p1071 * 237.546875, p1071 * 125.5, p1071 * 225.546875);
      v1403.bezierCurveTo(p1071 * 145.5, p1071 * 205.546875, p1071 * 146.5, p1071 * 195.546875, p1071 * 142.5, p1071 * 176.546875);
      v1403.bezierCurveTo(p1071 * 173.5, p1071 * 164.546875, p1071 * 173.5, p1071 * 155.546875, p1071 * 178.5, p1071 * 140.546875);
      v1403.bezierCurveTo(p1071 * 214.5, p1071 * 143.546875, p1071 * 214.5, p1071 * 135.546875, p1071 * 226.5, p1071 * 129.546875);
      v1403.closePath();
      f86(v1403, vVVVVUndefined1972, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 224.5, p1071 * 160.546875);
      v1403.bezierCurveTo(p1071 * 236.5, p1071 * 168.546875, p1071 * 239.5, p1071 * 168.546875, p1071 * 258.5, p1071 * 168.546875);
      v1403.bezierCurveTo(p1071 * 261.5, p1071 * 185.546875, p1071 * 268.5, p1071 * 187.546875, p1071 * 282.5, p1071 * 192.546875);
      v1403.bezierCurveTo(p1071 * 277.5, p1071 * 208.546875, p1071 * 283.5, p1071 * 216.546875, p1071 * 289.5, p1071 * 228.546875);
      v1403.bezierCurveTo(p1071 * 277.5, p1071 * 243.546875, p1071 * 280.5, p1071 * 253.546875, p1071 * 281.5, p1071 * 260.546875);
      v1403.bezierCurveTo(p1071 * 264.5, p1071 * 260.546875, p1071 * 259.5, p1071 * 269.546875, p1071 * 256.5, p1071 * 283.546875);
      v1403.bezierCurveTo(p1071 * 244.5, p1071 * 276.546875, p1071 * 232.5, p1071 * 283.546875, p1071 * 223.5, p1071 * 291.546875);
      v1403.bezierCurveTo(p1071 * 213.5, p1071 * 276.546875, p1071 * 205.5, p1071 * 278.546875, p1071 * 190.5, p1071 * 281.546875);
      v1403.bezierCurveTo(p1071 * 181.5, p1071 * 262.546875, p1071 * 173.5, p1071 * 259.546875, p1071 * 165.5, p1071 * 258.546875);
      v1403.bezierCurveTo(p1071 * 169.5, p1071 * 239.546875, p1071 * 167.5, p1071 * 233.546875, p1071 * 157.5, p1071 * 225.546875);
      v1403.bezierCurveTo(p1071 * 169.5, p1071 * 208.546875, p1071 * 170.5, p1071 * 203.546875, p1071 * 168.5, p1071 * 192.546875);
      v1403.bezierCurveTo(p1071 * 181.5, p1071 * 187.546875, p1071 * 188.5, p1071 * 179.546875, p1071 * 192.5, p1071 * 168.546875);
      v1403.bezierCurveTo(p1071 * 216.5, p1071 * 170.546875, p1071 * 218.5, p1071 * 163.546875, p1071 * 225.5, p1071 * 160.546875);
      v1403.closePath();
      f86(v1403, vVVVVUndefined1972, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 205.5, p1071 * 194.546875);
      v1403.bezierCurveTo(p1071 * 216.5, p1071 * 192.546875, p1071 * 219.5, p1071 * 191.546875, p1071 * 225.5, p1071 * 185.546875);
      v1403.bezierCurveTo(p1071 * 232.5, p1071 * 193.546875, p1071 * 237.5, p1071 * 191.546875, p1071 * 246.5, p1071 * 192.546875);
      v1403.bezierCurveTo(p1071 * 249.5, p1071 * 202.546875, p1071 * 253.5, p1071 * 205.546875, p1071 * 258.5, p1071 * 207.546875);
      v1403.bezierCurveTo(p1071 * 259.5, p1071 * 222.546875, p1071 * 256.5, p1071 * 223.546875, p1071 * 265.5, p1071 * 226.546875);
      v1403.bezierCurveTo(p1071 * 256.5, p1071 * 231.546875, p1071 * 255.5, p1071 * 241.546875, p1071 * 259.5, p1071 * 248.546875);
      v1403.bezierCurveTo(p1071 * 250.5, p1071 * 245.546875, p1071 * 245.5, p1071 * 252.546875, p1071 * 243.5, p1071 * 260.546875);
      v1403.bezierCurveTo(p1071 * 234.5, p1071 * 256.546875, p1071 * 229.5, p1071 * 258.546875, p1071 * 223.5, p1071 * 265.546875);
      v1403.bezierCurveTo(p1071 * 218.5, p1071 * 255.546875, p1071 * 213.5, p1071 * 257.546875, p1071 * 204.5, p1071 * 261.546875);
      v1403.bezierCurveTo(p1071 * 203.5, p1071 * 251.546875, p1071 * 198.5, p1071 * 248.546875, p1071 * 189.5, p1071 * 244.546875);
      v1403.bezierCurveTo(p1071 * 194.5, p1071 * 237.546875, p1071 * 192.5, p1071 * 231.546875, p1071 * 184.5, p1071 * 225.546875);
      v1403.bezierCurveTo(p1071 * 191.5, p1071 * 211.546875, p1071 * 192.5, p1071 * 209.546875, p1071 * 190.5, p1071 * 204.546875);
      v1403.bezierCurveTo(p1071 * 200.5, p1071 * 204.546875, p1071 * 204.5, p1071 * 198.546875, p1071 * 207.5, p1071 * 194.546875);
      v1403.closePath();
      f86(v1403, vVUndefined27, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 149.5, p1071 * 93.546875);
      v1403.bezierCurveTo(p1071 * 287.5, p1071 * 332.546875, p1071 * 226, p1071 * 225.546875, p1071 * 302.5, p1071 * 357.546875);
      v1403.closePath();
      f86(v1403, vVVVVUndefined197, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 224.5, p1071 * 66.546875);
      v1403.bezierCurveTo(p1071 * 224.5, p1071 * 223.546875, p1071 * 224.5, p1071 * 223.546875, p1071 * 224.5, p1071 * 380.546875);
      v1403.closePath();
      f86(v1403, undefined, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 302.5, p1071 * 88.546875);
      v1403.bezierCurveTo(p1071 * 222.5, p1071 * 227.546875, p1071 * 222.5, p1071 * 227.546875, p1071 * 142.5, p1071 * 366.546875);
      v1403.closePath();
      f86(v1403, undefined, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 361.5, p1071 * 147.546875);
      v1403.bezierCurveTo(p1071 * 223, p1071 * 226.546875, p1071 * 223, p1071 * 226.546875, p1071 * 84.5, p1071 * 305.546875);
      v1403.closePath();
      f86(v1403, vVVVVUndefined1972, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 379.5, p1071 * 225.546875);
      v1403.bezierCurveTo(p1071 * 221, p1071 * 225.546875, p1071 * 221, p1071 * 225.546875, p1071 * 62.5, p1071 * 225.546875);
      v1403.closePath();
      f86(v1403, vVUndefined26, p1072[0], 4);
      v1403.beginPath();
      v1403.lineCap = "round";
      v1403.lineJoin = "round";
      v1403.moveTo(p1071 * 90.5, p1071 * 147.546875);
      v1403.bezierCurveTo(p1071 * 226.5, p1071 * 226.546875, p1071 * 226.5, p1071 * 226.546875, p1071 * 362.5, p1071 * 305.546875);
      v1403.closePath();
      f86(v1403, vVVVUndefined273, p1072[0], 4);
      return v1402;
    }(0.6, ["#FFFFFF"]));
    ⲆⲆ[299] = [];
    ⲆⲆ[299][v554.ᐃⵠⵠ] = f48(f111(1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"]));
    ⲆⲆ[299][v554.ΔⲆᐃ] = f48(f111(1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"]));
    ⲆⲆ[10] = [];
    ⲆⲆ[10][v554.ᐃⵠⵠ] = f48(f226(0.6, 0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]));
    ⲆⲆ[10][v554.ΔⲆᐃ] = f48(f226(0.6, 0, ["#478e8b", "#327e73", "#073030", "#08403f"]));
    ⲆⲆ[11] = [];
    ⲆⲆ[11][v554.ᐃⵠⵠ] = f48(f185(0.6, 0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]));
    ⲆⲆ[11][v554.ΔⲆᐃ] = f48(f185(0.6, 0, ["#073030", "#08403f", "#478e8b", "#327e73"]));
    ⲆⲆ[40] = [];
    ⲆⲆ[40][v554.ᐃⵠⵠ] = f48(f211(0.63, vV245, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]));
    ⲆⲆ[40][v554.ΔⲆᐃ] = f48(f211(0.63, true, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"]));
    ⲆⲆ[41] = [];
    ⲆⲆ[41][v554.ᐃⵠⵠ] = f48(f125(0.6, 0, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]));
    ⲆⲆ[41][v554.ΔⲆᐃ] = f48(f125(0.6, 0, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"]));
    ⲆⲆ[42] = [];
    ⲆⲆ[42][v554.ᐃⵠⵠ] = f48(f128(0.6, 0, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]));
    ⲆⲆ[42][v554.ΔⲆᐃ] = f48(f128(0.6, 0, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"]));
    ⲆⲆ[716] = [];
    ⲆⲆ[716][v554.ᐃⵠⵠ] = f48(f263(0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"]));
    ⲆⲆ[716][v554.ΔⲆᐃ] = f48(f263(0.42, true, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"]));
    ⲆⲆ[720] = [];
    ⲆⲆ[720][v554.ᐃⵠⵠ] = f48(f276(0.9, ["#e4c027"]));
    ⲆⲆ[720][v554.ΔⲆᐃ] = f48(f276(0.9, ["#D8E57F"]));
    ⲆⲆ[144] = [];
    ⲆⲆ[144][v554.ᐃⵠⵠ] = f48(f257(0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]));
    ⲆⲆ[144][v554.ΔⲆᐃ] = f48(f257(0.42, true, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"]));
    ⲆⲆ[722] = f48(function (p1073, p1074) {
      var v1404 = document.createElement("canvas");
      var v1405 = v1404.getContext("2d");
      v1404.width = p1073 * 149;
      v1404.height = p1073 * 356;
      v1405.save();
      v1405.translate(p1073 * 74.5, p1073 * 177.5);
      f89(v1405, p1073 * -57.5, p1073 * -161.5, p1073 * 100, p1073 * 323, p1073 * 10);
      v1405.restore();
      f86(v1405, p1074[0], p1074[1], p1073 * 4);
      v1405.save();
      v1405.translate(p1073 * 74.5, p1073 * 177.5);
      f89(v1405, p1073 * -57.5, p1073 * 50.5, p1073 * 100, p1073 * 105, p1073 * 10);
      v1405.restore();
      f86(v1405, p1074[6], p1074[1], p1073 * 4);
      v1405.beginPath();
      v1405.lineCap = "round";
      v1405.lineJoin = "round";
      v1405.moveTo(p1073 * 16, p1073 * 125);
      v1405.bezierCurveTo(p1073 * 74.5, p1073 * 125, p1073 * 118, p1073 * 125, p1073 * 118, p1073 * 125);
      v1405.closePath();
      f86(v1405, p1074[2], p1074[2], p1073 * 10);
      v1405.beginPath();
      v1405.lineCap = "round";
      v1405.lineJoin = "round";
      v1405.moveTo(p1073 * 16, p1073 * 120);
      v1405.bezierCurveTo(p1073 * 74.5, p1073 * 120, p1073 * 74.5, p1073 * 120, p1073 * 118, p1073 * 120);
      v1405.closePath();
      f86(v1405, p1074[3], p1074[3], p1073 * 10);
      v1405.beginPath();
      v1405.lineCap = "round";
      v1405.lineJoin = "round";
      v1405.moveTo(p1073 * 16, p1073 * 228);
      v1405.bezierCurveTo(p1073 * 75, p1073 * 228.5, p1073 * 118, p1073 * 228.5, p1073 * 118, p1073 * 229);
      v1405.closePath();
      f86(v1405, p1074[2], p1074[2], p1073 * 10);
      v1405.beginPath();
      v1405.lineCap = "round";
      v1405.lineJoin = "round";
      v1405.moveTo(p1073 * 16, p1073 * 224);
      v1405.bezierCurveTo(p1073 * 75, p1073 * 224, p1073 * 118, p1073 * 224, p1073 * 118, p1073 * 224);
      v1405.closePath();
      f86(v1405, p1074[3], p1074[3], p1073 * 10);
      v1405.save();
      v1405.translate(p1073 * 72, p1073 * 68.5);
      f89(v1405, p1073 * -41.5, p1073 * -36.5, p1073 * 73, p1073 * 73, p1073 * 13);
      v1405.restore();
      f86(v1405, p1074[4]);
      v1405.save();
      v1405.translate(p1073 * 72, p1073 * 175.5);
      f89(v1405, p1073 * -41.5, p1073 * -38.5, p1073 * 73, p1073 * 73, p1073 * 13);
      v1405.restore();
      f86(v1405, p1074[4]);
      v1405.save();
      v1405.translate(p1073 * 72, p1073 * 279.5);
      f89(v1405, p1073 * -41.5, p1073 * -40.5, p1073 * 73, p1073 * 73, p1073 * 13);
      v1405.restore();
      f86(v1405, p1074[4]);
      v1405.beginPath();
      v1405.lineCap = "round";
      v1405.lineJoin = "round";
      v1405.moveTo(p1073 * 16, p1073 * 338);
      v1405.bezierCurveTo(p1073 * 75, p1073 * 338, p1073 * 118, p1073 * 338, p1073 * 118, p1073 * 338);
      v1405.closePath();
      f86(v1405, p1074[2], p1074[2], p1073 * 10);
      v1405.beginPath();
      v1405.lineCap = "round";
      v1405.lineJoin = "round";
      v1405.moveTo(p1073 * 16, p1073 * 333);
      v1405.bezierCurveTo(p1073 * 75, p1073 * 333, p1073 * 118, p1073 * 333, p1073 * 118, p1073 * 333);
      v1405.closePath();
      f86(v1405, p1074[3], p1074[3], p1073 * 10);
      return v1404;
    }(1, ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"]));
    ⲆⲆ[407] = [];
    ⲆⲆ[407][v554.ᐃⵠⵠ] = f48(f182(0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]));
    ⲆⲆ[407][v554.ΔⲆᐃ] = f48(f182(0.5, true, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"]));
    ⲆⲆ[119] = [];
    ⲆⲆ[119][v554.ᐃⵠⵠ] = f48(f183(0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"]));
    ⲆⲆ[119][v554.ΔⲆᐃ] = f48(f183(0.5, vVVV24, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"]));
    ⲆⲆ[411] = f48(function (p1075, p1076, p1077) {
      var v1406 = document.createElement("canvas");
      var v1407 = v1406.getContext("2d");
      v1406.width = p1075 * 118;
      v1406.height = p1075 * 129;
      v1407.save();
      v1407.translate(p1075 * 90, p1075 * 90);
      f89(v1407, p1075 * -86.5, p1075 * -86, p1075 * 110, p1075 * 110, p1075 * 15);
      v1407.restore();
      f86(v1407, p1077[0], p1077[1], 4);
      return v1406;
    }(0.8, 0, ["#5f6061", "#939393"]));
    ⲆⲆ[412] = f121(1, [{
      f: f127,
      x: 0,
      y: 0,
      a: 1,
      r: Math.PI / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#494949", "#5b5858", "#3d3b3b"], 1);
    ⲆⲆ[198] = [];
    ⲆⲆ[198][v554.ᐃⵠⵠ] = f48(f187(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ⲆⲆ[198][v554.ΔⲆᐃ] = f48(f187(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ⲆⲆ[913] = [];
    ⲆⲆ[913][v554.ᐃⵠⵠ] = f48(f192(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
    ⲆⲆ[913][v554.ΔⲆᐃ] = f48(f192(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
    ⲆⲆ[18] = [];
    ⲆⲆ[18][v554.ᐃⵠⵠ] = f48(f91(3, f189(0.7, vV245, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"])));
    ⲆⲆ[18][v554.ΔⲆᐃ] = f48(f91(3, f189(0.7, vVV2432, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"])));
    ⲆⲆ[12] = [];
    ⲆⲆ[12][v554.ᐃⵠⵠ] = f48(f91(3, f191(0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"])));
    ⲆⲆ[12][v554.ΔⲆᐃ] = f48(f91(3, f191(0.7, true, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"])));
    ⲆⲆ[13] = [];
    ⲆⲆ[13][v554.ᐃⵠⵠ] = f48(f91(3, f190(0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"])));
    ⲆⲆ[13][v554.ΔⲆᐃ] = f48(f91(3, f190(0.65, vVV244, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"])));
    ⲆⲆ[14] = [];
    ⲆⲆ[14][v554.ᐃⵠⵠ] = f48(f91(3, f188(0.67, true, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"])));
    ⲆⲆ[14][v554.ΔⲆᐃ] = f48(f91(3, f188(0.67, vV245, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"])));
    ⲆⲆ[15] = [];
    ⲆⲆ[15][v554.ᐃⵠⵠ] = f48(f91(3, f196(0.67, vVVV242, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"])));
    ⲆⲆ[15][v554.ΔⲆᐃ] = f48(f91(3, f196(0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"])));
    ⲆⲆ[33] = [];
    ⲆⲆ[33][v554.ᐃⵠⵠ] = f48(f91(3, f195(0.67, true, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"])));
    ⲆⲆ[33][v554.ΔⲆᐃ] = f48(f91(3, f195(0.67, vVVV2432, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"])));
    ⲆⲆ[16] = [];
    ⲆⲆ[16][v554.ᐃⵠⵠ] = f48(f91(3, f193(1, vVVV24, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"])));
    ⲆⲆ[16][v554.ΔⲆᐃ] = f48(f91(3, f193(1, true, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"])));
    ⲆⲆ[35] = [];
    ⲆⲆ[35][v554.ᐃⵠⵠ] = f48(f91(3, f223(1, true, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
    ⲆⲆ[35][v554.ΔⲆᐃ] = f48(f91(3, f223(1, vVVV243, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"])));
    ⲆⲆ[55] = [];
    ⲆⲆ[55][v554.ᐃⵠⵠ] = f48(f91(3, f258(0.5, vVV2422, ["#0d1b1c", "#939393", "#5f6061"])));
    ⲆⲆ[55][v554.ΔⲆᐃ] = f48(f91(3, f258(0.5, vV242, ["#030d14", "#485e66", "#1f343f"])));
    ⲆⲆ[45] = [];
    ⲆⲆ[45][v554.ᐃⵠⵠ] = f48(f91(3, f264(1, vVV2422, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"])));
    ⲆⲆ[45][v554.ΔⲆᐃ] = f48(f91(3, f264(1, vVVVV242, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"])));
    ⲆⲆ[36] = [];
    ⲆⲆ[36][v554.ᐃⵠⵠ] = f48(f91(3, f223(1, vVV244, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
    ⲆⲆ[36][v554.ΔⲆᐃ] = f48(f91(3, f223(1, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"])));
    ⲆⲆ[37] = [];
    ⲆⲆ[37][v554.ᐃⵠⵠ] = f48(f91(3, f223(1, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
    ⲆⲆ[37][v554.ΔⲆᐃ] = f48(f91(3, f223(1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
    ⲆⲆ[38] = [];
    ⲆⲆ[38][v554.ᐃⵠⵠ] = f48(f91(3, f223(1, vVVV243, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
    ⲆⲆ[38][v554.ΔⲆᐃ] = f48(f91(3, f223(1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
    ⲆⲆ[148] = [];
    ⲆⲆ[148][v554.ᐃⵠⵠ] = f48(f197(0.55, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]));
    ⲆⲆ[148][v554.ΔⲆᐃ] = f48(f197(0.55, 0, ["#080707", "#133d3c", "#2b6664", "#1b2529"]));
    ⲆⲆ[536] = [];
    ⲆⲆ[536].push(f48(f197(0.8, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])));
    ⲆⲆ[536].push(f48(f197(0.8, 0, ["#141414", "#9f7d17", "#dab33c", "#474545"])));
    ⲆⲆ[536].push(f48(f197(0.8, 0, ["#141414", "#73590d", "#a88a2c", "#2a2828"])));
    ⲆⲆ[538] = [];
    ⲆⲆ[538].push(ⲆⲆ[536][0]);
    ⲆⲆ[538].push(ⲆⲆ[536][0]);
    ⲆⲆ[538].push(ⲆⲆ[536][0]);
    ⲆⲆ[158] = [];
    ⲆⲆ[158][v554.ᐃⵠⵠ] = f48(f243(0.06, vVVV213, ["#141414", "#c4a23a", "#816511"]));
    ⲆⲆ[158][v554.ΔⲆᐃ] = f48(f243(0.06, false, ["#030d14", "#2b6664", "#133d3c"]));
    ⲆⲆ[535] = [];
    ⲆⲆ[535].push(f48(f243(0.08, false, ["#141414", "#c4a23a", "#816511"])));
    ⲆⲆ[535].push(f48(f243(0.08, v21, ["#141414", "#e2bd4e", "#a38018"])));
    ⲆⲆ[535].push(f48(f243(0.08, false, ["#141414", "#b0902e", "#634d09"])));
    ⲆⲆ[149] = f121(1.5, [{
      f: f210,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ⲆⲆ[526] = [];
    ⲆⲆ[526][v554.ᐃⵠⵠ] = f48(f235(0.8, 0, ["#347f93", "#54a4ba"]));
    ⲆⲆ[526][v554.ΔⲆᐃ] = f48(f235(0.8, 0, ["#98ede3", "#94f2e7"]));
    ⲆⲆ[527] = [];
    ⲆⲆ[527][v554.ᐃⵠⵠ] = f48(f215(0.8, 0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]));
    ⲆⲆ[527][v554.ΔⲆᐃ] = f48(f215(0.8, 0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"]));
    ⲆⲆ[528] = [];
    ⲆⲆ[528][v554.ᐃⵠⵠ] = f48(f245(0.8, 0, ["#a9e4ed", "#86d4e0"]));
    ⲆⲆ[528][v554.ΔⲆᐃ] = f48(f245(0.8, 0, ["#83ddd4", "#485e66"]));
    ⲆⲆ[151] = [];
    ⲆⲆ[151][v554.ᐃⵠⵠ] = f48(f238(0.8, vV243, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"]));
    ⲆⲆ[151][v554.ΔⲆᐃ] = f48(f238(0.8, vVV243, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"]));
    ⲆⲆ[1192] = [];
    ⲆⲆ[1192][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔΔΔΔⲆΔ;
    ⲆⲆ[1192][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⵠⵠⲆᐃⲆ;
    ⲆⲆ[1193] = [];
    ⲆⲆ[1193][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⵠⵠΔΔΔⲆ;
    ⲆⲆ[1193][v554.ΔⲆᐃ] = ᐃⲆ.ⲆᐃᐃⵠⵠΔᐃ;
    ⲆⲆ[1194] = [];
    ⲆⲆ[1194][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⲆᐃΔⵠᐃΔ;
    ⲆⲆ[1194][v554.ΔⲆᐃ] = ᐃⲆ.ΔⵠΔⲆᐃⵠΔ;
    ⲆⲆ[152] = [];
    ⲆⲆ[152][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⲆΔᐃΔⲆⵠ;
    ⲆⲆ[152][v554.ΔⲆᐃ] = ᐃⲆ.ΔΔⵠΔⲆⲆⲆ;
    ⲆⲆ[1198] = [];
    ⲆⲆ[1198][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⲆⵠᐃᐃᐃΔ;
    ⲆⲆ[1198][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔⲆᐃΔⵠΔ;
    ⲆⲆ[153] = [];
    ⲆⲆ[153][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃⵠⲆΔᐃⲆ;
    ⲆⲆ[153][v554.ΔⲆᐃ] = ᐃⲆ.ⵠᐃⲆΔⵠⵠⵠ;
    ⲆⲆ[1202] = [];
    ⲆⲆ[1202][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆⵠⵠΔΔⵠ;
    ⲆⲆ[1202][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆⲆΔⲆΔΔ;
    ⲆⲆ[154] = [];
    ⲆⲆ[154][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆⵠᐃᐃⲆᐃᐃ;
    ⲆⲆ[154][v554.ΔⲆᐃ] = ᐃⲆ.ᐃⲆΔᐃᐃⵠᐃ;
    ⲆⲆ[1206] = [];
    ⲆⲆ[1206][v554.ᐃⵠⵠ] = ᐃⲆ.ΔᐃⵠⵠΔⲆΔ;
    ⲆⲆ[1206][v554.ΔⲆᐃ] = ᐃⲆ.ΔⲆⲆⵠⵠᐃΔ;
    ⲆⲆ[155] = [];
    ⲆⲆ[155][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠⵠⵠⵠΔⵠΔ;
    ⲆⲆ[155][v554.ΔⲆᐃ] = ᐃⲆ.ⲆⵠⲆᐃᐃⲆᐃ;
    ⲆⲆ[1210] = [];
    ⲆⲆ[1210][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔⲆᐃⵠⵠⵠ;
    ⲆⲆ[1210][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔΔⵠΔⵠΔ;
    ⲆⲆ[156] = [];
    ⲆⲆ[156][v554.ᐃⵠⵠ] = ᐃⲆ.ΔⵠᐃᐃᐃⲆΔ;
    ⲆⲆ[156][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔⵠⲆᐃΔᐃ;
    ⲆⲆ[1214] = [];
    ⲆⲆ[1214][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆᐃⲆᐃᐃⵠⵠ;
    ⲆⲆ[1214][v554.ΔⲆᐃ] = ᐃⲆ.ΔᐃⲆᐃᐃᐃⵠ;
    ⲆⲆ[157] = [];
    ⲆⲆ[157][v554.ᐃⵠⵠ] = ᐃⲆ.ⲆΔᐃᐃᐃΔΔ;
    ⲆⲆ[157][v554.ΔⲆᐃ] = ᐃⲆ.ᐃΔᐃⵠⵠⲆⲆ;
    ⲆⲆ[245] = [];
    ⲆⲆ[245][v554.ᐃⵠⵠ] = ᐃⲆ.ⵠΔᐃⲆⲆⲆⲆ;
    ⲆⲆ[245][v554.ΔⲆᐃ] = ᐃⲆ.ⵠΔΔⲆΔᐃΔ;
    ⲆⲆ[246] = ᐃⲆ.ⲆᐃᐃⵠΔⵠΔ;
    ⲆⲆ[159] = [];
    ⲆⲆ[159][v554.ᐃⵠⵠ] = f48(f227(0.75, vVV243, ["#0d1b1c", "#4c3a15", "#634828", "#564021"]));
    ⲆⲆ[159][v554.ΔⲆᐃ] = f48(f227(0.75, true, ["#030d14", "#0d2e33", "#184747", "#123b3f"]));
    ⲆⲆ[558] = f48(f198(0.3, ["#092813", "#1f773d"], 0));
    ⲆⲆ[559] = f48(f198(0.3, ["#092813", "#1f773d"], 1));
    ⲆⲆ[885] = f48(function (p1078, p1079) {
      var v1408 = document.createElement("canvas");
      var v1409 = v1408.getContext("2d");
      v1408.width = p1078 * 60;
      v1408.height = p1078 * 60;
      v1409.translate(p1078 * -25, p1078 * -25);
      v1409.translate(0, p1078 * 5);
      v1409.beginPath();
      v1409.lineCap = "round";
      v1409.lineJoin = "round";
      v1409.moveTo(p1078 * 24, p1078 * 50);
      v1409.bezierCurveTo(p1078 * 32.5, p1078 * 54.5, p1078 * 32.5, p1078 * 54.5, p1078 * 41, p1078 * 59);
      v1409.bezierCurveTo(p1078 * 57, p1078 * 47, p1078 * 57, p1078 * 47, p1078 * 73, p1078 * 35);
      v1409.bezierCurveTo(p1078 * 57, p1078 * 53, p1078 * 57, p1078 * 53, p1078 * 41, p1078 * 71);
      v1409.closePath();
      f86(v1409, p1079[0]);
      v1409.translate(0, p1078 * -5);
      v1409.beginPath();
      v1409.lineCap = "round";
      v1409.lineJoin = "round";
      v1409.moveTo(p1078 * 24, p1078 * 50);
      v1409.bezierCurveTo(p1078 * 32.5, p1078 * 54.5, p1078 * 32.5, p1078 * 54.5, p1078 * 41, p1078 * 59);
      v1409.bezierCurveTo(p1078 * 57, p1078 * 47, p1078 * 57, p1078 * 47, p1078 * 73, p1078 * 35);
      v1409.bezierCurveTo(p1078 * 57, p1078 * 53, p1078 * 57, p1078 * 53, p1078 * 41, p1078 * 71);
      v1409.closePath();
      f86(v1409, p1079[1]);
      return v1408;
    }(0.6, ["#092813", "#1f773d"]));
    ⲆⲆ[556] = [];
    ⲆⲆ[556].push(f48(f230(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0)));
    ⲆⲆ[556].push(f48(f230(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0)));
    ⲆⲆ[556].push(f48(f230(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0)));
    ⲆⲆ[560] = [];
    var vF48 = f48(f230(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
    ⲆⲆ[560].push(vF48);
    ⲆⲆ[560].push(vF48);
    ⲆⲆ[560].push(vF48);
    ⲆⲆ[557] = [];
    ⲆⲆ[557].push(f48(f230(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1)));
    ⲆⲆ[557].push(f48(f230(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
    ⲆⲆ[557].push(f48(f230(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1)));
    ⲆⲆ[681] = f48(function (p1080, p1081) {
      var v1410 = document.createElement("canvas");
      var v1411 = v1410.getContext("2d");
      var v1412 = p1080 * 170;
      var v1413 = p1080 * 172;
      var v1414 = v1412 / 2;
      var v1415 = v1413 / 2;
      v1410.width = v1412;
      v1410.height = v1413;
      v1411.translate(v1414, v1415);
      v1411.save();
      for (var v1416 = 0; v1416 < 10; v1416++) {
        v1411.rotate(Math.PI / 5);
        v1411.save();
        v1411.translate(p1080 * 65, 0);
        f92(v1411, 3, p1080 * 18, p1080 * 4);
        f86(v1411, p1081[0]);
        v1411.restore();
      }
      v1411.restore();
      f87(v1411, 0, 0, p1080 * 40);
      f86(v1411, vVVVVUndefined197, p1081[0], p1080 * 6);
      f87(v1411, 0, 0, p1080 * 20);
      f86(v1411, p1081[0]);
      return v1410;
    }(0.3, ["#FFFFFF"]));
    ⲆⲆ[794] = f48(function (p1082, p1083) {
      var v1417 = document.createElement("canvas");
      var v1418 = v1417.getContext("2d");
      var v1419 = p1082 * 130;
      var v1420 = p1082 * 142;
      var v1421 = v1419 / 2;
      var v1422 = v1420 / 2;
      v1417.width = v1419;
      v1417.height = v1420;
      f87(v1418, v1421, v1422, p1082 * 40);
      f86(v1418, undefined, p1083[0], p1082 * 7);
      f87(v1418, v1421, v1422, p1082 * 30);
      f86(v1418, vVVVVUndefined1972, p1083[0], p1082 * 7);
      f87(v1418, v1421, v1422, p1082 * 20);
      f86(v1418, p1083[0]);
      return v1417;
    }(0.3, ["#FFFFFF"]));
    ⲆⲆ[562] = f48(f198(0.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0));
    ⲆⲆ[667] = f48(f91(Math.PI / 5, function (p1084, p1085) {
      var v1423 = document.createElement("canvas");
      var v1424 = v1423.getContext("2d");
      v1423.width = p1084 * 316;
      v1423.height = p1084 * 365;
      v1424.save();
      v1424.translate(p1084 * 156.07142639160156, p1084 * 51.81248474121094);
      v1424.rotate(0);
      f89(v1424, p1084 * -21.5, p1084 * -34, p1084 * 43, p1084 * 68, p1084 * 8);
      v1424.restore();
      f86(v1424, p1085[0], p1085[0], p1084 * 15);
      v1424.beginPath();
      v1424.lineCap = "round";
      v1424.lineJoin = "round";
      v1424.moveTo(p1084 * 126.57142639160156, p1084 * 67.38392639160156);
      v1424.bezierCurveTo(p1084 * 126.57142639160156, p1084 * 57.38392639160156, p1084 * 132.57142639160156, p1084 * 54.38392639160156, p1084 * 140.57142639160156, p1084 * 54.38392639160156);
      v1424.bezierCurveTo(p1084 * 177.57142639160156, p1084 * 55.38392639160156, p1084 * 158.07142639160156, p1084 * 54.38392639160156, p1084 * 175.57142639160156, p1084 * 54.38392639160156);
      v1424.bezierCurveTo(p1084 * 185.57142639160156, p1084 * 56.38392639160156, p1084 * 185.57142639160156, p1084 * 57.38392639160156, p1084 * 184.57142639160156, p1084 * 66.38392639160156);
      v1424.bezierCurveTo(p1084 * 184.57142639160156, p1084 * 78.38392639160156, p1084 * 184.57142639160156, p1084 * 89.38392639160156, p1084 * 184.57142639160156, p1084 * 90.38392639160156);
      v1424.bezierCurveTo(p1084 * 177.57142639160156, p1084 * 107.38392639160156, p1084 * 180.57142639160156, p1084 * 112.38392639160156, p1084 * 189.57142639160156, p1084 * 116.38392639160156);
      v1424.bezierCurveTo(p1084 * 212.57142639160156, p1084 * 127.38392639160156, p1084 * 212.57142639160156, p1084 * 132.38392639160156, p1084 * 211.57142639160156, p1084 * 150.38392639160156);
      v1424.bezierCurveTo(p1084 * 211.57142639160156, p1084 * 227.59821128845215, p1084 * 211.57142639160156, p1084 * 227.59821128845215, p1084 * 211.57142639160156, p1084 * 304.81249618530273);
      v1424.bezierCurveTo(p1084 * 212.57142639160156, p1084 * 328.81249618530273, p1084 * 209.57142639160156, p1084 * 330.81249618530273, p1084 * 188.57142639160156, p1084 * 333.81249618530273);
      v1424.bezierCurveTo(p1084 * 155.07142639160156, p1084 * 333.31249618530273, p1084 * 155.07142639160156, p1084 * 333.31249618530273, p1084 * 121.57142639160156, p1084 * 332.81249618530273);
      v1424.bezierCurveTo(p1084 * 104.57142639160156, p1084 * 327.81249618530273, p1084 * 105.57142639160156, p1084 * 328.81249618530273, p1084 * 104.57142639160156, p1084 * 312.81249618530273);
      v1424.bezierCurveTo(p1084 * 104.57142639160156, p1084 * 228.16963958740234, p1084 * 104.57142639160156, p1084 * 228.16963958740234, p1084 * 104.57142639160156, p1084 * 143.52678298950195);
      v1424.bezierCurveTo(p1084 * 106.57142639160156, p1084 * 124.52678298950195, p1084 * 110.57142639160156, p1084 * 123.52678298950195, p1084 * 123.57142639160156, p1084 * 116.52678298950195);
      v1424.bezierCurveTo(p1084 * 136.57142639160156, p1084 * 110.52678298950195, p1084 * 130.57142639160156, p1084 * 106.52678298950195, p1084 * 126.57142639160156, p1084 * 98.52678298950195);
      v1424.closePath();
      f86(v1424, p1085[0], p1085[0], p1084 * 15);
      v1424.beginPath();
      v1424.lineCap = "round";
      v1424.lineJoin = "round";
      v1424.moveTo(p1084 * 125.57142639160156, p1084 * 156.66963958740234);
      v1424.bezierCurveTo(p1084 * 125.57142639160156, p1084 * 182.66963958740234, p1084 * 125.57142639160156, p1084 * 182.66963958740234, p1084 * 125.57142639160156, p1084 * 208.66963958740234);
      v1424.closePath();
      f86(v1424, p1085[0], p1085[0], p1084 * 15);
      return v1423;
    }(0.2, ["#FFFFFF"])));
    ⲆⲆ[43] = [];
    ⲆⲆ[43][v554.ᐃⵠⵠ] = f48(f233(0.85, 0, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]));
    ⲆⲆ[43][v554.ΔⲆᐃ] = f48(f233(0.85, 0, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"]));
    ⲆⲆ[561] = [];
    ⲆⲆ[561].push(f48(f230(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1)));
    ⲆⲆ[561].push(f48(f230(0.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
    ⲆⲆ[561].push(f48(f230(0.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
    ⲆⲆ[83] = [];
    ⲆⲆ[83][v554.ᐃⵠⵠ] = f48(f273(0.37, 0, ["#2a2938", "#242330", "#313041"]));
    ⲆⲆ[83][v554.ΔⲆᐃ] = f48(f273(0.37, 0, ["#1b1e30", "#161921", "#252f3e"]));
    ⲆⲆ[85] = [];
    ⲆⲆ[85][v554.ᐃⵠⵠ] = f48(f261(0.17, 0, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"]));
    ⲆⲆ[85][v554.ΔⲆᐃ] = f48(f261(0.17, 0, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
    ⲆⲆ[86] = [];
    ⲆⲆ[86][v554.ᐃⵠⵠ] = f48(f269(0.55, true, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1));
    ⲆⲆ[86][v554.ΔⲆᐃ] = f48(f269(0.55, vVV243, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1));
    ⲆⲆ[84] = [];
    ⲆⲆ[84][v554.ᐃⵠⵠ] = f48(f269(0.55, true, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0));
    ⲆⲆ[84][v554.ΔⲆᐃ] = f48(f269(0.55, vVV244, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0));
    ⲆⲆ[77] = [];
    ⲆⲆ[77][v554.ᐃⵠⵠ] = f48(f280(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]));
    ⲆⲆ[77][v554.ΔⲆᐃ] = f48(f280(0.2, vV243, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"]));
    ⲆⲆ[78] = [];
    ⲆⲆ[78][v554.ᐃⵠⵠ] = f48(f280(0.2, vVV24, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]));
    ⲆⲆ[78][v554.ΔⲆᐃ] = f48(f280(0.2, vVV245, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"]));
    ⲆⲆ[79] = [];
    ⲆⲆ[79][v554.ᐃⵠⵠ] = f48(f280(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]));
    ⲆⲆ[79][v554.ΔⲆᐃ] = f48(f280(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"]));
    ⲆⲆ[61] = [];
    ⲆⲆ[61][v554.ᐃⵠⵠ] = f48(f184(0.24, vVVV242, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"]));
    ⲆⲆ[61][v554.ΔⲆᐃ] = f48(f184(0.24, true, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"]));
    ⲆⲆ[59] = [];
    ⲆⲆ[59][v554.ᐃⵠⵠ] = f48(f204(0.32, 0, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]));
    ⲆⲆ[59][v554.ΔⲆᐃ] = f48(f204(0.32, 0, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"]));
    ⲆⲆ[62] = [];
    ⲆⲆ[62][v554.ᐃⵠⵠ] = f48(f91(3, f285(0.9, true, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
    ⲆⲆ[62][v554.ΔⲆᐃ] = f48(f91(3, f285(0.9, vVV243, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"])));
    ⲆⲆ[750] = [];
    ⲆⲆ[750][v554.ᐃⵠⵠ] = f48(f91(3, f285(1, true, [vVVVUndefined1974, undefined, vVUndefined19, "#c8efef", "#c8efef"])));
    ⲆⲆ[750][v554.ΔⲆᐃ] = f48(f91(3, f285(1, vVV2422, [undefined, undefined, undefined, "#87d2e6", "#87d2e6"])));
    ⲆⲆ[755] = [];
    ⲆⲆ[755].push(f48(f256(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0)));
    ⲆⲆ[755].push(f48(f256(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1)));
    ⲆⲆ[755].push(f48(f256(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1)));
    ⲆⲆ[795] = [];
    ⲆⲆ[795].push(f48(f284(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0)));
    ⲆⲆ[795].push(f48(f284(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ⲆⲆ[795].push(f48(f284(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
    ⲆⲆ[782] = [];
    ⲆⲆ[782].push(f48(f136(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1)));
    ⲆⲆ[782].push(f48(f136(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1)));
    ⲆⲆ[782].push(f48(f136(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1)));
    ⲆⲆ[783] = [];
    ⲆⲆ[783].push(f48(f136(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0)));
    ⲆⲆ[783].push(f48(f136(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0)));
    ⲆⲆ[783].push(f48(f136(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0)));
    ⲆⲆ[46] = [];
    ⲆⲆ[46][v554.ᐃⵠⵠ] = f48(f91(3, f267(0.7, vV24, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"])));
    ⲆⲆ[46][v554.ΔⲆᐃ] = f48(f91(3, f267(0.7, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"])));
    ⲆⲆ[50] = [];
    ⲆⲆ[50][v554.ᐃⵠⵠ] = f48(f91(3, f267(0.7, vVV245, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"])));
    ⲆⲆ[50][v554.ΔⲆᐃ] = f48(f91(3, f267(0.7, true, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"])));
    ⲆⲆ[51] = [];
    ⲆⲆ[51][v554.ᐃⵠⵠ] = f48(f91(3, f267(0.7, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"])));
    ⲆⲆ[51][v554.ΔⲆᐃ] = f48(f91(3, f267(0.7, vVVVV242, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"])));
    ⲆⲆ[52] = [];
    ⲆⲆ[52][v554.ᐃⵠⵠ] = f48(f91(3, f267(0.7, true, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"])));
    ⲆⲆ[52][v554.ΔⲆᐃ] = f48(f91(3, f267(0.7, vV245, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"])));
    ⲆⲆ[592] = [];
    ⲆⲆ[592].push(f48(f281(0.7, ["#3b330d", "#b5a118", "#c8ac16"])));
    ⲆⲆ[592].push(f48(f281(0.7, ["#524712", "#c7b11c", "#d9ba18"])));
    ⲆⲆ[592].push(f48(f281(0.7, ["#2a2409", "#9f8e14", "#ad9511"])));
    ⲆⲆ[326] = f48(function (p1086, p1087) {
      var v1425 = document.createElement("canvas");
      var v1426 = v1425.getContext("2d");
      v1425.width = p1086 * 188;
      v1425.height = p1086 * 190;
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1086 * 33.00567626953125, p1086 * 95.44320678710938);
      v1426.bezierCurveTo(p1086 * 42.00567626953125, p1086 * 87.44320678710938, p1086 * 48.00567626953125, p1086 * 51.443206787109375, p1086 * 74.00567626953125, p1086 * 47.443206787109375);
      v1426.bezierCurveTo(p1086 * 100.00567626953125, p1086 * 42.443206787109375, p1086 * 118.00567626953125, p1086 * 49.443206787109375, p1086 * 131.00567626953125, p1086 * 55.443206787109375);
      v1426.bezierCurveTo(p1086 * 140.00567626953125, p1086 * 70.44320678710938, p1086 * 145.00567626953125, p1086 * 87.44320678710938, p1086 * 152.00567626953125, p1086 * 94.44320678710938);
      v1426.bezierCurveTo(p1086 * 149.00567626953125, p1086 * 99.44320678710938, p1086 * 147.00567626953125, p1086 * 98.44320678710938, p1086 * 141.00567626953125, p1086 * 101.44320678710938);
      v1426.bezierCurveTo(p1086 * 147.00567626953125, p1086 * 108.44320678710938, p1086 * 147.00567626953125, p1086 * 111.44320678710938, p1086 * 147.00567626953125, p1086 * 112.44320678710938);
      v1426.bezierCurveTo(p1086 * 143.00567626953125, p1086 * 112.44320678710938, p1086 * 141.00567626953125, p1086 * 112.44320678710938, p1086 * 137.00567626953125, p1086 * 111.44320678710938);
      v1426.bezierCurveTo(p1086 * 138.00567626953125, p1086 * 117.44320678710938, p1086 * 138.00567626953125, p1086 * 120.44320678710938, p1086 * 138.00567626953125, p1086 * 124.44320678710938);
      v1426.bezierCurveTo(p1086 * 125.00567626953125, p1086 * 107.44320678710938, p1086 * 121.00567626953125, p1086 * 124.44320678710938, p1086 * 110.00567626953125, p1086 * 141.44320678710938);
      v1426.bezierCurveTo(p1086 * 102.00567626953125, p1086 * 158.44320678710938, p1086 * 89.00567626953125, p1086 * 158.44320678710938, p1086 * 80.00567626953125, p1086 * 144.44320678710938);
      v1426.bezierCurveTo(p1086 * 61.00567626953125, p1086 * 111.44320678710938, p1086 * 56.00567626953125, p1086 * 117.44320678710938, p1086 * 48.00567626953125, p1086 * 120.44320678710938);
      v1426.bezierCurveTo(p1086 * 46.00567626953125, p1086 * 118.44320678710938, p1086 * 47.00567626953125, p1086 * 112.44320678710938, p1086 * 48.00567626953125, p1086 * 107.44320678710938);
      v1426.bezierCurveTo(p1086 * 43.00567626953125, p1086 * 111.44320678710938, p1086 * 40.00567626953125, p1086 * 111.44320678710938, p1086 * 37.00567626953125, p1086 * 110.44320678710938);
      v1426.bezierCurveTo(p1086 * 39.50567626953125, p1086 * 104.94320678710938, p1086 * 39.50567626953125, p1086 * 104.94320678710938, p1086 * 42.00567626953125, p1086 * 99.44320678710938);
      v1426.bezierCurveTo(p1086 * 33.00567626953125, p1086 * 99.44320678710938, p1086 * 33.00567626953125, p1086 * 98.44320678710938, p1086 * 33.00567626953125, p1086 * 96.44320678710938);
      v1426.closePath();
      f86(v1426, p1087[0], p1087[0], p1086 * 4);
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1086 * 51.00567626953125, p1086 * 72.53409576416016);
      v1426.bezierCurveTo(p1086 * 48.00567626953125, p1086 * 56.534095764160156, p1086 * 48.00567626953125, p1086 * 49.534095764160156, p1086 * 54.00567626953125, p1086 * 35.534095764160156);
      v1426.bezierCurveTo(p1086 * 58.00567626953125, p1086 * 26.534095764160156, p1086 * 65.00567626953125, p1086 * 27.534095764160156, p1086 * 73.00567626953125, p1086 * 40.534095764160156);
      v1426.bezierCurveTo(p1086 * 81.00567626953125, p1086 * 49.534095764160156, p1086 * 82.00567626953125, p1086 * 50.534095764160156, p1086 * 83.00567626953125, p1086 * 51.534095764160156);
      v1426.bezierCurveTo(p1086 * 77.00567626953125, p1086 * 71.53409576416016, p1086 * 64.00567626953125, p1086 * 75.53409576416016, p1086 * 51.00567626953125, p1086 * 72.53409576416016);
      v1426.closePath();
      f86(v1426, p1087[0], p1087[0], p1086 * 2);
      v1426.beginPath();
      v1426.lineCap = "round";
      v1426.lineJoin = "round";
      v1426.moveTo(p1086 * 105.00567626953125, p1086 * 50.53410339355469);
      v1426.bezierCurveTo(p1086 * 112.00567626953125, p1086 * 48.53410339355469, p1086 * 125.00567626953125, p1086 * 21.534103393554688, p1086 * 132.00567626953125, p1086 * 33.53410339355469);
      v1426.bezierCurveTo(p1086 * 138.00567626953125, p1086 * 42.53410339355469, p1086 * 140.00567626953125, p1086 * 64.53410339355469, p1086 * 136.00567626953125, p1086 * 75.53410339355469);
      v1426.closePath();
      f86(v1426, p1087[0], p1087[0], p1086 * 2);
      return v1425;
    }(1.1, ["#BB0000"]));
    ⲆⲆ[333] = f48(f91(Math.PI, function (p1088, p1089) {
      var v1427 = document.createElement("canvas");
      var v1428 = v1427.getContext("2d");
      v1427.width = p1088 * 238;
      v1427.height = p1088 * 230;
      v1428.translate(p1088 * -93, p1088 * -110);
      f87(v1428, p1088 * 213.5, p1088 * 256.75, p1088 * 75);
      f86(v1428, p1089);
      f87(v1428, p1088 * 213.5, p1088 * 175.75, p1088 * 25);
      f86(v1428, p1089);
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 156.5, p1088 * 137.75);
      v1428.bezierCurveTo(p1088 * 170.5, p1088 * 173.75, p1088 * 195.5, p1088 * 177.75, p1088 * 209.5, p1088 * 177.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 217.5, p1088 * 178.75);
      v1428.bezierCurveTo(p1088 * 251.5, p1088 * 177.75, p1088 * 263.5, p1088 * 153.75, p1088 * 270.5, p1088 * 140.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 130.5, p1088 * 124.75);
      v1428.bezierCurveTo(p1088 * 153.5, p1088 * 185.75, p1088 * 198.5, p1088 * 185.75, p1088 * 213.5, p1088 * 185.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 214.5, p1088 * 183.75);
      v1428.bezierCurveTo(p1088 * 265.5, p1088 * 192.75, p1088 * 293.5, p1088 * 141.75, p1088 * 297.5, p1088 * 124.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 107.5, p1088 * 213.75);
      v1428.bezierCurveTo(p1088 * 151.5, p1088 * 190.75, p1088 * 198.5, p1088 * 184.75, p1088 * 210.5, p1088 * 184.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 212.5, p1088 * 187.75);
      v1428.bezierCurveTo(p1088 * 258.5, p1088 * 182.75, p1088 * 286.5, p1088 * 194.75, p1088 * 314.5, p1088 * 206.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 102.5, p1088 * 258.75);
      v1428.bezierCurveTo(p1088 * 142.5, p1088 * 200.75, p1088 * 193.5, p1088 * 194.75, p1088 * 211.5, p1088 * 185.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 214.5, p1088 * 192.75);
      v1428.bezierCurveTo(p1088 * 276.5, p1088 * 194.75, p1088 * 306.5, p1088 * 233.75, p1088 * 316.5, p1088 * 246.75);
      v1428.lineWidth = p1088 * 17;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 219.5, p1088 * 158.75);
      v1428.bezierCurveTo(p1088 * 226.5, p1088 * 159.75, p1088 * 227.5, p1088 * 147.75, p1088 * 219.5, p1088 * 145.75);
      v1428.closePath();
      v1428.lineWidth = p1088 * 10;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      v1428.beginPath();
      v1428.lineCap = "round";
      v1428.lineJoin = "round";
      v1428.moveTo(p1088 * 210.5, p1088 * 160.75);
      v1428.bezierCurveTo(p1088 * 203.5, p1088 * 159.75, p1088 * 199.5, p1088 * 146.75, p1088 * 210.5, p1088 * 145.75);
      v1428.closePath();
      v1428.lineWidth = p1088 * 10;
      v1428.strokeStyle = p1089;
      v1428.stroke();
      return v1427;
    }(0.9, "#BB0000")));
    ⲆⲆ[23] = [];
    ⲆⲆ[23][v554.ᐃⵠⵠ] = f48(f248(0.55, vV243, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]));
    ⲆⲆ[23][v554.ΔⲆᐃ] = f48(f248(0.55, true, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"]));
    ⲆⲆ[58] = [];
    ⲆⲆ[58][v554.ᐃⵠⵠ] = f48(f213(0.55, true, ["#252525", "#73583e", "#573f29", "#7d6144"]));
    ⲆⲆ[58][v554.ΔⲆᐃ] = f48(f213(0.55, true, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
    ⲆⲆ[25] = [];
    ⲆⲆ[25][v554.ᐃⵠⵠ] = f48(f239(0.6, vV242, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]));
    ⲆⲆ[25][v554.ΔⲆᐃ] = f48(f239(0.6, true, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"]));
    ⲆⲆ[26] = [];
    ⲆⲆ[26][v554.ᐃⵠⵠ] = f48(f237(0.58, 0, ["#dbce71", "#b29c32", "#c4bc51"]));
    ⲆⲆ[26][v554.ΔⲆᐃ] = f48(f237(0.58, 0, ["#2b7c57", "#15543c", "#1a7961"]));
    ⲆⲆ[27] = [];
    ⲆⲆ[27][v554.ᐃⵠⵠ] = f48(f247(0.69, 0, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]));
    ⲆⲆ[27][v554.ΔⲆᐃ] = f48(f247(0.69, 0, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"]));
    ⲆⲆ[413] = [];
    ⲆⲆ[413][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[413][v554.ΔⲆᐃ] = [];
    ⲆⲆ[413][v554.ᐃⵠⵠ].push(f48(f206(1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"])));
    ⲆⲆ[413][v554.ᐃⵠⵠ].push(f48(f221(1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"])));
    ⲆⲆ[413][v554.ᐃⵠⵠ].push(f48(f212(1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"])));
    ⲆⲆ[413][v554.ΔⲆᐃ].push(f48(f206(1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"])));
    ⲆⲆ[413][v554.ΔⲆᐃ].push(f48(f221(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"])));
    ⲆⲆ[413][v554.ΔⲆᐃ].push(f48(f212(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"])));
    ⲆⲆ[449] = [];
    ⲆⲆ[449][v554.ᐃⵠⵠ] = f48(f228(1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"]));
    ⲆⲆ[449][v554.ΔⲆᐃ] = f48(f228(1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"]));
    ⲆⲆ[451] = [];
    ⲆⲆ[451][v554.ᐃⵠⵠ] = f48(f201(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ⲆⲆ[451][v554.ΔⲆᐃ] = f48(f201(1, ["#050505", "#327570", "#021724", "#200333"]));
    ⲆⲆ[452] = [];
    ⲆⲆ[452][v554.ᐃⵠⵠ] = f48(f225(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
    ⲆⲆ[452][v554.ΔⲆᐃ] = f48(f225(1, ["#050505", "#327570", "#021724", "#200333"]));
    ⲆⲆ[243] = [];
    ⲆⲆ[243][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[243][v554.ΔⲆᐃ] = [];
    ⲆⲆ[243][v554.ᐃⵠⵠ] = [ᐃⲆ.ΔΔᐃⲆⲆᐃΔ, ᐃⲆ.ⲆΔⵠᐃᐃⲆⲆ, ᐃⲆ.ⲆⲆⵠⵠⲆⵠΔ, ᐃⲆ.ⲆᐃᐃⲆⲆΔⲆ, ᐃⲆ.ⲆⵠⵠⲆᐃᐃᐃ, ᐃⲆ.ⵠⲆΔΔΔⵠΔ, ᐃⲆ.ⲆᐃⲆⵠⲆΔᐃ, ᐃⲆ.ⵠⵠΔⲆⵠⵠⵠ, ᐃⲆ.ᐃⲆΔᐃΔⲆⵠ, ᐃⲆ.ᐃᐃΔΔᐃΔΔ, ᐃⲆ.ⲆΔⲆⲆⲆⵠⲆ, ᐃⲆ.ⲆΔᐃᐃⲆΔᐃ, ᐃⲆ.ᐃⲆⵠⲆⲆΔⵠ, ᐃⲆ.ΔⲆⲆⲆᐃⲆⲆ, ᐃⲆ.ΔⲆⵠᐃⵠⲆⲆ, ᐃⲆ.ΔⵠᐃⲆⲆᐃᐃ, ᐃⲆ.ⲆΔⵠⲆᐃⲆⲆ, ᐃⲆ.ΔᐃΔⵠⵠⲆⵠ, ᐃⲆ.ⵠΔⵠΔⲆⵠᐃ, ᐃⲆ.ΔⵠⲆΔᐃᐃⲆ, ᐃⲆ.ᐃⵠᐃΔⲆⵠᐃ, ᐃⲆ.ᐃᐃᐃⵠⵠⲆⲆ, ᐃⲆ.ΔΔⲆΔⲆⲆⵠ, ᐃⲆ.ⲆⵠⵠⲆᐃⵠⲆ, ᐃⲆ.ⵠⲆΔᐃⵠΔⲆ, ᐃⲆ.ⵠⵠⵠΔΔᐃᐃ, ᐃⲆ.ΔᐃⵠⲆⲆᐃᐃ, ᐃⲆ.Δⵠᐃⵠᐃᐃᐃ, ᐃⲆ.ⲆΔΔⲆᐃⲆΔ, ᐃⲆ.ΔᐃⲆⵠⲆⵠᐃ, ᐃⲆ.ⵠΔⵠᐃⲆⲆᐃ, ᐃⲆ.ⲆⲆⲆⵠⲆᐃᐃ, ᐃⲆ.ⵠⲆⲆⲆⵠΔⵠ, ᐃⲆ.ⲆⵠⵠΔⵠⲆᐃ, ᐃⲆ.ⲆⲆΔⲆⵠⵠΔ, ᐃⲆ.ΔᐃᐃΔΔΔᐃ, ᐃⲆ.ⲆⲆΔᐃᐃⵠΔ, ᐃⲆ.ⲆⲆΔᐃΔⲆⵠ, ᐃⲆ.ᐃⵠⲆᐃⲆⲆΔ, ᐃⲆ.ᐃⵠᐃᐃΔᐃᐃ, ᐃⲆ.ᐃΔⲆⵠΔΔⵠ, ᐃⲆ.ⵠΔᐃᐃΔΔⲆ, ᐃⲆ.ⲆᐃⲆΔΔᐃⵠ, ᐃⲆ.ᐃΔⲆⵠⵠΔⲆ, ᐃⲆ.ᐃⵠⲆᐃΔΔⲆ, ᐃⲆ.ⵠⵠⲆⵠΔⲆΔ, ᐃⲆ.ΔⵠⲆⵠᐃⵠΔ, ᐃⲆ.ᐃⲆⵠⲆⵠᐃⵠ, ᐃⲆ.ⵠⵠⵠⲆⵠᐃⵠ, ᐃⲆ.ⵠⵠⵠⵠᐃⵠᐃ, ᐃⲆ.ⲆΔⲆⲆⵠΔΔ, ᐃⲆ.ᐃΔᐃΔᐃⲆᐃ, ᐃⲆ.ⲆᐃⲆⲆⲆⲆΔ, ᐃⲆ.ⵠΔᐃⵠⵠΔᐃ, ᐃⲆ.ⲆⲆⵠΔᐃΔΔ, ᐃⲆ.ⲆΔⵠᐃᐃⲆᐃ];
    ⲆⲆ[243][v554.ΔⲆᐃ] = [ᐃⲆ.ᐃᐃⲆΔΔⲆⵠ, ᐃⲆ.ᐃΔⵠΔᐃⵠΔ, ᐃⲆ.ᐃⵠⲆᐃⵠⲆⵠ, ᐃⲆ.ⵠⵠᐃᐃⵠⵠⵠ, ᐃⲆ.ⲆⲆᐃⲆⲆⵠᐃ, ᐃⲆ.ΔⲆⲆΔⵠΔⲆ, ᐃⲆ.ΔᐃΔᐃΔⲆⵠ, ᐃⲆ.ΔᐃᐃⲆⲆΔᐃ, ᐃⲆ.ⲆⲆᐃⵠᐃᐃⲆ, ᐃⲆ.ᐃΔⵠᐃⲆᐃΔ, ᐃⲆ.ᐃΔᐃⵠⵠᐃⲆ, ᐃⲆ.ⲆⵠᐃΔⲆΔΔ, ᐃⲆ.ΔⵠΔΔⲆⵠⲆ, ᐃⲆ.ⲆΔΔᐃⵠΔⵠ, ᐃⲆ.ⲆΔⲆⲆⲆⲆⵠ, ᐃⲆ.ΔⲆⵠⲆⲆΔᐃ, ᐃⲆ.ᐃⵠΔⵠΔΔᐃ, ᐃⲆ.ΔⲆⵠΔⲆᐃⲆ, ᐃⲆ.ⲆΔⵠᐃᐃᐃΔ, ᐃⲆ.ᐃᐃΔΔⵠᐃᐃ, ᐃⲆ.ᐃΔⵠⲆⵠⲆⵠ, ᐃⲆ.ⲆΔᐃⵠΔⲆᐃ, ᐃⲆ.ΔᐃᐃᐃⲆᐃⲆ, ᐃⲆ.ⵠΔⲆΔⵠⲆᐃ, ᐃⲆ.ΔΔΔᐃᐃΔⲆ, ᐃⲆ.ⵠΔΔⲆⲆΔⵠ, ᐃⲆ.ΔᐃⵠΔⵠⲆΔ, ᐃⲆ.ᐃⲆⲆⵠⲆᐃⲆ, ᐃⲆ.ⵠᐃⲆΔⵠⲆⲆ, ᐃⲆ.ΔᐃⵠᐃΔⲆⵠ, ᐃⲆ.ΔⵠⲆⲆΔⵠⵠ, ᐃⲆ.ⲆⵠΔⵠⲆΔΔ, ᐃⲆ.ⲆᐃⲆΔᐃᐃΔ, ᐃⲆ.ⲆΔⲆⵠᐃᐃΔ, ᐃⲆ.ⲆⲆⵠⵠΔⲆᐃ, ᐃⲆ.ΔΔΔⲆⵠⵠᐃ, ᐃⲆ.ΔⲆⲆΔⵠⲆᐃ, ᐃⲆ.ⲆⵠᐃΔΔᐃⵠ, ᐃⲆ.ΔⲆᐃⵠⲆΔᐃ, ᐃⲆ.ᐃⲆⵠΔΔᐃᐃ, ᐃⲆ.ΔᐃⵠΔⵠᐃⲆ, ᐃⲆ.ⲆⵠⵠⵠΔⲆⲆ, ᐃⲆ.ΔᐃⲆᐃⵠᐃⵠ, ᐃⲆ.ᐃⵠᐃΔΔⲆᐃ, ᐃⲆ.ⵠⵠⲆⲆⲆΔΔ, ᐃⲆ.ⵠΔΔΔΔⲆᐃ, ᐃⲆ.ⲆⵠⵠΔᐃⵠᐃ, ᐃⲆ.ⲆⵠⲆⵠᐃⲆⵠ, ᐃⲆ.ᐃⲆⵠΔⵠⵠΔ, ᐃⲆ.ΔⵠⵠᐃⲆⲆⵠ, ᐃⲆ.ⵠΔⵠΔⵠΔᐃ, ᐃⲆ.ⲆⲆⲆᐃⵠⵠⵠ, ᐃⲆ.ⲆⲆⲆⵠⲆᐃΔ, ᐃⲆ.ΔᐃⵠⲆⵠᐃⵠ, ᐃⲆ.ΔᐃⲆⲆⵠΔᐃ, ᐃⲆ.ᐃΔΔⲆᐃᐃΔ];
    ⲆⲆ[676] = [];
    ⲆⲆ[676][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[676][v554.ΔⲆᐃ] = [];
    ⲆⲆ[676][v554.ᐃⵠⵠ].push(f48(f158(1.1, false, ["#252B28", "#747471", "#83827e"], 0)));
    ⲆⲆ[676][v554.ᐃⵠⵠ].push(f48(f158(0.9, false, ["#252B28", "#747471", "#83827e"], 1)));
    ⲆⲆ[676][v554.ᐃⵠⵠ].push(f48(f158(1, false, ["#252B28", "#747471", "#83827e"], 2)));
    ⲆⲆ[676][v554.ᐃⵠⵠ].push(f48(f158(0.9, vV214, ["#252B28", "#747471", "#83827e"], 2)));
    ⲆⲆ[676][v554.ΔⲆᐃ].push(f48(f158(1.1, vVVV2132, ["#030d14", "#123335", "#183f3f"], 0)));
    ⲆⲆ[676][v554.ΔⲆᐃ].push(f48(f158(0.9, v21, ["#030d14", "#123335", "#183f3f"], 1)));
    ⲆⲆ[676][v554.ΔⲆᐃ].push(f48(f158(1, false, ["#030d14", "#123335", "#183f3f"], 2)));
    ⲆⲆ[676][v554.ΔⲆᐃ].push(f48(f158(0.9, vV212, ["#030d14", "#123335", "#183f3f"], 2)));
    ⲆⲆ[679] = [];
    ⲆⲆ[679][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[679][v554.ΔⲆᐃ] = [];
    ⲆⲆ[679][v554.ᐃⵠⵠ].push(f48(f158(1.1, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⲆⲆ[679][v554.ᐃⵠⵠ].push(f48(f158(0.9, vVVV24, ["#252B28", "#58645F", "#75827D"], 2)));
    ⲆⲆ[679][v554.ᐃⵠⵠ].push(f48(f158(1, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⲆⲆ[679][v554.ᐃⵠⵠ].push(f48(f158(0.9, true, ["#252B28", "#58645F", "#75827D"], 2)));
    ⲆⲆ[679][v554.ΔⲆᐃ].push(f48(f158(1.1, vVV24, ["#030d14", "#123335", "#183f3f"], 2)));
    ⲆⲆ[679][v554.ΔⲆᐃ].push(f48(f158(0.9, vV246, ["#030d14", "#123335", "#183f3f"], 2)));
    ⲆⲆ[679][v554.ΔⲆᐃ].push(f48(f158(1, true, ["#030d14", "#123335", "#183f3f"], 2)));
    ⲆⲆ[679][v554.ΔⲆᐃ].push(f48(f158(0.9, vVVV24, ["#030d14", "#123335", "#183f3f"], 2)));
    ⲆⲆ[415] = [];
    ⲆⲆ[415][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[415][v554.ΔⲆᐃ] = [];
    ⲆⲆ[415][v554.ᐃⵠⵠ].push(f48(f159(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⲆⲆ[415][v554.ᐃⵠⵠ].push(f48(f159(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⲆⲆ[415][v554.ᐃⵠⵠ].push(f48(f159(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
    ⲆⲆ[415][v554.ΔⲆᐃ].push(f48(f159(1.5, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⲆⲆ[415][v554.ΔⲆᐃ].push(f48(f159(1.3, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⲆⲆ[415][v554.ΔⲆᐃ].push(f48(f159(1.1, 0, ["#0a2728", "#3e8989", "#50a09c"])));
    ⲆⲆ[416] = [];
    ⲆⲆ[416][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[416][v554.ΔⲆᐃ] = [];
    ⲆⲆ[416][v554.ᐃⵠⵠ].push(f48(f162(1.1, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⲆⲆ[416][v554.ᐃⵠⵠ].push(f48(f162(0.9, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⲆⲆ[416][v554.ᐃⵠⵠ].push(f48(f162(0.7, 0, ["#123d38", "#70e0dd", "#95efea"])));
    ⲆⲆ[416][v554.ΔⲆᐃ].push(f48(f162(1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⲆⲆ[416][v554.ΔⲆᐃ].push(f48(f162(0.9, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⲆⲆ[416][v554.ΔⲆᐃ].push(f48(f162(0.7, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
    ⲆⲆ[121] = [];
    ⲆⲆ[121][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[121][v554.ΔⲆᐃ] = [];
    ⲆⲆ[121][v554.ᐃⵠⵠ].push(f48(f199(1.7, vVV244, ["#1d051e", "#c27add", "#cd98e5"])));
    ⲆⲆ[121][v554.ᐃⵠⵠ].push(f48(f199(1.5, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ⲆⲆ[121][v554.ᐃⵠⵠ].push(f48(f199(1.3, true, ["#1d051e", "#c27add", "#cd98e5"])));
    ⲆⲆ[121][v554.ΔⲆᐃ].push(f48(f199(1.7, vV246, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⲆⲆ[121][v554.ΔⲆᐃ].push(f48(f199(1.5, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⲆⲆ[121][v554.ΔⲆᐃ].push(f48(f199(1.3, vVVV242, ["#1d051e", "#41aaa0", "#5cccc4"])));
    ⲆⲆ[678] = [];
    ⲆⲆ[678][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[678][v554.ΔⲆᐃ] = [];
    ⲆⲆ[678][v554.ᐃⵠⵠ].push(f48(f214(1, ["#2d53c4"])));
    ⲆⲆ[678][v554.ΔⲆᐃ].push(f48(f214(1, ["#2d53c4"])));
    ⲆⲆ[696] = [];
    ⲆⲆ[696][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[696][v554.ΔⲆᐃ] = [];
    ⲆⲆ[696][v554.ᐃⵠⵠ].push(f48(f214(1, ["#c4912d"])));
    ⲆⲆ[696][v554.ΔⲆᐃ].push(f48(f214(1, ["#c4912d"])));
    ⲆⲆ[680] = [];
    ⲆⲆ[680][v554.ᐃⵠⵠ] = f48(f234(1, ["#414040"]));
    ⲆⲆ[680][v554.ΔⲆᐃ] = f48(f234(1, ["#153635"]));
    ⲆⲆ[508] = [];
    ⲆⲆ[508][v554.ᐃⵠⵠ] = f48(f178(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⲆⲆ[508][v554.ΔⲆᐃ] = f48(f178(1, vV213, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⲆⲆ[509] = [];
    ⲆⲆ[509][v554.ᐃⵠⵠ] = f48(f179(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⲆⲆ[509][v554.ΔⲆᐃ] = f48(f179(1, vVVVV212, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⲆⲆ[512] = [];
    ⲆⲆ[512][v554.ᐃⵠⵠ] = f48(f179(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⲆⲆ[512][v554.ΔⲆᐃ] = f48(f179(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⲆⲆ[511] = [];
    ⲆⲆ[511][v554.ᐃⵠⵠ] = f48(f180(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⲆⲆ[511][v554.ΔⲆᐃ] = f48(f180(1, vVV2122, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⲆⲆ[510] = [];
    ⲆⲆ[510][v554.ᐃⵠⵠ] = f48(f181(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
    ⲆⲆ[510][v554.ΔⲆᐃ] = f48(f181(1, vV214, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
    ⲆⲆ[419] = [];
    ⲆⲆ[419][v554.ᐃⵠⵠ] = f48(f231(0.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"]));
    ⲆⲆ[419][v554.ΔⲆᐃ] = f48(f231(0.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"]));
    ⲆⲆ[445] = [];
    ⲆⲆ[445][v554.ᐃⵠⵠ] = f48(f208(0.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"]));
    ⲆⲆ[445][v554.ΔⲆᐃ] = f48(f208(0.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"]));
    ⲆⲆ[259] = [];
    ⲆⲆ[818] = [];
    ⲆⲆ[516] = [];
    ⲆⲆ[819] = [];
    for (v1396 = 0; v1396 < 2; v1396++) {
      ⲆⲆ[259][v1396] = document.createElement("canvas");
      ⲆⲆ[259][v1396].width = 193;
      ⲆⲆ[259][v1396].height = 193;
      ⲆⲆ[818][v1396] = ⲆⲆ[259][v1396].getContext("2d");
      ⲆⲆ[516][v1396] = document.createElement("canvas");
      ⲆⲆ[516][v1396].width = 600;
      ⲆⲆ[516][v1396].height = 600;
      ⲆⲆ[819][v1396] = ⲆⲆ[516][v1396].getContext("2d");
    }
    ⲆⲆ[475] = [];
    ⲆⲆ[475][v554.ᐃⵠⵠ] = f48(f234(1, ["#c8e0de"]));
    ⲆⲆ[475][v554.ΔⲆᐃ] = f48(f234(1, ["#147071"]));
    ⲆⲆ[476] = [];
    ⲆⲆ[476][v554.ᐃⵠⵠ] = f48(f234(1, ["#231912"]));
    ⲆⲆ[476][v554.ΔⲆᐃ] = f48(f234(1, ["#021719"]));
    ⲆⲆ[697] = f48(function (p1090, p1091) {
      var v1429 = document.createElement("canvas");
      var v1430 = v1429.getContext("2d");
      v1429.width = p1090 * 253;
      v1429.height = p1090 * 192;
      v1430.save();
      v1430.translate(p1090 * 37, p1090 * 94);
      f89(v1430, p1090 * -7, p1090 * -20, p1090 * 14, p1090 * 37, p1090 * 20);
      v1430.restore();
      f86(v1430, p1091[0]);
      v1430.save();
      v1430.translate(p1090 * 131, p1090 * 94);
      f89(v1430, p1090 * -84, p1090 * -67, p1090 * 168, p1090 * 134, p1090 * 20);
      v1430.restore();
      f86(v1430, p1091[0], p1091[0], p1090 * 13);
      v1430.save();
      v1430.translate(p1090 * 223, p1090 * 94.5);
      f89(v1430, p1090 * -5, p1090 * -18.5, p1090 * 10, p1090 * 37, p1090 * 20);
      v1430.restore();
      f86(v1430, p1091[0]);
      v1430.save();
      v1430.translate(p1090 * 128.5, p1090 * 170.5);
      f89(v1430, p1090 * -22.5, p1090 * -6.5, p1090 * 45, p1090 * 13, p1090 * 20);
      v1430.restore();
      f86(v1430, p1091[0]);
      return v1429;
    }(0.5, ["#BB0000"]));
    ⲆⲆ[461] = f48(function (p1092, p1093) {
      var v1431 = document.createElement("canvas");
      var v1432 = v1431.getContext("2d");
      v1431.width = p1092 * 161;
      v1431.height = p1092 * 190;
      v1432.beginPath();
      v1432.lineCap = "round";
      v1432.lineJoin = "round";
      v1432.moveTo(p1092 * 9, p1092 * 93);
      v1432.bezierCurveTo(p1092 * 17, p1092 * 95, p1092 * 19, p1092 * 95, p1092 * 21, p1092 * 95);
      v1432.bezierCurveTo(p1092 * 9, p1092 * 83, p1092 * 17, p1092 * 93, p1092 * 4, p1092 * 76);
      v1432.bezierCurveTo(p1092 * 11, p1092 * 75, p1092 * 11, p1092 * 75, p1092 * 18, p1092 * 75);
      v1432.bezierCurveTo(p1092 * 13, p1092 * 67, p1092 * 13, p1092 * 67, p1092 * 7, p1092 * 59);
      v1432.bezierCurveTo(p1092 * 14, p1092 * 59, p1092 * 14, p1092 * 59, p1092 * 21, p1092 * 59);
      v1432.bezierCurveTo(p1092 * 46, p1092 * 35, p1092 * 35, p1092 * 45, p1092 * 49, p1092 * 31);
      v1432.bezierCurveTo(p1092 * 53, p1092 * 24, p1092 * 51, p1092 * 21, p1092 * 51, p1092 * 16);
      v1432.bezierCurveTo(p1092 * 63, p1092 * 23, p1092 * 63, p1092 * 24, p1092 * 69, p1092 * 29);
      v1432.bezierCurveTo(p1092 * 76, p1092 * 7, p1092 * 75, p1092 * 11, p1092 * 76, p1092 * 6);
      v1432.bezierCurveTo(p1092 * 81, p1092 * 12, p1092 * 84, p1092 * 18, p1092 * 89, p1092 * 27);
      v1432.bezierCurveTo(p1092 * 95, p1092 * 25, p1092 * 100, p1092 * 16, p1092 * 105, p1092 * 14);
      v1432.bezierCurveTo(p1092 * 103, p1092 * 25, p1092 * 111, p1092 * 33, p1092 * 110, p1092 * 34);
      v1432.bezierCurveTo(p1092 * 123, p1092 * 48, p1092 * 123, p1092 * 48, p1092 * 136, p1092 * 62);
      v1432.bezierCurveTo(p1092 * 142, p1092 * 60, p1092 * 147, p1092 * 59, p1092 * 155, p1092 * 58);
      v1432.bezierCurveTo(p1092 * 147, p1092 * 65, p1092 * 147, p1092 * 65, p1092 * 139, p1092 * 73);
      v1432.bezierCurveTo(p1092 * 145, p1092 * 73, p1092 * 145, p1092 * 73, p1092 * 151, p1092 * 73);
      v1432.bezierCurveTo(p1092 * 145, p1092 * 80, p1092 * 145, p1092 * 80, p1092 * 138, p1092 * 87);
      v1432.bezierCurveTo(p1092 * 144, p1092 * 88, p1092 * 144, p1092 * 88, p1092 * 150, p1092 * 89);
      v1432.bezierCurveTo(p1092 * 125, p1092 * 103, p1092 * 125, p1092 * 125, p1092 * 113, p1092 * 141);
      v1432.bezierCurveTo(p1092 * 92, p1092 * 178, p1092 * 85, p1092 * 177, p1092 * 76, p1092 * 178);
      v1432.bezierCurveTo(p1092 * 64, p1092 * 179, p1092 * 51, p1092 * 164, p1092 * 35, p1092 * 131);
      v1432.bezierCurveTo(p1092 * 18, p1092 * 95, p1092 * 13, p1092 * 99, p1092 * 8, p1092 * 93);
      v1432.closePath();
      f86(v1432, p1093, p1093, p1092 * 4);
      v1432.beginPath();
      v1432.lineCap = "round";
      v1432.lineJoin = "round";
      v1432.moveTo(p1092 * 25, p1092 * 63);
      v1432.bezierCurveTo(p1092 * 16, p1092 * 58, p1092 * 17, p1092 * 51, p1092 * 17, p1092 * 33);
      v1432.bezierCurveTo(p1092 * 19, p1092 * 12, p1092 * 21, p1092 * 12, p1092 * 32, p1092 * 17);
      v1432.bezierCurveTo(p1092 * 63, p1092 * 31, p1092 * 66, p1092 * 45, p1092 * 66, p1092 * 54);
      f86(v1432, p1093, p1093, p1092 * 4);
      v1432.beginPath();
      v1432.lineCap = "round";
      v1432.lineJoin = "round";
      v1432.moveTo(p1092 * 91, p1092 * 53);
      v1432.bezierCurveTo(p1092 * 91, p1092 * 40, p1092 * 98, p1092 * 33, p1092 * 121, p1092 * 20);
      v1432.bezierCurveTo(p1092 * 137, p1092 * 12, p1092 * 137, p1092 * 16, p1092 * 139, p1092 * 27);
      v1432.bezierCurveTo(p1092 * 141, p1092 * 49, p1092 * 140, p1092 * 57, p1092 * 134, p1092 * 64);
      f86(v1432, p1093, p1093, p1092 * 4);
      return v1431;
    }(0.9, "#BB0000"));
    ⲆⲆ[462] = f48(function (p1094, p1095) {
      var v1433 = document.createElement("canvas");
      var v1434 = v1433.getContext("2d");
      v1433.width = p1094 * 147;
      v1433.height = p1094 * 172;
      v1434.beginPath();
      v1434.lineCap = "round";
      v1434.lineJoin = "round";
      v1434.moveTo(p1094 * 8, p1094 * 50);
      v1434.bezierCurveTo(p1094 * 15, p1094 * 16, p1094 * 49, p1094 * 6, p1094 * 67, p1094 * 6);
      v1434.bezierCurveTo(p1094 * 121, p1094 * 3, p1094 * 128, p1094 * 32, p1094 * 135, p1094 * 48);
      v1434.bezierCurveTo(p1094 * 146, p1094 * 96, p1094 * 124, p1094 * 131, p1094 * 96, p1094 * 135);
      v1434.bezierCurveTo(p1094 * 96, p1094 * 158, p1094 * 79, p1094 * 156, p1094 * 75, p1094 * 156);
      v1434.bezierCurveTo(p1094 * 50, p1094 * 154, p1094 * 53, p1094 * 150, p1094 * 52, p1094 * 135);
      v1434.bezierCurveTo(p1094 * 2, p1094 * 127, p1094 * 3, p1094 * 87, p1094 * 8, p1094 * 50);
      v1434.closePath();
      f86(v1434, p1095, p1095, p1094 * 4);
      v1434.beginPath();
      v1434.lineCap = "round";
      v1434.lineJoin = "round";
      v1434.moveTo(p1094 * 14, p1094 * 57);
      v1434.bezierCurveTo(p1094 * 2, p1094 * 50, p1094 * 5, p1094 * 22, p1094 * 24, p1094 * 22);
      v1434.bezierCurveTo(p1094 * 41, p1094 * 21, p1094 * 54, p1094 * 32, p1094 * 55, p1094 * 48);
      f86(v1434, p1095, p1095, p1094 * 4);
      v1434.beginPath();
      v1434.lineCap = "round";
      v1434.lineJoin = "round";
      v1434.moveTo(p1094 * 93, p1094 * 47);
      v1434.bezierCurveTo(p1094 * 94, p1094 * 24, p1094 * 116, p1094 * 21, p1094 * 120, p1094 * 20);
      v1434.bezierCurveTo(p1094 * 144, p1094 * 17, p1094 * 146, p1094 * 52, p1094 * 133, p1094 * 58);
      f86(v1434, p1095, p1095, p1094 * 4);
      return v1433;
    }(0.9, "#BB0000"));
    ⲆⲆ[463] = f48(function (p1096, p1097) {
      var v1435 = document.createElement("canvas");
      var v1436 = v1435.getContext("2d");
      v1435.width = p1096 * 271;
      v1435.height = p1096 * 366;
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 133, p1096 * 99);
      v1436.bezierCurveTo(p1096 * 186, p1096 * 123, p1096 * 199, p1096 * 152, p1096 * 209, p1096 * 169);
      v1436.bezierCurveTo(p1096 * 228, p1096 * 205, p1096 * 224, p1096 * 245, p1096 * 190, p1096 * 276);
      v1436.bezierCurveTo(p1096 * 161, p1096 * 296, p1096 * 99, p1096 * 292, p1096 * 79, p1096 * 274);
      v1436.bezierCurveTo(p1096 * 49, p1096 * 253, p1096 * 47, p1096 * 214, p1096 * 50, p1096 * 197);
      v1436.bezierCurveTo(p1096 * 61, p1096 * 143, p1096 * 102, p1096 * 113, p1096 * 131, p1096 * 99);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 73, p1096 * 270);
      v1436.bezierCurveTo(p1096 * 79, p1096 * 280, p1096 * 77, p1096 * 280, p1096 * 78, p1096 * 287);
      v1436.bezierCurveTo(p1096 * 78, p1096 * 290, p1096 * 83, p1096 * 291, p1096 * 82, p1096 * 299);
      v1436.bezierCurveTo(p1096 * 81, p1096 * 301, p1096 * 87, p1096 * 301, p1096 * 92, p1096 * 314);
      v1436.bezierCurveTo(p1096 * 94, p1096 * 319, p1096 * 100, p1096 * 321, p1096 * 107, p1096 * 320);
      v1436.bezierCurveTo(p1096 * 111, p1096 * 323, p1096 * 114, p1096 * 324, p1096 * 119, p1096 * 320);
      v1436.bezierCurveTo(p1096 * 137, p1096 * 321, p1096 * 146, p1096 * 323, p1096 * 139, p1096 * 320);
      v1436.bezierCurveTo(p1096 * 141, p1096 * 324, p1096 * 150, p1096 * 324, p1096 * 153, p1096 * 320);
      v1436.bezierCurveTo(p1096 * 168, p1096 * 319, p1096 * 171, p1096 * 316, p1096 * 173, p1096 * 307);
      v1436.bezierCurveTo(p1096 * 180, p1096 * 305, p1096 * 180, p1096 * 301, p1096 * 178, p1096 * 296);
      v1436.bezierCurveTo(p1096 * 183, p1096 * 296, p1096 * 185, p1096 * 289, p1096 * 188, p1096 * 279);
      v1436.bezierCurveTo(p1096 * 171, p1096 * 286, p1096 * 149, p1096 * 290, p1096 * 132, p1096 * 289);
      v1436.bezierCurveTo(p1096 * 101, p1096 * 290, p1096 * 86, p1096 * 280, p1096 * 74, p1096 * 271);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 76, p1096 * 252);
      v1436.bezierCurveTo(p1096 * 85, p1096 * 294, p1096 * 96, p1096 * 314, p1096 * 103, p1096 * 314);
      v1436.bezierCurveTo(p1096 * 106, p1096 * 316, p1096 * 151, p1096 * 314, p1096 * 156, p1096 * 314);
      v1436.bezierCurveTo(p1096 * 169, p1096 * 317, p1096 * 182, p1096 * 285, p1096 * 191, p1096 * 256);
      v1436.bezierCurveTo(p1096 * 134.5, p1096 * 254, p1096 * 134.5, p1096 * 254, p1096 * 78, p1096 * 252);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 84, p1096 * 257);
      v1436.bezierCurveTo(p1096 * 122, p1096 * 273, p1096 * 146, p1096 * 268, p1096 * 179, p1096 * 261);
      v1436.bezierCurveTo(p1096 * 190, p1096 * 258, p1096 * 187, p1096 * 266, p1096 * 178, p1096 * 272);
      v1436.bezierCurveTo(p1096 * 160, p1096 * 284, p1096 * 123, p1096 * 282, p1096 * 100, p1096 * 277);
      v1436.bezierCurveTo(p1096 * 73, p1096 * 260, p1096 * 79, p1096 * 257, p1096 * 84, p1096 * 257);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 125, p1096 * 65);
      v1436.bezierCurveTo(p1096 * 133, p1096 * 45, p1096 * 136, p1096 * 42, p1096 * 141, p1096 * 55);
      v1436.bezierCurveTo(p1096 * 151, p1096 * 96, p1096 * 164, p1096 * 117, p1096 * 175, p1096 * 134);
      v1436.bezierCurveTo(p1096 * 203, p1096 * 181, p1096 * 207, p1096 * 182, p1096 * 208, p1096 * 215);
      v1436.bezierCurveTo(p1096 * 206, p1096 * 240, p1096 * 205, p1096 * 246, p1096 * 184, p1096 * 258);
      v1436.bezierCurveTo(p1096 * 161, p1096 * 267, p1096 * 131, p1096 * 272, p1096 * 86, p1096 * 258);
      v1436.bezierCurveTo(p1096 * 67, p1096 * 252, p1096 * 68, p1096 * 239, p1096 * 64, p1096 * 216);
      v1436.bezierCurveTo(p1096 * 62, p1096 * 194, p1096 * 72, p1096 * 169, p1096 * 92, p1096 * 142);
      v1436.bezierCurveTo(p1096 * 106, p1096 * 121, p1096 * 114, p1096 * 101, p1096 * 125, p1096 * 65);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 115, p1096 * 37);
      v1436.bezierCurveTo(p1096 * 116, p1096 * 28, p1096 * 119, p1096 * 27, p1096 * 126, p1096 * 37);
      v1436.bezierCurveTo(p1096 * 134, p1096 * 48, p1096 * 134, p1096 * 49, p1096 * 132, p1096 * 59);
      v1436.bezierCurveTo(p1096 * 131, p1096 * 67, p1096 * 127, p1096 * 65, p1096 * 120, p1096 * 56);
      v1436.bezierCurveTo(p1096 * 114, p1096 * 49, p1096 * 113, p1096 * 43, p1096 * 115, p1096 * 38);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 146, p1096 * 34);
      v1436.bezierCurveTo(p1096 * 152, p1096 * 28, p1096 * 155, p1096 * 27, p1096 * 157, p1096 * 39);
      v1436.bezierCurveTo(p1096 * 157, p1096 * 45, p1096 * 157, p1096 * 49, p1096 * 150, p1096 * 56);
      v1436.bezierCurveTo(p1096 * 141, p1096 * 66, p1096 * 138, p1096 * 66, p1096 * 138, p1096 * 57);
      v1436.bezierCurveTo(p1096 * 137, p1096 * 50, p1096 * 137, p1096 * 47, p1096 * 141, p1096 * 42);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 143, p1096 * 69);
      v1436.bezierCurveTo(p1096 * 148, p1096 * 56, p1096 * 156, p1096 * 50, p1096 * 158, p1096 * 58);
      v1436.bezierCurveTo(p1096 * 159, p1096 * 64, p1096 * 160, p1096 * 67, p1096 * 153, p1096 * 77);
      v1436.bezierCurveTo(p1096 * 148, p1096 * 83, p1096 * 145, p1096 * 84, p1096 * 143, p1096 * 77);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 149, p1096 * 92);
      v1436.bezierCurveTo(p1096 * 149, p1096 * 89, p1096 * 151, p1096 * 84, p1096 * 156, p1096 * 79);
      v1436.bezierCurveTo(p1096 * 161, p1096 * 73, p1096 * 163, p1096 * 78, p1096 * 162, p1096 * 86);
      v1436.bezierCurveTo(p1096 * 161, p1096 * 91, p1096 * 155, p1096 * 99, p1096 * 152, p1096 * 98);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 111, p1096 * 61);
      v1436.bezierCurveTo(p1096 * 114, p1096 * 51, p1096 * 117, p1096 * 51, p1096 * 124, p1096 * 64);
      v1436.bezierCurveTo(p1096 * 128, p1096 * 68, p1096 * 128, p1096 * 76, p1096 * 126, p1096 * 79);
      v1436.bezierCurveTo(p1096 * 123, p1096 * 84, p1096 * 122, p1096 * 82, p1096 * 115, p1096 * 74);
      v1436.bezierCurveTo(p1096 * 112, p1096 * 67, p1096 * 115, p1096 * 74, p1096 * 115, p1096 * 74);
      v1436.bezierCurveTo(p1096 * 111, p1096 * 68, p1096 * 111, p1096 * 66, p1096 * 111, p1096 * 62);
      v1436.closePath();
      f86(v1436, p1097[0]);
      v1436.beginPath();
      v1436.lineCap = "round";
      v1436.lineJoin = "round";
      v1436.moveTo(p1096 * 107, p1096 * 81);
      v1436.bezierCurveTo(p1096 * 108, p1096 * 74, p1096 * 112, p1096 * 73, p1096 * 118, p1096 * 84);
      v1436.bezierCurveTo(p1096 * 122, p1096 * 88, p1096 * 122, p1096 * 93, p1096 * 121, p1096 * 98);
      v1436.bezierCurveTo(p1096 * 114, p1096 * 98, p1096 * 113, p1096 * 98, p1096 * 109, p1096 * 90);
      v1436.bezierCurveTo(p1096 * 107, p1096 * 87, p1096 * 106, p1096 * 85, p1096 * 107, p1096 * 82);
      v1436.closePath();
      f86(v1436, p1097[0]);
      return v1435;
    }(1, ["#BB0000"]));
    ⲆⲆ[466] = f48(function (p1098, p1099) {
      var v1437 = document.createElement("canvas");
      var v1438 = v1437.getContext("2d");
      v1437.width = p1098 * 85;
      v1437.height = p1098 * 145;
      v1438.translate(p1098 * -20, p1098 * -95);
      v1438.beginPath();
      v1438.lineCap = "round";
      v1438.lineJoin = "round";
      v1438.moveTo(p1098 * 50, p1098 * 105);
      v1438.bezierCurveTo(p1098 * 52, p1098 * 119, p1098 * 64, p1098 * 137, p1098 * 71, p1098 * 146);
      v1438.bezierCurveTo(p1098 * 71, p1098 * 161, p1098 * 74, p1098 * 169, p1098 * 79, p1098 * 179);
      v1438.bezierCurveTo(p1098 * 68, p1098 * 192, p1098 * 70, p1098 * 204, p1098 * 69, p1098 * 216);
      v1438.bezierCurveTo(p1098 * 50, p1098 * 189.5, p1098 * 50, p1098 * 189.5, p1098 * 31, p1098 * 163);
      v1438.closePath();
      f86(v1438, p1099);
      v1438.beginPath();
      v1438.lineCap = "round";
      v1438.lineJoin = "round";
      v1438.moveTo(p1098 * 44, p1098 * 106);
      v1438.bezierCurveTo(p1098 * 49, p1098 * 90, p1098 * 58, p1098 * 104, p1098 * 51, p1098 * 121);
      v1438.bezierCurveTo(p1098 * 45, p1098 * 143, p1098 * 41, p1098 * 151, p1098 * 37, p1098 * 162);
      v1438.bezierCurveTo(p1098 * 48, p1098 * 180, p1098 * 58, p1098 * 188, p1098 * 76, p1098 * 205);
      v1438.bezierCurveTo(p1098 * 104, p1098 * 209, p1098 * 105, p1098 * 229, p1098 * 92, p1098 * 235);
      v1438.bezierCurveTo(p1098 * 76, p1098 * 239, p1098 * 75, p1098 * 232, p1098 * 56, p1098 * 213);
      v1438.bezierCurveTo(p1098 * 31, p1098 * 187, p1098 * 28, p1098 * 176, p1098 * 23, p1098 * 162);
      v1438.bezierCurveTo(p1098 * 38, p1098 * 131, p1098 * 40, p1098 * 120, p1098 * 44, p1098 * 106);
      v1438.closePath();
      f86(v1438, p1099, p1099, p1098 * 4);
      v1438.beginPath();
      v1438.lineCap = "round";
      v1438.lineJoin = "round";
      v1438.moveTo(p1098 * 30, p1098 * 159);
      v1438.bezierCurveTo(p1098 * 46, p1098 * 157, p1098 * 59, p1098 * 152, p1098 * 68, p1098 * 148);
      v1438.bezierCurveTo(p1098 * 63, p1098 * 155, p1098 * 52, p1098 * 160, p1098 * 44, p1098 * 164);
      v1438.bezierCurveTo(p1098 * 59, p1098 * 169, p1098 * 66, p1098 * 174, p1098 * 75, p1098 * 178);
      v1438.bezierCurveTo(p1098 * 58, p1098 * 178, p1098 * 49, p1098 * 175, p1098 * 37, p1098 * 174);
      v1438.closePath();
      f86(v1438, p1099);
      return v1437;
    }(0.8, "#BB0000"));
    ⲆⲆ[467] = f48(function (p1100, p1101) {
      var v1439 = document.createElement("canvas");
      var v1440 = v1439.getContext("2d");
      v1439.width = p1100 * 85;
      v1439.height = p1100 * 145;
      v1440.translate(p1100 * -165, p1100 * -95);
      v1440.beginPath();
      v1440.lineCap = "round";
      v1440.lineJoin = "round";
      v1440.moveTo(p1100 * 217, p1100 * 103);
      v1440.bezierCurveTo(p1100 * 209, p1100 * 129, p1100 * 203, p1100 * 137, p1100 * 195, p1100 * 146);
      v1440.bezierCurveTo(p1100 * 195, p1100 * 159, p1100 * 194, p1100 * 167, p1100 * 189, p1100 * 178);
      v1440.bezierCurveTo(p1100 * 193, p1100 * 186, p1100 * 196, p1100 * 195, p1100 * 198, p1100 * 216);
      v1440.bezierCurveTo(p1100 * 217.5, p1100 * 189.5, p1100 * 217.5, p1100 * 189.5, p1100 * 237, p1100 * 163);
      v1440.closePath();
      f86(v1440, p1101);
      v1440.beginPath();
      v1440.lineCap = "round";
      v1440.lineJoin = "round";
      v1440.moveTo(p1100 * 231, p1100 * 163);
      v1440.bezierCurveTo(p1100 * 221, p1100 * 139, p1100 * 218, p1100 * 128, p1100 * 215, p1100 * 114);
      v1440.bezierCurveTo(p1100 * 213, p1100 * 102, p1100 * 220, p1100 * 92, p1100 * 222, p1100 * 107);
      v1440.bezierCurveTo(p1100 * 224, p1100 * 118, p1100 * 233, p1100 * 138, p1100 * 244, p1100 * 161);
      v1440.bezierCurveTo(p1100 * 235, p1100 * 188, p1100 * 224, p1100 * 198, p1100 * 204, p1100 * 221);
      v1440.bezierCurveTo(p1100 * 190, p1100 * 233, p1100 * 190, p1100 * 235, p1100 * 180, p1100 * 235);
      v1440.bezierCurveTo(p1100 * 167, p1100 * 235, p1100 * 164, p1100 * 216, p1100 * 175, p1100 * 211);
      v1440.bezierCurveTo(p1100 * 176, p1100 * 208, p1100 * 181, p1100 * 207, p1100 * 191, p1100 * 205);
      v1440.bezierCurveTo(p1100 * 213, p1100 * 186, p1100 * 218, p1100 * 180, p1100 * 230, p1100 * 163);
      v1440.closePath();
      f86(v1440, p1101, p1101, p1100 * 4);
      v1440.beginPath();
      v1440.lineCap = "round";
      v1440.lineJoin = "round";
      v1440.moveTo(p1100 * 234, p1100 * 154);
      v1440.bezierCurveTo(p1100 * 227, p1100 * 156, p1100 * 222, p1100 * 156, p1100 * 199, p1100 * 148);
      v1440.bezierCurveTo(p1100 * 201, p1100 * 151, p1100 * 216, p1100 * 159, p1100 * 224, p1100 * 162);
      v1440.bezierCurveTo(p1100 * 209, p1100 * 169.5, p1100 * 209, p1100 * 169.5, p1100 * 194, p1100 * 177);
      v1440.bezierCurveTo(p1100 * 213.5, p1100 * 175, p1100 * 213.5, p1100 * 175, p1100 * 233, p1100 * 173);
      v1440.closePath();
      f86(v1440, p1101);
      return v1439;
    }(0.8, "#BB0000"));
    ⲆⲆ[322] = f48(function (p1102, p1103) {
      var v1441 = document.createElement("canvas");
      var v1442 = v1441.getContext("2d");
      var v1443 = p1102 * 85;
      var v1444 = p1102 * 115;
      var v1445 = p1102 * 4;
      v1441.width = v1443;
      v1441.height = v1444;
      v1442.translate(p1102 * -130, p1102 * -60);
      v1442.globalAlpha = 1;
      v1442.beginPath();
      v1442.bezierCurveTo(p1102 * 190, p1102 * 87, p1102 * 201, p1102 * 59, p1102 * 208, p1102 * 64);
      v1442.bezierCurveTo(p1102 * 213, p1102 * 68, p1102 * 204, p1102 * 93, p1102 * 195, p1102 * 109);
      v1442.bezierCurveTo(p1102 * 195, p1102 * 109, p1102 * 202, p1102 * 124, p1102 * 191, p1102 * 141);
      v1442.bezierCurveTo(p1102 * 182, p1102 * 151, p1102 * 164, p1102 * 155, p1102 * 148, p1102 * 144);
      v1442.bezierCurveTo(p1102 * 136, p1102 * 135, p1102 * 138, p1102 * 111, p1102 * 145, p1102 * 104);
      v1442.bezierCurveTo(p1102 * 140, p1102 * 92, p1102 * 131, p1102 * 67, p1102 * 138, p1102 * 63);
      v1442.bezierCurveTo(p1102 * 145, p1102 * 61, p1102 * 153, p1102 * 82, p1102 * 155, p1102 * 96);
      v1442.bezierCurveTo(p1102 * 167, p1102 * 91, p1102 * 178, p1102 * 92, p1102 * 187, p1102 * 98);
      v1442.closePath();
      f86(v1442, p1103, p1103, v1445);
      return v1441;
    }(0.9, "#BB0000"));
    ⲆⲆ[279] = f48(f93(0.6, "#BB0000"));
    ⲆⲆ[280] = f48(f93(0.6, "#1CE7E0"));
    ⲆⲆ[281] = f48(f93(0.6, "#DBE71C"));
    ⲆⲆ[308] = f48(f93(0.6, "#00BB00"));
    ⲆⲆ[602] = [];
    ⲆⲆ[602][v554.ᐃⵠⵠ] = f48(f234(1, ["#dac291"]));
    ⲆⲆ[602][v554.ΔⲆᐃ] = f48(f234(1, ["#0D423D"]));
    ⲆⲆ[698] = [];
    ⲆⲆ[698][v554.ᐃⵠⵠ] = f48(f234(1, ["#dac291"]));
    ⲆⲆ[698][v554.ΔⲆᐃ] = f48(f234(1, ["#0D423D"]));
    ⲆⲆ[788] = [];
    ⲆⲆ[788][v554.ᐃⵠⵠ] = f48(f254(0.3, vVV243, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"]));
    ⲆⲆ[788][v554.ΔⲆᐃ] = f48(f254(0.3, v24, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"]));
    ⲆⲆ[182] = [];
    ⲆⲆ[182][v554.ᐃⵠⵠ] = f48(f254(0.3, vV244, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]));
    ⲆⲆ[182][v554.ΔⲆᐃ] = f48(f254(0.3, vVVV2432, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"]));
    ⲆⲆ[127] = [f48(f251(1, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ⲆⲆ[128] = [f48(f251(1, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
    ⲆⲆ[603] = [];
    ⲆⲆ[603][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[603][v554.ΔⲆᐃ] = [];
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f241(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f205(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f207(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f236(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f220(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f217(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ᐃⵠⵠ].push(f48(f203(1, ["#0B6A84"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f241(1, ["#09373F"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f205(1, ["#09373F"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f207(1, ["#09373F"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f236(1, ["#09373F"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f220(1, ["#09373F"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f217(1, ["#09373F"])));
    ⲆⲆ[603][v554.ΔⲆᐃ].push(f48(f203(1, ["#09373F"])));
    ⲆⲆ[692] = [];
    ⲆⲆ[692][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[692][v554.ΔⲆᐃ] = [];
    ⲆⲆ[692][v554.ᐃⵠⵠ].push(f48(f200(1.7, ["#FBEFBC"], 0)));
    ⲆⲆ[692][v554.ᐃⵠⵠ].push(f48(f200(1.9, ["#FBEFBC"], 1)));
    ⲆⲆ[692][v554.ᐃⵠⵠ].push(f48(f200(1.7, ["#FBEFBC"], 2)));
    ⲆⲆ[692][v554.ΔⲆᐃ].push(f48(f200(1.7, ["#0F4C48"], 0)));
    ⲆⲆ[692][v554.ΔⲆᐃ].push(f48(f200(1.9, ["#0F4C48"], 1)));
    ⲆⲆ[692][v554.ΔⲆᐃ].push(f48(f200(1.7, ["#0F4C48"], 2)));
    ⲆⲆ[694] = [];
    ⲆⲆ[694][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[694][v554.ΔⲆᐃ] = [];
    ⲆⲆ[694][v554.ᐃⵠⵠ].push(f48(f200(1.8, ["#A9D6D3"], 0)));
    ⲆⲆ[694][v554.ᐃⵠⵠ].push(f48(f200(2, ["#A9D6D3"], 1)));
    ⲆⲆ[694][v554.ᐃⵠⵠ].push(f48(f200(1.8, ["#A9D6D3"], 2)));
    ⲆⲆ[694][v554.ΔⲆᐃ].push(f48(f200(1.8, ["#115E60"], 0)));
    ⲆⲆ[694][v554.ΔⲆᐃ].push(f48(f200(2, ["#115E60"], 1)));
    ⲆⲆ[694][v554.ΔⲆᐃ].push(f48(f200(1.8, ["#115E60"], 2)));
    ⲆⲆ[695] = [];
    ⲆⲆ[695][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[695][v554.ΔⲆᐃ] = [];
    ⲆⲆ[695][v554.ᐃⵠⵠ].push(f48(f200(1.9, ["#2A8B9B"], 0)));
    ⲆⲆ[695][v554.ᐃⵠⵠ].push(f48(f200(2.1, ["#2A8B9B"], 1)));
    ⲆⲆ[695][v554.ᐃⵠⵠ].push(f48(f200(1.9, ["#2A8B9B"], 2)));
    ⲆⲆ[695][v554.ΔⲆᐃ].push(f48(f200(1.9, ["#0F464C"], 0)));
    ⲆⲆ[695][v554.ΔⲆᐃ].push(f48(f200(2.1, ["#0F464C"], 1)));
    ⲆⲆ[695][v554.ΔⲆᐃ].push(f48(f200(1.9, ["#0F464C"], 2)));
    ⲆⲆ[693] = [];
    ⲆⲆ[693][v554.ᐃⵠⵠ] = [];
    ⲆⲆ[693][v554.ΔⲆᐃ] = [];
    ⲆⲆ[693][v554.ᐃⵠⵠ].push(f48(f170(0.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⲆⲆ[693][v554.ᐃⵠⵠ].push(f48(f170(1, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⲆⲆ[693][v554.ᐃⵠⵠ].push(f48(f170(1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
    ⲆⲆ[693][v554.ΔⲆᐃ].push(f48(f170(0.8, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⲆⲆ[693][v554.ΔⲆᐃ].push(f48(f170(1, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⲆⲆ[693][v554.ΔⲆᐃ].push(f48(f170(1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
    ⲆⲆ[637] = [];
    ⲆⲆ[637][v554.ᐃⵠⵠ] = f48(f249(0.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"]));
    ⲆⲆ[637][v554.ΔⲆᐃ] = f48(f249(0.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"]));
    ⲆⲆ[687] = f48(function (p1104, p1105) {
      var v1446 = document.createElement("canvas");
      var v1447 = v1446.getContext("2d");
      v1446.width = p1104 * 376;
      v1446.height = p1104 * 371;
      v1447.globalAlpha = 1;
      v1447.beginPath();
      v1447.lineCap = "round";
      v1447.lineJoin = "round";
      v1447.moveTo(p1104 * 191.633544921875, p1104 * 123.98580932617188);
      v1447.bezierCurveTo(p1104 * 215.633544921875, p1104 * 85.98580932617188, p1104 * 187.633544921875, p1104 * 71.98580932617188, p1104 * 202.633544921875, p1104 * 19.985809326171875);
      v1447.bezierCurveTo(p1104 * 231.633544921875, p1104 * 68.98580932617188, p1104 * 253.633544921875, p1104 * 71.98580932617188, p1104 * 256.633544921875, p1104 * 93.98580932617188);
      v1447.bezierCurveTo(p1104 * 306.633544921875, p1104 * 64.98580932617188, p1104 * 319.633544921875, p1104 * 61.985809326171875, p1104 * 350.633544921875, p1104 * 58.985809326171875);
      v1447.bezierCurveTo(p1104 * 280.633544921875, p1104 * 86.98580932617188, p1104 * 281.633544921875, p1104 * 106.98580932617188, p1104 * 268.633544921875, p1104 * 130.98580932617188);
      v1447.bezierCurveTo(p1104 * 295.633544921875, p1104 * 158.98580932617188, p1104 * 328.633544921875, p1104 * 155.98580932617188, p1104 * 353.633544921875, p1104 * 90.98580932617188);
      v1447.bezierCurveTo(p1104 * 371.633544921875, p1104 * 158.98580932617188, p1104 * 337.633544921875, p1104 * 210.98580932617188, p1104 * 286.633544921875, p1104 * 209.98580932617188);
      v1447.bezierCurveTo(p1104 * 323.633544921875, p1104 * 230.98580932617188, p1104 * 317.633544921875, p1104 * 274.9858093261719, p1104 * 356.633544921875, p1104 * 305.9858093261719);
      v1447.bezierCurveTo(p1104 * 288.633544921875, p1104 * 297.9858093261719, p1104 * 288.633544921875, p1104 * 265.9858093261719, p1104 * 275.633544921875, p1104 * 266.9858093261719);
      v1447.bezierCurveTo(p1104 * 280.633544921875, p1104 * 294.9858093261719, p1104 * 315.633544921875, p1104 * 306.9858093261719, p1104 * 336.633544921875, p1104 * 316.9858093261719);
      v1447.bezierCurveTo(p1104 * 295.633544921875, p1104 * 318.9858093261719, p1104 * 264.633544921875, p1104 * 302.9858093261719, p1104 * 254.633544921875, p1104 * 289.9858093261719);
      v1447.bezierCurveTo(p1104 * 252.633544921875, p1104 * 301.9858093261719, p1104 * 224.633544921875, p1104 * 315.9858093261719, p1104 * 201.633544921875, p1104 * 356.9858093261719);
      v1447.bezierCurveTo(p1104 * 195.633544921875, p1104 * 313.9858093261719, p1104 * 195.633544921875, p1104 * 308.9858093261719, p1104 * 196.633544921875, p1104 * 307.9858093261719);
      v1447.bezierCurveTo(p1104 * 197.633544921875, p1104 * 289.9858093261719, p1104 * 207.633544921875, p1104 * 283.9858093261719, p1104 * 195.633544921875, p1104 * 258.9858093261719);
      v1447.bezierCurveTo(p1104 * 182.633544921875, p1104 * 282.9858093261719, p1104 * 190.633544921875, p1104 * 287.9858093261719, p1104 * 193.633544921875, p1104 * 297.9858093261719);
      v1447.bezierCurveTo(p1104 * 195.633544921875, p1104 * 306.9858093261719, p1104 * 191.633544921875, p1104 * 334.9858093261719, p1104 * 187.633544921875, p1104 * 354.9858093261719);
      v1447.bezierCurveTo(p1104 * 165.633544921875, p1104 * 320.9858093261719, p1104 * 138.633544921875, p1104 * 307.9858093261719, p1104 * 135.633544921875, p1104 * 288.9858093261719);
      v1447.bezierCurveTo(p1104 * 110.633544921875, p1104 * 318.9858093261719, p1104 * 68.633544921875, p1104 * 323.9858093261719, p1104 * 49.633544921875, p1104 * 320.9858093261719);
      v1447.bezierCurveTo(p1104 * 88.633544921875, p1104 * 308.9858093261719, p1104 * 108.633544921875, p1104 * 284.9858093261719, p1104 * 118.633544921875, p1104 * 258.9858093261719);
      v1447.bezierCurveTo(p1104 * 86.633544921875, p1104 * 264.9858093261719, p1104 * 75.633544921875, p1104 * 310.9858093261719, p1104 * 19.633544921875, p1104 * 304.9858093261719);
      v1447.bezierCurveTo(p1104 * 54.633544921875, p1104 * 276.9858093261719, p1104 * 59.633544921875, p1104 * 214.98580932617188, p1104 * 105.633544921875, p1104 * 205.98580932617188);
      v1447.bezierCurveTo(p1104 * 14.633544921875, p1104 * 201.98580932617188, p1104 * 24.633544921875, p1104 * 141.98580932617188, p1104 * 25.633544921875, p1104 * 82.98580932617188);
      v1447.bezierCurveTo(p1104 * 49.633544921875, p1104 * 168.98580932617188, p1104 * 87.633544921875, p1104 * 141.98580932617188, p1104 * 112.633544921875, p1104 * 123.98580932617188);
      v1447.bezierCurveTo(p1104 * 95.633544921875, p1104 * 75.98580932617188, p1104 * 70.633544921875, p1104 * 68.98580932617188, p1104 * 35.633544921875, p1104 * 50.985809326171875);
      v1447.bezierCurveTo(p1104 * 70.633544921875, p1104 * 53.985809326171875, p1104 * 102.633544921875, p1104 * 65.98580932617188, p1104 * 125.633544921875, p1104 * 84.98580932617188);
      v1447.bezierCurveTo(p1104 * 133.633544921875, p1104 * 69.98580932617188, p1104 * 166.633544921875, p1104 * 42.985809326171875, p1104 * 176.633544921875, p1104 * 21.985809326171875);
      v1447.bezierCurveTo(p1104 * 185.633544921875, p1104 * 49.985809326171875, p1104 * 168.633544921875, p1104 * 95.98580932617188, p1104 * 191.633544921875, p1104 * 121.98580932617188);
      v1447.closePath();
      f86(v1447, p1105[0], p1105[0], p1104 * 12);
      return v1446;
    }(0.8, ["#B6222A"]));
    ⲆⲆ[673] = [];
    ⲆⲆ[673][v554.ᐃⵠⵠ] = f48(f255(0.8, 0, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"]));
    ⲆⲆ[673][v554.ΔⲆᐃ] = f48(f255(0.8, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"]));
    ⲆⲆ[688] = f48(function (p1106, p1107) {
      var v1448 = document.createElement("canvas");
      var v1449 = v1448.getContext("2d");
      v1448.width = p1106 * 158;
      v1448.height = p1106 * 201;
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 96.5, p1106 * 76.421875);
      v1449.bezierCurveTo(p1106 * 100.5, p1106 * 64.421875, p1106 * 103.5, p1106 * 62.421875, p1106 * 110.5, p1106 * 65.421875);
      v1449.bezierCurveTo(p1106 * 116.5, p1106 * 66.421875, p1106 * 117.5, p1106 * 67.421875, p1106 * 112.5, p1106 * 73.421875);
      v1449.bezierCurveTo(p1106 * 107, p1106 * 79.921875, p1106 * 107, p1106 * 79.921875, p1106 * 101.5, p1106 * 86.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 61.5, p1106 * 78.421875);
      v1449.bezierCurveTo(p1106 * 57.5, p1106 * 73.421875, p1106 * 51.5, p1106 * 66.421875, p1106 * 45.5, p1106 * 68.421875);
      v1449.bezierCurveTo(p1106 * 32.5, p1106 * 73.421875, p1106 * 38.5, p1106 * 75.421875, p1106 * 46.5, p1106 * 81.421875);
      v1449.bezierCurveTo(p1106 * 51.5, p1106 * 84.921875, p1106 * 51.5, p1106 * 84.921875, p1106 * 56.5, p1106 * 88.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 116.5, p1106 * 127.421875);
      v1449.bezierCurveTo(p1106 * 124.5, p1106 * 108.421875, p1106 * 129.5, p1106 * 104.421875, p1106 * 141.5, p1106 * 107.421875);
      v1449.bezierCurveTo(p1106 * 156.5, p1106 * 112.421875, p1106 * 153.5, p1106 * 113.421875, p1106 * 132.5, p1106 * 134.421875);
      v1449.bezierCurveTo(p1106 * 123.5, p1106 * 141.921875, p1106 * 123.5, p1106 * 141.921875, p1106 * 114.5, p1106 * 149.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 41.5, p1106 * 134.421875);
      v1449.bezierCurveTo(p1106 * 30.5, p1106 * 119.421875, p1106 * 25.5, p1106 * 111.421875, p1106 * 12.5, p1106 * 115.421875);
      v1449.bezierCurveTo(p1106 * 4.5, p1106 * 120.421875, p1106 * 4.5, p1106 * 121.421875, p1106 * 26.5, p1106 * 142.421875);
      v1449.bezierCurveTo(p1106 * 35, p1106 * 149.921875, p1106 * 35, p1106 * 149.921875, p1106 * 43.5, p1106 * 157.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 78.5, p1106 * 51.921875);
      v1449.bezierCurveTo(p1106 * 99.5, p1106 * 75.921875, p1106 * 110.5, p1106 * 96.921875, p1106 * 118.5, p1106 * 120.921875);
      v1449.bezierCurveTo(p1106 * 121.5, p1106 * 140.921875, p1106 * 107.5, p1106 * 179.921875, p1106 * 75.5, p1106 * 183.921875);
      v1449.bezierCurveTo(p1106 * 30.5, p1106 * 169.921875, p1106 * 37.5, p1106 * 131.921875, p1106 * 34.5, p1106 * 120.921875);
      v1449.bezierCurveTo(p1106 * 41.5, p1106 * 89.921875, p1106 * 61.5, p1106 * 67.921875, p1106 * 78.5, p1106 * 51.921875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 72.5, p1106 * 72.421875);
      v1449.bezierCurveTo(p1106 * 76.5, p1106 * 79.421875, p1106 * 79.5, p1106 * 80.421875, p1106 * 83.5, p1106 * 73.421875);
      v1449.bezierCurveTo(p1106 * 80.5, p1106 * 96.921875, p1106 * 79.5, p1106 * 114.421875, p1106 * 77.5, p1106 * 120.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 42.5, p1106 * 163.421875);
      v1449.bezierCurveTo(p1106 * 62.5, p1106 * 185.421875, p1106 * 86.5, p1106 * 186.421875, p1106 * 111.5, p1106 * 165.421875);
      v1449.bezierCurveTo(p1106 * 107.5, p1106 * 176.421875, p1106 * 95.5, p1106 * 187.421875, p1106 * 75.5, p1106 * 188.421875);
      v1449.bezierCurveTo(p1106 * 53.5, p1106 * 188.421875, p1106 * 43.5, p1106 * 171.421875, p1106 * 42.5, p1106 * 164.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 79.5, p1106 * 61.421875);
      v1449.bezierCurveTo(p1106 * 88.5, p1106 * 31.421875, p1106 * 81.5, p1106 * 16.421875, p1106 * 75.5, p1106 * 7.421875);
      v1449.bezierCurveTo(p1106 * 77.5, p1106 * 28.421875, p1106 * 77.5, p1106 * 37.421875, p1106 * 68.5, p1106 * 42.421875);
      v1449.bezierCurveTo(p1106 * 79.5, p1106 * 57.421875, p1106 * 79.5, p1106 * 58.421875, p1106 * 80.5, p1106 * 61.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      v1449.beginPath();
      v1449.lineCap = "round";
      v1449.lineJoin = "round";
      v1449.moveTo(p1106 * 72.5, p1106 * 72.421875);
      v1449.bezierCurveTo(p1106 * 76.5, p1106 * 79.421875, p1106 * 79.5, p1106 * 80.421875, p1106 * 83.5, p1106 * 73.421875);
      v1449.bezierCurveTo(p1106 * 80.5, p1106 * 96.921875, p1106 * 79.5, p1106 * 114.421875, p1106 * 77.5, p1106 * 120.421875);
      v1449.closePath();
      f86(v1449, p1107[0], p1107[0], p1106 * 10);
      return v1448;
    }(0.8, ["#B6222A"]));
    ⲆⲆ[902] = [];
    ⲆⲆ[902][v554.ᐃⵠⵠ] = f48(f101(0.4, 0, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0));
    ⲆⲆ[902][v554.ΔⲆᐃ] = f48(f101(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ⲆⲆ[903] = [];
    ⲆⲆ[903][v554.ᐃⵠⵠ] = f48(f101(0.4, 0, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1));
    ⲆⲆ[903][v554.ΔⲆᐃ] = f48(f101(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1));
    ⲆⲆ[v554.ΔᐃⵠΔΔᐃⵠ] = [];
    ⲆⲆ[v554.ΔᐃⵠΔΔᐃⵠ][v554.ᐃⵠⵠ] = f48(f101(0.4, 0, ["#1e2021", "#2973a5", "#ffffff", "#ffff00", "#000000", "#03243f", "#f2ec30", "#162f6d"], 0));
    ⲆⲆ[v554.ΔᐃⵠΔΔᐃⵠ][v554.ΔⲆᐃ] = f48(f101(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
    ⲆⲆ[904] = f48(f105(0.4, ["#B6222A"]));
    ⲆⲆ[905] = f48(f105(0.4, ["#B6222A"]));
    ⲆⲆ[v554.ΔⲆⲆⵠᐃⵠⲆᐃⵠ] = f48(f105(0.4, ["#B6222A"]));
    ⲆⲆ[230] = f48(f186(0.35, true, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]));
    ⲆⲆ[229] = f48(f150(0.35, vVVV242, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]));
    ⲆⲆ[886] = [];
    ⲆⲆ[886][v554.ᐃⵠⵠ] = f48(f145(0.35, 0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1));
    ⲆⲆ[886][v554.ΔⲆᐃ] = f48(f145(0.35, 0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1));
    ⲆⲆ[887] = [];
    ⲆⲆ[887][v554.ᐃⵠⵠ] = f48(f145(0.35, 0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0));
    ⲆⲆ[887][v554.ΔⲆᐃ] = f48(f145(0.35, 0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0));
    ⲆⲆ[894] = [];
    ⲆⲆ[894][v554.ᐃⵠⵠ] = f48(f143(0.35, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ⲆⲆ[894][v554.ΔⲆᐃ] = f48(f143(0.35, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ⲆⲆ[895] = [];
    ⲆⲆ[895][v554.ᐃⵠⵠ] = f48(f146(0.42, 0, ["#1e2021", "#e45936", "#ffffff"]));
    ⲆⲆ[895][v554.ΔⲆᐃ] = f48(f146(0.42, 0, ["#0c0c0d", "#34255d", "#563f83"]));
    ⲆⲆ[896] = [];
    ⲆⲆ[896][v554.ᐃⵠⵠ] = f48(f143(0.35, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ⲆⲆ[896][v554.ΔⲆᐃ] = f48(f143(0.35, 0, ["#0c0c0d", "#613577", "#462966"]));
    ⲆⲆ[897] = [];
    ⲆⲆ[897][v554.ᐃⵠⵠ] = f48(f146(0.42, 0, ["#1e2021", "#e45936", "#B6222A"]));
    ⲆⲆ[897][v554.ΔⲆᐃ] = f48(f146(0.42, 0, ["#0c0c0d", "#613577", "#462966"]));
    ⲆⲆ[888] = f48(f142(0.35, ["#B6222A"]));
    ⲆⲆ[889] = f48(f143(0.35, 0, [undefined, "#B6222A"]));
    ⲆⲆ[890] = f48(f146(0.35, 0, [vVVUndefined272, "#B6222A"]));
    ⲆⲆ[891] = f48(f142(0.35, ["#22E066"]));
    ⲆⲆ[892] = f48(f143(0.35, 0, [undefined, "#22E066"]));
    ⲆⲆ[893] = f48(f146(0.35, 0, [vUndefined, "#22E066"]));
    ⲆⲆ[48] = [];
    ⲆⲆ[48][v554.ᐃⵠⵠ] = f48(f168(0.3, true, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]));
    ⲆⲆ[48][v554.ΔⲆᐃ] = f48(f168(0.3, vVVVV242, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"]));
    ⲆⲆ[47] = [];
    ⲆⲆ[47][v554.ᐃⵠⵠ] = f48(f163(0.45, v24, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"]));
    ⲆⲆ[47][v554.ΔⲆᐃ] = f48(f163(0.45, vVV244, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"]));
    ⲆⲆ[141] = [];
    ⲆⲆ[141][v554.ᐃⵠⵠ] = f48(f272(0.63, true, ["#1e2021", "#352E1E", "#4C3B19", "#574122"]));
    ⲆⲆ[141][v554.ΔⲆᐃ] = f48(f272(0.63, vVV24, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ⲆⲆ[125] = [];
    ⲆⲆ[125][v554.ᐃⵠⵠ] = f48(f252(1, true, ["#1e2021", "#332715", "#4C3B19", "#574122"]));
    ⲆⲆ[125][v554.ΔⲆᐃ] = f48(f252(1, vV243, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
    ⲆⲆ[221] = [];
    ⲆⲆ[221][v554.ᐃⵠⵠ] = ᐃⲆ.ᐃⲆΔΔⲆΔΔⲆᐃ;
    ⲆⲆ[221][v554.ΔⲆᐃ] = ᐃⲆ.ⲆΔⲆΔⵠΔⲆⵠΔ;
    ⲆⲆ[190] = [];
    ⲆⲆ[190][v554.ᐃⵠⵠ] = f48(f98(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⲆⲆ[190][v554.ΔⲆᐃ] = f48(f98(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⲆⲆ[853] = [ⲆⲆ[190]];
    ⲆⲆ[853][1] = [];
    ⲆⲆ[853][2] = [];
    ⲆⲆ[853][1][v554.ᐃⵠⵠ] = f48(f97(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⲆⲆ[853][1][v554.ΔⲆᐃ] = f48(f97(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⲆⲆ[853][2][v554.ᐃⵠⵠ] = f48(f99(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
    ⲆⲆ[853][2][v554.ΔⲆᐃ] = f48(f99(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
    ⲆⲆ[49] = [];
    ⲆⲆ[49][v554.ᐃⵠⵠ] = f48(f91(3 - Math.PI / 2, f275(0.6, true, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"])));
    ⲆⲆ[49][v554.ΔⲆᐃ] = f48(f91(3 - Math.PI / 2, f275(0.6, vVV242, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"])));
    ⲆⲆ[728] = [];
    ⲆⲆ[728][v554.ᐃⵠⵠ] = f48(f114(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
    ⲆⲆ[728][v554.ΔⲆᐃ] = f48(f114(0.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0));
    ⲆⲆ[798] = f48(function (p1108, p1109) {
      var v1450 = document.createElement("canvas");
      var v1451 = v1450.getContext("2d");
      v1450.width = p1108 * 650;
      v1450.height = p1108 * 650;
      v1451.scale(1.9, 1.9);
      v1451.save();
      v1451.translate(p1108 * 202.5, p1108 * 147.5);
      f89(v1451, p1108 * -96.5, p1108 * -21.5, p1108 * 193, p1108 * 193, p1108 * 0);
      v1451.restore();
      f86(v1451, p1109[4], p1109[1], p1108 * 12);
      v1451.save();
      v1451.translate(p1108 * 203.5, p1108 * 121.5);
      f89(v1451, p1108 * -115.5, p1108 * -20.5, p1108 * 231, p1108 * 41, p1108 * 10);
      v1451.restore();
      f86(v1451, p1109[3], p1109[1], p1108 * 12);
      v1451.save();
      v1451.translate(p1108 * 203.5, p1108 * 299);
      f89(v1451, p1108 * -115.5, p1108 * -20, p1108 * 231, p1108 * 40, p1108 * 10);
      v1451.restore();
      f86(v1451, p1109[3], p1109[1], p1108 * 12);
      v1451.save();
      v1451.translate(p1108 * 298.5, p1108 * 210);
      f89(v1451, p1108 * -20.5, p1108 * -109, p1108 * 41, p1108 * 218, p1108 * 10);
      v1451.restore();
      f86(v1451, p1109[3], p1109[1], p1108 * 12);
      v1451.save();
      v1451.translate(p1108 * 108.5, p1108 * 210);
      f89(v1451, p1108 * -20.5, p1108 * -109, p1108 * 41, p1108 * 218, p1108 * 10);
      v1451.restore();
      f86(v1451, p1109[3], p1109[1], p1108 * 12);
      v1451.save();
      v1451.translate(p1108 * 204, p1108 * 121.5);
      f89(v1451, p1108 * -92, p1108 * -9.5, p1108 * 184, p1108 * 19, p1108 * 10);
      v1451.restore();
      f86(v1451, p1109[3], p1109[3], p1108 * 10);
      v1451.save();
      v1451.translate(p1108 * 197, p1108 * 299);
      f89(v1451, p1108 * 85, p1108 * -9, p1108 * -170, p1108 * 18, p1108 * 10);
      v1451.restore();
      f86(v1451, p1109[3], p1109[3], p1108 * 10);
      v1451.beginPath();
      v1451.lineCap = "round";
      v1451.lineJoin = "round";
      v1451.moveTo(p1108 * 94, p1108 * 317);
      v1451.bezierCurveTo(p1108 * 110.5, p1108 * 299.5, p1108 * 110.5, p1108 * 299.5, p1108 * 127, p1108 * 282);
      v1451.closePath();
      f86(v1451, vVVUndefined197, p1109[1], p1108 * 12);
      v1451.beginPath();
      v1451.lineCap = "round";
      v1451.lineJoin = "round";
      v1451.moveTo(p1108 * 279, p1108 * 142);
      v1451.bezierCurveTo(p1108 * 296.5, p1108 * 125.5, p1108 * 296.5, p1108 * 125.5, p1108 * 314, p1108 * 109);
      v1451.closePath();
      f86(v1451, undefined, p1109[1], p1108 * 12);
      v1451.beginPath();
      v1451.lineCap = "round";
      v1451.lineJoin = "round";
      v1451.moveTo(p1108 * 93, p1108 * 106);
      v1451.bezierCurveTo(p1108 * 110.5, p1108 * 124, p1108 * 110.5, p1108 * 124, p1108 * 128, p1108 * 142);
      v1451.closePath();
      f86(v1451, undefined, p1109[1], p1108 * 12);
      v1451.beginPath();
      v1451.lineCap = "round";
      v1451.lineJoin = "round";
      v1451.moveTo(p1108 * 281, p1108 * 282);
      v1451.bezierCurveTo(p1108 * 296, p1108 * 297.5, p1108 * 296, p1108 * 297.5, p1108 * 311, p1108 * 313);
      v1451.closePath();
      f86(v1451, vVVVUndefined1974, p1109[1], p1108 * 12);
      return v1450;
    }(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
    ⲆⲆ[729] = f48(function (p1110, p1111) {
      var v1452 = document.createElement("canvas");
      var v1453 = v1452.getContext("2d");
      v1452.width = p1110 * 400;
      v1452.height = p1110 * 400;
      v1453.save();
      v1453.translate(p1110 * 202.5, p1110 * 147.5);
      f89(v1453, p1110 * -96.5, p1110 * -21.5, p1110 * 193, p1110 * 43, p1110 * 0);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 202.5, p1110 * 190.5);
      f89(v1453, p1110 * 96.5, p1110 * -21.5, p1110 * -193, p1110 * 43, p1110 * 0);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 202.5, p1110 * 233.5);
      f89(v1453, p1110 * -96.5, p1110 * -20.5, p1110 * 193, p1110 * 41, p1110 * 0);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 202.5, p1110 * 275);
      f89(v1453, p1110 * 96.5, p1110 * -21, p1110 * -193, p1110 * 42, p1110 * 0);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 203.5, p1110 * 121.5);
      f89(v1453, p1110 * -115.5, p1110 * -20.5, p1110 * 231, p1110 * 41, p1110 * 10);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 203.5, p1110 * 299);
      f89(v1453, p1110 * -115.5, p1110 * -20, p1110 * 231, p1110 * 40, p1110 * 10);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 298.5, p1110 * 210);
      f89(v1453, p1110 * -20.5, p1110 * -109, p1110 * 41, p1110 * 218, p1110 * 10);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      v1453.save();
      v1453.translate(p1110 * 108.5, p1110 * 210);
      f89(v1453, p1110 * -20.5, p1110 * -109, p1110 * 41, p1110 * 218, p1110 * 10);
      v1453.restore();
      f86(v1453, p1111[0], p1111[0], p1110 * 12);
      return v1452;
    }(0.3, ["#BB0000"]));
    ⲆⲆ[658] = f121(1, [{
      f: f288,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
    ⲆⲆ[150] = f121(1.5, [{
      f: f210,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#120202", "#750a0a", "#991616", "#120202"]
    }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
    ⲆⲆ[669] = f279(0.35, ["#072428", "#67A242", "#67A242"], 0);
    ⲆⲆ[670] = f279(0.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1);
    ⲆⲆ[671] = f279(0.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2);
    ⲆⲆ[672] = f279(0.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3);
    if (ⲆⵠⲆᐃⲆⵠⵠ) {
      ⲆⲆ[278] = f48(function (p1112) {
        var v1454 = document.createElement("canvas");
        var v1455 = v1454.getContext("2d");
        var v1456 = p1112 * 200;
        var v1457 = p1112 * 180;
        var v1458 = p1112 * 8;
        v1454.width = v1456;
        v1454.height = v1457;
        v1455.beginPath();
        f89(v1455, 0, 0, v1456, v1457 - v1458, v1458);
        v1455.globalAlpha = 0.8;
        f86(v1455, "#1D6055");
        v1455.globalAlpha = 1;
        var vF153 = f153(p1112, "Leaderboard", 25, "#FFF");
        v1455.drawImage(vF153, (v1456 - vF153.width) / 2, p1112 * 5);
        return v1454;
      }(1));
    } else {
      ⲆⲆ[278] = f48(function (p1113) {
        var v1459 = document.createElement("canvas");
        var v1460 = v1459.getContext("2d");
        var v1461 = p1113 * 200;
        var v1462 = p1113 * 270;
        var v1463 = p1113 * 8;
        v1459.width = v1461;
        v1459.height = v1462 + 20;
        v1460.beginPath();
        f89(v1460, 0, 0, v1461, v1462 - v1463, v1463);
        v1460.globalAlpha = 0.5;
        f86(v1460, "#1D6055");
        v1460.globalAlpha = 1;
        var vF1532 = f153(p1113, "Leaderboard", 25, "#FFF");
        v1460.drawImage(vF1532, (v1461 - vF1532.width) / 2, p1113 * 5);
        return v1459;
      }(1));
    }
    if (ⲆⵠⲆᐃⲆⵠⵠ) {
      ⲆⲆ[267] = f48(function (p1114) {
        var v1464 = document.createElement("canvas");
        var v1465 = v1464.getContext("2d");
        var v1466 = p1114 * 335;
        var v1467 = p1114 * 250;
        var v1468 = p1114 * 120;
        var v1469 = p1114 * 20;
        var v1470 = p1114 * 35;
        var v1471 = p1114 * 65;
        var v1472 = p1114 * 2;
        var v1473 = p1114 * 4;
        v1464.width = v1466;
        v1464.height = v1468;
        v1465.beginPath();
        v1465.translate(0, p1114 * 15);
        f89(v1465, v1471, 0, v1467, v1469, v1472);
        f86(v1465, null, "#69A148", v1473);
        v1465.translate(0, v1470);
        f89(v1465, v1471, 0, v1467, v1469, v1472);
        f86(v1465, null, "#AF352A", v1473);
        v1465.translate(0, v1470);
        f89(v1465, v1471, 0, v1467, v1469, v1472);
        f86(v1465, null, "#669BB1", v1473);
        return v1464;
      }(0.75));
    } else {
      ⲆⲆ[267] = f48(function (p1115) {
        var v1474 = document.createElement("canvas");
        var v1475 = v1474.getContext("2d");
        var v1476 = p1115 * 950;
        var v1477 = p1115 * 180;
        var v1478 = p1115 * 50;
        var v1479 = p1115 * 20;
        var v1480 = p1115 * 240;
        var v1481 = p1115 * 35;
        var v1482 = p1115 * 1;
        var v1483 = p1115 * 4;
        var v1484 = p1115 * 4;
        v1474.width = v1476;
        v1474.height = v1478;
        v1475.translate(0, p1115 * 15);
        f89(v1475, v1481, v1482, v1477, v1479, v1483);
        f86(v1475, null, "#69A148", v1484);
        var v1485 = ⲆⲆ[669];
        v1475.drawImage(v1485, 17, -8);
        v1475.translate(v1480, 0);
        f89(v1475, v1481, v1482, v1477, v1479, v1483);
        f86(v1475, null, "#AF352A", v1484);
        v1485 = ⲆⲆ[671];
        v1475.drawImage(v1485, 17, -9);
        v1475.translate(v1480, 0);
        f89(v1475, v1481, v1482, v1477, v1479, v1483);
        f86(v1475, null, "#669BB1", v1484);
        v1485 = ⲆⲆ[670];
        v1475.drawImage(v1485, 17, -8);
        v1475.translate(v1480, 0);
        f89(v1475, v1481, v1482, v1477, v1479, v1483);
        f86(v1475, null, "#074A87", v1484);
        v1485 = ⲆⲆ[672];
        v1475.drawImage(v1485, 17, -8);
        return v1474;
      }(1));
    }
    if (ⲆⵠⲆᐃⲆⵠⵠ) {
      ⲆⲆ[608] = f48(f286(0.75));
    } else {
      ⲆⲆ[608] = f48(f286(1));
    }
    ⲆⲆ[792] = f48(f239(0.16, vVVV242, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]));
    ⲆⲆ[537] = f48(f91(5.8, f140(0.15, vV243, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])));
    ⲆⲆ[283] = [];
    ⲆⲆ[465] = [];
    for (v1396 = 0; v1396 < 18; v1396++) {
      ⲆⲆ[465][v1396] = f153(1, "" + (v1396 + 1), 12, "#FFF");
    }
    ⲆⲆ[708] = [];
    ⲆⲆ[708].push(f48(f262(0.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"])));
    ⲆⲆ[708].push(f48(f262(0.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1)));
    ⲆⲆ[708].push(f48(f262(0.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1)));
    ⲆⲆ[725] = [];
    ⲆⲆ[725].push(f48(function (p1116) {
      var v1486 = document.createElement("canvas");
      var v1487 = v1486.getContext("2d");
      v1486.width = p1116 * 321;
      v1486.height = p1116 * 345;
      v1487.translate(0, p1116 * 5);
      v1487.translate(0, p1116 * 20);
      f87(v1487, p1116 * 160.5, p1116 * 159.5, p1116 * 156.39595138242822);
      f86(v1487, "#322413", "#322413", p1116 * 4);
      v1487.translate(0, p1116 * -20);
      f87(v1487, p1116 * 160.5, p1116 * 159.5, p1116 * 156.39595138242822);
      f86(v1487, "#392C16", "#5E3E1A", p1116 * 10);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 31.999969482421875, p1116 * 163.07290649414062);
      v1487.bezierCurveTo(p1116 * 22.999969482421875, p1116 * 67.07290649414062, p1116 * 106, p1116 * 20.072906494140625, p1116 * 162, p1116 * 23.072906494140625);
      v1487.bezierCurveTo(p1116 * 269.9999694824219, p1116 * 31.072906494140625, p1116 * 292.9999694824219, p1116 * 120.07290649414062, p1116 * 294.9999694824219, p1116 * 161.07290649414062);
      v1487.bezierCurveTo(p1116 * 165.49996948242188, p1116 * 162.07290649414062, p1116 * 165.49996948242188, p1116 * 162.07290649414062, p1116 * 35.999969482421875, p1116 * 163.07290649414062);
      v1487.closePath();
      f86(v1487, "#12432D");
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 32.999969482421875, p1116 * 165.07290649414062);
      v1487.bezierCurveTo(p1116 * 16.999969482421875, p1116 * 221.07290649414062, p1116 * 85, p1116 * 289.0729064941406, p1116 * 156, p1116 * 294.0729064941406);
      v1487.bezierCurveTo(p1116 * 263.9999694824219, p1116 * 293.0729064941406, p1116 * 295.9999694824219, p1116 * 199.07290649414062, p1116 * 294.9999694824219, p1116 * 159.07290649414062);
      v1487.closePath();
      f86(v1487, "#3A2A0D");
      f87(v1487, p1116 * 161, p1116 * 158.07290649414062, p1116 * 133.4053971921676);
      f86(v1487, vVVVUndefined197, "#5E3E1A", p1116 * 10);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 31.999969482421875, p1116 * 161.62844848632812);
      v1487.bezierCurveTo(p1116 * 162.49996948242188, p1116 * 161.62844848632812, p1116 * 162.49996948242188, p1116 * 161.62844848632812, p1116 * 292.9999694824219, p1116 * 161.62844848632812);
      v1487.closePath();
      f86(v1487, vVVVUndefined273, "#5E3E1A", p1116 * 12);
      v1487.translate(0, p1116 * 8);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 66, p1116 * 158.29513549804688);
      v1487.bezierCurveTo(p1116 * 86, p1116 * 158.29513549804688, p1116 * 86, p1116 * 158.29513549804688, p1116 * 106, p1116 * 158.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 57.999969482421875, p1116 * 117.29513549804688);
      v1487.bezierCurveTo(p1116 * 85, p1116 * 128.29513549804688, p1116 * 85, p1116 * 128.29513549804688, p1116 * 113, p1116 * 139.29513549804688);
      v1487.closePath();
      f86(v1487, vVVUndefined197, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 95, p1116 * 90.29513549804688);
      v1487.bezierCurveTo(p1116 * 112, p1116 * 105.79513549804688, p1116 * 112, p1116 * 105.79513549804688, p1116 * 129, p1116 * 121.29513549804688);
      v1487.closePath();
      f86(v1487, vVVVUndefined197, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 116, p1116 * 52.850677490234375);
      v1487.bezierCurveTo(p1116 * 130, p1116 * 83.85067749023438, p1116 * 130, p1116 * 83.85067749023438, p1116 * 144, p1116 * 114.85067749023438);
      v1487.closePath();
      f86(v1487, vVVVUndefined1974, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 159, p1116 * 61.295135498046875);
      v1487.bezierCurveTo(p1116 * 160.49996948242188, p1116 * 92.29513549804688, p1116 * 160.49996948242188, p1116 * 92.29513549804688, p1116 * 160, p1116 * 123.29513549804688);
      v1487.closePath();
      f86(v1487, vVVVUndefined1974, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 203, p1116 * 51.295135498046875);
      v1487.bezierCurveTo(p1116 * 190.49996948242188, p1116 * 83.29513549804688, p1116 * 190.49996948242188, p1116 * 83.29513549804688, p1116 * 176, p1116 * 115.29513549804688);
      v1487.closePath();
      f86(v1487, vVUndefined27, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 225, p1116 * 89.29513549804688);
      v1487.bezierCurveTo(p1116 * 210.49996948242188, p1116 * 104.79513549804688, p1116 * 210.49996948242188, p1116 * 104.79513549804688, p1116 * 194, p1116 * 120.29513549804688);
      v1487.closePath();
      f86(v1487, vUndefined, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 266.9999694824219, p1116 * 112.29513549804688);
      v1487.bezierCurveTo(p1116 * 233.49996948242188, p1116 * 127.29513549804688, p1116 * 233.49996948242188, p1116 * 127.29513549804688, p1116 * 199, p1116 * 142.29513549804688);
      v1487.closePath();
      f86(v1487, vVVVUndefined27, "#c7a726", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 256.9999694824219, p1116 * 155.29513549804688);
      v1487.bezierCurveTo(p1116 * 238.49996948242188, p1116 * 156.29513549804688, p1116 * 238.49996948242188, p1116 * 156.29513549804688, p1116 * 219, p1116 * 157.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#c7a726", p1116 * 12);
      v1487.translate(0, p1116 * -8);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 66, p1116 * 158.29513549804688);
      v1487.bezierCurveTo(p1116 * 86, p1116 * 158.29513549804688, p1116 * 86, p1116 * 158.29513549804688, p1116 * 106, p1116 * 158.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 57.999969482421875, p1116 * 117.29513549804688);
      v1487.bezierCurveTo(p1116 * 85, p1116 * 128.29513549804688, p1116 * 85, p1116 * 128.29513549804688, p1116 * 113, p1116 * 139.29513549804688);
      v1487.closePath();
      f86(v1487, vVVVUndefined1975, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 95, p1116 * 90.29513549804688);
      v1487.bezierCurveTo(p1116 * 112, p1116 * 105.79513549804688, p1116 * 112, p1116 * 105.79513549804688, p1116 * 129, p1116 * 121.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 116, p1116 * 52.850677490234375);
      v1487.bezierCurveTo(p1116 * 130, p1116 * 83.85067749023438, p1116 * 130, p1116 * 83.85067749023438, p1116 * 144, p1116 * 114.85067749023438);
      v1487.closePath();
      f86(v1487, vVVUndefined272, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 159, p1116 * 61.295135498046875);
      v1487.bezierCurveTo(p1116 * 160.49996948242188, p1116 * 92.29513549804688, p1116 * 160.49996948242188, p1116 * 92.29513549804688, p1116 * 160, p1116 * 123.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 203, p1116 * 51.295135498046875);
      v1487.bezierCurveTo(p1116 * 190.49996948242188, p1116 * 83.29513549804688, p1116 * 190.49996948242188, p1116 * 83.29513549804688, p1116 * 176, p1116 * 115.29513549804688);
      v1487.closePath();
      f86(v1487, vVVVUndefined27, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 225, p1116 * 89.29513549804688);
      v1487.bezierCurveTo(p1116 * 210.49996948242188, p1116 * 104.79513549804688, p1116 * 210.49996948242188, p1116 * 104.79513549804688, p1116 * 194, p1116 * 120.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 266.9999694824219, p1116 * 112.29513549804688);
      v1487.bezierCurveTo(p1116 * 233.49996948242188, p1116 * 127.29513549804688, p1116 * 233.49996948242188, p1116 * 127.29513549804688, p1116 * 199, p1116 * 142.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 256.9999694824219, p1116 * 155.29513549804688);
      v1487.bezierCurveTo(p1116 * 238.49996948242188, p1116 * 156.29513549804688, p1116 * 238.49996948242188, p1116 * 156.29513549804688, p1116 * 219, p1116 * 157.29513549804688);
      v1487.closePath();
      f86(v1487, undefined, "#EDCE4F", p1116 * 12);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 94.00003051757812, p1116 * 164.40341186523438);
      v1487.bezierCurveTo(p1116 * 162.50003051757812, p1116 * 164.40341186523438, p1116 * 230.00003051757812, p1116 * 165.40341186523438, p1116 * 231.00003051757812, p1116 * 164.40341186523438);
      v1487.bezierCurveTo(p1116 * 214.00003051757812, p1116 * 267.4034118652344, p1116 * 92.00003051757812, p1116 * 243.40341186523438, p1116 * 93.00003051757812, p1116 * 165.40341186523438);
      v1487.closePath();
      f86(v1487, "#704618", "#5D3D1A", p1116 * 8);
      v1487.beginPath();
      v1487.lineCap = "round";
      v1487.lineJoin = "round";
      v1487.moveTo(p1116 * 96, p1116 * 166);
      v1487.bezierCurveTo(p1116 * 88, p1116 * 117, p1116 * 129, p1116 * 92, p1116 * 161, p1116 * 91);
      v1487.bezierCurveTo(p1116 * 201, p1116 * 90, p1116 * 223, p1116 * 121, p1116 * 230, p1116 * 161);
      v1487.closePath();
      f86(v1487, "#ECBE35", "#EDCE4F", p1116 * 8);
      f87(v1487, p1116 * 160.00003051757812, p1116 * 166.49432373046875, p1116 * 28.30194339616981);
      f86(v1487, "#392C16", "#5E3E1A", p1116 * 10);
      return v1486;
    }(0.22)));
    ⲆⲆ[725].push(f48(function (p1117) {
      var v1488 = document.createElement("canvas");
      var v1489 = v1488.getContext("2d");
      v1488.width = p1117 * 321;
      v1488.height = p1117 * 345;
      v1489.translate(0, p1117 * 5);
      v1489.translate(0, p1117 * 20);
      f87(v1489, p1117 * 160.5, p1117 * 159.5, p1117 * 156.39595138242822);
      f86(v1489, "#322413", "#322413", p1117 * 4);
      v1489.translate(0, p1117 * -20);
      f87(v1489, p1117 * 160.5, p1117 * 159.5, p1117 * 156.39595138242822);
      f86(v1489, "#392C16", "#5E3E1A", p1117 * 10);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 31.999969482421875, p1117 * 163.07290649414062);
      v1489.bezierCurveTo(p1117 * 22.999969482421875, p1117 * 67.07290649414062, p1117 * 106, p1117 * 20.072906494140625, p1117 * 162, p1117 * 23.072906494140625);
      v1489.bezierCurveTo(p1117 * 269.9999694824219, p1117 * 31.072906494140625, p1117 * 292.9999694824219, p1117 * 120.07290649414062, p1117 * 294.9999694824219, p1117 * 161.07290649414062);
      v1489.bezierCurveTo(p1117 * 165.49996948242188, p1117 * 162.07290649414062, p1117 * 165.49996948242188, p1117 * 162.07290649414062, p1117 * 35.999969482421875, p1117 * 163.07290649414062);
      v1489.closePath();
      f86(v1489, "#3A2A0D");
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 32.999969482421875, p1117 * 165.07290649414062);
      v1489.bezierCurveTo(p1117 * 16.999969482421875, p1117 * 221.07290649414062, p1117 * 85, p1117 * 289.0729064941406, p1117 * 156, p1117 * 294.0729064941406);
      v1489.bezierCurveTo(p1117 * 263.9999694824219, p1117 * 293.0729064941406, p1117 * 295.9999694824219, p1117 * 199.07290649414062, p1117 * 294.9999694824219, p1117 * 159.07290649414062);
      v1489.closePath();
      f86(v1489, "#071A1B");
      f87(v1489, p1117 * 161, p1117 * 158.07290649414062, p1117 * 133.4053971921676);
      f86(v1489, undefined, "#5E3E1A", p1117 * 10);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 31.999969482421875, p1117 * 161.62844848632812);
      v1489.bezierCurveTo(p1117 * 162.49996948242188, p1117 * 161.62844848632812, p1117 * 162.49996948242188, p1117 * 161.62844848632812, p1117 * 292.9999694824219, p1117 * 161.62844848632812);
      v1489.closePath();
      f86(v1489, undefined, "#5E3E1A", p1117 * 12);
      v1489.translate(0, p1117 * 8);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 66, p1117 * 158.29513549804688);
      v1489.bezierCurveTo(p1117 * 86, p1117 * 158.29513549804688, p1117 * 86, p1117 * 158.29513549804688, p1117 * 106, p1117 * 158.29513549804688);
      v1489.closePath();
      f86(v1489, vVVVVVUndefined197, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 57.999969482421875, p1117 * 117.29513549804688);
      v1489.bezierCurveTo(p1117 * 85, p1117 * 128.29513549804688, p1117 * 85, p1117 * 128.29513549804688, p1117 * 113, p1117 * 139.29513549804688);
      v1489.closePath();
      f86(v1489, vVVVVUndefined1972, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 95, p1117 * 90.29513549804688);
      v1489.bezierCurveTo(p1117 * 112, p1117 * 105.79513549804688, p1117 * 112, p1117 * 105.79513549804688, p1117 * 129, p1117 * 121.29513549804688);
      v1489.closePath();
      f86(v1489, vVVUndefined272, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 116, p1117 * 52.850677490234375);
      v1489.bezierCurveTo(p1117 * 130, p1117 * 83.85067749023438, p1117 * 130, p1117 * 83.85067749023438, p1117 * 144, p1117 * 114.85067749023438);
      v1489.closePath();
      f86(v1489, undefined, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 159, p1117 * 61.295135498046875);
      v1489.bezierCurveTo(p1117 * 160.49996948242188, p1117 * 92.29513549804688, p1117 * 160.49996948242188, p1117 * 92.29513549804688, p1117 * 160, p1117 * 123.29513549804688);
      v1489.closePath();
      f86(v1489, undefined, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 203, p1117 * 51.295135498046875);
      v1489.bezierCurveTo(p1117 * 190.49996948242188, p1117 * 83.29513549804688, p1117 * 190.49996948242188, p1117 * 83.29513549804688, p1117 * 176, p1117 * 115.29513549804688);
      v1489.closePath();
      f86(v1489, vVVVUndefined1975, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 225, p1117 * 89.29513549804688);
      v1489.bezierCurveTo(p1117 * 210.49996948242188, p1117 * 104.79513549804688, p1117 * 210.49996948242188, p1117 * 104.79513549804688, p1117 * 194, p1117 * 120.29513549804688);
      v1489.closePath();
      f86(v1489, vVUndefined26, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 266.9999694824219, p1117 * 112.29513549804688);
      v1489.bezierCurveTo(p1117 * 233.49996948242188, p1117 * 127.29513549804688, p1117 * 233.49996948242188, p1117 * 127.29513549804688, p1117 * 199, p1117 * 142.29513549804688);
      v1489.closePath();
      f86(v1489, vVVVVVUndefined197, "#281C08", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 256.9999694824219, p1117 * 155.29513549804688);
      v1489.bezierCurveTo(p1117 * 238.49996948242188, p1117 * 156.29513549804688, p1117 * 238.49996948242188, p1117 * 156.29513549804688, p1117 * 219, p1117 * 157.29513549804688);
      v1489.closePath();
      f86(v1489, vUndefined, "#281C08", p1117 * 12);
      v1489.translate(0, p1117 * -8);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 66, p1117 * 158.29513549804688);
      v1489.bezierCurveTo(p1117 * 86, p1117 * 158.29513549804688, p1117 * 86, p1117 * 158.29513549804688, p1117 * 106, p1117 * 158.29513549804688);
      v1489.closePath();
      f86(v1489, vVUndefined26, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 57.999969482421875, p1117 * 117.29513549804688);
      v1489.bezierCurveTo(p1117 * 85, p1117 * 128.29513549804688, p1117 * 85, p1117 * 128.29513549804688, p1117 * 113, p1117 * 139.29513549804688);
      v1489.closePath();
      f86(v1489, vVUndefined19, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 95, p1117 * 90.29513549804688);
      v1489.bezierCurveTo(p1117 * 112, p1117 * 105.79513549804688, p1117 * 112, p1117 * 105.79513549804688, p1117 * 129, p1117 * 121.29513549804688);
      v1489.closePath();
      f86(v1489, undefined, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 116, p1117 * 52.850677490234375);
      v1489.bezierCurveTo(p1117 * 130, p1117 * 83.85067749023438, p1117 * 130, p1117 * 83.85067749023438, p1117 * 144, p1117 * 114.85067749023438);
      v1489.closePath();
      f86(v1489, undefined, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 159, p1117 * 61.295135498046875);
      v1489.bezierCurveTo(p1117 * 160.49996948242188, p1117 * 92.29513549804688, p1117 * 160.49996948242188, p1117 * 92.29513549804688, p1117 * 160, p1117 * 123.29513549804688);
      v1489.closePath();
      f86(v1489, vVVVUndefined1975, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 203, p1117 * 51.295135498046875);
      v1489.bezierCurveTo(p1117 * 190.49996948242188, p1117 * 83.29513549804688, p1117 * 190.49996948242188, p1117 * 83.29513549804688, p1117 * 176, p1117 * 115.29513549804688);
      v1489.closePath();
      f86(v1489, vVVUndefined197, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 225, p1117 * 89.29513549804688);
      v1489.bezierCurveTo(p1117 * 210.49996948242188, p1117 * 104.79513549804688, p1117 * 210.49996948242188, p1117 * 104.79513549804688, p1117 * 194, p1117 * 120.29513549804688);
      v1489.closePath();
      f86(v1489, undefined, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 266.9999694824219, p1117 * 112.29513549804688);
      v1489.bezierCurveTo(p1117 * 233.49996948242188, p1117 * 127.29513549804688, p1117 * 233.49996948242188, p1117 * 127.29513549804688, p1117 * 199, p1117 * 142.29513549804688);
      v1489.closePath();
      f86(v1489, undefined, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 256.9999694824219, p1117 * 155.29513549804688);
      v1489.bezierCurveTo(p1117 * 238.49996948242188, p1117 * 156.29513549804688, p1117 * 238.49996948242188, p1117 * 156.29513549804688, p1117 * 219, p1117 * 157.29513549804688);
      v1489.closePath();
      f86(v1489, undefined, "#5E3C10", p1117 * 12);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 96, p1117 * 166);
      v1489.bezierCurveTo(p1117 * 88, p1117 * 117, p1117 * 129, p1117 * 92, p1117 * 161, p1117 * 91);
      v1489.bezierCurveTo(p1117 * 201, p1117 * 90, p1117 * 223, p1117 * 121, p1117 * 230, p1117 * 161);
      v1489.closePath();
      f86(v1489, "#704618", "#5D3D1A", p1117 * 8);
      v1489.beginPath();
      v1489.lineCap = "round";
      v1489.lineJoin = "round";
      v1489.moveTo(p1117 * 94.00003051757812, p1117 * 164.40341186523438);
      v1489.bezierCurveTo(p1117 * 162.50003051757812, p1117 * 164.40341186523438, p1117 * 230.00003051757812, p1117 * 165.40341186523438, p1117 * 231.00003051757812, p1117 * 164.40341186523438);
      v1489.bezierCurveTo(p1117 * 214.00003051757812, p1117 * 267.4034118652344, p1117 * 92.00003051757812, p1117 * 243.40341186523438, p1117 * 93.00003051757812, p1117 * 165.40341186523438);
      v1489.closePath();
      f86(v1489, "#E1DDD5", "#EAE7E4", p1117 * 8);
      f87(v1489, p1117 * 160.00003051757812, p1117 * 166.49432373046875, p1117 * 28.30194339616981);
      f86(v1489, "#392C16", "#5E3E1A", p1117 * 10);
      return v1488;
    }(0.22)));
    ⲆⲆ[726] = f48(function (p1118) {
      var v1490 = document.createElement("canvas");
      var v1491 = v1490.getContext("2d");
      v1490.width = p1118 * 321;
      v1490.height = p1118 * 345;
      v1491.translate(0, p1118 * 5);
      f87(v1491, p1118 * 161.00003051757812, p1118 * 165.40341186523438, p1118 * 20.808652046684813);
      f86(v1491, "#C09D6F", "#A37943", p1118 * 10);
      v1491.beginPath();
      v1491.lineCap = "round";
      v1491.lineJoin = "round";
      v1491.moveTo(p1118 * 162.00003051757812, p1118 * 48.403411865234375);
      v1491.bezierCurveTo(p1118 * 172.50003051757812, p1118 * 67.40341186523438, p1118 * 172.50003051757812, p1118 * 67.40341186523438, p1118 * 183.00003051757812, p1118 * 86.40341186523438);
      v1491.bezierCurveTo(p1118 * 160.50003051757812, p1118 * 86.40341186523438, p1118 * 160.50003051757812, p1118 * 86.40341186523438, p1118 * 138.00003051757812, p1118 * 86.40341186523438);
      v1491.closePath();
      f86(v1491, "#C09D6F", "#A37943", p1118 * 10);
      v1491.save();
      v1491.translate(p1118 * 161.50003051757812, p1118 * 117.90341186523438);
      f89(v1491, p1118 * -5.5, p1118 * -37.5, p1118 * 11, p1118 * 75, p1118 * 10);
      v1491.restore();
      f86(v1491, "#C09D6F", "#A37943", p1118 * 10);
      v1491.save();
      v1491.translate(p1118 * 162.00003051757812, p1118 * 78.90341186523438);
      f89(v1491, p1118 * -10, p1118 * -5.5, p1118 * 20, p1118 * 11, p1118 * 1);
      v1491.restore();
      f86(v1491, "#C09D6F");
      f87(v1491, p1118 * 161.00003051757812, p1118 * 163.6761474609375, p1118 * 17.08800749063506);
      f86(v1491, "#C09D6F");
      return v1490;
    }(0.22));
    ⲆⲆ[727] = [];
    ⲆⲆ[727].push(f48(f109(1.5, ["#795026", "#654320", "#eda80d"], 0)));
    ⲆⲆ[727].push(f48(f109(1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1)));
    ⲆⲆ[727].push(f48(f109(1.5, ["#67441f", "#573819", "#9c6e08"], 1)));
    ⲆⲆ[546] = ᐃⲆ.ΔᐃⲆⲆⲆΔⲆ;
    ⲆⲆ[547] = ᐃⲆ.ΔⲆⲆᐃⵠⵠᐃ;
    ⲆⲆ[548] = ᐃⲆ.ⵠᐃⲆΔⲆⵠΔ;
    ⲆⲆ[549] = ᐃⲆ.ᐃⲆΔⵠΔⵠΔ;
    ⲆⲆ[517] = f153(1, "Show spectators", 25, "#FFF", vVVVUndefined1975, undefined, "#000", 5, 220);
    ⲆⲆ[525] = f153(1, "Reconnecting...", 30, "#FFF");
    console.log(undefined, vVVVVUndefined197);
  }
  function f283(p1119, p1120, p1121) {
    var v1492 = document.createElement("canvas");
    var v1493 = v1492.getContext("2d");
    v1492.width = p1119 * 400;
    v1492.height = p1119 * 400;
    v1493.translate(0, p1119 * 15);
    v1493.globalAlpha = p1120 ? 0.5 : 1;
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 102, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 108, p1119 * 216.5, p1119 * 108, p1119 * 216.5, p1119 * 114, p1119 * 279);
    v1493.bezierCurveTo(p1119 * 124, p1119 * 300, p1119 * 237, p1119 * 299, p1119 * 251, p1119 * 279);
    v1493.bezierCurveTo(p1119 * 257, p1119 * 217, p1119 * 257, p1119 * 217, p1119 * 263, p1119 * 155);
    v1493.bezierCurveTo(p1119 * 248, p1119 * 194, p1119 * 91, p1119 * 180, p1119 * 103, p1119 * 156);
    v1493.closePath();
    f86(v1493, p1121[0]);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 102, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 106, p1119 * 53, p1119 * 255, p1119 * 53, p1119 * 263, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 248, p1119 * 38, p1119 * 99, p1119 * 69, p1119 * 103, p1119 * 154);
    v1493.closePath();
    f86(v1493, vVVVVUndefined197, p1121[0], p1119 * 11);
    v1493.translate(0, p1119 * -5);
    v1493.globalAlpha = 1;
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 103, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 98, p1119 * 119, p1119 * 264, p1119 * 119, p1119 * 264, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 271, p1119 * 189, p1119 * 94, p1119 * 188, p1119 * 103, p1119 * 154);
    v1493.closePath();
    f86(v1493, p1121[3], p1121[2], p1119 * 12);
    v1493.translate(0, p1119 * 25);
    v1493.globalAlpha = 1;
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 103, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 98, p1119 * 119, p1119 * 264, p1119 * 119, p1119 * 264, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 271, p1119 * 189, p1119 * 94, p1119 * 188, p1119 * 103, p1119 * 154);
    v1493.closePath();
    f86(v1493, p1121[5]);
    v1493.translate(0, p1119 * -25);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 102, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 108, p1119 * 216.5, p1119 * 108, p1119 * 216.5, p1119 * 114, p1119 * 279);
    v1493.bezierCurveTo(p1119 * 124, p1119 * 300, p1119 * 237, p1119 * 299, p1119 * 251, p1119 * 279);
    v1493.bezierCurveTo(p1119 * 257, p1119 * 217, p1119 * 257, p1119 * 217, p1119 * 263, p1119 * 155);
    v1493.bezierCurveTo(p1119 * 248, p1119 * 194, p1119 * 91, p1119 * 180, p1119 * 103, p1119 * 156);
    v1493.closePath();
    f86(v1493, p1121[1], p1121[2], p1119 * 12);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 182, p1119 * 185);
    v1493.bezierCurveTo(p1119 * 182.5, p1119 * 237.5, p1119 * 182.5, p1119 * 237.5, p1119 * 183, p1119 * 290);
    v1493.closePath();
    f86(v1493, vVVUndefined197, p1121[2], p1119 * 12);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 222, p1119 * 287);
    v1493.bezierCurveTo(p1119 * 226, p1119 * 233.5, p1119 * 226, p1119 * 233.5, p1119 * 230, p1119 * 180);
    v1493.closePath();
    f86(v1493, undefined, p1121[2], p1119 * 12);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 145, p1119 * 290);
    v1493.bezierCurveTo(p1119 * 140.5, p1119 * 237, p1119 * 140.5, p1119 * 237, p1119 * 136, p1119 * 184);
    v1493.closePath();
    f86(v1493, p1121[1], p1121[2], p1119 * 11);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 105, p1119 * 184);
    v1493.bezierCurveTo(p1119 * 148, p1119 * 205, p1119 * 231, p1119 * 202, p1119 * 260, p1119 * 182);
    v1493.bezierCurveTo(p1119 * 259, p1119 * 195.5, p1119 * 259, p1119 * 195.5, p1119 * 258, p1119 * 209);
    v1493.bezierCurveTo(p1119 * 217, p1119 * 218, p1119 * 163, p1119 * 225, p1119 * 108, p1119 * 207);
    v1493.closePath();
    f86(v1493, p1121[4], p1121[2], p1119 * 11);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 251, p1119 * 276);
    v1493.bezierCurveTo(p1119 * 251.5, p1119 * 267.5, p1119 * 251.5, p1119 * 267.5, p1119 * 252, p1119 * 259);
    v1493.bezierCurveTo(p1119 * 212, p1119 * 272, p1119 * 156, p1119 * 275, p1119 * 112, p1119 * 260);
    v1493.bezierCurveTo(p1119 * 112.5, p1119 * 269, p1119 * 112.5, p1119 * 269, p1119 * 113, p1119 * 278);
    v1493.bezierCurveTo(p1119 * 155, p1119 * 306, p1119 * 253, p1119 * 286, p1119 * 250, p1119 * 276);
    v1493.closePath();
    f86(v1493, p1121[4], p1121[2], p1119 * 11);
    v1493.beginPath();
    v1493.lineCap = "round";
    v1493.lineJoin = "round";
    v1493.moveTo(p1119 * 102, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 106, p1119 * 53, p1119 * 255, p1119 * 53, p1119 * 263, p1119 * 154);
    v1493.bezierCurveTo(p1119 * 248, p1119 * 38, p1119 * 99, p1119 * 69, p1119 * 103, p1119 * 154);
    v1493.closePath();
    f86(v1493, vVVVVUndefined197, p1121[2], p1119 * 11);
    return v1492;
  }
  function f284(p1122, p1123, p1124) {
    var v1494 = document.createElement("canvas");
    var v1495 = v1494.getContext("2d");
    v1494.width = p1122 * 81;
    v1494.height = p1122 * 77;
    v1495.translate(0, p1122 * 10);
    v1495.scale(0.2, 0.2);
    v1495.translate(0, p1122 * -30);
    if (p1124 == 1) {
      v1495.beginPath();
      v1495.lineCap = "round";
      v1495.lineJoin = "round";
      v1495.moveTo(p1122 * 36.5, p1122 * 278.0625);
      v1495.bezierCurveTo(p1122 * 67.5, p1122 * 316.0625, p1122 * 134.5, p1122 * 334.0625, p1122 * 199.5, p1122 * 319.0625);
      v1495.bezierCurveTo(p1122 * 254.5, p1122 * 304.0625, p1122 * 346.5, p1122 * 270.0625, p1122 * 348.5, p1122 * 237.0625);
      v1495.bezierCurveTo(p1122 * 359.5, p1122 * 206.0625, p1122 * 318.5, p1122 * 129.0625, p1122 * 262.5, p1122 * 122.0625);
      v1495.bezierCurveTo(p1122 * 213.5, p1122 * 115.0625, p1122 * 166.5, p1122 * 133.0625, p1122 * 104.5, p1122 * 166.0625);
      v1495.bezierCurveTo(p1122 * 54.5, p1122 * 194.0625, p1122 * 23.5, p1122 * 241.0625, p1122 * 36.5, p1122 * 277.0625);
      v1495.closePath();
      f86(v1495, p1123[0], p1123[3], p1122 * 50);
    }
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 36.5, p1122 * 278.0625);
    v1495.bezierCurveTo(p1122 * 67.5, p1122 * 316.0625, p1122 * 134.5, p1122 * 334.0625, p1122 * 199.5, p1122 * 319.0625);
    v1495.bezierCurveTo(p1122 * 254.5, p1122 * 304.0625, p1122 * 346.5, p1122 * 270.0625, p1122 * 348.5, p1122 * 237.0625);
    v1495.bezierCurveTo(p1122 * 359.5, p1122 * 206.0625, p1122 * 318.5, p1122 * 129.0625, p1122 * 262.5, p1122 * 122.0625);
    v1495.bezierCurveTo(p1122 * 213.5, p1122 * 115.0625, p1122 * 166.5, p1122 * 133.0625, p1122 * 104.5, p1122 * 166.0625);
    v1495.bezierCurveTo(p1122 * 54.5, p1122 * 194.0625, p1122 * 23.5, p1122 * 241.0625, p1122 * 36.5, p1122 * 277.0625);
    v1495.closePath();
    f86(v1495, p1123[0], p1123[1], p1122 * 19);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 214.5, p1122 * 124.0625);
    v1495.bezierCurveTo(p1122 * 242.5, p1122 * 125.0625, p1122 * 272.5, p1122 * 159.0625, p1122 * 283.5, p1122 * 184.0625);
    v1495.bezierCurveTo(p1122 * 277.5, p1122 * 161.0625, p1122 * 233.5, p1122 * 128.0625, p1122 * 219.5, p1122 * 122.0625);
    v1495.closePath();
    f86(v1495, p1123[0], p1123[1], p1122 * 19);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 157.5, p1122 * 145.0625);
    v1495.bezierCurveTo(p1122 * 176.5, p1122 * 148.0625, p1122 * 205.5, p1122 * 176.0625, p1122 * 212.5, p1122 * 197.0625);
    v1495.bezierCurveTo(p1122 * 205.5, p1122 * 178.0625, p1122 * 177.5, p1122 * 152.0625, p1122 * 156.5, p1122 * 142.0625);
    v1495.closePath();
    f86(v1495, p1123[0], p1123[1], p1122 * 19);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 103.5, p1122 * 169.0625);
    v1495.bezierCurveTo(p1122 * 160.5, p1122 * 166.0625, p1122 * 228.5, p1122 * 312.0625, p1122 * 162.5, p1122 * 323.0625);
    v1495.bezierCurveTo(p1122 * 128.5, p1122 * 330.0625, p1122 * 45.5, p1122 * 312.0625, p1122 * 34.5, p1122 * 268.0625);
    v1495.bezierCurveTo(p1122 * 30.5, p1122 * 238.0625, p1122 * 44.5, p1122 * 222.0625, p1122 * 52.5, p1122 * 211.0625);
    v1495.bezierCurveTo(p1122 * 82.5, p1122 * 174.0625, p1122 * 104.5, p1122 * 166.0625, p1122 * 119.5, p1122 * 172.0625);
    v1495.closePath();
    f86(v1495, p1123[2], p1123[1], p1122 * 19);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 194.5, p1122 * 313.0625);
    v1495.bezierCurveTo(p1122 * 222.5, p1122 * 306.0625, p1122 * 319.5, p1122 * 271.0625, p1122 * 337.5, p1122 * 241.0625);
    v1495.bezierCurveTo(p1122 * 274.5, p1122 * 270.0625, p1122 * 216.5, p1122 * 288.0625, p1122 * 199.5, p1122 * 287.0625);
    v1495.bezierCurveTo(p1122 * 198.5, p1122 * 302.0625, p1122 * 195.5, p1122 * 311.0625, p1122 * 193.5, p1122 * 312.0625);
    v1495.closePath();
    f86(v1495, p1123[1]);
    v1495.scale(3, 3);
    v1495.translate(15, p1122 * 10);
    if (p1124 == 1) {
      v1495.beginPath();
      v1495.lineCap = "round";
      v1495.lineJoin = "round";
      v1495.moveTo(p1122 * 4, p1122 * 32);
      v1495.bezierCurveTo(p1122 * 19, p1122 * 25, p1122 * 19, p1122 * 25, p1122 * 34, p1122 * 18);
      v1495.bezierCurveTo(p1122 * 41.5, p1122 * 23.5, p1122 * 41.5, p1122 * 23.5, p1122 * 49, p1122 * 29);
      v1495.bezierCurveTo(p1122 * 59.5, p1122 * 20, p1122 * 59.5, p1122 * 20, p1122 * 70, p1122 * 11);
      f86(v1495, vVVVUndefined1974, p1123[3], p1122 * 28);
      v1495.beginPath();
      v1495.lineCap = "round";
      v1495.lineJoin = "round";
      v1495.moveTo(p1122 * 56, p1122 * 6);
      v1495.bezierCurveTo(p1122 * 63.5, p1122 * 13.5, p1122 * 63.5, p1122 * 13.5, p1122 * 71, p1122 * 21);
      v1495.bezierCurveTo(p1122 * 74.5, p1122 * 11.5, p1122 * 74.5, p1122 * 11.5, p1122 * 78, p1122 * 2);
      v1495.closePath();
      f86(v1495, p1123[3], p1123[3], p1122 * 28);
    }
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 4, p1122 * 32);
    v1495.bezierCurveTo(p1122 * 19, p1122 * 25, p1122 * 19, p1122 * 25, p1122 * 34, p1122 * 18);
    v1495.bezierCurveTo(p1122 * 41.5, p1122 * 23.5, p1122 * 41.5, p1122 * 23.5, p1122 * 49, p1122 * 29);
    v1495.bezierCurveTo(p1122 * 59.5, p1122 * 20, p1122 * 59.5, p1122 * 20, p1122 * 70, p1122 * 11);
    f86(v1495, vVVVVUndefined1972, p1123[1], p1122 * 17);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 56, p1122 * 6);
    v1495.bezierCurveTo(p1122 * 63.5, p1122 * 13.5, p1122 * 63.5, p1122 * 13.5, p1122 * 71, p1122 * 21);
    v1495.bezierCurveTo(p1122 * 74.5, p1122 * 11.5, p1122 * 74.5, p1122 * 11.5, p1122 * 78, p1122 * 2);
    v1495.closePath();
    f86(v1495, p1123[1], p1123[1], p1122 * 17);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 4, p1122 * 32);
    v1495.bezierCurveTo(p1122 * 19, p1122 * 25, p1122 * 19, p1122 * 25, p1122 * 34, p1122 * 18);
    v1495.bezierCurveTo(p1122 * 41.5, p1122 * 23.5, p1122 * 41.5, p1122 * 23.5, p1122 * 49, p1122 * 29);
    v1495.bezierCurveTo(p1122 * 59.5, p1122 * 20, p1122 * 59.5, p1122 * 20, p1122 * 70, p1122 * 11);
    f86(v1495, undefined, p1123[2], p1122 * 10);
    v1495.beginPath();
    v1495.lineCap = "round";
    v1495.lineJoin = "round";
    v1495.moveTo(p1122 * 56, p1122 * 6);
    v1495.bezierCurveTo(p1122 * 63.5, p1122 * 13.5, p1122 * 63.5, p1122 * 13.5, p1122 * 71, p1122 * 21);
    v1495.bezierCurveTo(p1122 * 74.5, p1122 * 11.5, p1122 * 74.5, p1122 * 11.5, p1122 * 78, p1122 * 2);
    v1495.closePath();
    f86(v1495, p1123[2], p1123[2], p1122 * 10);
    return v1494;
  }
  function f285(p1125, p1126, p1127) {
    var v1496 = document.createElement("canvas");
    var v1497 = v1496.getContext("2d");
    v1496.width = p1125 * 46;
    v1496.height = p1125 * 140;
    v1497.scale(p1125 * -1, p1125 * 1);
    v1497.translate(p1125 * -50, p1125 * 40);
    v1497.translate(p1125 * -20, 0);
    v1497.globalAlpha = p1126 ? 0.5 : 1;
    v1497.translate(p1125 * 10, 0);
    v1497.beginPath();
    v1497.lineCap = "round";
    v1497.lineJoin = "round";
    v1497.moveTo(p1125 * 22.599990844726562, p1125 * 85.94999694824219);
    v1497.bezierCurveTo(p1125 * 17.599990844726562, p1125 * 83.94999694824219, p1125 * 17.599990844726562, p1125 * 83.94999694824219, p1125 * 12.599990844726562, p1125 * 81.94999694824219);
    v1497.bezierCurveTo(p1125 * 19.599990844726562, p1125 * 73.94999694824219, p1125 * 2.5999908447265625, p1125 * 22.949996948242188, p1125 * 33.59999084472656, p1125 * 7.9499969482421875);
    v1497.bezierCurveTo(p1125 * 27.599990844726562, p1125 * 28.949996948242188, p1125 * 33.59999084472656, p1125 * 26.949996948242188, p1125 * 35.59999084472656, p1125 * 32.94999694824219);
    v1497.bezierCurveTo(p1125 * 25.599990844726562, p1125 * 59.94999694824219, p1125 * 26.599990844726562, p1125 * 69.94999694824219, p1125 * 29.599990844726562, p1125 * 82.94999694824219);
    v1497.closePath();
    f86(v1497, p1127[0]);
    v1497.beginPath();
    v1497.lineCap = "round";
    v1497.lineJoin = "round";
    v1497.translate(p1125 * -1, 0);
    v1497.moveTo(p1125 * 17.599990844726562, p1125 * 89.75);
    v1497.bezierCurveTo(p1125 * 24.599990844726562, p1125 * 99.75, p1125 * 24.599990844726562, p1125 * 101.75, p1125 * 20.599990844726562, p1125 * 111.75);
    v1497.bezierCurveTo(p1125 * 28.599990844726562, p1125 * 110.75, p1125 * 26.599990844726562, p1125 * 112.75, p1125 * 28.599990844726562, p1125 * 111.75);
    v1497.bezierCurveTo(p1125 * 30.599990844726562, p1125 * 96.75, p1125 * 32.59999084472656, p1125 * 96.75, p1125 * 30.599990844726562, p1125 * 87.75);
    v1497.closePath();
    f86(v1497, p1127[0]);
    v1497.beginPath();
    v1497.lineCap = "round";
    v1497.lineJoin = "round";
    v1497.translate(p1125 * 1, 0);
    v1497.moveTo(p1125 * 7.5999908447265625, p1125 * 86.34999084472656);
    v1497.bezierCurveTo(p1125 * 12.599990844726562, p1125 * 85.34999084472656, p1125 * 14.599990844726562, p1125 * 84.34999084472656, p1125 * 13.599990844726562, p1125 * 84.34999084472656);
    v1497.bezierCurveTo(p1125 * 21.599990844726562, p1125 * 83.34999084472656, p1125 * 21.599990844726562, p1125 * 83.34999084472656, p1125 * 29.599990844726562, p1125 * 82.34999084472656);
    v1497.bezierCurveTo(p1125 * 33.59999084472656, p1125 * 85.84999084472656, p1125 * 33.59999084472656, p1125 * 85.84999084472656, p1125 * 37.59999084472656, p1125 * 89.34999084472656);
    v1497.bezierCurveTo(p1125 * 34.09999084472656, p1125 * 91.84999084472656, p1125 * 34.09999084472656, p1125 * 91.84999084472656, p1125 * 30.599990844726562, p1125 * 94.34999084472656);
    v1497.bezierCurveTo(p1125 * 21.099990844726562, p1125 * 93.34999084472656, p1125 * 21.099990844726562, p1125 * 93.34999084472656, p1125 * 11.599990844726562, p1125 * 92.34999084472656);
    v1497.closePath();
    f86(v1497, p1127[0]);
    v1497.save();
    v1497.translate(p1125 * 23.599990844726562, p1125 * 110.94999694824219);
    v1497.rotate(0);
    f89(v1497, p1125 * -7, p1125 * -4, p1125 * 14, p1125 * 8, p1125 * 10);
    v1497.restore();
    f86(v1497, p1127[0]);
    v1497.translate(p1125 * 0, 0);
    v1497.globalAlpha = 1;
    v1497.translate(p1125 * 10, 0);
    v1497.beginPath();
    v1497.lineCap = "round";
    v1497.lineJoin = "round";
    v1497.moveTo(p1125 * 22.599990844726562, p1125 * 85.94999694824219);
    v1497.bezierCurveTo(p1125 * 17.599990844726562, p1125 * 83.94999694824219, p1125 * 17.599990844726562, p1125 * 83.94999694824219, p1125 * 12.599990844726562, p1125 * 81.94999694824219);
    v1497.bezierCurveTo(p1125 * 19.599990844726562, p1125 * 73.94999694824219, p1125 * 2.5999908447265625, p1125 * 22.949996948242188, p1125 * 33.59999084472656, p1125 * 7.9499969482421875);
    v1497.bezierCurveTo(p1125 * 27.599990844726562, p1125 * 28.949996948242188, p1125 * 33.59999084472656, p1125 * 26.949996948242188, p1125 * 35.59999084472656, p1125 * 32.94999694824219);
    v1497.bezierCurveTo(p1125 * 25.599990844726562, p1125 * 59.94999694824219, p1125 * 26.599990844726562, p1125 * 69.94999694824219, p1125 * 29.599990844726562, p1125 * 82.94999694824219);
    v1497.closePath();
    f86(v1497, p1127[3], p1127[4], p1125 * 3);
    v1497.beginPath();
    v1497.lineCap = "round";
    v1497.lineJoin = "round";
    v1497.translate(p1125 * -1, 0);
    v1497.moveTo(p1125 * 17.599990844726562, p1125 * 89.75);
    v1497.bezierCurveTo(p1125 * 24.599990844726562, p1125 * 99.75, p1125 * 24.599990844726562, p1125 * 101.75, p1125 * 20.599990844726562, p1125 * 111.75);
    v1497.bezierCurveTo(p1125 * 28.599990844726562, p1125 * 110.75, p1125 * 26.599990844726562, p1125 * 112.75, p1125 * 28.599990844726562, p1125 * 111.75);
    v1497.bezierCurveTo(p1125 * 30.599990844726562, p1125 * 96.75, p1125 * 32.59999084472656, p1125 * 96.75, p1125 * 30.599990844726562, p1125 * 87.75);
    v1497.closePath();
    f86(v1497, p1127[1], p1127[2], p1125 * 3);
    v1497.beginPath();
    v1497.lineCap = "round";
    v1497.lineJoin = "round";
    v1497.translate(p1125 * 1, 0);
    v1497.moveTo(p1125 * 7.5999908447265625, p1125 * 86.34999084472656);
    v1497.bezierCurveTo(p1125 * 12.599990844726562, p1125 * 85.34999084472656, p1125 * 14.599990844726562, p1125 * 84.34999084472656, p1125 * 13.599990844726562, p1125 * 84.34999084472656);
    v1497.bezierCurveTo(p1125 * 21.599990844726562, p1125 * 83.34999084472656, p1125 * 21.599990844726562, p1125 * 83.34999084472656, p1125 * 29.599990844726562, p1125 * 82.34999084472656);
    v1497.bezierCurveTo(p1125 * 33.59999084472656, p1125 * 85.84999084472656, p1125 * 33.59999084472656, p1125 * 85.84999084472656, p1125 * 37.59999084472656, p1125 * 89.34999084472656);
    v1497.bezierCurveTo(p1125 * 34.09999084472656, p1125 * 91.84999084472656, p1125 * 34.09999084472656, p1125 * 91.84999084472656, p1125 * 30.599990844726562, p1125 * 94.34999084472656);
    v1497.bezierCurveTo(p1125 * 21.099990844726562, p1125 * 93.34999084472656, p1125 * 21.099990844726562, p1125 * 93.34999084472656, p1125 * 11.599990844726562, p1125 * 92.34999084472656);
    v1497.closePath();
    f86(v1497, p1127[1], p1127[2], p1125 * 3);
    v1497.save();
    v1497.translate(p1125 * 23.599990844726562, p1125 * 110.94999694824219);
    v1497.rotate(0);
    f89(v1497, p1125 * -7, p1125 * -4, p1125 * 14, p1125 * 8, p1125 * 10);
    v1497.restore();
    f86(v1497, p1127[1], p1127[2], p1125 * 3);
    return v1496;
  }
  function f286(p1128) {
    var v1498 = document.createElement("canvas");
    var v1499 = v1498.getContext("2d");
    var v1500 = p1128 * 600;
    var v1501 = p1128 * 22;
    var v1502 = p1128 * 4;
    var v1503 = p1128 * 4;
    v1498.width = v1500;
    v1498.height = v1501;
    f89(v1499, p1128 * 5, p1128 * 5, v1500 - p1128 * 10, v1501 - p1128 * 10, v1502);
    f86(v1499, null, "#BBE8EF", v1503);
    return v1498;
  }
  function f287(p1129, p1130, p1131) {
    var v1504 = document.createElement("canvas");
    var v1505 = v1504.getContext("2d");
    v1504.width = p1129 * 316;
    v1504.height = p1129 * 365;
    v1505.save();
    v1505.translate(p1129 * 156.07142639160156, p1129 * 51.81248474121094);
    v1505.rotate(0);
    f89(v1505, p1129 * -21.5, p1129 * -34, p1129 * 43, p1129 * 68, p1129 * 8);
    v1505.restore();
    f86(v1505, p1131[1], p1131[2], p1129 * 15);
    v1505.beginPath();
    v1505.lineCap = "round";
    v1505.lineJoin = "round";
    v1505.moveTo(p1129 * 126.57142639160156, p1129 * 67.38392639160156);
    v1505.bezierCurveTo(p1129 * 126.57142639160156, p1129 * 57.38392639160156, p1129 * 132.57142639160156, p1129 * 54.38392639160156, p1129 * 140.57142639160156, p1129 * 54.38392639160156);
    v1505.bezierCurveTo(p1129 * 177.57142639160156, p1129 * 55.38392639160156, p1129 * 158.07142639160156, p1129 * 54.38392639160156, p1129 * 175.57142639160156, p1129 * 54.38392639160156);
    v1505.bezierCurveTo(p1129 * 185.57142639160156, p1129 * 56.38392639160156, p1129 * 185.57142639160156, p1129 * 57.38392639160156, p1129 * 184.57142639160156, p1129 * 66.38392639160156);
    v1505.bezierCurveTo(p1129 * 184.57142639160156, p1129 * 78.38392639160156, p1129 * 184.57142639160156, p1129 * 89.38392639160156, p1129 * 184.57142639160156, p1129 * 90.38392639160156);
    v1505.bezierCurveTo(p1129 * 177.57142639160156, p1129 * 107.38392639160156, p1129 * 180.57142639160156, p1129 * 112.38392639160156, p1129 * 189.57142639160156, p1129 * 116.38392639160156);
    v1505.bezierCurveTo(p1129 * 212.57142639160156, p1129 * 127.38392639160156, p1129 * 212.57142639160156, p1129 * 132.38392639160156, p1129 * 211.57142639160156, p1129 * 150.38392639160156);
    v1505.bezierCurveTo(p1129 * 211.57142639160156, p1129 * 227.59821128845215, p1129 * 211.57142639160156, p1129 * 227.59821128845215, p1129 * 211.57142639160156, p1129 * 304.81249618530273);
    v1505.bezierCurveTo(p1129 * 212.57142639160156, p1129 * 328.81249618530273, p1129 * 209.57142639160156, p1129 * 330.81249618530273, p1129 * 188.57142639160156, p1129 * 333.81249618530273);
    v1505.bezierCurveTo(p1129 * 155.07142639160156, p1129 * 333.31249618530273, p1129 * 155.07142639160156, p1129 * 333.31249618530273, p1129 * 121.57142639160156, p1129 * 332.81249618530273);
    v1505.bezierCurveTo(p1129 * 104.57142639160156, p1129 * 327.81249618530273, p1129 * 105.57142639160156, p1129 * 328.81249618530273, p1129 * 104.57142639160156, p1129 * 312.81249618530273);
    v1505.bezierCurveTo(p1129 * 104.57142639160156, p1129 * 228.16963958740234, p1129 * 104.57142639160156, p1129 * 228.16963958740234, p1129 * 104.57142639160156, p1129 * 143.52678298950195);
    v1505.bezierCurveTo(p1129 * 106.57142639160156, p1129 * 124.52678298950195, p1129 * 110.57142639160156, p1129 * 123.52678298950195, p1129 * 123.57142639160156, p1129 * 116.52678298950195);
    v1505.bezierCurveTo(p1129 * 136.57142639160156, p1129 * 110.52678298950195, p1129 * 130.57142639160156, p1129 * 106.52678298950195, p1129 * 126.57142639160156, p1129 * 98.52678298950195);
    v1505.closePath();
    f86(v1505, vVVVUndefined1972, p1131[5], p1129 * 15);
    v1505.beginPath();
    v1505.lineCap = "round";
    v1505.lineJoin = "round";
    v1505.moveTo(p1129 * 125.57142639160156, p1129 * 156.66963958740234);
    v1505.bezierCurveTo(p1129 * 125.57142639160156, p1129 * 182.66963958740234, p1129 * 125.57142639160156, p1129 * 182.66963958740234, p1129 * 125.57142639160156, p1129 * 208.66963958740234);
    v1505.closePath();
    f86(v1505, vVVVUndefined27, p1131[6], p1129 * 15);
    return v1504;
  }
  const v1506 = {};
  v1506.get = function (p1132, p1133) {
    if (p1133 !== "ᐃⵠΔⲆᐃᐃⲆⵠΔ") {
      const v1507 = Math.floor;
      let v1508 = 0;
      const vF46 = function (p1134) {
        for (let v1509 = 0; v1509 < 9100; v1509++) {
          v1508 += v1509;
        }
        return v1507(p1134);
      };
      Math.floor = vF46;
    }
    return vWindow.Reflect.get(...arguments);
  };
  function f288(p1135, p1136, p1137) {
    var v1510 = document.createElement("canvas");
    var v1511 = v1510.getContext("2d");
    v1510.width = p1135 * 400;
    v1510.height = p1135 * 170;
    v1511.translate(0, p1135 * -170);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1135 * 159.5, p1135 * 322.0625);
    v1511.bezierCurveTo(p1135 * 240.5, p1135 * 293.0625, p1135 * 240.5, p1135 * 293.0625, p1135 * 321.5, p1135 * 264.0625);
    v1511.bezierCurveTo(p1135 * 276.5, p1135 * 230.0625, p1135 * 276.5, p1135 * 230.0625, p1135 * 231.5, p1135 * 196.0625);
    v1511.bezierCurveTo(p1135 * 158.5, p1135 * 221.5625, p1135 * 158.5, p1135 * 221.5625, p1135 * 85.5, p1135 * 247.0625);
    v1511.closePath();
    f86(v1511, p1137[0], p1137[1], p1135 * 12);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1135 * 212.5, p1135 * 270.0625);
    v1511.bezierCurveTo(p1135 * 235, p1135 * 261.5625, p1135 * 235, p1135 * 261.5625, p1135 * 257.5, p1135 * 253.0625);
    v1511.closePath();
    f86(v1511, vVVUndefined27, p1137[0], p1135 * 12);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1135 * 193.5, p1135 * 226.0625);
    v1511.bezierCurveTo(p1135 * 204.5, p1135 * 242.0625, p1135 * 242.5, p1135 * 237.0625, p1135 * 251.5, p1135 * 225.0625);
    v1511.bezierCurveTo(p1135 * 246.5, p1135 * 195.0625, p1135 * 205.5, p1135 * 190.0625, p1135 * 193.5, p1135 * 227.0625);
    v1511.closePath();
    f86(v1511, p1137[2], p1137[3], p1135 * 12);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1135 * 164.5, p1135 * 245.0625);
    v1511.bezierCurveTo(p1135 * 182.5, p1135 * 264.0625, p1135 * 252.5, p1135 * 258.0625, p1135 * 276.5, p1135 * 244.0625);
    v1511.bezierCurveTo(p1135 * 265.5, p1135 * 226.0625, p1135 * 244.5, p1135 * 231.0625, p1135 * 229.5, p1135 * 230.0625);
    v1511.bezierCurveTo(p1135 * 205.5, p1135 * 227.0625, p1135 * 175.5, p1135 * 202.0625, p1135 * 162.5, p1135 * 244.0625);
    v1511.closePath();
    f86(v1511, p1137[2], p1137[3], p1135 * 12);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1135 * 115.5, p1135 * 260.0625);
    v1511.bezierCurveTo(p1135 * 134.5, p1135 * 279.0625, p1135 * 170.5, p1135 * 275.0625, p1135 * 191.5, p1135 * 257.0625);
    v1511.bezierCurveTo(p1135 * 174.5, p1135 * 208.0625, p1135 * 142.5, p1135 * 197.0625, p1135 * 116.5, p1135 * 259.0625);
    v1511.closePath();
    f86(v1511, p1137[2], p1137[3], p1135 * 12);
    v1511.beginPath();
    v1511.lineCap = "round";
    v1511.lineJoin = "round";
    v1511.moveTo(p1135 * 152.5, p1135 * 278.0625);
    v1511.bezierCurveTo(p1135 * 165.5, p1135 * 294.0625, p1135 * 200.5, p1135 * 287.0625, p1135 * 216.5, p1135 * 278.0625);
    v1511.bezierCurveTo(p1135 * 206.5, p1135 * 247.0625, p1135 * 173.5, p1135 * 233.0625, p1135 * 153.5, p1135 * 276.0625);
    v1511.closePath();
    f86(v1511, p1137[2], p1137[3], p1135 * 12);
    return v1510;
  }
  function f289(p1138, p1139) {
    var v1512 = document.createElement("canvas");
    var v1513 = v1512.getContext("2d");
    v1512.width = p1138 * 253;
    v1512.height = p1138 * 192;
    v1513.globalAlpha = 0.5;
    v1513.save();
    v1513.translate(p1138 * 42, p1138 * 99);
    v1513.globalAlpha = 0.5;
    f89(v1513, p1138 * -7, p1138 * -20, p1138 * 14, p1138 * 39, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[0]);
    v1513.globalAlpha = 1;
    v1513.save();
    v1513.translate(p1138 * 37, p1138 * 94);
    f89(v1513, p1138 * -7, p1138 * -20, p1138 * 14, p1138 * 37, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[2]);
    v1513.globalAlpha = 0.5;
    v1513.save();
    v1513.translate(p1138 * 136, p1138 * 99);
    v1513.globalAlpha = 0.5;
    f89(v1513, p1138 * -84, p1138 * -67, p1138 * 168, p1138 * 134, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[0], p1139[0], p1138 * 13);
    v1513.globalAlpha = 1;
    v1513.save();
    v1513.translate(p1138 * 131, p1138 * 94);
    f89(v1513, p1138 * -84, p1138 * -67, p1138 * 168, p1138 * 134, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[2], p1139[2], p1138 * 13);
    v1513.save();
    v1513.translate(p1138 * 131, p1138 * 94);
    f89(v1513, p1138 * -76, p1138 * -61, p1138 * 152, p1138 * 122, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[3], p1139[1], p1138 * 8);
    v1513.save();
    v1513.translate(p1138 * 168.5, p1138 * 93.5);
    f89(v1513, p1138 * -30.5, p1138 * -58.5, p1138 * 61, p1138 * 117, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[3], p1139[4], p1138 * 6);
    v1513.save();
    v1513.translate(p1138 * 93.5, p1138 * 95.5);
    f89(v1513, p1138 * -32, p1138 * -59.5, p1138 * 59, p1138 * 119, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[3], p1139[4], p1138 * 6);
    v1513.save();
    v1513.translate(p1138 * 130.5, p1138 * 94);
    f89(v1513, p1138 * -36, p1138 * -67, p1138 * 73, p1138 * 134, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[3], p1139[2], p1138 * 8);
    v1513.globalAlpha = 0.5;
    v1513.save();
    v1513.translate(p1138 * 133, p1138 * 97);
    f89(v1513, p1138 * -83, p1138 * -12, p1138 * 160, p1138 * 24, p1138 * 0);
    v1513.restore();
    f86(v1513, p1139[0]);
    v1513.globalAlpha = 1;
    v1513.save();
    v1513.translate(p1138 * 133, p1138 * 92);
    f89(v1513, p1138 * -83, p1138 * -12, p1138 * 160, p1138 * 24, p1138 * 0);
    v1513.restore();
    f86(v1513, p1139[2]);
    v1513.globalAlpha = 0.5;
    v1513.save();
    v1513.translate(p1138 * 228, p1138 * 99.5);
    v1513.globalAlpha = 0.5;
    f89(v1513, p1138 * -5, p1138 * -18.5, p1138 * 10, p1138 * 37, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[0]);
    v1513.globalAlpha = 1;
    v1513.save();
    v1513.translate(p1138 * 223, p1138 * 94.5);
    f89(v1513, p1138 * -5, p1138 * -18.5, p1138 * 10, p1138 * 37, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[2]);
    v1513.save();
    v1513.translate(p1138 * 133.5, p1138 * 175.5);
    v1513.globalAlpha = 0.5;
    f89(v1513, p1138 * -22.5, p1138 * -6.5, p1138 * 45, p1138 * 13, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[0]);
    v1513.globalAlpha = 1;
    v1513.save();
    v1513.translate(p1138 * 128.5, p1138 * 170.5);
    f89(v1513, p1138 * -22.5, p1138 * -6.5, p1138 * 45, p1138 * 13, p1138 * 20);
    v1513.restore();
    f86(v1513, p1139[2]);
    return v1512;
  }
  function f290() {
    if (v2814.reconnect.enabled) {
      v380.globalAlpha = 0.9;
      v380.fillStyle = "#000";
      f89(v380, v384 - 150, v386 - 90, 300, 180, 15);
      v380.fill();
      v380.globalAlpha = 1;
      var v1514 = ⲆⲆ[301];
      v380.save();
      v2814.reconnect.rotate = (v2814.reconnect.rotate + v3027 * 2) % (Math.PI * 2);
      v380.translate(v381 / 2, v382 / 2 - 25);
      v380.rotate(v2814.reconnect.rotate);
      f294(v380, v1514, -v1514.width / 2, -v1514.height / 2);
      v380.restore();
      v1514 = ⲆⲆ[525];
      f294(v380, v1514, (v381 - v1514.width) / 2, (v382 - v1514.height) / 2 + 25);
    }
  }
  function f291() {
    if (!v2814.ΔᐃⵠΔ.open) {
      v2814.ᐃⵠⵠᐃΔ.Δⵠᐃⵠ = 0;
      v2814.ᐃⵠⵠᐃΔ.open = vVVVV21;
      var v1515 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v1516 = 100;
      if (v1515) {
        for (var v1517 = 0; v2813.ⲆΔᐃ[18].length > v1517; v1517++) {
          var v1518 = v2813.ⲆΔᐃ[18][v1517];
          var v1519 = ⲆΔΔ.ΔΔᐃΔ(v1518, v1515);
          if (v1516 > v1519) {
            v1516 = v1519;
            v2814.ᐃⵠⵠᐃΔ.open = true;
            v2814.ᐃⵠⵠᐃΔ.Δⵠᐃⵠ = v1518.info;
            v2814.ᐃⵠⵠᐃΔ.ΔᐃᐃⲆ = v1518.ΔᐃᐃⲆ;
            v2814.ᐃⵠⵠᐃΔ.ᐃΔⵠᐃⲆ = v1518.id;
          }
        }
        if (v1516 < 100) {
          var v1520 = ⲆⲆ[411];
          var v1521 = v2993.ᐃΔΔᐃⵠᐃⲆ;
          var v1522 = Math.floor(v1521.info.translate.x + (v1521.info.ⵠΔ[0].width - v1520.width) / 2);
          var v1523 = Math.floor(v1521.info.translate.y + (v1521.info.ⵠΔ[0].height - v1520.height) / 2) + 3;
          f294(v380, v1520, v1522, v1523);
          if (v2814.ᐃⵠⵠᐃΔ.Δⵠᐃⵠ > 0) {
            v1521.ΔⵠⵠΔ(v380);
            var v1524 = v2814.ᐃⵠⵠᐃΔ.Δⵠᐃⵠ;
            if (v1524 > 1) {
              f296(v1524, v1521);
            }
          }
        }
      }
    }
  }
  function f292() {
    v2814.ⲆⵠΔᐃΔ.open = false;
    var v1525 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
    var v1526 = 100;
    if (v1525) {
      for (var v1527 = 0; v1527 < v2813.ⲆΔᐃ[22].length; v1527++) {
        var v1528 = v2813.ⲆΔᐃ[22][v1527];
        var v1529 = ⲆΔΔ.ΔΔᐃΔ(v1528, v1525);
        if (v1526 > v1529) {
          v1526 = v1529;
          v2814.ⲆⵠΔᐃΔ.open = true;
          v2814.ⲆⵠΔᐃΔ.ΔᐃᐃⲆ = v1528.ΔᐃᐃⲆ;
          v2814.ⲆⵠΔᐃΔ.ᐃΔⵠᐃⲆ = v1528.id;
        }
      }
      if (v1526 < 100) {
        v2993.ⲆⵠΔᐃΔ.ΔⵠⵠΔ(v380);
      }
    }
  }
  function f293() {
    v2814.ΔᐃⵠΔ.id = -1;
    v2814.ΔᐃⵠΔ.lock = vV214;
    v2814.ΔᐃⵠΔ.locked = false;
    v2814.ΔᐃⵠΔ.ⵠⲆᐃᐃᐃΔⲆ = vVVVV212;
    v2814.ΔᐃⵠΔ.ⲆⵠΔΔⵠⲆΔ = false;
    v2814.ΔᐃⵠΔ.open = v21;
    var v1530 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
    var v1531 = 100;
    if (v1530) {
      for (var v1532 = 0; v2813.ⲆΔᐃ[11].length > v1532; v1532++) {
        var v1533 = v2813.ⲆΔᐃ[11][v1532];
        var v1534 = ⲆΔΔ.ΔΔᐃΔ(v1533, v1530);
        if (v1534 < v1531) {
          v1531 = v1534;
          v2814.ΔᐃⵠΔ.open = true;
          v2814.ΔᐃⵠΔ.id = v1533.action < 2 ? -1 : Math.floor((v1533.action - 1) / 2);
          v2814.ΔᐃⵠΔ.Δⵠᐃⵠ = v1533.info;
          v2814.ΔᐃⵠΔ.ΔᐃᐃⲆ = v1533.ΔᐃᐃⲆ;
          v2814.ΔᐃⵠΔ.ᐃΔⵠᐃⲆ = v1533.id;
          v2814.ΔᐃⵠΔ.locked = v1533.lock;
          v2814.ΔᐃⵠΔ.lock = !!v1533.lock && v1533.ΔᐃᐃⲆ != v2814.id && !v2814.ⲆⲆΔⵠⵠΔᐃ(v1533.ΔᐃᐃⲆ) || vVVV21222;
          v2814.ΔᐃⵠΔ.ⲆⵠΔΔⵠⲆΔ = v1533.ΔᐃᐃⲆ === v2814.id && !v2814.ΔᐃⵠΔ.locked && v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(148) != -1;
          if (v2814.ΔᐃⵠΔ.locked && v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(158) != -1) {
            v2814.ΔᐃⵠΔ.ⵠⲆᐃᐃᐃΔⲆ = true;
          }
        }
      }
      if (v1531 < 100) {
        var v1535 = ⲆⲆ[339];
        var v1536 = v2993.ⲆⲆᐃ[0];
        var v1537 = Math.floor(v1536.info.translate.x + (v1536.info.ⵠΔ[0].width - v1535.width) / 2);
        var v1538 = Math.floor(v1536.info.translate.y + (v1536.info.ⵠΔ[0].height - v1535.height) / 2) + 3;
        f294(v380, v1535, v1537, v1538);
        if ((!v2814.ΔᐃⵠΔ.lock || v2814.id === v2814.ΔᐃⵠΔ.ΔᐃᐃⲆ) && v2814.ΔᐃⵠΔ.id >= 0) {
          (v1536 = v2993.ⲆⲆᐃ[v2814.ΔᐃⵠΔ.id]).ΔⵠⵠΔ(v380);
          var v1539 = v2814.ΔᐃⵠΔ.Δⵠᐃⵠ;
          if (v1539 > 1) {
            f296(v1539, v1536);
          }
        }
        if (v2814.ΔᐃⵠΔ.lock) {
          v2993.ΔⲆΔᐃⲆⲆᐃ.ΔⵠⵠΔ(v380);
        } else if (v2814.ΔᐃⵠΔ.ⲆⵠΔΔⵠⲆΔ) {
          v2993.ᐃΔᐃΔⵠⵠⵠ.ΔⵠⵠΔ(v380);
        }
        if (v2814.ΔᐃⵠΔ.ⵠⲆᐃᐃᐃΔⲆ) {
          v2993.ⵠΔᐃΔΔᐃΔ.ΔⵠⵠΔ(v380);
        }
      }
    }
  }
  function f294(p1140, p1141, p1142, p1143, p1144, p1145, p1146, p1147, p1148, p1149) {
    if (p1141.ⵠᐃⵠᐃΔⵠⲆ === undefined || p1141.ⵠᐃⵠᐃΔⵠⲆ() === 1) {
      if (vVVVUndefined1972 !== p1149) {
        p1140.drawImage(p1141, p1142, p1143, Math.max(1, p1144), Math.max(1, p1145), p1146, p1147, p1148, p1149);
      } else if (p1145 !== undefined) {
        p1140.drawImage(p1141, p1142, p1143, p1144, p1145);
      } else {
        p1140.drawImage(p1141, p1142, p1143);
      }
    }
  }
  function f295() {
    if (!v2814.ΔᐃⵠΔ.open && !v2814.ᐃⵠⵠᐃΔ.open) {
      v2814.ΔⵠᐃⲆ.open = false;
      var v1540 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v1541 = 100;
      if (v1540) {
        for (var v1542 = 0; v1542 < v2813.ⲆΔᐃ[32].length; v1542++) {
          var v1543 = v2813.ⲆΔᐃ[32][v1542];
          var v1544 = ⲆΔΔ.ΔΔᐃΔ(v1543, v1540);
          if (v1544 < v1541) {
            v1541 = v1544;
            v2814.ΔⵠᐃⲆ.open = vVV242;
            v2814.ΔⵠᐃⲆ.ᐃⲆᐃⵠᐃⵠⲆ = v1543.info & 255;
            v2814.ΔⵠᐃⲆ.ΔᐃⲆΔⵠ = (v1543.info & 65280) >> 8;
            v2814.ΔⵠᐃⲆ.ΔᐃᐃⲆ = v1543.ΔᐃᐃⲆ;
            v2814.ΔⵠᐃⲆ.ᐃΔⵠᐃⲆ = v1543.id;
          }
        }
        if (v1541 < 100) {
          var v1545 = ⲆⲆ[655];
          var v1546 = (v1548 = v2993.ᐃⲆᐃⵠΔΔⲆ).info.translate.x - 33;
          f294(v380, v1545, v1546, 0);
          if (v2814.ΔⵠᐃⲆ.ᐃⲆᐃⵠᐃⵠⲆ > 0) {
            v1548.ΔⵠⵠΔ(v380);
            if ((v1547 = v2814.ΔⵠᐃⲆ.ᐃⲆᐃⵠᐃⵠⲆ) > 1) {
              f296(v1547, v1548);
            }
          }
          var v1547;
          var v1548 = v2993.ΔⲆᐃⵠⵠᐃᐃ;
          if (v2814.ΔⵠᐃⲆ.ΔᐃⲆΔⵠ > 0) {
            v1548.ΔⵠⵠΔ(v380);
            if ((v1547 = v2814.ΔⵠᐃⲆ.ΔᐃⲆΔⵠ) > 1) {
              f296(v1547, v1548);
            }
          }
        }
      }
    }
  }
  function f296(p1150, p1151) {
    ⲆⲆ[283][p1150] ||= f153(v393, "x" + p1150, 17, "#FFF");
    var v1549 = ⲆⲆ[283][p1150];
    var v1550 = p1151.info.translate.x + p1151.info.ⵠΔ[0].width - v1549.width - v393 * 14;
    var v1551 = p1151.info.translate.y + p1151.info.ⵠΔ[0].height - v1549.height - v393 * 19;
    if (v2166 == p1151.info.state) {
      v1551 += v393 * 5;
    }
    f294(v380, v1549, v1550, v1551);
  }
  function f297() {
    v2814.ⲆΔⵠᐃⵠ.id = -1;
    v2814.ⲆΔⵠᐃⵠ.ΔᐃᐃⲆ = -1;
    if (!v2814.ⵠⵠⵠⲆᐃᐃΔ && !v2814.ⲆΔⵠᐃⵠ.wait && !v2814.ᐃΔᐃΔᐃ) {
      var v1552 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v1553 = 100;
      if (v1552) {
        for (var v1554 = 0; v1554 < v2813.ⲆΔᐃ[29].length; v1554++) {
          var v1555 = v2813.ⲆΔᐃ[29][v1554];
          var v1556 = ⲆΔΔ.ΔΔᐃΔ(v1555, v1552);
          if (v1556 < v1553) {
            v1553 = v1556;
            v2814.ⲆΔⵠᐃⵠ.id = v1555.id;
            v2814.ⲆΔⵠᐃⵠ.ΔᐃᐃⲆ = v1555.ΔᐃᐃⲆ;
            v2814.ⲆΔⵠᐃⵠ.info = v1555.info;
            v2814.ⲆΔⵠᐃⵠ.lock = (v1555.info & 16) >> 4;
          }
        }
      }
      var v1557 = v2993.ᐃΔΔΔⵠ;
      v2993.ᐃΔΔΔⵠ = -1;
      if (v2814.ⲆΔⵠᐃⵠ.ΔᐃᐃⲆ == -1 || v2814.ⲆᐃᐃΔⲆ.length != 0 && v2814.id != v2814.ⲆΔⵠᐃⵠ.ΔᐃᐃⲆ) {
        if (v2814.ⲆᐃᐃΔⲆ.length != 0 && v2814.id != v2814.ⲆᐃᐃΔⲆ[0]) {
          v2993.ᐃΔΔΔⵠ = 2;
        } else if (v2814.ⲆᐃᐃΔⲆ.length != 0 && v2814.ⲆᐃᐃΔⲆ[0] == v2814.id) {
          v2993.ᐃΔΔΔⵠ = 1;
        } else if (v2814.ⲆᐃᐃΔⲆ.length != 0) {
          v2993.ᐃΔΔΔⵠ = 3;
        }
      } else if (v2814.ⲆᐃᐃΔⲆ.length == 0 && v2814.ⲆΔⵠᐃⵠ.info >= 8) {
        v2993.ᐃΔΔΔⵠ = 4;
      } else if (v2814.ⲆᐃᐃΔⲆ.length == 0) {
        v2993.ᐃΔΔΔⵠ = 3;
      } else {
        v2993.ᐃΔΔΔⵠ = 0;
      }
      if (v2993.ᐃΔΔΔⵠ != -1) {
        v2993.ⵠΔⲆⵠΔ[v2993.ᐃΔΔΔⵠ].button.ΔⵠⵠΔ(v380);
      }
      var v1558 = document.getElementById("team_box").style;
      if (v2993.ᐃΔΔΔⵠ != -1 && v1557 != v2993.ᐃΔΔΔⵠ && v1558.display == "inline-block") {
        v2993.ⵠΔⲆⵠΔ[v2993.ᐃΔΔΔⵠ].action();
      }
    }
  }
  function f298() {
    if (!v2814.ΔᐃⵠΔ.open && !v2814.ᐃⵠⵠᐃΔ.open) {
      v2814.ⵠⵠΔⲆ.open = vV21;
      var v1559 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v1560 = 100;
      if (v1559) {
        for (var v1561 = 0; v2209.length > v1561; v1561++) {
          for (var v1562 = v2209[v1561][0], v1563 = v2209[v1561][1], v1564 = 0; v1564 < v2813.ⲆΔᐃ[v1562].length; v1564++) {
            var v1565 = v2813.ⲆΔᐃ[v1562][v1564];
            var v1566 = ⲆΔΔ.ΔΔᐃΔ(v1565, v1559);
            if (v1566 < v1560) {
              v1560 = v1566;
              v2814.ⵠⵠΔⲆ.ⵠⲆⵠΔⵠⲆΔ = v1563;
              v2814.ⵠⵠΔⲆ.type = v1562;
              v2814.ⵠⵠΔⲆ.open = vVVV242;
              v2814.ⵠⵠΔⲆ.ΔᐃᐃⵠⲆⵠⲆ = v1565.info & 255;
              v2814.ⵠⵠΔⲆ.ⲆⲆⲆⲆᐃΔⲆ = (v1565.info & 65280) >> 8;
              v2814.ⵠⵠΔⲆ.ΔᐃᐃⲆ = v1565.ΔᐃᐃⲆ;
              v2814.ⵠⵠΔⲆ.ᐃΔⵠᐃⲆ = v1565.id;
            }
          }
        }
        if (v1560 < 100) {
          var v1567 = ⲆⲆ[656];
          var v1568 = (v1569 = v2993.ᐃΔΔΔᐃⵠΔ).info.translate.x - 33;
          f294(v380, v1567, v1568, 0);
          if (v2814.ⵠⵠΔⲆ.ΔᐃᐃⵠⲆⵠⲆ > 0) {
            v1569.ΔⵠⵠΔ(v380);
            if ((v1570 = v2814.ⵠⵠΔⲆ.ΔᐃᐃⵠⲆⵠⲆ) > 1) {
              f296(v1570, v1569);
            }
          }
          switch (v2814.ⵠⵠΔⲆ.ⵠⲆⵠΔⵠⲆΔ) {
            case 108:
              var v1569 = v2993.ΔⵠⵠⲆⲆⲆⵠ;
              break;
            case 111:
              v1569 = v2993.ⲆⲆⲆΔᐃᐃΔ;
              break;
            case 112:
              v1569 = v2993.ᐃⲆⵠⲆⵠⲆⲆ;
              break;
            case 121:
              v1569 = v2993.ⵠⵠⵠᐃⲆⲆΔ;
              break;
            case 202:
              v1569 = v2993.ⲆⵠΔΔΔᐃΔ;
          }
          if (v2814.ⵠⵠΔⲆ.ⲆⲆⲆⲆᐃΔⲆ > 0) {
            v1569.ΔⵠⵠΔ(v380);
            var v1570 = v2814.ⵠⵠΔⲆ.ⲆⲆⲆⲆᐃΔⲆ;
            if (v1570 > 1) {
              f296(v1570, v1569);
            }
          }
        }
      }
    }
  }
  function f299() {
    var v1571 = v2993.ⵠⲆΔⲆⲆ;
    var v1572 = v1571.id;
    if (v1571.ⵠΔᐃⲆⵠ === 1 && v1571.display === 1) {
      if (ⵠⲆΔᐃᐃ[v1572] === vVUndefined27) {
        ⵠⲆΔᐃᐃ[v1572] = function (p1152) {
          var v1573 = document.createElement("canvas");
          var v1574 = v1573.getContext("2d");
          var v1575 = v702[p1152];
          v1574.font = "20px Baloo Paaji";
          var v1576 = 0;
          if (v1575.length >= 1) {
            v1576 = Math.max(0, v1574.measureText(v1575[0]).width);
          }
          v1574.font = "17px Baloo Paaji";
          if (v1575.length >= 2) {
            v1576 = Math.max(v1576, v1574.measureText(v1575[1]).width);
          }
          v1574.font = "14px Baloo Paaji";
          v717 = 2;
          for (; v717 < v1575.length; v717++) {
            v1576 = Math.max(v1576, v1574.measureText(v1575[v717]).width);
          }
          var v1577 = v1576 + 35;
          var v1578 = 0;
          v1578 = v1575.length === 1 ? 55 : v1575.length === 2 ? 85 : (v1575.length - 2) * 26 + 85;
          v1573.width = v1577;
          v1573.height = v1578;
          f89(v1574, 0, 0, v1577, v1578, 10);
          v1574.fillStyle = "#000000";
          v1574.globalAlpha = 0.5;
          v1574.fill();
          if (v1575.length >= 1) {
            v1574.textBaseline = "middle";
            v1574.font = "20px Baloo Paaji";
            v1574.globalAlpha = 1;
            v1574.fillStyle = "#e2c340";
            v1574.fillText(v1575[0], 15, 28);
          }
          if (v1575.length >= 2) {
            v1574.font = "17px Baloo Paaji";
            v1574.fillStyle = "#ffffff";
            v1574.fillText(v1575[1], 15, 55);
            v1578 = 55;
          }
          if (v1575.length >= 3) {
            v1574.font = "14px Baloo Paaji";
            v1574.globalAlpha = 0.7;
            v717 = 2;
            for (; v1575.length > v717; v717++) {
              v1574.fillText(v1575[v717], 15, v1578 + 28);
              v1578 += 26;
            }
          }
          return v1573;
        }(v1572);
      }
      if (v1571.ⲆΔⵠΔ === 1) {
        f294(v380, ⵠⲆΔᐃᐃ[v1572], v1571.x, v1571.y);
      } else if (v1571.x - 80 + ⵠⲆΔᐃᐃ[v1572].width > v381) {
        f294(v380, ⵠⲆΔᐃᐃ[v1572], v381 - ⵠⲆΔᐃᐃ[v1572].width - 10, v1571.y - ⵠⲆΔᐃᐃ[v1572].height - 10);
      } else {
        f294(v380, ⵠⲆΔᐃᐃ[v1572], v1571.x - 80, v1571.y - ⵠⲆΔᐃᐃ[v1572].height - 10);
      }
    }
  }
  function f300() {
    if (v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length > 0) {
      var v1579 = {
        x: v2993.ΔⵠⲆᐃΔ.translate.x,
        y: v2993.ΔⵠⲆᐃΔ.translate.y - v393 * 120
      };
    } else {
      v1579 = {
        x: v2993.ΔⵠⲆᐃΔ.translate.x,
        y: v2993.ΔⵠⲆᐃΔ.translate.y - v393 * 50
      };
    }
    v380.globalAlpha = 0.8;
    var v1580 = ⲆⲆ[259][v2813.time];
    f294(v380, v1580, v1579.x, v1579.y);
    v380.globalAlpha = 1;
    if (v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.x > -1) {
      v380.fillStyle = "#660000";
      f87(v380, v1579.x + v393 * v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.x, v1579.y + v393 * v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.y, v393 * 5);
      v380.fill();
    }
    var vV393 = v393;
    for (var v1581 = v2993.ΔⵠⲆᐃΔ.ᐃΔΔᐃ, v1582 = 0; v1581.length > v1582; v1582++) {
      var v1583 = v1581[v1582];
      v2813.time;
      v380.fillStyle = "#ff0000";
      f87(v380, v1579.x + v393 * (v1583.x / (v2813.ᐃᐃᐃᐃΔ * 100) * 193), v1579.y + v1583.y / (v2813.ΔⵠⲆⲆΔ * 100) * 193 * v393, v393 * 2);
      v380.fill();
    }
    var v1584 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
    if (v1584) {
      v380.fillStyle = v2813.time ? "#fff" : "#e39716";
      f87(v380, v1579.x + v393 * (v1584.x / (v2813.ᐃᐃᐃᐃΔ * 100) * 193), v1579.y + v393 * (v1584.y / (v2813.ΔⵠⲆⲆΔ * 100) * 193), v393 * 4);
      v380.fill();
    }
    v393 = vV393;
  }
  function f301() {
    if (v2814.ΔᐃⲆⲆΔⲆᐃ) {
      v380.globalAlpha = 0.5;
      v380.fillStyle = "#000";
      v380.fillRect(0, 0, v381, v382);
      v380.globalAlpha = 0.8;
      var v1585 = ⲆⲆ[516][v2813.time];
      var v1586 = v384 - v1585.width / 2;
      var v1587 = v386 - v1585.height / 2;
      f294(v380, v1585, v1586, v1587);
      v380.globalAlpha = 1;
      if (v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.x > -1) {
        v380.fillStyle = "#660000";
        f87(v380, v1586 + v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.x * 3 * v393, v1587 + v393 * (v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.y * 3), v393 * 14);
        v380.fill();
      }
      for (var v1588 = v2993.ΔⵠⲆᐃΔ.ᐃΔΔᐃ, v1589 = 0; v1589 < v1588.length; v1589++) {
        var v1590 = v1588[v1589];
        v2813.time;
        v380.fillStyle = "#ff0000";
        f87(v380, v1586 + v1590.x / (v2813.ᐃᐃᐃᐃΔ * 100) * 600 * v393, v1587 + v1590.y / (v2813.ΔⵠⲆⲆΔ * 100) * 600 * v393, v393 * 6);
        v380.fill();
      }
      var v1591 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      if (v1591) {
        v380.fillStyle = v2813.time ? "#fff" : "#e39716";
        f87(v380, v1586 + v393 * (v1591.x / (v2813.ᐃᐃᐃᐃΔ * 100) * 600), v1587 + v1591.y / (v2813.ΔⵠⲆⲆΔ * 100) * 600 * v393, v393 * 12);
        v380.fill();
      }
    }
  }
  function f302() {
    if (!v2814.ΔᐃⵠΔ.open && !v2814.ᐃⵠⵠᐃΔ.open && !v2814.ΔⵠᐃⲆ.open && !v2814.ⵠⵠΔⲆ.open) {
      v2814.ᐃⲆⵠΔ.open = false;
      var v1592 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v1593 = 100;
      if (v1592) {
        for (var v1594 = 0; v1594 < v2813.ⲆΔᐃ[34].length; v1594++) {
          var v1595 = v2813.ⲆΔᐃ[34][v1594];
          var v1596 = ⲆΔΔ.ΔΔᐃΔ(v1595, v1592);
          if (v1596 < v1593) {
            v1593 = v1596;
            v2814.ᐃⲆⵠΔ.open = vVVV242;
            v2814.ᐃⲆⵠΔ.ΔᐃᐃⵠⲆⵠⲆ = v1595.info & 31;
            v2814.ᐃⲆⵠΔ.ΔᐃⲆΔⵠ = (v1595.info & 992) >> 5;
            v2814.ᐃⲆⵠΔ.ΔΔΔⵠⵠⲆⵠ = (v1595.info & 31744) >> 10;
            v2814.ᐃⲆⵠΔ.ΔᐃᐃⲆ = v1595.ΔᐃᐃⲆ;
            v2814.ᐃⲆⵠΔ.ᐃΔⵠᐃⲆ = v1595.id;
          }
        }
        if (v1593 < 100) {
          var v1597 = ⲆⲆ[722];
          var v1598 = (v1599 = v2993.ΔⵠⲆᐃᐃⵠⵠ).info.translate.x - 32;
          f294(v380, v1597, v1598, 0);
          if (v2814.ᐃⲆⵠΔ.ΔᐃᐃⵠⲆⵠⲆ > 0) {
            v1599.ΔⵠⵠΔ(v380);
            if ((v1600 = v2814.ᐃⲆⵠΔ.ΔᐃᐃⵠⲆⵠⲆ) > 1) {
              f296(v1600, v1599);
            }
          }
          var v1599 = v2993.ΔᐃⵠⵠᐃΔΔ;
          if (v2814.ᐃⲆⵠΔ.ΔΔΔⵠⵠⲆⵠ > 0) {
            v1599.ΔⵠⵠΔ(v380);
            var v1600 = v2814.ᐃⲆⵠΔ.ΔΔΔⵠⵠⲆⵠ;
            if (v1600 > 1) {
              f296(v1600, v1599);
            }
          }
          v1599 = v2993.ΔⵠⵠᐃᐃⲆⵠ;
          if (v2814.ᐃⲆⵠΔ.ΔᐃⲆΔⵠ > 0) {
            v1599.ΔⵠⵠΔ(v380);
            v1600 = v2814.ᐃⲆⵠΔ.ΔᐃⲆΔⵠ;
            if (v1600 > 1) {
              f296(v1600, v1599);
            }
          }
        }
      }
    }
  }
  function f303(p1153, p1154, p1155) {
    var v1601 = ⲆⲆ[465][p1153];
    var v1602 = p1154.info.translate.x + v393 * 5;
    var v1603 = p1154.info.translate.y + v393 * 5;
    if (p1154.info.state == v2166 || p1155) {
      v1603 += v393 * 5;
    }
    f294(v380, v1601, v1602, v1603);
  }
  function f304() {
    if (!v2814.ΔᐃⵠΔ.open && !v2814.ᐃⵠⵠᐃΔ.open && !v2814.ΔⵠᐃⲆ.open && !v2814.ᐃⲆⵠΔ.open && !v2814.ⵠⵠΔⲆ.open) {
      v2814.sign.open = vV212;
      var v1604 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v1605 = 100;
      if (v1604) {
        for (var v1606 = 0; v2813.ⲆΔᐃ[36].length > v1606; v1606++) {
          var v1607 = v2813.ⲆΔᐃ[36][v1606];
          var v1608 = ⲆΔΔ.ΔΔᐃΔ(v1607, v1604);
          if (v1608 < v1605 && v1607.info === 0 && v1607.ΔᐃᐃⲆ === v2814.id) {
            v2814.sign.open = vV24;
            v1605 = v1608;
            v2814.sign.ᐃΔⵠᐃⲆ = v1607.id;
          }
        }
        if (v1605 < 100) {
          v2993.sign.button.ΔⵠⵠΔ(v380);
        }
      }
    }
  }
  ⵠⲆΔᐃᐃ = [];
  ᐃⲆⵠΔΔΔΔ = [];
  var v1609 = [];
  function f305(p1156) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVV2133;
      }
      var v1610 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
      var v1611 = v1610 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1612 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1610;
    } else {
      v1611 = 0;
      v1612 = 0;
    }
    if (this.ⲆⲆⲆΔᐃ.ᐃΔⵠ()) {
      this.color += 0.2 + Math.random() * 0.3;
    }
    ⵠΔ = ⲆⲆ[872][Math.floor(this.id + this.color) % 5][v2813.time];
    ΔⲆⵠ = this.ⲆⲆⲆΔᐃ.ⲆⵠΔ * -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height * this.ⲆⲆⲆΔᐃ.ⲆⵠΔ;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2 + v1611, -ⵠⵠⲆ / 2 + v1612, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f306() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[321][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f307() {
    var v1613 = -8;
    if (v2814.ⲆⲆᐃⵠᐃ.enabled) {
      var v1614 = ⲆⲆ[546];
      f294(v380, v1614, v2814.ⲆⲆᐃⵠᐃ.translate.x, v2814.ⲆⲆᐃⵠᐃ.translate.y + v1613);
      v1613 += 70;
    }
    if (v2814.ⵠΔΔⲆⵠΔⵠ === 1) {
      v1614 = ⲆⲆ[549];
      f294(v380, v1614, v2814.ⲆⲆᐃⵠᐃ.translate.x, v2814.ⲆⲆᐃⵠᐃ.translate.y + v1613);
      v1613 += 70;
    } else if (v2814.ⲆⵠⵠΔ.ΔᐃᐃⲆⵠ.x < 0.25 || v2814.ⲆⵠⵠΔ.ΔᐃⵠⲆⲆΔⲆ.x < 0.25 || v2814.ⲆⵠⵠΔ.ΔᐃⲆΔᐃᐃΔ.x < 0.25 || v2814.ⲆⵠⵠΔ.ⲆⵠⵠⵠΔⲆΔ.x < 0.25 || v2814.ⲆⵠⵠΔ.ΔΔⵠᐃᐃ.x < 0.25) {
      v1614 = ⲆⲆ[548];
      f294(v380, v1614, v2814.ⲆⲆᐃⵠᐃ.translate.x, v2814.ⲆⲆᐃⵠᐃ.translate.y + v1613);
      v1613 += 70;
    }
    if (v2814.ⵠᐃⲆⵠΔ > 0) {
      v1614 = ⲆⲆ[547];
      f294(v380, v1614, v2814.ⲆⲆᐃⵠᐃ.translate.x, v2814.ⲆⲆᐃⵠᐃ.translate.y + v1613);
      var v1615 = v1609[v2814.ⵠᐃⲆⵠΔ];
      if (v1615 === undefined) {
        v1615 = f153(v393, v2814.ⵠᐃⲆⵠΔ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6);
        v1609[v2814.ⵠᐃⲆⵠΔ] = v1615;
      }
      if (v2814.ⵠᐃⲆⵠΔ < 9) {
        f294(v380, v1615, v2814.ⲆⲆᐃⵠᐃ.translate.x - 39, v2814.ⲆⲆᐃⵠᐃ.translate.y + v1613 + 20);
      } else {
        f294(v380, v1615, v2814.ⲆⲆᐃⵠᐃ.translate.x - 46, v2814.ⲆⲆᐃⵠᐃ.translate.y + v1613 + 20);
      }
    }
  }
  function f308() {
    var v1616 = v2814.ⵠⲆᐃⵠᐃ;
    if (v1616.wait) {
      var v1617 = v1616.timeout.ᐃΔⵠ();
      v380.save();
      var v1618 = ⲆⲆ[792];
      v380.translate(v1618.width - v393 * 2, v2993.ⲆⵠⵠΔ.translate.y - v393 * 125);
      var v1619 = -v1618.width / 2 + 10;
      var v1620 = -v1618.height / 2 - 4;
      f294(v380, v1618, v1619, v1620);
      v380.beginPath();
      v380.lineWidth = v393 * 5;
      v380.strokeStyle = v554.ⲆⲆⲆᐃᐃΔΔ[v2813.time];
      v380.lineCap = "round";
      v380.arc(9, v1620 + v1618.height / 2, v393 * 25, 0, v1616.timeout.ⲆⵠΔ * (Math.PI * 2));
      v380.stroke();
      v380.restore();
      if (v1617) {
        v1616.wait = false;
        v1616.timeout.ⲆⵠΔ = 0;
        v1616.timeout.ΔⲆⲆ = vV212;
      }
    }
  }
  function f309() {
    var v1621 = v2814.ⲆΔⵠΔ;
    if (!v1621.ᐃⲆⲆΔᐃ && v1621.ⵠΔΔᐃ > 0) {
      var v1622 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      if (!v1622) {
        return;
      }
      v380.save();
      if (v561[v1621.ⵠΔΔᐃ].ᐃΔΔⵠ === 0 && v1621.mode === 0) {
        v380.translate(v2814.ᐃⲆⲆ.x + v1622.x, v2814.ᐃⲆⲆ.y + v1622.y);
        v380.rotate(v1622.angle);
        v380.translate(120, 0);
      } else {
        var v1623 = Math.floor(v1622.x + Math.sin(v1622.angle) * 120);
        var v1624 = Math.floor(v1622.y + Math.cos(v1622.angle) * 120);
        v1623 = v2814.ᐃⲆⲆ.x + (v1623 - v1623 % 100 + 50);
        v1624 = v2814.ᐃⲆⲆ.y + (v1624 - v1624 % 100 + 50);
        v380.translate(v1623, v1624);
      }
      var v1625 = ⲆⲆ[v1621.ⵠΔΔᐃ][v2813.time];
      v380.globalAlpha = 0.5;
      f294(v380, v1625, -v1625.width / 2, -v1625.height / 2);
      v380.globalAlpha = 1;
      v380.restore();
      if (v561[v1621.ⵠΔΔᐃ].ᐃΔΔⵠ === 0) {
        if (!v1621.label[v1621.mode]) {
          if (v1621.mode === 0) {
            v1621.label[0] = f153(v393, v702[336], 20, "#e2c340");
          } else {
            v1621.label[1] = f153(v393, v702[337], 20, "#e2c340");
          }
        }
        v1625 = v1621.label[v1621.mode];
        f294(v380, v1625, v384 + -v1625.width / 2, v2993.ⲆⵠⵠΔ.y - 26);
      }
    }
    if (v1621.ᐃⲆⲆΔᐃ) {
      var v1626 = v1621.timeout.ᐃΔⵠ();
      for (var v1627 = 0; v1621.ΔᐃⵠΔⵠ.length > v1627; v1627++) {
        var v1628 = v1621.ΔᐃⵠΔⵠ[v1627];
        if (v1628.id == v1621.id) {
          var v1629 = v393 * 42;
          var v1630 = v393 * 17;
          f89(v380, v1628.info.translate.x, v1628.info.translate.y + (1 - v1621.timeout.ⲆⵠΔ) * v1629, v1628.info.width, v1629 * v1621.timeout.ⲆⵠΔ + v1630, v393 * 10);
          v380.fillStyle = "#55B973";
          v380.fill();
          v380.globalAlpha = 0.8;
          v1628.ΔⵠⵠΔ(v380);
        } else {
          v380.globalAlpha = 0.5;
          v1628.ΔⵠⵠΔ(v380);
        }
        v380.globalAlpha = 1;
      }
      if (v1626) {
        v1621.ᐃⲆⲆΔᐃ = vV214;
        v1621.timeout.ⲆⵠΔ = 0;
        v1621.timeout.ΔⲆⲆ = false;
      }
      return true;
    }
    for (v1627 = 0; v1627 < v1621.ΔᐃⵠΔⵠ.length; v1627++) {
      v1621.ΔᐃⵠΔⵠ[v1627].ΔⵠⵠΔ(v380);
    }
    return false;
  }
  function f310() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[811][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f311() {
    var v1631 = v2814.ΔⵠᐃΔⲆ;
    if (v1631.wait) {
      var v1632 = v1631.timeout.ᐃΔⵠ();
      v380.save();
      var v1633 = ⲆⲆ[794];
      v380.translate(v1633.width - v393 * 12, v2993.ⲆⵠⵠΔ.translate.y - v393 * 190);
      var v1634 = -v1633.width / 2 + 9;
      var v1635 = -v1633.height / 2 - 4;
      f294(v380, v1633, v1634, v1635);
      v380.beginPath();
      v380.lineWidth = v393 * 5;
      v380.strokeStyle = v554.ⲆⲆⲆᐃᐃΔΔ[v2813.time];
      v380.lineCap = "round";
      v380.arc(9, v1635 + v1633.height / 2, v393 * 25, 0, Math.PI * 2 * v1631.timeout.ⲆⵠΔ);
      v380.stroke();
      v380.restore();
      if (v1632) {
        v1631.wait = vVVV21;
        v1631.timeout.ⲆⵠΔ = 0;
        v1631.timeout.ΔⲆⲆ = vVVV2122;
      }
    }
  }
  function f312(p1157) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == vV212) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1636 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1637 = v1636 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1638 = v1636 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1637 = 0;
      v1638 = 0;
    }
    var v1639 = ⲆⲆ[p1157][v2813.time];
    ΔⲆⵠ = -v1639.width;
    ⵠⵠⲆ = -v1639.height;
    f294(v380, v1639, -ΔⲆⵠ / 2 + v1637, -ⵠⵠⲆ / 2 + v1638, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f313(p1158) {
    if (!((p1158 = p1158 / 100) > 0.8)) {
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.angle);
      if (this.ᐃⲆᐃ.ᐃΔⵠ) {
        if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
          this.ᐃⲆᐃ.ᐃΔⵠ = v21;
        }
        var v1640 = v393 * (v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600);
        var v1641 = v1640 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
        var v1642 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1640;
      } else {
        v1641 = 0;
        v1642 = 0;
      }
      v380.globalAlpha = 0.5;
      f88(v380, v1641, v1642, v393 * 18, p1158);
      f86(v380, null, "#000000", v393 * 18);
      v380.globalAlpha = 1;
      f88(v380, v1641, v1642, v393 * 18, p1158);
      f86(v380, null, v554.ΔⵠⵠⲆᐃΔⲆ[v2813.time], v393 * 6);
      v380.restore();
    }
  }
  function f314() {
    var v1643 = v2813.ΔⲆⵠᐃΔ;
    var v1644 = ⲆⲆ[725][v2813.time];
    f294(v380, v1644, v1643.translate.x, v1643.translate.y);
    v380.save();
    v380.translate(v1643.translate.x + v1644.width / 2, v1643.translate.y + v1644.height / 2);
    v2813.ΔⲆⵠᐃΔ.now = (new Date().getTime() - v1643.ⵠΔⵠⲆⲆ + v1643.ᐃΔΔᐃᐃ) % 480000;
    var v1645 = Math.PI * 2 * v2813.ΔⲆⵠᐃΔ.now / 480000 - Math.PI / 2;
    v380.rotate(v1645);
    f294(v380, ⲆⲆ[726], -v1644.width / 2, -v1644.height / 2);
    v380.restore();
  }
  function f315() {
    v380.save();
    var vV3932 = v393;
    if (v2814.ⲆⵠⵠΔ.ᐃΔⲆⵠⲆ.x < 0.25) {
      v380.globalAlpha = v2814.ⲆⵠⵠΔ.ΔⲆΔⲆΔⵠᐃ.ⲆⵠΔ;
    }
    var v1646 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length > 0 ? -70 : 0;
    if (v2814.ΔᐃⵠΔ.open || v2814.ᐃⵠⵠᐃΔ.open && v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(109) != -1 || v2814.ΔⵠᐃⲆ.open && v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(134) != -1 || v2814.ⵠⵠΔⲆ.open && v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(109) != -1 || v2814.ⵠⵠᐃᐃⵠ.open && v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(180) != -1 || v2814.ᐃⲆⵠΔ.open && (v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(109) != -1 || v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(131) != -1)) {
      v1646 -= v393 * 50;
    }
    v380.translate((v381 - v393 * 950) / 2, v1646);
    v380.fillStyle = "#69A148";
    v380.fillRect(this.translate.x + v393 * 37, this.translate.y + v393 * 17, v2814.ⲆⵠⵠΔ.ᐃΔⲆⵠⲆ.x * 178 * v393, v393 * 18);
    v380.globalAlpha = 1;
    if (v2814.ⲆⵠⵠΔ.ΔᐃⵠⲆⲆΔⲆ.x < 0.35) {
      v380.fillStyle = "#8F050A";
      v380.globalAlpha = v2814.ⲆⵠⵠΔ.ΔᐃⲆᐃΔᐃΔ.ⲆⵠΔ;
      v380.fillRect(this.translate.x + v393 * 277, this.translate.y + v393 * 17, v393 * 178, v393 * 18);
      v380.globalAlpha = 1;
    }
    v380.fillStyle = "#AF352A";
    v380.fillRect(this.translate.x + v393 * 277, this.translate.y + v393 * 17, v393 * (v2814.ⲆⵠⵠΔ.ΔᐃⵠⲆⲆΔⲆ.x * 178), v393 * 18);
    if (v2814.ⲆⵠⵠΔ.ΔᐃᐃⲆⵠ.x < 0.35) {
      v380.fillStyle = "#366B91";
      v380.globalAlpha = v2814.ⲆⵠⵠΔ.ⵠᐃΔⲆᐃⵠⵠ.ⲆⵠΔ;
      v380.fillRect(this.translate.x + v393 * 517, this.translate.y + v393 * 17, v393 * 178, v393 * 18);
      v380.globalAlpha = 1;
    }
    v380.fillStyle = "#669BB1";
    v380.fillRect(this.translate.x + v393 * 517, this.translate.y + v393 * 17, v393 * (v2814.ⲆⵠⵠΔ.ΔᐃᐃⲆⵠ.x * 178), v393 * 18);
    if (v2814.ⲆⵠⵠΔ.ΔᐃᐃⲆⵠ.x > 0.99) {
      if (v2814.ⲆⵠⵠΔ.ΔΔⵠᐃᐃ.x < 0.35) {
        v380.fillStyle = "#6C4036";
        v380.globalAlpha = v2814.ⲆⵠⵠΔ.ⲆΔⲆⲆⲆᐃᐃ.ⲆⵠΔ;
        v380.fillRect(this.translate.x + v393 * 517, this.translate.y + v393 * 17, v393 * 178, v393 * 18);
        v380.globalAlpha = 1;
      }
      v380.fillStyle = "#9C4036";
      v380.fillRect(this.translate.x + v393 * 517, this.translate.y + v393 * 17, (1 - v2814.ⲆⵠⵠΔ.ΔΔⵠᐃᐃ.x) * 178 * v393, v393 * 18);
    }
    if (v2814.ⲆⵠⵠΔ.ΔᐃⲆΔᐃᐃΔ.x < 0.35) {
      v380.fillStyle = "#001A57";
      v380.globalAlpha = v2814.ⲆⵠⵠΔ.ΔᐃⲆⵠⲆᐃΔ.ⲆⵠΔ;
      v380.fillRect(this.translate.x + v393 * 757, this.translate.y + v393 * 17, v393 * 178, v393 * 18);
      v380.globalAlpha = 1;
    }
    v380.fillStyle = "#074A87";
    v380.fillRect(this.translate.x + v393 * 757, this.translate.y + v393 * 17, v393 * (v2814.ⲆⵠⵠΔ.ΔᐃⲆΔᐃᐃΔ.x * 178), v393 * 18);
    v393 = vV3932;
    f294(v380, this.ⵠΔ, this.translate.x, this.translate.y);
    this.y = this.translate.y + v1646;
    v380.restore();
    if (v2814.ⲆⵠⵠΔ.ⲆⵠⵠⵠΔⲆΔ.x < 0.99) {
      var v1647 = Math.floor(v384 - ⲆⲆ[608].width / 2);
      v1646 += this.translate.y - ⲆⲆ[608].height - v393 * 5;
      v380.fillStyle = "#BBE8EF";
      v380.fillRect(v1647 + 5, v1646 + v393 * 5, v2814.ⲆⵠⵠΔ.ⲆⵠⵠⵠΔⲆΔ.x * (v393 * 588), v393 * 10);
      if (v2814.ⲆⵠⵠΔ.ⲆⵠⵠⵠΔⲆΔ.x < 0.35) {
        v380.fillStyle = "#9BA8AF";
        v380.globalAlpha = v2814.ⲆⵠⵠΔ.ᐃᐃⲆⵠⲆᐃΔ.ⲆⵠΔ;
        v380.fillRect(v1647 + 5, v1646 + 5, v393 * 588, v393 * 10);
        v380.globalAlpha = 1;
      }
      f294(v380, ⲆⲆ[608], v1647, v1646);
      this.y = v1646;
    }
  }
  ;
  function f316() {
    for (var v1648 = v2814.ⲆⲆᐃΔ, v1649 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ], v1650 = 0; v1650 < v1648.ⵠΔⵠⵠⵠ.length; v1650++) {
      var v1651 = v1648.ⵠΔⵠⵠⵠ[v1650];
      var vVVVV2122 = vVVV212;
      if ((v1649 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ]) && (v1649.right == v1651.id || v1651.id == v1649.ΔⲆⵠⲆⵠ && v1649.ΔⲆⵠⲆⵠ > 0)) {
        vVVVV2122 = vVV24;
        f294(v380, v1651.info.ⵠΔ[2], v1651.info.translate.x, v1651.info.translate.y, v1651.info.width, v1651.info.height);
      } else {
        v1651.ΔⵠⵠΔ(v380);
      }
      var v1652 = v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[v1651.id];
      if (v1652 > 1) {
        f296(v1652, v1651);
      }
      if (v1652 > 0) {
        f303(v1650, v1651, vVVVV2122);
      }
      var v1653 = v2814.ΔᐃⵠΔ;
      if (v1653.open && (v1653.id < 0 || v1651.id == v1653.id) && (!v1653.lock || v2814.id == v1653.ΔᐃᐃⲆ)) {
        v2993.ΔΔⵠΔⵠ[v1651.id].ΔⵠⵠΔ(v380);
      }
      if (v2814.ᐃⵠⵠᐃΔ.open && v1651.id == 109) {
        v2993.ΔΔⵠΔⵠ[v1651.id].ΔⵠⵠΔ(v380);
      }
      if (v2814.ⵠⵠᐃᐃⵠ.open && v1651.id == 180) {
        v2993.ΔΔⵠΔⵠ[v1651.id].ΔⵠⵠΔ(v380);
      }
      if (v2814.ΔⵠᐃⲆ.open && v1651.id == 134) {
        v2993.ΔΔⵠΔⵠ[v1651.id].ΔⵠⵠΔ(v380);
      }
      if (v2814.ⵠⵠΔⲆ.open && v1651.id == 109) {
        v2993.ΔΔⵠΔⵠ[v1651.id].ΔⵠⵠΔ(v380);
      }
      if (v2814.ᐃⲆⵠΔ.open && (v1651.id == 109 || v1651.id == 131)) {
        v2993.ΔΔⵠΔⵠ[v1651.id].ΔⵠⵠΔ(v380);
      }
    }
    if (v1651 && v1650 < v1648.max) {
      var v1654 = ⲆⲆ[334][2];
      Δᐃ = v1651.info.translate.x;
      ᐃᐃⲆ = v1651.info.translate.y;
      ΔᐃΔⲆ = 1;
      for (; v1650 < v1648.max; v1650++, ΔᐃΔⲆ++) {
        f294(v380, v1654, Δᐃ + (v1654.width + 5) * ΔᐃΔⲆ, ᐃᐃⲆ);
      }
    }
  }
  function f317() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[837][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f318() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[239][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  var v1655 = vWindow.console;
  function f319() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[848][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f320() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVV213;
      }
      var v1656 = v393 * (v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600);
      var v1657 = v1656 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1658 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1656;
    } else {
      v1657 = 0;
      v1658 = 0;
    }
    ⵠΔ = ⲆⲆ[167][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2 + v1657, -ⵠⵠⲆ / 2 + v1658, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.lock) {
      ⵠΔ = ⲆⲆ[148][v2813.time];
      ΔⲆⵠ = -ⵠΔ.width;
      ⵠⵠⲆ = -ⵠΔ.height;
      f294(v380, ⵠΔ, -ΔⲆⵠ / 2 + v1657 - v393 * 1, -ⵠⵠⲆ / 2 + v1658, ΔⲆⵠ, ⵠⵠⲆ);
    }
    v380.restore();
  }
  function f321(p1159) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVVV21222;
      }
      var v1659 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
      var v1660 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1659;
      var v1661 = v1659 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1660 = 0;
      v1661 = 0;
    }
    ⵠΔ = ⲆⲆ[p1159][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2 + v1660, -ⵠⵠⲆ / 2 + v1661, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f322() {
    var v1662 = v2814.ᐃΔⵠⲆΔ;
    if (v1662.wait) {
      var v1663 = v1662.timeout.ᐃΔⵠ();
      v380.save();
      var v1664 = ⲆⲆ[537];
      v380.translate(v1664.width - v393 * 2, v2993.ⲆⵠⵠΔ.translate.y - v393 * 60);
      var v1665 = -v1664.width / 2 - 2;
      var v1666 = -v1664.height / 2 - 4;
      f294(v380, v1664, v1665, v1666);
      v380.beginPath();
      v380.lineWidth = v393 * 5;
      v380.strokeStyle = v554.ⵠⵠΔΔΔⲆⲆ[v2813.time];
      v380.lineCap = "round";
      v380.arc(0, v1666 + v1664.height / 2, v393 * 25, 0, v1662.timeout.ⲆⵠΔ * (Math.PI * 2));
      v380.stroke();
      v380.restore();
      if (v1663) {
        v1662.wait = vVVVV21222;
        v1662.timeout.ⲆⵠΔ = 0;
        v1662.timeout.ΔⲆⲆ = vVVVV21;
      }
    }
  }
  function f323() {
    var v1667 = v2814.ⵠΔⲆΔⲆ;
    var v1668 = v2993.ⵠⲆᐃᐃ;
    if (v1667.ᐃΔⵠ) {
      v1667.ᐃΔⵠ = false;
      var v1669 = v1667.ᐃΔⵠᐃΔ;
      var v1670 = v1668.ⵠⲆ.width;
      var v1671 = v1668.ⵠⲆ.height;
      var v1672 = v1668.ᐃ;
      var v1673 = v2813.ᐃΔΔᐃ;
      var v1674 = false;
      v1672.clearRect(0, 0, v1670, v1671);
      v1672.drawImage(v1668.ⵠΔ, 0, 0);
      for (var v1675 = 0; v1675 < v1669.length; v1675++) {
        var v1676 = v1673[v1669[v1675]];
        if ((v2813.mode !== 1 || v1676.ᐃΔᐃⲆⵠ !== "spectator") && (v2813.mode !== 2 || v1676.ⲆΔᐃⲆ !== 0)) {
          if (v2814.id == v1669[v1675]) {
            v1674 = true;
            if (v2813.mode === 3 && v1676.ⲆΔᐃⲆ === 0) {
              ⵠᐃ = "#FF0000";
            } else {
              ⵠᐃ = "#FFF";
            }
          } else if (v2813.mode === 3 && v1676.ⲆΔᐃⲆ === 0) {
            ⵠᐃ = "#990000";
          } else {
            ⵠᐃ = "#A1BDCD";
          }
          v1672.drawImage(f153(v393, "" + (v1675 + 1), v393 * 15, ⵠᐃ), v393 * 20, v393 * (40 + v1675 * 22));
          if (!v1676.ⲆⵠΔⲆΔΔΔ) {
            v1676.ⲆⵠΔⲆΔΔΔ = f153(v393, v1676.ᐃΔᐃⲆⵠ, v393 * 15, ⵠᐃ, undefined, vUndefined, undefined, undefined, v393 * 110);
          }
          v1672.drawImage(v1676.ⲆⵠΔⲆΔΔΔ, v393 * 39, (40 + v1675 * 22) * v393);
          v1672.drawImage(f153(v393, ⲆΔΔ.ᐃᐃⲆⵠΔⲆΔ(v1676.ⵠⵠᐃΔᐃ), v393 * 15, ⵠᐃ), v393 * 156, (40 + v1675 * 22) * v393);
        }
      }
      if (!v1674) {
        if (v2813.mode === 0 || v2813.mode === 3 || v2813.mode === 4 || v2813.mode === 5 || v2813.mode === 7 || v2813.mode === 1 && !v2814.ⵠⵠⵠⲆᐃᐃΔ || v2813.mode === 2 && !v2814.ᐃΔᐃΔᐃ) {
          v1672.drawImage(ⲆⲆ[306], v393 * 15, (46 + v1675 * 22) * v393);
          v1672.drawImage(f153(v393, ⲆΔΔ.ᐃᐃⲆⵠΔⲆΔ(v2813.ᐃΔΔᐃ[v2814.id].ⵠⵠᐃΔᐃ), v393 * 15, "#FFF"), v393 * 100, v393 * (46 + v1675 * 22));
        }
      }
    }
    f294(v380, v1668.ⵠⲆ, v1668.translate.x, v1668.translate.y);
  }
  function f324() {
    var v1677 = v2814.ⲆΔⵠΔ;
    if (v1677.ᐃⲆⲆΔᐃ) {
      var v1678 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + v1678.x, v2814.ᐃⲆⲆ.y + v1678.y);
      var v1679 = ⲆⲆ[324];
      var v1680 = -v1679.width / 2;
      var v1681 = -v1679.height / 2 - v393 * 125;
      f294(v380, v1679, v1680, v1681);
      v380.beginPath();
      v380.lineWidth = v393 * 5;
      v380.strokeStyle = v554.ᐃⲆΔᐃⵠΔⵠ[v2813.time];
      v380.lineCap = "round";
      v380.arc(0, v1681 + v1679.height / 2, v393 * 25, 0, Math.PI * 2 * v1677.timeout.ⲆⵠΔ);
      v380.stroke();
      v380.restore();
    }
  }
  function f325(p1160) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1682 = v393 * (v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600);
      var v1683 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1682;
      var v1684 = v1682 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1683 = 0;
      v1684 = 0;
    }
    if (p1160 === 913 && !v2813.transition) {
      var v1685 = 0;
      for (var v1686 = v2813.ⲆΔᐃ[0], v1687 = 0; v1686.length > v1687; v1687++) {
        var v1688 = ⲆΔΔ.ΔΔᐃΔ(v1686[v1687], this);
        if (v1688 < 140 && v1688 > 35) {
          v1685 = 0;
          break;
        }
        if (v1688 <= 35) {
          v1685 = 1;
        }
      }
      this.opacity = v1685 === 0 ? Math.max(0.5, this.opacity - v3027 / 1.5) : Math.min(1, this.opacity + v3027 / 1.5);
      v380.globalAlpha = this.opacity;
    }
    ⵠΔ = ⲆⲆ[p1160][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2 + v1683, -ⵠⵠⲆ / 2 + v1684, ΔⲆⵠ, ⵠⵠⲆ);
    v380.globalAlpha = 1;
    v380.restore();
  }
  function f326(p1161) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && vVVV21222 == this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVV21222;
      }
      var v1689 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1690 = v1689 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1691 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1689;
    } else {
      v1690 = 0;
      v1691 = 0;
    }
    var v1692 = ⲆⲆ[853].length;
    ⵠΔ = ⲆⲆ[853][(this.ΔᐃΔⲆ + this.Ⲇⵠ % 2) % v1692][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height;
    var v1693 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
    if (v1693 && (v2814.id === this.ΔᐃᐃⲆ || v2814.ⲆⲆΔⵠⵠΔᐃ(this.ΔᐃᐃⲆ))) {
      if (ⲆΔΔ.ΔΔᐃΔ(this, v1693) < 550) {
        this.opacity = Math.max(this.opacity - v3027, 0.3);
      } else {
        this.opacity = Math.min(this.opacity + v3027, 1);
      }
    } else if (v1693 && ⲆΔΔ.ΔΔᐃΔ(this, v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ]) < 150) {
      this.opacity = Math.max(this.opacity - v3027, 0.3);
    } else {
      this.opacity = Math.min(this.opacity + v3027, 1);
    }
    var v1694 = v380.globalAlpha;
    v380.globalAlpha *= this.opacity;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2 + v1690, -ⵠⵠⲆ / 2 + v1691, ΔⲆⵠ, ⵠⵠⲆ);
    v380.globalAlpha = v1694;
    v380.restore();
  }
  function f327() {
    var v1695 = v2814.ⲆΔⵠᐃⵠ;
    if (v1695.wait) {
      var v1696 = v1695.timeout.ᐃΔⵠ();
      v380.save();
      var v1697 = ⲆⲆ[562];
      var v1698 = ⲆⲆ[537].height + v393 * 25;
      v380.translate(v1697.width, v2993.ⲆⵠⵠΔ.translate.y - v393 * 188 - v1698);
      var v1699 = -v1697.width / 2 - 2;
      var v1700 = -v1697.height / 2 - 4;
      f294(v380, v1697, v1699 + 2, v1700);
      v380.beginPath();
      v380.lineWidth = v393 * 5;
      v380.strokeStyle = v554.ⵠⵠΔΔΔⲆⲆ[v2813.time];
      v380.lineCap = "round";
      v380.arc(0, v1700 + v1697.height / 2, v393 * 25, 0, Math.PI * 2 * v1695.timeout.ⲆⵠΔ);
      v380.stroke();
      v380.restore();
      if (v1696) {
        v1695.wait = false;
        v1695.timeout.ⲆⵠΔ = 0;
        v1695.timeout.ΔⲆⲆ = vVVV2122;
      }
    }
  }
  function f328(p1162) {
    if (!((p1162 = p1162 / 100) > 0.95)) {
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.angle);
      if (this.ᐃⲆᐃ.ᐃΔⵠ) {
        if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
          this.ᐃⲆᐃ.ᐃΔⵠ = vV214;
        }
        var v1701 = (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600 * v393;
        var v1702 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1701;
        var v1703 = v1701 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
      } else {
        v1702 = 0;
        v1703 = 0;
      }
      v380.globalAlpha = 0.5;
      f88(v380, v1702, v1703, v393 * 28, p1162);
      f86(v380, null, "#000000", v393 * 18);
      v380.globalAlpha = 1;
      f88(v380, v1702, v1703, v393 * 28, p1162);
      f86(v380, null, v554.ᐃⲆΔᐃⵠΔⵠ[v2813.time], v393 * 6);
      v380.restore();
    }
  }
  v1655.log = v1655.info = v1655.error = v1655.warn = v1655.debug = v1655.ⲆᐃᐃᐃⲆΔᐃⲆⵠ = v1655.trace = v1655.time = v1655.timeEnd = function () {};
  var v1704 = 0;
  function f329(p1163, p1164, p1165) {
    if (p1163 >= 0) {
      ⵠΔ = ⲆⲆ[p1163][v2813.time];
      switch (p1163) {
        case 71:
        case 72:
        case 73:
          f413(p1163, ⵠΔ, -ⵠΔ.width / 4 - (0 + p1164) * v393, -ⵠΔ.height / 4 + (p1165 + 35) * v393);
          break;
        case 74:
          f413(p1163, ⵠΔ, -ⵠΔ.width / 4 - v393 * (1 + p1164), -ⵠΔ.height / 4 + (p1165 + 45) * v393);
          break;
        case 75:
        case 76:
          f413(p1163, ⵠΔ, -ⵠΔ.width / 4 - v393 * (1 + p1164), -ⵠΔ.height / 4 + (p1165 + 40) * v393);
      }
    }
  }
  function f330() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1705 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1706 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1705;
      var v1707 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1705;
    } else {
      v1706 = 0;
      v1707 = 0;
    }
    var v1708 = this.info & 15;
    if (this.info === 10 || v1708 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1709 = ⲆⲆ[970][v2813.time];
      } else {
        v1709 = ⲆⲆ[208][v2813.time];
      }
      var v1710 = -v1709.width * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      var v1711 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1709.height;
      f294(v380, v1709, -v1710 / 2 + v1706, -v1711 / 2 + v1707, v1710, v1711);
    } else {
      if (this.info & 16) {
        v1709 = ⲆⲆ[971][v2813.time];
      } else {
        v1709 = ⲆⲆ[209][v2813.time];
      }
      v380.translate(0, v1709.height / 2);
      f294(v380, v1709, v1706 - v1709.width / 2, -v1709.height + v1707);
    }
    v380.restore();
  }
  function f331() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVV213;
      }
      var v1712 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1713 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1712;
      var v1714 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1712;
    } else {
      v1713 = 0;
      v1714 = 0;
    }
    v380.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1713 += Math.random() * 2 - 1;
      v1714 += Math.random() * 2 - 1;
    }
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1713, v2814.ᐃⲆⲆ.y + this.y + v1714);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[154][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3027 * 3) % (Math.PI * 2);
    }
    v380.rotate(this.rotate);
    ⵠΔ = ⲆⲆ[1202][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
  }
  function f332() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVVV21;
      }
      var v1715 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1716 = v1715 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1717 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1715;
    } else {
      v1716 = 0;
      v1717 = 0;
    }
    var v1718 = this.info & 15;
    if (this.info === 10 || v1718 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1719 = ⲆⲆ[668][v2813.time];
      } else {
        v1719 = ⲆⲆ[132][v2813.time];
      }
      var v1720 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1719.width;
      var v1721 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1719.height;
      f294(v380, v1719, -v1720 / 2 + v1716, -v1721 / 2 + v1717, v1720, v1721);
    } else {
      this.ΔⵠᐃΔⲆⲆⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        v1719 = ⲆⲆ[638][v2813.time];
      } else {
        v1719 = ⲆⲆ[134][v2813.time];
      }
      v380.translate(0, v1719.height / 2);
      v380.rotate(this.ΔⵠᐃΔⲆⲆⲆ.ⲆⵠΔ);
      f294(v380, v1719, v1716 - v1719.width / 2, -v1719.height + v1717);
    }
    v380.restore();
  }
  function f333() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ⲆⲆⵠΔᐃⵠΔ = Math.min(1, this.ⲆⲆⵠΔᐃⵠΔ + v3027 * 2);
    v380.globalAlpha = Math.min(1, Math.max(0, ⲆΔΔ.ΔΔᐃΔ(this, this.r) / 80)) * this.ⲆⲆⵠΔᐃⵠΔ;
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[247][v2813.time][this.ᐃᐃⲆⵠⲆ];
    if (this.ᐃᐃⲆⵠⲆ < 2) {
      ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -ⵠΔ.width;
      ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -ⵠΔ.height;
    } else if (this.ⲆⲆᐃⵠⲆΔⲆ === 0) {
      ΔⲆⵠ = -ⵠΔ.width;
      ⵠⵠⲆ = -ⵠΔ.height;
    } else {
      ΔⲆⵠ = -ⵠΔ.width * 1.35;
      ⵠⵠⲆ = -ⵠΔ.height * 1.35;
    }
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.globalAlpha = 1;
    v380.restore();
  }
  function f334() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    var v1722 = ⲆΔΔ.ΔΔᐃΔ(this, this.r);
    this.scale = v1722 > 350 ? Math.min(this.scale + v3027 / 2, 1.8) : Math.max(this.scale - v3027, 1);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    this.ΔⲆⵠᐃ = v1722 < 350 ? Math.max(0, this.ΔⲆⵠᐃ - v3027 * 2.2) : Math.min(1, this.ΔⲆⵠᐃ + v3027 * 2.2);
    v1723 = ⲆⲆ[1135][v2813.time];
    ΔⲆⵠ = this.scale * (-v1723.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
    ⵠⵠⲆ = this.scale * (-v1723.height * this.Δᐃⵠᐃ.ⲆⵠΔ);
    v380.globalAlpha = 1 - this.ΔⲆⵠᐃ;
    f294(v380, v1723, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    v1723 = ⲆⲆ[1119][v2813.time];
    ΔⲆⵠ = -v1723.width * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1723.height * this.scale;
    v380.globalAlpha = this.ΔⲆⵠᐃ;
    f294(v380, v1723, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ) * (1 - this.ΔⲆⵠᐃ);
      var v1723 = ⲆⲆ[1136];
      ΔⲆⵠ = -v1723.width * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
      ⵠⵠⲆ = this.scale * (this.Δᐃⵠᐃ.ⲆⵠΔ * -v1723.height);
      f294(v380, v1723, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = this.ΔⲆⵠᐃ * (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ);
      v1723 = ⲆⲆ[1128];
      ΔⲆⵠ = this.scale * (-v1723.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
      ⵠⵠⲆ = this.scale * (this.Δᐃⵠᐃ.ⲆⵠΔ * -v1723.height);
      f294(v380, v1723, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v1723 = ⲆⲆ[1122][v2813.time];
    ΔⲆⵠ = this.scale * (-v1723.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
    ⵠⵠⲆ = this.scale * (-v1723.height * this.Δᐃⵠᐃ.ⲆⵠΔ);
    v380.save();
    v380.translate(v393 * -40, v393 * 80);
    v380.rotate(this.rotate.ⲆⵠΔ);
    v380.globalAlpha = this.ΔⲆⵠᐃ;
    f294(v380, v1723, -ΔⲆⵠ * v393 / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = this.ΔⲆⵠᐃ * (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ);
      v1723 = ⲆⲆ[1129];
      f294(v380, v1723, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v1723 = ⲆⲆ[1125][v2813.time];
    v380.save();
    v380.translate(v393 * 40, v393 * 80);
    v380.rotate(-this.rotate.ⲆⵠΔ);
    v380.globalAlpha = this.ΔⲆⵠᐃ;
    f294(v380, v1723, -ΔⲆⵠ * v393 / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = this.ΔⲆⵠᐃ * (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ);
      v1723 = ⲆⲆ[1130];
      f294(v380, v1723, -ΔⲆⵠ * v393 / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.globalAlpha = 1;
    v380.restore();
    v380.restore();
  }
  function f335() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1724 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1725 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1724;
      var v1726 = v1724 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1725 = 0;
      v1726 = 0;
    }
    this.ᐃⲆⵠⵠⵠⵠⵠ = (this.ᐃⲆⵠⵠⵠⵠⵠ + v3027 * 3) % (Math.PI * 2);
    this.ⲆΔⵠⲆⲆΔΔ = (this.ⲆΔⵠⲆⲆΔΔ - v3027 * 3) % (Math.PI * 2);
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1725, v2814.ᐃⲆⲆ.y + this.y + v1726);
    v380.save();
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[152][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.save();
    v380.rotate(this.ᐃⲆⵠⵠⵠⵠⵠ);
    ⵠΔ = ⲆⲆ[1194][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.save();
    v380.rotate(this.ⲆΔⵠⲆⲆΔΔ);
    ⵠΔ = ⲆⲆ[1193][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.restore();
  }
  function f336() {
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    v1727 = this.info === 0 ? ⲆⲆ[248][v2813.time] : ⲆⲆ[1222][v2813.time];
    ΔⲆⵠ = -v1727.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1727.height;
    f294(v380, v1727, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && vVVV2132 == this.ᐃⲆᐃ.ΔⲆⲆ) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1727 = ⲆⲆ[1223];
      f294(v380, v1727, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f337() {
    var v1728 = Math.PI / 2;
    var v1729 = Math.PI / 4;
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.ⵠΔΔⵠⲆΔⲆ.ᐃΔⵠ();
    this.ⵠⲆⲆⵠⲆᐃᐃ.ᐃΔⵠ();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    v1730 = this.info === 0 ? ⲆⲆ[887][v2813.time] : ⲆⲆ[886][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1730.width;
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1730.height;
    f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == v21) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1730 = ⲆⲆ[888];
      f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.Δⵠᐃⵠⵠ.ᐃΔⵠ() && vVVV213 == this.Δⵠᐃⵠⵠ.ΔⲆⲆ) {
        this.action -= 4;
      }
      v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
      v1730 = ⲆⲆ[891];
      f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle + v1729);
    v380.translate(55, 0);
    v380.rotate(v1728);
    v1730 = this.info === 0 ? ⲆⲆ[894][v2813.time] : ⲆⲆ[896][v2813.time];
    ΔⲆⵠ = -v1730.width * this.ⵠΔΔⵠⲆΔⲆ.ⲆⵠΔ;
    ⵠⵠⲆ = -v1730.height * this.ⵠΔΔⵠⲆΔⲆ.ⲆⵠΔ;
    f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1730 = ⲆⲆ[889];
      f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    if (this.action & 4) {
      v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
      v1730 = ⲆⲆ[892];
      f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle + v1728 + v1729);
    v380.translate(55, 0);
    v380.rotate(v1728);
    v1730 = this.info === 0 ? ⲆⲆ[895][v2813.time] : ⲆⲆ[897][v2813.time];
    ΔⲆⵠ = -v1730.width * this.ⵠⲆⲆⵠⲆᐃᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = this.ⵠⲆⲆⵠⲆᐃᐃ.ⲆⵠΔ * -v1730.height;
    f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1730 = ⲆⲆ[890];
      f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    if (this.action & 4) {
      v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
      v1730 = ⲆⲆ[893];
      f294(v380, v1730, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f338() {
    if (!(this.info < 10)) {
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.angle);
      if (this.ᐃⲆᐃ.ᐃΔⵠ) {
        if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && vV213 == this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ) {
          this.ᐃⲆᐃ.ᐃΔⵠ = vVVVV212;
        }
        var v1731 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
        var v1732 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1731;
        var v1733 = v1731 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
      } else {
        v1732 = 0;
        v1733 = 0;
      }
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      var v1734 = ⲆⲆ[206][v2813.time];
      var v1735 = -v1734.width * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      var v1736 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1734.height;
      f294(v380, v1734, -v1735 / 2 + v1732, -v1736 / 2 + v1733, v1735, v1736);
      v380.restore();
    }
  }
  function f339() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && vVV2123 == this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1737 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1738 = v1737 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1739 = v1737 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1738 = 0;
      v1739 = 0;
    }
    v380.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1738 += Math.random() * 2 - 1;
      v1739 += Math.random() * 2 - 1;
    }
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1738, v2814.ᐃⲆⲆ.y + this.y + v1739);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[157][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3027 * 3) % (Math.PI * 2);
    }
    v380.rotate(this.rotate);
    ⵠΔ = ⲆⲆ[1214][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
  }
  function f340() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ⲆⲆⲆΔᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[289][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width * this.ⲆⲆⲆΔᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = this.ⲆⲆⲆΔᐃ.ⲆⵠΔ * -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f341(p1166, p1167) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    v1740 = ⲆⲆ[p1166][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1740.width;
    ⵠⵠⲆ = -v1740.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
    f294(v380, v1740, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1740 = ⲆⲆ[p1167];
      f294(v380, v1740, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f342() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == vVVV2122) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVV213;
      }
      var v1741 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
      var v1742 = v1741 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1743 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1741;
    } else {
      v1742 = 0;
      v1743 = 0;
    }
    if (this.info & 31 && this.info & 992 && ~this.info & 31744) {
      v1744 = ⲆⲆ[716][v2813.time];
      f294(v380, v1744, -v1744.width / 2 + v1742, -v1744.height / 2 + v1743);
      this.up.ᐃΔⵠ();
      var v1744 = ⲆⲆ[720][v2813.time];
      var v1745 = this.up.ⲆⵠΔ * -v1744.width;
      var v1746 = this.up.ⲆⵠΔ * -v1744.height;
      f294(v380, v1744, -v1745 / 2 + v393 * 1, -v1746 / 2 + v393 * 3, v1745, v1746);
    } else {
      v1744 = ⲆⲆ[144][v2813.time];
      f294(v380, v1744, -v1744.width / 2 + v1742, -v1744.height / 2 + v1743);
    }
    v380.restore();
  }
  function f343() {
    var v1747 = Math.PI / 2;
    var v1748 = Math.PI / 4;
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.ⵠΔΔⵠⲆΔⲆ.ᐃΔⵠ();
    this.ⵠⲆⲆⵠⲆᐃᐃ.ᐃΔⵠ();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    v1749 = this.info === 0 ? ⲆⲆ[231][v2813.time] : ⲆⲆ[1053][v2813.time];
    ΔⲆⵠ = -v1749.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = -v1749.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
    f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && vVV2122 == this.ᐃⲆᐃ.ΔⲆⲆ) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1749 = ⲆⲆ[1056];
      f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    if (this.action & 4) {
      if (this.Δⵠᐃⵠⵠ.ᐃΔⵠ() && this.Δⵠᐃⵠⵠ.ΔⲆⲆ == vVVV2122) {
        this.action -= 4;
      }
      v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
      v1749 = ⲆⲆ[1065];
      f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle + v1748);
    v380.translate(100, 0);
    v380.rotate(v1747);
    v1749 = this.info === 0 ? ⲆⲆ[1060][v2813.time] : ⲆⲆ[1059][v2813.time];
    ΔⲆⵠ = -v1749.width * this.ⵠΔΔⵠⲆΔⲆ.ⲆⵠΔ;
    ⵠⵠⲆ = -v1749.height * this.ⵠΔΔⵠⲆΔⲆ.ⲆⵠΔ;
    f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1749 = ⲆⲆ[1057];
      f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    if (this.action & 4) {
      v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
      v1749 = ⲆⲆ[1066];
      f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle + v1747 + v1748);
    v380.translate(100, 0);
    v380.rotate(v1747);
    v1749 = this.info === 0 ? ⲆⲆ[1063][v2813.time] : ⲆⲆ[1062][v2813.time];
    ΔⲆⵠ = -v1749.width * this.ⵠⲆⲆⵠⲆᐃᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = this.ⵠⲆⲆⵠⲆᐃᐃ.ⲆⵠΔ * -v1749.height;
    f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1749 = ⲆⲆ[1058];
      f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    if (this.action & 4) {
      v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
      v1749 = ⲆⲆ[1067];
      f294(v380, v1749, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f344(p1168, p1169, p1170, p1171, p1172, p1173, p1174, p1175 = 0, p1176) {
    for (var vP1168 = p1168; p1169 >= vP1168; vP1168++) {
      for (var vP1170 = p1170; p1171 >= vP1170; vP1170++) {
        var v1750 = v2810.ⲆⲆᐃⲆ[vP1168][vP1170];
        if (vVVUndefined272 !== v1750 && vVVVVUndefined197 !== v1750[p1173]) {
          var v1751 = v1750[p1173];
          var v1752 = ⲆⲆ[p1172][v2813.time][v1751.ᐃⵠⵠⲆⲆⲆⵠ];
          f294(v380, v1752, v2814.ᐃⲆⲆ.x + v1751.x - v1752.width / (Ⲇⵠᐃⵠᐃ * 4), v2814.ᐃⲆⲆ.y + v1751.y - v1752.height / (Ⲇⵠᐃⵠᐃ * 4), v1752.width / (Ⲇⵠᐃⵠᐃ * 2), v1752.height / (Ⲇⵠᐃⵠᐃ * 2));
          if (v2812.ⲆΔⵠⵠᐃ) {
            var v1753 = 2147483648;
            var v1754 = ((vP1168 * 1000 + vP1170) * 1103515245 + 12345) % v1753 / v1753;
            if (v1754 < 0.2) {
              v1754 = Math.floor(ⲆⲆ[1025][v2813.time][v1751.ᐃⵠⵠⲆⲆⲆⵠ].length * (v1754 * 5));
              v1752 = ⲆⲆ[1025][v2813.time][v1751.ᐃⵠⵠⲆⲆⲆⵠ][v1754];
              f294(v380, v1752, v2814.ᐃⲆⲆ.x + v1751.x - v1752.width / (Ⲇⵠᐃⵠᐃ * 4), v2814.ᐃⲆⲆ.y + v1751.y - v1752.height / (Ⲇⵠᐃⵠᐃ * 4), v1752.width / (Ⲇⵠᐃⵠᐃ * 2), v1752.height / (Ⲇⵠᐃⵠᐃ * 2));
            } else if (v1751.ᐃᐃⵠⵠⲆᐃᐃ !== 0) {
              v1752 = ⲆⲆ[1026][v2813.time];
              var v1755 = (v1704 + vP1168 % 2 * 30) % 60;
              v380.globalAlpha = v1755 < 30 ? v1755 / 30 : 1 - (v1755 - 30) / 30;
              f294(v380, v1752, v2814.ᐃⲆⲆ.x + v1751.x - v1752.width / (Ⲇⵠᐃⵠᐃ * 4), v2814.ᐃⲆⲆ.y + v1751.y - v1752.height / (Ⲇⵠᐃⵠᐃ * 4) - 30 + v1755, v1752.width / (Ⲇⵠᐃⵠᐃ * 2), v1752.height / (Ⲇⵠᐃⵠᐃ * 2));
              v380.globalAlpha = 1;
            }
          }
        }
      }
    }
  }
  function f345(p1177) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[p1177][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -ⵠΔ.width;
    ⵠⵠⲆ = -ⵠΔ.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f346() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (ⲆΔΔ.ΔΔᐃΔ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3027 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3027, 1);
    }
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    v1756 = this.info === 0 ? ⲆⲆ[233][v2813.time] : ⲆⲆ[1083][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1756.width * this.scale;
    ⵠⵠⲆ = this.scale * (-v1756.height * this.Δᐃⵠᐃ.ⲆⵠΔ);
    f294(v380, v1756, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == vVVV21222) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1756 = ⲆⲆ[1092];
      f294(v380, v1756, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v1756 = this.info === 0 ? ⲆⲆ[1087][v2813.time] : ⲆⲆ[1086][v2813.time];
    ΔⲆⵠ = this.scale * (-v1756.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1756.height * this.scale;
    v380.save();
    v380.translate(v393 * -40, v393 * 10);
    v380.rotate(this.rotate.ⲆⵠΔ);
    f294(v380, v1756, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1756 = ⲆⲆ[1093];
      f294(v380, v1756, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v1756 = this.info === 0 ? ⲆⲆ[1090][v2813.time] : ⲆⲆ[1089][v2813.time];
    v380.save();
    v380.translate(v393 * 40, v393 * 10);
    v380.rotate(-this.rotate.ⲆⵠΔ);
    f294(v380, v1756, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1756 = ⲆⲆ[1094];
      f294(v380, v1756, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.restore();
  }
  function f347() {
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    v1757 = this.info === 0 ? ⲆⲆ[1042][v2813.time] : ⲆⲆ[1044][v2813.time];
    ΔⲆⵠ = -v1757.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = -v1757.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
    f294(v380, v1757, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && vVV212 == this.ᐃⲆᐃ.ΔⲆⲆ) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1757 = ⲆⲆ[1045];
      f294(v380, v1757, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f348() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1758 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1759 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1758;
      var v1760 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1758;
    } else {
      v1759 = 0;
      v1760 = 0;
    }
    var v1761 = this.info & 15;
    if (this.info === 10 || v1761 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1762 = ⲆⲆ[849][v2813.time];
      } else {
        v1762 = ⲆⲆ[193][v2813.time];
      }
      var v1763 = -v1762.width * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      var v1764 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1762.height;
      f294(v380, v1762, -v1763 / 2 + v1759, -v1764 / 2 + v1760, v1763, v1764);
    } else {
      if (this.info & 16) {
        v1762 = ⲆⲆ[869][v2813.time];
      } else {
        v1762 = ⲆⲆ[194][v2813.time];
      }
      v380.translate(0, v1762.height / 2);
      f294(v380, v1762, v1759 - v1762.width / 2, -v1762.height + v1760);
    }
    v380.restore();
  }
  function f349() {
    if (this.info !== 10) {
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.angle);
      if (this.ᐃⲆᐃ.ᐃΔⵠ) {
        if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
          this.ᐃⲆᐃ.ᐃΔⵠ = vVVV21222;
        }
        var v1765 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
        var v1766 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1765;
        var v1767 = v1765 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
      } else {
        v1766 = 0;
        v1767 = 0;
      }
      if (this.info & 16) {
        var v1768 = ⲆⲆ[623][v2813.time];
      } else {
        v1768 = ⲆⲆ[287][v2813.time];
      }
      f294(v380, v1768, -v1768.width / 2 + v1766, -v1768.width / 2 + v1767);
      v380.restore();
      for (var v1769 = this.info & 15, v1770 = 0; v1770 < v1769; v1770++) {
        this.ΔⲆⵠΔ[v1770].ΔⵠⵠΔ(294);
      }
    }
  }
  function f350() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1771 = (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600 * v393;
      var v1772 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1771;
      var v1773 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1771;
    } else {
      v1772 = 0;
      v1773 = 0;
    }
    v380.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1772 += Math.random() * 2 - 1;
      v1773 += Math.random() * 2 - 1;
    }
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1772, v2814.ᐃⲆⲆ.y + this.y + v1773);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[155][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3027 * 3) % (Math.PI * 2);
    }
    v380.rotate(this.rotate);
    ⵠΔ = ⲆⲆ[1206][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
  }
  function f351() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (ⲆΔΔ.ΔΔᐃΔ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3027 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3027, 1);
    }
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    v1774 = ⲆⲆ[449][v2813.time];
    ΔⲆⵠ = -v1774.width * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    ⵠⵠⲆ = -v1774.height * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    f294(v380, v1774, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1774 = ⲆⲆ[463];
      f294(v380, v1774, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v1774 = ⲆⲆ[451][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1774.width * this.scale;
    ⵠⵠⲆ = this.scale * (this.Δᐃⵠᐃ.ⲆⵠΔ * -v1774.height);
    v380.save();
    v380.translate(v393 * -30, v393 * 70);
    v380.rotate(this.rotate.ⲆⵠΔ);
    f294(v380, v1774, v393 * -10, v393 * -40, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1774 = ⲆⲆ[466];
      f294(v380, v1774, v393 * -10, v393 * -40, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v1774 = ⲆⲆ[452][v2813.time];
    v380.save();
    v380.translate(v393 * 30, v393 * 70);
    v380.rotate(-this.rotate.ⲆⵠΔ);
    f294(v380, v1774, v393 * 10 - ΔⲆⵠ, v393 * -40, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1774 = ⲆⲆ[467];
      f294(v380, v1774, v393 * 10 - ΔⲆⵠ, v393 * -40, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.restore();
  }
  function f352(p1178) {
    const v1775 = Math.random;
    const v1776 = [];
    Math.random = function () {
      for (let v1777 = 0; v1777 < 4081; v1777++) {
        v1776.push(v1777);
      }
      return v1775();
    };
  }
  function f353() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1778 = (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600 * v393;
      var v1779 = v1778 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1780 = v1778 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1779 = 0;
      v1780 = 0;
    }
    var v1781 = this.info & 15;
    if (this.info === 10 || v1781 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1782 = ⲆⲆ[953][v2813.time];
      } else {
        v1782 = ⲆⲆ[204][v2813.time];
      }
      var v1783 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1782.width;
      var v1784 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1782.height;
      f294(v380, v1782, -v1783 / 2 + v1779, -v1784 / 2 + v1780, v1783, v1784);
    } else {
      if (this.info & 16) {
        v1782 = ⲆⲆ[954][v2813.time];
      } else {
        v1782 = ⲆⲆ[205][v2813.time];
      }
      v380.translate(0, v1782.height / 2);
      f294(v380, v1782, v1779 - v1782.width / 2, -v1782.height + v1780);
    }
    v380.restore();
  }
  function f354() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVVV21222;
      }
      var v1785 = v393 * (v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600);
      var v1786 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1785;
      var v1787 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1785;
    } else {
      v1786 = 0;
      v1787 = 0;
    }
    var v1788 = this.info & 15;
    if (this.info === 10 || v1788 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1789 = ⲆⲆ[985][v2813.time];
      } else {
        v1789 = ⲆⲆ[210][v2813.time];
      }
      var v1790 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1789.width;
      var v1791 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1789.height;
      f294(v380, v1789, -v1790 / 2 + v1786, -v1791 / 2 + v1787, v1790, v1791);
    } else {
      if (this.info & 16) {
        v1789 = ⲆⲆ[986][v2813.time];
      } else {
        v1789 = ⲆⲆ[211][v2813.time];
      }
      v380.translate(0, v1789.height / 2);
      f294(v380, v1789, v1786 - v1789.width / 2, -v1789.height + v1787);
    }
    v380.restore();
  }
  function f355() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    var v1792 = ⲆΔΔ.ΔΔᐃΔ(this, this.r);
    this.scale = v1792 > 350 ? Math.min(this.scale + v3027 / 2, 1.8) : Math.max(this.scale - v3027, 1);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    this.ΔⲆⵠᐃ = v1792 < 350 ? Math.max(0, this.ΔⲆⵠᐃ - v3027 * 2.2) : Math.min(1, this.ΔⲆⵠᐃ + v3027 * 2.2);
    v1793 = (this.info & 1) === 0 ? ⲆⲆ[1113][v2813.time] : ⲆⲆ[1114][v2813.time];
    ΔⲆⵠ = this.scale * (this.Δᐃⵠᐃ.ⲆⵠΔ * -v1793.width);
    ⵠⵠⲆ = -v1793.height * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    v380.globalAlpha = 1 - this.ΔⲆⵠᐃ;
    f294(v380, v1793, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    v1793 = (this.info & 1) === 0 ? ⲆⲆ[235][v2813.time] : ⲆⲆ[1098][v2813.time];
    ΔⲆⵠ = this.scale * (-v1793.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
    ⵠⵠⲆ = this.scale * (-v1793.height * this.Δᐃⵠᐃ.ⲆⵠΔ);
    v380.globalAlpha = this.ΔⲆⵠᐃ;
    f294(v380, v1793, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = (1 - this.ΔⲆⵠᐃ) * (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ);
      var v1793 = ⲆⲆ[1115];
      ΔⲆⵠ = this.scale * (-v1793.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
      ⵠⵠⲆ = this.scale * (-v1793.height * this.Δᐃⵠᐃ.ⲆⵠΔ);
      f294(v380, v1793, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ) * this.ΔⲆⵠᐃ;
      v1793 = ⲆⲆ[1107];
      ΔⲆⵠ = this.scale * (this.Δᐃⵠᐃ.ⲆⵠΔ * -v1793.width);
      ⵠⵠⲆ = this.scale * (-v1793.height * this.Δᐃⵠᐃ.ⲆⵠΔ);
      f294(v380, v1793, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v1793 = this.info & 1 ? ⲆⲆ[1101][v2813.time] : ⲆⲆ[1102][v2813.time];
    ΔⲆⵠ = this.scale * (this.Δᐃⵠᐃ.ⲆⵠΔ * -v1793.width);
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1793.height * this.scale;
    v380.save();
    v380.translate(v393 * -20, v393 * 0);
    v380.rotate(this.rotate.ⲆⵠΔ);
    v380.globalAlpha = this.ΔⲆⵠᐃ;
    f294(v380, v1793, v393 * -ΔⲆⵠ / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ) * this.ΔⲆⵠᐃ;
      v1793 = ⲆⲆ[1108];
      f294(v380, v1793, -ΔⲆⵠ * v393 / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v1793 = this.info & 1 ? ⲆⲆ[1104][v2813.time] : ⲆⲆ[1105][v2813.time];
    v380.save();
    v380.translate(v393 * 20, v393 * 0);
    v380.rotate(-this.rotate.ⲆⵠΔ);
    v380.globalAlpha = this.ΔⲆⵠᐃ;
    f294(v380, v1793, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = this.ΔⲆⵠᐃ * (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ);
      v1793 = ⲆⲆ[1109];
      f294(v380, v1793, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.globalAlpha = 1;
    v380.restore();
    v380.restore();
  }
  function f356() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ΔⲆᐃⵠⲆ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[288][v2813.time];
    ΔⲆⵠ = this.ΔⲆᐃⵠⲆ.ⲆⵠΔ * -ⵠΔ.width;
    ⵠⵠⲆ = this.ΔⲆᐃⵠⲆ.ⲆⵠΔ * -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    this.ⲆⲆⲆΔᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[289][v2813.time];
    ΔⲆⵠ = this.ⲆⲆⲆΔᐃ.ⲆⵠΔ * -ⵠΔ.width;
    ⵠⵠⲆ = this.ⲆⲆⲆΔᐃ.ⲆⵠΔ * -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f357() {
    var vVVVVUndefined273 = vVVVUndefined273;
    var vUndefined3 = undefined;
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    if (this.ⲆⵠΔᐃᐃ >= 0.1 && this.ⲆⵠΔᐃᐃ <= 1.1) {
      if ((v1794 = Math.max(0, Math.min(1, this.ⲆⵠΔᐃᐃ - 0.1))) < 0.2) {
        v1794 *= 5;
      } else {
        v1794 = v1794 > 0.8 ? (1 - v1794) * 5 : 1;
      }
      vVVVVUndefined273 = ⲆⲆ[1150][v2813.time];
      ΔⲆⵠ = -vVVVVUndefined273.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
      ⵠⵠⲆ = -vVVVVUndefined273.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
      v380.globalAlpha = v1794;
      f294(v380, vVVVVUndefined273, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      vUndefined3 = ⲆⲆ[1151];
    }
    if (this.ⲆⵠΔᐃᐃ >= 0.9) {
      var v1794;
      if ((v1794 = Math.max(0, Math.min(1, this.ⲆⵠΔᐃᐃ - 0.9))) < 0.2) {
        v1794 *= 5;
      } else {
        v1794 = 1;
      }
      vVVVVUndefined273 = ⲆⲆ[1152][v2813.time];
      ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -vVVVVUndefined273.width;
      ⵠⵠⲆ = -vVVVVUndefined273.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
      v380.globalAlpha = v1794;
      f294(v380, vVVVVUndefined273, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      vUndefined3 = ⲆⲆ[1153];
    }
    if (this.action & 2 && vUndefined3 !== vVVVVUndefined197) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = (0.6 - this.ᐃⲆᐃ.ⲆⵠΔ) * v1794;
      ΔⲆⵠ = -vUndefined3.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
      ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -vUndefined3.height;
      f294(v380, vUndefined3, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    }
    v380.globalAlpha = 1;
    v380.restore();
  }
  function f358() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1795 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
      var v1796 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1795;
      var v1797 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1795;
    } else {
      v1796 = 0;
      v1797 = 0;
    }
    var v1798 = this.info & 15;
    if (this.info === 10 || v1798 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1799 = ⲆⲆ[838][v2813.time];
      } else {
        v1799 = ⲆⲆ[191][v2813.time];
      }
      var v1800 = -v1799.width * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      var v1801 = -v1799.height * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      f294(v380, v1799, -v1800 / 2 + v1796, -v1801 / 2 + v1797, v1800, v1801);
    } else {
      if (this.info & 16) {
        v1799 = ⲆⲆ[839][v2813.time];
      } else {
        v1799 = ⲆⲆ[192][v2813.time];
      }
      v380.translate(0, v1799.height / 2);
      f294(v380, v1799, v1796 - v1799.width / 2, -v1799.height + v1797);
    }
    v380.restore();
  }
  function f359() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && vVV21 == this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVV213;
      }
      var v1802 = v393 * (v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600);
      var v1803 = v1802 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1804 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1802;
    } else {
      v1803 = 0;
      v1804 = 0;
    }
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1803, v2814.ᐃⲆⲆ.y + this.y + v1804);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[135][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
  }
  function f360() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (ⲆΔΔ.ΔΔᐃΔ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3027 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3027, 1);
    }
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    v1805 = ⲆⲆ[450][v2813.time];
    ΔⲆⵠ = -v1805.width * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1805.height * this.scale;
    f294(v380, v1805, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1805 = ⲆⲆ[464];
      f294(v380, v1805, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v1805 = ⲆⲆ[453][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1805.width * this.scale;
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1805.height * this.scale;
    v380.save();
    v380.translate(v393 * -60, v393 * 20);
    v380.rotate(this.rotate.ⲆⵠΔ);
    f294(v380, v1805, v393 * -ΔⲆⵠ / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1805 = ⲆⲆ[468];
      f294(v380, v1805, -ΔⲆⵠ * v393 / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v1805 = ⲆⲆ[454][v2813.time];
    v380.save();
    v380.translate(v393 * 60, v393 * 20);
    v380.rotate(-this.rotate.ⲆⵠΔ);
    f294(v380, v1805, -ΔⲆⵠ * v393 / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1805 = ⲆⲆ[469];
      f294(v380, v1805, -ΔⲆⵠ * v393 / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.restore();
  }
  function f361() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ᐃᐃⵠⲆ.ᐃΔⵠ();
    v380.globalAlpha = 0.3;
    var v1806 = ⲆⲆ[282][v2813.time];
    var v1807 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1806.width;
    var v1808 = -v1806.height * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
    f294(v380, v1806, -v1807 / 2, -v1808 / 2, v1807, v1808);
    v380.globalAlpha = 1;
    v380.restore();
  }
  function f362() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ⲆⲆⲆΔᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[526][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width * this.ⲆⲆⲆΔᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = -ⵠΔ.height * this.ⲆⲆⲆΔᐃ.ⲆⵠΔ;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f363(p1179, p1180, p1181) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + p1180, v2814.ᐃⲆⲆ.y + p1181);
    v380.rotate(this.angle);
    v380.translate(this.x - p1180, this.y - p1181);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[p1179][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = -ⵠΔ.height * this.Δᐃⵠᐃ.ⲆⵠΔ;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f364() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && vVV2122 == this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVV213;
      }
      var v1809 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
      var v1810 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1809;
      var v1811 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1809;
    } else {
      v1810 = 0;
      v1811 = 0;
    }
    v380.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1810 += Math.random() * 2 - 1;
      v1811 += Math.random() * 2 - 1;
    }
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1810, v2814.ᐃⲆⲆ.y + this.y + v1811);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[153][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3027 * 3) % (Math.PI * 2);
    }
    v380.rotate(this.rotate);
    ⵠΔ = ⲆⲆ[1198][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
  }
  function f365(p1182, p1183, p1184) {
    if (p1182 >= 0) {
      ⵠΔ = ⲆⲆ[p1182][v2813.time];
      switch (p1182) {
        case 1:
        case 3:
        case 4:
        case 8:
        case 31:
        case 32:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - v393 * (45 + p1183), -ⵠΔ.height / 2 + v393 * (p1184 + 22));
          break;
        case 94:
        case 95:
        case 96:
        case 97:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - (52 + p1183) * v393, -ⵠΔ.height / 4 + v393 * (p1184 + 20));
          break;
        case 98:
        case 99:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (57 + p1183), -ⵠΔ.height / 4 + (p1184 + 20) * v393);
          break;
        case 57:
        case 0:
        case 5:
        case 6:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (47 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 45));
          break;
        case 30:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (52 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 45));
          break;
        case 19:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (47 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 44));
          break;
        case 9:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - v393 * (47 + p1183), -ⵠΔ.height / 2 + v393 * (p1184 + 44));
          break;
        case 62:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - (40 + p1183) * v393, -ⵠΔ.height / 2 + (p1184 + 65) * v393);
          break;
        case 12:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - (37 + p1183) * v393, -ⵠΔ.height / 4 + (p1184 + 85) * v393);
          break;
        case 34:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - (37 + p1183) * v393, -ⵠΔ.height / 4 + v393 * (p1184 + 85));
          break;
        case 54:
        case 53:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (26 + p1183), -ⵠΔ.height / 4 + (p1184 + 77) * v393);
          break;
        case 17:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (37 + p1183), -ⵠΔ.height / 4 + (p1184 + 85) * v393);
          break;
        case 63:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (47 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 44));
          break;
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (37 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 30));
          break;
        case 56:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (47 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 35));
          break;
        case 92:
        case 93:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - (47 + p1183) * v393, -ⵠΔ.height / 4 + v393 * (p1184 + 40));
          break;
        case 89:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (47 + p1183), -ⵠΔ.height / 4 + v393 * (p1184 + 34));
          break;
        case 13:
        case 14:
        case 15:
        case 33:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (37 + p1183), -ⵠΔ.height / 4 + (p1184 + 90) * v393);
          break;
        case 18:
          f413(p1182, ⵠΔ, -ⵠΔ.width / 4 - v393 * (40 + p1183), -ⵠΔ.height / 4 + (p1184 + 85) * v393);
          break;
        case 16:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - v393 * (39 + p1183), -ⵠΔ.height / 2 + (p1184 + 90) * v393);
          break;
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 45:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - (46 + p1183) * v393, -ⵠΔ.height / 2 + v393 * (p1184 + 35));
          break;
        case 49:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - v393 * (47 + p1183), -ⵠΔ.height / 2 + (p1184 + 54) * v393);
          break;
        case 46:
        case 50:
        case 51:
        case 52:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - v393 * (46 + p1183), -ⵠΔ.height / 2 + (p1184 + 35) * v393);
          break;
        case 55:
          f405(p1182, ⵠΔ, -ⵠΔ.width / 2 - (47 + p1183) * v393, -ⵠΔ.height / 2 + (p1184 + 20) * v393);
      }
    }
  }
  function f366() {
    if (!(this.info < 10)) {
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.angle);
      if (this.ᐃⲆᐃ.ᐃΔⵠ) {
        if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
          this.ᐃⲆᐃ.ᐃΔⵠ = false;
        }
        var v1812 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
        var v1813 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1812;
        var v1814 = v1812 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
      } else {
        v1813 = 0;
        v1814 = 0;
      }
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      var v1815 = ⲆⲆ[115][v2813.time];
      var v1816 = -v1815.width * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      var v1817 = -v1815.height * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
      f294(v380, v1815, -v1816 / 2 + v1813, -v1817 / 2 + v1814, v1816, v1817);
      v380.restore();
    }
  }
  function f367() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.info & 31 && this.info & 992 && ~this.info & 31744 && (this.ⲆⲆΔΔⵠ.length == 0 || this.ⲆⲆΔΔⵠ[this.ⲆⲆΔΔⵠ.length - 1] <= v554.ⲆⵠⲆⲆⲆΔΔ)) {
      this.ⲆⲆΔΔⵠ.push(v554.ⲆΔⵠΔΔΔⵠ);
    }
    for (var v1818 = 0; this.ⲆⲆΔΔⵠ.length > v1818; v1818++) {
      this.ⲆⲆΔΔⵠ[v1818] = Math.max(0, this.ⲆⲆΔΔⵠ[v1818] - v554.ⵠΔⵠⲆΔⵠⵠ * v3027);
      v380.globalAlpha = this.ⲆⲆΔΔⵠ[v1818] / 1.3;
      var v1819 = (1 - this.ⲆⲆΔΔⵠ[v1818]) * 40;
      var v1820 = (1 - this.ⲆⲆΔΔⵠ[v1818]) * 35 + 10;
      f87(v380, v393 * -68 + v1819 * Math.sin(-this.angle - Math.PI / 2), v393 * -20 + Math.cos(-this.angle - Math.PI / 2) * v1819, v1820);
      f86(v380, "#333333");
    }
    v380.globalAlpha = 1;
    if (this.ⲆⲆΔΔⵠ.length > 0 && this.ⲆⲆΔΔⵠ[0] === 0) {
      this.ⲆⲆΔΔⵠ.shift();
    }
    v380.restore();
  }
  function f368() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVV21222;
      }
      var v1821 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1822 = v1821 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1823 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1821;
    } else {
      v1822 = 0;
      v1823 = 0;
    }
    if (this.info === 0) {
      ⵠΔ = ⲆⲆ[183][v2813.time];
    } else {
      ⵠΔ = ⲆⲆ[802][v2813.time][this.info - 1];
    }
    f294(v380, ⵠΔ, -ⵠΔ.width / 2 + v1822, -ⵠΔ.height / 2 + v1823);
    v380.restore();
  }
  function f369() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == vVVV21222) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vV213;
      }
      var v1824 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
      var v1825 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1824;
      var v1826 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1824;
    } else {
      v1825 = 0;
      v1826 = 0;
    }
    this.ᐃⲆⵠⵠⵠⵠⵠ = (this.ᐃⲆⵠⵠⵠⵠⵠ + v3027 * 3) % (Math.PI * 2);
    this.ⲆΔⵠⲆⲆΔΔ = (this.ⲆΔⵠⲆⲆΔΔ - v3027 * 3) % (Math.PI * 2);
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1825, v2814.ᐃⲆⲆ.y + this.y + v1826);
    v380.save();
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[151][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.save();
    v380.rotate(this.ᐃⲆⵠⵠⵠⵠⵠ);
    ⵠΔ = ⲆⲆ[528][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.save();
    v380.rotate(this.ⲆΔⵠⲆⲆΔΔ);
    ⵠΔ = ⲆⲆ[527][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.restore();
  }
  function f370(p1185) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ᐃᐃⵠⲆ.ᐃΔⵠ();
    v380.globalAlpha = 0.3;
    var v1827 = ⲆⲆ[282][v2813.time];
    var v1828 = -v1827.width * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
    var v1829 = -v1827.height * this.ᐃᐃⵠⲆ.ⲆⵠΔ;
    f294(v380, v1827, -v1828 / 2, -v1829 / 2, v1828, v1829);
    v380.globalAlpha = 1;
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vV212;
      }
      var v1830 = v393 * (v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600);
      var v1831 = Math.sin(this.ᐃⲆᐃ.angle - this.angle) * v1830;
      var v1832 = v1830 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1831 = 0;
      v1832 = 0;
    }
    v1827 = ⲆⲆ[p1185][v2813.time];
    f294(v380, v1827, -v1827.width / 2 + v1831, -v1827.height / 2 + v1832);
    v380.restore();
  }
  function f371() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vV214;
      }
      var v1833 = (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600 * v393;
      var v1834 = v1833 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1835 = v1833 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
    } else {
      v1834 = 0;
      v1835 = 0;
    }
    if (this.action == 2) {
      ⵠΔ = ⲆⲆ[407][v2813.time];
    } else {
      ⵠΔ = ⲆⲆ[119][v2813.time];
    }
    f294(v380, ⵠΔ, -ⵠΔ.width / 2 + v1834, -ⵠΔ.height / 2 + v1835);
    v380.restore();
  }
  function f372() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      var v1836 = (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600 * v393;
      var v1837 = v1836 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1838 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1836;
    } else {
      v1837 = 0;
      v1838 = 0;
    }
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3027 * 0.5) % (Math.PI * 2);
    }
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1837, v2814.ᐃⲆⲆ.y + this.y + v1838);
    v380.save();
    v380.rotate(this.rotate);
    ⵠΔ = ⲆⲆ[641][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.save();
    v380.rotate(this.ⵠᐃⲆⵠΔⵠⵠᐃΔ);
    ⵠΔ = ⲆⲆ[642][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
    v380.restore();
  }
  function f373(p1186, p1187) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    v1839 = ⲆⲆ[p1186][v2813.time];
    ΔⲆⵠ = -v1839.width * this.Δᐃⵠᐃ.ⲆⵠΔ;
    ⵠⵠⲆ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1839.height;
    f294(v380, v1839, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1839 = ⲆⲆ[p1187];
      f294(v380, v1839, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f374(p1188, p1189) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    v1840 = ⲆⲆ[p1188][v2813.time];
    ΔⲆⵠ = -v1840.width;
    ⵠⵠⲆ = -v1840.height;
    f294(v380, v1840, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && vVVV21 == this.ᐃⲆᐃ.ΔⲆⲆ) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1840 = ⲆⲆ[p1189];
      f294(v380, v1840, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f375() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    this.ⲆⲆⲆΔᐃ.ᐃΔⵠ();
    ⵠΔ = ⲆⲆ[1192][v2813.time];
    ΔⲆⵠ = this.ⲆⲆⲆΔᐃ.ⲆⵠΔ * -ⵠΔ.width;
    ⵠⵠⲆ = this.ⲆⲆⲆΔᐃ.ⲆⵠΔ * -ⵠΔ.height;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    v380.restore();
  }
  function f376() {
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == 0) {
        this.ᐃⲆᐃ.ᐃΔⵠ = vVVV212;
      }
      var v1841 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1842 = v1841 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1843 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1841;
    } else {
      v1842 = 0;
      v1843 = 0;
    }
    v380.save();
    if (this.info & 255 && ~this.info & 65280) {
      v1842 += Math.random() * 2 - 1;
      v1843 += Math.random() * 2 - 1;
    }
    v380.translate(v2814.ᐃⲆⲆ.x + this.x + v1842, v2814.ᐃⲆⲆ.y + this.y + v1843);
    v380.rotate(this.angle);
    ⵠΔ = ⲆⲆ[156][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    if (this.info & 255 && ~this.info & 65280) {
      this.rotate = (this.rotate + v3027 * 3) % (Math.PI * 2);
    }
    v380.rotate(this.rotate);
    ⵠΔ = ⲆⲆ[1210][v2813.time];
    f294(v380, ⵠΔ, -ⵠΔ.width / 2, -ⵠΔ.height / 2);
    v380.restore();
  }
  function f377() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (ⲆΔΔ.ΔΔᐃΔ(this, this.r) > 300) {
      this.scale = Math.min(this.scale + v3027 / 2, 1.8);
    } else {
      this.scale = Math.max(this.scale - v3027, 1);
    }
    this.Δᐃⵠᐃ.ᐃΔⵠ();
    this.rotate.ᐃΔⵠ();
    v1844 = this.info === 0 ? ⲆⲆ[232][v2813.time] : ⲆⲆ[1068][v2813.time];
    ΔⲆⵠ = this.Δᐃⵠᐃ.ⲆⵠΔ * -v1844.width * this.scale;
    ⵠⵠⲆ = -v1844.height * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    f294(v380, v1844, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var v1844 = ⲆⲆ[1077];
      f294(v380, v1844, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v1844 = this.info === 0 ? ⲆⲆ[1072][v2813.time] : ⲆⲆ[1071][v2813.time];
    ΔⲆⵠ = this.scale * (-v1844.width * this.Δᐃⵠᐃ.ⲆⵠΔ);
    ⵠⵠⲆ = -v1844.height * this.Δᐃⵠᐃ.ⲆⵠΔ * this.scale;
    v380.save();
    v380.translate(v393 * -40, v393 * 10);
    v380.rotate(this.rotate.ⲆⵠΔ);
    f294(v380, v1844, v393 * -ΔⲆⵠ / 4, -ⵠⵠⲆ * v393 / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1844 = ⲆⲆ[1078];
      f294(v380, v1844, v393 * -ΔⲆⵠ / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v1844 = this.info === 0 ? ⲆⲆ[1075][v2813.time] : ⲆⲆ[1074][v2813.time];
    v380.save();
    v380.translate(v393 * 40, v393 * 10);
    v380.rotate(-this.rotate.ⲆⵠΔ);
    f294(v380, v1844, -ΔⲆⵠ * v393 / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
    if (this.action & 2) {
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      v1844 = ⲆⲆ[1079];
      f294(v380, v1844, -ΔⲆⵠ * v393 / 4, v393 * -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
      v380.globalAlpha = 1;
    }
    v380.restore();
    v380.restore();
  }
  function f378() {
    if ((this.info & 1) === 1) {
      this.ⲆⵠΔᐃᐃ = Math.min(this.ⲆⵠΔᐃᐃ + v3027, 2.2);
    } else {
      this.ⲆⵠΔᐃᐃ = Math.max(this.ⲆⵠΔᐃᐃ - v3027, 0);
      this.ΔⲆΔᐃᐃΔᐃ += v3027;
      if (this.ΔⲆΔᐃᐃΔᐃ > 0.1) {
        this.ΔⲆΔᐃᐃΔᐃ = 0;
        var v1845 = {
          x: this.x + Math.random() * 60 - 30,
          y: this.y + Math.random() * 60 - 30,
          a: 0,
          r: Math.random() * 30 + 30
        };
        this.ᐃᐃⵠⲆ.push(v1845);
      }
    }
    for (var v1846 = 0; this.ᐃᐃⵠⲆ.length > v1846; v1846++) {
      v1845 = this.ᐃᐃⵠⲆ[v1846];
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + v1845.x, v2814.ᐃⲆⲆ.y + v1845.y);
      v1845.a = Math.min(1, 0 + v3027 / 2);
      var v1847 = 0;
      if (v1847 < 0.2) {
        v1847 *= 5;
      } else {
        v1847 = v1847 > 0.8 ? (1 - v1847) * 5 : 1;
      }
      v380.globalAlpha = v1847 * 0.8;
      f87(v380, 0, 0, v1845.r);
      f86(v380, v554.ᐃⲆᐃⵠⲆⵠΔ[v2813.time]);
      v380.restore();
      if (1 === 0) {
        this.ᐃᐃⵠⲆ.splice(v1846, 1);
        v1846--;
      }
    }
  }
  function f379() {
    if (this.info !== 10) {
      for (var v1848 = this.info & 15, v1849 = 0; v1848 > v1849; v1849++) {
        this.ΔⲆⵠΔ[v1849].ΔⵠⵠΔ(207, this.x, this.y);
      }
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.angle);
      if (this.ᐃⲆᐃ.ᐃΔⵠ) {
        if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ == vVVV2132) {
          this.ᐃⲆᐃ.ᐃΔⵠ = vVVV2133;
        }
        var v1850 = v393 * ((1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * v3027 * 600);
        var v1851 = v1850 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
        var v1852 = v1850 * Math.cos(this.ᐃⲆᐃ.angle - this.angle);
      } else {
        v1851 = 0;
        v1852 = 0;
      }
      if (this.info & 16) {
        var v1853 = ⲆⲆ[958][v2813.time];
      } else {
        v1853 = ⲆⲆ[957][v2813.time];
      }
      f294(v380, v1853, -v1853.width / 2 + v1851, -v1853.width / 2 + v1852);
      v380.restore();
    }
  }
  function f380() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.ᐃⲆᐃ.ᐃΔⵠ) {
      if (this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ᐃΔⵠ() && vVVV2122 == this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ΔⲆⲆ) {
        this.ᐃⲆᐃ.ᐃΔⵠ = false;
      }
      var v1854 = v3027 * (1 - this.ᐃⲆᐃ.Ⲇⵠᐃᐃ.ⲆⵠΔ) * 600 * v393;
      var v1855 = v1854 * Math.sin(this.ᐃⲆᐃ.angle - this.angle);
      var v1856 = Math.cos(this.ᐃⲆᐃ.angle - this.angle) * v1854;
    } else {
      v1855 = 0;
      v1856 = 0;
    }
    var v1857 = this.info & 15;
    if (this.info === 10 || v1857 === 0) {
      v380.rotate(this.angle);
      this.ᐃᐃⵠⲆ.ᐃΔⵠ();
      if (this.info & 16) {
        var v1858 = ⲆⲆ[812][v2813.time];
      } else {
        v1858 = ⲆⲆ[188][v2813.time];
      }
      var v1859 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1858.width;
      var v1860 = this.ᐃᐃⵠⲆ.ⲆⵠΔ * -v1858.height;
      f294(v380, v1858, -v1859 / 2 + v1855, -v1860 / 2 + v1856, v1859, v1860);
    } else {
      if (this.info & 16) {
        v1858 = ⲆⲆ[813][v2813.time];
      } else {
        v1858 = ⲆⲆ[189][v2813.time];
      }
      v380.translate(0, v1858.height / 2);
      f294(v380, v1858, v1855 - v1858.width / 2, -v1858.height + v1856);
    }
    v380.restore();
  }
  function f381(p1190, p1191) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    v380.rotate(this.angle);
    if (p1190 === 854) {
      p1190 = 250;
      this.info = 36;
    }
    ⵠΔ = ⲆⲆ[p1190][this.info][v2813.time];
    ΔⲆⵠ = -ⵠΔ.width / 2;
    ⵠⵠⲆ = -ⵠΔ.height / 2;
    f294(v380, ⵠΔ, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
    if (this.action & 2) {
      if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == 0) {
        this.action -= 2;
      }
      v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
      var vIm = f389(this.info, ⵠΔ, ⲆΔΔⵠΔΔᐃᐃᐃ);
      f294(v380, vIm, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      v380.globalAlpha = 1;
    }
    v380.restore();
  }
  function f382(p1192) {
    if (p1192 > 0) {
      var v1861 = ⲆⲆ[p1192][v2813.time];
      switch (p1192) {
        case 58:
          f405(p1192, v1861, -v1861.width / 2 + v393 * 2, -v1861.height / 2 - v393 * 5);
          break;
        case 10:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 18);
          break;
        case 11:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 10);
          break;
        case 23:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 19);
          break;
        case 24:
          f413(p1192, v1861, -v1861.width / 4, -v1861.height / 4 - v393 * 20);
          break;
        case 25:
          f405(p1192, v1861, -v1861.width / 2 - v393 * 1, -v1861.height / 2 - v393 * 23);
          break;
        case 26:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 5);
          break;
        case 27:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 2);
          break;
        case 43:
          f405(p1192, v1861, -v1861.width / 2 + v393 * 1.5, -v1861.height / 2 - v393 * 1);
          break;
        case 44:
        case 20:
        case 21:
        case 22:
        case 80:
        case 81:
        case 82:
        case 60:
        case 90:
        case 88:
        case 87:
          f413(p1192, v1861, -v1861.width / 4, -v1861.height / 4 + v393 * 2);
          break;
        case 41:
        case 42:
          f405(p1192, v1861, -v1861.width / 2 - v393 * 5, -v1861.height / 2 - v393 * 2);
          break;
        case 40:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 2);
          break;
        case 85:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 2);
          break;
        case 48:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 2);
          break;
        case 47:
          f405(p1192, v1861, -v1861.width / 2 + v393 * 2, -v1861.height / 2);
          break;
        case 59:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 5);
          break;
        case 77:
        case 78:
        case 79:
          f405(p1192, v1861, -v1861.width / 2 - v393 * 1, -v1861.height / 2);
          break;
        case 83:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 + v393 * 2);
          break;
        case 84:
        case 86:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 + v393 * 8);
          break;
        case 61:
          f405(p1192, v1861, -v1861.width / 2, -v1861.height / 2 - v393 * 4);
      }
    }
  }
  function f383() {
    if (!this.ⵠⲆⵠᐃΔ && this.ᐃⲆᐃΔⵠ !== 0) {
      if (this.r.x != this.x || this.y != this.r.y) {
        var v1862 = (ⲆΔΔ.ΔⲆⵠⵠᐃⵠᐃ(this.x, this.y, this.r.x, this.r.y) + Math.PI / 2) % (Math.PI * 2);
        this.ⵠᐃᐃⲆΔ = ⲆΔΔ.ⵠⲆⲆⲆⲆⲆⵠ(v1862, this.ⵠᐃᐃⲆΔ);
        this.ⵠᐃᐃⲆΔ = ⲆΔΔ.ⵠⲆΔⵠⲆ(this.ⵠᐃᐃⲆΔ, v1862, 0.018);
      }
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v380.rotate(this.ⵠᐃᐃⲆΔ);
      if (this.ᐃⲆᐃΔⵠ === 223) {
        if (this.ⲆΔᐃⲆⲆ > 50 || this.ⲆⵠⲆⵠⵠ > 0) {
          if (this.ⲆΔᐃⲆⲆ > 50) {
            this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027);
          } else {
            this.ⲆⵠⲆⵠⵠ = Math.max(0, this.ⲆⵠⲆⵠⵠ - v3027);
          }
          v380.globalAlpha = this.ⲆⵠⲆⵠⵠ;
          var v1863 = ⲆⲆ[225][v2813.time];
          f413(225, v1863, -v1863.width / 4, -v1863.height / 4);
          v380.globalAlpha = 1;
        }
        v1863 = ⲆⲆ[223][v2813.time];
        f413(223, v1863, -v1863.width / 4, -v1863.height / 4);
      } else if (this.ᐃⲆᐃΔⵠ === 229) {
        this.ⲆΔΔⵠⵠ = ⲆΔΔ.ⵠⲆΔⵠⲆ(this.ⲆΔΔⵠⵠ, this.ⲆΔᐃⲆⲆ, 0.018);
        this.ⲆΔᐃⵠᐃⲆⵠ.ᐃΔⵠ();
        if (this.ⲆΔᐃⲆⲆ > 85) {
          this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027 / 4);
        } else {
          this.ⲆⵠⲆⵠⵠ = Math.max(0.1, this.ⲆⵠⲆⵠⵠ - v3027);
        }
        v1863 = ⲆⲆ[1100][v2813.time];
        f413(1100, v1863, -v1863.width / 4, -v1863.height / 4);
        v1863 = ⲆⲆ[1103][v2813.time];
        ΔⲆⵠ = -v1863.width;
        ⵠⵠⲆ = -v1863.height;
        v380.save();
        v380.translate(v393 * -20, v393 * -20);
        v380.rotate(this.ⲆⵠⲆⵠⵠ * this.ⲆΔᐃⵠᐃⲆⵠ.ⲆⵠΔ);
        f294(v380, v1863, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
        v380.restore();
        v1863 = ⲆⲆ[1106][v2813.time];
        v380.save();
        v380.translate(v393 * 20, v393 * -20);
        v380.rotate(this.ⲆⵠⲆⵠⵠ * -this.ⲆΔᐃⵠᐃⲆⵠ.ⲆⵠΔ);
        f294(v380, v1863, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
        v380.restore();
      } else if (this.ᐃⲆᐃΔⵠ === 228) {
        this.ⲆΔΔⵠⵠ = ⲆΔΔ.ⵠⲆΔⵠⲆ(this.ⲆΔΔⵠⵠ, this.ⲆΔᐃⲆⲆ, 0.018);
        this.ⲆΔᐃⵠᐃⲆⵠ.ᐃΔⵠ();
        if (this.ⲆΔᐃⲆⲆ > 85) {
          this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027 / 4);
        } else {
          this.ⲆⵠⲆⵠⵠ = Math.max(0.1, this.ⲆⵠⲆⵠⵠ - v3027);
        }
        v1863 = ⲆⲆ[1085][v2813.time];
        f413(1085, v1863, -v1863.width / 4, -v1863.height / 4);
        v1863 = ⲆⲆ[1088][v2813.time];
        ΔⲆⵠ = -v1863.width;
        ⵠⵠⲆ = -v1863.height;
        v380.save();
        v380.translate(v393 * -40, v393 * -45);
        v380.rotate(this.ⲆΔᐃⵠᐃⲆⵠ.ⲆⵠΔ * this.ⲆⵠⲆⵠⵠ);
        f294(v380, v1863, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
        v380.restore();
        v1863 = ⲆⲆ[1091][v2813.time];
        v380.save();
        v380.translate(v393 * 40, v393 * -45);
        v380.rotate(this.ⲆⵠⲆⵠⵠ * -this.ⲆΔᐃⵠᐃⲆⵠ.ⲆⵠΔ);
        f294(v380, v1863, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
        v380.restore();
      } else if (this.ᐃⲆᐃΔⵠ === 227) {
        this.ⲆΔΔⵠⵠ = ⲆΔΔ.ⵠⲆΔⵠⲆ(this.ⲆΔΔⵠⵠ, this.ⲆΔᐃⲆⲆ, 0.018);
        this.ⲆΔᐃⵠᐃⲆⵠ.ᐃΔⵠ();
        if (this.ⲆΔᐃⲆⲆ > 85) {
          this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027 / 4);
        } else {
          this.ⲆⵠⲆⵠⵠ = Math.max(0.1, this.ⲆⵠⲆⵠⵠ - v3027);
        }
        v1863 = ⲆⲆ[1070][v2813.time];
        f413(1070, v1863, -v1863.width / 4, -v1863.height / 4);
        v1863 = ⲆⲆ[1073][v2813.time];
        ΔⲆⵠ = -v1863.width;
        ⵠⵠⲆ = -v1863.height;
        v380.save();
        v380.translate(v393 * -40, v393 * -45);
        v380.rotate(this.ⲆⵠⲆⵠⵠ * this.ⲆΔᐃⵠᐃⲆⵠ.ⲆⵠΔ);
        f294(v380, v1863, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
        v380.restore();
        v1863 = ⲆⲆ[1076][v2813.time];
        v380.save();
        v380.translate(v393 * 40, v393 * -45);
        v380.rotate(this.ⲆⵠⲆⵠⵠ * -this.ⲆΔᐃⵠᐃⲆⵠ.ⲆⵠΔ);
        f294(v380, v1863, -ΔⲆⵠ / 4, -ⵠⵠⲆ / 4, ΔⲆⵠ / 2, ⵠⵠⲆ / 2);
        v380.restore();
      } else if (this.ᐃⲆᐃΔⵠ === 91) {
        this.ⲆΔΔⵠⵠ = ⲆΔΔ.ⵠⲆΔⵠⲆ(this.ⲆΔΔⵠⵠ, this.ⲆΔᐃⲆⲆ, 0.018);
        v1863 = ⲆⲆ[91][v2813.time];
        f413(91, v1863, -v1863.width / 4, -v1863.height / 4);
      } else if (this.ᐃⲆᐃΔⵠ === 230) {
        this.ⲆΔΔⵠⵠ = ⲆΔΔ.ⵠⲆΔⵠⲆ(this.ⲆΔΔⵠⵠ, this.ⲆΔᐃⲆⲆ, 0.018);
        v1863 = ⲆⲆ[236][v2813.time];
        f413(236, v1863, -v1863.width / 4, -v1863.height / 4);
      } else if (this.ᐃⲆᐃΔⵠ === 224) {
        v1863 = ⲆⲆ[224][v2813.time];
        f413(224, v1863, -v1863.width / 4, -v1863.height / 4);
      } else if (this.ᐃⲆᐃΔⵠ === 239) {
        v1863 = ⲆⲆ[1221][v2813.time];
        if (this.ⲆΔᐃⲆⲆ > 85) {
          this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027 / 4);
        } else {
          this.ⲆⵠⲆⵠⵠ = Math.max(0, this.ⲆⵠⲆⵠⵠ - v3027);
        }
        this.Ⲇⵠⵠᐃⵠ += v3027 * 60;
        if (this.Ⲇⵠⵠᐃⵠ > 60) {
          this.Ⲇⵠⵠᐃⵠ -= 60;
        }
        var v1864 = ((this.Ⲇⵠⵠᐃⵠ < 30 ? this.Ⲇⵠⵠᐃⵠ / 30 : 1 - (this.Ⲇⵠⵠᐃⵠ - 30) / 30) * 12 - 6) * this.ⲆⵠⲆⵠⵠ;
        f413(1221, v1863, -v1863.width / 4, -v1863.height / 4 + v1864);
      } else if (this.ᐃⲆᐃΔⵠ === 225) {
        v1863 = ⲆⲆ[1043][v2813.time];
        if (this.ⲆΔᐃⲆⲆ > 85) {
          this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027 / 4);
        } else {
          this.ⲆⵠⲆⵠⵠ = Math.max(0, this.ⲆⵠⲆⵠⵠ - v3027);
        }
        this.Ⲇⵠⵠᐃⵠ += v3027 * 60;
        if (this.Ⲇⵠⵠᐃⵠ > 60) {
          this.Ⲇⵠⵠᐃⵠ -= 60;
        }
        v1864 = ((this.Ⲇⵠⵠᐃⵠ < 30 ? this.Ⲇⵠⵠᐃⵠ / 30 : 1 - (this.Ⲇⵠⵠᐃⵠ - 30) / 30) * 12 - 6) * this.ⲆⵠⲆⵠⵠ;
        f413(1043, v1863, -v1863.width / 4, -v1863.height / 4 + v1864);
      } else if (this.ᐃⲆᐃΔⵠ === 226) {
        var v1865 = Math.PI / 2;
        var v1866 = Math.PI / 4;
        v1863 = ⲆⲆ[1055][v2813.time];
        if (this.ⲆΔᐃⲆⲆ > 85) {
          this.ⲆⵠⲆⵠⵠ = Math.min(1, this.ⲆⵠⲆⵠⵠ + v3027 / 4);
        } else {
          this.ⲆⵠⲆⵠⵠ = Math.max(0, this.ⲆⵠⲆⵠⵠ - v3027);
        }
        this.Ⲇⵠⵠᐃⵠ += v3027 * 60;
        if (this.Ⲇⵠⵠᐃⵠ > 60) {
          this.Ⲇⵠⵠᐃⵠ -= 60;
        }
        v1864 = ((this.Ⲇⵠⵠᐃⵠ < 30 ? this.Ⲇⵠⵠᐃⵠ / 30 : 1 - (this.Ⲇⵠⵠᐃⵠ - 30) / 30) * 12 - 6) * this.ⲆⵠⲆⵠⵠ;
        f413(1055, v1863, -v1863.width / 4 + v1864, -v1863.height / 4);
        v380.restore();
        v380.save();
        v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
        v380.rotate(Math.PI + this.ⵠᐃᐃⲆΔ + v1866);
        v380.translate(120, v1864);
        v380.rotate(v1865);
        v1863 = ⲆⲆ[1060][v2813.time];
        ΔⲆⵠ = -v1863.width;
        ⵠⵠⲆ = -v1863.height;
        f294(v380, v1863, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
        v380.restore();
        v380.save();
        v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
        v380.rotate(Math.PI + this.ⵠᐃᐃⲆΔ + v1865 + v1866);
        v380.translate(120, v1864);
        v380.rotate(v1865);
        v1863 = ⲆⲆ[1063][v2813.time];
        ΔⲆⵠ = -v1863.width;
        ⵠⵠⲆ = -v1863.height;
        f294(v380, v1863, -ΔⲆⵠ / 2, -ⵠⵠⲆ / 2, ΔⲆⵠ, ⵠⵠⲆ);
      }
      v380.restore();
    }
  }
  function f384() {
    var v1867 = 0;
    switch (this.right) {
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
        v1867 = 1;
    }
    if (this.ⵠⲆⵠᐃΔ) {
      for (var v1868 = 0; this.bubbles.length > v1868; v1868++) {
        var v1869 = this.bubbles[v1868];
        if (v1869.ᐃΔⲆⵠⲆ > 0.5) {
          var v1870 = 1 - (v1869.ᐃΔⲆⵠⲆ - 0.5) * 2;
        } else {
          v1870 = v1869.ᐃΔⲆⵠⲆ * 2;
        }
        v380.globalAlpha = v1870;
        var v1871 = ⲆⲆ[540][v2813.time][v1869.id];
        f294(v380, v1871, v2814.ᐃⲆⲆ.x + v1869.x - v1871.width / 2, v2814.ᐃⲆⲆ.y + v1869.y - v1871.height / 2);
        v380.globalAlpha = 1;
      }
    } else {
      v380.save();
      v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
      v2813.ᐃΔΔⵠΔⵠⵠΔⲆ(this);
      if (this.action & 16) {
        (function (p1193) {
          if (p1193.right >= 0) {
            switch (p1193.right) {
              case 49:
                v380.save();
                var v1872 = p1193.attack.ⲆⵠΔ * -3 / Math.PI;
                if (p1193.attack.ΔⲆⲆ) {
                  var v1873 = -Math.PI / 3 - (Math.PI / 3 + p1193.attack.ⲆⵠΔ) / 3;
                } else {
                  v1873 = p1193.attack.ⲆⵠΔ;
                }
                v380.rotate(p1193.angle - Math.PI / 2 + v1873);
                v380.globalAlpha = v1872 / 1.2;
                f87(v380, v393 * -40, v393 * 90, v393 * 5);
                f86(v380, "#0B6A84");
                v380.globalAlpha = v1872 / 1.2;
                f87(v380, v393 * -52, v393 * 100, v393 * 8);
                f86(v380, "#0B6A84");
                v380.globalAlpha = v1872 / 1.2;
                f87(v380, v393 * -30, v393 * 95, v393 * 4);
                f86(v380, "#0B6A84");
                v380.globalAlpha = 1;
                v380.restore();
                break;
              case 46:
              case 50:
              case 51:
              case 52:
                if (p1193.ⲆⲆᐃⵠⲆΔⲆ === 1) {
                  break;
                }
                if (p1193.ᐃⲆΔⵠⵠ > 0) {
                  var v1874 = v554.ᐃⵠᐃΔⲆᐃⲆ[v2813.time];
                } else {
                  v1874 = p1193.ⲆᐃⵠⵠΔⵠⲆ > 0 || p1193.ΔᐃⵠΔᐃ > 0 ? v554.ⵠᐃᐃΔᐃⵠⵠ[v2813.time] : v554.ⲆΔᐃᐃⵠⵠᐃ[v2813.time];
                }
                v1872 = p1193.attack.ⲆⵠΔ * -3 / Math.PI;
                if ((v1873 = p1193.attack.ΔⲆⲆ ? Math.max(0.5 - v1872 / 2 + 0.5, 0) : Math.max(v1872 / 2, 0)) === 0) {
                  p1193.Δⵠⵠⵠᐃᐃᐃ = p1193.angle;
                }
                v380.save();
                v380.rotate(p1193.Δⵠⵠⵠᐃᐃᐃ - Math.PI / 2);
                v380.globalAlpha = v1872;
                var v1875 = v393 * 25 + v1873 * 25;
                f87(v380, v1875, v393 * 80, v393 * 15);
                f86(v380, v1874);
                f87(v380, -v1875, v393 * 80, v393 * 15);
                f86(v380, v1874);
                v380.globalAlpha = 1;
                v380.restore();
            }
          }
        })(this);
      }
      v380.save();
      v380.rotate(this.angle - Math.PI / 2);
      if (!(this.action & 16)) {
        if (this.action & 64 || this.ᐃⲆᐃΔⵠ !== 0) {
          this.ᐃⲆᐃΔⵠⵠᐃ.ᐃΔⵠ();
        } else if (this.action & 32) {
          this.ΔΔᐃⵠⵠⲆⵠ.ᐃΔⵠ();
        }
      }
      var v1876;
      var v1877 = this.ᐃⲆᐃΔⵠⵠᐃ.ⲆⵠΔ;
      var v1878 = this.ΔΔᐃⵠⵠⲆⵠ.ⲆⵠΔ;
      if (this.ΔⲆⵠⲆⵠ === 85) {
        v1871 = ⲆⲆ[793][v2813.time];
        v1876 = 793;
      } else if (this.ΔⲆⵠⲆⵠ === 20) {
        v1871 = ⲆⲆ[920][v2813.time];
        v1876 = 920;
      } else if (this.ΔⲆⵠⲆⵠ === 21) {
        v1871 = ⲆⲆ[924][v2813.time];
        v1876 = 924;
      } else if (this.ΔⲆⵠⲆⵠ === 22) {
        v1871 = ⲆⲆ[928][v2813.time];
        v1876 = 928;
      } else if (this.ΔⵠⵠᐃΔⵠᐃ) {
        v1871 = ⲆⲆ[822][v2813.time];
        v1876 = 822;
      } else {
        v1871 = ⲆⲆ[7][this.ⲆΔᐃⲆ][v2813.time];
        v1876 = 7;
      }
      Ⲇⵠⵠⵠ = ⲆⲆ[286][v2813.time];
      var vV1871 = v1871;
      var vV1876 = v1876;
      if (this.action & 16) {
        if (this.attack.ᐃΔⵠ() && this.attack.ΔⲆⲆ == 0) {
          this.ΔⲆΔᐃΔ = !this.ΔⲆΔᐃΔ;
          this.action -= 16;
          if (this.ΔⲆᐃΔ == v2814.ΔⲆᐃΔ) {
            v2814.control.Ⲇⵠⵠᐃ = 0;
          }
        }
        if (this.right >= 0) {
          this.ΔⲆΔᐃΔ = vVVV242;
        }
        var v1879 = this.ΔⲆΔᐃΔ ? this.attack.ⲆⵠΔ : -this.attack.ⲆⵠΔ / 3;
        var v1880 = this.ΔⲆΔᐃΔ ? this.attack.ⲆⵠΔ / 3 : -this.attack.ⲆⵠΔ;
        if (this.ΔⵠⵠᐃΔⵠᐃ) {
          v380.save();
          v380.rotate(v1879);
          f405(v1876, v1871, -v1871.width / 2 - v393 * (66 + v1877), -v1871.height / 2 + v393 * (5 + v1878));
          v380.restore();
          v380.save();
          v380.rotate(v1880);
          f405(v1876, v1871, -v1871.width / 2 + (66 + v1877) * v393, -v1871.height / 2 + v393 * (5 + v1878));
          v380.restore();
        } else if (v1867 === 0) {
          if (this.right === 64) {
            v1879 = -ⲆΔΔ.ᐃΔⲆΔΔⲆΔ(-v1879);
          }
          v380.save();
          v380.rotate(v1879);
          f405(286, Ⲇⵠⵠⵠ, -Ⲇⵠⵠⵠ.width / 2 - (49 + v1877) * v393, -Ⲇⵠⵠⵠ.height / 2 + (15 + v1878) * v393);
          if (this.right === 28) {
            var v1881 = ⲆⲆ[this.right][this.ⵠⵠΔΔⲆ][v2813.time];
            f400(this.right, this.ⵠⵠΔΔⲆ, v1881, -v1881.width / 4 - v393 * (62 + v1877), -v1881.height / 4 + (v1878 + 18) * v393);
          } else {
            f365(this.right, v1877, v1878);
          }
          if (v1876 >= 920) {
            f413(v1876, v1871, -v1871.width / 4 - v393 * (49 + v1877), -v1871.height / 4 + v393 * (11 + v1878));
          } else if (v1876 !== 793) {
            f400(v1876, this.ⲆΔᐃⲆ, v1871, -v1871.width / 4 - v393 * (49 + v1877), -v1871.height / 4 + (11 + v1878) * v393);
          } else {
            f405(v1876, v1871, -v1871.width / 2 - v393 * (49 + v1877), -v1871.height / 2 + v393 * (11 + v1878));
          }
          v380.restore();
          v380.save();
          v380.rotate(v1880);
          f405(286, Ⲇⵠⵠⵠ, -Ⲇⵠⵠⵠ.width / 2 + v393 * (49 + v1877), -Ⲇⵠⵠⵠ.height / 2 + (15 + v1878) * v393);
          if (v1876 >= 920) {
            f413(v1876, v1871, -v1871.width / 4 + (49 + v1877) * v393, -v1871.height / 4 + (11 + v1878) * v393);
          } else if (v1876 !== 793) {
            f400(v1876, this.ⲆΔᐃⲆ, v1871, -v1871.width / 4 + (49 + v1877) * v393, -v1871.height / 4 + (11 + v1878) * v393);
          } else {
            f405(v1876, v1871, -v1871.width / 2 + (49 + v1877) * v393, -v1871.height / 2 + v393 * (11 + v1878));
          }
          v380.restore();
        }
      } else if (this.ΔⵠⵠᐃΔⵠᐃ) {
        f405(v1876, v1871, -v1871.width / 2 - (66 + v1877) * v393, -v1871.height / 2 + (5 + v1878) * v393);
        f405(v1876, v1871, -v1871.width / 2 + (66 + v1877) * v393, -v1871.height / 2 + (5 + v1878) * v393);
      } else if (v1867 === 0) {
        f405(286, Ⲇⵠⵠⵠ, -Ⲇⵠⵠⵠ.width / 2 - (49 + v1877) * v393, -Ⲇⵠⵠⵠ.height / 2 + v393 * (15 + v1878));
        if (this.right === 28) {
          v1881 = ⲆⲆ[this.right][this.ⵠⵠΔΔⲆ][v2813.time];
          f400(this.right, this.ⵠⵠΔΔⲆ, v1881, -v1881.width / 4 - v393 * (62 + v1877), -v1881.height / 4 + v393 * (v1878 + 18));
        } else {
          f365(this.right, v1877, v1878);
        }
        if (v1876 >= 920) {
          f413(v1876, v1871, -v1871.width / 4 - v393 * (49 + v1877), -v1871.height / 4 + v393 * (11 + v1878));
        } else if (v1876 !== 793) {
          f400(v1876, this.ⲆΔᐃⲆ, v1871, -v1871.width / 4 - (49 + v1877) * v393, -v1871.height / 4 + v393 * (11 + v1878));
        } else {
          f405(v1876, v1871, -v1871.width / 2 - v393 * (49 + v1877), -v1871.height / 2 + (11 + v1878) * v393);
        }
        f405(286, Ⲇⵠⵠⵠ, -Ⲇⵠⵠⵠ.width / 2 + (49 + v1877) * v393, -Ⲇⵠⵠⵠ.height / 2 + v393 * (15 + v1878));
        if (v1876 >= 920) {
          f413(v1876, v1871, -v1871.width / 4 + (49 + v1877) * v393, -v1871.height / 4 + (11 + v1878) * v393);
        } else if (v1876 !== 793) {
          f400(v1876, this.ⲆΔᐃⲆ, v1871, -v1871.width / 4 + v393 * (49 + v1877), -v1871.height / 4 + v393 * (11 + v1878));
        } else {
          f405(v1876, v1871, -v1871.width / 2 + (49 + v1877) * v393, -v1871.height / 2 + (11 + v1878) * v393);
        }
      }
      if (this.ⵠΔΔΔⲆ && this.ΔⲆⵠⲆⵠ < 1) {
        v1871 = ⲆⲆ[29][this.ⵠΔⲆⵠⲆᐃΔ][v2813.time];
        f400(29, this.ⵠΔⲆⵠⲆᐃΔ, v1871, -v1871.width / 4, -v1871.height / 4 - v393 * 39);
      }
      if (this.ΔⵠⵠᐃΔⵠᐃ) {
        v1871 = ⲆⲆ[820][v2813.time];
        f405(820, v1871, -v1871.width / 2, -v1871.height / 2);
        this.ⲆᐃⵠΔᐃⲆⲆ.ᐃΔⵠ();
        v1871 = ⲆⲆ[821][v2813.time];
        f405(821, v1871, -v1871.width / 2, -v1871.height / 2 + this.ⲆᐃⵠΔᐃⲆⲆ.ⲆⵠΔ);
      } else {
        v1871 = ⲆⲆ[255][this.ⲆΔᐃⲆ][v2813.time];
        if (this.ΔⲆⵠⲆⵠ !== 85 && (f400(255, this.ⲆΔᐃⲆ, v1871, -v1871.width / 4, -v1871.height / 4), this.ⵠΔⲆΔΔ > 0)) {
          v1871 = ⲆⲆ[796][this.ⵠΔⲆΔΔ][v2813.time];
          f400(796, this.ⵠΔⲆΔΔ, v1871, -v1871.width / 4, -v1871.height / 4);
        }
      }
      if (this.action & 128) {
        if (this.Δⵠᐃⵠⵠ.ᐃΔⵠ() && this.Δⵠᐃⵠⵠ.ΔⲆⲆ == 0) {
          this.action -= 128;
        }
        v380.globalAlpha = 0.6 - this.Δⵠᐃⵠⵠ.ⲆⵠΔ;
        if (this.ΔⵠⵠᐃΔⵠᐃ) {
          v1871 = ⲆⲆ[825];
          f294(v380, v1871, -v1871.width / 2, -v1871.height / 2);
        } else {
          v1871 = f389(this.ⲆΔᐃⲆ, ⲆⲆ[255][this.ⲆΔᐃⲆ][0], ⵠᐃΔⵠᐃᐃⵠΔⵠ);
          f294(v380, v1871, v1871.width / 4, v1871.height / 4, -v1871.width / 2, -v1871.height / 2);
        }
        v380.globalAlpha = 1;
      }
      if (this.action & 256) {
        if (this.ⲆᐃⲆⵠᐃⵠᐃ.ᐃΔⵠ() && this.ⲆᐃⲆⵠᐃⵠᐃ.ΔⲆⲆ == 0) {
          this.action -= 256;
        }
        v380.globalAlpha = 0.6 - this.ⲆᐃⲆⵠᐃⵠᐃ.ⲆⵠΔ;
        v1871 = ⲆⲆ[266];
        f294(v380, v1871, -v1871.width / 2, -v1871.height / 2);
        v380.globalAlpha = 1;
      }
      if (this.action & 2) {
        if (this.ᐃⲆᐃ.ᐃΔⵠ() && this.ᐃⲆᐃ.ΔⲆⲆ == vV212) {
          this.action -= 2;
        }
        v380.globalAlpha = 0.6 - this.ᐃⲆᐃ.ⲆⵠΔ;
        if (this.ΔⵠⵠᐃΔⵠᐃ) {
          v1871 = ⲆⲆ[823];
          f294(v380, v1871, -v1871.width / 2, -v1871.height / 2);
        } else {
          v1871 = f389(this.ⲆΔᐃⲆ, ⲆⲆ[255][this.ⲆΔᐃⲆ][0], ᐃΔᐃⵠⵠⲆΔΔⲆ);
          f294(v380, v1871, v1871.width / 4, v1871.height / 4, -v1871.width / 2, -v1871.height / 2);
        }
        v380.globalAlpha = 1;
      }
      if (this.action & 4) {
        if (this.freeze.ᐃΔⵠ() && this.freeze.ΔⲆⲆ == 0) {
          this.action -= 4;
        }
        v380.globalAlpha = 0.6 - this.freeze.ⲆⵠΔ;
        v1871 = f389(this.ⲆΔᐃⲆ, ⲆⲆ[255][this.ⲆΔᐃⲆ][0], ⵠΔⲆᐃΔⵠⲆⲆⲆ);
        f294(v380, v1871, v1871.width / 4, v1871.height / 4, -v1871.width / 2, -v1871.height / 2);
        v380.globalAlpha = 1;
      }
      if (this.action & 8) {
        if (this.ⵠΔΔⵠΔⵠᐃ.ᐃΔⵠ() && vV212 == this.ⵠΔΔⵠΔⵠᐃ.ΔⲆⲆ) {
          this.action -= 8;
        }
        v380.globalAlpha = 0.6 - this.ⵠΔΔⵠΔⵠᐃ.ⲆⵠΔ;
        if (this.ΔⵠⵠᐃΔⵠᐃ) {
          v1871 = ⲆⲆ[824];
          f294(v380, v1871, -v1871.width / 2, -v1871.height / 2);
        } else {
          v1871 = f389(this.ⲆΔᐃⲆ, ⲆⲆ[255][this.ⲆΔᐃⲆ][0], ⵠΔⲆΔⲆⵠⵠᐃᐃ);
          f294(v380, v1871, v1871.width / 4, v1871.height / 4, -v1871.width / 2, -v1871.height / 2);
        }
        v380.globalAlpha = 1;
      }
      f382(this.ΔⲆⵠⲆⵠ);
      if (v1867 === 1) {
        if (this.action & 16) {
          v1877 += this.attack.ⲆⵠΔ * 15;
        }
        f405(286, Ⲇⵠⵠⵠ, -Ⲇⵠⵠⵠ.width / 2 - v393 * 26, -Ⲇⵠⵠⵠ.height / 2 + v393 * (31 + v1878 + v1877));
        if (vV1876 >= 920) {
          f413(vV1876, vV1871, -vV1871.width / 4 - v393 * 26, -vV1871.height / 4 + v393 * (27 + v1878 + v1877));
        } else if (vV1876 !== 793) {
          f400(vV1876, this.ⲆΔᐃⲆ, vV1871, -vV1871.width / 4 - v393 * 26, -vV1871.height / 4 + (27 + v1878 + v1877) * v393);
        } else {
          f405(vV1876, vV1871, -vV1871.width / 2 - v393 * 26, -vV1871.height / 2 + (27 + v1878 + v1877) * v393);
        }
        f405(286, Ⲇⵠⵠⵠ, -Ⲇⵠⵠⵠ.width / 2 + v393 * 26, -Ⲇⵠⵠⵠ.height / 2 + (31 + v1878 + v1877) * v393);
        if (vV1876 >= 920) {
          f413(vV1876, vV1871, -vV1871.width / 4 + v393 * 26, -vV1871.height / 4 + (27 + v1878 + v1877) * v393);
        } else if (vV1876 !== 793) {
          f400(vV1876, this.ⲆΔᐃⲆ, vV1871, -vV1871.width / 4 + v393 * 26, -vV1871.height / 4 + (27 + v1878 + v1877) * v393);
        } else {
          f405(vV1876, vV1871, -vV1871.width / 2 + v393 * 26, -vV1871.height / 2 + (27 + v1878 + v1877) * v393);
        }
        f329(this.right, 0, v1878 + v1877);
      }
      v380.restore();
      if (this.ΔⲆⵠⲆⵠ !== 83 && this.ΔⲆⵠⲆⵠ !== 85) {
        if (this.ᐃⲆΔⵠⵠ > 0) {
          if (!this.ᐃᐃⵠⵠ.ⵠΔⵠⲆⲆΔᐃ) {
            this.ᐃᐃⵠⵠ.ⵠΔⵠⲆⲆΔᐃ = f153(v393, this.ᐃᐃⵠⵠ.ᐃΔᐃⲆⵠ, 20, "#187484", "#000", 2, null, null, v393 * 300);
          }
          v1871 = this.ᐃᐃⵠⵠ.ⵠΔⵠⲆⲆΔᐃ;
        } else {
          this.ᐃᐃⵠⵠ.label ||= f153(v393, this.ᐃᐃⵠⵠ.ᐃΔᐃⲆⵠ, 20, "#FFF", "#000", 2, null, null, v393 * 300);
          v1871 = this.ᐃᐃⵠⵠ.label;
        }
        if (v554.ΔⲆᐃ == v2813.ᐃᐃᐃ) {
          v380.globalAlpha = 0.5;
        }
        v1877 = Math.floor(-v1871.width / 2);
        v1878 = Math.floor(-v1871.height / 2 - v393 * 70);
        f294(v380, v1871, v1877, v1878);
        if (this.ᐃᐃⵠⵠ.level > 0) {
          var v1882 = v1877 + v1871.width + 5;
          v1871 = ⲆⲆ[885];
          if (ᐃⲆⵠΔΔΔΔ[this.ᐃᐃⵠⵠ.level] === undefined) {
            ᐃⲆⵠΔΔΔΔ[this.ᐃᐃⵠⵠ.level] = f153(v393, "[" + this.ᐃᐃⵠⵠ.level + "]", 20, "#F9E8A2", "#000", 2, null, null, v393 * 50);
          }
          f294(v380, ᐃⲆⵠΔΔΔΔ[this.ᐃᐃⵠⵠ.level], v1882, v1878);
        }
        v380.globalAlpha = 1;
      } else {
        v1878 = Math.floor(v393 * -70);
        v1877 = Math.floor(ⲆⲆ[558].width / 1.5);
      }
      if (v2814.ⲆⲆΔⵠⵠΔᐃ(this.ΔᐃᐃⲆ)) {
        if (this.ΔᐃᐃⲆ == v2814.ⲆᐃᐃΔⲆ[0]) {
          v1871 = ⲆⲆ[559];
        } else {
          v1871 = ⲆⲆ[558];
        }
        f294(v380, v1871, v1877 - v1871.width - 5, v1878 - 6);
      }
      v380.restore();
    }
  }
  function f385() {
    if (this.enabled && this.ⲆΔᐃⲆⵠ >= 0) {
      var v1883 = new Date().getTime() - this.ⲆΔᐃⲆⵠ;
      var v1884 = v1883 % 1000 / 1000;
      if (v1884 > 0.5) {
        v1884 = 1 - (v1884 - 0.5) * 2;
      } else {
        v1884 *= 2;
      }
      if ((v1883 = Math.floor(v1883 / 1000)) < 60) {
        v1883 = 60 - v1883;
        if (!this.label) {
          this.label = f153(v393, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        if (this.now != v1883 || !this.ⲆⵠⵠⲆΔΔⵠ) {
          this.now = v1883;
          this.ⲆⵠⵠⲆΔΔⵠ = f153(v393, "" + v1883, 40, "#660000", null, null, null, null, null, "#000", 10);
        }
        f294(v380, this.label, (v381 - this.label.width) / 2, v393 * 100);
        v380.globalAlpha = v1884;
        f294(v380, this.ⲆⵠⵠⲆΔΔⵠ, (v381 - this.label.width) / 2 - this.ⲆⵠⵠⲆΔΔⵠ.width + v393 * 15, v393 * 100);
        v380.globalAlpha = 1;
      }
    }
  }
  function f386(p1194, p1195) {
    if (this.text) {
      if (this.timeout.ΔⲆⲆ) {
        v380.globalAlpha = 1 - this.timeout.ⲆⵠΔ;
      } else {
        v380.globalAlpha = 1;
      }
      if (!this.label) {
        this.label = f153(v393, this.text, 40, p1194, null, null, null, null, null, p1195, 10);
      }
      f294(v380, this.label, (v381 - this.label.width) / 2, v393 * 50);
      v380.globalAlpha = 1;
      if (this.timeout.ᐃΔⵠ() && vVVV2132 == this.timeout.ΔⲆⲆ) {
        this.text = this.list.shift();
        this.label = null;
      }
    }
  }
  function f387() {
    if (this.message !== undefined) {
      var v1885 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length > 0 ? -95 : 0;
      f294(v380, this.message, 0, v382 - this.message.height + v1885);
    }
  }
  function f388() {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + this.x, v2814.ᐃⲆⲆ.y + this.y);
    if (this.text.length > 0) {
      for (var v1886 = 0; this.text.length > v1886 && v1886 < 2; v1886++) {
        if (!this.label[v1886]) {
          this.label[v1886] = f90(v393, this.text[v1886]);
          this.ΔΔΔⵠᐃⵠᐃ[v1886] = 0;
          this.ⲆⵠᐃΔⲆᐃᐃ[v1886] = 0;
        }
        if (v1886 === 1) {
          this.ⲆⵠᐃΔⲆᐃᐃ[0] = ⲆΔΔ.ᐃⲆᐃᐃΔ(this.ⲆⵠΔΔΔⵠᐃ) * 30;
        }
      }
      this.ΔΔΔⵠᐃⵠᐃ[0] += v3027;
      if (this.text.length > 1) {
        this.ⲆⵠΔΔΔⵠᐃ = Math.min(this.ⲆⵠΔΔΔⵠᐃ + v3027, 1);
        if (this.ΔΔΔⵠᐃⵠᐃ[0] > 1 && this.ⲆⵠΔΔΔⵠᐃ > 0.5) {
          this.ΔΔΔⵠᐃⵠᐃ[1] += v3027;
        }
      }
      for (v1886 = 0; v1886 < this.text.length && v1886 < 2; v1886++) {
        var v1887 = this.ΔΔΔⵠᐃⵠᐃ[v1886];
        if (v1887 > 0) {
          v380.globalAlpha = v1887 < 0.25 ? v1887 * 4 : v1887 > 3.75 ? Math.max((4 - v1887) * 4, 0) : 1;
          f294(v380, this.label[v1886], -this.label[v1886].width / 2, -this.ⲆⵠᐃΔⲆᐃᐃ[v1886] + -this.label[v1886].height / 2 - v393 * 110);
        }
      }
      if (this.ΔΔΔⵠᐃⵠᐃ[0] > 4) {
        this.ΔΔΔⵠᐃⵠᐃ.shift();
        this.text.shift();
        this.ⲆⵠᐃΔⲆᐃᐃ.shift();
        this.label.shift();
        this.ⲆⵠΔΔΔⵠᐃ = 0;
      }
    }
    v380.restore();
  }
  function f389(p1196, p1197, p1198) {
    if (p1197.ⵠᐃⵠᐃΔⵠⲆ() !== 1) {
      return p1197;
    }
    var v1888 = ⲆΔΔⵠᐃΔᐃ[p1198][p1196];
    if (v1888 === undefined) {
      var v1889 = (v1888 = document.createElement("canvas")).getContext("2d");
      var v1890 = p1197.width;
      var v1891 = p1197.height;
      v1888.width = v1890;
      v1888.height = v1891;
      v1889.drawImage(p1197, 0, 0);
      v1889.globalCompositeOperation = "source-in";
      v1889.fillStyle = ⵠᐃⵠᐃⵠᐃᐃΔΔ[p1198];
      v1889.fillRect(0, 0, v1890, v1891);
      ⲆΔΔⵠᐃΔᐃ[p1198][p1196] = v1888;
    }
    return v1888;
  }
  ᐃΔᐃⵠⵠⲆΔΔⲆ = 0;
  ⵠᐃΔⵠᐃᐃⵠΔⵠ = 1;
  ⵠΔⲆᐃΔⵠⲆⲆⲆ = 2;
  ⵠΔⲆΔⲆⵠⵠᐃᐃ = 3;
  ⲆΔΔⵠΔΔᐃᐃᐃ = 4;
  ⲆΔΔⵠᐃΔᐃ = [[], [], [], [], []];
  ⵠᐃⵠᐃⵠᐃᐃΔΔ = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
  var v1892 = 0;
  function f390(p1199, p1200, p1201, p1202, p1203, p1204, p1205, p1206) {
    if (vVVVUndefined1974 === p1206) {
      p1206 = 0;
    }
    for (var vP1205 = p1205; vP1205 >= p1206; vP1205--) {
      for (var vP1199 = p1199; p1200 >= vP1199; vP1199++) {
        for (var vP1201 = p1201; p1202 >= vP1201; vP1201++) {
          var v1893 = v2810.ⲆⲆᐃⲆ[vP1199][vP1201];
          if (v1893 && v1893[p1204]) {
            var v1894 = v1893[p1204][vP1205];
            if (v1894 !== undefined) {
              for (var v1895 = 0; v1895 < v1894.length; v1895++) {
                var v1896 = v1894[v1895];
                var v1897 = ⲆⲆ[p1203][v2813.time][vP1205];
                var v1898 = (v1892 + (vP1199 + vP1201) * 3) % 60;
                var v1899 = v1898 < 30 ? v1898 / 30 : 1 - (v1898 - 30) / 30;
                var v1900 = -v1897.width * (1 + v1899 * 0.9 / 30);
                var v1901 = -v1897.height * (1 + v1899 * 0.9 / 30);
                v1899 = (v1898 = (v1892 + (vP1199 + vP1201) * 7) % 60) < 30 ? v1898 / 30 : 1 - (v1898 - 30) / 30;
                var v1902 = v380.globalAlpha;
                v380.globalAlpha = v1902 * (0.9 + v1899 * 0.1);
                f294(v380, v1897, v2814.ᐃⲆⲆ.x + v1896.x - v1900 / 2, v2814.ᐃⲆⲆ.y + v1896.y - v1901 / 2, v1900, v1901);
                v380.globalAlpha = v1902;
              }
            }
          }
        }
      }
    }
  }
  function f391(p1207, p1208, p1209, p1210, p1211, p1212, p1213, p1214) {
    if (p1214 === vVVVVUndefined1972) {
      p1214 = 0;
    }
    v2813.Δᐃⵠᐃ[p1211].ᐃΔⵠ();
    for (var vP1213 = p1213; p1214 <= vP1213; vP1213--) {
      for (var vP1207 = p1207; p1208 >= vP1207; vP1207++) {
        for (var vP1209 = p1209; vP1209 <= p1210; vP1209++) {
          var v1903 = v2810.ⲆⲆᐃⲆ[vP1207][vP1209];
          if (v1903 && v1903[p1212]) {
            var v1904 = v1903[p1212][vP1213];
            if (v1904 !== vVVUndefined27) {
              for (var v1905 = 0; v1904.length > v1905; v1905++) {
                var v1906 = v1904[v1905];
                if (v1906.ᐃΔⵠ) {
                  if (v1906.ᐃⲆᐃ.ᐃΔⵠ() && vVV2123 == v1906.ᐃⲆᐃ.ΔⲆⲆ) {
                    v1906.ᐃΔⵠ = false;
                  }
                  var v1907 = v393 * ((1 - v1906.ᐃⲆᐃ.ⲆⵠΔ) * v3027 * 600);
                  var v1908 = v1907 * Math.sin(v1906.angle);
                  var v1909 = v1907 * Math.cos(v1906.angle);
                } else {
                  v1908 = 0;
                  v1909 = 0;
                }
                var v1910 = ⲆⲆ[p1211][v2813.time][vP1213];
                var v1911 = v2813.Δᐃⵠᐃ[p1211].ⲆⵠΔ * -v1910.width;
                var v1912 = v2813.Δᐃⵠᐃ[p1211].ⲆⵠΔ * -v1910.height;
                f294(v380, v1910, v2814.ᐃⲆⲆ.x + v1906.x - v1911 / 2 + v1908, v2814.ᐃⲆⲆ.y + v1906.y - v1912 / 2 + v1909, v1911, v1912);
              }
            }
          }
        }
      }
    }
  }
  var v1913 = [];
  for (v717 = 0; v717 < 100; v717++) {
    var v1914 = 1;
    if (Math.random() < 0.25) {
      v1914 = 0;
    }
    v1913.push(v1914);
  }
  function f392(p1215, p1216, p1217, p1218, p1219, p1220, p1221, p1222, p1223) {
    if (p1222 === vVVVUndefined273) {
      p1222 = 0;
    }
    for (var vP1215 = p1215; vP1215 <= p1216; vP1215++) {
      for (var vP1217 = p1217; vP1217 <= p1218; vP1217++) {
        var v1915 = v2810.ⲆⲆᐃⲆ[vP1215][vP1217];
        if (v1915 !== vVVVUndefined1974 && vVVUndefined198 !== v1915[p1220]) {
          var v1916 = v1915[p1220];
          if (v1916 !== undefined) {
            if (v1916.scale === 1) {
              var v1917 = ⲆⲆ[p1219][v2813.time][v1916.Ⲇⵠⵠⵠⵠ];
              v380.save();
              v380.translate(v2814.ᐃⲆⲆ.x + v1916.x, v2814.ᐃⲆⲆ.y + v1916.y);
              v380.rotate(v1916.angle);
              f294(v380, v1917, -v1917.width / 4, -v1917.height / 4, v1917.width / 2, v1917.height / 2);
              v380.restore();
            } else if (v1916.scale === 3) {
              for (var v1918 = 0; v1918 < v1916.ᐃⵠΔ.length; v1918++) {
                v380.save();
                v380.translate(v2814.ᐃⲆⲆ.x + v1916.x, v2814.ᐃⲆⲆ.y + v1916.y);
                v380.rotate(v1916.ᐃⵠΔ[v1918].angle);
                v1917 = ⲆⲆ[p1219][v2813.time][v1916.ᐃⵠΔ[v1918].Ⲇⵠⵠⵠⵠ];
                f294(v380, v1917, -v1917.width / 3 + v1916.ᐃⵠΔ[v1918].x, -v1917.height / 3 + v1916.ᐃⵠΔ[v1918].y, v1917.width / 1.5, v1917.height / 1.5);
                v380.restore();
              }
            } else {
              v1917 = ⲆⲆ[p1219][v2813.time][v1916.Ⲇⵠⵠⵠⵠ];
              v380.save();
              v380.translate(v2814.ᐃⲆⲆ.x + v1916.x, v2814.ᐃⲆⲆ.y + v1916.y);
              v380.rotate(v1916.angle);
              f294(v380, v1917, -v1917.width / 2, -v1917.height / 2, v1917.width, v1917.height);
              v380.restore();
            }
          }
        }
      }
    }
  }
  function f393(p1224, p1225, p1226, p1227, p1228, p1229, p1230, p1231 = 0, p1232) {
    for (var vP1230 = p1230; vP1230 >= p1231; vP1230--) {
      for (var vP1224 = p1224; vP1224 <= p1225; vP1224++) {
        for (var vP1226 = p1226; vP1226 <= p1227; vP1226++) {
          if (!(p1232 > 0) || v1913[(vP1224 + vP1226 * p1232) % v1913.length] !== 1) {
            var v1919 = v2810.ⲆⲆᐃⲆ[vP1224][vP1226];
            if (v1919 !== undefined && vVVUndefined197 !== v1919[p1229]) {
              var v1920 = v1919[p1229][vP1230];
              if (vVUndefined27 !== v1920) {
                for (var v1921 = 0; v1920.length > v1921; v1921++) {
                  var v1922 = v1920[v1921];
                  if (v1922.ᐃΔⵠ) {
                    if (v1922.ᐃⲆᐃ.ᐃΔⵠ() && vV214 == v1922.ᐃⲆᐃ.ΔⲆⲆ) {
                      v1922.ᐃΔⵠ = false;
                    }
                    var v1923 = v3027 * (1 - v1922.ᐃⲆᐃ.ⲆⵠΔ) * 600 * v393;
                    var v1924 = v1923 * Math.sin(v1922.angle);
                    var v1925 = v1923 * Math.cos(v1922.angle);
                  } else {
                    v1924 = 0;
                    v1925 = 0;
                  }
                  var v1926 = ⲆⲆ[p1228][v2813.time][vP1230];
                  f294(v380, v1926, v2814.ᐃⲆⲆ.x + v1922.x - v1926.width / (Ⲇⵠᐃⵠᐃ * 2) + v1924, v2814.ᐃⲆⲆ.y + v1922.y - v1926.height / (Ⲇⵠᐃⵠᐃ * 2) + v1925, v1926.width / Ⲇⵠᐃⵠᐃ, v1926.height / Ⲇⵠᐃⵠᐃ);
                }
              }
            }
          }
        }
      }
    }
  }
  function f394(p1233, p1234, p1235, p1236, p1237, p1238, p1239, p1240, p1241) {
    if (p1240 === vVVVUndefined1972) {
      p1240 = 0;
    }
    for (var vP1239 = p1239; vP1239 >= p1240; vP1239--) {
      for (var vP1233 = p1233; vP1233 <= p1234; vP1233++) {
        for (var vP1235 = p1235; p1236 >= vP1235; vP1235++) {
          var v1927 = v2810.ⲆⲆᐃⲆ[vP1233][vP1235];
          if (v1927 !== undefined && vVVUndefined198 !== v1927[p1238]) {
            var v1928 = v1927[p1238][vP1239];
            if (v1928 !== undefined) {
              for (var v1929 = 0; v1929 < v1928.length; v1929++) {
                var v1930 = v1928[v1929];
                if (v1930.ᐃΔⵠ) {
                  if (v1930.ᐃⲆᐃ.ᐃΔⵠ() && v1930.ᐃⲆᐃ.ΔⲆⲆ == 0) {
                    v1930.ᐃΔⵠ = vVV2123;
                  }
                  var v1931 = v3027 * (1 - v1930.ᐃⲆᐃ.ⲆⵠΔ) * 600 * v393;
                  var v1932 = v1931 * Math.sin(v1930.angle);
                  var v1933 = v1931 * Math.cos(v1930.angle);
                } else {
                  v1932 = 0;
                  v1933 = 0;
                }
                for (var v1934 = 0; v1934 < ᐃⵠⵠⲆΔᐃⵠ[vP1239].Δⵠᐃⵠ; v1934++) {
                  if (v3028 !== v2813.ⲆᐃΔⲆᐃ[v1934].ᐃΔᐃᐃⵠ) {
                    v2813.ⲆᐃΔⲆᐃ[v1934].ᐃΔⵠ();
                    v2813.ⲆᐃΔⲆᐃ[v1934].ᐃΔᐃᐃⵠ = v3028;
                  }
                  var v1935 = ⲆⲆ[941][v2813.time][ᐃⵠⵠⲆΔᐃⵠ[vP1239].ⵠᐃΔⵠ[v1934].Ⲇⵠⵠ];
                  var v1936 = -v1935.width * v2813.ⲆᐃΔⲆᐃ[v1934].ⲆⵠΔ;
                  var v1937 = -v1935.height * v2813.ⲆᐃΔⲆᐃ[v1934].ⲆⵠΔ;
                  f294(v380, v1935, v2814.ᐃⲆⲆ.x + v1930.x - v1936 / 4 + v1932 + ᐃⵠⵠⲆΔᐃⵠ[vP1239].ⵠᐃΔⵠ[v1934].x, v2814.ᐃⲆⲆ.y + v1930.y - v1937 / 4 + v1933 + ᐃⵠⵠⲆΔᐃⵠ[vP1239].ⵠᐃΔⵠ[v1934].y, v1936 / 2, v1937 / 2);
                }
              }
            }
          }
        }
      }
    }
  }
  Ⲇⵠᐃⵠᐃ = 1;
  ᐃⵠⵠⲆΔᐃⵠ = [{
    Δⵠᐃⵠ: 10,
    ⵠᐃΔⵠ: [{
      x: -128,
      y: -20,
      Ⲇⵠⵠ: 0
    }, {
      x: -86,
      y: -4,
      Ⲇⵠⵠ: 1
    }, {
      y: -74,
      Ⲇⵠⵠ: 2,
      x: -60
    }, {
      y: -144,
      Ⲇⵠⵠ: 0,
      x: -22
    }, {
      y: 86,
      x: -58,
      Ⲇⵠⵠ: 0
    }, {
      y: -30,
      x: 3,
      Ⲇⵠⵠ: 0
    }, {
      Ⲇⵠⵠ: 1,
      y: -115,
      x: 65
    }, {
      y: -50,
      Ⲇⵠⵠ: 0,
      x: 118
    }, {
      x: 73,
      Ⲇⵠⵠ: 1,
      y: 15
    }, {
      y: 79,
      x: 67,
      Ⲇⵠⵠ: 0
    }]
  }, {
    Δⵠᐃⵠ: 5,
    ⵠᐃΔⵠ: [{
      Ⲇⵠⵠ: 0,
      y: -26,
      x: -45
    }, {
      y: 20,
      Ⲇⵠⵠ: 2,
      x: -45
    }, {
      y: -60,
      x: 10,
      Ⲇⵠⵠ: 1
    }, {
      y: -17,
      Ⲇⵠⵠ: 1,
      x: 52
    }, {
      y: 45,
      Ⲇⵠⵠ: 0,
      x: 14
    }]
  }, {
    Δⵠᐃⵠ: 3,
    ⵠᐃΔⵠ: [{
      y: 3,
      x: -30,
      Ⲇⵠⵠ: 2
    }, {
      y: -38,
      Ⲇⵠⵠ: 2,
      x: 7
    }, {
      x: 37,
      Ⲇⵠⵠ: 2,
      y: 5
    }]
  }, {
    Δⵠᐃⵠ: 11,
    ⵠᐃΔⵠ: [{
      y: -87,
      Ⲇⵠⵠ: 2,
      x: -74
    }, {
      x: -11,
      y: -10,
      Ⲇⵠⵠ: 1
    }, {
      x: -99,
      Ⲇⵠⵠ: 1,
      y: 17
    }, {
      x: -66,
      y: 84,
      Ⲇⵠⵠ: 0
    }, {
      Ⲇⵠⵠ: 1,
      x: -55,
      y: 123
    }, {
      x: 10,
      Ⲇⵠⵠ: 2,
      y: 81
    }, {
      Ⲇⵠⵠ: 0,
      x: 52,
      y: 50
    }, {
      y: 9,
      x: 138,
      Ⲇⵠⵠ: 1
    }, {
      x: 104,
      y: -28,
      Ⲇⵠⵠ: 0
    }, {
      Ⲇⵠⵠ: 2,
      y: -56,
      x: 67
    }, {
      Ⲇⵠⵠ: 0,
      y: -112,
      x: 5
    }]
  }, {
    Δⵠᐃⵠ: 6,
    ⵠᐃΔⵠ: [{
      Ⲇⵠⵠ: 2,
      y: -66,
      x: -33
    }, {
      x: -58,
      Ⲇⵠⵠ: 0,
      y: 10
    }, {
      x: -19,
      y: 44,
      Ⲇⵠⵠ: 1
    }, {
      Ⲇⵠⵠ: 0,
      y: 20,
      x: 44
    }, {
      x: 53,
      y: -36,
      Ⲇⵠⵠ: 2
    }, {
      y: -62,
      Ⲇⵠⵠ: 0,
      x: 7
    }]
  }, {
    Δⵠᐃⵠ: 3,
    ⵠᐃΔⵠ: [{
      x: -19,
      y: -25,
      Ⲇⵠⵠ: 1
    }, {
      x: -29,
      Ⲇⵠⵠ: 2,
      y: 13
    }, {
      Ⲇⵠⵠ: 0,
      x: 12,
      y: 12
    }]
  }];
  var v1938 = 0;
  var v1939 = 0;
  var v1940 = 0;
  var v1941 = 0;
  function f395(p1242, p1243, p1244, p1245, p1246, p1247) {
    var v1942 = p1245.w1;
    var v1943 = p1245.w2;
    var v1944 = p1245.w3;
    var v1945 = v2814.ᐃⲆⲆ.x + p1242 + 820;
    var v1946 = Math.max(v2814.ᐃⲆⲆ.y + p1243, 0);
    var v1947 = Math.max(-v2814.ᐃⲆⲆ.y + v382 - p1244 - 100, 0);
    var vV1946 = v1946;
    var v1948 = v382 - v1946 - v1947;
    if (p1247) {
      var v1949 = p1245.Ⲇⵠⵠ(v1942);
    } else {
      v1949 = v1942.r;
    }
    var v1950 = v1945 + 0;
    var vV1950 = v1950;
    var vVV1946 = vV1946;
    var v1951 = -v1949.x + 0;
    var vV1948 = v1948;
    var v1952 = v1950 += -v1949.x + 0 + 2;
    if (p1247) {
      v1949 = p1245.Ⲇⵠⵠ(v1943);
    } else {
      v1949 = v1943.r;
    }
    var v1953 = v1945 - 250 - v1950 - v1949.x;
    var vV19502 = v1950;
    var vVV19462 = vV1946;
    var vV1953 = v1953;
    var vV19482 = v1948;
    var v1954 = (v1950 += v1953 + 2) - 2;
    if (p1247) {
      v1949 = p1245.Ⲇⵠⵠ(v1944);
    } else {
      v1949 = v1944.r;
    }
    if (v1950 + (v1953 = v1945 - 350 - v1950 - v1949.x) < v1954) {
      var v1955 = true;
      var vV19503 = v1950;
      var vVV19463 = vV1946;
      var vV19532 = v1953;
      var vV19483 = v1948;
      var v1956 = v1950 += v1953 + 2;
    } else {
      v1955 = false;
      v1950 = v1954;
      v1956 = -1;
    }
    v1953 = v1945 - 700 - v1950;
    if (v2813.transition) {
      var v1957 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v1957);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vV1950, vVV1946, v1951, vV1948);
    if (p1247) {
      if (v2813.transition) {
        v1957 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 70, 76, 42, 139, 155, v1957);
      } else {
        v380.fillStyle = v554.ΔᐃᐃⲆᐃᐃⵠ[v2813.time];
      }
    } else if (v2813.transition) {
      v1957 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v1957);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vV19502, vVV19462, vV1953, vV19482);
    if (v1955) {
      if (p1247) {
        if (v2813.transition) {
          v1957 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
          v380.fillStyle = f402(17, 94, 96, 169, 214, 211, v1957);
        } else {
          v380.fillStyle = v554.ΔᐃⵠⵠΔⲆⲆ[v2813.time];
        }
      } else if (v2813.transition) {
        v1957 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v1957);
      } else {
        v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
      }
      v380.fillRect(vV19503, vVV19463, vV19532, vV19483);
    }
    if (v2812.ⲆΔⵠⵠᐃ && p1247) {
      p1245.ⲆᐃⲆᐃⲆΔΔᐃᐃ(v1954, v1956, v1952, v1945, -v2814.ᐃⲆⲆ.y + vVV1946, -v2814.ᐃⲆⲆ.y + vVV1946 + vV1948);
    }
  }
  function f396(p1248) {
    v380.save();
    v380.translate(v2814.ᐃⲆⲆ.x + p1248.x, v2814.ᐃⲆⲆ.y + p1248.y);
    v380.rotate(p1248.angle);
    v380.globalAlpha = p1248.alpha;
    var v1958 = ⲆⲆ[p1248.id][v2813.time];
    f294(v380, v1958, -v1958.width / 2, -v1958.height / 2);
    v380.globalAlpha = 1;
    v380.restore();
  }
  function f397(p1249, p1250, p1251, p1252, p1253, p1254, p1255, p1256, p1257, p1258) {
    if (v2813.transition) {
      v380.globalAlpha = 1;
      p1249(p1250, p1251, p1252, p1253, p1254, p1255, p1256, p1257, p1258);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      p1249(p1250, p1251, p1252, p1253, p1254, p1255, p1256, p1257, p1258);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      p1249(p1250, p1251, p1252, p1253, p1254, p1255, p1256, p1257, p1258);
    }
  }
  function f398(p1259, p1260, p1261, p1262, p1263, p1264) {
    var v1959 = p1262.w1;
    var v1960 = p1262.w2;
    var v1961 = p1262.w3;
    var v1962 = v2814.ᐃⲆⲆ.x + p1259 + 820;
    var v1963 = Math.max(v2814.ᐃⲆⲆ.y + p1260, 0);
    var v1964 = Math.max(-v2814.ᐃⲆⲆ.y + v382 - p1261 - 100, 0);
    var vV1963 = v1963;
    var v1965 = v382 - v1963 - v1964;
    if (p1264) {
      var v1966 = p1262.Ⲇⵠⵠ(v1959).x;
    } else {
      v1966 = v1959.r.x;
    }
    var v1967 = v1962 + 0;
    0;
    v1967 += -v1966 + 0 + 2;
    if (p1264) {
      v1966 = p1262.Ⲇⵠⵠ(v1960).x;
    } else {
      v1966 = v1960.r.x;
    }
    var v1968 = v1962 - 250 - v1967 - v1966;
    var v1969 = (v1967 += v1968 + 2) - 2;
    if (p1264) {
      v1966 = p1262.Ⲇⵠⵠ(v1961).x;
    } else {
      v1966 = v1961.r.x;
    }
    if (v1967 + (v1968 = v1962 - 350 - v1967 - v1966) < v1969) {
      v1967 += v1968 + 2;
    } else {
      v1967 = v1969;
    }
    v1968 = v1962 - 700 - v1967;
    if (p1264 > 0 && p1263.ⲆᐃⲆᐃΔᐃᐃ === 1) {
      if (v2813.transition) {
        var v1970 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 77, 72, 252, 239, 187, v1970);
      } else {
        v380.fillStyle = v554.ΔⵠᐃⵠⲆΔⵠ[v2813.time];
      }
      v380.fillRect(v1967, vV1963, v1968, v1965);
    } else {
      if (v2813.transition) {
        v1970 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(p1263.ⲆⵠⲆ[0], p1263.ⲆⵠⲆ[1], p1263.ⲆⵠⲆ[2], p1263.ᐃᐃᐃ[0], p1263.ᐃᐃᐃ[1], p1263.ᐃᐃᐃ[2], v1970);
      } else {
        v380.fillStyle = p1263.ΔⵠΔⵠΔ[v2813.time];
      }
      v380.fillRect(v1967, vV1963, v1968, v1965);
    }
  }
  function f399() {
    v380.globalAlpha = 1;
    if (v2813.transition) {
      var v1971 = v2813.ⵠⵠΔᐃ.ᐃΔⵠ();
    }
    v2813.ΔⵠⲆΔΔΔⵠΔΔ(-v2814.ᐃⲆⲆ.x, -v2814.ᐃⲆⲆ.y);
    v1938 = Math.max(Math.floor(-v2814.ᐃⲆⲆ.x / v2813.ⵠⵠΔⲆΔΔⲆ) - 5, 0);
    v1939 = Math.min(Math.floor((-v2814.ᐃⲆⲆ.x + v2814.ᐃⲆⲆ.w) / v2813.ⵠⵠΔⲆΔΔⲆ) + 4, v2813.ᐃᐃᐃᐃΔ - 1);
    v1940 = Math.max(Math.floor(-v2814.ᐃⲆⲆ.y / v2813.ⲆⵠΔΔⲆⵠΔ) - 3, 0);
    v1941 = Math.min(Math.floor((-v2814.ᐃⲆⲆ.y + v2814.ᐃⲆⲆ.ⵠⵠⲆ) / v2813.ⲆⵠΔΔⲆⵠΔ) + 3, v2813.ΔⵠⲆⲆΔ - 1);
    (function () {
      for (var v1972 = v2813.ⵠⲆⵠᐃ.length - 1; v1972 >= 0; v1972--) {
        var v1973 = v2813.ⵠⲆⵠᐃ[v1972];
        if (v2813.ᐃΔⵠⲆᐃ === v1973.Ⲇⵠⵠ) {
          var v1974 = v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ];
          if (-v2814.ᐃⲆⲆ.x >= v1973.x1 - 230 - v381 && v1973.x2 + 330 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1973.y1 - v382 && v1973.y2 + 100 >= -v2814.ᐃⲆⲆ.y) {
            var v1975 = v1973.x2;
            if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
              v1975 -= 610;
            }
            var v1976 = v1973.x1;
            if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
              v1976 += 610;
            }
            var v1977 = v1973.y2;
            if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
              v1977 -= 610;
            }
            var v1978 = v1973.y1;
            if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
              v1978 += 610;
            }
            if (v2813.transition) {
              var v1979 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
              v380.fillStyle = f402(v1974.ⲆⵠⲆ[0], v1974.ⲆⵠⲆ[1], v1974.ⲆⵠⲆ[2], v1974.ᐃᐃᐃ[0], v1974.ᐃᐃᐃ[1], v1974.ᐃᐃᐃ[1], v1979);
            } else {
              v380.fillStyle = v1974.ΔⵠΔⵠΔ[v2813.time];
            }
            var v1980 = Math.max(v2814.ᐃⲆⲆ.x + v1976 - 2 - 230, 0);
            var v1981 = Math.max(-v2814.ᐃⲆⲆ.x + v381 - v1975 - 330 - 2, 0);
            var v1982 = Math.max(v2814.ᐃⲆⲆ.y + v1978 - 2, 0);
            var v1983 = Math.max(-v2814.ᐃⲆⲆ.y + v382 - v1977 - 100 - 2, 0);
            v380.beginPath();
            v380.fillRect(v1980, v1982, v381 - v1981 - v1980, v382 - v1982 - v1983);
          }
        }
      }
      for (v1972 = v2813.ⵠⲆⵠᐃ.length - 1; v1972 >= 0; v1972--) {
        if ((v1973 = v2813.ⵠⲆⵠᐃ[v1972]).Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
          v1975 = v1973.x2;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1975 -= 400;
          }
          v1976 = v1973.x1;
          if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
            v1976 += 400;
          }
          v1977 = v1973.y2;
          if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
            v1977 -= 300;
          }
          v1978 = v1973.y1;
          if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
            v1978 += 300;
          }
          if (!(v1973.ⲆⵠΔ & 8) && -v2814.ᐃⲆⲆ.x >= v1975 - v381 + 120 && v1975 + 820 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1978 + 88 - v382 && v1977 + 50 >= -v2814.ᐃⲆⲆ.y) {
            f398(v1975, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[0], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 8);
            f395(v1975, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[0], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 8);
          }
          if ((v1973.ⲆⵠΔ & 4) === 0 && -v2814.ᐃⲆⲆ.x >= v1976 - v381 - 700 && -v2814.ᐃⲆⲆ.x <= v1976 - 20 && -v2814.ᐃⲆⲆ.y >= v1978 + 88 - v382 && -v2814.ᐃⲆⲆ.y <= v1977 + 50) {
            f409(v1976, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[1], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 4);
            f407(v1976, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[1], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 4);
          }
          if ((v1973.ⲆⵠΔ & 2) === 0 && v1976 - 235 - v381 <= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.x <= v1975 + 350 && v1977 - v382 - 275 <= -v2814.ᐃⲆⲆ.y && v1977 + 490 >= -v2814.ᐃⲆⲆ.y) {
            f406(v1977 - 230, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[2], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 2);
            f408(v1977 - 230, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[2], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 2);
          }
          if (!(v1973.ⲆⵠΔ & 1) && -v2814.ᐃⲆⲆ.x >= v1976 - 235 - v381 && v1975 + 350 >= -v2814.ᐃⲆⲆ.x && v1978 - v382 - 390 <= -v2814.ᐃⲆⲆ.y && -v2814.ᐃⲆⲆ.y <= v1978 + 315) {
            f401(v1978 + 310, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[3], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 1);
            f415(v1978 + 310, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[3], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 1);
          }
        }
      }
      for (v1972 = v2813.ⵠⲆⵠᐃ.length - 1; v1972 >= 0; v1972--) {
        v1973 = v2813.ⵠⲆⵠᐃ[v1972];
        if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
          v1975 = v1973.x2;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1975 -= 400;
          }
          v1976 = v1973.x1;
          if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
            v1976 += 400;
          }
          v1977 = v1973.y2;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1977 -= 300;
          }
          v1978 = v1973.y1;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1978 += 300;
          }
          if ((v1973.ⲆⵠΔ & 8) !== 0 && -v2814.ᐃⲆⲆ.x >= v1975 - v381 + 120 && -v2814.ᐃⲆⲆ.x <= v1975 + 820 && v1978 + 88 - v382 <= -v2814.ᐃⲆⲆ.y && -v2814.ᐃⲆⲆ.y <= v1977 + 50) {
            f398(v1975, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[0], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 8);
          }
          if (v1973.ⲆⵠΔ & 4 && -v2814.ᐃⲆⲆ.x >= v1976 - v381 - 700 && v1976 - 20 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1978 + 88 - v382 && -v2814.ᐃⲆⲆ.y <= v1977 + 50) {
            f409(v1976, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[1], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 4);
          }
          if (v1973.ⲆⵠΔ & 2 && v1976 - 235 - v381 <= -v2814.ᐃⲆⲆ.x && v1975 + 350 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1977 - v382 - 275 && -v2814.ᐃⲆⲆ.y <= v1977 + 490) {
            f406(v1977 - 230, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[2], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 2);
          }
          if (v1973.ⲆⵠΔ & 1 && v1976 - 235 - v381 <= -v2814.ᐃⲆⲆ.x && v1975 + 350 >= -v2814.ᐃⲆⲆ.x && v1978 - v382 - 390 <= -v2814.ᐃⲆⲆ.y && v1978 + 315 >= -v2814.ᐃⲆⲆ.y) {
            f401(v1978 + 310, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[3], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 1);
          }
        }
      }
      for (v1972 = v2813.ⵠⲆⵠᐃ.length - 1; v1972 >= 0; v1972--) {
        if ((v1973 = v2813.ⵠⲆⵠᐃ[v1972]).Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
          v1974 = v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ];
          if (v1973.x1 - 230 - v381 <= -v2814.ᐃⲆⲆ.x && v1973.x2 + 330 >= -v2814.ᐃⲆⲆ.x && v1973.y1 - v382 <= -v2814.ᐃⲆⲆ.y && -v2814.ᐃⲆⲆ.y <= v1973.y2 + 100) {
            v1975 = v1973.x2;
            if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
              if (v1973.ⲆⵠΔ & 8) {
                v1975 -= 610;
              } else {
                v1975 -= 414;
              }
            }
            v1976 = v1973.x1;
            if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
              if (v1973.ⲆⵠΔ & 4) {
                v1976 += 610;
              } else {
                v1976 += 414;
              }
            }
            v1977 = v1973.y2;
            if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
              if (v1973.ⲆⵠΔ & 2) {
                v1977 -= 610;
              } else {
                v1977 -= 414;
              }
            }
            v1978 = v1973.y1;
            if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
              if ((v1973.ⲆⵠΔ & 1) === 0) {
                v1978 += 414;
              } else {
                v1978 += 610;
              }
            }
            if (v2813.transition) {
              v1979 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
              v380.fillStyle = f402(v1974.ⲆⵠⲆ[0], v1974.ⲆⵠⲆ[1], v1974.ⲆⵠⲆ[2], v1974.ᐃᐃᐃ[0], v1974.ᐃᐃᐃ[1], v1974.ᐃᐃᐃ[2], v1979);
            } else {
              v380.fillStyle = v1974.ΔⵠΔⵠΔ[v2813.time];
            }
            v1980 = Math.max(v2814.ᐃⲆⲆ.x + v1976 - 2 - 230, 0);
            v1981 = Math.max(-v2814.ᐃⲆⲆ.x + v381 - v1975 - 330 - 2, 0);
            v1982 = Math.max(v2814.ᐃⲆⲆ.y + v1978 - 2, 0);
            v1983 = Math.max(-v2814.ᐃⲆⲆ.y + v382 - v1977 - 100 - 2, 0);
            v380.beginPath();
            v380.fillRect(v1980, v1982, v381 - v1981 - v1980, v382 - v1982 - v1983);
          }
        }
      }
      if (v2812.ⲆΔⵠⵠᐃ) {
        f397(f391, v1940, v1941, v1938, v1939, 695, "isl", 2);
        f397(f391, v1940, v1941, v1938, v1939, 694, "isl", 2);
      }
      f397(f393, v1940, v1941, v1938, v1939, 692, "isl", 2);
      if (v2812.ⲆΔⵠⵠᐃ) {
        f397(f392, v1940, v1941, v1938, v1939, 243, "de");
      }
      var v1984 = v2813.ⲆΔᐃ[0];
      for (v1972 = 0; v1972 < v1984.length; v1972++) {
        for (var v1985 = v1984[v1972], v1986 = 0; v1985.ᐃⲆᐃⲆΔ.length > v1986; v1986++) {
          f396(v1985.ᐃⲆᐃⲆΔ[v1986]);
        }
      }
      if ((v1704 += v3027 * 40) > 60) {
        v1704 -= 60;
      }
      f397(f344, v1940, v1941, v1938, v1939, 1024, "r", 0);
      for (v1972 = 0; v1972 < v2813.ⵠⲆⵠᐃ.length; v1972++) {
        v1973 = v2813.ⵠⲆⵠᐃ[v1972];
        if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
          v1975 = v1973.x2;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1975 -= 400;
          }
          v1976 = v1973.x1;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1976 += 400;
          }
          v1977 = v1973.y2;
          if (v1973.Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ) {
            v1977 -= 300;
          }
          v1978 = v1973.y1;
          if (v2813.ᐃΔⵠⲆᐃ !== v1973.Ⲇⵠⵠ) {
            v1978 += 300;
          }
          if ((v1973.ⲆⵠΔ & 8) > 0 && -v2814.ᐃⲆⲆ.x >= v1975 - v381 + 120 && v1975 + 820 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1978 + 88 - v382 && v1977 + 50 >= -v2814.ᐃⲆⲆ.y) {
            f395(v1975, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[0], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 8);
          }
          if ((v1973.ⲆⵠΔ & 4) > 0 && -v2814.ᐃⲆⲆ.x >= v1976 - v381 - 700 && v1976 - 20 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1978 + 88 - v382 && v1977 + 50 >= -v2814.ᐃⲆⲆ.y) {
            f407(v1976, v1978 + 88, v1977 - 88, v2814.ᐃΔⵠⵠ[1], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 4);
          }
          if ((v1973.ⲆⵠΔ & 2) > 0 && v1976 - 235 - v381 <= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.x <= v1975 + 350 && -v2814.ᐃⲆⲆ.y >= v1977 - v382 - 275 && -v2814.ᐃⲆⲆ.y <= v1977 + 490) {
            f408(v1977 - 230, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[2], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 2);
          }
          if ((v1973.ⲆⵠΔ & 1) > 0 && -v2814.ᐃⲆⲆ.x >= v1976 - 235 - v381 && v1975 + 350 >= -v2814.ᐃⲆⲆ.x && -v2814.ᐃⲆⲆ.y >= v1978 - v382 - 390 && -v2814.ᐃⲆⲆ.y <= v1978 + 315) {
            f415(v1978 + 310, v1976 - 230, v1975 + 230, v2814.ᐃΔⵠⵠ[3], v2813.ⲆⲆⲆᐃⵠ[v1973.Ⲇⵠⵠ], v1973.ⲆⵠΔ & 1);
          }
        }
      }
    })();
    (function () {
      var vV1938 = v1938;
      var vV1939 = v1939;
      var vV1940 = v1940;
      var vV1941 = v1941;
      if (v2812.ⲆΔⵠⵠᐃ) {
        f397(f393, vV1940, vV1941, vV1938, vV1939, 621, "l", 2);
      }
      if (v2812.ⲆΔⵠⵠᐃ) {
        f397(f393, vV1940, vV1941, vV1938, vV1939, v554.ⵠⲆΔⵠⵠ, "la", 5);
      }
      f397(f393, vV1940, vV1941, vV1938, vV1939, 203, "la", 5);
      f397(f391, vV1940, vV1941, vV1938, vV1939, 620, "l", 2);
      if (v2812.ⲆΔⵠⵠᐃ) {
        f397(f394, vV1940, vV1941, vV1938, vV1939, 203, "la", 5);
        f397(f391, vV1940, vV1941, vV1938, vV1939, 619, "l", 2);
      }
      f397(f393, vV1940, vV1941, vV1938, vV1939, 1052, "ma", 4);
      for (var v1987 = v2813.ⲆΔᐃ[76], v1988 = 0; v1988 < v1987.length; v1988++) {
        v1987[v1988].ⲆΔᐃⲆⲆⲆΔ();
      }
      var v1989 = v2813.ⲆΔᐃ[0];
      for (v1988 = 0; v1989.length > v1988; v1988++) {
        for (var v1990 = v1989[v1988], v1991 = 0; v1990.ᐃⲆⵠⵠⵠ.length > v1991; v1991++) {
          f412(v1990.ᐃⲆⵠⵠⵠ[v1991]);
        }
      }
      var v1992 = v2813.ⲆΔᐃ[30];
      for (v1988 = 0; v1988 < v1992.length; v1988++) {
        f404(v1992[v1988], 125);
        v1992[v1988].ᐃⲆⵠᐃⲆ(v1992[v1988].info);
      }
      var v1993 = v2813.ⲆΔᐃ[18];
      for (v1988 = 0; v1988 < v1993.length; v1988++) {
        if (v1993[v1988].action == 2) {
          f416(v1993[v1988]);
        }
      }
      var v1994 = v2813.ⲆΔᐃ[1];
      for (v1988 = 0; v1994.length > v1988; v1988++) {
        f416(v1994[v1988], 113);
      }
      var v1995 = v2813.ⲆΔᐃ[22];
      for (v1988 = 0; v1988 < v1995.length; v1988++) {
        f416(v1995[v1988]);
      }
      var v1996 = v2813.ⲆΔᐃ[23];
      for (v1988 = 0; v1988 < v1996.length; v1988++) {
        f416(v1996[v1988]);
      }
      var v1997 = v2813.ⲆΔᐃ[6];
      for (v1988 = 0; v1997.length > v1988; v1988++) {
        f416(v1997[v1988], 118);
      }
      var v1998 = v2813.ⲆΔᐃ[36];
      for (v1988 = 0; v1998.length > v1988; v1988++) {
        f404(v1998[v1988]);
      }
      var v1999 = v2813.ⲆΔᐃ[33];
      for (v1988 = 0; v1988 < v1999.length; v1988++) {
        f404(v1999[v1988], 141);
      }
      var v2000 = v2813.ⲆΔᐃ[3];
      for (v1988 = 0; v1988 < v2000.length; v1988++) {
        f416(v2000[v1988]);
      }
      v2000 = v2813.ⲆΔᐃ[43];
      v1988 = 0;
      for (; v1988 < v2000.length; v1988++) {
        f416(v2000[v1988]);
      }
      v2000 = v2813.ⲆΔᐃ[3];
      v1988 = 0;
      for (; v1988 < v2000.length; v1988++) {
        f403(v2000[v1988]);
      }
      var v2001 = v2813.ⲆΔᐃ[44];
      for (v1988 = 0; v1988 < v2001.length; v1988++) {
        if (!(v2001[v1988].info & 15) || v2001[v1988].info === 10) {
          f404(v2001[v1988]);
        }
      }
      var v2002 = v2813.ⲆΔᐃ[54];
      for (v1988 = 0; v1988 < v2002.length; v1988++) {
        if (!(v2002[v1988].info & 15) || v2002[v1988].info === 10) {
          f404(v2002[v1988]);
        }
      }
      var v2003 = v2813.ⲆΔᐃ[55];
      for (v1988 = 0; v2003.length > v1988; v1988++) {
        if ((v2003[v1988].info & 15) === 0 || v2003[v1988].info === 10) {
          f404(v2003[v1988]);
        }
      }
      var v2004 = v2813.ⲆΔᐃ[79];
      for (v1988 = 0; v1988 < v2004.length; v1988++) {
        f404(v2004[v1988], 132);
      }
      var v2005 = v2813.ⲆΔᐃ[39];
      for (v1988 = 0; v1988 < v2005.length; v1988++) {
        if ((v2005[v1988].info & 15) === 0 || v2005[v1988].info === 10) {
          f404(v2005[v1988]);
        }
      }
      var v2006 = v2813.ⲆΔᐃ[40];
      for (v1988 = 0; v1988 < v2006.length; v1988++) {
        if (!(v2006[v1988].info & 15) || v2006[v1988].info === 10) {
          f404(v2006[v1988]);
        }
      }
      var v2007 = v2813.ⲆΔᐃ[37];
      for (v1988 = 0; v1988 < v2007.length; v1988++) {
        if (!(v2007[v1988].info & 15) || v2007[v1988].info === 10) {
          f404(v2007[v1988]);
        }
      }
      v2004 = v2813.ⲆΔᐃ[31];
      v1988 = 0;
      for (; v2004.length > v1988; v1988++) {
        f404(v2004[v1988]);
      }
      var v2008 = v2813.ⲆΔᐃ[86];
      for (v1988 = 0; v2008.length > v1988; v1988++) {
        f404(v2008[v1988], 250, 729);
      }
      var v2009 = v2813.ⲆΔᐃ[82];
      for (v1988 = 0; v2009.length > v1988; v1988++) {
        f404(v2009[v1988], 250, 729);
      }
      var v2010 = v2813.ⲆΔᐃ[87];
      for (v1988 = 0; v2010.length > v1988; v1988++) {
        f404(v2010[v1988], 854, 859);
      }
      var v2011 = v2813.ⲆΔᐃ[45];
      for (v1988 = 0; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info & 1) {
          f404(v2011[v1988], 336);
        }
      }
      v2011 = v2813.ⲆΔᐃ[46];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (v2011[v1988].info & 1) {
          f404(v2011[v1988], 373);
        }
      }
      v2011 = v2813.ⲆΔᐃ[47];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 376);
        }
      }
      v2011 = v2813.ⲆΔᐃ[48];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 379);
        }
      }
      v2011 = v2813.ⲆΔᐃ[49];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 500);
        }
      }
      v2011 = v2813.ⲆΔᐃ[53];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 376);
        }
      }
      v2011 = v2813.ⲆΔᐃ[10];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info & 1) {
          f404(v2011[v1988], 336);
        }
      }
      v2011 = v2813.ⲆΔᐃ[15];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info & 1) {
          f404(v2011[v1988], 373);
        }
      }
      v2011 = v2813.ⲆΔᐃ[16];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 376);
        }
      }
      v2011 = v2813.ⲆΔᐃ[17];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 379);
        }
      }
      v2011 = v2813.ⲆΔᐃ[21];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 500);
        }
      }
      v2011 = v2813.ⲆΔᐃ[51];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (v2011[v1988].info) {
          f404(v2011[v1988], 376);
        }
      }
      var v2012 = v2813.ⲆΔᐃ[80];
      for (v1988 = 0; v1988 < v2012.length; v1988++) {
        f404(v2012[v1988], 264, 322);
      }
      var v2013 = v2813.ⲆΔᐃ[41];
      for (v1988 = 0; v1988 < v2013.length; v1988++) {
        f404(v2013[v1988], 198);
      }
      v1987 = v2813.ⲆΔᐃ[76];
      v1988 = 0;
      for (; v1987.length > v1988; v1988++) {
        f404(v1987[v1988], v554.ΔᐃⲆΔᐃⲆᐃ, v554.ⲆᐃⵠᐃⵠⵠᐃᐃⲆ);
      }
      var v2014 = v2813.ⲆΔᐃ[91];
      for (v1988 = 0; v1988 < v2014.length; v1988++) {
        if (v2014[v1988].ⲆⲆᐃⵠⲆΔⲆ === 0) {
          f404(v2014[v1988]);
        }
      }
      v1989 = v2813.ⲆΔᐃ[0];
      v1988 = 0;
      for (; v1989.length > v1988; v1988++) {
        v1990 = v1989[v1988];
        if (v1989[v1988].ᐃⲆᐃΔⵠ !== 227 && v1989[v1988].ᐃⲆᐃΔⵠ !== 228 && v1989[v1988].ᐃⲆᐃΔⵠ !== 229 && v1989[v1988].ᐃⲆᐃΔⵠ !== 230 && v1989[v1988].ᐃⲆᐃΔⵠ !== 91) {
          if (v1990.ⵠⲆⵠⲆⵠᐃΔ === 0) {
            if (v1990.ⲆⵠᐃⲆⵠⵠᐃ > 0.001) {
              v1990.ⲆⵠᐃⲆⵠⵠᐃ = ⲆΔΔ.ⵠⲆΔⵠⲆ(v1990.ⲆⵠᐃⲆⵠⵠᐃ, 0, 0.018);
              var v2015 = 1 + Math.min(1, Math.max(v1990.ⲆⵠᐃⲆⵠⵠᐃ, 0) / 100) * 0.18;
              v380.save();
              v380.scale(v2015, v2015);
              v2814.ᐃⲆⲆ.x /= v2015;
              v2814.ᐃⲆⲆ.y /= v2015;
              v1990.x /= v2015;
              v1990.y /= v2015;
              v1990.r.x /= v2015;
              v1990.r.y /= v2015;
              v1990.ⵠⵠᐃΔᐃΔⲆ();
              v1990.ΔⵠⵠΔ();
              v2814.ᐃⲆⲆ.x *= v2015;
              v2814.ᐃⲆⲆ.y *= v2015;
              v1990.x *= v2015;
              v1990.y *= v2015;
              v1990.r.x *= v2015;
              v1990.r.y *= v2015;
              v380.restore();
            } else {
              v1990.ⲆⲆᐃⵠⲆΔⲆ = 0;
              v1990.ⵠⵠᐃΔᐃΔⲆ();
              v1990.ΔⵠⵠΔ();
            }
          }
        } else if (v1990.ⲆΔᐃⲆⲆ <= 180) {
          v380.save();
          v2015 = 1 + Math.min(1, Math.max(v1990.ⲆΔΔⵠⵠ - 30, 0) / 180) * 0.35;
          v380.scale(v2015, v2015);
          v2814.ᐃⲆⲆ.x /= v2015;
          v2814.ᐃⲆⲆ.y /= v2015;
          v1990.x /= v2015;
          v1990.y /= v2015;
          v1990.r.x /= v2015;
          v1990.r.y /= v2015;
          v1990.ⲆⲆᐃⵠⲆΔⲆ = 0;
          v1990.ⵠⵠᐃΔᐃΔⲆ();
          v1990.ΔⵠⵠΔ();
          v2814.ᐃⲆⲆ.x *= v2015;
          v2814.ᐃⲆⲆ.y *= v2015;
          v1990.x *= v2015;
          v1990.y *= v2015;
          v1990.r.x *= v2015;
          v1990.r.y *= v2015;
          v380.restore();
        }
      }
      v2013 = v2813.ⲆΔᐃ[41];
      v1988 = 0;
      for (; v1988 < v2013.length; v1988++) {
        f404(v2013[v1988], 913);
      }
      var v2016 = v2813.ⲆΔᐃ[67];
      for (v1988 = 0; v2016.length > v1988; v1988++) {
        f404(v2016[v1988]);
      }
      var v2017 = v2813.ⲆΔᐃ[62];
      for (v1988 = 0; v2017.length > v1988; v1988++) {
        f404(v2017[v1988], 419, 461);
      }
      var v2018 = v2813.ⲆΔᐃ[70];
      for (v1988 = 0; v2018.length > v1988; v1988++) {
        f404(v2018[v1988]);
      }
      var v2019 = v2813.ⲆΔᐃ[60];
      for (v1988 = 0; v1988 < v2019.length; v1988++) {
        f404(v2019[v1988], 299, 326);
      }
      var v2020 = v2813.ⲆΔᐃ[72];
      for (v1988 = 0; v2020.length > v1988; v1988++) {
        f404(v2020[v1988], 232, 1077);
      }
      var v2021 = v2813.ⲆΔᐃ[73];
      for (v1988 = 0; v2021.length > v1988; v1988++) {
        f404(v2021[v1988], 233, 1092);
      }
      v2001 = v2813.ⲆΔᐃ[44];
      v1988 = 0;
      for (; v2001.length > v1988; v1988++) {
        if (v2001[v1988].info & 15 && v2001[v1988].info !== 10) {
          f404(v2001[v1988]);
        }
      }
      v2002 = v2813.ⲆΔᐃ[54];
      v1988 = 0;
      for (; v1988 < v2002.length; v1988++) {
        if (v2002[v1988].info & 15 && v2002[v1988].info !== 10) {
          f404(v2002[v1988]);
        }
      }
      v2003 = v2813.ⲆΔᐃ[89];
      v1988 = 0;
      for (; v2003.length > v1988; v1988++) {
        f404(v2003[v1988], 239);
      }
      v2003 = v2813.ⲆΔᐃ[55];
      v1988 = 0;
      for (; v1988 < v2003.length; v1988++) {
        if ((v2003[v1988].info & 15) !== 0 && v2003[v1988].info !== 10) {
          f404(v2003[v1988]);
        }
      }
      v2000 = v2813.ⲆΔᐃ[43];
      v1988 = 0;
      for (; v2000.length > v1988; v1988++) {
        f403(v2000[v1988]);
      }
      v2005 = v2813.ⲆΔᐃ[39];
      v1988 = 0;
      for (; v1988 < v2005.length; v1988++) {
        if ((v2005[v1988].info & 15) !== 0 && v2005[v1988].info !== 10) {
          f404(v2005[v1988]);
        }
      }
      v2006 = v2813.ⲆΔᐃ[40];
      v1988 = 0;
      for (; v2006.length > v1988; v1988++) {
        if (v2006[v1988].info & 15 && v2006[v1988].info !== 10) {
          f404(v2006[v1988]);
        }
      }
      v2007 = v2813.ⲆΔᐃ[37];
      v1988 = 0;
      for (; v1988 < v2007.length; v1988++) {
        if ((v2007[v1988].info & 15) !== 0 && v2007[v1988].info !== 10) {
          f404(v2007[v1988]);
        }
      }
      var v2022 = v2813.ⲆΔᐃ[81];
      for (v1988 = 0; v1988 < v2022.length; v1988++) {
        f404(v2022[v1988], 691, 697);
      }
      var v2023 = v2813.ⲆΔᐃ[66];
      for (v1988 = 0; v1988 < v2023.length; v1988++) {
        f404(v2023[v1988], 637, 687);
      }
      var v2024 = v2813.ⲆΔᐃ[65];
      for (v1988 = 0; v2024.length > v1988; v1988++) {
        f404(v2024[v1988], 673, 688);
      }
      var v2025 = v2813.ⲆΔᐃ[61];
      for (v1988 = 0; v2025.length > v1988; v1988++) {
        f404(v2025[v1988], 260, 333);
      }
      var v2026 = v2813.ⲆΔᐃ[88];
      for (v1988 = 0; v2026.length > v1988; v1988++) {
        f404(v2026[v1988], 1033, 1034);
      }
      var v2027 = v2813.ⲆΔᐃ[63];
      for (v1988 = 0; v2027.length > v1988; v1988++) {
        f404(v2027[v1988], 445, 462);
      }
      var v2028 = v2813.ⲆΔᐃ[77];
      for (v1988 = 0; v2028.length > v1988; v1988++) {
        f404(v2028[v1988]);
      }
      var v2029 = v2813.ⲆΔᐃ[68];
      for (v1988 = 0; v1988 < v2029.length; v1988++) {
        f404(v2029[v1988], 918, 919);
      }
      var v2030 = v2813.ⲆΔᐃ[71];
      for (v1988 = 0; v1988 < v2030.length; v1988++) {
        f404(v2030[v1988]);
      }
      var v2031 = v2813.ⲆΔᐃ[78];
      for (v1988 = 0; v2031.length > v1988; v1988++) {
        f404(v2031[v1988], 1218, 1219);
      }
      var v2032 = v2813.ⲆΔᐃ[64];
      for (v1988 = 0; v1988 < v2032.length; v1988++) {
        if (v2032[v1988].scale === 1) {
          f404(v2032[v1988], 449, 463);
        }
      }
      v2032 = v2813.ⲆΔᐃ[69];
      v1988 = 0;
      for (; v2032.length > v1988; v1988++) {
        if (v2032[v1988].scale === 1) {
          f404(v2032[v1988], 450, 464);
        }
      }
      var v2033 = v2813.ⲆΔᐃ[11];
      for (v1988 = 0; v2033.length > v1988; v1988++) {
        f404(v2033[v1988]);
      }
      var v2034 = v2813.ⲆΔᐃ[2];
      for (v1988 = 0; v2034.length > v1988; v1988++) {
        f404(v2034[v1988], 114);
      }
      v1993 = v2813.ⲆΔᐃ[18];
      v1988 = 0;
      for (; v1993.length > v1988; v1988++) {
        f404(v1993[v1988]);
      }
      var v2035 = v2813.ⲆΔᐃ[34];
      for (v1988 = 0; v1988 < v2035.length; v1988++) {
        f404(v2035[v1988]);
      }
      v2011 = v2813.ⲆΔᐃ[10];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 166);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[15];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 171);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[16];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 172);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[17];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 173);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[21];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 124);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[51];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 218);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[45];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 212);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[46];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 213);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[47];
      v1988 = 0;
      for (; v2011.length > v1988; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 214);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[48];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 215);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[49];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 216);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      v2011 = v2813.ⲆΔᐃ[53];
      v1988 = 0;
      for (; v1988 < v2011.length; v1988++) {
        if (!(v2011[v1988].info & 1)) {
          f404(v2011[v1988], 220);
        }
        v2011[v1988].ᐃⲆⵠᐃⲆ(v2011[v1988].info >> 1);
      }
      var v2036 = v2813.ⲆΔᐃ[4];
      for (v1988 = 0; v2036.length > v1988; v1988++) {
        f404(v2036[v1988], 162);
        v2036[v1988].ᐃⲆⵠᐃⲆ(v2036[v1988].info);
      }
      v2036 = v2813.ⲆΔᐃ[7];
      v1988 = 0;
      for (; v2036.length > v1988; v1988++) {
        f404(v2036[v1988], 163);
        v2036[v1988].ᐃⲆⵠᐃⲆ(v2036[v1988].info);
      }
      v2036 = v2813.ⲆΔᐃ[8];
      v1988 = 0;
      for (; v2036.length > v1988; v1988++) {
        f404(v2036[v1988], 164);
        v2036[v1988].ᐃⲆⵠᐃⲆ(v2036[v1988].info);
      }
      v2036 = v2813.ⲆΔᐃ[9];
      v1988 = 0;
      for (; v2036.length > v1988; v1988++) {
        f404(v2036[v1988], 165);
        v2036[v1988].ᐃⲆⵠᐃⲆ(v2036[v1988].info);
      }
      v2036 = v2813.ⲆΔᐃ[19];
      v1988 = 0;
      for (; v2036.length > v1988; v1988++) {
        f404(v2036[v1988], 122);
        v2036[v1988].ᐃⲆⵠᐃⲆ(v2036[v1988].info);
      }
      v2036 = v2813.ⲆΔᐃ[50];
      v1988 = 0;
      for (; v1988 < v2036.length; v1988++) {
        f404(v2036[v1988], 217);
        v2036[v1988].ᐃⲆⵠᐃⲆ(v2036[v1988].info);
      }
      var v2037 = v2813.ⲆΔᐃ[5];
      for (v1988 = 0; v2037.length > v1988; v1988++) {
        f404(v2037[v1988], 160);
        v2037[v1988].ᐃⲆⵠᐃⲆ(v2037[v1988].info);
      }
      v2037 = v2813.ⲆΔᐃ[12];
      v1988 = 0;
      for (; v2037.length > v1988; v1988++) {
        f404(v2037[v1988], 168);
        v2037[v1988].ᐃⲆⵠᐃⲆ(v2037[v1988].info);
      }
      v2037 = v2813.ⲆΔᐃ[13];
      v1988 = 0;
      for (; v1988 < v2037.length; v1988++) {
        f404(v2037[v1988], 169);
        v2037[v1988].ᐃⲆⵠᐃⲆ(v2037[v1988].info);
      }
      v2037 = v2813.ⲆΔᐃ[14];
      v1988 = 0;
      for (; v2037.length > v1988; v1988++) {
        f404(v2037[v1988], 170);
        v2037[v1988].ᐃⲆⵠᐃⲆ(v2037[v1988].info);
      }
      v2037 = v2813.ⲆΔᐃ[20];
      v1988 = 0;
      for (; v2037.length > v1988; v1988++) {
        f404(v2037[v1988], 123);
        v2037[v1988].ᐃⲆⵠᐃⲆ(v2037[v1988].info);
      }
      v2037 = v2813.ⲆΔᐃ[52];
      v1988 = 0;
      for (; v1988 < v2037.length; v1988++) {
        f404(v2037[v1988], 219);
        v2037[v1988].ᐃⲆⵠᐃⲆ(v2037[v1988].info);
      }
      var v2038 = v2813.ⲆΔᐃ[35];
      for (v1988 = 0; v1988 < v2038.length; v1988++) {
        var v2039 = v2038[v1988];
        if (v2039.info > 0) {
          f404(v2039, 788);
        } else {
          f404(v2039, 182);
        }
      }
      var v2040 = v2813.ⲆΔᐃ[29];
      for (v1988 = 0; v1988 < v2040.length; v1988++) {
        f404(v2040[v1988], 159);
      }
      f397(f393, vV1940, vV1941, vV1938, vV1939, 111, "g", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 415, "gw", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 112, "d", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 416, "dw", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 110, "p", 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 241, "m", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 121, "a", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 202, "re", 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 679, "cs", 3, 3);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 679, "cs", 2, 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 679, "cs", 1, 1);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 679, "cs", 0, 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 676, "cs", 3, 3);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 676, "cs", 2, 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 676, "cs", 1, 1);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 676, "cs", 0, 0);
      var v2041 = v2813.ⲆΔᐃ[100];
      for (v1988 = 0; v1988 < v2041.length; v1988++) {
        for (v1991 = 0; v2041[v1988].info > v1991; v1991++) {
          f404(v2041[v1988].ΔⲆⵠΔ[v1991], 294);
        }
      }
      f397(f393, vV1940, vV1941, vV1938, vV1939, 108, "s", 2);
      var v2042 = v2813.ⲆΔᐃ[24];
      for (v1988 = 0; v1988 < v2042.length; v1988++) {
        f404(v2042[v1988]);
      }
      v2042 = v2813.ⲆΔᐃ[25];
      v1988 = 0;
      for (; v1988 < v2042.length; v1988++) {
        f404(v2042[v1988]);
      }
      v2042 = v2813.ⲆΔᐃ[26];
      v1988 = 0;
      for (; v2042.length > v1988; v1988++) {
        f404(v2042[v1988]);
      }
      v2042 = v2813.ⲆΔᐃ[27];
      v1988 = 0;
      for (; v1988 < v2042.length; v1988++) {
        f404(v2042[v1988]);
      }
      v2042 = v2813.ⲆΔᐃ[28];
      v1988 = 0;
      for (; v1988 < v2042.length; v1988++) {
        f404(v2042[v1988]);
      }
      var v2043 = v2813.ⲆΔᐃ[32];
      for (v1988 = 0; v2043.length > v1988; v1988++) {
        f416(v2043[v1988]);
      }
      v1994 = v2813.ⲆΔᐃ[1];
      v1988 = 0;
      for (; v1988 < v1994.length; v1988++) {
        f403(v1994[v1988]);
      }
      v1994 = v2813.ⲆΔᐃ[6];
      v1988 = 0;
      for (; v1988 < v1994.length; v1988++) {
        f403(v1994[v1988]);
      }
      v1993 = v2813.ⲆΔᐃ[18];
      v1988 = 0;
      for (; v1993.length > v1988; v1988++) {
        if (v1993[v1988].action == 2) {
          f403(v1993[v1988]);
        }
      }
      v2035 = v2813.ⲆΔᐃ[34];
      v1988 = 0;
      for (; v2035.length > v1988; v1988++) {
        f403(v2035[v1988]);
      }
      v1995 = v2813.ⲆΔᐃ[22];
      v1988 = 0;
      for (; v1995.length > v1988; v1988++) {
        f403(v1995[v1988]);
      }
      v1996 = v2813.ⲆΔᐃ[23];
      v1988 = 0;
      for (; v1996.length > v1988; v1988++) {
        f403(v1996[v1988]);
        v1996[v1988].ᐃⲆⵠᐃⲆ(v1996[v1988].info);
      }
      f397(f393, vV1940, vV1941, vV1938, vV1939, 989, "c", 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 109, "t", 5, 4);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 413, "f", 2, 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 693, "plm", 0, 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 307, "b", 3, 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 109, "t", 3, 2);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 307, "b", 1, 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 413, "f", 1, 1);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 693, "plm", 1, 1);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 109, "t", 1, 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 413, "f", 0, 0);
      f397(f393, vV1940, vV1941, vV1938, vV1939, 693, "plm", 2, 2);
      v2043 = v2813.ⲆΔᐃ[32];
      v1988 = 0;
      for (; v1988 < v2043.length; v1988++) {
        f403(v2043[v1988]);
      }
      var v2044 = v2813.ⲆΔᐃ[56];
      for (v1988 = 0; v1988 < v2044.length; v1988++) {
        f404(v2044[v1988], 221);
      }
      v1989 = v2813.ⲆΔᐃ[0];
      v1988 = 0;
      for (; v1989.length > v1988; v1988++) {
        v1990 = v1989[v1988];
        if (v1990.ⵠⲆⵠⲆⵠᐃΔ === 1 && (v1990.ⲆΔᐃⲆⲆ < 180 || v1990.ᐃⲆᐃΔⵠ !== 227 && v1990.ᐃⲆᐃΔⵠ !== 228 && v1990.ᐃⲆᐃΔⵠ !== 91 && v1990.ᐃⲆᐃΔⵠ !== 229 && v1990.ᐃⲆᐃΔⵠ !== 230)) {
          v1990.ⲆⵠᐃⲆⵠⵠᐃ = ⲆΔΔ.ⵠⲆΔⵠⲆ(v1990.ⲆⵠᐃⲆⵠⵠᐃ, 100, 0.018);
          v2015 = 1 + Math.min(1, Math.max(v1990.ⲆⵠᐃⲆⵠⵠᐃ, 0) / 100) * 0.18;
          v380.save();
          v380.scale(v2015, v2015);
          v2814.ᐃⲆⲆ.x /= v2015;
          v2814.ᐃⲆⲆ.y /= v2015;
          v1990.x /= v2015;
          v1990.y /= v2015;
          v1990.r.x /= v2015;
          v1990.r.y /= v2015;
          v1990.ⵠⵠᐃΔᐃΔⲆ();
          v1990.ΔⵠⵠΔ();
          v2814.ᐃⲆⲆ.x *= v2015;
          v2814.ᐃⲆⲆ.y *= v2015;
          v1990.x *= v2015;
          v1990.y *= v2015;
          v1990.r.x *= v2015;
          v1990.r.y *= v2015;
          v380.restore();
        }
      }
      var v2045 = v2813.ⲆΔᐃ[38];
      for (v1988 = 0; v1988 < v2045.length; v1988++) {
        f404(v2045[v1988], 190);
        v2045[v1988].ᐃⲆⵠᐃⲆ(v2045[v1988].info);
      }
      var v2046 = v2813.ⲆΔᐃ[90];
      for (v1988 = 0; v2046.length > v1988; v1988++) {
        f404(v2046[v1988], 245, 246);
      }
      var v2047 = v2813.ⲆΔᐃ[42];
      for (v1988 = 0; v1988 < v2047.length; v1988++) {
        f404(v2047[v1988], 201);
      }
      v1989 = v2813.ⲆΔᐃ[0];
      v1988 = 0;
      for (; v1989.length > v1988; v1988++) {
        v1990 = v1989[v1988];
        if ((v1990.ᐃⲆᐃΔⵠ === 227 || v1990.ᐃⲆᐃΔⵠ === 228 || v1990.ᐃⲆᐃΔⵠ === 91 || v1990.ᐃⲆᐃΔⵠ === 229 || v1990.ᐃⲆᐃΔⵠ === 230) && v1990.ⲆΔᐃⲆⲆ > 180) {
          v1990.ⲆⲆᐃⵠⲆΔⲆ = 1;
          v380.save();
          v2015 = 1 + Math.min(1, Math.max(v1990.ⲆΔΔⵠⵠ - 30, 0) / 180) * 0.35;
          v380.scale(v2015, v2015);
          v2814.ᐃⲆⲆ.x /= v2015;
          v2814.ᐃⲆⲆ.y /= v2015;
          v1990.x /= v2015;
          v1990.y /= v2015;
          v1990.r.x /= v2015;
          v1990.r.y /= v2015;
          v1990.ⵠⵠᐃΔᐃΔⲆ();
          v1990.ΔⵠⵠΔ();
          v2814.ᐃⲆⲆ.x *= v2015;
          v2814.ᐃⲆⲆ.y *= v2015;
          v1990.x *= v2015;
          v1990.y *= v2015;
          v1990.r.x *= v2015;
          v1990.r.y *= v2015;
          v380.restore();
        }
      }
      v2014 = v2813.ⲆΔᐃ[91];
      v1988 = 0;
      for (; v2014.length > v1988; v1988++) {
        if (v2014[v1988].ⲆⲆᐃⵠⲆΔⲆ === 1) {
          f404(v2014[v1988]);
        }
      }
      v2032 = v2813.ⲆΔᐃ[64];
      v1988 = 0;
      for (; v2032.length > v1988; v1988++) {
        if (v2032[v1988].scale > 1) {
          f404(v2032[v1988], 449, 463);
        }
      }
      v2032 = v2813.ⲆΔᐃ[69];
      v1988 = 0;
      for (; v2032.length > v1988; v1988++) {
        if (v2032[v1988].scale > 1) {
          f404(v2032[v1988], 450, 464);
        }
      }
      var v2048 = v2813.ⲆΔᐃ[74];
      for (v1988 = 0; v1988 < v2048.length; v1988++) {
        f404(v2048[v1988], 235, 1107);
      }
      var v2049 = v2813.ⲆΔᐃ[75];
      for (v1988 = 0; v2049.length > v1988; v1988++) {
        f404(v2049[v1988], 238, 1128);
      }
      if ((v1892 += v3027 * 15) > 60) {
        v1892 -= 60;
      }
      f397(f390, vV1940, vV1941, vV1938, vV1939, 1041, "fo", 2);
      f397(f390, vV1940, vV1941, vV1938, vV1939, 244, "fod", 2);
    })();
    if (v2812.ⲆΔⵠⵠᐃ && v2813.mode !== 2 && v2813.mode !== 4 && v2813.mode !== 5) {
      (function () {
        var v2050 = v2814.ΔᐃⵠᐃΔ;
        if (v2050.ᐃⲆᐃⵠⲆ === 0) {
          v2050.ᐃⲆΔⵠⲆ = Math.max(0, v2050.ᐃⲆΔⵠⲆ - v3027 / 10);
        } else {
          v2050.ᐃⲆΔⵠⲆ = Math.min(1, v2050.ᐃⲆΔⵠⲆ + v3027 / 10);
        }
        for (var v2051 = v2050.ΔⵠΔΔᐃ, v2052 = 0; v2051.length > v2052; v2052++) {
          var v2053 = v2051[v2052];
          v2050.ᐃΔⵠ(v2053);
          f411(471, v2053.id, v2814.ᐃⲆⲆ.x + v2053.x, v2814.ᐃⲆⲆ.y + v2053.y, v2053.alpha);
        }
        for (v2052 = 0; v2051.length > v2052; v2052++) {
          if ((v2053 = v2051[v2052]).ᐃΔⲆⵠⲆ <= 0 || v2053.x > -v2814.ᐃⲆⲆ.x + v381 || -v2814.ᐃⲆⲆ.x - v2814.ᐃⲆⲆ.w / 2 > v2053.x || -v2814.ᐃⲆⲆ.y + v382 < v2053.y) {
            v2051.splice(v2052, 1);
          }
        }
        var v2054 = -v2814.ᐃⲆⲆ.y;
        if (v2813.ΔᐃⵠΔᐃ > -1000) {
          v2050.add(v2054);
        }
      })();
      (function () {
        var v2055 = v2814.ⵠⲆⲆⲆⵠ;
        if (v2055.ᐃⲆᐃⵠⲆ === 0) {
          v2055.ᐃⲆΔⵠⲆ = Math.max(0, v2055.ᐃⲆΔⵠⲆ - v3027 / 10);
        } else {
          v2055.ᐃⲆΔⵠⲆ = Math.min(1, v2055.ᐃⲆΔⵠⲆ + v3027 / 10);
        }
        for (var v2056 = v2055.ΔⵠΔΔᐃ, v2057 = 0; v2056.length > v2057; v2057++) {
          var v2058 = v2056[v2057];
          v2055.ᐃΔⵠ(v2058);
          f411(470, v2058.id, v2814.ᐃⲆⲆ.x + v2058.x, v2814.ᐃⲆⲆ.y + v2058.y, v2058.alpha);
        }
        for (v2057 = 0; v2056.length > v2057; v2057++) {
          if ((v2058 = v2056[v2057]).ᐃΔⲆⵠⲆ <= 0 || v2058.x > -v2814.ᐃⲆⲆ.x + v381 || v2058.x < -v2814.ᐃⲆⲆ.x || v2058.y > -v2814.ᐃⲆⲆ.y + v382) {
            v2056.splice(v2057, 1);
          }
        }
        var v2059 = -v2814.ᐃⲆⲆ.y;
        if (v2813.ᐃⲆΔⵠⵠ > -1000) {
          v2055.add(v2059);
        }
      })();
      (function () {
        var v2060 = v2814.ΔⲆⵠⵠᐃᐃⲆ;
        for (var v2061 = v2060.ΔⵠΔΔᐃ, v2062 = 0; v2061.length > v2062; v2062++) {
          var v2063 = v2061[v2062];
          v2060.ᐃΔⵠ(v2063);
          f411(942, v2063.id, v2814.ᐃⲆⲆ.x + v2063.x, v2814.ᐃⲆⲆ.y + v2063.y, v2063.alpha);
        }
        for (v2062 = 0; v2062 < v2061.length; v2062++) {
          v2063 = v2061[v2062];
          if (v2063.ᐃΔⲆⵠⲆ <= 0 || v2063.x > -v2814.ᐃⲆⲆ.x + v381 || v2063.x < -v2814.ᐃⲆⲆ.x || -v2814.ᐃⲆⲆ.y + v382 < v2063.y) {
            v2061.splice(v2062, 1);
          }
        }
        var v2064 = -v2814.ᐃⲆⲆ.y;
        if (v2813.ⵠΔΔᐃᐃ > -1000) {
          v2060.add(v2064);
        }
      })();
    }
    if (v2813.transition && v1971) {
      v2813.transition = false;
      v2813.ⵠⵠΔᐃ.ⲆⵠΔ = 0;
      v2813.ⵠⵠΔᐃ.ΔⲆⲆ = false;
    }
  }
  function f400(p1265, p1266, p1267, p1268, p1269) {
    var v2065 = p1267.width;
    var v2066 = p1267.height;
    var v2067 = Math.floor(v2065 / 2);
    var v2068 = Math.floor(v2066 / 2);
    if (v2813.transition) {
      v380.globalAlpha = 1;
      f294(v380, ⲆⲆ[p1265][p1266][v2813.time], 0, 0, v2065, v2066, p1268, p1269, v2067, v2068);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      f294(v380, ⲆⲆ[p1265][p1266][v2813.time], 0, 0, v2065, v2066, p1268, p1269, v2067, v2068);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      f294(v380, ⲆⲆ[p1265][p1266][v2813.time], 0, 0, v2065, v2066, p1268, p1269, v2067, v2068);
    }
  }
  function f401(p1270, p1271, p1272, p1273, p1274, p1275) {
    var v2069 = p1273.w1;
    var v2070 = p1273.w2;
    var v2071 = p1273.w3;
    var v2072 = v2814.ᐃⲆⲆ.y + p1270 - 700;
    var v2073 = Math.max(v2814.ᐃⲆⲆ.x + p1271, 0);
    var v2074 = Math.max(-v2814.ᐃⲆⲆ.x + v381 - p1272 - 100, 0);
    var vV2073 = v2073;
    var v2075 = v381 - v2073 - v2074;
    if (p1275) {
      var v2076 = p1273.Ⲇⵠⵠ(v2069).x;
    } else {
      v2076 = v2069.r.x;
    }
    var v2077 = v2072 + 0;
    0;
    v2077 += v2076 + 0 - 2;
    if (p1275) {
      v2076 = p1273.Ⲇⵠⵠ(v2070).x;
    } else {
      v2076 = v2070.r.x;
    }
    var v2078 = v2072 + 250 - v2077 + v2076;
    var v2079 = (v2077 += v2078 - 2) - 2;
    if (p1275) {
      v2076 = p1273.Ⲇⵠⵠ(v2071).x;
    } else {
      v2076 = v2071.r.x;
    }
    if (v2077 + (v2078 = v2072 + 350 - v2077 + v2076) - 3 > v2079) {
      v2077 += v2078 - 2;
    } else {
      v2077 = v2079;
    }
    v2078 = v2072 + 700 - v2077;
    if (p1275 > 0 && p1274.ⲆᐃⲆᐃΔᐃᐃ === 1) {
      if (v2813.transition) {
        var v2080 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 77, 72, 252, 239, 187, v2080);
      } else {
        v380.fillStyle = v554.ΔⵠᐃⵠⲆΔⵠ[v2813.time];
      }
      v380.fillRect(vV2073, v2077, v2075, v2078);
    } else {
      if (v2813.transition) {
        v2080 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(p1274.ⲆⵠⲆ[0], p1274.ⲆⵠⲆ[1], p1274.ⲆⵠⲆ[2], p1274.ᐃᐃᐃ[0], p1274.ᐃᐃᐃ[1], p1274.ᐃᐃᐃ[2], v2080);
      } else {
        v380.fillStyle = p1274.ΔⵠΔⵠΔ[v2813.time];
      }
      v380.fillRect(vV2073, v2077, v2075, v2078);
    }
  }
  function f402(p1276, p1277, p1278, p1279, p1280, p1281, p1282) {
    var v2081;
    var v2082 = "#";
    v2082 += (v2081 = Math.floor(p1279 * p1282 + (1 - p1282) * p1276)) < 16 ? "0" + v2081.toString(16) : v2081.toString(16);
    v2082 += (v2081 = Math.floor(p1282 * p1280 + (1 - p1282) * p1277)) < 16 ? "0" + v2081.toString(16) : v2081.toString(16);
    return v2082 += (v2081 = Math.floor(p1282 * p1281 + p1278 * (1 - p1282))) < 16 ? "0" + v2081.toString(16) : v2081.toString(16);
  }
  function f403(p1283, p1284) {
    if (v2813.transition) {
      v380.globalAlpha = 1;
      p1283.ᐃⵠⲆⲆⵠ(p1284);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      p1283.ᐃⵠⲆⲆⵠ(p1284);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      p1283.ᐃⵠⲆⲆⵠ(p1284);
    }
  }
  function f404(p1285, p1286, p1287) {
    if (v2813.transition) {
      v380.globalAlpha = 1;
      p1285.ΔⵠⵠΔ(p1286, p1287);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      p1285.ΔⵠⵠΔ(p1286, p1287);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      p1285.ΔⵠⵠΔ(p1286, p1287);
    }
  }
  function f405(p1288, p1289, p1290, p1291) {
    if (v2813.transition) {
      v380.globalAlpha = 1;
      f294(v380, ⲆⲆ[p1288][v2813.time], p1290, p1291);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      f294(v380, ⲆⲆ[p1288][v2813.time], p1290, p1291);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      f294(v380, p1289, p1290, p1291);
    }
  }
  function f406(p1292, p1293, p1294, p1295, p1296, p1297) {
    var v2083 = p1295.w1;
    var v2084 = p1295.w2;
    var v2085 = p1295.w3;
    var v2086 = v2814.ᐃⲆⲆ.y + p1292 + 710;
    var v2087 = Math.max(v2814.ᐃⲆⲆ.x + p1293, 0);
    var v2088 = Math.max(-v2814.ᐃⲆⲆ.x + v381 - p1294 - 100, 0);
    var vV2087 = v2087;
    var v2089 = v381 - v2087 - v2088;
    if (p1297) {
      var v2090 = p1295.Ⲇⵠⵠ(v2083).x;
    } else {
      v2090 = v2083.r.x;
    }
    var v2091 = v2086 + 0;
    0;
    v2091 += -v2090 + 0 + 2;
    if (p1297) {
      v2090 = p1295.Ⲇⵠⵠ(v2084).x;
    } else {
      v2090 = v2084.r.x;
    }
    var v2092 = v2086 - 250 - v2091 - v2090;
    var v2093 = (v2091 += v2092 + 2) - 2;
    if (p1297) {
      v2090 = p1295.Ⲇⵠⵠ(v2085).x;
    } else {
      v2090 = v2085.r.x;
    }
    if (v2091 + (v2092 = v2086 - 350 - v2091 - v2090) < v2093) {
      v2091 += v2092 + 2;
    } else {
      v2091 = v2093;
    }
    v2092 = v2086 - 700 - v2091;
    if (p1297 > 0 && p1296.ⲆᐃⲆᐃΔᐃᐃ === 1) {
      if (v2813.transition) {
        var v2094 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 77, 72, 252, 239, 187, v2094);
      } else {
        v380.fillStyle = v554.ΔⵠᐃⵠⲆΔⵠ[v2813.time];
      }
      v380.fillRect(vV2087, v2091, v2089, v2092);
    } else {
      if (v2813.transition) {
        v2094 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(p1296.ⲆⵠⲆ[0], p1296.ⲆⵠⲆ[1], p1296.ⲆⵠⲆ[2], p1296.ᐃᐃᐃ[0], p1296.ᐃᐃᐃ[1], p1296.ᐃᐃᐃ[2], v2094);
      } else {
        v380.fillStyle = p1296.ΔⵠΔⵠΔ[v2813.time];
      }
      v380.fillRect(vV2087, v2091, v2089, v2092);
    }
  }
  function f407(p1298, p1299, p1300, p1301, p1302, p1303) {
    var v2095 = p1301.w1;
    var v2096 = p1301.w2;
    var v2097 = p1301.w3;
    var v2098 = v2814.ᐃⲆⲆ.x + p1298 - 700;
    var v2099 = Math.max(v2814.ᐃⲆⲆ.y + p1299, 0);
    var v2100 = Math.max(-v2814.ᐃⲆⲆ.y + v382 - p1300 - 100, 0);
    var vV2099 = v2099;
    var v2101 = v382 - v2099 - v2100;
    if (p1303) {
      var v2102 = p1301.Ⲇⵠⵠ(v2095);
    } else {
      v2102 = v2095.r;
    }
    var v2103 = v2098 + 0;
    var vV2103 = v2103;
    var vVV2099 = vV2099;
    var v2104 = v2102.x + 0;
    var vV2101 = v2101;
    var v2105 = v2103 += v2102.x + 0 - 2;
    if (p1303) {
      v2102 = p1301.Ⲇⵠⵠ(v2096);
    } else {
      v2102 = v2096.r;
    }
    var v2106 = v2098 + 250 - v2103 + v2102.x;
    var vV21032 = v2103;
    var vVV20992 = vV2099;
    var vV2106 = v2106;
    var vV21012 = v2101;
    var v2107 = (v2103 += v2106 - 2) - 2;
    if (p1303) {
      v2102 = p1301.Ⲇⵠⵠ(v2097);
    } else {
      v2102 = v2097.r;
    }
    if (v2107 < v2103 + (v2106 = v2098 + 350 - v2103 + v2102.x) - 3) {
      var v2108 = true;
      var vV21033 = v2103;
      var vVV20993 = vV2099;
      var vV21062 = v2106;
      var vV21013 = v2101;
      var v2109 = v2103 += v2106 - 2;
    } else {
      v2108 = vVV212;
      v2103 = v2107;
      v2109 = -1;
    }
    v2106 = v2098 + 700 - v2103;
    if (v2813.transition) {
      var v2110 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2110);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vV2103, vVV2099, v2104, vV2101);
    if (p1303) {
      if (v2813.transition) {
        v2110 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 70, 76, 42, 139, 155, v2110);
      } else {
        v380.fillStyle = v554.ΔᐃᐃⲆᐃᐃⵠ[v2813.time];
      }
    } else if (v2813.transition) {
      v2110 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2110);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vV21032, vVV20992, vV2106, vV21012);
    if (v2108) {
      if (p1303) {
        if (v2813.transition) {
          v2110 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
          v380.fillStyle = f402(17, 94, 96, 169, 214, 211, v2110);
        } else {
          v380.fillStyle = v554.ΔᐃⵠⵠΔⲆⲆ[v2813.time];
        }
      } else if (v2813.transition) {
        v2110 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2110);
      } else {
        v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
      }
      v380.fillRect(vV21033, vVV20993, vV21062, vV21013);
    }
    if (v2812.ⲆΔⵠⵠᐃ && p1303) {
      p1301.ᐃⲆΔΔⵠΔᐃΔⲆ(v2107, v2109, v2105, v2098, -v2814.ᐃⲆⲆ.y + vVV2099, -v2814.ᐃⲆⲆ.y + vVV2099 + vV2101);
    }
  }
  function f408(p1304, p1305, p1306, p1307, p1308, p1309) {
    var v2111 = p1307.w1;
    var v2112 = p1307.w2;
    var v2113 = p1307.w3;
    var v2114 = v2814.ᐃⲆⲆ.y + p1304 + 710;
    var v2115 = Math.max(v2814.ᐃⲆⲆ.x + p1305, 0);
    var v2116 = Math.max(-v2814.ᐃⲆⲆ.x + v381 - p1306 - 100, 0);
    var vV2115 = v2115;
    var v2117 = v381 - v2115 - v2116;
    if (p1309) {
      var v2118 = p1307.Ⲇⵠⵠ(v2111);
    } else {
      v2118 = v2111.r;
    }
    var v2119 = v2114 + 0;
    var vV2119 = v2119;
    var vVV2115 = vV2115;
    var v2120 = -v2118.x + 0;
    var vV2117 = v2117;
    var v2121 = v2119 += -v2118.x + 0 + 2;
    if (p1309) {
      v2118 = p1307.Ⲇⵠⵠ(v2112);
    } else {
      v2118 = v2112.r;
    }
    var v2122 = v2114 - 250 - v2119 - v2118.x;
    var vV21192 = v2119;
    var vVV21152 = vV2115;
    var vV2122 = v2122;
    var vV21172 = v2117;
    var v2123 = (v2119 += v2122 + 2) - 2;
    if (p1309) {
      v2118 = p1307.Ⲇⵠⵠ(v2113);
    } else {
      v2118 = v2113.r;
    }
    if (v2123 > v2119 + (v2122 = v2114 - 350 - v2119 - v2118.x)) {
      var v2124 = true;
      var vV21193 = v2119;
      var vVV21153 = vV2115;
      var vV21222 = v2122;
      var vV21173 = v2117;
      var v2125 = v2119 += v2122 + 2;
    } else {
      v2124 = false;
      v2119 = v2123;
      v2125 = -1;
    }
    v2122 = v2114 - 700 - v2119;
    if (v2813.transition) {
      var v2126 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2126);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vVV2115, vV2119, vV2117, v2120);
    if (p1309) {
      if (v2813.transition) {
        v2126 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 70, 76, 42, 139, 155, v2126);
      } else {
        v380.fillStyle = v554.ΔᐃᐃⲆᐃᐃⵠ[v2813.time];
      }
    } else if (v2813.transition) {
      v2126 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2126);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vVV21152, vV21192, vV21172, vV2122);
    if (v2124) {
      if (p1309) {
        if (v2813.transition) {
          v2126 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
          v380.fillStyle = f402(17, 94, 96, 169, 214, 211, v2126);
        } else {
          v380.fillStyle = v554.ΔᐃⵠⵠΔⲆⲆ[v2813.time];
        }
      } else if (v2813.transition) {
        v2126 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2126);
      } else {
        v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
      }
      v380.fillRect(vVV21153, vV21193, vV21173, vV21222);
    }
    if (v2812.ⲆΔⵠⵠᐃ && p1309) {
      p1307.ΔⲆⲆⵠᐃᐃⵠΔΔ(v2123, v2125, v2121, v2114, -v2814.ᐃⲆⲆ.x + vVV2115, -v2814.ᐃⲆⲆ.x + vVV2115 + vV2117);
    }
  }
  function f409(p1310, p1311, p1312, p1313, p1314, p1315) {
    var v2127 = p1313.w1;
    var v2128 = p1313.w2;
    var v2129 = p1313.w3;
    var v2130 = v2814.ᐃⲆⲆ.x + p1310 - 700;
    var v2131 = Math.max(v2814.ᐃⲆⲆ.y + p1311, 0);
    var v2132 = Math.max(-v2814.ᐃⲆⲆ.y + v382 - p1312 - 100, 0);
    var vV2131 = v2131;
    var v2133 = v382 - v2131 - v2132;
    if (p1315) {
      var v2134 = p1313.Ⲇⵠⵠ(v2127).x;
    } else {
      v2134 = v2127.r.x;
    }
    var v2135 = v2130 + 0;
    0;
    v2135 += v2134 + 0 - 2;
    if (p1315) {
      v2134 = p1313.Ⲇⵠⵠ(v2128).x;
    } else {
      v2134 = v2128.r.x;
    }
    var v2136 = v2130 + 250 - v2135 + v2134;
    var v2137 = (v2135 += v2136 - 2) - 2;
    if (p1315) {
      v2134 = p1313.Ⲇⵠⵠ(v2129).x;
    } else {
      v2134 = v2129.r.x;
    }
    if (v2137 < v2135 + (v2136 = v2130 + 350 - v2135 + v2134) - 3) {
      v2135 += v2136 - 2;
    } else {
      v2135 = v2137;
    }
    v2136 = v2130 + 700 - v2135;
    if (p1315 > 0 && p1314.ⲆᐃⲆᐃΔᐃᐃ === 1) {
      if (v2813.transition) {
        var v2138 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 77, 72, 252, 239, 187, v2138);
      } else {
        v380.fillStyle = v554.ΔⵠᐃⵠⲆΔⵠ[v2813.time];
      }
      v380.fillRect(v2135, vV2131, v2136, v2133);
    } else {
      if (v2813.transition) {
        v2138 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(p1314.ⲆⵠⲆ[0], p1314.ⲆⵠⲆ[1], p1314.ⲆⵠⲆ[2], p1314.ᐃᐃᐃ[0], p1314.ᐃᐃᐃ[1], p1314.ᐃᐃᐃ[2], v2138);
      } else {
        v380.fillStyle = p1314.ΔⵠΔⵠΔ[v2813.time];
      }
      v380.fillRect(v2135, vV2131, v2136, v2133);
    }
  }
  function f410(p1316, p1317, p1318, p1319) {
    const v2139 = ~(p1316 & 55740) & (p1316 | 55740);
    const v2140 = p1319 ^ 4859;
    const vPp = f476(v2139, p1317 ^ 15908, p1318 ^ 816);
    const vF47 = function (p1320, p1321) {
      const v2141 = (16 << (p1320 >> 16 & 255)) + (24 << (p1320 >> 24 & 255)) + (0 << (p1320 >> 8 & 255)) + (8 << (p1320 >> 0 & 255));
      const v2142 = ~(p1321 & 44963) & p1321 | ~(p1321 & 44963) & 44963;
      const vTp2 = f478(v2141, v2142, v2141, v2142);
      f466(v2141, v2142, v2141, v2142);
      return vTp2 ^ 24474;
    }(v2140, v2139);
    return (0 << ((vPp ^ vF47) >> 24 & 255)) + (24 << ((vPp ^ vF47) >> 8 & 255)) + (8 << ((vPp ^ vF47) >> 0 & 255)) + (16 << ((vPp ^ vF47) >> 16 & 255));
  }
  function f411(p1322, p1323, p1324, p1325, p1326) {
    if (v2813.transition && p1326 == 1) {
      v380.globalAlpha = 1;
      f294(v380, ⲆⲆ[p1322][v2813.time][p1323], p1324, p1325);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      f294(v380, ⲆⲆ[p1322][v2813.time][p1323], p1324, p1325);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      v380.globalAlpha = p1326;
      f294(v380, ⲆⲆ[p1322][v2813.time][p1323], p1324, p1325);
      v380.globalAlpha = 1;
    }
  }
  function f412(p1327) {
    v380.globalAlpha = p1327.alpha;
    f87(v380, p1327.x + v2814.ᐃⲆⲆ.x, p1327.y + v2814.ᐃⲆⲆ.y, p1327.r);
    f86(v380, v554.ΔᐃⵠΔⵠΔⲆ[v2813.time]);
    v380.globalAlpha = 1;
  }
  function f413(p1328, p1329, p1330, p1331) {
    var v2143 = p1329.width;
    var v2144 = p1329.height;
    var v2145 = Math.floor(v2143 / 2);
    var v2146 = Math.floor(v2144 / 2);
    if (v2813.transition) {
      v380.globalAlpha = 1;
      f294(v380, ⲆⲆ[p1328][v2813.time], 0, 0, v2143, v2144, p1330, p1331, v2145, v2146);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      f294(v380, ⲆⲆ[p1328][v2813.time], 0, 0, v2143, v2144, p1330, p1331, v2145, v2146);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      f294(v380, p1329, 0, 0, v2143, v2144, p1330, p1331, v2145, v2146);
    }
  }
  function f414(p1332, p1333) {
    const v2147 = (1013904223 + (p1332 + 33180) * 1664525) % 4294967296;
    const v2148 = ~(p1333 & 31804) & p1333 | ~(p1333 & 31804) & 31804;
    const vPp2 = f476(v2147, v2148, v2147);
    f68(v2148, v2147, v2148, v2147);
    return ~(vPp2 & 23497) & 23497 | ~(vPp2 & 23497) & vPp2;
  }
  function f415(p1334, p1335, p1336, p1337, p1338, p1339) {
    var v2149 = p1337.w1;
    var v2150 = p1337.w2;
    var v2151 = p1337.w3;
    var v2152 = v2814.ᐃⲆⲆ.y + p1334 - 700;
    var v2153 = Math.max(v2814.ᐃⲆⲆ.x + p1335, 0);
    var v2154 = Math.max(-v2814.ᐃⲆⲆ.x + v381 - p1336 - 100, 0);
    var vV2153 = v2153;
    var v2155 = v381 - v2153 - v2154;
    if (p1339) {
      var v2156 = p1337.Ⲇⵠⵠ(v2149);
    } else {
      v2156 = v2149.r;
    }
    var v2157 = v2152 + 0;
    var vVV2153 = vV2153;
    var vV2157 = v2157;
    var v2158 = v2156.x + 0;
    var vV2155 = v2155;
    var v2159 = v2157 += v2156.x + 0 - 2;
    if (p1339) {
      v2156 = p1337.Ⲇⵠⵠ(v2150);
    } else {
      v2156 = v2150.r;
    }
    var v2160 = v2152 + 250 - v2157 + v2156.x;
    var vV21572 = v2157;
    var vVV21532 = vV2153;
    var vV2160 = v2160;
    var vV21552 = v2155;
    var v2161 = (v2157 += v2160 - 2) - 2;
    if (p1339) {
      v2156 = p1337.Ⲇⵠⵠ(v2151);
    } else {
      v2156 = v2151.r;
    }
    if (v2161 < v2157 + (v2160 = v2152 + 350 - v2157 + v2156.x) - 3) {
      var vVV2452 = vV245;
      var vV21573 = v2157;
      var vVV21533 = vV2153;
      var vV21602 = v2160;
      var vV21553 = v2155;
      var v2162 = v2157 += v2160 - 2;
    } else {
      vVV2452 = vVVV21222;
      v2157 = v2161;
      v2162 = -1;
    }
    v2160 = v2152 + 700 - v2157;
    if (v2813.transition) {
      var v2163 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2163);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vVV2153, vV2157, vV2155, v2158);
    if (p1339) {
      if (v2813.transition) {
        v2163 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(15, 70, 76, 42, 139, 155, v2163);
      } else {
        v380.fillStyle = v554.ΔᐃᐃⲆᐃᐃⵠ[v2813.time];
      }
    } else if (v2813.transition) {
      v2163 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2163);
    } else {
      v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
    }
    v380.fillRect(vVV21532, vV21572, vV21552, vV2160);
    if (vVV2452) {
      if (p1339) {
        if (v2813.transition) {
          v2163 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
          v380.fillStyle = f402(17, 94, 96, 169, 214, 211, v2163);
        } else {
          v380.fillStyle = v554.ΔᐃⵠⵠΔⲆⲆ[v2813.time];
        }
      } else if (v2813.transition) {
        v2163 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
        v380.fillStyle = f402(9, 55, 63, 11, 106, 132, v2163);
      } else {
        v380.fillStyle = v554.ⲆᐃΔΔΔ[v2813.time];
      }
      v380.fillRect(vVV21533, vV21573, vV21553, vV21602);
    }
    if (v2812.ⲆΔⵠⵠᐃ && p1339) {
      p1337.ⵠⲆⲆΔΔᐃⲆᐃᐃ(v2161, v2162, v2159, v2152, -v2814.ᐃⲆⲆ.x + vVV2153, -v2814.ᐃⲆⲆ.x + vVV2153 + vV2155);
    }
  }
  function f416(p1340, p1341) {
    if (v2813.transition) {
      v380.globalAlpha = 1;
      p1340.ⵠΔΔᐃΔ(p1341);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
      p1340.ⵠΔΔᐃΔ(p1341);
      v2813.time = v2813.time ? 0 : 1;
      v380.globalAlpha = 1;
    } else {
      p1340.ⵠΔΔᐃΔ(p1341);
    }
  }
  var v2164 = 2;
  var v2165 = 1;
  var v2166 = 2;
  function f417(p1342, p1343) {
    var v2167 = p1342.getBoundingClientRect();
    return {
      x: p1343.clientX - v2167.left,
      y: p1343.clientY - v2167.top
    };
  }
  function f418(p1344, p1345, p1346, p1347, p1348, p1349, p1350, p1351 = 0, p1352 = 0, p1353, p1354) {
    if (vVVVUndefined1975 === p1353) {
      p1353 = 0;
    }
    if (p1354 === undefined) {
      p1354 = 1;
    }
    if (p1349 !== 1) {
      p1349 = 0;
    }
    if (p1347) {
      var vP1347 = p1347;
    }
    var v2168;
    var v2169 = {
      width: p1344,
      height: p1345,
      ⵠΔ: vP1347,
      state: 0,
      translate: {
        x: p1351,
        y: p1352,
        ⵠⲆⵠΔᐃ: p1351,
        ΔⲆⲆᐃⲆ: p1352
      },
      ⲆⲆⲆⲆΔΔⲆΔᐃ: p1349,
      Δᐃⵠᐃ: 0,
      callback: p1350,
      position: p1353,
      active: p1354
    };
    function f419() {
      return v2169.ⵠΔ[0];
    }
    function f420(p1355) {
      var v2170 = v2169.translate;
      if (v2169.width === 0 || v2169.height === 0) {
        v2169.width = v2169.ⵠΔ[0].width;
        v2169.height = v2169.ⵠΔ[0].height;
      }
      return p1355.x > v2170.x && p1355.x < v2170.x + v2169.width / p1348 && p1355.y > v2170.y && p1355.y < v2170.y + v2169.height / p1348;
    }
    p1349 = function () {
      var v2171 = 0;
      if (v2169.ⲆⲆⲆⲆΔΔⲆΔᐃ === 1) {
        if (v2165 === 0 || v2166 === 0) {
          v2169.Δᐃⵠᐃ = (0 + v3027 * 1000) % 1000;
        } else if (0 < 0) {
          v2169.Δᐃⵠᐃ = 0 > 500 ? 0 + v3027 * 1000 : 0 - v3027 * 1000;
          if (0 > 0 || 1000 < 0) {
            v2169.Δᐃⵠᐃ = 0;
          }
        }
        v2171 = ⲆΔΔ.ᐃⲆᐃᐃΔ(500 < 0 ? 2 : 0) * 0.2;
      }
      return v2171;
    };
    if ((p1348 = p1348 === 3 ? 3 : p1348 === 1 ? 2 : 1) === 2) {
      v2168 = function (p1356) {
        var v2172 = 1 + p1349();
        var vF419 = f419();
        var v2173 = v2169.width * v2172 / 2;
        var v2174 = v2172 * v2169.height / 2;
        var v2175 = (v2173 - v2169.width / 2) / 2;
        var v2176 = (v2174 - v2169.height / 2) / 2;
        f294(p1356, vF419, v2169.translate.x - v2175, v2169.translate.y - v2176, v2173, v2174);
      };
    } else if (p1348 === 3) {
      v2168 = function (p1357) {
        var vF4192 = f419();
        var v2177 = v2169.width;
        var v2178 = v2169.height;
        var v2179 = (v2177 - v2169.width) / 2;
        var v2180 = (v2178 - v2169.height) / 2;
        f294(p1357, vF4192, v2169.translate.x - v2179, v2169.translate.y - v2180, v2177, v2178);
      };
      p1348 = 1;
    } else {
      v2168 = function (p1358) {
        f294(p1358, f419(), v2169.translate.x, v2169.translate.y);
      };
    }
    return {
      info: v2169,
      ᐃⵠᐃⲆ: function (p1359, p1360, p1361) {
        if (f420(p1360)) {
          if (p1361 == 1) {
            v2169.state = v2166;
          } else if (v2164 == p1361 || p1361 == 0 && v2166 != 0) {
            v2169.state = v2165;
          }
          return true;
        } else {
          v2169.state = 0;
          return false;
        }
      },
      ΔⵠⵠΔ: v2168,
      ΔᐃⵠΔΔⵠΔ: f420
    };
  }
  function f421(p1362, p1363, p1364, p1365, p1366, p1367, p1368, p1369, p1370, p1371, p1372, p1373, p1374, p1375, p1376) {
    if (p1362.length === 0) {
      p1362 = " ";
    }
    if (p1368 === undefined) {
      p1368 = 0;
    }
    if (p1369 === undefined) {
      p1369 = 0;
    }
    if (p1370 === vVVUndefined197) {
      p1370 = 0;
    }
    if (p1375 === undefined) {
      p1375 = 0;
    }
    var v2181 = document.createElement("canvas");
    var v2182 = v2181.getContext("2d");
    v2182.textBaseline = "middle";
    v2182.font = (vVUndefined27 !== p1376 ? p1376 + " " : "") + p1365 + "px " + p1363;
    p1366 = p1366 !== undefined ? Math.min(v2182.measureText(p1362).width, p1366) : v2182.measureText(p1362).width;
    v2181.width = p1366 + p1368;
    v2181.height = p1365 + p1369;
    if (vVUndefined28 !== p1367) {
      if (p1372 !== undefined) {
        v2182.globalAlpha = p1372;
      }
      v2182.fillStyle = p1367;
      if (vVVVUndefined1975 !== p1373) {
        ⲆⲆΔΔΔᐃⵠⵠⲆ(v2182, p1370 + 2, p1370, p1366 + p1368 - p1370 * 2 - 4, p1365 + p1369 - p1370 * 2, p1373);
        v2182.fill();
      } else {
        v2182.fillRect(p1370, p1370, p1366 + p1368 - p1370 * 2, p1365 + p1369 - p1370 * 2);
      }
      v2182.globalAlpha = 1;
      if (p1370 !== 0) {
        v2182.lineWidth = p1370;
        v2182.strokeStyle = p1371;
        v2182.stroke();
      }
    }
    v2182.textBaseline = "middle";
    v2182.font = (vVVVUndefined273 !== p1376 ? p1376 + " " : "") + p1365 + "px " + p1363;
    if (p1374 !== undefined) {
      v2182.strokeStyle = p1374;
      v2182.lineWidth = p1375;
      v2182.lineJoin = "miter";
      v2182.miterLimit = 2;
      v2182.strokeText(p1362, Math.floor(p1368 / 2), Math.floor(p1369 / 2) + Math.floor(p1365 / 2), p1366);
    }
    v2182.fillStyle = p1364;
    v2182.fillText(p1362, Math.floor(p1368 / 2), Math.floor(p1369 / 2) + Math.floor(p1365 / 2), p1366);
    v2181.w2 = v2181.width / 2;
    v2181.ⵠΔⵠᐃⲆ = v2181.height / 2;
    return v2181;
  }
  function f422(p1377, p1378, p1379, p1380, p1381) {
    var v2183 = {
      x: p1379,
      y: p1380,
      ⵠⲆⵠΔᐃ: p1379,
      ΔⲆⲆᐃⲆ: p1380
    };
    return {
      translate: v2183,
      ΔⵠⵠΔ: function (p1382) {
        f294(p1382, p1377, v2183.x, v2183.y, p1377.width / 2, p1377.height / 2);
      },
      active: p1378,
      position: p1381
    };
  }
  var v2184 = "send";
  var v2185 = ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("id") === "1" ? 1 : 0;
  var v2186 = ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("password");
  var v2187 = ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("debug") || vVVUndefined197;
  if (vVVUndefined273 !== v2187) {
    v2187 = JSON.parse(vWindow.decodeURIComponent(v2187));
  }
  var v2188 = ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("server") || undefined;
  var v2189 = ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("region") || vVVVUndefined1975;
  var v2190 = "starve.io";
  var v2191 = "https://" + v2190;
  var v2192 = {
    IDLE: 64,
    ⲆⲆⵠⵠⲆⵠⵠ: 8,
    ΔⵠΔⵠᐃ: 4,
    ᐃⲆΔΔΔΔᐃ: 256,
    ᐃΔⵠᐃᐃᐃⲆ: 32,
    ⲆΔΔⲆ: 2,
    ⵠⵠΔⲆⲆᐃΔ: 16,
    ᐃΔΔΔᐃᐃᐃᐃⲆ: 1,
    ΔⲆⵠᐃᐃΔᐃ: 128
  };
  var v2193 = [{
    ⲆΔᐃΔⲆ: 1000,
    items: [[2, 113], [1, 117], [8, 110], [1, 143]]
  }, {
    ⲆΔᐃΔⲆ: 2000,
    items: [[2, 118], [1, 8], [2, 117], [16, 110], [2, 143]]
  }, {
    ⲆΔᐃΔⲆ: 4000,
    items: [[3, 118], [1, 1], [4, 117], [20, 110], [4, 143], [1, 114], [80, 108], [140, 109]]
  }, {
    ⲆΔᐃΔⲆ: 8000,
    items: [[1, 29], [4, 118], [1, 3], [6, 117], [30, 110], [6, 143], [1, 114], [150, 108], [200, 109], [60, 111], [2, 127]]
  }, {
    ⲆΔᐃΔⲆ: 16000,
    items: [[1, 29], [1, 4], [1, 198], [7, 136], [2, 127], [2, 118], [1, 119], [15, 163], [2, 171], [1, 159], [1, 55], [200, 108], [300, 109]]
  }, {
    ⲆΔᐃΔⲆ: 16000,
    items: [[1, 29], [1, 11], [1, 50], [1, 3], [10, 136], [4, 127], [6, 118], [3, 195], [1, 28], [200, 108], [300, 109]]
  }, {
    ⲆΔᐃΔⲆ: 16000,
    items: [[1, 29], [1, 83], [1, 36], [3, 195], [1, 0], [1, 3], [7, 136], [2, 127], [4, 118], [150, 108], [200, 109], [1, 158]]
  }, {
    ⲆΔᐃΔⲆ: 16000,
    items: [[1, 29], [1, 84], [1, 3], [7, 136], [2, 127], [4, 118], [2, 135], [4, 144], [10, 141], [6, 132], [4, 115], [1, 49], [500, 109]]
  }, {
    ⲆΔᐃΔⲆ: 16000,
    items: [[1, 29], [1, 3], [16, 138], [1, 127], [6, 118], [3, 195], [1, 48], [1, 0], [16, 125], [150, 108], [200, 109]]
  }, {
    ⲆΔᐃΔⲆ: 20000,
    items: [[1, 29], [1, 3], [1, 136], [1, 127], [3, 118], [3, 195], [1, 26], [1, 5], [1, 15], [2, 169], [50, 108], [100, 109]]
  }];
  let v2194 = 0;
  const v2195 = [];
  var v2196 = {
    ΔΔΔⵠⵠⲆⵠΔᐃ: 60000,
    ΔⵠΔᐃΔⲆᐃ: 600000,
    ᐃΔΔⵠΔΔΔⵠⵠ: "[21]",
    ᐃⲆᐃΔⲆᐃⵠⲆΔ: 3,
    ⵠᐃⵠᐃᐃⲆᐃ: 1,
    ⵠⲆᐃⲆᐃΔΔ: 0.2,
    ᐃⵠⵠⲆᐃᐃΔᐃΔ: 5,
    ⲆⲆΔᐃⵠⲆⲆΔⲆ: 2000,
    ᐃΔᐃΔΔᐃⵠᐃᐃ: 0.58,
    ΔΔⲆⵠᐃᐃᐃ: 2,
    ⵠΔΔΔⵠᐃᐃⵠⵠ: 200,
    ᐃⲆⲆⵠᐃΔᐃⵠᐃ: 14,
    ᐃᐃᐃΔⲆΔᐃⵠᐃ: 20,
    ⵠᐃᐃⵠΔⵠᐃ: 4,
    ᐃᐃΔᐃⲆΔⵠⵠΔ: 50,
    ⲆᐃΔⵠΔⲆΔⲆΔ: 8000,
    ΔⲆⵠⲆⲆⲆⵠ: 4,
    ᐃⲆⵠΔᐃΔⵠ: 52,
    ᐃⲆⵠᐃⲆΔᐃΔᐃ: 14,
    ᐃΔΔᐃⵠΔⵠ: 3,
    ᐃᐃⲆᐃᐃⵠᐃⲆΔ: 5,
    ΔⵠᐃΔⵠΔᐃⲆΔ: 5,
    ᐃⵠⲆᐃⲆⵠΔᐃⵠ: 125000,
    ⵠⵠΔⲆⲆᐃΔ: 0.2,
    ΔΔΔⲆⲆᐃᐃ: 0
  };
  function f423(p1383, p1384, p1385, p1386) {
    const v2197 = (24 << (p1383 >> 8 & 255)) + (16 << (p1383 >> 16 & 255)) + (0 << (p1383 >> 0 & 255)) + (8 << (p1383 >> 24 & 255));
    const v2198 = (2531011 + (p1384 + 26320) * 214013) % 4294967296;
    const v2199 = (2147483587 + (59466 + p1385) * 2147483629) % 2147483647;
    const v2200 = (2147483587 + (p1386 + 61747) * 2147483629) % 2147483647;
    const vVp = f473(v2197, v2198, v2199, v2200);
    const vF49 = function (p1387, p1388, p1389, p1390, p1391, p1392) {
      const v2201 = (24 << (p1387 >> 24 & 255)) + (8 << (p1387 & 255)) + (0 << (p1387 >> 8 & 255)) + (16 << (p1387 >> 16 & 255));
      const v2202 = ((p1388 + 4955) * 1103515245 + 12345) % 2147483648;
      const v2203 = (8 << (p1389 >> 24 & 255)) + (16 << (p1389 >> 16 & 255)) + (0 << (p1389 & 255)) + (24 << (p1389 >> 8 & 255));
      const v2204 = ((p1392 + 41903) * 2147483629 + 2147483587) % 2147483647;
      const vF92 = f9(v2201, v2202, v2203, p1390 ^ 36304, (0 << (p1391 >> 16 & 255)) + (24 << (p1391 >> 8 & 255)) + (8 << (p1391 & 255)) + (16 << (p1391 >> 24 & 255)));
      const vVp2 = f473(v2204, v2201, v2202, v2203);
      return (0 << ((vF92 ^ vVp2) >> 0 & 255)) + (8 << ((vF92 ^ vVp2) >> 24 & 255)) + (24 << ((vF92 ^ vVp2) >> 8 & 255)) + (16 << ((vF92 ^ vVp2) >> 16 & 255));
    }(v2197, v2198, v2199, v2200, v2197, v2198);
    return (8 << ((vVp ^ vF49) >> 24 & 255)) + (16 << ((vVp ^ vF49) >> 16 & 255)) + (24 << ((vVp ^ vF49) >> 8 & 255)) + (0 << ((vVp ^ vF49) >> 0 & 255));
  }
  var v2205 = {
    ᐃⵠⵠ: 480000,
    ⵠⲆᐃᐃⲆⵠⲆ: 10,
    ᐃΔΔᐃⵠⵠⵠ: 16,
    ᐃⵠΔᐃⵠⵠⲆⲆⵠ: 6,
    ⵠⵠⵠᐃᐃⵠᐃ: 60,
    ᐃⵠΔⲆⲆ: 1,
    ⵠⲆⲆᐃΔ: 2,
    ᐃⵠⵠⲆΔ: 4,
    ⲆⵠⲆⲆᐃ: 8,
    ⵠⲆᐃⲆᐃΔΔ: 10,
    ᐃⵠⲆΔᐃᐃⲆ: 100,
    ᐃⲆⵠⵠⵠᐃᐃ: 100,
    Δⵠᐃᐃᐃᐃᐃ: 100,
    ⲆⲆⵠᐃⵠⵠΔᐃΔ: 100,
    ΔᐃⲆⵠᐃΔᐃ: 100,
    ⵠⵠⲆⲆᐃᐃⲆ: 100,
    ΔᐃΔΔⲆⵠⵠᐃⵠ: 100,
    ⵠⵠⲆⲆᐃᐃⲆ: 100,
    ΔⵠᐃᐃᐃⲆᐃ: 100,
    ⲆⵠΔΔΔΔⲆ: 100,
    ΔⵠⵠᐃΔ: 0,
    ⵠⵠᐃᐃᐃⲆᐃ: 1,
    ⵠⲆᐃΔⲆ: 2,
    ᐃⵠΔᐃΔ: 3,
    ⵠⵠΔⲆⵠ: 4,
    ΔⵠⲆΔⵠᐃᐃ: 5,
    ΔⵠᐃⲆᐃ: 6,
    ⵠⵠᐃΔΔ: 7,
    ⵠᐃᐃⲆᐃΔΔΔⲆ: {
      sydney: "Sydney",
      losangeles: "Los Angeles",
      frankfurt: "Frankfurt",
      osaka: "Osaka",
      atlanta: "Atlanta"
    },
    ⵠⵠⲆΔᐃᐃΔ: {
      0: "normal",
      2: "zombies",
      3: "vampires",
      4: "forest",
      6: "community",
      7: "experimental"
    },
    ⲆⲆᐃⲆⲆⲆⲆ: 0,
    ΔᐃᐃⲆⲆⵠᐃ: 0,
    ⵠᐃᐃΔⲆΔⲆ: 30,
    ᐃΔΔΔⵠᐃΔᐃΔ: 2,
    ⵠⵠⵠᐃᐃⵠᐃ: 60000,
    ΔᐃⲆΔΔᐃⲆⲆᐃ: 0,
    ⲆⵠᐃⵠΔⲆⵠΔⵠ: 0,
    ΔᐃⵠᐃⲆⲆᐃᐃΔ: 50,
    ΔⵠᐃᐃᐃⲆΔⵠΔ: 0,
    ᐃⲆⲆⲆΔᐃΔⲆΔ: 40,
    ⵠⵠⵠᐃⲆⲆᐃᐃᐃ: 39,
    ⲆᐃᐃⲆΔᐃⲆⲆⵠ: 830,
    ⲆⲆⵠⵠⲆΔᐃ: 25,
    ⵠⲆⲆΔⲆᐃⵠ: 8,
    ⵠⵠΔᐃᐃ: 0,
    ᐃⲆᐃⵠΔ: 0,
    ᐃΔΔᐃⵠΔᐃ: 200,
    ⲆⲆⵠᐃΔᐃΔ: 0,
    ⵠⵠᐃΔⵠ: 250,
    ⵠΔⵠᐃⵠⲆΔ: 150,
    ⵠⲆⵠᐃᐃⲆΔ: 0,
    ᐃⲆⲆⲆⲆ: 350,
    ᐃⲆⲆⲆᐃΔⵠ: 100,
    ⲆΔᐃΔⲆⵠⲆ: 700,
    ⵠΔⵠᐃⵠ: 39879
  };
  var v2206 = [];
  for (v717 = 0; v717 < 500; v717++) {
    v2206[v717] = 0;
  }
  v2206[47] = 1;
  v2206[57] = 1;
  v2206[0] = 1;
  v2206[5] = 1;
  v2206[6] = 1;
  v2206[30] = 1;
  v2206[19] = 1;
  v2206[9] = 1;
  v2206[62] = 1;
  v2206[63] = 1;
  v2206[13] = 1;
  v2206[14] = 1;
  v2206[15] = 1;
  v2206[33] = 1;
  v2206[34] = 1;
  v2206[16] = 1;
  v2206[17] = 1;
  v2206[12] = 1;
  v2206[18] = 1;
  var v2207 = [{
    time: 2880000
  }, {
    time: 1440000
  }, {
    time: 1920000
  }, {
    time: 1440000
  }, {
    time: 2880000
  }, {
    time: 2400000
  }, {
    time: 2400000
  }, {
    time: 4800000
  }, {
    time: 2880000
  }, {
    time: 3360000
  }, {
    time: 2880000
  }, {
    time: 3840000
  }, {
    time: 3360000
  }];
  var v2208 = {
    ⲆΔΔⲆⲆ: 73,
    ΔΔᐃᐃᐃ: 71,
    ᐃⵠⲆⵠΔ: 11,
    ΔΔⲆⲆΔ: 39,
    ᐃᐃⵠΔⵠ: 17,
    ΔᐃⲆΔΔ: 100,
    ᐃΔⵠᐃⵠ: 46,
    ⵠᐃⲆⲆᐃΔᐃ: 84,
    ΔᐃΔᐃ: 0,
    ΔΔΔΔΔ: 91,
    ΔΔᐃⲆⲆ: 36,
    ⵠⲆⵠᐃⵠ: 5,
    ⲆⲆⵠᐃΔ: 38,
    ΔᐃⵠΔⲆ: 86,
    ΔⵠᐃᐃΔⲆⵠ: 89,
    ᐃⵠᐃΔⲆ: 34,
    ᐃᐃΔⲆⲆ: 74,
    ⵠⵠᐃⵠⵠ: 75,
    ⵠⵠⲆᐃⵠ: 48,
    ΔΔⵠⵠΔ: 29,
    ⵠᐃⵠⲆᐃ: 50,
    ᐃΔᐃⵠᐃ: 51,
    ⲆⲆᐃⵠⲆ: 70,
    ᐃⵠⲆΔᐃ: 37,
    ⲆᐃⲆᐃᐃ: 30,
    ΔΔΔᐃⲆ: 6,
    ⲆΔΔᐃⲆ: 19,
    ᐃⵠⲆᐃΔ: 35,
    ᐃⲆⲆΔⵠ: 31,
    ΔΔΔⲆΔ: 2,
    ⲆᐃΔᐃᐃ: 60,
    ᐃᐃⲆⵠⵠ: 28,
    Ⲇⵠᐃᐃⵠ: 44,
    ⲆΔⵠⲆΔ: 66,
    ⲆⲆⲆΔΔ: 54,
    ΔⲆᐃΔⵠ: 21,
    ᐃΔⲆᐃΔ: 53,
    Δᐃᐃᐃⵠ: 88,
    ᐃⵠΔΔΔ: 52,
    ⵠⵠᐃⲆᐃ: 78,
    ΔᐃⲆΔᐃⲆᐃ: 76,
    ᐃⲆⵠΔⵠ: 33,
    ΔⵠᐃΔΔ: 67,
    ᐃᐃΔΔⲆ: 20,
    ⲆⵠΔΔⵠ: 40,
    ⵠⵠΔΔⵠ: 65,
    ⲆⵠⵠⲆⵠ: 42,
    ᐃΔⲆⵠᐃ: 4,
    ΔⵠΔΔⵠ: 9,
    ᐃⵠⵠⲆⲆ: 8,
    ⵠΔΔⵠΔ: 12,
    ᐃⵠⲆⵠⲆ: 72,
    ⵠΔⵠᐃⵠ: 3,
    ⵠⵠⲆⲆⵠ: 13,
    ⵠΔᐃⲆΔ: 64,
    ⲆᐃⲆⲆⵠ: 68,
    ⲆⵠᐃΔⵠ: 15,
    ΔⲆⵠⲆΔ: 49,
    ⵠⲆᐃᐃⲆ: 43,
    ΔΔΔΔᐃ: 18,
    ΔᐃΔⲆⲆ: 47,
    ΔᐃⲆᐃΔ: 61,
    ᐃⵠⲆΔⵠ: 62,
    ΔΔⵠⲆᐃ: 45,
    Ⲇⵠᐃᐃᐃ: 16,
    ᐃⲆⵠⲆᐃ: 27,
    ⵠⵠΔⲆⲆ: 23,
    ⲆΔⵠⵠΔ: 32,
    ᐃΔΔⵠᐃ: 14,
    ΔΔᐃⲆᐃ: 69,
    ⲆΔⲆᐃⲆ: 56,
    ⵠⲆΔΔⲆ: 25,
    ΔⵠᐃⵠⲆ: 7,
    ᐃᐃⲆⵠΔᐃΔ: 82,
    ᐃᐃᐃΔΔΔΔ: 83,
    ᐃⵠⲆᐃᐃ: 55,
    ⲆⲆⵠⲆⲆ: 90,
    ⲆⵠΔⵠⲆ: 81,
    ⲆᐃⲆᐃⵠΔⵠ: 85,
    ΔⲆⵠΔᐃ: 24,
    ⲆⲆⵠⵠⲆ: 77,
    ΔⵠⵠΔⲆ: 79,
    ᐃⵠⵠᐃᐃ: 63,
    ⵠᐃΔΔⲆ: 80,
    ᐃⵠᐃᐃⵠ: 87,
    ΔⵠΔⲆⵠ: 41,
    ΔᐃΔⲆΔ: 1,
    ⲆⲆΔⲆⲆ: 26,
    ⲆⲆⲆΔⲆ: 22,
    ⵠᐃΔᐃΔ: 10
  };
  var v2209 = [[24, 108], [25, 111], [26, 112], [27, 121], [28, 202]];
  function f424(p1393, p1394, p1395, p1396) {
    this.id = p1393;
    this.ⲆΔᐃⲆⲆ = (p1393 + 5) * 8;
    this.ᐃΔⲆⵠⲆ = v381 / 1366;
    this.x = p1394;
    this.y = p1395;
    this.c = Math.sin(p1396);
    this.ΔⵠⵠⲆ = Math.cos(p1396);
    this.alpha = 0;
  }
  function f425(p1397) {
    this.mode = 0;
    this.ᐃΔᐃᐃΔⵠⵠⲆⲆ = 470;
    var v2210 = 149;
    if (v2210 === 9) {
      v2210 = 73;
    }
    this.ⵠⵠⲆⵠⵠᐃᐃ = p1397;
    this.ⵠⵠⵠΔⵠᐃᐃΔⲆ = 10864;
    this.ᐃⵠⵠⲆᐃ = 0;
    this.ᐃΔⲆΔᐃᐃⲆ = 6;
    this.ᐃΔΔᐃ = [];
    this.ⲆΔᐃ = [];
    this.ⲆΔᐃ[0] = [];
    this.ⲆΔᐃ[100] = [];
    this.ⲆΔᐃ[80] = [];
    this.ⲆΔᐃ[60] = [];
    this.ⲆΔᐃ[67] = [];
    this.ⲆΔᐃ[70] = [];
    this.ⲆΔᐃ[77] = [];
    this.ⲆΔᐃ[71] = [];
    this.ⲆΔᐃ[72] = [];
    this.ⲆΔᐃ[73] = [];
    this.ⲆΔᐃ[74] = [];
    this.ⲆΔᐃ[65] = [];
    this.ⲆΔᐃ[66] = [];
    this.ΔⲆᐃᐃᐃΔⵠ = 103;
    this.Ⲇᐃⵠᐃⵠᐃᐃ = 153;
    this.ΔⲆᐃᐃᐃΔⵠ;
    this.Ⲇᐃⵠᐃⵠᐃᐃ;
    this.ⲆΔᐃ[62] = [];
    this.ⲆΔᐃ[88] = [];
    this.ⲆΔᐃ[91] = [];
    this.ⲆΔᐃ[90] = [];
    this.ⲆΔᐃ[63] = [];
    this.ⲆΔᐃ[78] = [];
    this.ⲆΔᐃ[64] = [];
    this.ⲆΔᐃ[69] = [];
    this.ⲆΔᐃ[68] = [];
    this.ⲆΔᐃ[79] = [];
    this.ⲆΔᐃ[89] = [];
    this.ⲆΔᐃ[83] = [];
    this.ⲆΔᐃ[84] = [];
    this.ⲆΔᐃ[85] = [];
    this.ⲆΔᐃ[81] = [];
    this.ⲆΔᐃ[82] = [];
    this.ⲆΔᐃ[86] = [];
    this.ⲆΔᐃ[34] = [];
    this.ⲆΔᐃ[36] = [];
    this.ⲆΔᐃ[61] = [];
    var v2211 = 226;
    if (v2211 == 4) {
      v2211 = 24;
    }
    this.ⲆΔᐃ[2] = [];
    this.ⲆΔᐃ[1] = [];
    this.ⲆΔᐃ[6] = [];
    this.ⲆΔᐃ[3] = [];
    this.ⲆΔᐃ[5] = [];
    this.ⲆΔᐃ[12] = [];
    this.ⲆΔᐃ[13] = [];
    this.ⲆΔᐃ[14] = [];
    this.ⲆΔᐃ[20] = [];
    this.ⲆΔᐃ[52] = [];
    this.ⲆΔᐃ[4] = [];
    this.ⲆΔᐃ[7] = [];
    this.ⲆΔᐃ[8] = [];
    this.ⲆΔᐃ[9] = [];
    this.ⲆΔᐃ[19] = [];
    this.ⲆΔᐃ[50] = [];
    this.ⲆΔᐃ[41] = [];
    this.ⲆΔᐃ[10] = [];
    this.ⲆΔᐃ[15] = [];
    this.ⲆΔᐃ[16] = [];
    this.ⲆΔᐃ[17] = [];
    this.ⲆΔᐃ[21] = [];
    this.ⲆΔᐃ[51] = [];
    this.ⲆΔᐃ[45] = [];
    this.ⲆΔᐃ[46] = [];
    this.ⲆΔᐃ[47] = [];
    this.ⲆΔᐃ[48] = [];
    this.ⲆΔᐃ[49] = [];
    this.ⲆΔᐃ[53] = [];
    this.ⲆΔᐃ[18] = [];
    this.ⲆΔᐃ[29] = [];
    this.ⲆΔᐃ[56] = [];
    this.ⲆΔᐃ[11] = [];
    this.ⲆΔᐃ[22] = [];
    this.ⲆΔᐃ[23] = [];
    this.ⲆΔᐃ[30] = [];
    this.ⲆΔᐃ[38] = [];
    this.ⲆΔᐃ[33] = [];
    this.ⲆΔᐃ[31] = [];
    this.ⲆΔᐃ[55] = [];
    this.ⲆΔᐃ[37] = [];
    this.ⲆΔᐃ[43] = [];
    this.ⲆΔᐃ[44] = [];
    this.ⲆΔᐃ[54] = [];
    this.ᐃⲆΔⲆⵠⵠⵠ = 24;
    this.ᐃⲆΔⲆⵠⵠⵠ.ᐃⵠΔᐃΔⲆᐃ = 0;
    this.ⲆΔᐃ[39] = [];
    this.ⲆΔᐃ[40] = [];
    this.ⲆΔᐃ[32] = [];
    this.ⲆΔᐃ[24] = [];
    this.ⲆΔᐃ[25] = [];
    this.ⲆΔᐃ[26] = [];
    this.ⲆΔᐃ[27] = [];
    this.ⲆΔᐃ[28] = [];
    this.ⲆΔᐃ[35] = [];
    this.ⲆΔᐃ[87] = [];
    this.ⲆΔᐃ[42] = [];
    this.ⵠⵠᐃⲆᐃΔⲆ = 251;
    this.ᐃᐃΔⵠⲆⵠⵠ = 60;
    this.ᐃᐃΔⵠⲆⵠⵠ;
    this.ⵠⵠᐃⲆᐃΔⲆ;
    this.ᐃᐃⲆⵠ = [];
    this.ᐃᐃᐃᐃΔ = 260;
    this.ΔⵠⲆⲆΔ = 260;
    this.ⵠⵠΔⲆΔΔⲆ = 100;
    this.ⲆⵠΔΔⲆⵠΔ = 100;
    this.w = this.ⵠⵠΔⲆΔΔⲆ * this.ᐃᐃᐃᐃΔ;
    this.ⵠⵠⲆ = this.ΔⵠⲆⲆΔ * this.ⲆⵠΔΔⲆⵠΔ;
    this.ᐃᐃⵠⵠⲆ = new v535.ΔΔΔᐃⵠⵠⵠ();
    this.ⵠⲆⵠᐃ = [];
    this.ⵠⵠΔᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV212, 0, 1, 0, 1, 1);
    this.transition = false;
    var v2212 = 195;
    function o(p1398, p1399, p1400, p1401, p1402) {
      var v2213 = p1399 + Math.floor(p1401 * v2813.ᐃᐃⵠⵠⲆ.get());
      var v2214 = p1400 + Math.floor(p1401 * v2813.ᐃᐃⵠⵠⲆ.get());
      var v2215 = 10 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * (v2813.ᐃᐃᐃᐃΔ - v2213 - 20));
      var v2216 = 10 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * (v2813.ΔⵠⲆⲆΔ - v2214 - 20));
      var v2217 = v2215 + v2213;
      var v2218 = v2216 + v2214;
      for (var v2219 = 0; v2813.ⵠⲆⵠᐃ.length > v2219; v2219++) {
        var v2220 = v2813.ⵠⲆⵠᐃ[v2219];
        if (ⲆΔΔ.ⵠⵠⵠΔⵠⲆⵠ(v2215, v2217, v2216, v2218, v2220.x1 / 100 - p1402, v2220.x2 / 100 + p1402, v2220.y1 / 100 - p1402, v2220.y2 / 100 + p1402) === 1) {
          return 0;
        }
      }
      v2813.ⵠⲆⵠᐃ.push(new v2813.ⲆΔᐃⵠΔⲆⲆ(p1398, v2215, v2216, v2213, v2214, 15));
      return 1;
    }
    function a(p1403, p1404, p1405) {
      var vP1404 = p1404;
      for (var vP1405 = p1405; vP1405 < v2813.ΔⵠⲆⲆΔ; vP1405++) {
        for (var vP14042 = p1404; vP14042 < v2813.ᐃᐃᐃᐃΔ && (p1405 === vP1405 && (vP1404 = Math.max(vP14042, vP1404)), !(vP14042 > vP1404)) && p1403[vP1405][vP14042] !== 1; vP14042++) {
          p1403[vP1405][vP14042] = 1;
        }
        if (vP1404 > vP14042) {
          break;
        }
      }
      v2813.ⵠⲆⵠᐃ.push(new v2813.ⲆΔᐃⵠΔⲆⲆ(v2813.ᐃΔⵠⲆᐃ, p1404, p1405, vP1404 - p1404 + 1, vP1405 - p1405, 15));
    }
    function r(p1406, p1407, p1408, p1409, p1410) {
      for (var v2221 = 0; v2221 < p1410 && o(p1406, p1407, p1408, p1409, 8) !== 1; v2221++);
      if (v2221 === p1410) {
        return 0;
      } else {
        return 1;
      }
    }
    function f429(p1411, p1412) {
      for (var v2222 = 0; v2222 < p1412.length; v2222++) {
        f438(p1412[v2222][0], p1412[v2222][1], p1411, p1412[v2222][2]);
      }
    }
    function h(p1413, p1414) {
      var v2223 = v2813.ⵠⲆⵠᐃ[p1413];
      var v2224 = Math.floor(v2223.y1 / 100);
      var v2225 = Math.floor(v2223.x1 / 100);
      var v2226 = Math.floor(v2223.ⵠⵠⲆ / 100);
      var v2227 = v2225 + (v2233 = Math.floor(v2223.w / 100));
      var v2228 = 2;
      var vV2226 = v2226;
      var vV2224 = v2224;
      for (var v2229 = v2225 + 10 + Math.floor((v2233 - 20) * v2813.ᐃᐃⵠⵠⲆ.get()), v2230 = v2229 - 4; v2229 + 4 > v2230; v2230++) {
        f440(v2224 - 1, v2230, "wtb", 0, 1);
      }
      while (vV2226 > 0) {
        if (v2228 !== 2) {
          if (vV2226 < 10) {
            for (v2235 = 1; vV2226 > 0; v2235++) {
              g(vV2224, v2229, 1, 1, 0, p1414, v2235, 1);
              vV2226 -= 1;
              vV2224 += 1;
            }
          } else if (v2228 !== 1) {
            v2228 = 1;
            var v2231 = Math.floor(1 + v2813.ᐃᐃⵠⵠⲆ.get() * 2);
            var v2232 = 1 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 4);
            if (v2229 < v2225 + 16) {
              g(vV2224, v2229, v2231, 0, 1, p1414, v2232, v2232);
              v2229 += v2231;
            } else if (v2229 > v2227 - 16) {
              g(vV2224, v2229, v2231, 0, -1, p1414, v2232, v2232);
              v2229 -= v2231;
            } else if (v2813.ᐃᐃⵠⵠⲆ.get() > 0.5) {
              g(vV2224, v2229, v2231, 0, 1, p1414, v2232, v2232);
              v2229 += v2231;
            } else {
              g(vV2224, v2229, v2231, 0, -1, p1414, v2232, v2232);
              v2229 -= v2231;
            }
          } else {
            var v2233;
            var v2234 = Math.min(vV2226, Math.floor(1 + v2813.ᐃᐃⵠⵠⲆ.get() * 4));
            g(vV2224, v2229, v2234, 1, 0, p1414, v2233 = 1 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 4), v2233);
            v2228 = 0;
            vV2226 -= v2234;
            vV2224 += v2234;
          }
        } else {
          for (var v2235 = 10; v2235 > 1; v2235--) {
            g(vV2224, v2229, 1, 1, 0, p1414, v2235, 1);
            vV2226 -= 1;
            vV2224 += 1;
          }
          v2228 = 0;
        }
      }
      for (v2230 = v2229 - 1; v2229 + 2 > v2230; v2230++) {
        f440(vV2224, v2230, "wtb", 0, 1);
      }
    }
    function g(p1415, p1416, p1417, p1418, p1419, p1420, p1421, p1422) {
      var v2236 = Math.floor(p1421 / 2);
      var v2237 = Math.max(1, Math.floor(p1421 / 2));
      var v2238 = Math.floor(p1422 / 2);
      var v2239 = Math.max(1, Math.floor(p1422 / 2));
      for (var v2240 = 0; p1417 > v2240; v2240++) {
        for (var v2241 = p1415 - v2238; p1415 + v2239 > v2241; v2241++) {
          for (var v2242 = p1416 - v2236; p1416 + v2237 > v2242; v2242++) {
            if (f440(v2241, v2242, "wtb", 0, 1) === 1) {
              p1420.push([v2241, v2242, 1]);
            }
          }
        }
        p1415 += p1418;
        p1416 += p1419;
      }
    }
    function f432(p1423, p1424) {
      for (var v2243 = 0; v2243 < 6; v2243++) {
        f437(p1423, "t", v2243, Math.floor(p1424 * 80));
      }
      for (v2243 = 0; v2243 < 4; v2243++) {
        f437(p1423, "b", v2243, Math.floor(p1424 * 80));
      }
      for (v2243 = 0; v2243 < 3; v2243++) {
        f437(p1423, "s", v2243, Math.floor(p1424 * 50));
      }
      var v2244 = [];
      for (v2243 = 0; v2243 < 6; v2243++) {
        h(p1423, v2244);
      }
      f429(p1423, v2244);
      v2244 = [];
      f437(p1423, "p", 0, Math.floor(p1424 * 28));
      for (v2243 = 0; v2243 < 3; v2243++) {
        f437(p1423, "g", v2243, Math.floor(p1424 * 7));
      }
      for (v2243 = 0; v2243 < 3; v2243++) {
        f437(p1423, "d", v2243, Math.floor(p1424 * 2));
      }
      for (v2243 = 0; v2243 < 3; v2243++) {
        f437(p1423, "a", v2243, Math.floor(p1424 * 1));
      }
      for (v2243 = 0; v2243 < 3; v2243++) {
        f437(p1423, "m", v2243, Math.floor(p1424 * 1));
      }
      f437(p1423, "a", 0, Math.floor(p1424 * 1));
      f441(p1423);
    }
    function f433(p1425, p1426) {
      for (var v2245 = 0; v2245 < 3; v2245++) {
        f437(p1425, "s", v2245, Math.floor(p1426 * 18));
      }
      for (v2245 = 0; v2245 < 3; v2245++) {
        f437(p1425, "f", v2245, Math.floor(p1426 * 24));
      }
      for (v2245 = 0; v2245 < 3; v2245++) {
        f437(p1425, "d", v2245, Math.max(1, Math.floor(p1426 * 2)), 0.3);
      }
      for (v2245 = 0; v2245 < 3; v2245++) {
        f437(p1425, "g", v2245, Math.floor(p1426 * 6));
      }
      f441(p1425);
    }
    function f434(p1427, p1428) {
      (function (p1429, p1430) {
        var v2246 = v2813.ⵠⲆⵠᐃ[p1430];
        for (var v2247 = 0, v2248 = 0; p1429 > v2247 && v2248 < 10000; v2248++) {
          var v2249 = v2246.y1 + v2246.ⵠⵠⲆ * v2813.ᐃᐃⵠⵠⲆ.get();
          var v2250 = v2246.x1 + v2246.w * v2813.ᐃᐃⵠⵠⲆ.get();
          var v2251 = Math.floor(v2249 / 100);
          var v2252 = Math.floor(v2250 / 100);
          if (!(v2813.ᐃΔⲆⲆᐃ(p1430, v2252 * 100 + 50, v2251 * 100 + 50) < 600)) {
            for (var v2253 = 1, v2254 = v2251 - 4; v2253 === 1 && v2254 <= v2251 + 4; v2254++) {
              for (var v2255 = v2252 - 4; v2253 === 1 && v2255 <= v2252 + 4; v2255++) {
                if (v2810.ⲆⲆᐃⲆ[v2254][v2255] !== vVVUndefined27) {
                  v2253 = 0;
                }
              }
            }
            if (v2253 !== 0) {
              f440(v2251, v2252, "la", v2247 % 6, 0);
              v2247++;
            }
          }
        }
      })(p1428 * 80, p1427);
      for (var v2256 = 0; v2256 < 3; v2256++) {
        f437(p1427, "s", v2256, Math.floor(p1428 * 12));
      }
      for (v2256 = 0; v2256 < 3; v2256++) {
        f437(p1427, "g", v2256, Math.floor(p1428 * 6));
      }
      for (v2256 = 0; v2256 < 3; v2256++) {
        f437(p1427, "re", v2256, Math.max(1, Math.floor(p1428 * 1)), 0.2);
      }
      for (v2256 = 0; v2256 < 3; v2256++) {
        f437(p1427, "a", v2256, Math.max(1, Math.floor(p1428 * 2)));
      }
      f441(p1427);
    }
    function f435(p1431, p1432) {
      return p1431 >= 0 && p1432 >= 0 && p1431 < v2813.ΔⵠⲆⲆΔ && p1432 < v2813.ᐃᐃᐃᐃΔ;
    }
    function f436(p1433, p1434) {
      for (var v2257 = 0; v2257 < 6; v2257++) {
        f437(p1433, "t", v2257, Math.floor(p1434 * 20));
      }
      for (v2257 = 0; v2257 < 4; v2257++) {
        f437(p1433, "b", v2257, Math.floor(p1434 * 20));
      }
      for (v2257 = 0; v2257 < 3; v2257++) {
        f437(p1433, "s", v2257, Math.floor(p1434 * 20));
      }
      var v2258 = [];
      h(p1433, v2258);
      f429(p1433, v2258);
      v2258 = [];
      f437(p1433, "p", 0, Math.floor(p1434 * 24));
      for (v2257 = 0; v2257 < 3; v2257++) {
        f437(p1433, "g", v2257, Math.floor(p1434 * 5));
      }
      if (v2813.mode === 2) {
        for (v2257 = 0; v2257 < 3; v2257++) {
          f437(p1433, "d", v2257, Math.floor(p1434 * 3));
        }
        for (v2257 = 0; v2257 < 3; v2257++) {
          f437(p1433, "a", v2257, Math.floor(p1434 * 2));
        }
      }
      f441(p1433);
    }
    function f437(p1435, p1436, p1437, p1438, p1439) {
      var v2259 = v2813.ⵠⲆⵠᐃ[p1435];
      var v2260 = Math.floor(v2259.x1 / 100);
      var v2261 = Math.floor(v2259.y1 / 100);
      var v2262 = Math.floor(v2259.w / 100);
      var v2263 = Math.floor(v2259.ⵠⵠⲆ / 100);
      if (p1439 !== undefined) {
        p1439 = 1 - p1439;
        v2260 += Math.floor(p1439 * v2262 / 2);
        v2261 += Math.floor(v2263 * p1439 / 2);
        v2262 -= Math.floor(v2262 * p1439);
        v2263 -= Math.floor(p1439 * v2263);
      }
      var v2264 = v2810.ⲆⲆᐃⲆ;
      for (var v2265 = 0, v2266 = 0; v2266 < p1438 && !(v2265 > 50000); v2265++) {
        var v2267 = v2261 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * v2263);
        var v2268 = v2260 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * v2262);
        if (!(v2813.ᐃΔⲆⲆᐃ(p1435, v2268 * 100 + 50, v2267 * 100 + 50) < 400) && ((v2269 = v2264[v2267][v2268 + 1]) === undefined || vVUndefined27 === v2269[p1436] || v2269[p1436][p1437] === undefined) && ((v2269 = v2264[v2267][v2268 - 1]) === undefined || v2269[p1436] === undefined || vVVUndefined273 === v2269[p1436][p1437])) {
          var v2269 = v2264[v2267 + 1][v2268];
          if (vVVUndefined273 === v2269 || v2269[p1436] === vVVUndefined197 || v2269[p1436][p1437] === vVVVUndefined1975) {
            if ((v2269 = v2264[v2267 - 1][v2268]) === vVVVUndefined1974 || v2269[p1436] === undefined || vVVVUndefined197 === v2269[p1436][p1437]) {
              v2269 = v2264[v2267 + 1][v2268 - 1];
              if (vUndefined === v2269 || vVUndefined28 === v2269[p1436] || v2269[p1436][p1437] === undefined) {
                if ((v2269 = v2264[v2267 - 1][v2268 + 1]) === vVVVUndefined1972 || v2269[p1436] === undefined || v2269[p1436][p1437] === vVVVUndefined273) {
                  if ((v2269 = v2264[v2267 + 1][v2268 + 1]) === undefined || v2269[p1436] === undefined || vVVUndefined197 === v2269[p1436][p1437]) {
                    if ((v2269 = v2264[v2267 - 1][v2268 - 1]) === undefined || vVUndefined28 === v2269[p1436] || v2269[p1436][p1437] === vVVUndefined197) {
                      if (v2264[v2267][v2268] === undefined) {
                        f440(v2267, v2268, p1436, p1437, 1);
                        v2266++;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    function f438(p1440, p1441, p1442, p1443) {
      if (f435(p1440, p1441) && (ⲆⲆᐃⲆ = v2810.ⲆⲆᐃⲆ, ⲆⲆᐃⲆ[p1440][p1441] === vVVVUndefined197 && (ⲆⲆᐃⲆ[p1440][p1441] = {}), vVVVUndefined272 === ⲆⲆᐃⲆ[p1440][p1441].r)) {
        var v2270 = 0;
        if (f435(p1440 - 1, p1441) && ⲆⲆᐃⲆ[p1440 - 1][p1441] !== undefined && vVVUndefined27 !== ⲆⲆᐃⲆ[p1440 - 1][p1441].wtb) {
          v2270 += 2;
        }
        if (f435(p1440, p1441 - 1) && ⲆⲆᐃⲆ[p1440][p1441 - 1] !== undefined && ⲆⲆᐃⲆ[p1440][p1441 - 1].wtb !== vVVUndefined273) {
          v2270 += 8;
        }
        if (f435(p1440, p1441 + 1) && ⲆⲆᐃⲆ[p1440][p1441 + 1] !== vVVUndefined272 && ⲆⲆᐃⲆ[p1440][p1441 + 1].wtb !== undefined) {
          v2270 += 16;
        }
        if (f435(p1440 + 1, p1441) && ⲆⲆᐃⲆ[p1440 + 1][p1441] !== undefined && vVVVUndefined272 !== ⲆⲆᐃⲆ[p1440 + 1][p1441].wtb) {
          v2270 += 64;
        }
        if (f435(p1440 - 1, p1441 - 1) && (v2270 & 10) === 10 && vVVVUndefined197 !== ⲆⲆᐃⲆ[p1440 - 1][p1441 - 1] && ⲆⲆᐃⲆ[p1440 - 1][p1441 - 1].wtb !== undefined) {
          v2270 += 1;
        }
        if (f435(p1440 - 1, p1441 + 1) && (v2270 & 18) == 18 && ⲆⲆᐃⲆ[p1440 - 1][p1441 + 1] !== vVUndefined26 && ⲆⲆᐃⲆ[p1440 - 1][p1441 + 1].wtb !== undefined) {
          v2270 += 4;
        }
        if (f435(p1440 + 1, p1441 - 1) && !(~v2270 & 72) && ⲆⲆᐃⲆ[p1440 + 1][p1441 - 1] !== undefined && ⲆⲆᐃⲆ[p1440 + 1][p1441 - 1].wtb !== undefined) {
          v2270 += 32;
        }
        if (f435(p1440 + 1, p1441 + 1) && !(~v2270 & 80) && ⲆⲆᐃⲆ[p1440 + 1][p1441 + 1] !== vVVVVVUndefined197 && ⲆⲆᐃⲆ[p1440 + 1][p1441 + 1].wtb !== undefined) {
          v2270 += 128;
        }
        ⲆⲆᐃⲆ[p1440][p1441].r = {};
        ⲆⲆᐃⲆ[p1440][p1441].r.ᐃⵠⵠⲆⲆⲆⵠ = v2270;
        ⲆⲆᐃⲆ[p1440][p1441].r.ᐃᐃⵠⵠⲆᐃᐃ = p1443;
        ⲆⲆᐃⲆ[p1440][p1441].r.ΔΔᐃΔ = v2813.ᐃΔⲆⲆᐃ(p1442, p1441 * 100 + 50, p1440 * 100 + 50) - 400;
        ⲆⲆᐃⲆ[p1440][p1441].r.x = p1441 * 100 + 50;
        ⲆⲆᐃⲆ[p1440][p1441].r.y = p1440 * 100 + 50;
      }
    }
    function f439(p1444, p1445) {
      for (var v2271 = 0; v2271 < 3; v2271++) {
        f437(p1444, "s", v2271, Math.floor(p1445 * 12));
      }
      for (v2271 = 0; v2271 < 3; v2271++) {
        f437(p1444, "m", v2271, Math.max(1, Math.floor(p1445 * 1)), 0.2);
      }
      f437(p1444, "c", 0, Math.floor(p1445 * 36));
      var v2272 = [];
      (function (p1446, p1447) {
        var v2273 = v2813.ⵠⲆⵠᐃ[p1446];
        var v2274 = Math.floor(v2273.y1 / 100);
        var v2275 = Math.floor(v2273.x1 / 100);
        var v2276 = Math.floor(v2273.ⵠⵠⲆ / 100);
        var v2277 = Math.floor(v2273.w / 100);
        var v2278 = v2274 + Math.floor(v2276 / 2);
        var v2279 = v2275 + Math.floor(v2277 / 2);
        for (var v2280 = 0; v2280 < 3; v2280++) {
          f440(v2281 = Math.floor(v2278 - 3 + v2813.ᐃᐃⵠⵠⲆ.get() * 6), v2282 = Math.floor(v2279 - 3 + v2813.ᐃᐃⵠⵠⲆ.get() * 6), "plm", v2280, 1);
        }
        for (v2280 = 0; v2280 < 80; v2280++) {
          var v2281;
          var v2282;
          if (f440(v2281 = Math.floor(v2278 - 3 + v2813.ᐃᐃⵠⵠⲆ.get() * 6), v2282 = Math.floor(v2279 - 3 + v2813.ᐃᐃⵠⵠⲆ.get() * 6), "wtb", 0, 1) === 1) {
            p1447.push([v2281, v2282, 0]);
          }
        }
      })(p1444, v2272);
      f429(p1444, v2272);
      v2272 = [];
    }
    function f440(p1448, p1449, p1450, p1451, p1452) {
      if (!(p1448 < 0) && !(p1449 < 0) && !(v2813.ΔⵠⲆⲆΔ <= p1448) && !(v2813.ᐃᐃᐃᐃΔ <= p1449)) {
        ⲆⲆᐃⲆ = v2810.ⲆⲆᐃⲆ;
        if (vVUndefined19 === ⲆⲆᐃⲆ[p1448][p1449]) {
          ⲆⲆᐃⲆ[p1448][p1449] = {};
        }
        if (ⲆⲆᐃⲆ[p1448][p1449][p1450] !== vVVVUndefined197) {
          return 0;
        } else {
          ⲆⲆᐃⲆ[p1448][p1449][p1450] = [];
          ⲆⲆᐃⲆ[p1448][p1449][p1450][p1451] = [{
            x: p1449 * 100 + 50,
            y: p1448 * 100 + 50
          }];
          if (p1452 === 1) {
            (function (p1453, p1454, p1455, p1456) {
              v727.push([p1453, p1454, p1455, p1456]);
            })(p1450, p1451, p1448, p1449);
          }
          return 1;
        }
      }
    }
    function f441(p1457) {
      var v2283 = v2813.ⵠⲆⵠᐃ[p1457];
      f440(-3 + Math.floor(v2283.y2 / 100), -1 + Math.floor(v2283.x2 / 100), "s", 0, 0);
      f440(3 + Math.floor(v2283.y1 / 100), -1 + Math.floor(v2283.x2 / 100), "s", 0, 0);
      f440(-3 + Math.floor(v2283.y2 / 100), 1 + Math.floor(v2283.x1 / 100), "s", 0, 0);
      f440(3 + Math.floor(v2283.y1 / 100), 1 + Math.floor(v2283.x1 / 100), "s", 0, 0);
    }
    function f442(p1458) {
      for (var v2284 = 0; v2284 < 3; v2284++) {
        f437(p1458, "s", v2284, 15);
      }
      for (v2284 = 0; v2284 < 3; v2284++) {
        f437(p1458, "a", v2284, 1);
      }
      for (v2284 = 0; v2284 < 3; v2284++) {
        f437(p1458, "d", v2284, 1);
      }
      f441(p1458);
    }
    function f443(p1459, p1460, p1461) {
      if (p1459[p1460]) {
        for (v122 = 0; v122 < p1459[p1460].length; v122++) {
          if (p1459[p1460][v122]) {
            for (ⲆⵠΔΔ = 0; p1459[p1460][v122].length > ⲆⵠΔΔ; ⲆⵠΔΔ++) {
              p1459[p1460][v122][ⲆⵠΔΔ].ᐃⲆᐃ = p1461;
              p1459[p1460][v122][ⲆⵠΔΔ].ᐃΔⵠ = false;
              p1459[p1460][v122][ⲆⵠΔΔ].time = 0;
              p1459[p1460][v122][ⲆⵠΔΔ].angle = 0;
            }
          }
        }
      }
    }
    if (v2212 === 14) {
      v2212 = 231;
    }
    this.ⲆⲆⲆᐃⵠ = [];
    this.ⵠⵠΔᐃΔ = 0;
    this.ⵠΔΔΔⵠⵠⵠ = 1;
    this.ⲆᐃⵠⵠⲆⵠΔ = 2;
    this.ⵠⲆΔᐃΔⲆᐃ = 3;
    this.ᐃΔⵠⲆᐃ = 4;
    this.ᐃΔΔΔⵠΔᐃ = 10;
    this.ⲆⲆⲆᐃⵠ[this.ⵠⵠΔᐃΔ] = {
      ⲆᐃⲆᐃΔᐃᐃ: 1,
      ᐃᐃᐃ: [19, 58, 43],
      ⲆⵠⲆ: [4, 43, 48],
      ΔⵠΔⵠΔ: ["#133a2b", "#042b30"]
    };
    this.ⲆⲆⲆᐃⵠ[this.ᐃΔⵠⲆᐃ] = {
      ⲆᐃⲆᐃΔᐃᐃ: 0,
      ᐃᐃᐃ: [11, 106, 132],
      ⲆⵠⲆ: [9, 55, 63],
      ΔⵠΔⵠΔ: ["#0B6A84", "#09373F"]
    };
    this.ⲆⲆⲆᐃⵠ[this.ⵠΔΔΔⵠⵠⵠ] = {
      ⲆᐃⲆᐃΔᐃᐃ: 0,
      ᐃᐃᐃ: [235, 242, 240],
      ⲆⵠⲆ: [19, 97, 103],
      ΔⵠΔⵠΔ: ["#EBF2F0", "#136167"]
    };
    this.ⲆⲆⲆᐃⵠ[this.ⲆᐃⵠⵠⲆⵠΔ] = {
      ⲆⵠⲆ: [3, 28, 30],
      ΔⵠΔⵠΔ: ["#2D2017", "#031C1E"],
      ᐃᐃᐃ: [45, 32, 23],
      ⲆᐃⲆᐃΔᐃᐃ: 0
    };
    this.ⲆⲆⲆᐃⵠ[this.ⵠⲆΔᐃΔⲆᐃ] = {
      ⲆᐃⲆᐃΔᐃᐃ: 0,
      ᐃᐃᐃ: [74, 74, 74],
      ⲆⵠⲆ: [24, 61, 60],
      ΔⵠΔⵠΔ: ["#4A4A4A", "#183D3C"]
    };
    this.ⲆⲆⲆᐃⵠ[this.ᐃΔΔΔⵠΔᐃ] = {
      ⲆⵠⲆ: [9, 61, 56],
      ⲆᐃⲆᐃΔᐃᐃ: 0,
      ᐃᐃᐃ: [235, 216, 166],
      ΔⵠΔⵠΔ: ["#EBD8A6", "#093D38"]
    };
    this.ⲆΔᐃⵠΔⲆⲆ = function (p1462, p1463, p1464, p1465, p1466, p1467) {
      this.x1 = p1463 * 100;
      this.y1 = p1464 * 100;
      this.w = p1465 * 100;
      this.ⵠⵠⲆ = p1466 * 100;
      this.x2 = (p1463 + p1465) * 100;
      this.y2 = (p1464 + p1466) * 100;
      this.Ⲇⵠⵠ = p1462;
      this.ⲆⵠΔ = p1467 === undefined ? 15 : p1467;
    };
    this.ⲆⵠΔⲆⲆ = -1000000;
    this.ᐃⲆΔⵠⵠ = this.ⲆⵠΔⲆⲆ;
    this.ΔᐃⵠΔᐃ = this.ⲆⵠΔⲆⲆ;
    this.ⵠΔΔᐃᐃ = this.ⲆⵠΔⲆⲆ;
    this.ΔΔᐃΔⵠⲆⲆ = this.ⲆⵠΔⲆⲆ;
    this.ⲆΔⵠⲆⲆⲆᐃ = this.ⲆⵠΔⲆⲆ;
    this.ⲆⵠⲆᐃΔ = this.ⲆⵠΔⲆⲆ;
    this.ᐃΔΔⵠΔⵠⵠΔⲆ = function (p1468) {
      var v2285 = p1468.r.x;
      var v2286 = p1468.r.y;
      var v2287 = Math.floor(v2286 / 100);
      var v2288 = Math.floor(v2285 / 100);
      p1468.ᐃⲆΔⵠⵠ = v2813.ⲆⵠΔⲆⲆ;
      p1468.ΔᐃⵠΔᐃ = v2813.ⲆⵠΔⲆⲆ;
      p1468.ⵠΔΔᐃᐃ = v2813.ⲆⵠΔⲆⲆ;
      p1468.ΔΔᐃΔⵠⲆⲆ = v2813.ⲆⵠΔⲆⲆ;
      p1468.ⲆⵠⲆᐃΔ = v2813.ⲆⵠΔⲆⲆ;
      p1468.ⲆᐃⵠⵠΔⵠⲆ = v2813.ⲆⵠΔⲆⲆ;
      for (var v2289 = 0; v2813.ⵠⲆⵠᐃ[v2289].Ⲇⵠⵠ !== v2813.ᐃΔⵠⲆᐃ; v2289++) {
        if (v2813.ⵠⲆⵠᐃ[v2289].Ⲇⵠⵠ === v2813.ⵠⵠΔᐃΔ) {
          var v2290 = v2813.ᐃΔⲆⲆᐃ(v2289, v2285, v2286);
          p1468.ΔΔᐃΔⵠⲆⲆ = Math.max(p1468.ΔΔᐃΔⵠⲆⲆ, v2290);
          if (v2290 > 0 && v2813.ⵠⲆΔⲆΔⲆⵠⲆⵠ(v2289, v2285, v2286) === 1) {
            p1468.ⲆᐃⵠⵠΔⵠⲆ = 1;
          }
        } else if (v2813.ⵠΔΔΔⵠⵠⵠ === v2813.ⵠⲆⵠᐃ[v2289].Ⲇⵠⵠ) {
          p1468.ᐃⲆΔⵠⵠ = Math.max(p1468.ᐃⲆΔⵠⵠ, v2813.ᐃΔⲆⲆᐃ(v2289, v2285, v2286));
        } else if (v2813.ᐃΔΔΔⵠΔᐃ === v2813.ⵠⲆⵠᐃ[v2289].Ⲇⵠⵠ) {
          p1468.ΔᐃⵠΔᐃ = Math.max(p1468.ΔᐃⵠΔᐃ, v2813.ᐃΔⲆⲆᐃ(v2289, v2285, v2286));
        } else if (v2813.ⲆᐃⵠⵠⲆⵠΔ === v2813.ⵠⲆⵠᐃ[v2289].Ⲇⵠⵠ) {
          p1468.ⵠΔΔᐃᐃ = Math.max(p1468.ⵠΔΔᐃᐃ, v2813.ᐃΔⲆⲆᐃ(v2289, v2285, v2286));
        } else if (v2813.ⵠⲆⵠᐃ[v2289].Ⲇⵠⵠ === v2813.ⵠⲆΔᐃΔⲆᐃ) {
          p1468.ⲆⵠⲆᐃΔ = Math.max(p1468.ⲆⵠⲆᐃΔ, v2813.ᐃΔⲆⲆᐃ(v2289, v2285, v2286));
        }
      }
      if (v2810.ⲆⲆᐃⲆ[v2287][v2288].iblk) {
        p1468.ⲆᐃⵠⵠΔⵠⲆ = 1;
      }
      if (v2813.ⵠⵠᐃΔⲆⵠᐃⲆⵠ(v2288, v2287)) {
        p1468.ⲆΔⵠⲆⲆⲆᐃ = p1468.ⲆⵠΔⲆⲆ;
      } else if (v2810.ⲆⲆᐃⲆ[v2287][v2288].wtb || p1468.ᐃⲆΔⵠⵠ < 0 && p1468.ⵠΔΔᐃᐃ < 0 && p1468.ΔΔᐃΔⵠⲆⲆ < 0 && p1468.ⲆᐃⵠⵠΔⵠⲆ < 0 && p1468.ⲆⵠⲆᐃΔ < 0 && p1468.ΔᐃⵠΔᐃ < 0) {
        p1468.ⲆΔⵠⲆⲆⲆᐃ = 1;
      } else {
        p1468.ⲆΔⵠⲆⲆⲆᐃ = p1468.ⲆⵠΔⲆⲆ;
      }
    };
    this.ΔⵠⲆΔΔΔⵠΔΔ = function (p1469, p1470) {
      v2813.ᐃⲆΔⵠⵠ = v2813.ⲆⵠΔⲆⲆ;
      v2813.ΔᐃⵠΔᐃ = v2813.ⲆⵠΔⲆⲆ;
      v2813.ⵠΔΔᐃᐃ = v2813.ⲆⵠΔⲆⲆ;
      v2813.ⲆⵠⲆᐃΔ = v2813.ⲆⵠΔⲆⲆ;
      v2813.ΔΔᐃΔⵠⲆⲆ = v2813.ⲆⵠΔⲆⲆ;
      for (var v2291 = 0; v2813.ᐃΔⵠⲆᐃ !== v2813.ⵠⲆⵠᐃ[v2291].Ⲇⵠⵠ; v2291++) {
        if (v2813.ⵠⵠΔᐃΔ === v2813.ⵠⲆⵠᐃ[v2291].Ⲇⵠⵠ) {
          v2813.ΔΔᐃΔⵠⲆⲆ = Math.max(v2813.ΔΔᐃΔⵠⲆⲆ, v2813.ᐃΔⲆⲆᐃ(v2291, p1469, p1470));
        } else if (v2813.ⵠΔΔΔⵠⵠⵠ === v2813.ⵠⲆⵠᐃ[v2291].Ⲇⵠⵠ) {
          v2813.ᐃⲆΔⵠⵠ = Math.max(v2813.ᐃⲆΔⵠⵠ, v2813.ᐃΔⲆⲆᐃ(v2291, p1469, p1470));
        } else if (v2813.ⵠⲆⵠᐃ[v2291].Ⲇⵠⵠ === v2813.ᐃΔΔΔⵠΔᐃ) {
          v2813.ΔᐃⵠΔᐃ = Math.max(v2813.ΔᐃⵠΔᐃ, v2813.ᐃΔⲆⲆᐃ(v2291, p1469, p1470));
        } else if (v2813.ⲆᐃⵠⵠⲆⵠΔ === v2813.ⵠⲆⵠᐃ[v2291].Ⲇⵠⵠ) {
          v2813.ⵠΔΔᐃᐃ = Math.max(v2813.ⵠΔΔᐃᐃ, v2813.ᐃΔⲆⲆᐃ(v2291, p1469, p1470));
        } else if (v2813.ⵠⲆΔᐃΔⲆᐃ === v2813.ⵠⲆⵠᐃ[v2291].Ⲇⵠⵠ) {
          v2813.ⲆⵠⲆᐃΔ = Math.max(v2813.ⲆⵠⲆᐃΔ, v2813.ᐃΔⲆⲆᐃ(v2291, p1469, p1470));
        }
      }
      if (v2813.ᐃⲆΔⵠⵠ < 0 && v2813.ⲆⵠⲆᐃΔ < 0 && v2813.ΔΔᐃΔⵠⲆⲆ < 0 && v2813.ⲆⵠⲆᐃΔ < 0 && v2813.ΔᐃⵠΔᐃ < 0) {
        v2813.ⲆΔⵠⲆⲆⲆᐃ = 1;
      } else {
        v2813.ⲆΔⵠⲆⲆⲆᐃ = v2813.ⲆⵠΔⲆⲆ;
      }
    };
    this.ⵠⲆΔⲆΔⲆⵠⲆⵠ = function (p1471, p1472, p1473) {
      var v2292 = v2813.ⵠⲆⵠᐃ[p1471];
      var v2293 = 0;
      ΔΔⵠᐃ = v2292.x1 + 30 + ((v2292.ⲆⵠΔ & 4) === 0 ? 150 : 0);
      var v2294 = p1472 - ΔΔⵠᐃ;
      if ((v2292.ⲆⵠΔ & 4) > 0 && v2294 > 0 && v2294 < 320) {
        v2293 = 1;
      }
      ᐃΔΔⲆ = v2292.y1 + 250 + (v2292.ⲆⵠΔ & 1 ? 0 : 150);
      v2294 = p1473 - ᐃΔΔⲆ;
      if ((v2292.ⲆⵠΔ & 1) > 0 && v2294 > 0 && v2294 < 320) {
        v2293 = 1;
      }
      Δᐃᐃᐃ = v2292.x2 + 80 + (v2292.ⲆⵠΔ & 8 ? 0 : -200);
      v2294 = Δᐃᐃᐃ - p1472;
      if ((v2292.ⲆⵠΔ & 8) > 0 && v2294 > 0 && v2294 < 320) {
        v2293 = 1;
      }
      ⵠⵠⵠΔ = v2292.y2 - 200 + (v2292.ⲆⵠΔ & 2 ? 0 : -200);
      v2294 = ⵠⵠⵠΔ - p1473;
      if ((v2292.ⲆⵠΔ & 2) > 0 && v2294 > 0 && v2294 < 320) {
        v2293 = 1;
      }
      if (ΔΔⵠᐃ <= p1472 && Δᐃᐃᐃ >= p1472 && p1473 >= ᐃΔΔⲆ && ⵠⵠⵠΔ >= p1473) {
        return v2293;
      } else {
        return 0;
      }
    };
    this.ᐃΔⲆⲆᐃ = function (p1474, p1475, p1476) {
      var v2295 = v2813.ⵠⲆⵠᐃ[p1474];
      ΔΔⵠᐃ = v2295.x1 + 30;
      ᐃΔΔⲆ = v2295.y1 + 250;
      Δᐃᐃᐃ = v2295.x2 + 80;
      ⵠⵠⵠΔ = v2295.y2 - 200;
      if (ΔΔⵠᐃ <= p1475 && p1475 <= Δᐃᐃᐃ && ᐃΔΔⲆ <= p1476 && p1476 <= ⵠⵠⵠΔ) {
        return Math.min(p1475 - ΔΔⵠᐃ, Δᐃᐃᐃ - p1475, p1476 - ᐃΔΔⲆ, ⵠⵠⵠΔ - p1476);
      }
      var v2296 = -1000000;
      if (p1475 - ΔΔⵠᐃ < 0) {
        v2296 = Math.max(v2296, p1475 - ΔΔⵠᐃ);
      } else if (Δᐃᐃᐃ - p1475 < 0) {
        v2296 = Math.max(v2296, Δᐃᐃᐃ - p1475);
      }
      ᐃⵠᐃⲆᐃⵠΔ = -1000000;
      if (p1476 < ᐃΔΔⲆ || p1476 > ⵠⵠⵠΔ) {
        if (p1476 - ᐃΔΔⲆ < 0) {
          ᐃⵠᐃⲆᐃⵠΔ = Math.max(ᐃⵠᐃⲆᐃⵠΔ, p1476 - ᐃΔΔⲆ);
        } else {
          ᐃⵠᐃⲆᐃⵠΔ = Math.max(ᐃⵠᐃⲆᐃⵠΔ, ⵠⵠⵠΔ - p1476);
        }
        v2296 = v2296 !== -1000000 && ᐃⵠᐃⲆᐃⵠΔ !== -1000000 ? Math.min(v2296, ᐃⵠᐃⲆᐃⵠΔ) : ᐃⵠᐃⲆᐃⵠΔ;
      }
      return v2296;
    };
    this.ⲆΔΔᐃⲆΔⲆ = function (p1477, p1478, p1479) {
      var vP1479 = p1479;
      var vP1478 = p1478;
      f440(vP1479, vP1478, "isl", p1477, 1);
      for (var v2297 = 0; v2297 < 4; v2297++) {
        for (var v2298 = 0; v2298 < 3; v2298++) {
          f440(vP1479 - v2298, vP1478 - v2297, "iblk", 0);
          f440(vP1479 + v2298, vP1478 - v2297, "iblk", 0);
          f440(vP1479 + v2298, vP1478 + v2297, "iblk", 0);
          f440(vP1479 - v2298, vP1478 + v2297, "iblk", 0);
        }
      }
      if (p1477 === 0) {
        for (v2297 = 0; v2297 < 2; v2297++) {
          f440(vP1479 - v2297, vP1478 - 4, "iblk", 0);
          f440(vP1479 + v2297, vP1478 - 4, "iblk", 0);
          f440(vP1479 - v2297, vP1478 + 4, "iblk", 0);
          f440(vP1479 + v2297, vP1478 + 4, "iblk", 0);
        }
        for (v2297 = 0; v2297 < 3; v2297++) {
          f440(vP1479 - 3, vP1478 + v2297, "iblk", 0);
          f440(vP1479 + 3, vP1478 + v2297, "iblk", 0);
          f440(vP1479 - 3, vP1478 - v2297, "iblk", 0);
          f440(vP1479 + 3, vP1478 - v2297, "iblk", 0);
        }
        f440(vP1479 - 2, vP1478 - 4, "iblk", 0);
        f440(vP1479 - 3, vP1478 - 3, "iblk", 0);
        f440(vP1479 + 2, vP1478 + 4, "iblk", 0);
        f440(vP1479 + 3, vP1478 + 3, "iblk", 0);
      } else if (p1477 === 1) {
        for (v2297 = 0; v2297 < 3; v2297++) {
          f440(vP1479 - v2297, vP1478 - 4, "iblk", 0);
          f440(vP1479 + v2297, vP1478 - 4, "iblk", 0);
          f440(vP1479 - v2297, vP1478 + 4, "iblk", 0);
          f440(vP1479 + v2297, vP1478 + 4, "iblk", 0);
        }
        for (v2297 = 0; v2297 < 4; v2297++) {
          f440(vP1479 - 3, vP1478 + v2297, "iblk", 0);
          f440(vP1479 + 3, vP1478 + v2297, "iblk", 0);
          f440(vP1479 - 3, vP1478 - v2297, "iblk", 0);
          f440(vP1479 + 3, vP1478 - v2297, "iblk", 0);
        }
      } else if (p1477 === 2) {
        for (v2297 = 0; v2297 < 2; v2297++) {
          f440(vP1479 - v2297, vP1478 - 4, "iblk", 0);
          f440(vP1479 + v2297, vP1478 - 4, "iblk", 0);
          f440(vP1479 - v2297, vP1478 + 4, "iblk", 0);
          f440(vP1479 + v2297, vP1478 + 4, "iblk", 0);
        }
        for (v2297 = 0; v2297 < 3; v2297++) {
          f440(vP1479 - 3, vP1478 + v2297, "iblk", 0);
          f440(vP1479 + 3, vP1478 + v2297, "iblk", 0);
          f440(vP1479 - 3, vP1478 - v2297, "iblk", 0);
          f440(vP1479 + 3, vP1478 - v2297, "iblk", 0);
        }
      }
    };
    this.ⵠⵠᐃᐃⵠᐃⲆⲆⲆ = function (p1480) {
      for (var v2299 = 0; v2299 < v2813.ⵠⲆⵠᐃ.length && p1480 > 0; v2299++) {
        var v2300 = v2813.ⵠⲆⵠᐃ[v2299];
        if (v2813.ᐃΔⵠⲆᐃ === v2300.Ⲇⵠⵠ && v2300.w > 1800 && v2300.ⵠⵠⲆ > 1000) {
          var v2301 = Math.floor((v2300.x1 + v2300.w / 2) / 100);
          var v2302 = Math.floor((v2300.y1 + v2300.ⵠⵠⲆ / 2) / 100);
          v2813.ⲆΔΔᐃⲆΔⲆ(p1480 % 3, v2301, v2302);
          for (var v2303 = 0; v2303 < 3; v2303++) {
            var v2304 = v2302 - 2 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 4);
            var v2305 = v2301 - 3 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 6);
            if (v2810.ⲆⲆᐃⲆ[v2304][v2305].s === undefined) {
              f440(v2304, v2305, "plm", v2303);
            }
            v2304 = v2302 - 2 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 4);
            v2305 = v2301 - 3 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 6);
            if (vVVVUndefined1975 === v2810.ⲆⲆᐃⲆ[v2304][v2305].plm) {
              f440(v2304, v2305, "s", v2303);
            }
          }
          v2304 = v2302 - 2 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 4);
          v2305 = v2301 - 3 + Math.floor(v2813.ᐃᐃⵠⵠⲆ.get() * 6);
          if (v2810.ⲆⲆᐃⲆ[v2304][v2305].plm === undefined && v2810.ⲆⲆᐃⲆ[v2304][v2305].s === undefined) {
            f440(v2304, v2305, "p", 0, 1);
          }
          p1480--;
        }
      }
    };
    this.ⲆᐃᐃᐃⲆⲆⲆⵠΔ = function (p1481) {
      v2813.ᐃᐃⵠⵠⲆ.ⵠΔⵠⲆⲆ(p1481);
      var v2306 = 0;
      while (true) {
        if (++v2306 > 10000) {
          return;
        }
        v2813.ⵠⲆⵠᐃ = [];
        if (v2813.ᐃⵠⵠⲆᐃ === 0 && (v2813.mode === 3 || v2813.mode === 7 || v2813.mode === 0)) {
          v2813.ᐃⵠⵠⲆᐃ = v543;
        }
        if (v2813.mode === 2) {
          v2813.ⵠⲆⵠᐃ.push(new v2813.ⲆΔᐃⵠΔⲆⲆ(v2813.ⵠⵠΔᐃΔ, 2, 2, 80, 80, 15));
        } else if (v2813.mode === 4) {
          v2813.ⵠⲆⵠᐃ.push(new v2813.ⲆΔᐃⵠΔⲆⲆ(v2813.ⵠⵠΔᐃΔ, 2, 2, 150, 150, 15));
        } else if (v2813.ᐃⵠⵠⲆᐃ !== 0 && v2813.ᐃⵠⵠⲆᐃ.length > 0 && v2813.ᐃⵠⵠⲆᐃ[0].length > 3) {
          for (var v2307 = 0; v2813.ᐃⵠⵠⲆᐃ.length > v2307; v2307++) {
            if ((v2317 = v2813.ᐃⵠⵠⲆᐃ[v2307])[0] !== 0) {
              break;
            }
            var v2308 = v2205.ⵠⵠΔᐃΔ;
            switch (v2317[1]) {
              case "FOREST":
                v2308 = v2813.ⵠⵠΔᐃΔ;
                break;
              case "WINTER":
                v2308 = v2813.ⵠΔΔΔⵠⵠⵠ;
                break;
              case "DESERT":
                v2308 = v2813.ᐃΔΔΔⵠΔᐃ;
                break;
              case "LAVA":
                v2308 = v2813.ⲆᐃⵠⵠⲆⵠΔ;
                break;
              case "DRAGON":
                v2308 = v2813.ⵠⲆΔᐃΔⲆᐃ;
            }
            v2813.ⵠⲆⵠᐃ.push(new v2813.ⲆΔᐃⵠΔⲆⲆ(v2308, v2317[2], v2317[3], v2317[4], v2317[5], v2317[6], v2317[7]));
          }
        } else if (v2813.ᐃⵠⵠⲆᐃ !== 0) {
          for (v2307 = 0; v2307 < v2813.ᐃⵠⵠⲆᐃ.length; v2307++) {
            var v2309 = v2813.ᐃⵠⵠⲆᐃ[v2307];
            v2308 = v2205.ⵠⵠΔᐃΔ;
            switch (v2309[0]) {
              case "FOREST":
                v2308 = v2813.ⵠⵠΔᐃΔ;
                break;
              case "WINTER":
                v2308 = v2813.ⵠΔΔΔⵠⵠⵠ;
                break;
              case "DESERT":
                v2308 = v2813.ᐃΔΔΔⵠΔᐃ;
                break;
              case "LAVA":
                v2308 = v2813.ⲆᐃⵠⵠⲆⵠΔ;
                break;
              case "DRAGON":
                v2308 = v2813.ⵠⲆΔᐃΔⲆᐃ;
            }
            if (r(v2308, v2309[1], v2309[2], 0, (v2307 + 1) * 10) === 0) {
              break;
            }
          }
          if (v2813.ᐃⵠⵠⲆᐃ.length !== v2307) {
            continue;
          }
        }
        break;
      }
      ΔᐃⵠⲆⲆᐃⵠᐃⵠ();
      var v2310 = [];
      for (var v2311 = 0; v2813.ΔⵠⲆⲆΔ > v2311; v2311++) {
        v2310[v2311] = new Array(v2813.ᐃᐃᐃᐃΔ);
        for (var v2312 = 0; v2312 < v2813.ᐃᐃᐃᐃΔ; v2312++) {
          v2310[v2311][v2312] = 0;
        }
      }
      for (v2311 = 0; v2311 < v2813.ⵠⲆⵠᐃ.length; v2311++) {
        for (var v2313 = (v2309 = v2813.ⵠⲆⵠᐃ[v2311]).x2 / 100, v2314 = v2309.y2 / 100, v2315 = v2309.x1 / 100; v2315 <= v2313; v2315++) {
          for (var v2316 = v2309.y1 / 100; v2314 >= v2316; v2316++) {
            v2310[v2316][v2315] = 1;
          }
        }
      }
      for (v2316 = 0; v2316 < v2813.ΔⵠⲆⲆΔ; v2316++) {
        for (v2315 = 0; v2315 < v2813.ᐃᐃᐃᐃΔ; v2315++) {
          if (v2310[v2316][v2315] === 0) {
            a(v2310, v2315, v2316);
          }
        }
      }
      v2810 = {
        w: v2813.ᐃᐃᐃᐃΔ,
        ⵠⵠⲆ: v2813.ΔⵠⲆⲆΔ,
        ⲆⲆᐃⲆ: []
      };
      for (v2311 = 0; v2813.ΔⵠⲆⲆΔ > v2311; v2311++) {
        v2810.ⲆⲆᐃⲆ[v2311] = [];
      }
      if (v2813.ᐃⵠⵠⲆᐃ !== 0 && v2813.ᐃⵠⵠⲆᐃ.length > 0 && v2813.ᐃⵠⵠⲆᐃ[0].length > 3) {
        for (v2307 = 0; v2813.ᐃⵠⵠⲆᐃ.length > v2307; v2307++) {
          var v2317 = v2813.ᐃⵠⵠⲆᐃ[v2307];
          if (v2317[1] === "isl") {
            v2813.ⲆΔΔᐃⲆΔⲆ(v2317[2], v2317[3], v2317[4]);
          }
        }
      } else {
        v2813.ⵠⵠᐃᐃⵠᐃⲆⲆⲆ(v2813.ᐃΔⲆΔᐃᐃⲆ);
      }
      if (v2813.ᐃⵠⵠⲆᐃ !== 0 && v2813.ᐃⵠⵠⲆᐃ.length > 0 && v2813.ᐃⵠⵠⲆᐃ[0].length > 3) {
        var v2318 = [];
        for (v2307 = 0; v2813.ᐃⵠⵠⲆᐃ.length > v2307; v2307++) {
          if ((v2317 = v2813.ᐃⵠⵠⲆᐃ[v2307])[0] === 1) {
            if (v2317[1] === "r") {
              f440(v2317[3], v2317[2], "wtb", 0, 1);
              v2318.push([v2317[3], v2317[2], v2317[4]]);
            } else {
              f440(v2317[4], v2317[3], v2317[1], v2317[2], v2317[5]);
            }
          }
        }
        f429(0, v2318);
        v2318 = [];
      } else {
        for (v2311 = 0; v2311 < v2813.ⵠⲆⵠᐃ.length; v2311++) {
          v2309 = v2813.ⵠⲆⵠᐃ[v2311];
          if (v2813.mode === 4) {
            if (v2309.Ⲇⵠⵠ === v2813.ⵠⵠΔᐃΔ) {
              f432(v2311, v2309.w / 10000);
            }
          } else {
            if (v2813.ⵠⵠΔᐃΔ === v2309.Ⲇⵠⵠ) {
              f436(v2311, v2309.w / 10000);
            }
            if (v2309.Ⲇⵠⵠ === v2813.ⲆᐃⵠⵠⲆⵠΔ) {
              f434(v2311, v2309.w / 10000);
            }
            if (v2813.ⵠΔΔΔⵠⵠⵠ === v2309.Ⲇⵠⵠ) {
              f433(v2311, v2309.w / 10000);
            }
            if (v2309.Ⲇⵠⵠ === v2813.ᐃΔΔΔⵠΔᐃ) {
              f439(v2311, v2309.w / 10000);
            }
            if (v2813.ⵠⲆΔᐃΔⲆᐃ === v2309.Ⲇⵠⵠ) {
              f442(v2311);
            }
          }
        }
      }
      f84("isl", 1);
      f84("wtb", 20);
      f84("la", 1);
      f84("c", 1);
      f84("s", 1);
      f84("f", 1);
      f84("p", 1);
      f84("g", 1);
      f84("d", 1);
      f84("a", 1);
      f84("re", 1);
      f84("m", 1);
      v727 = [];
      v2813.ΔⲆⲆⵠᐃᐃᐃΔᐃ(v2810);
    };
    this.ᐃᐃΔⲆ = f440;
    this.ΔⲆⲆⵠᐃᐃᐃΔᐃ = function (p1482) {
      for (var v2319 = 0; v2319 < this.ΔⵠⲆⲆΔ; v2319++) {
        for (var v2320 = 0; this.ᐃᐃᐃᐃΔ > v2320; v2320++) {
          if (!p1482.ⲆⲆᐃⲆ[v2319]) {
            p1482.ⲆⲆᐃⲆ[v2319] = [];
          }
          if (p1482.ⲆⲆᐃⲆ[v2319][v2320]) {
            var v2321 = p1482.ⲆⲆᐃⲆ[v2319][v2320];
            if (v2321.de && v2321.de.length > 0) {
              for (var v2322 = 0; v2321.de.length > v2322; v2322++) {
                if (v2321.de[v2322] && v2321.de[v2322].length > 0) {
                  v2321.de = v2321.de[v2322][0];
                  if (v2322 >= 41 && v2322 <= 49) {
                    v2321.de.scale = 3;
                    var v2323 = Math.floor(Math.random() * 3 + 1);
                    v2321.de.ᐃⵠΔ = [];
                    for (var v2324 = 0; v2324 < v2323; v2324++) {
                      v2321.de.ᐃⵠΔ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.random() * Math.PI * 2,
                        Ⲇⵠⵠⵠⵠ: 41 + Math.floor(Math.random() * 9)
                      });
                    }
                  } else if (v2322 >= 19 && v2322 <= 26) {
                    v2321.de.scale = 3;
                    v2323 = Math.floor(Math.random() * 3 + 1);
                    v2321.de.ᐃⵠΔ = [];
                    for (v2324 = 0; v2323 > v2324; v2324++) {
                      v2321.de.ᐃⵠΔ.push({
                        x: Math.random() * 120 - 60,
                        y: Math.random() * 120 - 60,
                        angle: Math.random() * Math.PI * 2,
                        Ⲇⵠⵠⵠⵠ: 19 + Math.floor(Math.random() * 8)
                      });
                    }
                  } else if (v2322 <= 15 || v2322 >= 27 && v2322 <= 40) {
                    v2321.de.angle = 0;
                    v2321.de.scale = 2;
                    v2321.de.Ⲇⵠⵠⵠⵠ = v2322;
                  } else {
                    v2321.de.angle = Math.PI * Math.random() * 2;
                    v2321.de.scale = 1;
                    v2321.de.Ⲇⵠⵠⵠⵠ = v2322;
                  }
                }
              }
            }
            f443(v2321, "p", new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10));
            f443(v2321, "t", new ⲆΔΔ.ⵠᐃΔΔ(vV214, 1, 1, 0, 10, 10));
            f443(v2321, "s", new ⲆΔΔ.ⵠᐃΔΔ(vVV21, 1, 1, 0, 10, 10));
            f443(v2321, "g", new ⲆΔΔ.ⵠᐃΔΔ(vVVV2133, 1, 1, 0, 10, 10));
            f443(v2321, "d", new ⲆΔΔ.ⵠᐃΔΔ(vVV2123, 1, 1, 0, 10, 10));
            f443(v2321, "b", new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10));
            f443(v2321, "f", new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10));
            f443(v2321, "sw", new ⲆΔΔ.ⵠᐃΔΔ(vVVV21222, 1, 1, 0, 10, 10));
            f443(v2321, "gw", new ⲆΔΔ.ⵠᐃΔΔ(vVVV213, 1, 1, 0, 10, 10));
            f443(v2321, "dw", new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10));
            f443(v2321, "a", new ⲆΔΔ.ⵠᐃΔΔ(vVVV212, 1, 1, 0, 10, 10));
            f443(v2321, "cs", new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10));
            f443(v2321, "plm", new ⲆΔΔ.ⵠᐃΔΔ(vVV2123, 1, 1, 0, 10, 10));
            f443(v2321, "re", new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10));
            f443(v2321, "c", new ⲆΔΔ.ⵠᐃΔΔ(vVVV2133, 1, 1, 0, 10, 10));
            f443(v2321, "m", new ⲆΔΔ.ⵠᐃΔΔ(vVVV213, 1, 1, 0, 10, 10));
          } else {
            p1482.ⲆⲆᐃⲆ[v2319][v2320] = [];
          }
        }
      }
    };
    this.time = v554.ᐃⵠⵠ;
    this.ΔⲆⵠᐃΔ = {
      ᐃΔΔᐃᐃ: 0,
      now: 0,
      translate: {
        y: 0,
        x: 0
      },
      ⵠΔⵠⲆⲆ: 0
    };
    this.ΔΔᐃΔⲆᐃᐃⵠΔ = function () {
      this.ᐃᐃⲆⵠ = [];
      this.ⲆΔᐃ[0] = [];
      this.ⲆΔᐃ[2] = [];
      this.ⲆΔᐃ[1] = [];
      this.ⲆΔᐃ[6] = [];
      this.ⲆΔᐃ[3] = [];
      this.ⲆΔᐃ[5] = [];
      this.ⲆΔᐃ[12] = [];
      this.ⲆΔᐃ[13] = [];
      this.ⲆΔᐃ[14] = [];
      this.ⲆΔᐃ[20] = [];
      this.ⲆΔᐃ[52] = [];
      this.ⲆΔᐃ[30] = [];
      this.ⲆΔᐃ[56] = [];
      this.ⲆΔᐃ[38] = [];
      this.ⲆΔᐃ[33] = [];
      this.ⲆΔᐃ[31] = [];
      this.ⲆΔᐃ[55] = [];
      this.ⲆΔᐃ[37] = [];
      this.ⲆΔᐃ[43] = [];
      this.ⲆΔᐃ[44] = [];
      this.ⲆΔᐃ[54] = [];
      this.ⲆΔᐃ[39] = [];
      this.ⲆΔᐃ[40] = [];
      this.ⲆΔᐃ[32] = [];
      this.ⲆΔᐃ[24] = [];
      this.ⲆΔᐃ[25] = [];
      this.ⲆΔᐃ[26] = [];
      this.ⲆΔᐃ[27] = [];
      this.ⲆΔᐃ[28] = [];
      this.ⲆΔᐃ[35] = [];
      this.ⲆΔᐃ[4] = [];
      this.ⲆΔᐃ[7] = [];
      this.ⲆΔᐃ[8] = [];
      this.ⲆΔᐃ[9] = [];
      this.ⲆΔᐃ[19] = [];
      this.ⲆΔᐃ[50] = [];
      this.ⲆΔᐃ[41] = [];
      this.ⲆΔᐃ[10] = [];
      this.ⲆΔᐃ[15] = [];
      this.ⲆΔᐃ[16] = [];
      this.ⲆΔᐃ[17] = [];
      this.ⲆΔᐃ[21] = [];
      this.ⲆΔᐃ[51] = [];
      this.ⲆΔᐃ[45] = [];
      this.ⲆΔᐃ[46] = [];
      this.ⲆΔᐃ[47] = [];
      this.ⲆΔᐃ[48] = [];
      this.ⲆΔᐃ[49] = [];
      this.ⲆΔᐃ[53] = [];
      this.ⲆΔᐃ[18] = [];
      this.ⲆΔᐃ[29] = [];
      this.ⲆΔᐃ[56] = [];
      this.ⲆΔᐃ[11] = [];
      this.ⲆΔᐃ[22] = [];
      this.ⲆΔᐃ[23] = [];
      this.ⲆΔᐃ[100] = [];
      this.ⲆΔᐃ[80] = [];
      this.ⲆΔᐃ[60] = [];
      this.ⲆΔᐃ[67] = [];
      this.ⲆΔᐃ[70] = [];
      this.ⲆΔᐃ[77] = [];
      this.ⲆΔᐃ[71] = [];
      this.ⲆΔᐃ[72] = [];
      this.ⲆΔᐃ[73] = [];
      this.ⲆΔᐃ[74] = [];
      this.ⲆΔᐃ[65] = [];
      this.ⲆΔᐃ[66] = [];
      this.ⲆΔᐃ[62] = [];
      this.ⲆΔᐃ[88] = [];
      this.ⲆΔᐃ[91] = [];
      this.ⲆΔᐃ[90] = [];
      this.ⲆΔᐃ[63] = [];
      this.ⲆΔᐃ[78] = [];
      this.ⲆΔᐃ[75] = [];
      this.ⲆΔᐃ[76] = [];
      this.ⲆΔᐃ[64] = [];
      this.ⲆΔᐃ[69] = [];
      this.ⲆΔᐃ[68] = [];
      this.ⲆΔᐃ[79] = [];
      this.ⲆΔᐃ[89] = [];
      this.ⲆΔᐃ[83] = [];
      this.ⲆΔᐃ[84] = [];
      this.ⲆΔᐃ[85] = [];
      this.ⲆΔᐃ[81] = [];
      this.ⲆΔᐃ[82] = [];
      this.ⲆΔᐃ[86] = [];
      this.ⲆΔᐃ[34] = [];
      this.ⲆΔᐃ[36] = [];
      this.ⲆΔᐃ[61] = [];
      this.ⲆΔᐃ[87] = [];
      this.ⲆΔᐃ[42] = [];
    };
    this.ⲆΔΔΔᐃⵠⲆΔⲆ = function (p1483) {
      if (this.ᐃᐃⲆⵠ[p1483]) {
        ΔΔᐃᐃ = this.ᐃᐃⲆⵠ[p1483].type;
        this.ᐃᐃⲆⵠ[p1483] = null;
        for (var v2325 = this.ⲆΔᐃ[ΔΔᐃᐃ], v2326 = 0; v2325.length > v2326; v2326++) {
          if (p1483 == v2325[v2326].ΔⲆᐃΔ) {
            v2325.splice(v2326, 1);
            return;
          }
        }
      }
    };
    this.ΔⵠΔΔⵠⲆΔΔᐃ = function (p1484, p1485) {
      for (var v2327 = 0; this.ⲆΔᐃ[56].length > v2327; v2327++) {
        var v2328 = this.ⲆΔᐃ[56][v2327];
        if (Math.floor(v2328.x / 100) === p1485 && Math.floor(v2328.y / 100) === p1484) {
          return 1;
        }
      }
      return 0;
    };
    this.ⵠⵠᐃΔⲆⵠᐃⲆⵠ = function (p1486, p1487) {
      for (var v2329 = 0; v2329 < this.ⲆΔᐃ[30].length; v2329++) {
        var v2330 = this.ⲆΔᐃ[30][v2329];
        if (p1486 == Math.floor(v2330.x / 100) && Math.floor(v2330.y / 100) == p1487) {
          return true;
        }
      }
      return false;
    };
    this.ⵠᐃᐃᐃⵠ = function (p1488) {
      for (var v2331 = 0; v2331 < p1488.length; v2331++) {
        ΔⵠΔⵠ = p1488[v2331];
        if (ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ != ΔⵠΔⵠ.angle) {
          var v2332 = Math.PI * 2;
          ΔⵠΔⵠ.angle = (ΔⵠΔⵠ.angle + v2332) % v2332;
          ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ = (ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ + v2332) % v2332;
          if (ΔⵠΔⵠ.angle != ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ) {
            var v2333 = ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ - ΔⵠΔⵠ.angle;
            var v2334 = Math.abs(v2333);
            if (v2334 > Math.PI) {
              v2334 = Math.PI * 2 - v2334;
            }
            var v2335 = v3027 * (v2334 / Math.PI * 3 * 10);
            if (v2333 > Math.PI) {
              ΔⵠΔⵠ.angle -= v2335;
            } else if (v2333 < -Math.PI) {
              ΔⵠΔⵠ.angle += v2335;
            } else if (v2333 < 0) {
              ΔⵠΔⵠ.angle -= v2335;
            } else {
              ΔⵠΔⵠ.angle += v2335;
            }
            ΔⵠΔⵠ.angle = (ΔⵠΔⵠ.angle + v2332) % v2332;
            if (v2335 > Math.abs(ΔⵠΔⵠ.angle - ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ)) {
              ΔⵠΔⵠ.angle = ΔⵠΔⵠ.ⵠⲆΔⲆΔⵠⵠ;
            }
          }
        }
        Math.floor(ΔⵠΔⵠ.r.y / 100);
        Math.floor(ΔⵠΔⵠ.r.x / 100);
        if (ΔⵠΔⵠ.r.x != ΔⵠΔⵠ.x || ΔⵠΔⵠ.y != ΔⵠΔⵠ.r.y) {
          if (ΔⵠΔⵠ.action & 64) {
            ΔⵠΔⵠ.action -= 64;
          }
          ΔⵠΔⵠ.action |= 32;
          var v2336 = ⲆΔΔ.ᐃⲆⵠΔᐃᐃΔ(ΔⵠΔⵠ, ΔⵠΔⵠ.r) + Math.PI;
          var v2337 = ΔⵠΔⵠ.ⲆΔᐃⲆⲆ * v3027;
          var v2338 = ⲆΔΔ.ΔⵠᐃΔᐃⲆⲆ(v2337, v2336);
          if (ⲆΔΔ.ᐃᐃΔⲆᐃⲆⲆ(ⲆΔΔ.ᐃⵠⵠⵠᐃᐃⲆ(ΔⵠΔⵠ, ΔⵠΔⵠ.r)) > ⲆΔΔ.ᐃᐃΔⲆᐃⲆⲆ(v2338)) {
            ⲆΔΔ.ⲆΔᐃΔⵠᐃᐃ(ΔⵠΔⵠ, v2338);
          } else {
            if (ΔⵠΔⵠ.action & 32) {
              ΔⵠΔⵠ.action -= 32;
            }
            ΔⵠΔⵠ.action |= 64;
            ⲆΔΔ.ΔⲆΔⲆⵠΔᐃ(ΔⵠΔⵠ.r, ΔⵠΔⵠ);
          }
        }
        if (ΔⵠΔⵠ.ⵠⲆⵠᐃΔ) {
          var v2339 = ΔⵠΔⵠ.bubbles;
          if ((v2343 = v2339.length) === 0 || v554.ᐃⵠⵠⲆᐃⲆⲆ > v2343 && v2339[v2343 - 1].ᐃΔⲆⵠⲆ < 0.95) {
            v2339.push({
              id: Math.floor(Math.random() * ⲆⲆ[540][0].length),
              x: Math.floor(ΔⵠΔⵠ.x + Math.random() * 80 - 40),
              y: Math.floor(ΔⵠΔⵠ.y + Math.random() * 80 - 40),
              ᐃΔⲆⵠⲆ: 1
            });
          }
          for (var v2340 = 0; v2343 > v2340; v2340++) {
            v2339[v2340].ᐃΔⲆⵠⲆ = Math.max(0, v2339[v2340].ᐃΔⲆⵠⲆ - v3027);
          }
          for (v2340 = 0; v2340 < v2343; v2340++) {
            if (v2339[v2340].ᐃΔⲆⵠⲆ === 0) {
              v2339.splice(v2340, 1);
              break;
            }
          }
        }
        var v2341 = 0;
        if (ΔⵠΔⵠ.ⵠΔⲆΔ && v2812.ⲆΔⵠⵠᐃ) {
          var v2342 = ΔⵠΔⵠ.ᐃⲆⵠⵠⵠ;
          var v2343 = v2342.length;
          if (ΔⵠΔⵠ.ⲆΔⵠⲆⲆⲆᐃ > 0 && ΔⵠΔⵠ.ᐃⲆᐃΔⵠ !== 227 && ΔⵠΔⵠ.ᐃⲆᐃΔⵠ !== 228 && ΔⵠΔⵠ.ᐃⲆᐃΔⵠ !== 230 && ΔⵠΔⵠ.ᐃⲆᐃΔⵠ !== 229 && ΔⵠΔⵠ.ᐃⲆᐃΔⵠ !== 91 && !ΔⵠΔⵠ.ⵠⲆⵠᐃΔ && (v2341 = 1, v2343 === 0 || v554.ᐃᐃΔⲆΔⲆΔ < ⲆΔΔ.ΔΔᐃΔ(v2342[v2343 - 1], ΔⵠΔⵠ))) {
            var v2344 = -ΔⵠΔⵠ.angle;
            var v2345 = v393 * (Math.cos(v2344) * 45);
            var v2346 = Math.sin(v2344) * 45 * v393;
            v2342.push({
              x: ΔⵠΔⵠ.x + v2345,
              y: ΔⵠΔⵠ.y + v2346,
              r: 8,
              alpha: 0.8
            });
            v2342.push({
              x: ΔⵠΔⵠ.x - v2345,
              y: ΔⵠΔⵠ.y - v2346,
              r: 8,
              alpha: 0.8
            });
            v2342.push({
              x: ΔⵠΔⵠ.x,
              y: ΔⵠΔⵠ.y,
              r: 24,
              alpha: 1
            });
          }
          for (v2340 = 0; v2343 > v2340; v2340++) {
            v2342[v2340].alpha = Math.max(0, v2342[v2340].alpha - v3027 / 2.2);
            v2342[v2340].r += v3027 * 20;
          }
          if (v2342.length > 0 && v2342[0].alpha === 0) {
            v2342.splice(0, 1);
          }
          var v2347 = ΔⵠΔⵠ.ᐃⲆᐃⲆΔ;
          v2343 = v2347.length;
          var v2348 = -1;
          var v2349 = Math.max(0, Math.sign(ΔⵠΔⵠ.ⲆᐃⵠⵠΔⵠⲆ));
          var v2350 = Math.max(0, Math.sign(ΔⵠΔⵠ.ᐃⲆΔⵠⵠ));
          Math.max(0, Math.sign(ΔⵠΔⵠ.ΔᐃⵠΔᐃ));
          var v2351 = Math.max(0, Math.sign(ΔⵠΔⵠ.ⵠΔΔᐃᐃ));
          var v2352 = Math.max(0, Math.sign(ΔⵠΔⵠ.ⲆⵠⲆᐃΔ));
          if (ΔⵠΔⵠ.ⲆᐃⵠⵠΔⵠⲆ > 0 || ΔⵠΔⵠ.ΔᐃⵠΔᐃ > 0) {
            v2348 = 602;
          } else if (ΔⵠΔⵠ.ⲆⵠⲆᐃΔ > 0) {
            v2348 = 680;
          } else if (ΔⵠΔⵠ.ᐃⲆΔⵠⵠ > 0) {
            v2348 = 475;
          } else if (ΔⵠΔⵠ.ⵠΔΔᐃᐃ > 0) {
            v2348 = 476;
          }
          if (ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 225 && (v2349 | v2350 | v2351 | v2352) == 1) {
            v2348 = 228;
            var v2353 = ΔⵠΔⵠ.ⵠᐃᐃⲆΔ - Math.PI / 2;
            var v2354 = 15;
            var v2355 = 11;
            var v2356 = v554.ⲆⵠⲆΔᐃΔΔ;
          } else if (ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 239 && (v2349 | v2350 | v2351 | v2352) == 1) {
            v2348 = 249;
            v2353 = ΔⵠΔⵠ.ⵠᐃᐃⲆΔ - Math.PI / 2;
            v2354 = 21;
            v2355 = 16;
            v2356 = v554.ⲆⵠⲆΔᐃΔΔ;
          } else if (ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 226 && (v2349 | v2350 | v2351 | v2352) == 1) {
            v2348 = 234;
            v2353 = ΔⵠΔⵠ.ⵠᐃᐃⲆΔ - Math.PI / 2;
            var v2357 = Math.random() * 50;
            v2354 = 10 + v2357;
            v2355 = 0 + v2357;
            v2356 = v554.ⲆⵠⲆΔᐃΔΔ * 0.9;
          } else {
            v2353 = ΔⵠΔⵠ.angle;
            v2354 = 15;
            v2355 = 11;
            v2356 = v554.ⲆⵠⲆΔᐃΔΔ;
          }
          if (ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 227 || ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 228 || ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 91 || ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 229 || ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 230 || ΔⵠΔⵠ.ⵠⲆⵠᐃΔ) ;else if (ΔⵠΔⵠ.ᐃⲆᐃΔⵠ === 224) {
            if (v2343 === 0 || ⲆΔΔ.ΔΔᐃΔ(v2347[v2343 - 1], ΔⵠΔⵠ) > v554.ⲆⵠᐃΔᐃᐃⵠ) {
              v2347.push({
                x: ΔⵠΔⵠ.x,
                y: ΔⵠΔⵠ.y,
                angle: ΔⵠΔⵠ.ⵠᐃᐃⲆΔ,
                alpha: 1,
                id: 226
              });
            }
          } else if (v2348 != -1 && v2341 === 0 && (v2343 === 0 || v2356 < ⲆΔΔ.ΔΔᐃΔ(v2347[v2343 - 1], ΔⵠΔⵠ))) {
            ΔⵠΔⵠ.ⲆΔⲆΔⵠΔᐃ++;
            if (Math.abs(ΔⵠΔⵠ.x - ΔⵠΔⵠ.r.x) > 1 && Math.abs(ΔⵠΔⵠ.y - ΔⵠΔⵠ.r.y) > 1) {
              if (ΔⵠΔⵠ.x < ΔⵠΔⵠ.r.x && ΔⵠΔⵠ.y > ΔⵠΔⵠ.r.y || ΔⵠΔⵠ.r.x < ΔⵠΔⵠ.x && ΔⵠΔⵠ.y < ΔⵠΔⵠ.r.y) {
                if (ΔⵠΔⵠ.ⲆΔⲆΔⵠΔᐃ % 2) {
                  v2345 = -v2355 * v393;
                  v2346 = v393 * -v2355;
                } else {
                  v2346 = v2355 * v393;
                  v2345 = v2355 * v393;
                }
              } else if (ΔⵠΔⵠ.ⲆΔⲆΔⵠΔᐃ % 2) {
                v2345 = v2355 * v393;
                v2346 = v393 * -v2355;
              } else {
                v2346 = v393 * v2355;
                v2345 = v393 * -v2355;
              }
            } else if (ΔⵠΔⵠ.ⲆΔⲆΔⵠΔᐃ % 2) {
              v2345 = v393 * (Math.cos(v2353) * v2354);
              v2346 = v2354 * Math.sin(v2353) * v393;
            } else {
              v2345 = -Math.cos(v2353) * v2354 * v393;
              v2346 = v2354 * -Math.sin(v2353) * v393;
            }
            v2347.push({
              x: ΔⵠΔⵠ.x + v2345,
              y: ΔⵠΔⵠ.y + v2346,
              angle: v2353 + Math.PI / 2,
              alpha: 1,
              id: v2348
            });
          }
          for (v2340 = 0; v2340 < v2343; v2340++) {
            if (v2347[v2340].id === 226) {
              v2347[v2340].alpha = Math.max(0, v2347[v2340].alpha - v3027 * 1.5);
            } else {
              v2347[v2340].alpha = Math.max(0, v2347[v2340].alpha - v3027 / 2.85);
            }
          }
          if (v2347.length > 0 && "#EBF2F0".alpha === 0) {
            v2347.splice(0, 1);
          }
        }
      }
    };
    this.ᐃΔⵠ = function () {
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[0]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[80]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[60]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[67]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[70]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[77]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[71]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[72]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[73]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[74]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[61]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[62]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[88]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[91]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[90]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[63]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[78]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[75]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[76]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[64]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[68]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[65]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[66]);
      this.ⵠᐃᐃᐃⵠ(this.ⲆΔᐃ[69]);
    };
    this.Δᐃⵠᐃ = [];
    this.Δᐃⵠᐃ[620] = new ⲆΔΔ.ⵠᐃΔΔ(vVVV213, 1, 1.05, 1, 0.008, 0.008);
    this.Δᐃⵠᐃ[619] = new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1.08, 1, 0.006, 0.006);
    this.Δᐃⵠᐃ[694] = new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1.02, 1, 0.008, 0.008);
    this.Δᐃⵠᐃ[695] = new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1.08, 1, 0.006, 0.006);
    this.ⲆᐃΔⲆᐃ = [];
    this.ⲆᐃΔⲆᐃ[0] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.1, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[1] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.4, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[2] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.3, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[3] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.8, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[4] = new ⲆΔΔ.ⵠᐃΔΔ(vV212, 0.3, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[5] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.8, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[6] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.5, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[7] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[8] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[9] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.2, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[10] = new ⲆΔΔ.ⵠᐃΔΔ(vV213, 0.6, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[11] = new ⲆΔΔ.ⵠᐃΔΔ(vVV2122, 0.4, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[12] = new ⲆΔΔ.ⵠᐃΔΔ(vVVV212, 0.8, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[13] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.2, 1, 0, 0.6, 0.6);
    this.ⲆᐃΔⲆᐃ[14] = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.7, 1, 0, 0.6, 0.6);
  }
  function f444(p1489, p1490, p1491, p1492, p1493, p1494, p1495, p1496, p1497, p1498) {
    this.type = p1489;
    this.ΔᐃᐃⲆ = p1490;
    this.id = p1491;
    this.x = p1492;
    this.y = p1493;
    this.angle = p1494;
    this.ⵠⲆΔⲆΔⵠⵠ = p1494;
    this.action = p1495;
    this.info = p1496;
    this.ⵠᐃᐃⵠᐃ = p1498;
    this.r = {
      x: p1492,
      y: p1493
    };
    this.ⲆΔᐃⲆⲆ = p1497;
    if (v2813) {
      this.ΔⲆᐃΔ = p1490 * v2813.ⵠⵠⲆⵠⵠᐃᐃ + p1491;
    }
    switch (p1489) {
      case 0:
        this.ᐃᐃⵠⵠ = v2813.ᐃΔΔᐃ[this.ΔᐃᐃⲆ];
        this.ⲆΔᐃⲆ = this.ᐃᐃⵠⵠ.ⲆΔᐃⲆ;
        this.ⵠΔⲆⵠⲆᐃΔ = this.ᐃᐃⵠⵠ.ⵠΔⲆⵠⲆᐃΔ;
        this.ⵠⵠΔΔⲆ = this.ᐃᐃⵠⵠ.ⵠⵠΔΔⲆ;
        this.ⵠΔⲆΔΔ = this.ᐃᐃⵠⵠ.ⵠΔⲆΔΔ;
        this.ΔΔᐃΔⵠⲆⲆ = -1000000;
        this.ⵠΔΔᐃᐃ = -1000000;
        this.ᐃⲆΔⵠⵠ = -1000000;
        this.ΔᐃⵠΔᐃ = -1000000;
        this.ⲆΔⵠⲆⲆⲆᐃ = -1000000;
        this.ⲆᐃⵠⵠΔⵠⲆ = -1000000;
        this.ⲆⵠⲆᐃΔ = -1000000;
        this.ᐃΔᐃΔᐃ = v2813.mode === 2 && this.ⲆΔᐃⲆ === 0 || vV212;
        this.ᐃᐃΔΔΔⲆᐃ = v2813.mode === 3 && this.ⲆΔᐃⲆ === 0 || vVVV21222;
        this.ΔⵠⵠᐃΔⵠᐃ = this.ᐃΔᐃΔᐃ && this.ᐃᐃⵠⵠ.ᐃΔᐃⲆⵠ === "  " ? vVV2422 : vVVV212;
        this.ᐃⲆᐃⲆΔ = [];
        this.ⵠⲆⵠⲆⵠᐃΔ = 0;
        this.ⵠΔⲆΔ = true;
        this.ⲆΔⲆΔⵠΔᐃ = 0;
        this.ⲆⲆᐃⵠⲆΔⲆ = 0;
        this.ᐃⲆⵠⵠⵠ = [];
        this.r = {
          x: p1492,
          y: p1493
        };
        this.ΔⵠⵠΔ = f384;
        this.ⵠⵠᐃΔᐃΔⲆ = f383;
        this.ⲆⵠⲆⵠⵠ = 0;
        this.ⵠᐃᐃⲆΔ = 0;
        this.Ⲇⵠⵠᐃⵠ = 0;
        this.ⲆΔᐃⵠᐃⲆⵠ = new ⲆΔΔ.ⵠᐃΔΔ(vVVVV212, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ⲆΔΔⵠⵠ = 0;
        this.ⲆⵠᐃⲆⵠⵠᐃ = 0;
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        this.Δⵠᐃⵠⵠ = new ⲆΔΔ.ⵠᐃΔΔ(vVVVV212, 0.6, 0.6, 0, 5, 3);
        this.freeze = new ⲆΔΔ.ⵠᐃΔΔ(vVV2122, 0.6, 0.6, 0, 5, 3);
        this.ⵠΔΔⵠΔⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        this.ᐃⲆᐃΔⵠⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(true, 0, 2.25, -1.5, 3.75, 7.5);
        this.ΔΔᐃⵠⵠⲆⵠ = new ⲆΔΔ.ⵠᐃΔΔ(vVV24, 0, 7.5, -3, 22.5, 33.75);
        this.attack = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 0, -Math.PI / 3, 6, 9);
        this.ⵠΔᐃⲆᐃΔᐃⵠⵠ = 0;
        this.ⲆᐃⲆⵠᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 1, 3);
        this.ⲆᐃⵠΔᐃⲆⲆ = this.ΔⵠⵠᐃΔⵠᐃ ? new ⲆΔΔ.ⵠᐃΔΔ(true, 0, 2.25, -1.5, 2.75, 5.5) : 0;
        this.Δⵠⵠⵠᐃᐃᐃ = 0;
        this.ⲆⵠΔΔΔⵠᐃ = 0;
        this.ΔΔΔⵠᐃⵠᐃ = [];
        this.ⲆⵠᐃΔⲆᐃᐃ = [];
        this.text = [];
        this.label = [];
        this.ⵠⵠᐃΔⵠᐃᐃ = f388;
        this.ΔⲆΔᐃΔ = vVV242;
        this.right = -1;
        this.ᐃⲆᐃΔⵠ = -1;
        this.action = 64;
        this.ᐃΔᐃᐃⵠⵠΔ = vVVVV21;
        this.ΔⲆⵠⲆⵠ = 0;
        this.ⵠⲆⵠᐃΔ = vVVVV212;
        this.bubbles = [];
        this.ⵠΔΔΔⲆ = 0;
        this.ΔΔⲆΔᐃ = -1;
        this.ᐃΔⵠ = function (p1499) {
          if (this.info & 32768) {
            this.ᐃΔᐃᐃⵠⵠΔ = vVV2432;
            this.info = this.info & -32769;
          } else {
            this.ᐃΔᐃᐃⵠⵠΔ = vV214;
          }
          if (this.info & 16384) {
            this.info = this.info & -16385;
            this.ⵠΔΔΔⲆ = 1;
          } else {
            this.ⵠΔΔΔⲆ = 0;
          }
          this.ΔⲆⵠⲆⵠ = Math.floor(this.info / 128);
          this.info -= this.ΔⲆⵠⲆⵠ * 128;
          if (this.info === 7 || this.ΔⵠⵠᐃΔⵠᐃ) {
            this.right = -1;
          } else {
            this.right = this.info;
          }
          this.ⵠⲆⵠⲆⵠᐃΔ = v2813.ΔⵠΔΔⵠⲆΔΔᐃ(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100));
          this.ᐃⲆᐃΔⵠ = this.ⵠᐃᐃⵠᐃ & 255;
          if (this.right === 2) {
            this.ⵠⲆⵠᐃΔ = true;
          } else {
            this.ⵠⲆⵠᐃΔ = false;
          }
          if (v2206[this.right]) {
            this.ᐃΔⵠⲆΔ = true;
          } else {
            this.ᐃΔⵠⲆΔ = vVVVV21;
          }
          if (p1499 & 256) {
            this.ⲆᐃⲆⵠᐃⵠᐃ.ΔⲆⲆ = false;
            this.ⲆᐃⲆⵠᐃⵠᐃ.ⲆⵠΔ = 0.6;
          } else if (p1499 & 4) {
            this.freeze.ΔⲆⲆ = false;
            this.freeze.ⲆⵠΔ = 0.6;
          } else if (p1499 & 128) {
            this.Δⵠᐃⵠⵠ.ΔⲆⲆ = false;
            this.Δⵠᐃⵠⵠ.ⲆⵠΔ = 0.6;
          }
          if (p1499 & 8) {
            this.ⵠΔΔⵠΔⵠᐃ.ΔⲆⲆ = vV214;
            this.ⵠΔΔⵠΔⵠᐃ.ⲆⵠΔ = 0.6;
          }
          if (p1499 & 2) {
            this.ᐃⲆᐃ.ΔⲆⲆ = vVV212;
            this.ᐃⲆᐃ.ⲆⵠΔ = 0.6;
          }
          if (p1499 & 16) {
            this.ⵠΔᐃⲆᐃΔᐃⵠⵠ = 0.58;
            if (v2994.ΔⲆⲆΔⵠ && this.ΔΔⲆΔᐃ !== -1) {
              v2994.ᐃΔΔᐃ[this.ΔΔⲆΔᐃ].ⲆᐃΔᐃᐃΔⵠⲆⲆ(v2783[this.right]);
            }
          }
        };
        this.ᐃΔⵠ();
        break;
      case 23:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVV2122, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVV2123,
          angle: 0
        };
        this.ⵠΔΔᐃΔ = f375;
        this.ᐃⵠⲆⲆⵠ = f335;
        this.ⲆⲆⲆΔᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1.23, 1.18, 0.01, 0.01);
        this.ᐃⲆⵠⵠⵠⵠⵠ = 0;
        this.ⲆΔⵠⲆⲆΔΔ = 0;
        this.ᐃⲆⵠᐃⲆ = f328;
        break;
      case 22:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV21222,
          angle: 0
        };
        this.ⵠΔΔᐃΔ = f362;
        this.ᐃⵠⲆⲆⵠ = f369;
        this.ⲆⲆⲆΔᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV213, 1, 1.23, 1.18, 0.01, 0.01);
        this.ᐃⲆⵠⵠⵠⵠⵠ = 0;
        this.ⲆΔⵠⲆⲆΔΔ = 0;
        break;
      case 1:
      case 6:
        this.ⵠΔΔᐃΔ = f370;
        this.ᐃⵠⲆⲆⵠ = f356;
        this.ΔⲆᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV213, 1, 1.03, 0.98, 0.3, 0.3);
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(vV212, 1, 1.23, 1.18, 0.01, 0.01);
        this.ⲆⲆⲆΔᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV2132, 1, 1.23, 1.18, 0.01, 0.01);
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVV2123, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        break;
      case 43:
        this.ⵠΔΔᐃΔ = f338;
        this.ᐃⵠⲆⲆⵠ = f379;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV21222, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV21,
          angle: 0
        };
        this.ΔⲆⵠΔ = [];
        for (var v2358 = 0; v2358 < 3; v2358++) {
          this.ΔⲆⵠΔ.push({
            ΔⵠⵠΔ: f363,
            Δᐃⵠᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ΔⲆⵠΔ[0].x = this.x - 16.5;
        this.ΔⲆⵠΔ[0].y = this.y - 15.5;
        this.ΔⲆⵠΔ[0].angle = this.angle;
        this.ΔⲆⵠΔ[1].x = this.x + 36;
        this.ΔⲆⵠΔ[1].y = this.y + 17;
        this.ΔⲆⵠΔ[1].angle = this.angle;
        this.ΔⲆⵠΔ[2].x = this.x - 18.5;
        this.ΔⲆⵠΔ[2].y = this.y + 39;
        this.ΔⲆⵠΔ[2].angle = this.angle;
        break;
      case 3:
        this.ⵠΔΔᐃΔ = f366;
        this.ᐃⵠⲆⲆⵠ = f349;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        this.ΔⲆⵠΔ = [];
        for (v2358 = 0; v2358 < 3; v2358++) {
          this.ΔⲆⵠΔ.push({
            ΔⵠⵠΔ: f345,
            Δᐃⵠᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        this.ΔⲆⵠΔ[0].x = this.x - 16.5;
        this.ΔⲆⵠΔ[0].y = this.y - 15.5;
        this.ΔⲆⵠΔ[1].x = this.x - 5.5;
        this.ΔⲆⵠΔ[1].y = this.y + 7.5;
        this.ΔⲆⵠΔ[2].x = this.x + 18;
        this.ΔⲆⵠΔ[2].y = this.y - 5;
        break;
      case 77:
        this.ΔⵠⵠΔ = f336;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vV21, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 70:
        this.ΔⵠⵠΔ = f347;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV2122, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 71:
        this.ΔⵠⵠΔ = f343;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⵠΔΔⵠⲆΔⲆ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV213, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⵠⲆⲆⵠⲆᐃᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vV213, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        this.Δⵠᐃⵠⵠ = new ⲆΔΔ.ⵠᐃΔΔ(vVV213, 0.6, 0.6, 0, 5, 3);
        break;
      case 67:
        this.ΔⵠⵠΔ = f337;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVVV21222, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⵠΔΔⵠⲆΔⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ⵠⲆⲆⵠⲆᐃᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        this.Δⵠᐃⵠⵠ = new ⲆΔΔ.ⵠᐃΔΔ(vVV213, 0.6, 0.6, 0, 5, 3);
        break;
      case 68:
        this.ΔⵠⵠΔ = f341;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV2122, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV2122, 0.6, 0.6, 0, 5, 3);
        break;
      case 90:
        this.ΔⵠⵠΔ = f373;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV212, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.5, 0.5);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV2122, 0.6, 0.6, 0, 5, 3);
        break;
      case 91:
        this.ᐃᐃⲆⵠⲆ = this.info & 15;
        this.ⲆⲆᐃⵠⲆΔⲆ = this.ⵠᐃᐃⵠᐃ & 1;
        this.ⲆⲆⵠΔᐃⵠΔ = 0;
        this.x = this.info;
        this.y = this.ⵠᐃᐃⵠᐃ;
        this.ΔⵠⵠΔ = f333;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vV21, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.6, 0.6);
        break;
      case 80:
      case 60:
      case 61:
      case 62:
      case 63:
      case 78:
      case 65:
      case 66:
      case 88:
        this.ΔⵠⵠΔ = f373;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV212, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV21, 0.6, 0.6, 0, 5, 3);
        break;
      case 36:
        this.ΔⵠⵠΔ = f368;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV21,
          angle: 0
        };
        break;
      case 34:
        this.ᐃⵠⲆⲆⵠ = f367;
        this.ΔⵠⵠΔ = f342;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVVV21222, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        this.up = new ⲆΔΔ.ⵠᐃΔΔ(vVVVV212, 1, 1.03, 0.98, 0.1, 0.1);
        this.ⲆⲆΔΔⵠ = [];
        break;
      case 87:
        this.angle = Math.random() * Math.PI / 2;
      case 86:
      case 82:
        this.ΔⵠⵠΔ = f381;
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 81:
        this.ΔⵠⵠΔ = f374;
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 69:
        this.scale = 1;
        this.ΔⵠⵠΔ = f360;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(v21, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 76:
        this.ⲆⵠΔᐃᐃ = 0;
        this.ᐃᐃⵠⲆ = [];
        this.ΔⲆΔᐃᐃΔᐃ = 0;
        this.ⲆΔᐃⲆⲆⲆΔ = f378;
        this.ΔⵠⵠΔ = f357;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVVV212, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 75:
        this.x = this.info;
        this.y = this.ⵠᐃᐃⵠᐃ;
        this.scale = 1;
        this.ΔⲆⵠᐃ = 0;
        this.ΔⵠⵠΔ = f334;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vV21, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(vVV213, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 74:
        this.x = this.info;
        this.y = this.ⵠᐃᐃⵠᐃ;
        this.scale = 1;
        this.ΔⲆⵠᐃ = 0;
        this.ΔⵠⵠΔ = f355;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVVV21, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(vVV21, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV2123, 0.6, 0.6, 0, 5, 3);
        break;
      case 73:
        this.scale = 1;
        this.ΔⵠⵠΔ = f346;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 72:
        this.scale = 1;
        this.ΔⵠⵠΔ = f377;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVV213, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(vVVV212, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.6, 0.6, 0, 5, 3);
        break;
      case 64:
        this.scale = 1;
        this.ΔⵠⵠΔ = f351;
        this.Δᐃⵠᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2);
        this.rotate = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 0, -Math.PI / 6, 0.5, 1);
        this.ᐃⲆᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV2132, 0.6, 0.6, 0, 5, 3);
        break;
      case 100:
        this.ΔⲆⵠΔ = [];
        for (v2358 = 0; v2358 < 5; v2358++) {
          this.ΔⲆⵠΔ.push({
            ΔⵠⵠΔ: f345,
            Δᐃⵠᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV2133, 0.9 + Math.random() * 0.15, 1.05, 0.9, 0.2, 0.2)
          });
        }
        switch (this.id % 3) {
          case 0:
            this.ΔⲆⵠΔ[0].x = this.x - 20.5;
            this.ΔⲆⵠΔ[0].y = this.y - 22.5;
            this.ΔⲆⵠΔ[1].x = this.x - 35.5;
            this.ΔⲆⵠΔ[1].y = this.y + 7.5;
            this.ΔⲆⵠΔ[2].x = this.x + 7.5;
            this.ΔⲆⵠΔ[2].y = this.y - 30;
            this.ΔⲆⵠΔ[3].x = this.x + 22.5;
            this.ΔⲆⵠΔ[3].y = this.y;
            this.ΔⲆⵠΔ[4].x = this.x - 7.5;
            this.ΔⲆⵠΔ[4].y = this.y + 14.5;
            break;
          case 1:
            this.ΔⲆⵠΔ[0].x = this.x - 30.5;
            this.ΔⲆⵠΔ[0].y = this.y - 22.5;
            this.ΔⲆⵠΔ[1].x = this.x - 15.5;
            this.ΔⲆⵠΔ[1].y = this.y + 7.5;
            this.ΔⲆⵠΔ[2].x = this.x + 15.5;
            this.ΔⲆⵠΔ[2].y = this.y - 30;
            this.ΔⲆⵠΔ[3].x = this.x + 12.5;
            this.ΔⲆⵠΔ[3].y = this.y + 5;
            this.ΔⲆⵠΔ[4].x = this.x - 40.5;
            this.ΔⲆⵠΔ[4].y = this.y + 14.5;
            break;
          case 2:
            this.ΔⲆⵠΔ[0].x = this.x - 20.5;
            this.ΔⲆⵠΔ[0].y = this.y - 20.5;
            this.ΔⲆⵠΔ[1].x = this.x - 35.5;
            this.ΔⲆⵠΔ[1].y = this.y + 15.5;
            this.ΔⲆⵠΔ[2].x = this.x + 7.5;
            this.ΔⲆⵠΔ[2].y = this.y - 17;
            this.ΔⲆⵠΔ[3].x = this.x + 22.5;
            this.ΔⲆⵠΔ[3].y = this.y + 5;
            this.ΔⲆⵠΔ[4].x = this.x - 7.5;
            this.ΔⲆⵠΔ[4].y = this.y + 1.5;
        }
        break;
      case 31:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV21, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        this.ΔⵠⵠΔ = f332;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(vV212, 0.9, 1.05, 0.9, 0.2, 0.2);
        this.ΔⵠᐃΔⲆⲆⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, Math.PI / 30, -Math.PI / 30, 0.06, 0.06);
        break;
      case 40:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVV212,
          angle: 0
        };
        this.ΔⵠⵠΔ = f348;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 39:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV2133,
          angle: 0
        };
        this.ΔⵠⵠΔ = f358;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 44:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV213, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVV212,
          angle: 0
        };
        this.ΔⵠⵠΔ = f353;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(vVV21, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 55:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        this.ΔⵠⵠΔ = f354;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 54:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVVV21,
          angle: 0
        };
        this.ΔⵠⵠΔ = f330;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 37:
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vV21,
          angle: 0
        };
        this.ΔⵠⵠΔ = f380;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 0.9, 1.05, 0.9, 0.2, 0.2);
        break;
      case 24:
        this.ΔⵠⵠΔ = f364;
        this.rotate = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV21, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV212,
          angle: 0
        };
        break;
      case 25:
        this.ΔⵠⵠΔ = f331;
        this.rotate = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: v21,
          angle: 0
        };
        break;
      case 26:
        this.ΔⵠⵠΔ = f350;
        this.rotate = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV21, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        break;
      case 27:
        this.ΔⵠⵠΔ = f376;
        this.rotate = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV2122, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVV2123,
          angle: 0
        };
        break;
      case 28:
        this.ΔⵠⵠΔ = f339;
        this.rotate = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        break;
      case 32:
        this.ⵠΔΔᐃΔ = f359;
        this.ᐃⵠⲆⲆⵠ = f372;
        this.rotate = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vV213, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        break;
      case 38:
        this.ΔⵠⵠΔ = f326;
        this.ΔᐃΔⲆ = Math.floor(this.x / 100);
        this.Ⲇⵠ = Math.floor(this.y / 100);
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVV21,
          angle: 0
        };
        this.opacity = 1;
        this.ᐃⲆⵠᐃⲆ = f313;
        break;
      case 42:
        this.ΔⵠⵠΔ = f305;
        this.ⲆⲆⲆΔᐃ = new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1.15, 1, 0.3, 0.3);
        this.color = 0;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vV21, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        break;
      case 33:
      case 2:
      case 56:
      case 35:
      case 29:
        this.ΔⵠⵠΔ = f321;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: v21,
          angle: 0
        };
        break;
      case 30:
        this.ΔⵠⵠΔ = f321;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        this.ᐃⲆⵠᐃⲆ = f313;
        break;
      case 4:
      case 7:
      case 8:
      case 9:
      case 19:
      case 50:
      case 5:
      case 12:
      case 13:
      case 14:
      case 20:
      case 52:
        this.ΔⵠⵠΔ = f321;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV2122,
          angle: 0
        };
        this.ᐃⲆⵠᐃⲆ = f328;
        break;
      case 41:
        this.ΔⵠⵠΔ = f325;
        this.opacity = 1;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV21, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vV214,
          angle: 0
        };
        var v2359 = this.angle % (Math.PI / 2);
        if (Math.PI / 4 > v2359) {
          this.angle -= v2359;
        } else {
          this.angle += Math.PI / 2 - v2359;
        }
        break;
      case 79:
        this.ΔⵠⵠΔ = f306;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 89:
        this.ΔⵠⵠΔ = f318;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 83:
        this.ΔⵠⵠΔ = f310;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 84:
        this.ΔⵠⵠΔ = f317;
        this.angle = Math.PI * Math.random() * 2;
        break;
      case 85:
        this.ΔⵠⵠΔ = f319;
        this.angle = Math.random() * Math.PI * 2;
        break;
      case 11:
        this.ᐃΔⵠ = function (p1500) {
          this.lock = this.info & 8192 ? 1 : 0;
          this.info = this.info & 8191;
          this.action = p1500;
        };
        this.ΔⵠⵠΔ = f320;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vV212,
          angle: 0
        };
        this.lock = 0;
        this.ᐃΔⵠ(this.action);
        break;
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 53:
      case 10:
      case 15:
      case 16:
      case 17:
      case 21:
      case 51:
        this.ΔⵠⵠΔ = f312;
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(vVV2123, 1, 1, 0, 10, 10),
          ᐃΔⵠ: vVVV2132,
          angle: 0
        };
        this.ᐃⲆⵠᐃⲆ = f328;
        break;
      case 18:
        this.ⵠΔΔᐃΔ = f361;
        this.ΔⵠⵠΔ = f371;
        this.ᐃⵠⲆⲆⵠ = f340;
        this.ᐃᐃⵠⲆ = new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1.23, 1.18, 0.02, 0.02);
        this.ⲆⲆⲆΔᐃ = new ⲆΔΔ.ⵠᐃΔΔ(vVVV2133, 1, 1.23, 1.18, 0.04, 0.04);
        this.ᐃⲆᐃ = {
          Ⲇⵠᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(false, 1, 1, 0, 10, 10),
          ᐃΔⵠ: false,
          angle: 0
        };
        this.ᐃΔⵠ = function (p1501) {
          this.action = p1501;
        };
    }
  }
  function f445() {
    this.ᐃΔᐃⲆⵠ = "";
    this.ⲆΔᐃⲆ = 0;
    this.ⵠΔⲆΔΔ = 0;
    this.ⵠΔΔΔⲆ = 0;
    this.ⵠΔⲆⵠⲆᐃΔ = 0;
    this.ⵠⵠΔΔⲆ = 0;
    this.ⵠᐃⲆᐃᐃ = 0;
    this.ΔΔᐃᐃⲆ = 0;
    this.level = 0;
    this.label = null;
    this.ⵠΔⵠⲆⲆΔᐃ = null;
    this.ⲆⵠΔⲆΔΔΔ = null;
    this.ᐃⲆᐃⲆⵠ = vVVV2132;
    this.ⵠⵠᐃΔᐃ = 0;
  }
  ⲆⲆⵠⵠᐃⵠⵠᐃᐃ = 1;
  function f446(p1502) {
    return vWindow.String.fromCharCode(p1502);
  }
  function f463() {
    Math.random();
    return "t";
  }
  function f449() {
    Math.random();
    return "p";
  }
  function f449() {
    Math.random();
    return "p";
  }
  function f459() {
    Math.random();
    return "o";
  }
  function f451() {
    Math.random();
    return "i";
  }
  function f452() {
    Math.random();
    return "g";
  }
  function f453() {
    Math.random();
    return "r";
  }
  (function () {
    const v2360 = {
      ΔⲆᐃᐃⵠⵠⵠᐃⵠ: 5637102,
      ᐃⵠᐃᐃⲆᐃᐃΔᐃ: 8141524,
      ᐃΔᐃⲆᐃⵠⵠΔⲆ: 3112219,
      ⵠⲆᐃⲆᐃᐃᐃ: 9765506
    };
  })();
  const v2361 = 7620886;
  const v2362 = 7620886 .ᐃΔΔⲆᐃⲆΔ;
  const v2363 = `const ᐃΔᐃᐃⵠᐃΔ = (typeof ᐃⲆⲆᐃΔΔΔⲆᐃ === "${v2362}") ? 1 : 0; return ᐃΔᐃᐃⵠᐃΔ;`;
  function f454() {
    this.ⵠΔⵠⲆⲆ = function () {};
    this.ⲆⵠΔᐃΔ = {
      ΔᐃᐃⲆ: 1,
      ᐃΔⵠᐃⲆ: 1,
      open: false
    };
    this.ⵠⵠᐃᐃⵠ = {
      ΔᐃᐃⲆ: 1,
      ᐃΔⵠᐃⲆ: -1,
      open: false
    };
    this.ΔⵠᐃⲆ = {
      ΔᐃⲆΔⵠ: 0,
      ΔᐃᐃⲆ: 1,
      ᐃΔⵠᐃⲆ: -1,
      ᐃⲆᐃⵠᐃⵠⲆ: 0,
      open: vVVV2132
    };
    this.ⵠⵠΔⲆ = {
      ΔᐃᐃⵠⲆⵠⲆ: 0,
      ⲆⲆⲆⲆᐃΔⲆ: 0,
      type: 0,
      ⵠⲆⵠΔⵠⲆΔ: 0,
      ΔᐃᐃⲆ: 1,
      ᐃΔⵠᐃⲆ: -1,
      open: false
    };
    this.ᐃⲆⵠΔ = {
      ᐃΔⵠᐃⲆ: -1,
      open: false,
      ΔΔΔⵠⵠⲆⵠ: 0,
      ΔᐃᐃⲆ: 1,
      ΔᐃⲆΔⵠ: 0,
      ΔᐃᐃⵠⲆⵠⲆ: 0
    };
    this.sign = {
      ᐃΔⵠᐃⲆ: -1,
      open: false
    };
    this.ᐃⵠⵠᐃΔ = {
      Δⵠᐃⵠ: 0,
      ΔᐃᐃⲆ: 1,
      ᐃΔⵠᐃⲆ: -1,
      open: false
    };
    this.ⵠⲆⵠᐃΔ = {
      enabled: vV212,
      ⲆΔᐃⲆⵠ: -1,
      label: vVVVV212,
      now: -1,
      ΔⵠⵠΔ: f385
    };
    this.ΔᐃⵠΔ = {
      id: -1,
      Δⵠᐃⵠ: 0,
      ΔᐃᐃⲆ: 1,
      ᐃΔⵠᐃⲆ: -1,
      open: false,
      lock: vVVVV212,
      locked: vVV2123,
      ⵠⲆᐃᐃᐃΔⲆ: vVVV2132,
      ⲆⵠΔΔⵠⲆΔ: vVVVV21
    };
    this.ᐃⲆᐃⲆⵠ = vVVV242;
    this.reconnect = {
      enabled: vVV21,
      rotate: 0
    };
    this.key = ⲆΔΔ.ΔⲆᐃΔⲆⵠⲆ("key", vWindow.location.href);
    var v2364 = ⲆΔΔ.ΔⲆᐃΔⲆⵠⲆ("egg", vWindow.location.href);
    if (v2364) {
      v2812.ⲆΔᐃⲆ = parseInt(v2364);
    }
    this.beta = vWindow.location.href.indexOf("http://starve.io/beta") === 0 ? 1 : 0;
    if (this.key && this.beta) {
      ᐃᐃⲆᐃ.set("starve_beta", this.key);
    } else if (this.beta) {
      this.key = ᐃᐃⲆᐃ.get("starve_beta");
    }
    this.ⵠᐃⲆⲆΔ = ᐃᐃⲆᐃ.get("starve_token") ? ᐃᐃⲆᐃ.get("starve_token") : ⲆΔΔ.ⲆᐃᐃΔΔΔΔ(14);
    vWindow.baguette();
    var v2365 = vWindow.kot2;
    this.ⵠᐃⲆⲆΔ = v2365.substring(0, 6) + this.ⵠᐃⲆⲆΔ.substring(6);
    this.ΔΔᐃⵠΔΔΔⵠᐃ = true;
    this.ΔⲆΔⵠᐃⲆⵠᐃⲆ = 163;
    this.ⲆⲆᐃⲆⵠⵠΔ = ᐃᐃⲆᐃ.get("starve_token_id") ? ᐃᐃⲆᐃ.get("starve_token_id") : "";
    this.ᐃᐃΔⲆⵠⲆⵠᐃⵠ = {};
    this.ᐃᐃΔⲆⵠⲆⵠᐃⵠ.ΔⵠⵠⵠⵠΔΔⲆΔ = 9;
    this.ⵠⵠΔᐃⵠⵠΔⵠᐃ = 173;
    this.ΔⵠΔᐃⵠᐃⲆᐃⵠ = 119;
    this.id = 0;
    this.ΔⲆᐃΔ = 0;
    this.ᐃᐃᐃ = 0;
    this.ᐃΔⵠΔⵠⲆΔ = {
      ⵠᐃⲆⵠᐃⵠⵠ: 0,
      ᐃᐃⵠⲆᐃ: 0,
      ᐃᐃᐃᐃΔᐃΔ: "",
      ⵠⵠᐃΔᐃ: 0
    };
    this.ᐃᐃⵠᐃΔΔⵠΔⲆ = 84;
    this.ΔᐃⲆⲆⲆΔᐃᐃⲆ = 225;
    this.ᐃᐃⵠᐃΔΔⵠΔⲆ;
    this.ΔᐃⲆⲆⲆΔᐃᐃⲆ;
    this.ⲆΔΔΔΔⵠᐃⲆᐃ = {
      connected: 0,
      ᐃΔᐃᐃⵠ: new Date().getTime()
    };
    this.ⵠΔⲆΔⵠᐃᐃᐃΔ = 178;
    this.ⵠΔⲆΔⵠᐃᐃᐃΔ.ΔⵠΔᐃⲆⵠⵠ = 8;
    this.ⲆᐃᐃΔⲆ = [];
    var v2366 = 82;
    if (v2366 > 14) {
      v2366 = 21;
    }
    this.ⵠᐃⵠΔᐃⵠᐃⵠⲆ = 228;
    this.ΔⲆⵠⲆⵠⵠⵠ = 207;
    this.ⵠⵠⵠⲆⲆΔᐃⲆΔ = vVVV21;
    this.ⵠᐃⵠⲆΔⲆⵠⲆᐃ = 46;
    this.ⲆⵠⲆᐃⲆᐃΔΔΔ = 89344;
    this.ΔⵠⵠⵠⲆⲆᐃᐃⵠ = 124;
    this.ΔⵠⵠⵠⲆⲆᐃᐃⵠ.ΔⵠⲆⵠⵠⲆΔᐃΔ = 4;
    this.ⵠᐃⵠΔᐃⵠᐃⵠⲆ;
    this.ΔⲆⵠⲆⵠⵠⵠ;
    var v2367 = 154;
    if (v2367 > 8) {
      v2367 = 28;
    }
    this.ⲆⲆΔⵠⵠΔᐃ = function (p1503) {
      for (var v2368 = 0; this.ⲆᐃᐃΔⲆ.length > v2368; v2368++) {
        if (this.ⲆᐃᐃΔⲆ[v2368] == p1503) {
          return vVVV243;
        }
      }
      return vVV213;
    };
    this.ⲆⵠⵠΔΔ = {
      ⲆΔᐃⲆⵠ: 0,
      time: 0,
      value: 0,
      open: false,
      ΔⵠⵠΔ: function () {
        if (this.open) {
          var v2369 = new Date().getTime();
          this.time = Math.floor((v2369 - this.ⲆΔᐃⲆⵠ) / 1000);
          if (this.time < 60) {
            v2993.ⲆⵠⵠΔΔ.button.ΔⵠⵠΔ(v380);
          } else {
            document.getElementById("shop_starterkit").style.display = "none";
            this.open = false;
          }
        }
      }
    };
    this.ⵠⲆⵠᐃΔⲆᐃ = 43;
    this.ⵠΔΔⲆΔⵠⵠ = 59;
    this.ⵠⲆⵠᐃΔⲆᐃ;
    this.ⵠΔΔⲆΔⵠⵠ;
    this.ⲆΔⲆᐃⲆⲆⲆ = 202;
    this.ᐃⵠⲆΔⵠⵠⵠ = 83;
    this.ⲆΔⲆᐃⲆⲆⲆ;
    this.ᐃⵠⲆΔⵠⵠⵠ;
    this.ⲆΔⵠᐃⵠ = {
      id: -1,
      ΔᐃᐃⲆ: -1,
      lock: 0,
      timeout: new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 1, 0, 1 / 30, 1),
      wait: vVVV21222
    };
    this.ⵠⲆᐃⵠᐃ = {
      timeout: new ⲆΔΔ.ⵠᐃΔΔ(vVV213, 0, 1, 0, 1 / 5, 1),
      wait: vVV213
    };
    this.ΔⵠᐃΔⲆ = {
      timeout: new ⲆΔΔ.ⵠᐃΔΔ(vVV212, 0, 1, 0, 1, 1),
      wait: false
    };
    var v2370 = 84;
    if (v2370 >= 14) {
      v2370 = 253;
    }
    this.ᐃΔⵠⲆΔ = {
      timeout: new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 1, 0, 0.1, 1),
      wait: false
    };
    this.ᐃⲆⲆ = new ⲆΔΔ.ᐃⵠⲆΔΔⲆᐃ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 0.4, 0, 0, v384, v386, v384, v386);
    this.ᐃⲆⲆ.ⲆΔᐃⲆⵠ = 0;
    this.ᐃⲆⲆ.ⲆⵠⵠΔᐃⵠⲆ = 0;
    this.ᐃⲆⲆ.ᐃΔⵠ = function () {
      if (this.ⲆⵠⵠΔᐃⵠⲆ > 0) {
        this.ⲆⵠⵠΔᐃⵠⲆ -= v3027;
      } else {
        var v2371 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
        if (v2371) {
          this.ⲆΔᐃⲆⵠ = 0;
          var v2372 = Math.max(Math.min(v384 - v2371.x, -2), 2 - v2813.w + v381);
          var v2373 = Math.max(Math.min(v386 - v2371.y, -2), 2 - v2813.ⵠⵠⲆ + v382);
          this.ⵠⲆΔⲆⵠ({
            x: v2372,
            y: v2373
          });
        } else {
          this.ⲆΔᐃⲆⵠ += v3027;
          if (this.ⲆΔᐃⲆⵠ > 3) {
            this.ⲆΔᐃⲆⵠ = 0;
            if (!v2814.reconnect.enabled) {
              v2816.ΔΔⵠⵠΔᐃᐃΔᐃ();
            }
          }
        }
      }
    };
    this.ᐃⲆⲆ.w = screen.width;
    this.ⲆΔΔΔⲆᐃΔᐃᐃ = 146;
    this.ⵠΔᐃΔⵠⵠⲆ = 175;
    this.ⲆᐃⵠⵠⵠΔΔⲆᐃ = 212;
    this.ⲆᐃⵠⵠⵠΔΔⲆᐃ.ᐃⲆⵠⲆᐃⵠⵠⲆⵠ = 8;
    this.ⲆⵠΔΔΔⵠⲆ = 47;
    this.ⵠᐃⵠᐃⲆⲆⲆⵠⲆ = 35;
    this.ⲆⵠΔΔΔⵠⲆ;
    this.ⵠᐃⵠᐃⲆⲆⲆⵠⲆ;
    var v2374 = 218;
    this.ᐃᐃΔⲆΔᐃⵠ = 152;
    this.ⲆᐃᐃⵠⵠᐃΔᐃⲆ = 139;
    this.ⵠⲆⵠᐃᐃΔⲆᐃΔ = 250;
    var v2375 = 247;
    if (v2375 >= 13) {
      v2375 = 91;
    }
    this.ΔⲆᐃⲆΔΔΔΔⵠ = 202;
    this.ⵠⲆⵠᐃᐃΔⲆᐃΔ;
    this.ΔⲆᐃⲆΔΔΔΔⵠ;
    this.ⲆⵠⵠⵠⲆᐃΔ = this.ᐃᐃΔⲆΔᐃⵠ;
    if (v2374 > 2) {
      v2374 = 93;
    }
    this.ᐃΔΔΔᐃᐃΔᐃᐃ = 10648;
    this.ᐃⵠΔᐃΔⲆᐃ = 26;
    this.ᐃⵠΔᐃΔⲆᐃ;
    this.ⵠΔᐃΔⵠⵠⲆ;
    this.ⵠⲆⵠΔⲆΔΔⲆΔ = vV242;
    this.ᐃⲆⲆ.ⵠⵠⲆ = screen.height;
    this.ᐃⲆⲆ.ΔᐃⲆΔΔⲆΔ = this.ᐃⲆⲆ.w;
    this.ᐃⲆⲆ.ΔⵠⵠⵠⵠΔΔ = this.ᐃⲆⲆ.ⵠⵠⲆ;
    this.ᐃⲆⲆ.rx = 0;
    this.ΔⲆΔⵠⵠᐃᐃⵠᐃ = 11;
    this.ΔⵠⵠⲆⵠᐃⵠᐃⲆ = false;
    this.ΔⵠⵠⵠⵠᐃⵠⵠⲆ = 162;
    this.ᐃΔᐃΔᐃⲆΔⲆΔ = 210;
    this.ⵠΔΔⵠⲆⵠⵠⵠᐃ = 97;
    var v2376 = 200;
    if (v2376 >= 13) {
      v2376 = 62;
    }
    this.ᐃΔᐃΔᐃⲆΔⲆΔ;
    this.ⵠΔΔⵠⲆⵠⵠⵠᐃ;
    this.ΔⲆΔⵠⵠᐃᐃⵠᐃ;
    this.ΔⵠⵠⵠⵠᐃⵠⵠⲆ;
    this.ᐃⲆⲆ.ry = 0;
    this.ᐃⲆⲆ.ⲆΔⲆⵠᐃⵠⲆⵠⵠ = 0;
    this.ᐃⲆⲆ.ᐃᐃᐃⲆⲆΔΔᐃⵠ = 0;
    this.ΔΔᐃΔⲆⲆⵠΔΔ = 16440;
    var v2377 = 85;
    function f455() {
      this.seed = 1;
      this.ⲆᐃⲆⵠᐃᐃᐃ = 2;
      this.ᐃΔⲆΔΔⲆⲆ = 3;
      this.ᐃⵠᐃᐃᐃΔΔᐃᐃ = 1;
      this.ΔΔⵠⵠⲆⲆᐃᐃΔ = 2;
      this.ᐃΔΔⲆᐃⵠⲆΔᐃ = 3;
      this.ⲆᐃⲆⲆⵠⲆΔ = function (p1504) {
        this.seed = 2 + Math.floor(Math.random() * 39879);
      };
      this.ᐃΔΔᐃⵠΔΔ = function (p1505) {
        this.ⲆᐃⲆⵠᐃᐃᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ΔⵠⲆΔⲆΔⵠ = function (p1506) {
        this.ᐃΔⲆΔΔⲆⲆ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ΔⲆⵠⵠⵠⲆⲆᐃᐃ = function (p1507) {
        this.ᐃⵠᐃᐃᐃΔΔᐃᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ᐃΔᐃⲆⵠⵠΔⲆⵠ = function (p1508) {
        this.ΔΔⵠⵠⲆⲆᐃᐃΔ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ΔⲆΔⲆᐃΔΔⵠⲆ = function (p1509) {
        this.ᐃΔΔⲆᐃⵠⲆΔᐃ = 2 + Math.floor(Math.random() * 39879);
      };
      this.ΔᐃᐃᐃΔᐃᐃ = function (p1510, p1511, p1512, p1513, p1514, p1515, p1516) {
        for (var v2378 = 1; p1516 > v2378;) {
          var v2379 = p1512 * v2378 % ⲆᐃⵠΔⲆΔᐃ;
          var v2380 = ⵠⵠⵠⵠᐃⲆΔ[v2379];
          if (v2380 < 0.1) {
            v2381 += 50;
            v2378 += 50;
          } else {
            var v2381 = Math.floor(p1513 * v2380 + p1514);
            if (v2378 > p1515 && p1516 > v2378) {
              var v2382 = Math.random() > 0.5 ? v3027 * -10 : v3027 * 10;
              var v2383 = v2381 * p1511;
              this.ⲆΔⲆᐃΔⲆᐃ[v2379] = Math.max(-25, Math.min(25, this.ⲆΔⲆᐃΔⲆᐃ[v2379] + v2382));
              this.ⵠⲆⵠᐃⵠᐃⲆ[v2379] = Math.max(-8, Math.min(8, this.ⵠⲆⵠᐃⵠᐃⲆ[v2379] + v2382));
              if (v2383 > 0) {
                v380.beginPath();
                v380.arc(v2378 + v2814.ᐃⲆⲆ.x + this.ⵠⲆⵠᐃⵠᐃⲆ[v2379], p1510 + this.ⲆΔⲆᐃΔⲆᐃ[v2379] - 20, v2383, 0, Math.PI * 2);
                if (v2813.transition) {
                  var v2384 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
                  v380.fillStyle = f402(83, 156, 160, 236, 247, 249, v2384);
                } else {
                  v380.fillStyle = v554.ⵠⲆᐃΔᐃⵠⵠ[v2813.time];
                }
                v380.fill();
              }
            }
            v2378 += v2381 * 2;
          }
        }
      };
      this.ⲆⵠⵠⲆᐃⲆⲆ = function (p1517, p1518, p1519, p1520, p1521, p1522, p1523) {
        for (var v2385 = 1; v2385 < p1523;) {
          var v2386 = p1519 * v2385 % ⲆᐃⵠΔⲆΔᐃ;
          var v2387 = ⵠⵠⵠⵠᐃⲆΔ[v2386];
          if (v2387 < 0.1) {
            v2388 += 50;
            v2385 += 50;
          } else {
            var v2388 = Math.floor(p1520 * v2387 + p1521);
            if (v2385 > p1522 && v2385 < p1523) {
              var v2389 = Math.random() > 0.5 ? v3027 * -10 : v3027 * 10;
              var v2390 = v2388 * p1518;
              this.ᐃΔΔⵠⲆ[v2386] = Math.max(-25, Math.min(25, this.ᐃΔΔⵠⲆ[v2386] + v2389));
              this.ⲆⲆⲆⲆΔ[v2386] = Math.max(-8, Math.min(8, this.ⲆⲆⲆⲆΔ[v2386] + v2389));
              if (v2390 > 0) {
                v380.beginPath();
                v380.arc(p1517 + this.ᐃΔΔⵠⲆ[v2386] - 20, v2385 + v2814.ᐃⲆⲆ.y + this.ⲆⲆⲆⲆΔ[v2386], v2390, 0, Math.PI * 2);
                if (v2813.transition) {
                  var v2391 = v2813.time ? 1 - v2813.ⵠⵠΔᐃ.ⲆⵠΔ : v2813.ⵠⵠΔᐃ.ⲆⵠΔ;
                  v380.fillStyle = f402(83, 156, 160, 236, 247, 249, v2391);
                } else {
                  v380.fillStyle = v554.ⵠⲆᐃΔᐃⵠⵠ[v2813.time];
                }
                v380.fill();
              }
            }
            v2385 += v2388 * 2;
          }
        }
      };
      this.ΔⲆⲆⵠᐃᐃⵠΔΔ = function (p1524, p1525, p1526, p1527, p1528, p1529) {
        var v2392;
        p1528 -= 30;
        p1529 += 30;
        if ((v2392 = -(p1526 - 0 - p1527 - 2) / 200) === 0) {
          this.ΔⵠⲆΔⲆΔⵠ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2392);
        this.ΔᐃᐃᐃΔᐃᐃ(p1526, v2392, this.ᐃΔⲆΔΔⲆⲆ, 18, 16, p1528, p1529);
        v380.globalAlpha = 1;
        if ((v2392 = -(p1524 - 250 - p1527 + 500) / 150) === 0) {
          this.ⲆᐃⲆⲆⵠⲆΔ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2392);
        this.ΔᐃᐃᐃΔᐃᐃ(p1524, v2392, this.seed, 12, 10, p1528, p1529);
        v380.globalAlpha = 1;
        if (p1525 !== -1) {
          if ((v2392 = -(p1525 - 350 - p1527 + 698) / 100) <= 0.01) {
            this.ᐃΔΔᐃⵠΔΔ();
          }
          v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2392);
          this.ΔᐃᐃᐃΔᐃᐃ(p1525, v2392, this.ⲆᐃⲆⵠᐃᐃᐃ, 6, 6, p1528, p1529);
          v380.globalAlpha = 1;
        }
      };
      this.ⵠⲆⲆΔΔᐃⲆᐃᐃ = function (p1530, p1531, p1532, p1533, p1534, p1535) {
        p1534 -= 30;
        p1535 += 30;
        if ((v2393 = -(-p1532 + 0 + p1533 + 2) / 200) === 0) {
          this.ΔⵠⲆΔⲆΔⵠ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2393);
        this.ΔᐃᐃᐃΔᐃᐃ(p1532, v2393, this.ᐃΔⲆΔΔⲆⲆ, 18, 16, p1534, p1535);
        v380.globalAlpha = 1;
        var v2393 = -(-p1530 + 250 + p1533) / 150;
        if (v2393 === 0) {
          this.ⲆᐃⲆⲆⵠⲆΔ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2393);
        this.ΔᐃᐃᐃΔᐃᐃ(p1530, v2393, this.seed, 12, 10, p1534, p1535);
        v380.globalAlpha = 1;
        if (p1531 !== -1) {
          if ((v2393 = -(-p1531 + 350 + p1533) / 100) <= 0.01) {
            this.ᐃΔΔᐃⵠΔΔ();
          }
          v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2393);
          this.ΔᐃᐃᐃΔᐃᐃ(p1531, v2393, this.ⲆᐃⲆⵠᐃᐃᐃ, 6, 6, p1534, p1535);
          v380.globalAlpha = 1;
        }
      };
      this.ᐃⲆΔΔⵠΔᐃΔⲆ = function (p1536, p1537, p1538, p1539, p1540, p1541) {
        p1540 -= 30;
        p1541 += 30;
        if ((v2394 = -(-p1538 + 0 + p1539 + 2) / 200) === 0) {
          this.ΔⵠⲆΔⲆΔⵠ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2394);
        this.ⲆⵠⵠⲆᐃⲆⲆ(p1538, v2394, this.ᐃΔⲆΔΔⲆⲆ, 18, 16, p1540, p1541);
        v380.globalAlpha = 1;
        var v2394 = -(-p1536 + 250 + p1539) / 150;
        if (v2394 === 0) {
          this.ⲆᐃⲆⲆⵠⲆΔ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2394);
        this.ⲆⵠⵠⲆᐃⲆⲆ(p1536, v2394, this.seed, 12, 10, p1540, p1541);
        v380.globalAlpha = 1;
        if (p1537 !== -1) {
          if ((v2394 = -(-p1537 + 350 + p1539) / 100) <= 0.01) {
            this.ᐃΔΔᐃⵠΔΔ();
          }
          v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2394);
          this.ⲆⵠⵠⲆᐃⲆⲆ(p1537, v2394, this.ⲆᐃⲆⵠᐃᐃᐃ, 6, 6, p1540, p1541);
          v380.globalAlpha = 1;
        }
      };
      this.ⲆᐃⲆᐃⲆΔΔᐃᐃ = function (p1542, p1543, p1544, p1545, p1546, p1547) {
        var v2395;
        p1546 -= 30;
        p1547 += 30;
        if ((v2395 = -(p1544 - 0 - p1545 - 2) / 200) === 0) {
          this.ΔⵠⲆΔⲆΔⵠ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2395);
        this.ⲆⵠⵠⲆᐃⲆⲆ(p1544, v2395, this.ᐃΔⲆΔΔⲆⲆ, 18, 16, p1546, p1547);
        v380.globalAlpha = 1;
        if ((v2395 = -(p1542 - 250 - p1545 + 500) / 150) === 0) {
          this.ⲆᐃⲆⲆⵠⲆΔ();
        }
        v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2395);
        this.ⲆⵠⵠⲆᐃⲆⲆ(p1542, v2395, this.seed, 12, 10, p1546, p1547);
        v380.globalAlpha = 1;
        if (p1543 !== -1) {
          if ((v2395 = -(p1543 - 350 - p1545 + 698) / 100) <= 0.01) {
            this.ᐃΔΔᐃⵠΔΔ();
          }
          v380.globalAlpha = ⲆΔΔ.ᐃⲆᐃᐃΔ(v2395);
          this.ⲆⵠⵠⲆᐃⲆⲆ(p1543, v2395, this.ⲆᐃⲆⵠᐃᐃᐃ, 6, 6, p1546, p1547);
          v380.globalAlpha = 1;
        }
      };
      this.w1 = {
        r: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ΔⲆⵠⲆⵠⲆᐃ, 0, 10, 0, 0, 200),
        ⲆⵠΔΔ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ⲆⲆⵠⵠⵠᐃᐃ, 0, 10, 200, 200, 0)
      };
      this.w2 = {
        r: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ΔⵠⵠΔΔΔⵠ, 0, 10, 0, 0, 150),
        ⲆⵠΔΔ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃⲆᐃᐃΔ, 0, 10, 150, 150, 0)
      };
      this.w3 = {
        r: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆᐃⲆᐃⵠ, 0, 10, 0, 0, 100),
        ⲆⵠΔΔ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃⲆᐃᐃΔ, 0, 10, 100, 100, 0)
      };
      this.ⵠⵠⲆⲆΔᐃΔⵠΔ = function (p1548) {
        if (p1548.r.ⲆⲆᐃᐃⵠ === p1548.r.x) {
          if (p1548.ⲆⵠΔΔ.ⲆⲆᐃᐃⵠ === p1548.ⲆⵠΔΔ.x) {
            return p1548.r;
          } else {
            return p1548.ⲆⵠΔΔ;
          }
        } else {
          return p1548.r;
        }
      };
      this.Ⲇⵠⵠ = function (p1549) {
        var v2396;
        if (p1549.r.x === p1549.r.ⲆⲆᐃᐃⵠ) {
          if (p1549.ⲆⵠΔΔ.ⲆⲆᐃᐃⵠ === p1549.ⲆⵠΔΔ.x) {
            p1549.r.ΔⲆᐃᐃΔΔᐃ();
            p1549.ⲆⵠΔΔ.ΔⲆᐃᐃΔΔᐃ();
            v2396 = p1549.r;
          } else {
            v2396 = p1549.ⲆⵠΔΔ;
          }
        } else {
          v2396 = p1549.r;
        }
        v2396.ⵠⲆΔⲆⵠ(v2396.ⲆⲆᐃᐃⵠ);
        return v2396;
      };
      this.ᐃΔΔⵠⲆ = [];
      this.ⲆⲆⲆⲆΔ = [];
      this.ⲆΔⲆᐃΔⲆᐃ = [];
      this.ⵠⲆⵠᐃⵠᐃⲆ = [];
      this.ⵠΔⵠⲆⲆ = function () {
        for (var v2397 = 0; ⲆᐃⵠΔⲆΔᐃ > v2397; v2397++) {
          this.ᐃΔΔⵠⲆ[v2397] = Math.floor(ⵠⵠⵠⵠᐃⲆΔ[v2397] * 25);
          this.ⲆⲆⲆⲆΔ[v2397] = Math.floor(ⵠⵠⵠⵠᐃⲆΔ[v2397] * 8);
          this.ⲆΔⲆᐃΔⲆᐃ[v2397] = Math.floor(ⵠⵠⵠⵠᐃⲆΔ[v2397] * 25);
          this.ⵠⲆⵠᐃⵠᐃⲆ[v2397] = Math.floor(ⵠⵠⵠⵠᐃⲆΔ[v2397] * 8);
        }
        this.w1.r.x = this.w1.r.ⲆⲆᐃᐃⵠ;
        this.w2.r.ⲆᐃⲆΔᐃ = 3.5;
        this.w3.r.ⲆᐃⲆΔᐃ = 2;
      };
      this.ⵠΔⵠⲆⲆ();
    }
    if (v2377 == 10) {
      v2377 = 252;
    }
    this.ᐃⲆⲆ.ᐃⲆⲆᐃⲆ = function (p1550, p1551) {
      this.x = -Math.min(Math.max(-v2813.ⵠⵠΔⲆΔΔⲆ * 2, p1550 - v2813.ⵠⵠΔⲆΔΔⲆ - this.ΔᐃⲆΔΔⲆΔ / 2), v2813.w - this.ΔᐃⲆΔΔⲆΔ);
      this.y = -Math.min(Math.max(-v2813.ⲆⵠΔΔⲆⵠΔ * 2, p1551 - (v2813.ⲆⵠΔΔⲆⵠΔ + this.ΔⵠⵠⵠⵠΔΔ) / 2), v2813.ⵠⵠⲆ - this.ΔⵠⵠⵠⵠΔΔ + v2813.ⲆⵠΔΔⲆⵠΔ);
      this.ⲆⲆᐃᐃⵠ = this.x;
      this.ΔⲆⵠΔᐃⵠⲆ = this.y;
    };
    this.ΔⲆᐃᐃⵠⵠᐃΔᐃ = {};
    this.ΔⲆᐃᐃⵠⵠᐃΔᐃ.ᐃΔⲆᐃⲆΔΔᐃΔ = 4;
    this.control = {
      angle: 0,
      timeout: 0,
      ΔᐃⵠΔᐃⵠⵠ: 0,
      Ⲇⵠⵠᐃ: 0,
      attack: 0,
      ᐃΔⵠ: function () {
        var v2398 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
        if (v2398) {
          var v2399 = {
            x: v2814.ᐃⲆⲆ.x + v2398.x,
            y: v2814.ᐃⲆⲆ.y + v2398.y
          };
        } else {
          v2399 = v387;
        }
        var v2400 = ⲆΔΔ.ᐃⲆⵠΔᐃᐃΔ(v3026.ⵠᐃΔⵠ, v2399);
        var vVVVVV21222 = vVVVV21222;
        this.Ⲇⵠⵠᐃ += v3027;
        if (!v3026.state) {
          if (v2398 && !(v2398.action & 16) && this.Ⲇⵠⵠᐃ > 0.2) {
            this.attack = 1;
            vVVVVV21222 = v24;
            this.Ⲇⵠⵠᐃ = 0;
            v2816.ⲆⵠⵠᐃᐃΔⲆᐃΔ(v2400);
          }
        }
        if (v2398) {
          v2398.angle = v2400;
          v2398.ⵠⲆΔⲆΔⵠⵠ = v2400;
        }
        if (!vVVVVV21222) {
          this.timeout += v3027;
          if (this.timeout > 0.2) {
            this.timeout = 0;
            if (Math.abs(this.angle - v2400) > 0.005) {
              v2816.ⲆⲆᐃᐃᐃⵠΔⵠΔ(v2400);
              this.angle = v2400;
            }
          }
        }
        if (!v2814.ⲆⵠᐃᐃΔ.open && !v2814.ⵠⵠⵠᐃᐃ.open) {
          var v2401 = 0;
          if (v3022.ΔⵠΔⵠⲆΔΔ()) {
            v2401 |= 1;
          }
          if (v3022.ᐃᐃᐃΔᐃᐃᐃ()) {
            v2401 |= 2;
          }
          if (v3022.ᐃⵠᐃⲆⲆⵠΔ()) {
            v2401 |= 4;
          }
          if (v3022.ⵠⲆⵠᐃⵠⲆⲆ()) {
            v2401 |= 8;
          }
          if (this.ΔᐃⵠΔᐃⵠⵠ != v2401) {
            v2816.ᐃⲆⵠᐃⲆΔΔⲆⲆ(v2401);
          }
          this.ΔᐃⵠΔᐃⵠⵠ = v2401;
        }
      }
    };
    this.ⲆⵠⵠΔ = {
      c: 1,
      ⲆⵠΔΔ: 1,
      ⵠⵠⲆ: 1,
      Ⲇⵠⵠ: 1,
      ΔⲆⲆ: 1,
      Δⵠⵠᐃⵠᐃⵠ: 1,
      ⵠᐃΔⲆᐃⵠⵠ: new ⲆΔΔ.ⵠᐃΔΔ(vV243, 0, 1, 0, 3, 3),
      ΔⲆΔⲆΔⵠᐃ: new ⲆΔΔ.ⵠᐃΔΔ(true, 0, 1, 0, 2, 2),
      ΔᐃⲆᐃΔᐃΔ: new ⲆΔΔ.ⵠᐃΔΔ(vVV243, 0, 1, 0, 3, 3),
      ΔᐃⲆⵠⲆᐃΔ: new ⲆΔΔ.ⵠᐃΔΔ(vVVV243, 0, 1, 0, 3, 3),
      ᐃᐃⲆⵠⲆᐃΔ: new ⲆΔΔ.ⵠᐃΔΔ(true, 0, 1, 0, 3, 3),
      ⲆΔⲆⲆⲆᐃᐃ: new ⲆΔΔ.ⵠᐃΔΔ(true, 0, 1, 0, 3, 3),
      ΔᐃᐃⲆⵠ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 1, 0, 0, 1),
      ᐃΔⲆⵠⲆ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 1, 0, 0, 1),
      ΔᐃⵠⲆⲆΔⲆ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 1, 0, 0, 1),
      ΔᐃⲆΔᐃᐃΔ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 1, 0, 0, 1),
      ⲆⵠⵠⵠΔⲆΔ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 1, 0, 0, 1),
      ΔΔⵠᐃᐃ: new ⲆΔΔ.ᐃᐃΔΔⵠ(ⲆΔΔ.ᐃΔⲆΔΔⲆΔ, 0, 1, 0, 0, 1),
      ᐃΔⵠ: function () {
        this.ⵠᐃΔⲆᐃⵠⵠ.ᐃΔⵠ();
        this.ΔⲆΔⲆΔⵠᐃ.ᐃΔⵠ();
        this.ΔᐃⲆᐃΔᐃΔ.ᐃΔⵠ();
        this.ΔᐃⲆⵠⲆᐃΔ.ᐃΔⵠ();
        this.ᐃᐃⲆⵠⲆᐃΔ.ᐃΔⵠ();
        this.ⲆΔⲆⲆⲆᐃᐃ.ᐃΔⵠ();
        this.ΔᐃᐃⲆⵠ.ⵠⲆΔⲆⵠ(this.c);
        this.ᐃΔⲆⵠⲆ.ⵠⲆΔⲆⵠ(this.ⲆⵠΔΔ);
        this.ΔᐃⵠⲆⲆΔⲆ.ⵠⲆΔⲆⵠ(this.ⵠⵠⲆ);
        this.ΔᐃⲆΔᐃᐃΔ.ⵠⲆΔⲆⵠ(this.Ⲇⵠⵠ);
        this.ⲆⵠⵠⵠΔⲆΔ.ⵠⲆΔⲆⵠ(this.ΔⲆⲆ);
        this.ΔΔⵠᐃᐃ.ⵠⲆΔⲆⵠ(this.Δⵠⵠᐃⵠᐃⵠ);
      }
    };
    this.ΔᐃⲆⲆΔⲆᐃ = vVVVV21;
    this.ⵠⵠⵠⲆᐃᐃΔ = vVV2122;
    this.ᐃΔᐃΔᐃ = vVVV2132;
    this.ᐃᐃΔΔΔⲆᐃ = false;
    this.ⲆⲆᐃΔ = {
      max: 10,
      ⵠⲆᐃΔᐃⵠᐃ: 0,
      ⵠΔΔΔⲆ: 0,
      ᐃᐃᐃΔ: [],
      ⵠΔⵠⵠⵠ: [],
      ΔⲆⵠⵠᐃᐃᐃ: function (p1552, p1553) {
        if (p1552 === 1) {
          this.ⵠΔΔΔⲆ = 6;
        }
        this.ⵠⲆᐃΔᐃⵠᐃ += p1553;
        this.max = 10 + this.ⵠⲆᐃΔᐃⵠᐃ + this.ⵠΔΔΔⲆ;
      },
      ⵠᐃΔᐃΔΔⵠ: {
        item: -1,
        ⵠΔ: null,
        ⲆⲆᐃᐃΔΔⵠ: 0,
        ⲆⲆᐃᐃⲆᐃᐃ: 0,
        ⵠⲆⵠΔᐃ: -1,
        ΔⲆⲆᐃⲆ: -1,
        ⲆⲆⵠⵠΔ: function (p1554) {
          if (!!this.ⲆⲆᐃᐃΔΔⵠ && (p1554.x !== this.ⵠⲆⵠΔᐃ || p1554.y !== this.ΔⲆⲆᐃⲆ)) {
            this.ⲆⲆᐃᐃⲆᐃᐃ = 1;
          }
        },
        start: function (p1555, p1556) {
          this.ⵠⲆⵠΔᐃ = p1556.x;
          this.ΔⲆⲆᐃⲆ = p1556.y;
          this.item = p1555;
          this.ⵠΔ = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ[p1555].info.ⵠΔ[2];
          this.ⲆⲆᐃᐃΔΔⵠ = 1;
        },
        stop: function () {
          this.ⲆⲆᐃᐃΔΔⵠ = 0;
          this.ⲆⲆᐃᐃⲆᐃᐃ = 0;
          this.ⵠⲆⵠΔᐃ = -1;
          this.ΔⲆⲆᐃⲆ = -1;
        },
        release: function () {
          var v2402 = -1;
          var v2403 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ;
          var v2404 = 0;
          if (this.ⲆⲆᐃᐃΔΔⵠ && this.ⲆⲆᐃᐃⲆᐃᐃ) {
            for (var v2405 = 0; v2405 < v2403.length; v2405++) {
              if (v2403[v2405].info.state === v2165) {
                v2402 = v2405;
                break;
              }
            }
            if (v2402 !== -1 && v2402 !== this.item && v2403[this.item]) {
              v2404 = 1;
              var v2406 = v2403[v2402];
              v2403[v2402] = v2403[this.item];
              v2403[this.item] = v2406;
              v2993.ⲆⲆΔⲆⵠⲆΔ();
            }
          }
          this.stop();
          return v2404;
        },
        ΔⵠⵠΔ: function (p1557, p1558) {
          if (this.ⲆⲆᐃᐃΔΔⵠ && this.ⲆⲆᐃᐃⲆᐃᐃ) {
            f294(v380, this.ⵠΔ, Math.floor(p1557 - this.ⵠΔ.width / 2), Math.floor(p1558 - this.ⵠΔ.height / 2));
          }
        }
      },
      ΔⲆᐃⲆⵠᐃⲆᐃᐃ: function (p1559) {
        for (v2453 = 0; v2453 < p1559.length; v2453++) {
          if (this.ᐃᐃᐃΔ[p1559[v2453][0]] == p1559[v2453][1]) {
            return vVVVV242;
          }
        }
        return false;
      },
      ⲆⵠⲆᐃⵠ: function (p1560) {
        for (var v2407 = 0; v2407 < this.ⵠΔⵠⵠⵠ.length; v2407++) {
          if (this.ⵠΔⵠⵠⵠ[v2407].id == p1560) {
            return v2407;
          }
        }
        return -1;
      },
      ᐃΔⵠΔᐃⲆΔ: function (p1561, p1562) {
        this.ᐃᐃᐃΔ[p1561] = 0;
        this.ⵠΔⵠⵠⵠ.splice(p1562, 1);
        v2993.ⲆⲆΔⲆⵠⲆΔ();
      },
      ⲆᐃᐃᐃⵠΔᐃ: function (p1563, p1564, p1565) {
        ᐃΔⵠ = true;
        this.ᐃᐃᐃΔ[p1563] = Math.max(0, this.ᐃᐃᐃΔ[p1563] - p1564);
        if (!this.ᐃᐃᐃΔ[p1563] && p1565 >= 0) {
          this.ᐃΔⵠΔᐃⲆΔ(p1563, p1565);
        }
      }
    };
    this.ΔΔⲆⵠᐃ = {
      enabled: false,
      translate: {
        x: 0,
        y: 0
      },
      ⲆΔᐃⲆⲆΔⵠ: function () {
        if (v2813.mode == 1 && !v2814.ⵠⵠⵠⲆᐃᐃΔ) {
          v2814.ΔΔⲆⵠᐃ.enabled = !v2814.ΔΔⲆⵠᐃ.enabled;
          if (v2814.ΔΔⲆⵠᐃ.enabled) {
            v2993.options.ΔⵠΔΔᐃΔⵠ.display = "inline-block";
          } else {
            v2993.options.ΔⵠΔΔᐃΔⵠ.display = "none";
          }
        }
      }
    };
    v2993.options.ΔⵠΔΔᐃΔⵠ.display = "none";
    this.ⲆⲆᐃⵠᐃ = {
      enabled: vVVV2132,
      translate: {
        y: 0,
        x: 0
      },
      ⲆΔᐃⲆⵠ: 0,
      ⲆΔᐃⲆⲆΔⵠ: function () {
        v2814.ⲆⲆᐃⵠᐃ.enabled = !v2814.ⲆⲆᐃⵠᐃ.enabled;
        if (v2814.ⲆⲆᐃⵠᐃ.enabled) {
          v2993.options.ⵠΔᐃⲆᐃⵠⵠ.display = "inline-block";
        } else {
          v2993.options.ⵠΔᐃⲆᐃⵠⵠ.display = "none";
        }
      },
      ᐃΔⵠ: function () {
        if (!!this.enabled && !(v2814.ⲆΔⵠΔ.id >= 0) && !v2993.ⲆΔⵠⲆ.open) {
          this.ⲆΔᐃⲆⵠ += v3027;
          if (this.ⲆΔᐃⲆⵠ > 2) {
            this.ⲆΔᐃⲆⵠ = 0;
            if (v2814.ⲆⵠⵠΔ.ⵠⵠⲆ < 0.35) {
              if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[110]) {
                v2816.ᐃᐃΔⵠⲆ(110, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(110));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[192]) {
                v2816.ᐃᐃΔⵠⲆ(192, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(192));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[196]) {
                v2816.ᐃᐃΔⵠⲆ(196, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(196));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[189]) {
                v2816.ᐃᐃΔⵠⲆ(189, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(189));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[207]) {
                v2816.ᐃᐃΔⵠⲆ(207, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(207));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[205]) {
                v2816.ᐃᐃΔⵠⲆ(205, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(205));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[209]) {
                v2816.ᐃᐃΔⵠⲆ(209, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(209));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[143]) {
                v2816.ᐃᐃΔⵠⲆ(143, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(143));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[117]) {
                v2816.ᐃᐃΔⵠⲆ(117, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(117));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[138]) {
                v2816.ᐃᐃΔⵠⲆ(138, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(138));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[133]) {
                v2816.ᐃᐃΔⵠⲆ(133, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(133));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[145]) {
                v2816.ᐃᐃΔⵠⲆ(145, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(145));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[136]) {
                v2816.ᐃᐃΔⵠⲆ(136, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(136));
              } else if (v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[197]) {
                v2816.ᐃᐃΔⵠⲆ(197, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(197));
              }
            } else if (v2814.ⲆⵠⵠΔ.Ⲇⵠⵠ < 0.35 && v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[127]) {
              v2816.ᐃᐃΔⵠⲆ(127, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(127));
            }
          }
        }
      }
    };
    v2993.options.ⵠΔᐃⲆᐃⵠⵠ.display = "none";
    this.ⲆΔⵠΔ = {
      id: -1,
      ⵠᐃΔᐃ: -1,
      timeout: new ⲆΔΔ.ⵠᐃΔΔ(vVVVV21222, 0, 1, 0, 1, 1),
      ᐃⲆⲆΔᐃ: vVVVV212,
      ⵠΔΔᐃ: -1,
      mode: 0,
      label: [],
      ΔᐃⵠΔⵠ: [],
      ⵠⲆᐃΔⵠ: v21,
      ΔⲆᐃⵠⲆ: vVVV21222,
      ΔΔⲆᐃⵠⲆⲆ: vVVV21,
      ⵠⵠᐃᐃⵠ: false,
      ᐃΔΔⵠᐃᐃΔᐃᐃ: function () {
        this.mode = this.mode === 0 ? 1 : 0;
      },
      ΔΔⲆⵠⵠⵠᐃΔΔ: function (p1566) {
        this.ⵠⲆᐃΔⵠ = p1566;
        var v2408 = v2993.ⲆΔⵠⲆ;
        if (v2408.open) {
          v2408.ⵠⲆΔⲆᐃⵠⲆ(v2408.button);
        }
        this.ᐃΔⵠ();
      },
      ΔΔᐃⵠⲆᐃᐃΔΔ: function (p1567) {
        var v2409 = v669[p1567];
        this.id = p1567;
        this.ᐃⲆⲆΔᐃ = vVVVV242;
        v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
        this.timeout.ⵠΔΔΔᐃΔⲆ = v2409.time * 8;
        this.ⵠᐃΔᐃ = v2409.ⵠᐃΔᐃ;
      },
      ΔᐃΔⵠΔᐃⲆⲆΔ: function (p1568) {
        var v2410 = v669[p1568];
        this.id = p1568;
        this.ᐃⲆⲆΔᐃ = true;
        var v2411 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
        if (v2411 && v2411.right == 28) {
          this.timeout.ⵠΔΔΔᐃΔⲆ = v2410.time * 3;
        } else {
          this.timeout.ⵠΔΔΔᐃΔⲆ = v2410.time;
        }
        this.ⵠᐃΔᐃ = v2410.ⵠᐃΔᐃ;
        for (var v2412 = 0; v2412 < v2410.r.length; v2412++) {
          var v2413 = v2410.r[v2412];
          v2814.ⲆⲆᐃΔ.ⲆᐃᐃᐃⵠΔᐃ(v2413[0], v2413[1], v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(v2413[0]));
        }
        v2993.ⲆⲆΔⲆⵠⲆΔ();
      },
      ᐃΔⵠ: function () {
        this.ΔᐃⵠΔⵠ = [];
        if (v2993.ⵠⲆΔⲆⲆ.ⲆΔⵠΔ === 1) {
          v2993.ⵠⲆΔⲆⲆ.display = 0;
        }
        for (var v2414 in v669) {
          var v2415 = v669[v2414];
          var vVVV245 = vVV245;
          if (v2415.r) {
            for (var v2416 = 0; v2416 < v2415.r.length; v2416++) {
              if (v2814.ⲆⲆᐃΔ.max >= 16 && v2415.id === 100) {
                vVVV245 = false;
                break;
              }
              if (v2415.w > this.ⵠⲆᐃΔⵠ || v2415.f > this.ΔⲆᐃⵠⲆ || v2415.ΔⲆⲆ > this.ΔΔⲆᐃⵠⲆⲆ || v2415.e > this.ⵠⵠᐃᐃⵠ) {
                vVVV245 = v21;
                break;
              }
              var v2417 = v2415.r[v2416];
              if (!v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[v2417[0]] || v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[v2417[0]] < v2417[1]) {
                vVVV245 = vVVV213;
                break;
              }
            }
            if (vVVV245) {
              this.ΔᐃⵠΔⵠ.push(v2993.ΔⲆΔ[v2415.id]);
            }
          }
        }
        v2993.ⲆΔᐃⲆΔⲆᐃ();
        v2993.ⲆΔⲆΔⲆⵠⵠ();
        v2993.ΔⲆⵠΔᐃᐃΔ();
        v2993.ΔᐃᐃⲆΔᐃᐃ();
        v2993.ⵠⲆᐃΔⵠⲆᐃ();
        v2993.ΔΔⵠⲆΔΔΔ();
        v2993.sign.ΔⲆᐃΔⲆᐃⵠ();
      },
      ΔⲆᐃᐃΔΔᐃ: function () {
        this.id = -1;
        this.ᐃⲆⲆΔᐃ = false;
        this.timeout.ⲆⵠΔ = 0;
        this.timeout.ΔⲆⲆ = false;
        this.ᐃΔⵠ();
      }
    };
    this.ᐃΔᐃΔⵠᐃᐃ = {
      message: vVVUndefined273,
      ΔⵠⵠΔ: f387
    };
    this.alert = {
      timeout: new ⲆΔΔ.ⵠᐃΔΔ(vVVV21222, 1, 1, 0, 4, 0.3),
      text: "",
      label: null,
      ΔⵠⵠΔ: f386,
      list: []
    };
    this.ⵠΔⲆΔⲆ = {
      ⵠⲆ: document.createElement("canvas"),
      ᐃΔⵠᐃΔ: [],
      ᐃΔⵠ: vVV24,
      translate: {
        y: 0,
        x: 0
      },
      sort: function () {
        var v2418 = [];
        for (var v2419 = v2813.ᐃΔΔᐃ, v2420 = 0; v2420 < v2419.length; v2420++) {
          if (v2419[v2420].ᐃⲆᐃⲆⵠ) {
            v2418.push({
              id: v2420,
              ΔⵠⵠⲆ: v2419[v2420].ⵠⵠᐃΔᐃ
            });
          }
        }
        v2418.sort(function (p1569, p1570) {
          return p1570.ΔⵠⵠⲆ - p1569.ΔⵠⵠⲆ;
        });
        this.ᐃΔⵠᐃΔ = [];
        for (v2420 = 0; v2420 < v2418.length && v2420 < 10; v2420++) {
          this.ᐃΔⵠᐃΔ.push(v2418[v2420].id);
        }
        this.ᐃΔⵠ = v24;
      },
      ⵠΔⵠⲆⲆ: function (p1571) {
        for (var v2421 = v2813.ᐃΔΔᐃ, v2422 = 0; v2422 < v2421.length; v2422++) {
          v2421[v2422].ⵠⵠᐃΔᐃ = 0;
        }
        v2421[v2814.id].ⵠⵠᐃΔᐃ = ⲆΔΔ.ΔⵠΔᐃᐃⵠⵠ(p1571[1]);
        this.ᐃΔⵠᐃΔ = [];
        for (v2422 = 2; v2422 < p1571.length; v2422 += 2) {
          this.ᐃΔⵠᐃΔ.push(p1571[v2422]);
          v2421[p1571[v2422]].ⵠⵠᐃΔᐃ = ⲆΔΔ.ΔⵠΔᐃᐃⵠⵠ(p1571[v2422 + 1]);
        }
        this.ᐃΔⵠ = true;
      }
    };
    this.ⵠΔⲆΔⲆ.ⵠⲆ.width = v393 * 180;
    this.ⵠΔⲆΔⲆ.ⵠⲆ.height = v393 * 300;
    this.ⵠΔⲆΔⲆ.ᐃ = this.ⵠΔⲆΔⲆ.ⵠⲆ.getContext("2d");
    this.ⵠⵠⵠᐃᐃ = {
      open: vVV21,
      input: document.getElementById("commandInput"),
      ΔⲆᐃᐃⲆΔⲆ: document.getElementById("commandsBox"),
      style: document.getElementById("commandMainBox").style,
      ᐃⵠΔⲆΔⲆᐃⵠⲆ: function (p1572) {
        this.ΔⲆᐃᐃⲆΔⲆ.innerHTML += p1572;
      },
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v381 / 2 - 300) + "px";
        this.style.top = Math.floor(v382 / 2 - 250) + "px";
      },
      ᐃΔⵠΔⵠᐃᐃΔⵠ: function () {
        this.ΔⲆᐃᐃⲆΔⲆ.innerHTML = "";
      },
      ΔⵠⵠΔΔ: function () {
        this.open = false;
        this.style.display = "none";
      },
      ᐃⲆᐃᐃⵠ: function (p1573) {
        var v2423 = "<table class=\"tableList\">";
        for (var v2424 = 0; v2424 < p1573.length; v2424++) {
          if (v2424 % 3 === 0) {
            v2423 += "<tr>";
          }
          v2423 += "<td class=\"tableList\">" + p1573[v2424] + "</td>";
          if ((v2424 + 1) % 3 === 0 || v2424 + 1 === p1573.length) {
            v2423 += "</tr>";
          }
        }
        return v2423 += "</table>";
      },
      ᐃΔΔⲆⲆ: function (p1574, p1575, p1576, p1577) {
        var v2425 = "<div class=commandWritten>" + (p1574 = p1574 || "");
        v2425 += (p1575 = p1575 || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>";
        v2425 += (p1576 = p1576 || "") + "</div>" + (p1577 = p1577 || "") + "</div>";
        this.ᐃⵠΔⲆΔⲆᐃⵠⲆ(v2425);
        this.ⵠⲆⲆⲆΔⲆⵠⵠᐃ();
      },
      ⵠⲆⲆⲆΔⲆⵠⵠᐃ: function () {
        this.ΔⲆᐃᐃⲆΔⲆ.scrollTop = this.ΔⲆᐃᐃⲆΔⲆ.scrollHeight;
      },
      ᐃΔᐃⵠⵠⲆⵠ: function (p1578) {
        switch (p1578) {
          case "clean":
            this.ᐃΔⵠΔⵠᐃᐃΔⵠ();
            return true;
          case "list":
            var v2426 = "";
            const v2427 = vWindow.document.createElement("div");
            for (var v2428 = v2813.ᐃΔΔᐃ, v2429 = 0; v2429 < v2428.length; v2429++) {
              var v2430 = v2428[v2429];
              if (v2430.ᐃⲆᐃⲆⵠ) {
                v2427.innerText = v2430.ᐃΔᐃⲆⵠ;
                v2426 += v2427.innerHTML + " <span style=\"color:green\">#" + v2429 + "</span><br />";
              }
            }
            this.ᐃΔΔⲆⲆ("list", 1, "List all connected players", v2426);
            return true;
          case "weapon-list":
            this.ᐃΔΔⲆⲆ("Weapons", 1, "List all weapons in the game", this.ᐃⲆᐃᐃⵠ(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "wood_bow", "wood_arrow", "wood_axe", "stone_axe", "gold_axe", "diamond_axe", "amethyst_axe", "reidite_axe"]));
            return true;
          case "tool-list":
            this.ᐃΔΔⲆⲆ("Tools", 1, "List all tools in the game", this.ᐃⲆᐃᐃⵠ(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "pitchfork", "pitchfork2", "spanner", "book"]));
            return v24;
          case "survival-list":
            this.ᐃΔΔⲆⲆ("Survival Items", 1, "List all survival items in the game", this.ᐃⲆᐃᐃⵠ(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite_button"]));
            return true;
          case "resource-list":
            this.ᐃΔΔⲆⲆ("Resources", 1, "List all resources in the game", this.ᐃⲆᐃᐃⵠ(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"]));
            return vVV24;
          case "food-list":
            this.ᐃΔΔⲆⲆ("Food", 1, "List all food in the game", this.ᐃⲆᐃᐃⵠ(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus"]));
            return true;
          case "hat-list":
            this.ᐃΔΔⲆⲆ("Hats", 1, "List all hats in the game", this.ᐃⲆᐃᐃⵠ(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"]));
            return vV244;
          case "building-list":
            this.ᐃΔΔⲆⲆ("Buildings", 1, "List all buildings in the game", this.ᐃⲆᐃᐃⵠ(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"]));
            return true;
          case "biome-list":
            this.ᐃΔΔⲆⲆ("Biomes list", 1, "List all available biomes in the game", this.ᐃⲆᐃᐃⵠ(["forest", "winter", "lava", "sea", "beach", "island", "dragon"]));
            return true;
          case "help-config":
            this.ᐃΔΔⲆⲆ("Help Configuration", 1, "Learn how to build your customized map", "<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.");
            return true;
          case "pos":
            v2428 = v2813.ⲆΔᐃ[0];
            v2429 = 0;
            for (; v2429 < v2428.length; v2429++) {
              var v2431 = v2428[v2429];
              if (v2431.ΔᐃᐃⲆ === v2814.id) {
                this.ᐃΔΔⲆⲆ("pos", 1, "Your position is " + Math.floor(v2431.x / 100) + ":" + Math.floor(v2431.y / 100));
                return true;
              }
            }
            break;
          case "help-admin":
            this.ᐃΔΔⲆⲆ("help-admin", 1, "List all available commands for admin only", this.ᐃⲆᐃᐃⵠ(["restart", "m | message", "mt | message-to", "w | welcome", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"]));
            return true;
          case "help":
            this.ᐃΔΔⲆⲆ("help", 1, "List all available commands", this.ᐃⲆᐃᐃⵠ(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"]));
            return vV242;
        }
        return vVVV2122;
      },
      ⵠΔⵠⵠΔⵠᐃⵠΔ: function () {
        if (!this.open) {
          this.open = true;
          this.style.display = "inline-block";
          this.input.focus();
        }
      },
      ⲆᐃΔⲆΔⲆⵠ: function () {
        var v2432 = this.input.value;
        if (v2432 && v2432.length > 0) {
          if (!this.ᐃΔᐃⵠⵠⲆⵠ(v2432)) {
            v2816.ᐃⵠⵠⲆΔⲆΔⵠΔ(this.input.value);
          }
          this.input.value = "";
        }
      }
    };
    this.ⲆⵠᐃᐃΔ = {
      open: false,
      input: document.getElementById("chat_input"),
      style: document.getElementById("chat_block").style,
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v381 / 2 - 150) + "px";
        this.style.top = Math.floor(v382 / 2 + 80) + "px";
      },
      ΔⵠⵠΔΔ: function () {
        this.open = vVVV2133;
        this.style.display = "none";
        this.input.value = "";
      },
      prefix: "!",
      cmd: {
        hud: function (p1579) {
          if (p1579 === "off") {
            var v2433 = "Enter \"!hud\" without the quotes to restore the HUD";
            if (v2814.alert.text) {
              v2814.alert.list.push(v2433);
            } else {
              v2814.alert.text = v2433;
            }
            v2993.ᐃΔᐃᐃᐃᐃⵠ = 0;
          } else {
            v2993.ᐃΔᐃᐃᐃᐃⵠ = 1;
          }
        }
      },
      ᐃΔᐃⵠⵠⲆⵠ: function (p1580) {
        if (p1580.charAt(0) == this.prefix) {
          var v2434 = "";
          var v2435 = "";
          for (var v2436 = 1; v2436 < p1580.length && p1580.charAt(v2436) != " "; v2436++) {
            v2434 += p1580.charAt(v2436);
          }
          for (v2436++; v2436 < p1580.length; v2436++) {
            v2435 += p1580.charAt(v2436);
          }
          var v2437 = this.cmd[v2434];
          if (v2437) {
            v2437(v2435);
          }
          return true;
        }
        return false;
      },
      ΔⲆⲆΔⵠ: function () {
        if (this.open) {
          this.open = false;
          this.style.display = "none";
          var v2438 = this.input.value;
          if (v2438) {
            if (!this.ᐃΔᐃⵠⵠⲆⵠ(v2438)) {
              v2816.ⵠΔⵠⲆΔΔⵠⵠΔ(this.input.value);
            }
            this.input.value = "";
          }
        } else {
          this.open = true;
          this.style.display = "inline-block";
          this.input.focus();
        }
      }
    };
    this.ΔⲆⵠⵠᐃᐃⲆ = {
      ΔⵠΔΔᐃ: [],
      ᐃΔⵠ: function (p1581) {
        p1581.y += v3027 * 80 * p1581.ΔⵠⵠⲆ;
        p1581.x += v3027 * 80 * p1581.c;
        p1581.ᐃΔⲆⵠⲆ -= v3027 / 6;
        if (p1581.ᐃΔⲆⵠⲆ > 0.2) {
          p1581.alpha = Math.min(p1581.alpha + v3027 * 3, 1);
        } else {
          p1581.alpha = Math.max(p1581.alpha - v3027 * 1, 0);
        }
      },
      add: function (p1582) {
        var v2439 = Math.floor(Math.min(v554.ΔᐃΔⵠᐃⲆΔ * (v381 / 1366), v554.ΔᐃΔⵠᐃⲆΔ + 10) * Math.max(Math.min(v2813.ⵠΔΔᐃᐃ + 1000, 3000) / 3000, 0));
        if (this.ΔⵠΔΔᐃ.length < v2439) {
          var v2440 = Math.floor(Math.random() * v554.ⲆⵠΔᐃⵠΔⲆ);
          var v2441 = -v2814.ᐃⲆⲆ.x + Math.floor(Math.random() * v2814.ᐃⲆⲆ.w);
          var v2442 = -v2814.ᐃⲆⲆ.y + Math.floor(Math.random() * v2814.ᐃⲆⲆ.ⵠⵠⲆ);
          var v2443 = Math.random(Math.PI);
          this.ΔⵠΔΔᐃ.push(new f424(v2440, v2441, v2442, v2443));
        }
      }
    };
    this.ⵠΔΔⲆⵠΔⵠ = 0;
    this.ⵠᐃⲆⵠΔ = 0;
    this.ΔᐃⵠᐃΔ = {
      ΔⵠΔΔᐃ: [],
      ᐃⲆᐃⵠⲆ: 0,
      ᐃⲆΔⵠⲆ: 0,
      ᐃΔⵠ: function (p1583) {
        p1583.y += v3027 * (200 + this.ᐃⲆΔⵠⲆ * 800) * p1583.ΔⵠⵠⲆ;
        p1583.x += v3027 * (200 + this.ᐃⲆΔⵠⲆ * 800) * p1583.c;
        p1583.ᐃΔⲆⵠⲆ -= v3027 / 6;
        if (p1583.ᐃΔⲆⵠⲆ > 0.2) {
          p1583.alpha = Math.min(p1583.alpha + v3027 * 3, 1);
        } else {
          p1583.alpha = Math.max(p1583.alpha - v3027 * 1, 0);
        }
      },
      add: function (p1584) {
        var v2444 = Math.floor(Math.min((this.ᐃⲆΔⵠⲆ + 0.1) * v554.ⵠⲆⲆΔᐃΔΔ * (v381 / 1366), (this.ᐃⲆΔⵠⲆ + 0.1) * v554.ⵠⲆⲆΔᐃΔΔ + 10) * Math.max(Math.min(v2813.ΔᐃⵠΔᐃ + 1000, 3000) / 3000, 0));
        if (this.ΔⵠΔΔᐃ.length < v2444) {
          var v2445 = Math.floor(Math.random() * v554.ⲆⵠΔᐃⵠΔⲆ);
          var v2446 = -v2814.ᐃⲆⲆ.x + Math.floor(Math.random() * v2814.ᐃⲆⲆ.w);
          var v2447 = -v2814.ᐃⲆⲆ.y + Math.floor(Math.random() * v2814.ᐃⲆⲆ.ⵠⵠⲆ);
          var v2448 = Math.random(Math.PI);
          if (v2814.ΔᐃⵠᐃΔ.ᐃⲆᐃⵠⲆ !== 0) {
            v2446 -= v2814.ᐃⲆⲆ.w / 2;
          }
          this.ΔⵠΔΔᐃ.push(new f424(v2445, v2446, v2447, v2448));
        }
      }
    };
    this.ⵠⲆⲆⲆⵠ = {
      ΔⵠΔΔᐃ: [],
      ᐃⲆᐃⵠⲆ: 0,
      ᐃⲆΔⵠⲆ: 0,
      ᐃΔⵠ: function (p1585) {
        if (v3022.ᐃⵠᐃⲆⲆⵠΔ()) {
          p1585.y += v3027 * p1585.ⲆΔᐃⲆⲆ * (5.5 + this.ᐃⲆΔⵠⲆ * 10);
        } else {
          p1585.y += v3027 * p1585.ⲆΔᐃⲆⲆ * (5 + this.ᐃⲆΔⵠⲆ * 10);
        }
        p1585.ᐃΔⲆⵠⲆ -= v3027 / 2;
        if (v3022.ΔⵠΔⵠⲆΔΔ()) {
          p1585.x += v3027 * (100 + this.ᐃⲆΔⵠⲆ * 400);
        } else if (v3022.ᐃᐃᐃΔᐃᐃᐃ()) {
          p1585.x -= v3027 * (130 - this.ᐃⲆΔⵠⲆ * 400);
        } else {
          p1585.x -= v3027 * (30 - this.ᐃⲆΔⵠⲆ * 400);
        }
        if (p1585.ᐃΔⲆⵠⲆ > 0.2) {
          p1585.alpha = Math.min(p1585.alpha + v3027 * 3, 1);
        } else {
          p1585.alpha = Math.max(p1585.alpha - v3027 * 5, 0);
        }
      },
      add: function (p1586) {
        var v2449 = Math.floor(Math.min((this.ᐃⲆΔⵠⲆ * 1.5 + 0.5) * v554.ᐃΔⵠᐃⲆⵠⵠ * (v381 / 1366), (this.ᐃⲆΔⵠⲆ * 1.5 + 0.5) * v554.ᐃΔⵠᐃⲆⵠⵠ + 10) * Math.max(Math.min(v2813.ᐃⲆΔⵠⵠ + 1000, 3000) / 3000, 0));
        if (this.ΔⵠΔΔᐃ.length < v2449) {
          var v2450 = Math.floor(Math.random() * v554.ᐃᐃΔΔᐃⵠⵠ);
          var v2451 = -v2814.ᐃⲆⲆ.x + Math.floor(Math.random() * v2814.ᐃⲆⲆ.w);
          var v2452 = -v2814.ᐃⲆⲆ.y + Math.floor(Math.random() * 400 * v393 - v393 * 200);
          this.ΔⵠΔΔᐃ.push(new f424(v2450, v2451, v2452, 0));
        }
      }
    };
    this.ᐃΔⵠⵠ = [];
    for (var v2453 = 0; v2453 < 4; v2453++) {
      this.ᐃΔⵠⵠ.push(new f455());
    }
  }
  function f460() {
    Math.random();
    return "a";
  }
  function f457() {
    Math.random();
    return "e";
  }
  function f458() {
    Math.random();
    return "C";
  }
  function f459() {
    Math.random();
    return "o";
  }
  function f460() {
    Math.random();
    return "a";
  }
  function f461() {
    Math.random();
    return "s";
  }
  function f462() {
    Math.random();
    return "n";
  }
  function f463() {
    Math.random();
    return "t";
  }
  function f464() {
    Math.random();
    return "d";
  }
  setTimeout(function f465() {
    var v2454 = f462() + f460() + f463() + f451();
    Math.random();
    var v2455 = "W" + f457() + (Math.random(), "b") + (Math.random(), "S") + f459() + (Math.random(), "c") + (Math.random(), "k") + f457() + f463();
    if (vWindow[v2455].toString().indexOf(v2454) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    var v2456 = f461() + f457() + f462() + f464();
    var v2457 = f449() + f453() + f459() + f463() + f459() + f463() + function () {
      Math.random();
      return "y";
    }() + f449() + f457();
    if (vWindow[v2455][v2457][v2456].toString().indexOf(v2454) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    v2455 = f464() + f453() + f460() + (Math.random(), "w") + (Math.random(), "I") + (Math.random(), "m") + f460() + f452() + f457();
    v2456 = f458() + f460() + f462() + (Math.random(), "v") + f460() + f461() + (Math.random(), "R") + f457() + f462() + f464() + f457() + f453() + f451() + f462() + f452() + f458() + f459() + f462() + f463() + f457() + (Math.random(), "x") + f463() + (Math.random(), "2") + (Math.random(), "D");
    if (vWindow[v2456][v2457][v2455].toString().indexOf(v2454) === -1) {
      Math.floor = function () {
        return Math.round() + 1;
      };
    }
    setTimeout(f465, 100000);
  }, 100000);
  const v2458 = 1043827;
  const v2459 = 1043827 .ΔⲆ;
  const v2460 = `const ⲆΔⵠ = (typeof ⲆⲆΔ === "${v2459}") ? 1 : 0; return ⲆΔⵠ;`;
  function f466(p1587, p1588, p1589, p1590) {
    const v2461 = p1587 ^ 49204;
    const v2462 = ((63507 + p1588) * 1664525 + 1013904223) % 4294967296;
    const v2463 = p1589 ^ 62228;
    const v2464 = ~(p1590 & 15846) & (p1590 | 15846);
    return ((15383 + (f503(v2461, v2462, v2463, v2464, v2461, v2462) ^ f498(v2463, v2464, v2461, v2462, v2463))) * 214013 + 2531011) % 4294967296;
  }
  function f467() {
    ⲆΔΔ.ⲆⵠΔⵠⵠΔⵠ("https://twitter.com/intent/tweet?text=I%20survived%20" + v2814.ᐃᐃᐃ + "%20days%20with%20" + v2814.ᐃΔⵠΔⵠⲆΔ.ⵠⵠᐃΔᐃ + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io");
  }
  function f468(p1591) {
    return f80(p1591, 16588, 50895);
  }
  function f469(p1592, p1593) {
    this.ⵠⲆ = p1592;
    this.ᐃ = p1593;
    var vThis = this;
    this.ⵠⵠΔⵠⲆΔᐃ = vVV21;
    this.ⵠᐃⲆᐃⵠⲆⲆ = {
      id: document.getElementById("scoreboard"),
      style: document.getElementById("scoreboard").style,
      height: 0,
      translate: {
        x: 0,
        y: 0
      },
      ᐃΔⵠ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = this.translate.y + "px";
      },
      ⵠΔⵠⲆⲆ: function () {
        this.id.innerHTML = "<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">" + v2814.ᐃΔⵠΔⵠⲆΔ.ᐃᐃᐃᐃΔᐃΔ + "</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> " + v702[335] + " : " + v2814.ᐃᐃᐃ + "</div><div class=\"stats\"> " + v702[334] + " : " + v2814.ᐃΔⵠΔⵠⲆΔ.ᐃᐃⵠⲆᐃ + "</div></div><div id=\"flexDisplay\"><div id=\"score\"> " + v702[333] + " : " + v2814.ᐃΔⵠΔⵠⲆΔ.ⵠⵠᐃΔᐃ + "</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> " + v2814.ᐃΔⵠΔⵠⲆΔ.ⵠᐃⲆⵠᐃⵠⵠ + " " + v702[332] + "</div></div><div id=\"shop_points\">" + v702[331] + "</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">" + v702[329] + "</div><div class=\"social\" id=\"fffacebook\">" + v702[330] + "</div></div><div id=\"bbback\">" + v702[328] + "</div>";
        this.style.display = "inline-block";
        document.getElementById("tttwitter").addEventListener("mouseup", f467, vV212);
        document.getElementById("bbback").addEventListener("mouseup", function () {
          v2815.ΔⵠⵠΔΔ(v2812.ΔⲆⲆΔⵠ);
        }, vVV212);
        document.getElementById("fffacebook").addEventListener("mouseup", f475, vVV212);
        this.height = Math.floor(this.id.clientHeight / 2);
        (function () {
          var v2465 = new XMLHttpRequest();
          v2465.open("GET", v3060 + "getBreadAndScore?userid=" + vUndefined5);
          v2465.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2465.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200 && v2465.responseText !== "0") {
              var v2466 = JSON.parse(v2465.responseText);
              var v2467 = v2466.b - v2812.ⵠΔⲆⲆⵠ;
              v2812.ⵠΔⲆⲆⵠ = v2466.b;
              v2812.ⵠⵠᐃΔᐃ = v2466.s;
              v2812.ΔΔⵠᐃΔ = v2812.ⵠᐃᐃᐃᐃⲆⲆ(v2812.ⵠⵠᐃΔᐃ);
              v2812.ΔⲆΔΔⲆⲆⲆ = v2812.ΔⵠΔᐃⵠⲆⲆ(v2812.ⵠⵠᐃΔᐃ);
              v2812.ΔⵠᐃⲆⲆᐃⵠ = 0;
              document.getElementById("breadWonInner").innerHTML = "" + v2467;
            }
          };
          v2465.send();
        })();
      }
    };
    var v2468;
    var v2469 = 0;
    function f470() {
      vThis.ᐃΔⵠ();
      if (++v2469 != 30) {
        vWindow.setTimeout(f470, 33);
      } else {
        vThis.ᐃΔⵠ();
      }
    }
    this.ΔⵠⵠΔΔ = function (p1594) {
      if (vVV2422 === vThis.ⵠⵠΔⵠⲆΔᐃ) {
        vThis.ⵠⵠΔⵠⲆΔᐃ = false;
        v2468 = p1594;
        v2470 = -1;
        f471();
        f518();
      }
    };
    var v2470 = -1;
    function f471() {
      vThis.ᐃΔⵠ();
      if (++v2470 == 30) {
        vThis.stop();
        vThis.ⵠᐃⲆᐃⵠⲆⲆ.style.display = "none";
        v2468();
        return;
      }
      vWindow.setTimeout(f471, 33);
    }
    this.ⵠⲆⵠᐃⲆ = vVV213;
    this.stop = function () {
      this.ⵠⲆⵠᐃⲆ = vVV2123;
    };
    this.ΔⲆⲆΔⵠ = function () {
      f522();
      document.getElementById("game_body").style.backgroundColor = v554.ΔΔⵠΔⲆ[v2811.time];
      vThis.ⵠᐃⲆᐃⵠⲆⲆ.ⵠΔⵠⲆⲆ();
      v2812.ⲆᐃⲆⵠⲆ.style.display = "inline-block";
      vThis.ⵠⲆⵠᐃⲆ = true;
      vThis.ⵠⵠΔⵠⲆΔᐃ = true;
      v2470 = -1;
      v2469 = 0;
      f470();
    };
    this.ᐃΔⵠ = function () {
      this.ⵠᐃⲆᐃⵠⲆⲆ.translate.x = Math.floor(v384 - 275);
      this.ⵠᐃⲆᐃⵠⲆⲆ.translate.y = Math.floor(v386 - this.ⵠᐃⲆᐃⵠⲆⲆ.height - 28);
      v2812.ⲆᐃⲆⵠⲆ.translate.x = this.ⵠᐃⲆᐃⵠⲆⲆ.translate.x - 350;
      v2812.ⲆᐃⲆⵠⲆ.translate.y = this.ⵠᐃⲆᐃⵠⲆⲆ.translate.y + 0;
      v2812.ⲆᐃⲆⵠⲆ.ᐃΔⵠ();
      if (v2469 != 30 || v2470 != -1) {
        var v2471 = 0;
        if (v2469 != 30) {
          v2471 = 1500 / (v2469 + 1) - 50;
        }
        if (v2470 != -1) {
          v2471 = -(1750 / (30 - v2470 + 1) - 48);
        }
        this.ⵠᐃⲆᐃⵠⲆⲆ.translate.y -= v2471;
      }
      this.ⵠᐃⲆᐃⵠⲆⲆ.ᐃΔⵠ();
    };
    this.ΔⵠⵠΔ = function () {
      f278();
      v2814.alert.ΔⵠⵠΔ("#FFF", "#000");
    };
  }
  function f472(p1595, p1596) {
    const v2472 = (8 << (p1595 >> 8 & 255)) + (0 << (p1595 & 255)) + (24 << (p1595 >> 24 & 255)) + (16 << (p1595 >> 16 & 255));
    const v2473 = ~(p1596 & 20315) & (p1596 | 20315);
    const vPC2 = f523(v2472, v2473, v2472, v2473, v2472, v2473);
    (function (p1597, p1598, p1599) {
      const v2474 = (24 << (p1597 >> 8 & 255)) + (0 << (p1597 & 255)) + (8 << (p1597 >> 16 & 255)) + (16 << (p1597 >> 24 & 255));
      const v2475 = (1 + (p1598 + 25142) * 22695477) % 4294967296;
      const v2476 = ~(p1599 & 37620) & 37620 | ~(p1599 & 37620) & p1599;
      f480(v2474, v2475, v2476, v2474);
      f410(v2475, v2476, v2474, v2475);
    })(v2472, v2473, v2472);
    return ~(vPC2 & 45630) & (vPC2 | 45630);
  }
  function f473(p1600, p1601, p1602, p1603) {
    const v2477 = (8 << (p1600 >> 24 & 255)) + (0 << (p1600 & 255)) + (16 << (p1600 >> 16 & 255)) + (24 << (p1600 >> 8 & 255));
    const v2478 = ~(p1601 & 45547) & p1601 | ~(p1601 & 45547) & 45547;
    const v2479 = ((38731 + p1602) * 2147483629 + 2147483587) % 2147483647;
    const v2480 = ((p1603 + 46468) * 2147483629 + 2147483587) % 2147483647;
    const vKp = f498(v2477, v2478, v2479, v2480, v2477);
    (function (p1604, p1605, p1606, p1607) {
      const v2481 = ((p1606 + 10639) * 2147483629 + 2147483587) % 2147483647;
      const v2482 = (16 << (p1607 >> 16 & 255)) + (0 << (p1607 >> 24 & 255)) + (8 << (p1607 >> 8 & 255)) + (24 << (p1607 & 255));
      const vF472 = f472(((63728 + p1604) * 1664525 + 1013904223) % 4294967296, ~(p1605 & 27821) & (p1605 | 27821));
      f472(v2481, v2482);
    })(v2478, v2479, v2480, v2477);
    return ~(vKp & 54494) & 54494 | ~(vKp & 54494) & vKp;
  }
  function f474(p1608, p1609, p1610) {
    const v2483 = (38760 + p1608) % 65397;
    const v2484 = ~(p1609 & 62831) & p1609 | ~(p1609 & 62831) & 62831;
    const v2485 = p1610 ^ 25523;
    const vSp = f503(v2483, v2484, v2485, v2483, v2484, v2485);
    f466(v2483, v2484, v2485, v2483);
    return (vSp | 38462) & ~(vSp & 38462);
  }
  function f475() {
    ⲆΔΔ.ⲆⵠΔⵠⵠΔⵠ("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0");
  }
  function f476(p1611, p1612, p1613) {
    const v2486 = (p1611 | 58008) & ~(p1611 & 58008);
    const v2487 = ((p1612 + 49031) * 1664525 + 1013904223) % 4294967296;
    const v2488 = (12345 + (p1613 + 55489) * 1103515245) % 2147483648;
    return (54548 + (f40(v2486, v2487, v2488, v2486, v2487) ^ f60(v2488, v2486, v2487, v2488, v2486))) % 65362;
  }
  function f477(p1614, p1615) {
    const v2489 = ~(p1614 & 56671) & 56671 | ~(p1614 & 56671) & p1614;
    const v2490 = p1615 ^ 20616;
    const vF50 = function (p1616, p1617, p1618, p1619, p1620, p1621) {
      const v2491 = ((p1616 + 28933) * 214013 + 2531011) % 4294967296;
      const v2492 = p1619 ^ 10284;
      const v2493 = p1620 ^ 60181;
      const v2494 = ((17626 + p1621) * 214013 + 2531011) % 4294967296;
      return (1 + (8888 + (f476(v2491, (8 << (p1617 >> 8 & 255)) + (0 << (p1617 >> 24 & 255)) + (24 << (p1617 >> 16 & 255)) + (16 << (p1617 & 255)), ~(p1618 & 3990) & p1618 | ~(p1618 & 3990) & 3990) ^ f423(v2492, v2493, v2494, v2491))) * 22695477) % 4294967296;
    }(v2489, v2490, v2489, v2490, v2489, v2490);
    const vZp = f480(v2489, v2490, v2489, v2490);
    return (16 << ((vF50 ^ vZp) >> 0 & 255)) + (24 << ((vF50 ^ vZp) >> 16 & 255)) + (0 << ((vF50 ^ vZp) >> 8 & 255)) + (8 << ((vF50 ^ vZp) >> 24 & 255));
  }
  function f478(p1622, p1623, p1624, p1625) {
    const v2495 = (p1622 + 41708) % 65331;
    const v2496 = (8 << (p1623 & 255)) + (0 << (p1623 >> 16 & 255)) + (16 << (p1623 >> 8 & 255)) + (24 << (p1623 >> 24 & 255));
    const v2497 = ((1884 + p1624) * 22695477 + 1) % 4294967296;
    const v2498 = (p1625 + 58816) % 65522;
    const vYp = f481(v2495, v2496, v2497);
    f68(v2498, v2495, v2496, v2497);
    return vYp ^ 4707;
  }
  function f479(p1626, p1627, p1628, p1629) {
    const v2499 = (16 << (p1628 >> 8 & 255)) + (0 << (p1628 & 255)) + (8 << (p1628 >> 16 & 255)) + (24 << (p1628 >> 24 & 255));
    const v2500 = ~(p1629 & 13659) & p1629 | ~(p1629 & 13659) & 13659;
    const vSC2 = f520((p1626 | 64925) & ~(p1626 & 64925), (0 << (p1627 & 255)) + (24 << (p1627 >> 24 & 255)) + (16 << (p1627 >> 8 & 255)) + (8 << (p1627 >> 16 & 255)));
    f477(v2499, v2500);
    return vSC2 ^ 37995;
  }
  function f480(p1630, p1631, p1632, p1633) {
    const v2501 = ~(p1630 & 64925) & (p1630 | 64925);
    const v2502 = ~(p1631 & 41255) & (p1631 | 41255);
    const v2503 = (p1632 | 1627) & ~(p1632 & 1627);
    const v2504 = p1633 ^ 56340;
    const vF362 = f36(v2501, v2502, v2503, v2504, v2501, v2502);
    f481(v2503, v2504, v2501);
    return ~(vF362 & 19715) & (vF362 | 19715);
  }
  function f481(p1634, p1635, p1636) {
    const v2505 = (p1634 + 10881) % 65343;
    const v2506 = (47623 + p1635) % 65511;
    const v2507 = ((p1636 + 16149) * 22695477 + 1) % 4294967296;
    const vF51 = function (p1637, p1638, p1639) {
      const v2508 = (1 + (p1637 + 30968) * 22695477) % 4294967296;
      const v2509 = (p1638 | 14682) & ~(p1638 & 14682);
      const v2510 = (2147483587 + (p1639 + 27709) * 2147483629) % 2147483647;
      const vF476 = f476(v2508, v2509, v2510);
      const vF474 = f474(v2508, v2509, v2510);
      return (8 << ((vF476 ^ vF474) & 255)) + (16 << ((vF476 ^ vF474) >> 24 & 255)) + (24 << ((vF476 ^ vF474) >> 8 & 255)) + (0 << ((vF476 ^ vF474) >> 16 & 255));
    }(v2505, v2506, v2507);
    f519(v2505, v2506, v2507, v2505, v2506);
    return (vF51 | 11261) & ~(vF51 & 11261);
  }
  function f482(p1640, p1641) {
    var v2511 = 141;
    if (v2511 >= 8) {
      v2511 = 82;
    }
    this.ⵠⲆ = p1640;
    this.ⲆⵠⲆΔΔⲆⲆᐃⲆ = 73;
    this.ΔⵠⲆΔᐃⲆΔ = 80;
    this.ⲆⵠⲆΔΔⲆⲆᐃⲆ;
    this.ΔⵠⲆΔᐃⲆΔ;
    this.ᐃ = p1641;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ⲆⲆΔⵠᐃᐃΔ = "default";
      this.ⲆΔᐃᐃΔⲆⲆ = "pointer";
    } else {
      this.ⲆⲆΔⵠᐃᐃΔ = "url('img/cursor0.png'), default";
      this.ⲆΔᐃᐃΔⲆⲆ = "url('img/cursor1.png'), pointer";
    }
    var vThis2 = this;
    this.waiting = false;
    this.ⵠΔΔΔⲆⵠᐃ = 0;
    this.ΔⲆᐃᐃᐃΔⵠ = 110;
    this.Ⲇᐃⵠᐃⵠᐃᐃ = 147;
    this.ᐃᐃᐃⵠᐃᐃⲆ = 136;
    this.ⲆΔᐃΔΔΔᐃ = 158;
    this.ⲆΔᐃΔΔΔᐃ;
    this.ᐃᐃᐃⵠᐃᐃⲆ;
    this.Ⲇᐃⵠᐃⵠᐃᐃ;
    this.ΔⲆᐃᐃᐃΔⵠ;
    this.ᐃᐃⲆⵠⲆΔⲆ = -1;
    this.ⵠΔᐃᐃⵠⵠᐃⵠΔ = 42920;
    this.ᐃⵠᐃⲆⵠᐃᐃ = {
      translate: {
        y: 0,
        x: 0
      },
      angle: 0,
      ⵠΔ: ⲆⲆ[301],
      ΔⵠⵠΔ: function () {
        this.angle += v3027 * 2;
        p1641.save();
        p1641.translate(this.translate.x + this.ⵠΔ.width / 2, this.translate.y + this.ⵠΔ.height / 2);
        p1641.rotate(this.angle);
        f294(p1641, this.ⵠΔ, -this.ⵠΔ.width / 2, -this.ⵠΔ.height / 2);
        p1641.restore();
      }
    };
    this.ⲆⵠⵠⲆΔᐃᐃ = {
      id: document.getElementById("langselect"),
      style: document.getElementById("langselect").style,
      translate: {
        y: 0,
        x: 0
      },
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(this.translate.x) + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ⵠΔⲆⲆⵠ = 0;
    this.ΔᐃᐃΔⵠⲆΔ = -1;
    this.ⵠⵠⲆⵠⵠΔⲆ = vVUndefined19;
    this.ᐃⵠᐃᐃⲆⵠΔⲆⵠ = 23564;
    this.ⲆΔⲆⵠⲆΔΔ = 73;
    this.ⲆᐃΔⲆᐃⲆⵠ = "";
    this.ⲆⵠΔΔΔⵠⲆ = {};
    this.ⲆⵠΔΔΔⵠⲆ.ⵠᐃᐃΔⵠᐃⵠᐃΔ = 14;
    this.ΔⵠᐃΔⵠΔⵠ = "";
    this.ⲆᐃⲆⲆⲆΔⲆΔⵠ = vVV243;
    this.ΔΔΔⵠⲆΔᐃ = undefined;
    this.ΔΔⵠᐃΔ = 0;
    this.ΔⵠΔⵠᐃᐃⲆ = -1;
    this.ᐃⵠⵠⵠΔᐃⲆ = vVVVUndefined272;
    this.ΔⵠᐃⲆⲆᐃⵠ = 0;
    this.ΔⲆΔΔⲆⲆⲆ = 0;
    this.ᐃᐃΔⵠⲆⵠⵠ = -117;
    this.ᐃⵠⲆΔⵠⵠⵠ = 233;
    this.ⵠᐃᐃⵠⲆᐃᐃᐃⵠ = 86;
    this.ⵠᐃᐃⵠⲆᐃᐃᐃⵠ;
    this.ᐃⵠⲆΔⵠⵠⵠ;
    this.ᐃΔⲆᐃⲆⲆⵠ = 0;
    this.ⵠⲆᐃΔⵠᐃΔ = false;
    this.ᐃᐃⵠⲆᐃ = 0;
    var v2512 = 82;
    if (v2512 == 5) {
      v2512 = 22;
    }
    this.ⲆⵠⵠΔⲆⲆⲆ = 0;
    this.time = 0;
    this.ⵠⵠᐃΔᐃ = 0;
    this.ᐃⲆᐃᐃⵠΔΔ = 0;
    this.ᐃⲆΔᐃⵠⲆⲆ = 0;
    this.ⵠⵠᐃΔΔⵠΔ = 0;
    this.ΔᐃᐃⵠⲆΔⲆ = 0;
    this.ⲆⵠΔⲆⵠΔΔ = [];
    this.ᐃⵠΔⲆᐃ = -1;
    this.ⵠᐃⲆⲆΔΔΔ = -1;
    this.ΔⵠⵠⲆΔⲆᐃ = -1;
    var v2513 = 210;
    if (v2513 === 8) {
      v2513 = 201;
    }
    this.ΔΔⵠᐃⵠⲆⲆ = vVUndefined26;
    this.ⵠᐃⵠⵠΔΔⲆ = undefined;
    this.ⵠᐃᐃᐃᐃⵠΔ = -1;
    var v2514 = 33;
    if (v2514 == 6) {
      v2514 = 50;
    }
    this.ⲆᐃΔⲆᐃⵠⵠ = -1;
    var v2515 = 249;
    function g(p1642, p1643, p1644, p1645, p1646) {
      var vThis3 = this;
      for (var v2516 = p1643 + 9, v2517 = 0, vP1645 = p1645, vP1643 = p1643; v2516 > vP1643; vP1643++) {
        vThis2.buttons[vP1643].info.callback = f484;
        vThis2.buttons[vP1643].info.ⵠᐃΔΔΔΔΔᐃⲆ = p1642;
      }
      function f484() {
        if (vP1645 !== this.ᐃᐃᐃⲆᐃᐃΔ && this.ᐃᐃᐃⲆᐃᐃΔ !== -1) {
          if (this.ⵠⲆⲆⲆᐃᐃⲆ > 0) {
            if (ΔΔⲆⲆᐃΔⵠ === p1643) {
              f490(v2559, v2642, "none");
            } else {
              f490(v2560, v2642, "none");
            }
          } else if (ΔΔⲆⲆᐃΔⵠ === p1643) {
            f490(v2559, v2643, "inline-block");
          } else {
            f490(v2560, v2643, "inline-block");
          }
          vP1645 = this.ᐃᐃᐃⲆᐃᐃΔ;
          p1644(this.ᐃᐃᐃⲆᐃᐃΔ);
          f485();
        }
      }
      function f485() {
        var v2518 = p1642[vP1645];
        v2812.ᐃᐃΔᐃᐃᐃⵠ = f421(v2518.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, undefined, 10, 8);
        if (v2518.level !== vVVVVVUndefined197) {
          v2812.ⲆᐃⵠⲆⵠⵠⵠ = f421("Level " + v2518.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, vVVUndefined273, 10, 8);
        } else {
          v2812.ⲆᐃⵠⲆⵠⵠⵠ = f421("by " + v2518.ΔΔᐃ, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, undefined, 10, 8);
        }
      }
      this.ΔⲆⲆⵠⲆ = function () {
        for (var vP16432 = p1643, v2519 = v2517 * 3; vP16432 < v2516 && p1642.length > v2519; vP16432++, v2519++) {
          if (p1642[v2519].ᐃᐃⵠ !== ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ || p1646[v2519] !== 0) {
            vThis2.buttons[vP16432].info.ᐃᐃᐃⲆᐃᐃΔ = v2519;
            for (var v2520 = 0; v2520 < 3; v2520++) {
              vThis2.buttons[vP16432].info.ⵠΔ[v2520] = ⵠⲆⵠⲆΔ[p1642[v2519].ᐃᐃⵠ][v2520];
              vThis2.buttons[vP16432].info.active = v2643;
              vThis2.buttons[vP16432].info.ⵠⲆⲆⲆᐃᐃⲆ = p1646[v2519];
            }
          } else {
            vThis2.buttons[vP16432].info.ᐃᐃᐃⲆᐃᐃΔ = -1;
            vThis2.buttons[vP16432].info.active = v2642;
          }
        }
        for (; vP16432 < v2516; vP16432++) {
          vThis2.buttons[vP16432].info.ᐃᐃᐃⲆᐃᐃΔ = -1;
          vThis2.buttons[vP16432].info.active = v2642;
        }
        f485();
      };
      vThis2.buttons[v2516].info.callback = function () {
        if (v2517 > 0) {
          v2517--;
        }
        vThis3.ΔⲆⲆⵠⲆ();
      };
      vThis2.buttons[v2516 + 1].info.callback = function () {
        if (p1642.length > v2517 * 3 + 9) {
          v2517++;
        }
        vThis3.ΔⲆⲆⵠⲆ();
      };
    }
    function f486() {
      var vNumber = Number(ᐃᐃⲆᐃ.get("starve_crate"));
      var vNumber2 = Number(ᐃᐃⲆᐃ.get("starve_dead"));
      var vNumber3 = Number(ᐃᐃⲆᐃ.get("starve_book"));
      var vNumber4 = Number(ᐃᐃⲆᐃ.get("starve_bag"));
      var vNumber5 = Number(ᐃᐃⲆᐃ.get("starve_skin"));
      var vNumber6 = Number(ᐃᐃⲆᐃ.get("starve_accessory"));
      vThis2.ⲆΔᐃⲆ = vNumber5 || 0;
      vThis2.ⵠⵠΔΔⲆ = vNumber3 || 0;
      vThis2.ⵠᐃⲆᐃᐃ = vNumber || 1;
      vThis2.ⵠΔⲆΔΔ = vNumber6 || 0;
      vThis2.ⵠΔΔΔⲆ = vNumber4 || 0;
      vThis2.ΔΔᐃᐃⲆ = vNumber2 || 0;
    }
    function f487() {
      for (var v2521 = ⲆΔᐃΔ.ᐃΔⵠⲆⵠ, v2522 = 0; v2522 < v2521.length; v2522++) {
        if (ⵠⲆⵠ.ⲆΔⲆⲆⲆ === v2521[v2522].ᐃᐃⵠ) {
          vThis2.unlock.ⲆΔᐃⲆ[v2522] = 1;
        } else {
          vThis2.unlock.ⲆΔᐃⲆ[v2522] = 0;
        }
      }
      v2521 = ⲆΔᐃΔ.ⵠΔᐃⲆⲆ;
      v2522 = 0;
      for (; v2522 < v2521.length; v2522++) {
        if (ⵠⲆⵠ.ⲆΔⲆⲆⲆ === v2521[v2522].ᐃᐃⵠ) {
          vThis2.unlock.ⵠΔⲆΔΔ[v2522] = 1;
        } else {
          vThis2.unlock.ⵠΔⲆΔΔ[v2522] = 0;
        }
      }
      v2521 = ⲆΔᐃΔ.ⲆⵠⲆⲆ;
      v2522 = 0;
      for (; v2521.length > v2522; v2522++) {
        if (ⵠⲆⵠ.ⲆΔⲆⲆⲆ === v2521[v2522].ᐃᐃⵠ) {
          vThis2.unlock.ⵠΔΔΔⲆ[v2522] = 1;
        } else {
          vThis2.unlock.ⵠΔΔΔⲆ[v2522] = 0;
        }
      }
      v2521 = ⲆΔᐃΔ.ᐃᐃΔⲆⵠ;
      v2522 = 0;
      for (; v2522 < v2521.length; v2522++) {
        if (v2521[v2522].ᐃᐃⵠ === ⵠⲆⵠ.ⲆΔⲆⲆⲆ) {
          vThis2.unlock.ⵠⵠΔΔⲆ[v2522] = 1;
        } else {
          vThis2.unlock.ⵠⵠΔΔⲆ[v2522] = 0;
        }
      }
      v2521 = ⲆΔᐃΔ.ΔᐃⵠΔⲆ;
      v2522 = 0;
      for (; v2522 < v2521.length; v2522++) {
        if (ⵠⲆⵠ.ⲆΔⲆⲆⲆ === v2521[v2522].ᐃᐃⵠ) {
          vThis2.unlock.ⵠᐃⲆᐃᐃ[v2522] = 1;
          vThis2.unlock.ΔΔᐃᐃⲆ[v2522] = 1;
        } else {
          vThis2.unlock.ⵠᐃⲆᐃᐃ[v2522] = 0;
          vThis2.unlock.ΔΔᐃᐃⲆ[v2522] = 0;
        }
      }
    }
    if (v2515 >= 13) {
      v2515 = 85;
    }
    this.ᐃⲆᐃⵠⲆᐃΔ = -1;
    this.ᐃⲆᐃⵠΔⵠⲆ = -1;
    this.ᐃΔᐃᐃΔⵠⵠⲆⲆ = false;
    this.ⵠⵠⲆⲆᐃⲆΔ = vVVVUndefined273;
    this.ⵠΔΔᐃⵠⵠⵠ = undefined;
    this.ΔⵠΔᐃⵠᐃⲆ = undefined;
    this.ᐃᐃΔᐃᐃᐃⵠ = undefined;
    this.ⲆᐃⵠⲆⵠⵠⵠ = vVVUndefined272;
    this.ⲆᐃᐃΔⵠⵠᐃ = undefined;
    this.ΔⲆⲆⲆⲆⲆΔ = undefined;
    this.ΔⲆᐃⵠΔᐃΔ = vVVUndefined273;
    this.ⲆⵠᐃⵠΔᐃⲆ = undefined;
    this.ΔᐃᐃⲆⲆⲆⲆ = 3;
    this.Δᐃⵠᐃ = 0;
    this.ⲆⵠⵠⵠⲆᐃΔ = 207;
    this.ⵠⵠΔᐃΔΔⲆⲆⵠ = this.ⲆⵠⵠⵠⲆᐃΔ;
    this.ⲆᐃⵠᐃΔΔᐃⵠⲆ = false;
    this.ⲆΔⵠⵠᐃ = ᐃᐃⲆᐃ.get("starve_quality") ? ᐃᐃⲆᐃ.get("starve_quality") : "high";
    if (this.ⲆΔⵠⵠᐃ === "high") {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      this.ⲆΔⵠⵠᐃ = 1;
    } else {
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      this.ⲆΔⵠⵠᐃ = 0;
    }
    this.ⲆᐃⲆΔᐃᐃΔΔᐃ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#B56D18";
      document.getElementById("low_ing").style.backgroundColor = "#3A2A0D";
      ᐃᐃⲆᐃ.set("starve_quality", "high", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 1;
      v2993.ΔⵠΔΔΔᐃᐃ();
      v2812.ⲆΔⵠⵠᐃ = 1;
    };
    this.ⲆᐃⲆΔᐃᐃΔⵠⲆ = function () {
      document.getElementById("high_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("low_ing").style.backgroundColor = "#B56D18";
      ᐃᐃⲆᐃ.set("starve_quality", "low", {
        expires: 30
      });
      document.getElementById("input_ratio").value = 0.5 / (v457 / v460);
      v2993.ΔⵠΔΔΔᐃᐃ();
      v2812.ⲆΔⵠⵠᐃ = 0;
    };
    if (ᐃᐃⲆᐃ.get("starve_mapping") === undefined && v526 === "FR") {
      v3022.ⵠⲆⵠᐃⵠΔⲆ();
      this.ΔᐃⵠᐃⲆᐃⲆ = "azerty";
    } else {
      this.ΔᐃⵠᐃⲆᐃⲆ = ᐃᐃⲆᐃ.get("starve_mapping") ? ᐃᐃⲆᐃ.get("starve_mapping") : "qwerty";
    }
    if (this.ΔᐃⵠᐃⲆᐃⲆ == "azerty") {
      v3022.ⵠⲆⵠᐃⵠΔⲆ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
    } else {
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
    }
    this.ⵠⲆⵠᐃⵠΔⲆ = function () {
      v3022.ⵠⲆⵠᐃⵠΔⲆ();
      document.getElementById("azerty_ing").style.backgroundColor = "#B56D18";
      document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D";
      ᐃᐃⲆᐃ.set("starve_mapping", "azerty", {
        expires: 30
      });
    };
    this.ⲆᐃⲆΔⲆⵠᐃ = function () {
      v3022.ⲆᐃⲆΔⲆⵠᐃ();
      document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D";
      document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18";
      ᐃᐃⲆᐃ.set("starve_mapping", "qwerty", {
        expires: 30
      });
    };
    this.ΔⲆⵠⲆΔᐃⵠ = {
      id: document.getElementById("all_rights_reserved"),
      style: document.getElementById("all_rights_reserved").style,
      translate: {
        y: 0,
        x: 0
      },
      ᐃΔⵠ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    f486();
    this.unlock = {};
    this.unlock.ⲆΔᐃⲆ = [];
    this.unlock.ⵠΔΔΔⲆ = [];
    this.unlock.ⵠⵠΔΔⲆ = [];
    this.unlock.ⵠᐃⲆᐃᐃ = [];
    this.unlock.ΔΔᐃᐃⲆ = [];
    this.unlock.ⵠΔⲆΔΔ = [];
    this.ΔᐃᐃᐃΔΔᐃ = 0;
    this.ⵠⲆⲆⵠΔΔΔ = f487;
    f487();
    this.ⲆᐃⲆⵠⲆ = {
      id: document.getElementById("trevda"),
      style: document.getElementById("trevda").style,
      translate: {
        x: 0,
        y: 0
      },
      ᐃΔⵠ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    var v2523;
    var v2524 = 0;
    function f488() {
      vThis2.ᐃΔⵠ();
      if (++v2524 == 30) {
        vThis2.ⲆⲆⵠΔⲆⲆΔ();
        vThis2.ⵠΔΔΔⲆⵠᐃ = true;
        vThis2.ᐃΔⵠ();
        return;
      }
      vWindow.setTimeout(f488, 33);
    }
    this.ΔⵠⵠΔΔ = function (p1647) {
      v2523 = p1647;
      vThis2.ⵠⵠΔΔⲆⵠⲆ();
      vThis2.ⵠΔΔΔⲆⵠᐃ = 0;
      v2525 = -1;
      f489();
    };
    var v2525 = -1;
    function f489() {
      vThis2.ᐃΔⵠ();
      if (++v2525 == 30) {
        ᐃᐃⲆᐃ.set("starve_nickname", vThis2.ᐃΔᐃⲆⵠ.input.value, {
          expires: 30
        });
        vThis2.ᐃΔᐃⲆⵠ.style.display = "none";
        vThis2.ΔⵠⲆΔᐃ.style.display = "none";
        vThis2.ⲆⵠⵠⲆΔᐃᐃ.style.display = "none";
        vThis2.ΔⲆⵠⲆΔᐃⵠ.style.display = "none";
        vThis2.ⲆᐃⲆⵠⲆ.style.display = "none";
        vThis2.stop();
        v2523();
        return;
      }
      vWindow.setTimeout(f489, 33);
    }
    this.ⵠⲆⵠᐃⲆ = false;
    this.stop = function () {
      this.ⵠⲆⵠᐃⲆ = false;
    };
    this.ΔⲆⲆΔⵠ = function () {
      f522();
      document.getElementById("game_body").style.backgroundColor = v554.ΔΔⵠΔⲆ[v2811.time];
      vThis2.ᐃΔᐃⲆⵠ.style.display = "inline-block";
      vThis2.ΔⵠⲆΔᐃ.style.display = "inline-block";
      vThis2.ⲆⵠⵠⲆΔᐃᐃ.style.display = "inline-block";
      vThis2.ΔⲆⵠⲆΔᐃⵠ.style.display = "inline-block";
      vThis2.ⲆᐃⲆⵠⲆ.style.display = "inline-block";
      vThis2.waiting = vVVV2122;
      vThis2.ⵠⲆⵠᐃⲆ = true;
      v2525 = -1;
      v2524 = 0;
      f488();
    };
    this.ᐃⵠᐃΔᐃΔΔ = function (p1648, p1649) {
      p1649 = p1649 < 0 ? -p1649 : p1649;
      if (v2638 === (p1648.position & v2638)) {
        if ((p1648.position & v2634) === v2634) {
          p1648.translate.x = v384 + p1648.translate.ⵠⲆⵠΔᐃ - p1649;
        } else if ((p1648.position & v2635) === v2635) {
          p1648.translate.x = v384 + p1648.translate.ⵠⲆⵠΔᐃ + p1649;
        } else {
          p1648.translate.x = v384 + p1648.translate.ⵠⲆⵠΔᐃ;
        }
      } else if ((p1648.position & v2634) === v2634) {
        p1648.translate.x = p1648.translate.ⵠⲆⵠΔᐃ - p1649;
      } else if (v2635 === (p1648.position & v2635)) {
        p1648.translate.x = v381 - p1648.translate.ⵠⲆⵠΔᐃ + p1649;
      } else {
        p1648.translate.x = p1648.translate.ⵠⲆⵠΔᐃ;
      }
      if ((p1648.position & v2639) === v2639) {
        if ((p1648.position & v2636) === v2636) {
          p1648.translate.y = v386 + p1648.translate.ΔⲆⲆᐃⲆ - p1649;
        } else if (v2637 === (p1648.position & v2637)) {
          p1648.translate.y = v386 + p1648.translate.ΔⲆⲆᐃⲆ + p1649;
        } else {
          p1648.translate.y = v386 + p1648.translate.ΔⲆⲆᐃⲆ;
        }
      } else if (v2636 === (p1648.position & v2636)) {
        p1648.translate.y = p1648.translate.ΔⲆⲆᐃⲆ - p1649;
      } else if ((p1648.position & v2637) === v2637) {
        p1648.translate.y = v382 + p1648.translate.ΔⲆⲆᐃⲆ + p1649;
      } else {
        p1648.translate.y = p1648.translate.ΔⲆⲆᐃⲆ;
      }
      if (p1648.style !== vVVVUndefined1975) {
        p1648.style.left = Math.floor(p1648.translate.x) + "px";
        p1648.style.top = Math.floor(p1648.translate.y) + "px";
      }
    };
    this.ᐃΔⵠ = function () {
      var v2526 = 0;
      if (v2524 != 30 || v2525 != -1) {
        if (v2524 != 30) {
          v2526 = 1500 / (v2524 + 1) - 50;
        }
        if (v2525 != -1) {
          v2526 = -(1750 / (30 - v2525 + 1) - 48);
        }
      }
      for (var v2527 = 0; v2527 < this.ᐃⵠⲆⲆ.length; v2527++) {
        this.ᐃⵠᐃΔᐃΔΔ(this.ᐃⵠⲆⲆ[v2527], v2526);
      }
      for (v2527 = 0; v2527 < this.buttons.length; v2527++) {
        this.ᐃⵠᐃΔᐃΔΔ(this.buttons[v2527].info, v2526);
      }
      for (v2527 = 0; v2527 < this.ᐃⲆᐃΔᐃ.length; v2527++) {
        this.ᐃⵠᐃΔᐃΔΔ(this.ᐃⲆᐃΔᐃ[v2527], v2526);
      }
      this.ᐃⵠᐃⲆⵠᐃᐃ.translate.x = (v381 - this.ᐃⵠᐃⲆⵠᐃᐃ.ⵠΔ.width) / 2;
      this.ᐃⵠᐃⲆⵠᐃᐃ.translate.y = 0;
      this.ⲆⵠⵠⲆΔᐃᐃ.translate.x = v381 - 450;
      this.ⲆⵠⵠⲆΔᐃᐃ.translate.y = v382 - 40;
      this.ΔⲆⵠⲆΔᐃⵠ.translate.x = v381 - 340;
      this.ΔⲆⵠⲆΔᐃⵠ.translate.y = v382 - 25;
      this.ⲆᐃⲆⵠⲆ.translate.x = v381 - 320;
      this.ⲆᐃⲆⵠⲆ.translate.y = 80;
      if (v2524 != 30 || v2525 != -1) {
        var v2528 = 0;
        if (v2524 != 30) {
          v2528 = 1500 / (v2524 + 1) - 50;
        }
        if (v2525 != -1) {
          v2528 = -(1750 / (30 - v2525 + 1) - 48);
        }
        this.ᐃⵠᐃⲆⵠᐃᐃ.translate.y -= v2528 > 0 ? v2528 : -v2528;
        this.ⲆⵠⵠⲆΔᐃᐃ.translate.y -= v2528 < 0 ? v2528 : -v2528;
        this.ΔⲆⵠⲆΔᐃⵠ.translate.y -= v2528 < 0 ? v2528 : -v2528;
      }
      this.ⲆⵠⵠⲆΔᐃᐃ.ᐃΔⵠ();
      this.ΔⲆⵠⲆΔᐃⵠ.ᐃΔⵠ();
      this.ⲆᐃⲆⵠⲆ.ᐃΔⵠ();
    };
    this.ᐃᐃⲆᐃᐃΔⵠ = function (p1650) {
      var v2529 = document.createElement("canvas");
      var v2530 = v2529.getContext("2d");
      v2529.width = 342;
      v2529.height = 342;
      var v2531 = -Math.PI / 2;
      for (var v2532 = 0; p1650.length > v2532; v2532++) {
        var v2533 = p1650[v2532][0];
        var v2534 = p1650[v2532][1] * Math.PI / 180;
        v2530.beginPath();
        v2530.arc(171, 171, 170, v2531, v2531 + v2534, false);
        v2530.lineTo(171, 171);
        v2530.fillStyle = v2533;
        v2530.fill();
        v2531 += v2534;
      }
      return v2529;
    };
    this.ⵠⵠΔⵠⵠⲆᐃⲆⵠ = function () {
      this.ⲆᐃΔⲆᐃⲆⵠ = document.getElementById("account_nickname_input").value;
      if (this.ΔⵠᐃΔⵠΔⵠ !== this.ⲆᐃΔⲆᐃⲆⵠ) {
        this.ΔⵠᐃΔⵠΔⵠ = this.ⲆᐃΔⲆᐃⲆⵠ;
        this.ΔΔΔⵠⲆΔᐃ = f421(this.ⲆᐃΔⲆᐃⲆⵠ, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550);
      }
    };
    this.ΔⵠⵠΔ = function () {
      f278();
      v2812.ΔⵠᐃⲆⲆᐃⵠ = ⲆΔΔ.ⵠⲆΔⵠⲆ(v2812.ΔⵠᐃⲆⲆᐃⵠ, v2812.ΔⲆΔΔⲆⲆⲆ, 0.03);
      this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ].translate.x = this.ᐃⵠⲆⲆ[0].translate.x + -72 + v2812.ΔⵠᐃⲆⲆᐃⵠ * 165;
      this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ].translate.ⵠⲆⵠΔᐃ = this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ].translate.x;
      this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ].translate.y = this.ᐃⵠⲆⲆ[0].translate.y + 30;
      this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ].translate.ΔⲆⲆᐃⲆ = this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ].translate.y;
      for (var v2535 = 2; this.ᐃⵠⲆⲆ.length > v2535; v2535++) {
        if (this.ᐃⵠⲆⲆ[v2535].active === v2643) {
          this.ᐃⵠⲆⲆ[v2535].ΔⵠⵠΔ(p1641);
        }
      }
      var v2536;
      if ((v2536 = this.ᐃⵠΔⲆᐃ - Date.now()) > 0) {
        var v2537 = Math.floor(v2536 / 60000);
        var v2538 = Math.floor(v2537 / 60);
        v2537 %= 60;
        if (this.ΔⵠⵠⲆΔⲆᐃ !== v2537) {
          this.ΔⵠⵠⲆΔⲆᐃ = v2537;
          v2537 = v2537 < 10 ? "0" + v2537 : "" + v2537;
          vThis2.ΔΔⵠᐃⵠⲆⲆ = f421(v2537, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (this.ⵠᐃⲆⲆΔΔΔ !== v2538) {
          this.ⵠᐃⲆⲆΔΔΔ = v2538;
          v2538 = v2538 < 10 ? "0" + v2538 : "" + v2538;
          vThis2.ⵠᐃⵠⵠΔΔⲆ = f421(v2538, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2540 = this.ᐃⵠⲆⲆ[ⲆⵠΔΔᐃᐃΔ]).ΔⵠⵠΔ(p1641);
        var v2539 = this.ⵠᐃⵠⵠΔΔⲆ;
        f294(p1641, v2539, v2540.translate.x - v2539.width / 4 + 182, v2540.translate.y - v2539.height / 4 + 40, v2539.width / 2, v2539.height / 2);
        v2539 = this.ΔΔⵠᐃⵠⲆⲆ;
        f294(p1641, v2539, v2540.translate.x - v2539.width / 4 + 251, v2540.translate.y - v2539.height / 4 + 40, v2539.width / 2, v2539.height / 2);
      }
      if ((v2536 = this.ⵠᐃᐃᐃᐃⵠΔ - Date.now()) > 0) {
        v2537 = Math.floor(v2536 / 60000);
        v2538 = Math.floor(v2537 / 60);
        var v2540;
        var v2541 = Math.floor(v2538 / 24);
        v2537 %= 60;
        v2538 %= 24;
        if (this.ᐃⲆᐃⵠΔⵠⲆ !== v2537) {
          this.ᐃⲆᐃⵠΔⵠⲆ = v2537;
          v2537 = v2537 < 10 ? "0" + v2537 : "" + v2537;
          vThis2.ⵠⵠⲆⲆᐃⲆΔ = f421(v2537, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (this.ᐃⲆᐃⵠⲆᐃΔ !== v2538) {
          this.ᐃⲆᐃⵠⲆᐃΔ = v2538;
          v2538 = v2538 < 10 ? "0" + v2538 : "" + v2538;
          vThis2.ⵠΔΔᐃⵠⵠⵠ = f421(v2538, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        if (v2541 !== this.ⲆᐃΔⲆᐃⵠⵠ) {
          this.ⲆᐃΔⲆᐃⵠⵠ = v2541;
          v2541 = v2541 < 10 ? "0" + v2541 : "" + v2541;
          vThis2.ΔⵠΔᐃⵠᐃⲆ = f421(v2541, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
        }
        (v2540 = this.ᐃⵠⲆⲆ[ⵠⵠⲆⵠΔᐃΔ]).ΔⵠⵠΔ(p1641);
        v2539 = this.ΔⵠΔᐃⵠᐃⲆ;
        f294(p1641, v2539, v2540.translate.x - v2539.width / 4 + 113, v2540.translate.y - v2539.height / 4 + 40, v2539.width / 2, v2539.height / 2);
        v2539 = this.ⵠΔΔᐃⵠⵠⵠ;
        f294(p1641, v2539, v2540.translate.x - v2539.width / 4 + 182, v2540.translate.y - v2539.height / 4 + 40, v2539.width / 2, v2539.height / 2);
        v2539 = this.ⵠⵠⲆⲆᐃⲆΔ;
        f294(p1641, v2539, v2540.translate.x - v2539.width / 4 + 251, v2540.translate.y - v2539.height / 4 + 40, v2539.width / 2, v2539.height / 2);
      }
      if (v2551 === (this.ⵠⵠᐃΔⲆ & v2551)) {
        this.buttons[ᐃΔᐃΔⵠⲆⵠ].info.state = v2166;
      } else if (v2557 === (this.ⵠⵠᐃΔⲆ & v2557)) {
        this.buttons[ΔᐃⲆΔⵠᐃΔ].info.state = v2166;
      } else if (v2554 === (this.ⵠⵠᐃΔⲆ & v2554)) {
        this.buttons[ΔᐃᐃⲆᐃΔΔ].info.state = v2166;
      } else if (v2552 === (this.ⵠⵠᐃΔⲆ & v2552)) {
        this.buttons[ΔⵠᐃΔΔⵠᐃ].info.state = v2166;
      } else if (v2556 === (this.ⵠⵠᐃΔⲆ & v2556)) {
        this.buttons[ⵠⵠⲆΔΔᐃⵠ].info.state = v2166;
      } else if (v2553 === (this.ⵠⵠᐃΔⲆ & v2553)) {
        this.buttons[ᐃⵠⵠᐃⵠⲆᐃ].info.state = v2166;
      } else if (v2555 === (this.ⵠⵠᐃΔⲆ & v2555) || (this.ⵠⵠᐃΔⲆ & v2561) === v2561 || v2562 === (this.ⵠⵠᐃΔⲆ & v2562) || (this.ⵠⵠᐃΔⲆ & v2563) === v2563 || (this.ⵠⵠᐃΔⲆ & v2564) === v2564 || v2565 === (this.ⵠⵠᐃΔⲆ & v2565) || v2566 === (this.ⵠⵠᐃΔⲆ & v2566)) {
        this.buttons[ᐃΔⵠⵠⲆⵠᐃ].info.state = v2166;
      } else if (v2567 === (this.ⵠⵠᐃΔⲆ & v2567) || (this.ⵠⵠᐃΔⲆ & v2569) === v2569 || (this.ⵠⵠᐃΔⲆ & v2568) === v2568 || v2570 === (this.ⵠⵠᐃΔⲆ & v2570) || (this.ⵠⵠᐃΔⲆ & v2571) === v2571 || (this.ⵠⵠᐃΔⲆ & v2572) === v2572) {
        this.buttons[ΔᐃᐃⲆᐃΔΔ].info.state = v2166;
      } else if (v2575 === (this.ⵠⵠᐃΔⲆ & v2575) || v2576 === (this.ⵠⵠᐃΔⲆ & v2576) || (this.ⵠⵠᐃΔⲆ & v2577) === v2577) {
        this.buttons[ΔᐃⲆΔⲆΔΔ].info.state = v2166;
      } else if (v2578 === (this.ⵠⵠᐃΔⲆ & v2578)) {
        this.buttons[ΔⵠᐃΔΔⵠᐃ].info.state = v2166;
      }
      if ((this.ⵠⵠᐃΔⲆ & v2557) === v2557) {
        if (this.ΔⲆⵠⵠⲆΔⲆ === this.ΔⲆⲆⲆⲆⲆΔ) {
          this.ⲆᐃᐃΔⵠⵠᐃ = this.ᐃᐃⵠΔΔⲆⲆ;
          this.buttons[this.ᐃᐃⵠΔΔⲆⲆ].info.active = v2642;
          this.buttons[this.ⲆΔⲆⲆⲆⲆⲆ].info.active = v2642;
          this.buttons[this.ⵠΔΔⲆᐃⵠⲆ].info.active = v2642;
        } else {
          this.buttons[this.ᐃᐃⵠΔΔⲆⲆ].info.active = v2643;
          this.buttons[this.ⲆΔⲆⲆⲆⲆⲆ].info.active = v2643;
          this.buttons[this.ⵠΔΔⲆᐃⵠⲆ].info.active = v2643;
        }
        if (this.ΔⲆⲆⲆⲆⲆΔ === this.ΔᐃⵠΔⵠΔΔ) {
          this.buttons[this.ΔᐃⵠΔⵠΔΔ].info.state = v2166;
        } else if (this.ΔⲆⲆⲆⲆⲆΔ === this.ΔⲆⲆⲆⵠⲆΔ) {
          this.buttons[this.ΔⲆⲆⲆⵠⲆΔ].info.state = v2166;
        } else if (this.ΔⲆⲆⲆⲆⲆΔ === this.ΔⲆⵠⵠⲆΔⲆ) {
          this.buttons[this.ΔⲆⵠⵠⲆΔⲆ].info.state = v2166;
        } else if (this.ΔⲆⲆⲆⲆⲆΔ === this.ⵠᐃΔⲆᐃᐃⲆ) {
          this.buttons[this.ⵠᐃΔⲆᐃᐃⲆ].info.state = v2166;
        } else if (this.ΔⲆⲆⲆⲆⲆΔ === this.ΔⵠΔᐃᐃᐃⲆ) {
          this.buttons[this.ΔⵠΔᐃᐃᐃⲆ].info.state = v2166;
        }
        if (this.ᐃᐃⵠΔΔⲆⲆ === this.ⲆᐃᐃΔⵠⵠᐃ) {
          this.buttons[this.ᐃᐃⵠΔΔⲆⲆ].info.state = v2166;
        } else if (this.ⲆΔⲆⲆⲆⲆⲆ === this.ⲆᐃᐃΔⵠⵠᐃ) {
          this.buttons[this.ⲆΔⲆⲆⲆⲆⲆ].info.state = v2166;
        } else if (this.ⲆᐃᐃΔⵠⵠᐃ === this.ⵠΔΔⲆᐃⵠⲆ) {
          this.buttons[this.ⵠΔΔⲆᐃⵠⲆ].info.state = v2166;
        }
        if (this.ΔⲆᐃⵠΔᐃΔ === this.ⲆΔᐃⲆΔⲆⵠ) {
          this.buttons[this.ⲆΔᐃⲆΔⲆⵠ].info.state = v2166;
        } else if (this.ΔⲆᐃⵠΔᐃΔ === this.ᐃΔⵠⲆⵠⲆⲆ) {
          this.buttons[this.ᐃΔⵠⲆⵠⲆⲆ].info.state = v2166;
        } else if (this.ⲆᐃᐃⵠΔⲆⲆ === this.ΔⲆᐃⵠΔᐃΔ) {
          this.buttons[this.ⲆᐃᐃⵠΔⲆⲆ].info.state = v2166;
        }
        if (this.ⵠⲆᐃⲆⲆⲆΔ === this.ⲆⵠᐃⵠΔᐃⲆ) {
          this.buttons[this.ⵠⲆᐃⲆⲆⲆΔ].info.state = v2166;
        } else if (this.ⲆⵠᐃⵠΔᐃⲆ === this.ΔⵠⵠᐃΔΔⲆ) {
          this.buttons[this.ΔⵠⵠᐃΔΔⲆ].info.state = v2166;
        } else if (this.Δᐃᐃᐃᐃᐃⵠ === this.ⲆⵠᐃⵠΔᐃⲆ) {
          this.buttons[this.Δᐃᐃᐃᐃᐃⵠ].info.state = v2166;
        } else if (this.ⵠⵠᐃΔΔΔΔ === this.ⲆⵠᐃⵠΔᐃⲆ) {
          this.buttons[this.ⵠⵠᐃΔΔΔΔ].info.state = v2166;
        } else if (this.ⲆⵠᐃⵠΔᐃⲆ === this.ᐃᐃΔᐃⲆⵠⵠ) {
          this.buttons[this.ᐃᐃΔᐃⲆⵠⵠ].info.state = v2166;
        } else if (this.ⲆΔΔⵠⵠⲆⲆ === this.ⲆⵠᐃⵠΔᐃⲆ) {
          this.buttons[this.ⲆΔΔⵠⵠⲆⲆ].info.state = v2166;
        }
      }
      if ((this.ⵠⵠᐃΔⲆ & v2552) === v2552) {
        if (this.ᐃᐃⲆⵠⲆΔⲆ === -1) {
          this.buttons[vV25507].info.state = v2166;
        } else if (this.ᐃᐃⲆⵠⲆΔⲆ === 0) {
          this.buttons[vV25508].info.state = v2166;
        } else if (this.ᐃᐃⲆⵠⲆΔⲆ === 2) {
          this.buttons[vV255010].info.state = v2166;
        } else if (this.ᐃᐃⲆⵠⲆΔⲆ === 3) {
          this.buttons[vV255011].info.state = v2166;
        } else if (this.ᐃᐃⲆⵠⲆΔⲆ === 4) {
          this.buttons[vV25509].info.state = v2166;
        }
        if (this.ΔᐃᐃⲆⲆⲆⲆ === 0) {
          this.buttons[vV2550].info.state = v2166;
        } else if (this.ΔᐃᐃⲆⲆⲆⲆ === 1) {
          this.buttons[vV25502].info.state = v2166;
        } else if (this.ΔᐃᐃⲆⲆⲆⲆ === 2) {
          this.buttons[vV25503].info.state = v2166;
        } else if (this.ΔᐃᐃⲆⲆⲆⲆ === 3) {
          this.buttons[vV25504].info.state = v2166;
        } else if (this.ΔᐃᐃⲆⲆⲆⲆ === 4) {
          this.buttons[vV25505].info.state = v2166;
        } else if (this.ΔᐃᐃⲆⲆⲆⲆ === 5) {
          this.buttons[vV25506].info.state = v2166;
        }
      }
      if (v2551 === (this.ⵠⵠᐃΔⲆ & v2551) && v2816.ⲆΔᐃᐃΔΔⲆ === 0) {
        if (this.buttons[v2649].ΔᐃⵠΔΔⵠΔ(v3026.ⵠᐃΔⵠ)) {
          this.buttons[v2649].hint = Math.min(1, this.buttons[v2649].hint + v3027 * 1.5);
        } else {
          this.buttons[v2649].hint = Math.max(0, this.buttons[v2649].hint - v3027 * 1.5);
        }
        if (this.buttons[v2650].ΔᐃⵠΔΔⵠΔ(v3026.ⵠᐃΔⵠ)) {
          this.buttons[v2650].hint = Math.min(1, this.buttons[v2650].hint + v3027 * 1.5);
        } else {
          this.buttons[v2650].hint = Math.max(0, this.buttons[v2650].hint - v3027 * 1.5);
        }
        if (this.buttons[v2651].ΔᐃⵠΔΔⵠΔ(v3026.ⵠᐃΔⵠ)) {
          this.buttons[v2651].hint = Math.min(1, this.buttons[v2651].hint + v3027 * 1.5);
        } else {
          this.buttons[v2651].hint = Math.max(0, this.buttons[v2651].hint - v3027 * 1.5);
        }
        if (this.buttons[v2654].ΔᐃⵠΔΔⵠΔ(v3026.ⵠᐃΔⵠ)) {
          this.buttons[v2654].hint = Math.min(1, this.buttons[v2654].hint + v3027 * 1.5);
        } else {
          this.buttons[v2654].hint = Math.max(0, this.buttons[v2654].hint - v3027 * 1.5);
        }
        if (this.buttons[v2652].ΔᐃⵠΔΔⵠΔ(v3026.ⵠᐃΔⵠ)) {
          this.buttons[v2652].hint = Math.min(1, this.buttons[v2652].hint + v3027 * 1.5);
        } else {
          this.buttons[v2652].hint = Math.max(0, this.buttons[v2652].hint - v3027 * 1.5);
        }
        if (this.buttons[v2653].ΔᐃⵠΔΔⵠΔ(v3026.ⵠᐃΔⵠ)) {
          this.buttons[v2653].hint = Math.min(1, this.buttons[v2653].hint + v3027 * 1.5);
        } else {
          this.buttons[v2653].hint = Math.max(0, this.buttons[v2653].hint - v3027 * 1.5);
        }
      }
      var v2542 = 1;
      if ((this.ⵠⵠᐃΔⲆ & (v2561 | v2562 | v2563 | v2564 | v2565 | v2566)) > 1) {
        v2539 = ᐃⲆ.ᐃⵠⲆᐃⲆⵠᐃ;
        p1641.save();
        p1641.translate(v384, v2648 + v2539.height / 4);
        if (this.ᐃⵠᐃΔᐃ === 1) {
          this.ΔΔᐃᐃⲆⵠΔ += v3027 / 3;
          v2542 = this.ⲆⵠΔⵠΔΔΔ - 100 / Math.pow(1 + this.ΔΔᐃᐃⲆⵠΔ, 1 + this.ΔΔᐃᐃⲆⵠΔ);
          p1641.rotate(v2542);
        }
        f294(p1641, v2539, -v2539.width / 4, -v2539.height / 4, v2539.width / 2, v2539.height / 2);
        p1641.restore();
      }
      if (v2816.ⲆΔᐃᐃΔΔⲆ === 0) {
        if (v2816.ΔⲆᐃᐃⲆ === 0) {
          this.buttons[v2649].info.state = v2166;
        } else if (v2816.ΔⲆᐃᐃⲆ === 4) {
          this.buttons[v2650].info.state = v2166;
        } else if (v2816.ΔⲆᐃᐃⲆ === 2) {
          this.buttons[v2652].info.state = v2166;
        } else if (v2816.ΔⲆᐃᐃⲆ === 3) {
          this.buttons[v2653].info.state = v2166;
        } else if (v2816.ΔⲆᐃᐃⲆ === 6) {
          this.buttons[v2651].info.state = v2166;
        } else if (v2816.ΔⲆᐃᐃⲆ === 7) {
          this.buttons[v2654].info.state = v2166;
        }
      }
      for (v2535 = 1; this.buttons.length > v2535; v2535++) {
        if (this.buttons[v2535].info.active === v2643) {
          this.buttons[v2535].ΔⵠⵠΔ(p1641);
        }
      }
      this.ᐃⵠⲆⲆ[0].ΔⵠⵠΔ(p1641);
      if ((this.ⵠⵠᐃΔⲆ & (v2574 | v2573)) > 0) {
        v2539 = this.ΔΔΔⵠⲆΔᐃ;
        f294(p1641, v2539, v384 - v2539.width / 4, 138, v2539.width / 2, v2539.height / 2);
      }
      var v2543 = Math.max(1, Math.min(18, Math.floor((v2812.ΔΔⵠᐃΔ + 3) / 2)));
      this.ᐃⵠⲆⲆ[v2543].active = v2643;
      this.ᐃⵠⲆⲆ[v2543].ΔⵠⵠΔ(p1641);
      this.ᐃⵠⲆⲆ[v2543].active = v2642;
      this.buttons[0].ΔⵠⵠΔ(p1641);
      if ((this.ⵠⵠᐃΔⲆ & (v2554 | v2569 | v2570 | v2567 | v2571)) > 1) {
        var v2544 = (this.ⵠⵠᐃΔⲆ & (v2569 | v2570 | v2567 | v2571)) > 1 ? -190 : 0;
        v2539 = ⲆⲆ[29][this.ⵠΔΔΔⲆ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 + v2544, 183, v2539.width / 2, v2539.height / 2);
        this.Δᐃⵠᐃ = (this.Δᐃⵠᐃ + v3027 * 1000) % 2000;
        var v2545 = (this.Δᐃⵠᐃ < 1000) * 4.5 ? this.Δᐃⵠᐃ / 1000 : (2000 - this.Δᐃⵠᐃ) / 1000;
        v2539 = ⲆⲆ[28][this.ⵠⵠΔΔⲆ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 - 62 + v2545 + v2544, 240, v2539.width / 2, v2539.height / 2);
        v2539 = ⲆⲆ[7][this.ⲆΔᐃⲆ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 - 54 + v2545 + v2544, 272, v2539.width / 2, v2539.height / 2);
        f294(p1641, v2539, v384 - v2539.width / 4 + 54 - v2545 + v2544, 272, v2539.width / 2, v2539.height / 2);
        v2539 = ⲆⲆ[255][this.ⲆΔᐃⲆ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 + v2544, 222, v2539.width / 2, v2539.height / 2);
        v2539 = ⲆⲆ[796][this.ⵠΔⲆΔΔ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 + v2544, 222, v2539.width / 2, v2539.height / 2);
      }
      if (v2554 === (this.ⵠⵠᐃΔⲆ & v2554)) {
        v2539 = ⲆⲆ[250][this.ⵠᐃⲆᐃᐃ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 - 61, 406 - v2539.height / 4, v2539.width / 2, v2539.height / 2);
        v2539 = ⲆⲆ[250][this.ΔΔᐃᐃⲆ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 + 53, 406 - v2539.height / 4, v2539.width / 2, v2539.height / 2);
      }
      if ((this.ⵠⵠᐃΔⲆ & v2568) === v2568) {
        v2539 = ⲆⲆ[250][this.ΔΔᐃᐃⲆ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 - 200, 268 - v2539.height / 4, v2539.width / 2, v2539.height / 2);
      }
      if ((this.ⵠⵠᐃΔⲆ & v2572) === v2572) {
        v2539 = ⲆⲆ[250][this.ⵠᐃⲆᐃᐃ][this.ΔᐃᐃᐃΔΔᐃ];
        f294(p1641, v2539, v384 - v2539.width / 4 - 200, 268 - v2539.height / 4, v2539.width / 2, v2539.height / 2);
      }
      if ((this.ⵠⵠᐃΔⲆ & (v2569 | v2570 | v2567 | v2571 | v2568 | v2572)) > 1) {
        for (v2535 = 1; v2535 < this.buttons.length; v2535++) {
          if (this.buttons[v2535].view & this.ⵠⵠᐃΔⲆ) {
            var v2546 = this.buttons[v2535].info;
            if (v2546.ᐃᐃᐃⲆᐃᐃΔ >= 0) {
              v2539 = v2546.ⵠᐃΔΔΔΔΔᐃⲆ[v2546.ᐃᐃᐃⲆᐃᐃΔ].ᐃᐃᐃ;
              f294(p1641, v2539, v2546.translate.x - v2539.width / 8 + 44.5, v2546.translate.y - v2539.height / 8 + 45.5, v2539.width / 4, v2539.height / 4);
              if (v2546.ⵠⲆⲆⲆᐃᐃⲆ !== 1) {
                v2539 = ᐃⲆ.ᐃⵠⲆᐃⵠⵠΔ;
                f294(p1641, v2539, v2546.translate.x - v2539.width / 4 + 44.5, v2546.translate.y - v2539.height / 4 + 44.5, v2539.width / 2, v2539.height / 2);
              }
            }
          }
        }
        v2539 = this.ᐃᐃΔᐃᐃᐃⵠ;
        f294(p1641, v2539, v384 - 312, 375, v2539.width / 2, v2539.height / 2);
        v2539 = this.ⲆᐃⵠⲆⵠⵠⵠ;
        f294(p1641, v2539, v384 - 312, 395, v2539.width / 2, v2539.height / 2);
      }
      if (this.ⵠΔⲆⲆⵠ !== this.ΔᐃᐃΔⵠⲆΔ) {
        this.ΔᐃᐃΔⵠⲆΔ = this.ⵠΔⲆⲆⵠ;
        this.ⵠⵠⲆⵠⵠΔⲆ = f421("" + this.ⵠΔⲆⲆⵠ, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250);
      }
      f294(p1641, this.ⵠⵠⲆⵠⵠΔⲆ, this.ᐃⵠⲆⲆ[0].translate.x + 350, 15, this.ⵠⵠⲆⵠⵠΔⲆ.w2, this.ⵠⵠⲆⵠⵠΔⲆ.ⵠΔⵠᐃⲆ);
      if (this.ΔⵠΔⵠᐃᐃⲆ !== this.ΔΔⵠᐃΔ) {
        this.ΔⵠΔⵠᐃᐃⲆ = this.ΔΔⵠᐃΔ;
        this.ᐃⵠⵠⵠΔᐃⲆ = f421("LVL " + (this.ΔΔⵠᐃΔ + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, vVVVVUndefined1972, 30, 24, undefined, undefined, undefined, vVUndefined27, "#3F3019", 20);
      }
      f294(p1641, this.ᐃⵠⵠⵠΔᐃⲆ, this.ᐃⵠⲆⲆ[0].translate.x + 94, 0, this.ᐃⵠⵠⵠΔᐃⲆ.w2, this.ᐃⵠⵠⵠΔᐃⲆ.ⵠΔⵠᐃⲆ);
      if (v2816.ⲆΔᐃᐃΔΔⲆ === 0) {
        if ((v2547 = this.buttons[v2649].hint) > 0) {
          v2539 = ᐃⲆ.ᐃⵠΔΔⲆΔⲆ;
          f294(p1641, v2539, v384 - v2539.width / 4, -36 - v2539.height * ⲆΔΔ.ᐃⲆᐃᐃΔ(1 - v2547) / 2, v2539.width / 2, v2539.height / 2);
        }
        var v2547 = this.buttons[v2650].hint;
        if (v2547 > 0) {
          v2539 = ᐃⲆ.ΔᐃⵠⲆΔⲆⵠ;
          f294(p1641, v2539, v384 - v2539.width / 4, -36 - ⲆΔΔ.ᐃⲆᐃᐃΔ(1 - v2547) * v2539.height / 2, v2539.width / 2, v2539.height / 2);
        }
        if ((v2547 = this.buttons[v2651].hint) > 0) {
          v2539 = ᐃⲆ.ⵠᐃΔⲆⲆⵠⵠ;
          f294(p1641, v2539, v384 - v2539.width / 4, -36 - v2539.height * ⲆΔΔ.ᐃⲆᐃᐃΔ(1 - v2547) / 2, v2539.width / 2, v2539.height / 2);
        }
        if ((v2547 = this.buttons[v2654].hint) > 0) {
          v2539 = ᐃⲆ.ⲆⲆⵠⲆᐃᐃΔ;
          f294(p1641, v2539, v384 - v2539.width / 4, -36 - v2539.height * ⲆΔΔ.ᐃⲆᐃᐃΔ(1 - v2547) / 2, v2539.width / 2, v2539.height / 2);
        }
        if ((v2547 = this.buttons[v2653].hint) > 0) {
          v2539 = ᐃⲆ.ⵠⲆⲆⵠⵠⵠΔ;
          f294(p1641, v2539, v384 - v2539.width / 4, -36 - ⲆΔΔ.ᐃⲆᐃᐃΔ(1 - v2547) * v2539.height / 2, v2539.width / 2, v2539.height / 2);
        }
        if ((v2547 = this.buttons[v2652].hint) > 0) {
          v2539 = ᐃⲆ.ⵠᐃⵠΔΔⲆᐃ;
          f294(p1641, v2539, v384 - v2539.width / 4, -36 - v2539.height * ⲆΔΔ.ᐃⲆᐃᐃΔ(1 - v2547) / 2, v2539.width / 2, v2539.height / 2);
        }
      }
      if (this.ᐃⵠᐃΔᐃ === 1 && Math.abs(v2542 - this.ⲆⵠΔⵠΔΔΔ) < 0.006) {
        p1641.globalAlpha = Math.min(1, this.ΔΔᐃᐃⵠⵠᐃ * 3);
        v2539 = ᐃⲆ.ᐃⵠᐃΔᐃⵠⲆ;
        p1641.save();
        p1641.translate(v384, 260);
        this.ΔΔᐃᐃⵠⵠᐃ += v3027;
        p1641.rotate(this.ΔΔᐃᐃⵠⵠᐃ);
        f294(p1641, v2539, -v2539.width / 2, -v2539.height / 2, v2539.width, v2539.height);
        p1641.restore();
        v2545 = 1.05 + Math.cos(this.ΔΔᐃᐃⵠⵠᐃ * 5) * 0.05;
        if (this.ᐃᐃᐃᐃΔΔⲆ === 0) {
          var v2548 = (v2539 = ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[this.ΔⲆΔⲆⲆⲆⵠ].ᐃᐃᐃ).width * v2545;
          var v2549 = v2539.height * v2545;
          f294(p1641, v2539, v384 - v2548 / 2, 260 - v2549 / 2, v2548, v2549);
        } else if (this.ᐃᐃᐃᐃΔΔⲆ === 1) {
          v2548 = (v2539 = ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[0].ᐃᐃᐃ).width * v2545;
          v2549 = v2545 * v2539.height;
          f294(p1641, v2539, v384 - v2548 / 2, 260 - v2549 / 2, v2548, v2549);
          v2548 = v2545 * (v2539 = ⲆΔᐃΔ.ⵠΔᐃⲆⲆ[this.ΔⲆΔⲆⲆⲆⵠ].ᐃᐃᐃ).width;
          v2549 = v2539.height * v2545;
          f294(p1641, v2539, v384 - v2548 / 2, 260 - v2549 / 2, v2548, v2549);
        } else if (this.ᐃᐃᐃᐃΔΔⲆ === 2) {
          v2548 = (v2539 = ⲆΔᐃΔ.ⲆⵠⲆⲆ[this.ΔⲆΔⲆⲆⲆⵠ].ᐃᐃᐃ).width * v2545;
          v2549 = v2545 * v2539.height;
          f294(p1641, v2539, v384 - v2548 / 2, 180 - v2549 / 2, v2548, v2549);
          v2548 = v2545 * (v2539 = ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[0].ᐃᐃᐃ).width;
          v2549 = v2539.height * v2545;
          f294(p1641, v2539, v384 - v2548 / 2, 260 - v2549 / 2, v2548, v2549);
        } else if (this.ᐃᐃᐃᐃΔΔⲆ === 3) {
          v2548 = v2545 * (v2539 = ⲆΔᐃΔ.ᐃᐃΔⲆⵠ[this.ΔⲆΔⲆⲆⲆⵠ].ᐃᐃᐃ).width;
          v2549 = v2545 * v2539.height;
          p1641.save();
          p1641.translate(v384, 260);
          p1641.rotate(Math.PI);
          f294(p1641, v2539, -v2548 / 2, -v2549 / 2, v2548, v2549);
          p1641.restore();
        } else if (this.ᐃᐃᐃᐃΔΔⲆ === 4) {
          v2548 = (v2539 = ⲆΔᐃΔ.ΔᐃⵠΔⲆ[this.ΔⲆΔⲆⲆⲆⵠ].ᐃᐃᐃ).width * v2545;
          v2549 = v2545 * v2539.height;
          f294(p1641, v2539, v384 - v2548 / 2, 260 - v2549 / 2, v2548, v2549);
        }
        v2539 = this.ΔⲆᐃΔⵠⲆⲆ;
        f294(p1641, v2539, v384 - v2539.width / 4, 340, v2539.width / 2, v2539.height / 2);
        v2539 = this.ᐃⲆⵠⲆᐃⲆΔ;
        f294(p1641, v2539, v384 - v2539.width / 4, 365, v2539.width / 2, v2539.height / 2);
        if (this.ΔΔᐃᐃⵠⵠᐃ > 6) {
          this.ᐃⵠᐃΔᐃ = 0;
          f491(v2555);
        }
        p1641.globalAlpha = 1;
      }
      v2814.alert.ΔⵠⵠΔ("#FFF", "#000");
      if (vThis2.waiting) {
        this.ᐃⵠᐃⲆⵠᐃᐃ.ΔⵠⵠΔ();
      }
    };
    var v2550 = 0;
    var v2551 = Math.pow(2, v2550++);
    var v2552 = Math.pow(2, v2550++);
    this.ΔΔᐃⲆΔ = v2552;
    var v2553 = Math.pow(2, v2550++);
    var v2554 = Math.pow(2, v2550++);
    var v2555 = Math.pow(2, v2550++);
    var v2556 = Math.pow(2, v2550++);
    var v2557 = Math.pow(2, v2550++);
    var v2558 = Math.pow(2, v2550++);
    this.ⵠᐃⵠΔΔ = v2558;
    var v2559 = Math.pow(2, v2550++);
    var v2560 = Math.pow(2, v2550++);
    var v2561 = Math.pow(2, v2550++);
    var v2562 = Math.pow(2, v2550++);
    var v2563 = Math.pow(2, v2550++);
    var v2564 = Math.pow(2, v2550++);
    var v2565 = Math.pow(2, v2550++);
    var v2566 = Math.pow(2, v2550++);
    var v2567 = Math.pow(2, v2550++);
    var v2568 = Math.pow(2, v2550++);
    var v2569 = Math.pow(2, v2550++);
    var v2570 = Math.pow(2, v2550++);
    var v2571 = Math.pow(2, v2550++);
    var v2572 = Math.pow(2, v2550++);
    var v2573 = Math.pow(2, v2550++);
    var v2574 = Math.pow(2, v2550++);
    var v2575 = Math.pow(2, v2550++);
    this.ⲆⵠᐃⲆΔ = v2575;
    var v2576 = Math.pow(2, v2550++);
    this.ΔⵠⲆⵠⵠ = v2576;
    var v2577 = Math.pow(2, v2550++);
    this.ⲆⲆΔⵠⵠ = v2577;
    var v2578 = Math.pow(2, v2550++);
    function f490(p1651, p1652, p1653) {
      for (var v2579 = 0; vThis2.ᐃⵠⲆⲆ.length > v2579; v2579++) {
        if ((vThis2.ᐃⵠⲆⲆ[v2579].view & p1651) !== 0) {
          vThis2.ᐃⵠⲆⲆ[v2579].active = p1652;
        }
      }
      for (v2579 = 0; vThis2.buttons.length > v2579; v2579++) {
        if ((vThis2.buttons[v2579].view & p1651) !== 0) {
          vThis2.buttons[v2579].info.active = p1652;
        }
      }
      for (v2579 = 0; vThis2.ᐃⲆᐃΔᐃ.length > v2579; v2579++) {
        if (vThis2.ᐃⲆᐃΔᐃ[v2579].view & p1651) {
          vThis2.ᐃⲆᐃΔᐃ[v2579].style.display = p1653;
        }
      }
    }
    this.ⵠⵠᐃΔⲆ = v2551;
    function f491(p1654) {
      if (vThis2.ⵠΔΔΔⲆⵠᐃ !== false) {
        f490(v2559, v2642, "none");
        f490(v2560, v2642, "none");
        f492();
        if (vThis2.ⵠⵠᐃΔⲆ !== p1654 && !(vThis2.ᐃⵠᐃΔᐃ >= 1)) {
          vThis2.ⲆᐃⲆⵠⲆ.style.display = v2551 === p1654 || p1654 === v2555 || v2552 === p1654 || v2557 === p1654 || v2554 === p1654 || v2556 === p1654 ? "inline-block" : "none";
          f490(vThis2.ⵠⵠᐃΔⲆ, v2642, "none");
          vThis2.ⵠⵠᐃΔⲆ = p1654;
          f490(vThis2.ⵠⵠᐃΔⲆ, v2643, "inline-block");
        }
      }
    }
    function f492() {
      var vNumber7 = Number(ᐃᐃⲆᐃ.get("starve_crate"));
      var vNumber8 = Number(ᐃᐃⲆᐃ.get("starve_dead"));
      var vNumber9 = Number(ᐃᐃⲆᐃ.get("starve_book"));
      var vNumber10 = Number(ᐃᐃⲆᐃ.get("starve_bag"));
      var vNumber11 = Number(ᐃᐃⲆᐃ.get("starve_skin"));
      var vNumber12 = Number(ᐃᐃⲆᐃ.get("starve_accessory"));
      if (!(v2812.unlock.ⲆΔᐃⲆ[v2812.ⲆΔᐃⲆ] > 0)) {
        v2812.ⲆΔᐃⲆ = v2812.unlock.ⲆΔᐃⲆ[vNumber11] > 0 ? vNumber11 : 0;
      }
      if (!(v2812.unlock.ⵠⵠΔΔⲆ[v2812.ⵠⵠΔΔⲆ] > 0)) {
        v2812.ⵠⵠΔΔⲆ = v2812.unlock.ⵠⵠΔΔⲆ[vNumber9] > 0 ? vNumber9 : 0;
      }
      if (!(v2812.unlock.ΔΔᐃᐃⲆ[v2812.ΔΔᐃᐃⲆ] > 0)) {
        v2812.ΔΔᐃᐃⲆ = v2812.unlock.ΔΔᐃᐃⲆ[vNumber8] > 0 ? vNumber8 : 0;
      }
      if (!(v2812.unlock.ⵠᐃⲆᐃᐃ[v2812.ⵠᐃⲆᐃᐃ] > 0)) {
        v2812.ⵠᐃⲆᐃᐃ = v2812.unlock.ⵠᐃⲆᐃᐃ[vNumber7] > 0 ? vNumber7 : 0;
      }
      if (!(v2812.unlock.ⵠΔⲆΔΔ[v2812.ⵠΔⲆΔΔ] > 0)) {
        v2812.ⵠΔⲆΔΔ = v2812.unlock.ⵠΔⲆΔΔ[vNumber12] > 0 ? vNumber12 : 0;
      }
      if (!(v2812.unlock.ⵠΔΔΔⲆ[v2812.ⵠΔΔΔⲆ] > 0)) {
        v2812.ⵠΔΔΔⲆ = v2812.unlock.ⵠΔΔΔⲆ[vNumber10] > 0 ? vNumber10 : 0;
      }
    }
    function f493() {
      f492();
      if (v3052 % 2) {
        console.log(undefined);
        v2816.connect();
      } else {
        console.log(vVVVVUndefined197);
        if (vWindow.Widget.isBlocked === 1) {
          vWindow.Widget.createAdPlayer(v2816.connect.bind(v2816), v2816.connect.bind(v2816));
        } else {
          vWindow.Widget.preroll();
          vWindow.Widget.play = v2816.connect.bind(v2816);
        }
      }
    }
    function f494(p1655, p1656, p1657) {
      const v2580 = new XMLHttpRequest();
      v2580.open("GET", p1655);
      v2580.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v2580.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          if (p1656 !== undefined) {
            p1656(v2580.responseText);
          }
        } else if (this.readyState == 4 && p1657 !== undefined) {
          p1657();
        }
      };
      v2580.send();
    }
    function f495(p1658) {
      if (v2814.ⲆᐃΔΔⵠᐃᐃ !== vVVUndefined197 && v2814.ⵠΔΔⲆⵠᐃᐃ !== vVVUndefined272 && v2814.ⵠᐃΔᐃᐃⲆⵠ !== vVVVUndefined272 && v2814.ⲆΔⵠⵠᐃⲆᐃ !== undefined) {
        p1658();
      }
    }
    this.ΔⲆΔⲆΔΔⵠ = 0;
    this.ᐃⲆⲆΔ = f491;
    this.ΔΔᐃⲆⲆⵠΔ = function (p1659, p1660) {
      let v2581 = "0";
      let v2582 = 0;
      if (vUndefined5) {
        v2581 = vUndefined5 + vF29.ⲆⲆᐃΔᐃΔΔ();
      }
      if (v2814.ⲆᐃΔΔⵠᐃᐃ) {
        f495(p1659);
      } else {
        f494(`${v3060}token?id=${v2581}`, function (p1661) {
          if (v2582 === 1) {
            return;
          }
          const v2583 = p1661.split("_");
          const v2584 = v2583[0] + "_";
          const vNumber13 = Number(v2583[1]);
          const v2585 = Math.abs(f25(vNumber13));
          v2814.ⲆᐃΔΔⵠᐃᐃ = v2584 + v2585;
          f495(p1659);
        }, function () {
          if (v2582 !== 1) {
            if (p1660 === 1) {
              v2582 = 1;
              p1659();
              return;
            } else {
              vThis2.waiting = vVVVV21222;
              return;
            }
          }
        });
      }
      f494(`${v3061}let`, function (p1662) {
        if (v2582 === 1) {
          return;
        }
        var v2586 = 137;
        if (v2586 >= 3) {
          v2586 = 47;
        }
        var v2587 = 163;
        if (v2587 > 4) {
          v2587 = 67;
        }
        var v2588 = 233;
        var v2589 = 48;
        if (v2589 === 4) {
          v2589 = 76;
        }
        if (v2588 >= 8) {
          v2588 = 138;
        }
        var v2590 = 131;
        if (v2590 == 4) {
          v2590 = 33;
        }
        var v2591 = 52;
        if (v2591 === 3) {
          v2591 = 121;
        }
        Math.floor(198[198 .ⵠⵠᐃⲆⵠⲆⵠ]);
        p1662 = p1662.split(":");
        var v2592 = 0;
        if (v2592 === 9) {
          v2592 = 70;
        }
        {
          var v2593 = 98;
          if (v2593 > 0) {
            v2593 = 237;
          }
          if (173 === 53) {
            169;
          }
          var v2594 = 3;
          if (v2594 === 11) {
            v2594 = 90;
          }
          const v2595 = 102;
          const v2596 = 101;
          Math.floor(101[v2596.ⵠΔᐃᐃΔᐃⵠ]);
          if (180 <= 102) {
            69;
          }
          const v2597 = p1662[0].split("_");
          var v2598 = 51;
          if (v2598 === 9) {
            v2598 = 173;
          }
          var v2599 = 4;
          if (v2599 > 14) {
            v2599 = 252;
          }
          var v2600 = 194;
          if (v2600 >= 3) {
            v2600 = 47;
          }
          if (225 === 30) {
            98;
          }
          const v2601 = v2597[0] + "_";
          const vNumber14 = Number(v2597[1]);
          ({}).ⵠⲆΔⲆⵠⵠᐃⲆⲆ = 13;
          var v2602 = 189;
          if (v2602 == 10) {
            v2602 = 125;
          }
          const v2603 = Math.abs(f468(vNumber14));
          v2814.ⵠΔΔⲆⵠᐃᐃ = v2601 + v2603;
          var v2604 = 2;
          if (v2604 === 4) {
            v2604 = 154;
          }
          if (197 === 149) {
            49;
          }
          v2814.ΔΔΔΔⲆᐃᐃ = v2603;
        }
        {
          if (156 > 94) {
            28;
          }
          var v2605 = 225;
          var v2606 = 133;
          if (v2606 > 14) {
            v2606 = 65;
          }
          if (v2605 >= 10) {
            v2605 = 129;
          }
          var v2607 = 50;
          if (v2607 === 4) {
            v2607 = 151;
          }
          var v2608 = 150;
          if (v2608 === 12) {
            v2608 = 80;
          }
          var v2609 = 249;
          var v2610 = 140;
          if (v2610 >= 4) {
            v2610 = 197;
          }
          if (v2609 === 9) {
            v2609 = 16;
          }
          const v2611 = p1662[1].split("_");
          const v2612 = v2611[0] + "_";
          var v2613 = 180;
          if (165 === 38) {
            90;
          }
          if (v2613 > 6) {
            v2613 = 28;
          }
          let v2614 = 210;
          let v2615 = 253;
          75 .ΔⲆΔᐃⵠΔΔᐃⲆ = 7;
          if (v2614 < v2615) {
            45;
          }
          var v2616 = 110;
          if (v2616 > 3) {
            v2616 = 46;
          }
          const vNumber15 = Number(v2611[1]);
          var v2617 = 108;
          if (v2617 >= 5) {
            v2617 = 64;
          }
          2 .ΔⵠᐃΔⲆΔⲆⵠΔ = 10;
          var v2618 = 227;
          if (v2618 === 3) {
            v2618 = 79;
          }
          129 .ΔᐃΔⵠⲆᐃⵠᐃⲆ = 10;
          const v2619 = Math.abs(f75(vNumber15));
          v2814.ⵠᐃΔᐃᐃⲆⵠ = v2612 + v2619;
          var v2620 = 72;
          if (v2620 > 0) {
            v2620 = 233;
          }
          v2814.ⲆΔᐃⲆⵠᐃⵠᐃᐃ = v2619;
          const v2621 = 130;
          Math.floor(130[v2621.ΔⵠⲆⵠᐃⵠⵠ]);
          224 .ᐃⵠⵠΔⲆᐃᐃⵠⲆ = 6;
          var v2622 = 156;
          if (v2622 === 6) {
            v2622 = 69;
          }
          const v2623 = 97;
          Math.floor(97[v2623.ⵠⵠⲆⵠᐃⵠΔ]);
        }
        {
          const v2624 = p1662[2].split("_");
          const v2625 = v2624[0] + "_";
          193 .ⲆΔΔⲆᐃⵠΔⲆΔ = 9;
          var v2626 = 176;
          if (v2626 >= 1) {
            v2626 = 137;
          }
          74 .ⵠΔⵠᐃᐃⲆⵠⲆᐃ = 10;
          const v2627 = 49;
          Math.floor(49[v2627.ⲆᐃⵠΔᐃᐃΔ]);
          const v2628 = 152;
          Math.floor(152[v2628.ᐃᐃⵠΔᐃΔⲆ]);
          const vNumber16 = Number(v2624[1]);
          var v2629 = 238;
          if (v2629 >= 3) {
            v2629 = 4;
          }
          var v2630 = 45;
          187 .ⲆⵠᐃⵠᐃⲆΔⲆⲆ = 2;
          if (v2630 === 7) {
            v2630 = 146;
          }
          const v2631 = Math.abs(f75(vNumber16));
          v2814.ⲆΔⵠⵠᐃⲆᐃ = v2625 + v2631;
          v2814.ᐃⵠⵠΔⵠⵠΔⲆⵠ = v2631;
        }
        Math.floor(104[104 .ⵠΔⵠⵠⵠⵠⲆ]);
        var v2632 = 134;
        if (v2632 === 3) {
          v2632 = 183;
        }
        var v2633 = 161;
        if (v2633 === 12) {
          v2633 = 185;
        }
        f495(p1659);
      }, function () {
        if (v2582 !== 1) {
          if (p1660 === 1) {
            v2582 = 1;
            p1659();
            return;
          } else {
            vThis2.waiting = v21;
            return;
          }
        }
      });
    };
    this.ⵠΔᐃᐃᐃⵠᐃ = function () {
      if (vThis2.waiting === false) {
        v2814.reconnect.enabled = vVVVV212;
        vThis2.waiting = vVV243;
        vThis2.ΔΔᐃⲆⲆⵠΔ(f493);
      }
    };
    var v2634 = 1;
    var v2635 = 2;
    var v2636 = 4;
    var v2637 = 8;
    var v2638 = 16;
    var v2639 = 32;
    var v2640 = 1;
    var v2641 = 0;
    var v2642 = 0;
    var v2643 = 1;
    if (vWindow.innerWidth < 1300) {
      this.ᐃΔᐃⲆⵠ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2643,
        position: v2636 | v2634,
        view: v2551,
        translate: {
          ⵠⲆⵠΔᐃ: 200,
          x: 0,
          ΔⲆⲆᐃⲆ: 184,
          y: 0
        }
      };
    } else {
      this.ᐃΔᐃⲆⵠ = {
        id: document.getElementById("nickname_block"),
        style: document.getElementById("nickname_block").style,
        input: document.getElementById("nickname_input"),
        active: v2643,
        position: v2636 | v2638,
        view: v2551,
        translate: {
          ⵠⲆⵠΔᐃ: -180,
          ΔⲆⲆᐃⲆ: 184,
          y: 0,
          x: 0
        }
      };
    }
    this.ᐃΔᐃⲆⵠ.id.addEventListener("keyup", function (p1663) {
      p1663.preventDefault();
      if (p1663.keyCode == 13 && !vThis2.waiting && !vThis2.ⲆᐃⵠᐃΔΔᐃⵠⲆ) {
        vThis2.ⵠΔᐃᐃᐃⵠᐃ();
      }
    });
    this.ᐃΔᐃⲆⵠ.input.value = ᐃᐃⲆᐃ.get("starve_nickname") ? ᐃᐃⲆᐃ.get("starve_nickname") : "";
    this.ΔΔⵠⵠᐃΔⵠⲆⵠ = {
      id: document.getElementById("account_nickname_block"),
      style: document.getElementById("account_nickname_block").style,
      input: document.getElementById("account_nickname_input"),
      active: v2642,
      position: v2636 | v2638,
      view: v2552,
      translate: {
        ΔⲆⲆᐃⲆ: 110,
        ⵠⲆⵠΔᐃ: -122,
        x: 0,
        y: 0
      }
    };
    if (vWindow.innerWidth < 1300) {
      this.ΔⵠⲆΔᐃ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2643,
        position: v2636 | v2634,
        view: v2551,
        translate: {
          x: 0,
          ΔⲆⲆᐃⲆ: 225,
          ⵠⲆⵠΔᐃ: 208,
          y: 0
        }
      };
    } else {
      this.ΔⵠⲆΔᐃ = {
        id: document.getElementById("servselect"),
        style: document.getElementById("servselect").style,
        active: v2643,
        position: v2636 | v2638,
        view: v2551,
        translate: {
          ΔⲆⲆᐃⲆ: 225,
          ⵠⲆⵠΔᐃ: -180,
          y: 0,
          x: 0
        }
      };
    }
    this.ⵠⲆᐃᐃ = {
      id: document.getElementById("leaderboard"),
      style: document.getElementById("leaderboard").style,
      active: v2642,
      position: v2636 | v2638,
      view: v2557,
      translate: {
        y: 0,
        ⵠⲆⵠΔᐃ: -294.5,
        ΔⲆⲆᐃⲆ: 190,
        x: 0
      }
    };
    this.ⲆᐃⵠⲆᐃⵠⵠᐃΔ = {
      id: document.getElementById("stats_box"),
      style: document.getElementById("stats_box").style,
      active: v2642,
      position: v2636 | v2638,
      view: v2552,
      translate: {
        ΔⲆⲆᐃⲆ: 187,
        x: 0,
        y: 0,
        ⵠⲆⵠΔᐃ: 125
      }
    };
    this.ΔΔⲆᐃⵠⵠⲆΔⲆ = {
      id: document.getElementById("serverAddressBlock"),
      style: document.getElementById("serverAddressBlock").style,
      input: document.getElementById("serverAddressInput"),
      active: v2642,
      position: v2636 | v2638,
      view: v2577,
      translate: {
        ⵠⲆⵠΔᐃ: -260,
        x: 0,
        y: 0,
        ΔⲆⲆᐃⲆ: 350
      }
    };
    v2550 = 0;
    this.ᐃⲆᐃΔᐃ = [];
    this.ᐃⲆᐃΔᐃ[v2550++] = this.ᐃΔᐃⲆⵠ;
    this.ᐃⲆᐃΔᐃ[v2550++] = this.ΔⵠⲆΔᐃ;
    this.ᐃⲆᐃΔᐃ[v2550++] = this.ⵠⲆᐃᐃ;
    this.ᐃⲆᐃΔᐃ[v2550++] = this.ΔΔⵠⵠᐃΔⵠⲆⵠ;
    this.ᐃⲆᐃΔᐃ[v2550++] = this.ⲆᐃⵠⲆᐃⵠⵠᐃΔ;
    this.ᐃⲆᐃΔᐃ[v2550++] = this.ΔΔⲆᐃⵠⵠⲆΔⲆ;
    v2550 = 0;
    this.ᐃⵠⲆⲆ = [];
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.Δᐃⵠⵠᐃⵠᐃ, v2643, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ᐃⵠΔᐃΔⵠⲆ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⲆᐃΔⵠⲆΔⲆ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ΔⵠᐃΔᐃΔΔ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠΔⵠᐃⲆΔⲆ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠⲆⲆΔⵠⲆⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⲆΔⵠΔᐃΔᐃ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ᐃⵠⲆΔⵠᐃⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ΔᐃⵠⵠⲆᐃⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ᐃΔⲆⵠΔⵠᐃ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ᐃᐃΔΔⲆᐃᐃ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠⵠΔⵠΔᐃΔ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ΔΔⲆᐃⲆⲆⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⲆΔᐃⵠᐃᐃᐃ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠⵠⲆᐃΔⲆⲆ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.Ⲇⵠᐃⵠⵠⵠⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ΔⵠΔΔⲆⲆⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠⵠⲆⵠᐃᐃⵠ, v2642, 0, 0, v2634);
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠⵠΔⵠⲆⵠΔ, v2642, 0, 0, v2634);
    if (vWindow.innerWidth < 1300) {
      this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⵠⲆⵠⲆⲆⲆ, v2643, 200, 100, v2636 | v2634);
    } else {
      this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⵠⲆⵠⲆⲆⲆ, v2643, -753 / 4, 100, v2636 | v2638);
    }
    this.ᐃⵠⲆⲆ[v2550++].view = v2551;
    this.ᐃⵠⲆⲆ[v2550++] = f422(ᐃⲆ.ⵠΔⲆΔΔΔᐃ, v2643, 403, -10, v2635);
    if (vWindow.innerWidth > 1300) {
      this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠᐃⲆⲆⵠΔⵠ, v2643, -885 / 4, -159.5, v2637 | v2638);
      this.ᐃⵠⲆⲆ[v2550++].view = v2551;
    }
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⵠⲆᐃᐃⵠΔ, v2642, -323.25, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2552;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ΔΔΔⵠᐃⵠⲆ, v2642, -356.25, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2554;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⲆⲆⲆⵠⲆᐃ, v2642, -905 / 4, 50, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2553;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⲆⲆⲆᐃⲆΔⲆ, v2642, -402, 130, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2555;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⲆΔⲆᐃᐃᐃΔ, v2642, -279.25, 130, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2575;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⲆⲆⵠΔΔⲆ, v2642, -1222 / 4, 130, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2576;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠᐃⵠᐃⲆΔᐃ, v2642, -1222 / 4, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2577;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⲆⲆᐃΔΔᐃ, v2642, -ᐃⲆ.ⵠⲆⲆᐃΔΔᐃ.width / 4 - 350, -15, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2578;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ΔΔΔⲆⲆᐃⵠ, v2642, -374.25, 110, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2556;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ᐃᐃΔᐃⵠΔⵠ, v2642, -1226 / 4, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2557;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⲆⵠΔΔⵠᐃ, v2642, -1381 / 4, 80, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2558;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ᐃⲆⵠⲆᐃⲆⵠ, v2642, -1542 / 4, 150, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2561;
    var v2644 = 3.6;
    var v2645 = this.ᐃᐃⲆᐃᐃΔⵠ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2644 * 57]]);
    this.ᐃⵠⲆⲆ[v2550] = f422(v2645, v2642, -v2645.width / 4, 178, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2561;
    this.ⵠΔᐃᐃᐃΔⲆⵠᐃ = function (p1664, p1665, p1666) {
      var v2646;
      vThis2.ᐃⵠᐃΔᐃ = 1;
      vThis2.ΔΔᐃᐃⲆⵠΔ = 0;
      vThis2.ΔΔᐃᐃⵠⵠᐃ = 0;
      vThis2.ⲆⵠΔⵠΔΔΔ = p1664;
      vThis2.ᐃᐃᐃᐃΔΔⲆ = p1665;
      var v2647 = 0;
      if (p1665 === 0) {
        for (v2647 = 0; ⲆΔᐃΔ.ᐃΔⵠⲆⵠ.length > v2647 && ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[v2647].id !== p1666; v2647++);
        v2646 = ⲆΔᐃΔ.ᐃΔⵠⲆⵠ[v2647];
        vThis2.unlock.ⲆΔᐃⲆ[v2647] = 1;
      } else if (p1665 === 1) {
        for (v2647 = 0; v2647 < ⲆΔᐃΔ.ⵠΔᐃⲆⲆ.length && ⲆΔᐃΔ.ⵠΔᐃⲆⲆ[v2647].id !== p1666; v2647++);
        v2646 = ⲆΔᐃΔ.ⵠΔᐃⲆⲆ[v2647];
        vThis2.unlock.ⵠΔⲆΔΔ[v2647] = 1;
      } else if (p1665 === 2) {
        for (v2647 = 0; v2647 < ⲆΔᐃΔ.ⲆⵠⲆⲆ.length && ⲆΔᐃΔ.ⲆⵠⲆⲆ[v2647].id !== p1666; v2647++);
        v2646 = ⲆΔᐃΔ.ⲆⵠⲆⲆ[v2647];
        vThis2.unlock.ⵠΔΔΔⲆ[v2647] = 1;
      } else if (p1665 === 3) {
        for (v2647 = 0; ⲆΔᐃΔ.ᐃᐃΔⲆⵠ.length > v2647 && ⲆΔᐃΔ.ᐃᐃΔⲆⵠ[v2647].id !== p1666; v2647++);
        v2646 = ⲆΔᐃΔ.ᐃᐃΔⲆⵠ[v2647];
        vThis2.unlock.ⵠⵠΔΔⲆ[v2647] = 1;
      } else if (p1665 === 4) {
        for (v2647 = 0; ⲆΔᐃΔ.ΔᐃⵠΔⲆ.length > v2647 && p1666 !== ⲆΔᐃΔ.ΔᐃⵠΔⲆ[v2647].id; v2647++);
        v2646 = ⲆΔᐃΔ.ΔᐃⵠΔⲆ[v2647];
        vThis2.unlock.ⵠᐃⲆᐃᐃ[v2647] = 1;
        vThis2.unlock.ΔΔᐃᐃⲆ[v2647] = 1;
      }
      vThis2.ΔⲆΔⲆⲆⲆⵠ = v2647;
      vThis2.ᐃⲆⵠⲆᐃⲆΔ = f421("by " + v2646.ΔΔᐃ, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, vVVVUndefined272, 30, 24, undefined, undefined, undefined, undefined, "#000000", 24);
      vThis2.ΔⲆᐃΔⵠⲆⲆ = f421(v2646.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, vVVVUndefined1972, 30, 24, vVVUndefined27, undefined, vVVUndefined273, undefined, "#000000", 20);
    };
    this.ᐃⵠᐃΔᐃ = 0;
    this.ΔΔᐃᐃⲆⵠΔ = 0;
    this.ⲆⵠΔⵠΔΔΔ = 0;
    this.ᐃᐃᐃᐃΔΔⲆ = 0;
    this.ΔΔᐃᐃⵠⵠᐃ = 0;
    this.ᐃⲆⵠⲆᐃⲆΔ = vVVVVUndefined197;
    this.ΔⲆᐃΔⵠⲆⲆ = undefined;
    var v2648 = 197;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠᐃⲆⲆΔⲆᐃ, v2642, -385.5, 150, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2565;
    v2645 = this.ᐃᐃⲆᐃᐃΔⵠ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2644 * 57]]);
    this.ᐃⵠⲆⲆ[v2550] = f422(v2645, v2642, -v2645.width / 4, 178, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2565;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⵠⵠⵠⲆΔΔ, v2642, -385.5, 150, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2563;
    v2645 = this.ᐃᐃⲆᐃᐃΔⵠ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2644 * 57]]);
    this.ᐃⵠⲆⲆ[v2550] = f422(v2645, v2642, -v2645.width / 4, 178, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2563;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⲆᐃᐃⲆⲆⲆΔ, v2642, -1542 / 4, 150, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2564;
    v2645 = this.ᐃᐃⲆᐃᐃΔⵠ([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", v2644 * 57]]);
    this.ᐃⵠⲆⲆ[v2550] = f422(v2645, v2642, -v2645.width / 4, 178, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2564;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ᐃⵠᐃⲆⲆⵠⲆ, v2642, -1542 / 4, 150, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2562;
    v2645 = this.ᐃᐃⲆᐃᐃΔⵠ([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", v2644 * 57]]);
    this.ᐃⵠⲆⲆ[v2550] = f422(v2645, v2642, -v2645.width / 4, 178, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2562;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ΔᐃⲆⲆᐃᐃΔ, v2642, -385.5, 150, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2566;
    v2645 = this.ᐃᐃⲆᐃᐃΔⵠ([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", v2644 * 57]]);
    this.ᐃⵠⲆⲆ[v2550] = f422(v2645, v2642, -v2645.width / 4, 178, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2566;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ᐃΔᐃᐃΔⲆⵠ, v2642, -1366 / 4, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2567;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠᐃⵠⲆᐃΔⵠ, v2642, -341.5, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2571;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⲆⲆΔⲆΔⵠᐃ, v2642, -341.5, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2569;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠᐃᐃⲆⲆΔΔ, v2642, -1366 / 4, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2570;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠΔⲆΔΔⲆⲆ, v2642, -1366 / 4, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2568;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠᐃⲆⲆᐃⲆⵠ, v2642, -341.5, 100, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2572;
    ⲆⵠΔΔᐃᐃΔ = v2550++;
    this.ᐃⵠⲆⲆ[ⲆⵠΔΔᐃᐃΔ] = f422(ᐃⲆ.ⲆⵠΔΔᐃᐃΔ, v2642, 484, 0, v2636);
    ⵠⵠⲆⵠΔᐃΔ = v2550++;
    this.ᐃⵠⲆⲆ[ⵠⵠⲆⵠΔᐃΔ] = f422(ᐃⲆ.ⵠⵠⲆⵠΔᐃΔ, v2642, 812.5, 0, v2636);
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ΔⲆᐃⵠᐃⲆΔ, v2642, -758 / 4, -5, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2560;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ⵠⵠⵠⵠⵠΔⲆ, v2642, -758 / 4, -5, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2559;
    ⲆᐃⵠⲆⲆᐃΔ = v2550++;
    this.ᐃⵠⲆⲆ[ⲆᐃⵠⲆⲆᐃΔ] = f422(ᐃⲆ.ᐃᐃΔⵠⲆΔⲆ, v2643, 93, 30, v2636);
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ΔⵠᐃΔⵠΔΔ, v2642, -173, 110, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2573;
    this.ᐃⵠⲆⲆ[v2550] = f422(ᐃⲆ.ᐃⵠⲆᐃⵠΔⲆ, v2642, -173, 110, v2636 | v2638);
    this.ᐃⵠⲆⲆ[v2550++].view = v2574;
    v2550 = 0;
    this.buttons = [];
    this.buttons[v2550] = f418(50, 57, 0, [ᐃⲆ.ⲆⲆⲆⲆΔⵠᐃ, ᐃⲆ.ΔᐃΔᐃΔΔᐃ, ᐃⲆ.ᐃᐃᐃⵠⵠΔⵠ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f491(v2558);
      } else {
        f491(v2553);
      }
    }, 320, 0, v2634, v2643);
    v2550++;
    if (vWindow.innerWidth < 1300) {
      this.buttons[v2550] = f418(202, 97, 0, [ᐃⲆ.ⲆᐃⵠᐃⲆⲆΔ, ᐃⲆ.ⲆⵠΔⲆᐃⲆⲆ, ᐃⲆ.ΔⵠⵠⵠⲆⲆΔ], v2640, v2641, this.ⵠΔᐃᐃᐃⵠᐃ, 462, 235, v2636 | v2634, v2643);
    } else {
      this.buttons[v2550] = f418(202, 97, 0, [ᐃⲆ.ⲆᐃⵠᐃⲆⲆΔ, ᐃⲆ.ⲆⵠΔⲆᐃⲆⲆ, ᐃⲆ.ΔⵠⵠⵠⲆⲆΔ], v2640, v2641, this.ⵠΔᐃᐃᐃⵠᐃ, 74, 235, v2636 | v2638, v2643);
    }
    this.buttons[v2550].view = v2551;
    v2550++;
    if (vWindow.innerWidth > 1300) {
      this.buttons[v2550] = f418(355, 168, 0, [ᐃⲆ.ΔΔⵠᐃΔⵠⲆ, ᐃⲆ.ΔΔⵠᐃΔⵠⲆ, ᐃⲆ.ΔΔⵠᐃΔⵠⲆ], v2640, v2641, function () {
        vWindow.open("./changelog.html", "_blank");
      }, -195, -115, v2637 | v2638, v2643);
      this.buttons[v2550++].view = v2551;
      this.buttons[v2550] = f418(355, 168, 0, [ᐃⲆ.ⵠⵠΔᐃⵠⲆⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆⲆ, ᐃⲆ.ⵠⵠΔᐃⵠⲆⲆ], v2640, v2641, function () {
        vWindow.open("https://taming.io", "_blank");
      }, 20, -115, v2637 | v2638, v2643);
      this.buttons[v2550++].view = v2551;
    }
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ⵠᐃᐃⲆᐃⲆᐃ, ᐃⲆ.ⲆⲆⲆⵠΔᐃⲆ, ᐃⲆ.ⵠⵠᐃⲆⲆᐃⲆ], v2640, v2641, function () {
      vWindow.open("https://lapamauve.creator-spring.com/", "_blank");
    }, 380, 10, v2635, v2643);
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ΔᐃⵠⵠⵠᐃⲆ, ᐃⲆ.ⵠᐃⲆⲆⲆΔᐃ, ᐃⲆ.ⵠΔⲆᐃⵠⲆΔ], v2640, v2641, function () {
      vWindow.open("https://discord.gg/starveio", "_blank");
    }, 330, 10, v2635, v2643);
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ᐃΔⲆⲆᐃⵠⲆ, ᐃⲆ.ⵠᐃⵠⲆᐃⵠⲆ, ᐃⲆ.ΔΔⵠⲆⲆⲆΔ], v2640, v2641, function () {
      vWindow.open("https://reddit.com/r/starveio", "_blank");
    }, 280, 10, v2635, v2643);
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ⵠⵠΔΔΔᐃΔ, ᐃⲆ.ⵠⲆΔᐃⵠⵠΔ, ᐃⲆ.ΔΔⲆΔᐃⲆΔ], v2640, v2641, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, 230, 10, v2635, v2643);
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ᐃⲆᐃⵠⵠⵠⵠ, ᐃⲆ.ΔᐃΔᐃΔᐃⵠ, ᐃⲆ.ⲆⲆΔⵠⲆⲆⲆ], v2640, v2641, function () {
      vWindow.open("https://www.facebook.com/LapaMauve/", "_blank");
    }, 155, 10, v2635, v2643);
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ⲆⲆⲆⵠᐃᐃΔ, ᐃⲆ.ⵠⲆΔᐃᐃΔⵠ, ᐃⲆ.ⵠⲆᐃΔᐃᐃⲆ], v2640, v2641, function () {
      vWindow.open("https://twitter.com/lapamauve", "_blank");
    }, 105, 10, v2635, v2643);
    this.buttons[v2550++] = f418(80, 80, 0, [ᐃⲆ.ΔΔᐃⵠⲆᐃΔ, ᐃⲆ.ΔⵠⲆⲆᐃⲆⲆ, ᐃⲆ.ΔΔΔⵠΔᐃΔ], v2640, v2641, function () {
      vWindow.open("https://www.youtube.com/@lapamauveofficial", "_blank");
    }, 55, 10, v2635, v2643);
    ΔᐃⲆΔⵠᐃΔ = v2550++;
    this.buttons[ΔᐃⲆΔⵠᐃΔ] = f418(232, 142, 0, [ᐃⲆ.ⵠΔᐃΔⵠΔᐃ, ᐃⲆ.ΔⵠᐃΔᐃⲆΔ, ᐃⲆ.ⵠᐃᐃⵠⲆᐃΔ], v2640, v2641, function () {
      f491(v2557);
      f533(v2812.ᐃᐃⵠΔΔⲆⲆ, v2812.ΔⲆⵠⵠⲆΔⲆ, v2812.ᐃΔⵠⲆⵠⲆⲆ, v2812.ⲆΔΔⵠⵠⲆⲆ);
    }, -5, 573, v2634, v2643);
    this.buttons[v2550++] = f418(236, 165, 0, [ᐃⲆ.ᐃⵠⲆᐃⵠⲆΔ, ᐃⲆ.ᐃⵠⲆᐃⵠⲆΔ, ᐃⲆ.ᐃⵠⲆᐃⵠⲆΔ], v2640, 1, function () {
      f491(v2557);
    }, -5, 566, v2634, v2643);
    ⵠⵠⲆΔΔᐃⵠ = v2550++;
    this.buttons[ⵠⵠⲆΔΔᐃⵠ] = f418(236, 165, 0, [ᐃⲆ.ᐃΔⵠⵠᐃⵠⲆ, ᐃⲆ.ᐃⲆⵠΔⵠⵠᐃ, ᐃⲆ.ΔⵠᐃⵠΔⵠΔ], v2640, v2641, function () {
      f491(v2556);
    }, -5, 494, v2634, v2643);
    this.buttons[v2550++] = f418(236, 165, 0, [ᐃⲆ.ⲆᐃΔΔⵠⲆⵠ, ᐃⲆ.ⲆᐃΔΔⵠⲆⵠ, ᐃⲆ.ⲆᐃΔΔⵠⲆⵠ], v2640, 1, function () {
      f491(v2556);
    }, -5, 494, v2634, v2643);
    ΔᐃⲆΔⲆΔΔ = v2550++;
    this.buttons[ΔᐃⲆΔⲆΔΔ] = f418(236, 165, 0, [ᐃⲆ.ᐃΔⵠⵠᐃⵠⲆ, ᐃⲆ.ᐃⲆⵠΔⵠⵠᐃ, ᐃⲆ.ΔⵠᐃⵠΔⵠΔ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        if (v2812.ⵠᐃᐃᐃᐃⵠΔ - Date.now() > 0) {
          f491(v2577);
        } else {
          f491(v2575);
        }
      } else {
        f491(v2553);
      }
    }, -5, 415, v2634, v2643);
    this.buttons[v2550++] = f418(236, 165, 0, [ᐃⲆ.ⲆᐃΔⲆⵠΔⲆ, ᐃⲆ.ⲆᐃΔⲆⵠΔⲆ, ᐃⲆ.ⲆᐃΔⲆⵠΔⲆ], v2640, 1, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        if (v2812.ⵠᐃᐃᐃᐃⵠΔ - Date.now() > 0) {
          f491(v2577);
        } else {
          f491(v2575);
        }
      } else {
        f491(v2553);
      }
    }, -5, 415, v2634, v2643);
    ᐃΔⵠⵠⲆⵠᐃ = v2550++;
    this.buttons[ᐃΔⵠⵠⲆⵠᐃ] = f418(236, 165, 0, [ᐃⲆ.ᐃΔⵠⵠᐃⵠⲆ, ᐃⲆ.ᐃⲆⵠΔⵠⵠᐃ, ᐃⲆ.ΔⵠᐃⵠΔⵠΔ], v2640, v2641, function () {
      f491(v2555);
    }, -5, 336, v2634, v2643);
    this.buttons[v2550++] = f418(236, 165, 0, [ᐃⲆ.ⲆᐃⵠⵠΔΔⵠ, ᐃⲆ.ⲆᐃⵠⵠΔΔⵠ, ᐃⲆ.ⲆᐃⵠⵠΔΔⵠ], v2640, 1, function () {
      f491(v2555);
    }, -5, 336, v2634, v2643);
    ΔᐃᐃⲆᐃΔΔ = v2550++;
    this.buttons[ΔᐃᐃⲆᐃΔΔ] = f418(236, 165, 0, [ᐃⲆ.ᐃΔⵠⵠᐃⵠⲆ, ᐃⲆ.ᐃⲆⵠΔⵠⵠᐃ, ᐃⲆ.ΔⵠᐃⵠΔⵠΔ], v2640, v2641, function () {
      f491(v2554);
    }, -5, 257, v2634, v2643);
    this.buttons[v2550++] = f418(236, 165, 0, [ᐃⲆ.ⵠⲆᐃΔΔⵠⵠ, ᐃⲆ.ⵠⲆᐃΔΔⵠⵠ, ᐃⲆ.ⵠⲆᐃΔΔⵠⵠ], v2640, 1, function () {
      f491(v2554);
    }, -5, 257, v2634, v2643);
    ᐃΔᐃΔⵠⲆⵠ = v2550++;
    this.buttons[ᐃΔᐃΔⵠⲆⵠ] = f418(236, 165, 0, [ᐃⲆ.ᐃΔⵠⵠᐃⵠⲆ, ᐃⲆ.ᐃⲆⵠΔⵠⵠᐃ, ᐃⲆ.ΔⵠᐃⵠΔⵠΔ], v2640, v2641, function () {
      f491(v2551);
    }, -5, 178, v2634, v2643);
    this.buttons[v2550++] = f418(236, 165, 0, [ᐃⲆ.ⲆΔⵠᐃΔⲆΔ, ᐃⲆ.ⲆΔⵠᐃΔⲆΔ, ᐃⲆ.ⲆΔⵠᐃΔⲆΔ], v2640, 1, function () {
      f491(v2551);
    }, -5, 178, v2634, v2643);
    ᐃⵠⵠᐃⵠⲆᐃ = v2550++;
    this.ᐃⵠⵠᐃⵠⲆᐃ = ᐃⵠⵠᐃⵠⲆᐃ;
    this.buttons[ᐃⵠⵠᐃⵠⲆᐃ] = f418(324, 222, 0, [ᐃⲆ.ᐃᐃⲆᐃΔᐃΔ, ᐃⲆ.ⵠΔᐃⲆⲆΔᐃ, ᐃⲆ.ⵠⵠΔⵠᐃᐃΔ], v2640, v2641, function () {
      f491(v2553);
    }, 0, 70, v2634, v2643);
    ΔⵠᐃΔΔⵠᐃ = v2550++;
    ΔⲆⲆᐃⵠⵠⵠ = v2550++;
    this.ΔⵠᐃΔΔⵠᐃ = ΔⵠᐃΔΔⵠᐃ;
    this.ΔⲆⲆᐃⵠⵠⵠ = ΔⲆⲆᐃⵠⵠⵠ;
    this.buttons[ΔⵠᐃΔΔⵠᐃ] = f418(324, 222, 0, [ᐃⲆ.ΔΔΔᐃⵠⲆⵠ, ᐃⲆ.ⵠⵠⲆⵠⲆⲆΔ, ᐃⲆ.ⲆⲆᐃⲆⵠⲆᐃ], v2640, v2641, function () {
      f491(v2552);
      f496(-1);
    }, 0, 70, v2634, v2642);
    this.buttons[ΔⲆⲆᐃⵠⵠⵠ] = f418(324, 222, 0, [ᐃⲆ.ⲆⲆⵠᐃΔⵠΔ, ᐃⲆ.ⲆⲆⵠᐃΔⵠΔ, ᐃⲆ.ⲆⲆⵠᐃΔⵠΔ], v2640, 1, function () {
      f491(v2552);
      f496(-1);
    }, 0, 70, v2634, v2642);
    if (v2816.ⲆΔᐃᐃΔΔⲆ === 0) {
      var v2649 = v2550++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2649] = f418(266, 176, 0, [ᐃⲆ.ᐃΔΔΔⵠᐃᐃ, ᐃⲆ.ⵠᐃⲆᐃΔⵠΔ, ᐃⲆ.ⲆⵠΔⲆⲆⵠΔ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(0);
        }, 150, 300, v2634 | v2636, v2643);
      } else {
        this.buttons[v2649] = f418(266, 176, 0, [ᐃⲆ.ᐃΔΔΔⵠᐃᐃ, ᐃⲆ.ⵠᐃⲆᐃΔⵠΔ, ᐃⲆ.ⲆⵠΔⲆⲆⵠΔ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(0);
        }, -340, 100, v2638 | v2636, v2643);
      }
      this.buttons[v2649].view = v2551;
      this.buttons[v2649].hint = 0;
      var v2650 = v2550++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2650] = f418(266, 176, 0, [ᐃⲆ.ⲆⲆⵠᐃᐃⲆΔ, ᐃⲆ.ⵠⵠΔⵠⵠᐃⲆ, ᐃⲆ.ᐃⲆⲆⲆⲆΔᐃ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(4);
        }, 150, 400, v2634 | v2636, v2643);
      } else {
        this.buttons[v2650] = f418(266, 176, 0, [ᐃⲆ.ⲆⲆⵠᐃᐃⲆΔ, ᐃⲆ.ⵠⵠΔⵠⵠᐃⲆ, ᐃⲆ.ᐃⲆⲆⲆⲆΔᐃ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(4);
        }, -340, 200, v2638 | v2636, v2643);
      }
      this.buttons[v2650].view = v2551;
      this.buttons[v2650].hint = 0;
      var v2651 = v2550++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2651] = f418(266, 176, 0, [ᐃⲆ.ᐃⵠⲆⵠⲆⲆΔ, ᐃⲆ.ᐃᐃⵠΔⲆΔⵠ, ᐃⲆ.ⵠΔⲆⵠᐃⵠᐃ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(6);
        }, 450, 300, v2634 | v2636, v2643);
      } else {
        this.buttons[v2651] = f418(266, 176, 0, [ᐃⲆ.ᐃⵠⲆⵠⲆⲆΔ, ᐃⲆ.ᐃᐃⵠΔⲆΔⵠ, ᐃⲆ.ⵠΔⲆⵠᐃⵠᐃ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(6);
        }, -340, 300, v2638 | v2636, v2643);
      }
      this.buttons[v2651].view = v2551;
      this.buttons[v2651].hint = 0;
      var v2652 = v2550++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2652] = f418(266, 176, 0, [ᐃⲆ.ᐃⵠᐃᐃⵠΔΔ, ᐃⲆ.ΔᐃΔⵠΔⵠⲆ, ᐃⲆ.ⲆᐃΔᐃⵠⵠⲆ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(2);
        }, 300, 300, v2634 | v2636, v2643);
      } else {
        this.buttons[v2652] = f418(266, 176, 0, [ᐃⲆ.ᐃⵠᐃᐃⵠΔΔ, ᐃⲆ.ΔᐃΔⵠΔⵠⲆ, ᐃⲆ.ⲆᐃΔᐃⵠⵠⲆ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(2);
        }, 204, 100, v2638 | v2636, v2643);
      }
      this.buttons[v2652].view = v2551;
      this.buttons[v2652].hint = 0;
      var v2653 = v2550++;
      if (vWindow.innerWidth < 1300) {
        this.buttons[v2653] = f418(266, 176, 0, [ᐃⲆ.ΔⲆⵠⵠᐃⲆⵠ, ᐃⲆ.ΔⲆᐃᐃΔᐃΔ, ᐃⲆ.ΔΔΔΔⲆᐃΔ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(3);
        }, 300, 400, v2634 | v2636, v2643);
      } else {
        this.buttons[v2653] = f418(266, 176, 0, [ᐃⲆ.ΔⲆⵠⵠᐃⲆⵠ, ᐃⲆ.ΔⲆᐃᐃΔᐃΔ, ᐃⲆ.ΔΔΔΔⲆᐃΔ], v2640, v2641, function () {
          v2816.ⲆΔⲆᐃⵠ(3);
        }, 204, 200, v2638 | v2636, v2643);
      }
      this.buttons[v2653].view = v2551;
      this.buttons[v2653].hint = 0;
      var v2654 = v2550++;
      this.buttons[v2654] = f418(266, 176, 0, [ᐃⲆ.ⵠⵠⲆⵠⲆⵠⵠ, ᐃⲆ.ⵠΔᐃᐃᐃᐃΔ, ᐃⲆ.ⲆΔⵠΔᐃⵠᐃ], v2640, v2641, function () {
        v2816.ⲆΔⲆᐃⵠ(7);
      }, vWindow.innerWidth < 1300 ? 450 : 204, vWindow.innerWidth < 1300 ? 400 : 300, (vWindow.innerWidth < 1300 ? v2634 : v2638) | v2636, v2643);
      this.buttons[v2654].view = v2551;
      this.buttons[v2654].hint = 0;
    }
    function f496(p1667, p1668) {
      if (p1668 !== vVVVUndefined1972) {
        v2812.ΔᐃᐃⲆⲆⲆⲆ = p1668;
        var v2655 = v2812.ⲆⵠΔⲆⵠΔΔ[p1668];
        v2812.ⵠⵠᐃΔᐃ = v2655.score;
        v2812.ᐃᐃⵠⲆᐃ = v2655.kill;
        v2812.ⲆⵠⵠΔⲆⲆⲆ = v2655.death;
        v2812.time = v2655.time;
        v2812.ΔᐃᐃⵠⲆΔⲆ = v2655.bestScore;
        v2812.ᐃⲆΔᐃⵠⲆⲆ = v2655.bestKill;
        v2812.ⵠⵠᐃΔΔⵠΔ = v2655.bestTime;
        v2812.ᐃⲆᐃᐃⵠΔΔ = v2655.scoreTotal;
      }
      if (p1667 === undefined) {
        p1667 = v2812.ᐃᐃⲆⵠⲆΔⲆ;
      }
      v2812.ᐃᐃⲆⵠⲆΔⲆ = p1667;
      if (p1667 >= 0) {
        document.getElementById("stats_box_time").innerHTML = v2812.ⵠⵠᐃΔΔⵠΔ[p1667];
        document.getElementById("stats_box_kill").innerHTML = v2812.ᐃⲆΔᐃⵠⲆⲆ[p1667];
        document.getElementById("stats_box_score").innerHTML = v2812.ΔᐃᐃⵠⲆΔⲆ[p1667];
      } else {
        var v2656 = 0;
        for (var v2657 = 0; v2657 < v2812.ᐃᐃⵠⲆᐃ.length; v2657++) {
          v2656 += v2812.ᐃᐃⵠⲆᐃ[v2657];
        }
        var v2658 = 0;
        for (v2657 = 0; v2812.time.length > v2657; v2657++) {
          v2658 += v2812.time[v2657];
        }
        document.getElementById("stats_box_time").innerHTML = v2658;
        document.getElementById("stats_box_kill").innerHTML = v2656;
        document.getElementById("stats_box_score").innerHTML = v2812.ⵠⵠᐃΔᐃ;
      }
    }
    this.buttons[v2550] = f418(87, 78, 0, [ᐃⲆ.ⲆⲆᐃᐃⲆΔᐃ, ᐃⲆ.ⵠᐃⵠᐃᐃⲆΔ, ᐃⲆ.ᐃᐃⲆᐃⵠⵠⵠ], v2640, v2641, function () {
      v2812.ⵠⵠΔⵠⵠⲆᐃⲆⵠ();
      if (v2812.ᐃΔⲆᐃⲆⲆⵠ === 0) {
        f491(v2574);
      } else {
        f491(v2573);
      }
    }, 127, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    this.buttons[v2550] = f418(87, 78, 0, [ᐃⲆ.ⵠⲆⵠⲆⲆᐃⵠ, ᐃⲆ.ⲆⲆᐃⵠⵠⵠΔ, ᐃⲆ.ΔⵠⲆΔΔⲆⲆ], v2640, v2641, function () {
      const v2659 = vWindow.document.createElement("textarea");
      v2659.value = vUndefined5;
      vWindow.document.body.appendChild(v2659);
      v2659.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2659);
    }, 182, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    this.buttons[v2550] = f418(87, 78, 0, [ᐃⲆ.ⵠᐃⵠᐃⲆⲆⲆ, ᐃⲆ.ᐃⵠⵠⲆⵠⵠᐃ, ᐃⲆ.ⵠⵠΔᐃⵠⵠⵠ], v2640, v2641, function () {
      (function () {
        if (vVVVVUndefined1973 === v3063 && vWindow.FB && vWindow.FB.getUserID()) {
          vWindow.FB.logout();
        }
        if (vVVVVUndefined1973 === v3062 && vUndefined6 !== undefined) {
          vWindow.gapi.auth2.getAuthInstance().signOut();
          vUndefined6 = vVVVUndefined197;
        }
        vUndefined5 = undefined;
        vUndefined4 = undefined;
        vVVVVUndefined1973 = vVVUndefined198;
        v2812.ᐃⵠΔⲆᐃ = 0;
        v2812.ⵠΔⲆⲆⵠ = 0;
        v2812.ⵠⵠᐃΔᐃ = 0;
        v2812.ⵠⲆⲆⵠΔΔΔ();
        ΔᐃΔⵠΔᐃⲆΔⵠ();
      })();
    }, 255, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    this.buttons[v2550] = f418(58, 64, 0, [ᐃⲆ.ᐃⵠᐃΔⲆⲆᐃ, ᐃⲆ.ⲆΔΔⵠΔᐃᐃ, ᐃⲆ.ⲆⲆᐃⵠΔΔⵠ], v2640, v2641, function () {
      f491(v2551);
    }, 189, 118, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2553;
    this.buttons[v2550] = f418(497, 72, 0, [ᐃⲆ.ᐃΔΔⵠⲆᐃΔ, ᐃⲆ.ᐃΔⵠΔⲆΔᐃ, ᐃⲆ.ᐃⵠᐃΔᐃΔⲆ], v2640, v2641, function () {
      (function () {
        if (v2187) {
          vUndefined4 = ⲆΔΔ.ⲆᐃᐃΔΔΔΔ(40);
          vVVVVUndefined1973 = v3064;
          vUndefined5 = v2187.userId;
          vWindow.ᐃⲆⵠⵠᐃⲆⵠ();
          return;
        }
        vWindow.gapi.auth2.getAuthInstance().signIn();
      })();
    }, -130, 390, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2553;
    this.buttons[v2550] = f418(497, 72, 0, [ᐃⲆ.ⵠⲆⵠᐃⲆΔΔ, ᐃⲆ.ΔⲆΔᐃⵠΔᐃ, ᐃⲆ.ΔⵠᐃᐃⲆⵠⵠ], v2640, v2641, function () {
      vWindow.FB.login(function (p1669) {
        if (p1669.authResponse) {
          vWindow.FB.api("/me", function (p1670) {
            vVVVVUndefined1973 = v3063;
            vUndefined4 = vWindow.FB.getAuthResponse().accessToken;
            f529();
            vWindow.ᐃⲆⵠⵠᐃⲆⵠ();
          });
        }
      });
    }, -130, 430, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2553;
    ⲆⵠΔⲆᐃΔⲆ = 20000;
    this.ΔⵠΔᐃⵠⲆⲆ = function (p1671) {
      var v2660 = v2812.ⵠᐃᐃᐃᐃⲆⲆ(p1671);
      var v2661 = v2660 * v2660 * ⲆⵠΔⲆᐃΔⲆ;
      return (p1671 -= v2661) / ((v2660 + 1) * (v2660 + 1) * ⲆⵠΔⲆᐃΔⲆ - v2661);
    };
    this.ⵠᐃᐃᐃᐃⲆⲆ = function (p1672) {
      return Math.floor(Math.sqrt(p1672 / ⲆⵠΔⲆᐃΔⲆ));
    };
    this.ᐃⲆⵠΔᐃⵠⲆⲆⵠ = function (p1673) {
      v2812.ΔΔⵠᐃΔ = v2812.ⵠᐃᐃᐃᐃⲆⲆ(p1673);
      v2812.ΔⲆΔΔⲆⲆⲆ = v2812.ΔⵠΔᐃⵠⲆⲆ(p1673);
      v2812.ΔⵠᐃⲆⲆᐃⵠ = 0;
      v2812.ⵠⵠᐃΔᐃ = p1673;
    };
    this.ᐃΔⲆⲆⵠᐃᐃⲆⵠ = function (p1674) {
      v2812.buttons[v2812.ᐃⵠⵠᐃⵠⲆᐃ].info.active = 0;
      v2812.buttons[v2812.ΔⵠᐃΔΔⵠᐃ].info.active = 1;
      v2812.buttons[v2812.ΔⲆⲆᐃⵠⵠⵠ].info.active = 1;
      f486();
      if (p1674.name.indexOf("Starver#") === -1) {
        document.getElementById("account_nickname_input").value = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(p1674.name)));
      } else {
        document.getElementById("account_nickname_input").value = p1674.name;
      }
      v2812.ⵠΔⲆⲆⵠ = p1674.bread;
      var v2662 = p1674.seasons;
      var v2663 = v2662[v2662.length - 1];
      v2812.ⲆⵠΔⲆⵠΔΔ = v2662;
      vThis2.ᐃⲆⵠΔᐃⵠⲆⲆⵠ(v2663.score);
      v2812.ⵠⵠᐃΔᐃ = v2663.score;
      v2812.ᐃᐃⵠⲆᐃ = v2663.kill;
      v2812.ⲆⵠⵠΔⲆⲆⲆ = v2663.death;
      v2812.time = v2663.time;
      v2812.ΔᐃᐃⵠⲆΔⲆ = v2663.bestScore;
      v2812.ᐃⲆΔᐃⵠⲆⲆ = v2663.bestKill;
      v2812.ⵠⵠᐃΔΔⵠΔ = v2663.bestTime;
      v2812.ᐃⲆᐃᐃⵠΔΔ = v2663.scoreTotal;
      v2812.ᐃΔⲆᐃⲆⲆⵠ = p1674.firstName;
      document.getElementById("serverAddressInput").value = p1674.privateServerRegion + " : " + p1674.privateServer;
      if (v2812.ᐃΔⲆᐃⲆⲆⵠ === vVVUndefined197) {
        v2812.ᐃΔⲆᐃⲆⲆⵠ = 0;
      }
      v2812.ⵠᐃᐃᐃᐃⵠΔ = Date.now() + p1674.privateServerTime;
      if (Number(p1674.privateServerTime) > 0) {
        v2812.ⵠᐃᐃᐃᐃⵠΔ = Date.now() + Number(p1674.privateServerTime);
      }
      v2812.ᐃⵠΔⲆᐃ = Date.now() + p1674.kit;
      if (Number(p1674.kit) > 0) {
        v2812.ᐃⵠΔⲆᐃ = Date.now() + Number(p1674.kit);
      }
      var v2664 = ⲆΔᐃΔ.ᐃΔⵠⲆⵠ;
      for (var v2665 = 0; p1674.skins.length > v2665; v2665++) {
        if ((v2667 = p1674.skins[v2665]) > 0) {
          for (var v2666 = 0; v2666 < v2664.length; v2666++) {
            if (v2664[v2666].id === v2665) {
              vThis2.unlock.ⲆΔᐃⲆ[v2666] = 1;
            }
          }
        }
      }
      v2664 = ⲆΔᐃΔ.ⵠΔᐃⲆⲆ;
      v2665 = 0;
      for (; v2665 < p1674.accessories.length; v2665++) {
        var v2667 = p1674.accessories[v2665];
        if (v2667 > 0) {
          for (v2666 = 0; v2666 < v2664.length; v2666++) {
            if (v2665 === v2664[v2666].id) {
              vThis2.unlock.ⵠΔⲆΔΔ[v2666] = 1;
            }
          }
        }
      }
      v2664 = ⲆΔᐃΔ.ᐃᐃΔⲆⵠ;
      v2665 = 0;
      for (; p1674.books.length > v2665; v2665++) {
        v2667 = p1674.books[v2665];
        if (v2667 > 0) {
          for (v2666 = 0; v2664.length > v2666; v2666++) {
            if (v2665 === v2664[v2666].id) {
              vThis2.unlock.ⵠⵠΔΔⲆ[v2666] = 1;
            }
          }
        }
      }
      v2664 = ⲆΔᐃΔ.ⲆⵠⲆⲆ;
      v2665 = 0;
      for (; p1674.bags.length > v2665; v2665++) {
        v2667 = p1674.bags[v2665];
        if (v2667 > 0) {
          for (v2666 = 0; v2664.length > v2666; v2666++) {
            if (v2665 === v2664[v2666].id) {
              vThis2.unlock.ⵠΔΔΔⲆ[v2666] = 1;
            }
          }
        }
      }
      v2664 = ⲆΔᐃΔ.ΔᐃⵠΔⲆ;
      v2665 = 0;
      for (; v2665 < p1674.crates.length; v2665++) {
        v2667 = p1674.crates[v2665];
        if (v2667 > 0) {
          for (v2666 = 0; v2664.length > v2666; v2666++) {
            if (v2665 === v2664[v2666].id) {
              vThis2.unlock.ⵠᐃⲆᐃᐃ[v2666] = 1;
              vThis2.unlock.ΔΔᐃᐃⲆ[v2666] = 1;
            }
          }
        }
      }
    };
    this.ΔⲆⲆΔᐃᐃⲆⵠⲆ = function () {
      vWindow.ᐃⲆⵠⵠᐃⲆⵠ = function () {
        f491(v2551);
        (function (p1675) {
          var v2668 = new XMLHttpRequest();
          v2668.open("GET", v3060 + "login?token=" + vUndefined4 + "&type=" + vVVVVUndefined1973 + (v2187 ? "&userId=" + v2187.userId + "&userInfo=" + v2187.userInfo : ""));
          v2668.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          v2668.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200 && v2668.responseText !== "0") {
              p1675(JSON.parse(v2668.responseText));
            }
          };
          v2668.send();
        })(vThis2.ᐃΔⲆⲆⵠᐃᐃⲆⵠ);
      };
      if (v3065 === 1) {
        vWindow.ᐃⲆⵠⵠᐃⲆⵠ();
      }
    };
    vWindow.ΔᐃΔⵠΔᐃⲆΔⵠ = function () {
      v2812.buttons[v2812.ᐃⵠⵠᐃⵠⲆᐃ].info.active = 1;
      v2812.buttons[v2812.ΔⵠᐃΔΔⵠᐃ].info.active = 0;
      v2812.buttons[v2812.ΔⲆⲆᐃⵠⵠⵠ].info.active = 0;
      f491(v2551);
    };
    this.ⵠΔᐃⲆᐃ = function () {
      return v2812.buttons[v2812.ΔⵠᐃΔΔⵠᐃ].info.active;
    };
    this.buttons[v2550] = f418(461, 105, 0, [ᐃⲆ.ᐃᐃᐃΔΔⲆⲆ, ᐃⲆ.ᐃⲆⵠΔⵠⲆΔ, ᐃⲆ.ⵠⲆᐃⵠᐃⵠᐃ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f491(v2558);
      } else {
        f491(v2553);
      }
    }, -100, 80, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(157, 158, 0, [ᐃⲆ.ⵠᐃᐃⵠⲆⵠᐃ, ᐃⲆ.ΔⲆᐃⲆⲆΔᐃ, ᐃⲆ.ⵠΔⲆⵠᐃᐃΔ], v2640, v2641, function () {
      vWindow.open("https://starveiopro.wikia.com/wiki/", "_blank");
    }, -35, 125, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2556;
    this.buttons[v2550] = f418(66, 73, 0, [ᐃⲆ.ⲆΔⵠΔⵠⵠΔ, ᐃⲆ.ⵠᐃⵠΔᐃᐃⲆ, ᐃⲆ.ⵠΔⲆⲆΔΔᐃ], v2640, v2641, vVVUndefined272, -68, 340, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2556;
    this.buttons[v2550] = f418(66, 73, 0, [ᐃⲆ.ᐃᐃᐃⲆᐃⲆΔ, ᐃⲆ.ⲆᐃΔⵠⵠᐃᐃ, ᐃⲆ.ᐃⵠΔᐃᐃⵠⲆ], v2640, v2641, vVVVUndefined197, -30, 340, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2556;
    this.ⵠⲆΔⵠⵠᐃᐃⲆⵠ = v2550;
    this.buttons[v2550] = f418(97, 66, 0, [ᐃⲆ.ᐃᐃᐃⲆΔⵠⲆ, ᐃⲆ.ᐃΔⲆΔΔΔΔ, ᐃⲆ.ⵠΔⵠⵠΔᐃⲆ], v2640, v2641, function () {
      f533(undefined, vVUndefined28, v2812.ᐃΔⵠⲆⵠⲆⲆ);
    }, -14, 151, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⲆΔᐃⲆΔⲆⵠ = v2550;
    this.buttons[v2550] = f418(135, 66, 0, [ᐃⲆ.ⲆⵠΔⲆⵠⲆΔ, ᐃⲆ.ⵠⲆⵠⲆⵠⲆᐃ, ᐃⲆ.ᐃΔᐃⲆΔⵠΔ], v2640, v2641, function () {
      f533(undefined, vVVVUndefined272, v2812.ⲆΔᐃⲆΔⲆⵠ);
    }, 37.5, 151, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⲆᐃᐃⵠΔⲆⲆ = v2550;
    this.buttons[v2550] = f418(160, 66, 0, [ᐃⲆ.ⵠⵠᐃᐃⲆⲆⲆ, ᐃⲆ.ⵠⵠΔⲆΔⵠᐃ, ᐃⲆ.ᐃⵠⲆⲆΔΔΔ], v2640, v2641, function () {
      f533(vVUndefined27, vVVVVVUndefined197, v2812.ⲆᐃᐃⵠΔⲆⲆ);
    }, 107.5, 151, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ᐃΔⵠⲆⵠⲆⲆ = v2550;
    this.buttons[v2550] = f418(207, 66, 0, [ᐃⲆ.ⲆᐃⵠⵠΔⲆΔ, ᐃⲆ.ⵠⲆΔⲆΔᐃΔ, ᐃⲆ.ⲆⲆΔᐃⲆⵠΔ], v2640, v2641, function () {
      f533(vVVUndefined27, vVVVUndefined27, v2812.ᐃΔⵠⲆⵠⲆⲆ);
    }, 190.5, 151, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⵠΔΔⲆᐃⵠⲆ = v2550;
    this.buttons[v2550] = f418(144, 66, 0, [ᐃⲆ.ⲆⵠⲆⵠⲆⲆⵠ, ᐃⲆ.ⲆⵠΔᐃᐃΔΔ, ᐃⲆ.ᐃᐃΔᐃⲆᐃᐃ], v2640, v2641, function () {
      f533(v2812.ⵠΔΔⲆᐃⵠⲆ);
    }, 103.5, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⲆΔⲆⲆⲆⲆⲆ = v2550;
    this.buttons[v2550] = f418(124, 66, 0, [ᐃⲆ.ᐃⵠΔⵠⲆᐃΔ, ᐃⲆ.ⵠΔⵠΔⲆⵠⲆ, ᐃⲆ.ⲆⲆΔⲆΔᐃΔ], v2640, v2641, function () {
      f533(v2812.ⲆΔⲆⲆⲆⲆⲆ);
    }, 177.5, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ᐃᐃⵠΔΔⲆⲆ = v2550;
    this.buttons[v2550] = f418(104, 66, 0, [ᐃⲆ.ΔΔΔΔⵠᐃΔ, ᐃⲆ.ΔⲆΔΔᐃⲆΔ, ᐃⲆ.ⲆⵠⵠᐃᐃⵠⲆ], v2640, v2641, function () {
      f533(v2812.ᐃᐃⵠΔΔⲆⲆ);
    }, 242, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⵠⲆᐃⲆⲆⲆΔ = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.Ⲇⵠᐃᐃⵠⵠᐃ, ᐃⲆ.ⵠΔⲆΔᐃⲆΔ, ᐃⲆ.ΔΔᐃᐃΔⲆΔ], v2640, v2641, function () {
      f533(vVVVVUndefined1972, undefined, undefined, v2812.ⵠⲆᐃⲆⲆⲆΔ);
    }, -185, 528, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ΔⵠⵠᐃΔΔⲆ = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ΔⲆΔᐃⵠⵠᐃ, ᐃⲆ.ⲆΔᐃΔⵠⵠΔ, ᐃⲆ.ᐃⵠΔΔⲆᐃⲆ], v2640, v2641, function () {
      f533(undefined, vVVVUndefined27, vVVVUndefined1975, v2812.ΔⵠⵠᐃΔΔⲆ);
    }, -149, 528, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.Δᐃᐃᐃᐃᐃⵠ = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ᐃⲆⵠᐃⲆⲆⲆ, ᐃⲆ.ᐃⲆⲆᐃⲆᐃⵠ, ᐃⲆ.ΔΔᐃⲆⵠᐃⲆ], v2640, v2641, function () {
      f533(undefined, vVVVVUndefined1972, vVUndefined26, v2812.Δᐃᐃᐃᐃᐃⵠ);
    }, -113, 528, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⵠⵠᐃΔΔΔΔ = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ᐃᐃⲆᐃⲆⵠⲆ, ᐃⲆ.ⵠᐃᐃΔᐃᐃⲆ, ᐃⲆ.ᐃΔΔⵠᐃⲆᐃ], v2640, v2641, function () {
      f533(vVUndefined28, vVVVUndefined27, undefined, v2812.ⵠⵠᐃΔΔΔΔ);
    }, -77, 528, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ᐃᐃΔᐃⲆⵠⵠ = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ⵠⲆⲆⲆΔΔᐃ, ᐃⲆ.ⲆⲆⲆᐃΔⵠⵠ, ᐃⲆ.ⵠⲆᐃΔΔᐃⵠ], v2640, v2641, function () {
      f533(undefined, undefined, vVVVUndefined1975, v2812.ᐃᐃΔᐃⲆⵠⵠ);
    }, -41, 528, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⲆΔΔⵠⵠⲆⲆ = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ΔⲆⵠⵠⵠⵠⵠ, ᐃⲆ.ΔⲆⵠΔⵠⵠΔ, ᐃⲆ.Δᐃᐃᐃⵠⵠᐃ], v2640, v2641, function () {
      f533(vVVVUndefined273, undefined, vVVVUndefined27, v2812.ⲆΔΔⵠⵠⲆⲆ);
    }, -5, 528, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.buttons[v2550] = f418(232, 352, 0, [ᐃⲆ.ΔΔᐃΔⵠᐃᐃ, ᐃⲆ.ΔᐃΔⵠⵠⲆᐃ, ᐃⲆ.ⲆⲆᐃⲆΔΔΔ], v2640, v2641, function () {
      f528(300);
    }, -330, 135, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2558;
    this.buttons[v2550] = f418(232, 352, 0, [ᐃⲆ.ⵠΔⲆⵠΔᐃⵠ, ᐃⲆ.ᐃᐃⲆᐃΔⲆΔ, ᐃⲆ.ΔᐃᐃᐃΔⲆⲆ], v2640, v2641, function () {
      f528(600);
    }, -195, 135, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2558;
    this.buttons[v2550] = f418(243, 374, 0, [ᐃⲆ.ᐃᐃⲆⲆΔⲆⲆ, ᐃⲆ.ⲆᐃⵠⲆⲆⲆⲆ, ᐃⲆ.ⲆⲆᐃΔⲆⲆⵠ], v2640, v2641, function () {
      f528(2600);
    }, -60, 130, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2558;
    this.buttons[v2550] = f418(232, 352, 0, [ᐃⲆ.ⲆᐃⵠΔΔⵠⲆ, ᐃⲆ.ⵠⵠΔⲆΔᐃⵠ, ᐃⲆ.ⲆⵠⵠⵠⵠᐃⲆ], v2640, v2641, function () {
      f528(7000);
    }, 78, 135, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2558;
    this.buttons[v2550] = f418(243, 374, 0, [ᐃⲆ.ΔΔⵠⲆΔᐃΔ, ᐃⲆ.ᐃⲆⵠⵠΔⵠΔ, ᐃⲆ.ᐃⲆᐃⵠⵠⲆᐃ], v2640, v2641, function () {
      f528(20000);
    }, 213, 130, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2558;
    this.buttons[v2550] = f418(58, 64, 0, [ᐃⲆ.ᐃⵠᐃΔⲆⲆᐃ, ᐃⲆ.ⲆΔΔⵠΔᐃᐃ, ᐃⲆ.ⲆⲆᐃⵠΔΔⵠ], v2640, v2641, function () {
      f491(v2555);
    }, 300, 88, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2558;
    this.buttons[v2550] = f418(323, 112, 0, [ᐃⲆ.ᐃⲆⲆⵠᐃᐃⵠ, ᐃⲆ.ᐃⵠⲆⲆⲆᐃⲆ, ᐃⲆ.ⵠⵠᐃⵠⲆⲆΔ], v2640, v2641, function () {
      f491(v2567);
      v2675.ΔⲆⲆⵠⲆ();
    }, -315, 185, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2554;
    this.buttons[v2550] = f418(323, 112, 0, [ᐃⲆ.ⵠΔᐃⲆⵠᐃⵠ, ᐃⲆ.ⵠⲆΔⲆᐃΔΔ, ᐃⲆ.ⵠⲆⵠⲆⵠᐃⵠ], v2640, v2641, function () {
      f491(v2571);
      v2680.ΔⲆⲆⵠⲆ();
    }, -315, 321, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2554;
    this.buttons[v2550] = f418(323, 112, 0, [ᐃⲆ.ⲆᐃΔΔᐃⲆΔ, ᐃⲆ.ⲆΔᐃΔⲆᐃⲆ, ᐃⲆ.ⵠᐃᐃΔΔᐃⵠ], v2640, v2641, function () {
      f491(v2569);
      v2676.ΔⲆⲆⵠⲆ();
    }, 153, 185, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2554;
    this.buttons[v2550] = f418(323, 112, 0, [ᐃⲆ.ΔᐃᐃᐃΔⲆΔ, ᐃⲆ.ΔᐃᐃⲆΔΔⵠ, ᐃⲆ.ΔⵠⵠΔΔΔⲆ], v2640, v2641, function () {
      f491(v2570);
      v2677.ΔⲆⲆⵠⲆ();
    }, 153, 321, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2554;
    this.buttons[v2550] = f418(323, 112, 0, [ᐃⲆ.ᐃⲆᐃⵠᐃᐃⲆ, ᐃⲆ.ᐃᐃⲆᐃⵠⲆⵠ, ᐃⲆ.ΔⵠⲆΔΔᐃᐃ], v2640, v2641, function () {
      f491(v2568);
      v2678.ΔⲆⲆⵠⲆ();
    }, 153, 463, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2554;
    this.buttons[v2550] = f418(323, 112, 0, [ᐃⲆ.ⲆⲆᐃᐃⲆⲆᐃ, ᐃⲆ.ⲆΔΔΔⲆⵠΔ, ᐃⲆ.ⲆᐃⲆⵠⵠΔᐃ], v2640, v2641, function () {
      f491(v2572);
      v2679.ΔⲆⲆⵠⲆ();
    }, -315, 463, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2554;
    this.buttons[v2550] = f418(327, 117, 0, [ᐃⲆ.ᐃΔΔΔᐃⵠⲆ, ᐃⲆ.ᐃⵠⲆⵠΔⲆᐃ, ᐃⲆ.ᐃⵠΔᐃⵠⲆⲆ], v2640, v2641, function () {
      f491(v2578);
    }, 155, 70, v2634, v2643);
    this.buttons[v2550++].view = v2551;
    this.buttons[v2550] = f418(130, 129, 0, [ᐃⲆ.ΔᐃᐃΔⵠΔⵠ, ᐃⲆ.ΔⲆⵠⵠⵠᐃⵠ, ᐃⲆ.ΔΔᐃⵠΔᐃΔ], v2640, v2641, function () {
      f490(v2559, v2642, "none");
      f491(v2555);
    }, 10, 40, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2559;
    this.buttons[v2550] = f418(130, 129, 0, [ᐃⲆ.ΔᐃᐃΔⵠΔⵠ, ᐃⲆ.ΔⲆⵠⵠⵠᐃⵠ, ᐃⲆ.ΔΔᐃⵠΔᐃΔ], v2640, v2641, function () {
      f490(v2560, v2642, "none");
      f491(v2555);
    }, 10, 40, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2560;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 200, 140, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2575;
    this.buttons[v2550] = f418(524, 110, 0, [ᐃⲆ.ⲆᐃᐃⵠⲆⲆⲆ, ᐃⲆ.ᐃⲆΔΔⲆⵠⵠ, ᐃⲆ.ΔᐃⲆΔΔᐃΔ], v2640, v2641, function () {
      f530("Atlanta");
    }, -265, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2575;
    this.buttons[v2550] = f418(523, 110, 0, [ᐃⲆ.ΔⲆᐃⵠΔⲆⲆ, ᐃⲆ.ⲆᐃⲆΔᐃⲆᐃ, ᐃⲆ.ᐃᐃᐃⲆⵠΔⵠ], v2640, v2641, function () {
      f530("LosAngeles");
    }, 5, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2575;
    this.buttons[v2550] = f418(344, 110, 0, [ᐃⲆ.ⲆΔⵠᐃⲆΔⵠ, ᐃⲆ.ⵠⲆⲆΔΔΔⲆ, ᐃⲆ.ᐃⲆⲆΔⲆⵠΔ], v2640, v2641, function () {
      f530("Frankfurt");
    }, -265, 365, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2575;
    this.buttons[v2550] = f418(344, 110, 0, [ᐃⲆ.ΔⵠⵠΔⵠΔᐃ, ᐃⲆ.ᐃᐃⵠΔⲆⵠⵠ, ᐃⲆ.ⲆΔⵠⲆΔⵠⵠ], v2640, v2641, function () {
      f530("Osaka");
    }, 100, 365, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2575;
    this.buttons[v2550] = f418(344, 110, 0, [ᐃⲆ.ⵠΔⵠⵠΔⵠᐃ, ᐃⲆ.ⵠⵠΔᐃⲆⲆᐃ, ᐃⲆ.ⲆⲆⲆⵠᐃΔⵠ], v2640, v2641, function () {
      f530("Sydney");
    }, -86, 365, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2575;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2575);
    }, 224, 140, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2576;
    this.buttons[v2550] = f418(230, 352, 0, [ᐃⲆ.ΔⲆⵠΔᐃⲆⲆ, ᐃⲆ.ΔⵠΔΔΔⵠⲆ, ᐃⲆ.ΔᐃᐃⲆᐃΔᐃ], v2640, v2641, function () {
      f528(350);
    }, -280, 240, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2576;
    this.buttons[v2550] = f418(230, 352, 0, [ᐃⲆ.ⵠⵠΔⵠⵠⵠⵠ, ᐃⲆ.ⵠⵠΔΔⲆⵠΔ, ᐃⲆ.ⲆⲆΔΔⲆⵠⲆ], v2640, v2641, function () {
      f528(700);
    }, -130, 240, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2576;
    this.buttons[v2550] = f418(230, 352, 0, [ᐃⲆ.ⲆΔⲆⲆᐃⵠΔ, ᐃⲆ.ᐃᐃΔΔⵠᐃⵠ, ᐃⲆ.ⲆⲆⲆⵠⲆⵠⵠ], v2640, v2641, function () {
      f528(1400);
    }, 20, 240, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2576;
    this.buttons[v2550] = f418(230, 352, 0, [ᐃⲆ.ΔΔⵠⵠᐃᐃᐃ, ᐃⲆ.ΔΔⵠᐃΔᐃⵠ, ᐃⲆ.ᐃΔⲆᐃᐃᐃᐃ], v2640, v2641, function () {
      f528(3000);
    }, 170, 240, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2576;
    this.buttons[v2550] = f418(105, 119, 0, [ᐃⲆ.ⵠⵠⲆΔⵠⲆⵠ, ᐃⲆ.ΔⵠⵠⲆⵠᐃⲆ, ᐃⲆ.ⵠΔᐃᐃⵠⵠⵠ], v2640, v2641, function () {
      const v2669 = document.getElementById("serverAddressInput").value.split(" : ");
      const v2670 = vWindow.document.createElement("textarea");
      v2670.value = v2191 + "?server=" + v2669[1] + "&region=" + v2669[0];
      vWindow.document.body.appendChild(v2670);
      v2670.select();
      vWindow.document.execCommand("copy");
      vWindow.document.body.removeChild(v2670);
    }, 105, 310, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2577;
    this.buttons[v2550] = f418(105, 119, 0, [ᐃⲆ.ΔⵠΔΔᐃΔⲆ, ᐃⲆ.ᐃⲆᐃⵠⲆⵠⲆ, ᐃⲆ.ⵠⲆⵠⲆᐃⲆⲆ], v2640, v2641, function () {
      (function () {
        var v2671 = new XMLHttpRequest();
        v2671.open("GET", v3060 + "rebootServer?token=" + vUndefined4 + "&userid=" + vUndefined5);
        v2671.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2671.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2671.responseText !== "0") {
            const v2672 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2191 + "?server=" + v2672[1] + "&region=" + v2672[0];
          }
        };
        v2671.send();
      })();
    }, 235, 310, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2577;
    this.buttons[v2550] = f418(105, 119, 0, [ᐃⲆ.ⵠⵠⲆΔⵠⵠᐃ, ᐃⲆ.ΔⵠⵠΔΔᐃⵠ, ᐃⲆ.ᐃⵠᐃΔⲆᐃΔ], v2640, v2641, function () {
      (function () {
        var v2673 = new XMLHttpRequest();
        v2673.open("GET", v3060 + "restartServer?token=" + vUndefined4 + "&userid=" + vUndefined5);
        v2673.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v2673.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && v2673.responseText !== "0") {
            const v2674 = document.getElementById("serverAddressInput").value.split(" : ");
            location.href = v2191 + "?server=" + v2674[1] + "&region=" + v2674[0];
          }
        };
        v2673.send();
      })();
    }, 170, 310, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2577;
    this.buttons[v2550] = f418(204, 115, 0, [ᐃⲆ.ᐃΔᐃⲆⵠᐃⲆ, ᐃⲆ.ΔⲆΔⲆΔᐃΔ, ᐃⲆ.ᐃΔᐃⲆᐃⲆᐃ], v2640, v2641, function () {
      vWindow.open("./commands.html", "_blank");
    }, -265, 490, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2577;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ⲆⲆΔΔⲆΔⲆ, ᐃⲆ.ⵠⵠᐃΔⲆⵠⵠ, ᐃⲆ.Ⲇⵠᐃᐃⵠᐃⵠ], v2640, v2641, function () {
      f491(v2561);
    }, -210, 170, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ΔΔᐃΔⲆΔΔ, ᐃⲆ.ⵠΔΔΔⵠᐃⵠ, ᐃⲆ.ⲆΔⵠⵠᐃⲆⲆ], v2640, v2641, function () {
      f491(v2564);
    }, 70, 170, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ᐃΔᐃⲆᐃᐃⲆ, ᐃⲆ.ⲆⵠⲆⲆΔᐃⲆ, ᐃⲆ.ⲆᐃᐃΔⵠΔⲆ], v2640, v2641, function () {
      f491(v2562);
    }, 70, 204, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ᐃᐃΔⲆⵠΔⵠ, ᐃⲆ.ⲆⵠΔΔᐃΔⵠ, ᐃⲆ.ᐃⵠΔᐃᐃⲆⵠ], v2640, v2641, function () {
      f491(v2565);
    }, -210, 204, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ᐃᐃΔⲆⵠΔⵠ, ᐃⲆ.ⲆⵠΔΔᐃΔⵠ, ᐃⲆ.ᐃⵠΔᐃᐃⲆⵠ], v2640, v2641, function () {
      f491(v2566);
    }, 70, 238, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ᐃᐃΔⲆⵠΔⵠ, ᐃⲆ.ⲆⵠΔΔᐃΔⵠ, ᐃⲆ.ᐃⵠΔᐃᐃⲆⵠ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f532(0, 300);
      } else {
        f491(v2553);
      }
    }, 307, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ᐃⲆᐃΔᐃᐃⲆ, ᐃⲆ.ᐃᐃⲆΔⵠⲆⵠ, ᐃⲆ.ᐃⲆᐃⵠⵠᐃᐃ], v2640, v2641, function () {
      f491(v2563);
    }, -210, 238, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(145, 69, 0, [ᐃⲆ.ᐃⲆᐃΔᐃᐃⲆ, ᐃⲆ.ᐃᐃⲆΔⵠⲆⵠ, ᐃⲆ.ᐃⲆᐃⵠⵠᐃᐃ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f532(1, 600);
      } else {
        f491(v2553);
      }
    }, 307, 239, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    this.buttons[v2550] = f418(192, 101, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⲆⵠ, ᐃⲆ.ⲆᐃΔⲆⲆᐃⵠ, ᐃⲆ.ΔΔⵠⲆΔΔⲆ], v2640, v2641, function () {
      f535();
    }, -100, 250, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2574;
    this.buttons[v2550] = f418(192, 104, 0, [ᐃⲆ.ⲆᐃᐃᐃⲆΔⵠ, ᐃⲆ.ᐃᐃⵠⵠΔΔΔ, ᐃⲆ.ⵠΔⲆΔΔⲆᐃ], v2640, v2641, function () {
      f535();
    }, -100, 239, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2573;
    this.buttons[v2550] = f418(192, 101, 0, [ᐃⲆ.ⲆᐃᐃⵠⵠΔΔ, ᐃⲆ.ⵠΔᐃⲆᐃΔᐃ, ᐃⲆ.ΔᐃⵠΔᐃΔⵠ], v2640, v2641, function () {
      f491(v2552);
    }, 10, 250, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2574;
    this.buttons[v2550] = f418(192, 104, 0, [ᐃⲆ.ⵠᐃⵠⵠⲆᐃᐃ, ᐃⲆ.ᐃⵠΔΔⲆΔⵠ, ᐃⲆ.ⲆᐃΔΔⲆⵠⲆ], v2640, v2641, function () {
      f491(v2552);
    }, 10, 239, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2573;
    ⵠⲆⵠⲆΔ = [];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ⲆΔⲆⲆⲆ] = [ᐃⲆ.ΔⵠⲆⲆⵠⵠΔ, ᐃⲆ.ᐃΔΔⲆⵠⲆΔ, ᐃⲆ.ΔⵠⲆΔⲆⵠⲆ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ⲆⲆΔⲆ] = [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ᐃⲆΔΔ] = [ᐃⲆ.ᐃΔΔᐃᐃⵠᐃ, ᐃⲆ.ᐃⵠᐃΔᐃⲆᐃ, ᐃⲆ.ᐃⵠΔⵠᐃⲆΔ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ᐃⵠᐃᐃ] = [ᐃⲆ.ΔᐃᐃⵠⲆⲆᐃ, ᐃⲆ.ⲆⲆᐃᐃΔᐃᐃ, ᐃⲆ.ⵠΔΔⵠⲆᐃᐃ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ⲆᐃⵠΔ] = [ᐃⲆ.ⲆⲆⲆⲆⵠⵠⲆ, ᐃⲆ.ΔⲆⲆΔⲆΔᐃ, ᐃⲆ.ⵠⵠΔⵠᐃⲆᐃ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ⲆⲆⲆⵠ] = [ᐃⲆ.ᐃᐃⵠⵠⲆⲆΔ, ᐃⲆ.ⲆⲆΔⲆⲆᐃΔ, ᐃⲆ.ⲆⵠᐃᐃⵠⲆⲆ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ⲆⵠᐃⲆ] = [ᐃⲆ.ᐃⵠΔⲆΔⵠᐃ, ᐃⲆ.ⵠΔᐃⲆⵠⵠⲆ, ᐃⲆ.ⵠⵠΔⲆᐃᐃⵠ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.Ⲇᐃᐃⵠⵠ] = [ᐃⲆ.ⲆⵠΔΔⲆⵠⲆ, ᐃⲆ.ⵠⵠⲆⲆᐃᐃⵠ, ᐃⲆ.ΔⲆⲆⲆᐃⲆΔ];
    ⵠⲆⵠⲆΔ[ⵠⲆⵠ.ⲆᐃⵠΔⲆⵠⵠ] = [ᐃⲆ.ΔᐃⵠΔⲆⲆⲆ, ᐃⲆ.ⵠⵠᐃᐃⲆⲆⵠ, ᐃⲆ.ⵠᐃᐃⵠⵠⲆⵠ];
    ΔΔⲆⲆᐃΔⵠ = v2550;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined197, 65, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1975, 65, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1975, 65, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVUndefined273, 159, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⵠᐃ, ᐃⲆ.ᐃⲆⲆΔΔΔΔ, ᐃⲆ.ΔⵠΔΔΔΔⵠ], v2640, v2641, undefined, -61, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ⵠᐃⵠⲆⲆᐃⵠ, ᐃⲆ.ΔⲆⵠⵠΔⲆᐃ, ᐃⲆ.ⵠᐃⲆΔⵠΔΔ], v2640, v2641, vVVVUndefined272, 260, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2554);
    }, -320, 470, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2567;
    ⵠⵠⵠΔᐃⲆⲆⵠᐃ = v2550;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1975, -29, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVVUndefined197, -29, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVVVUndefined197, 65, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vUndefined, 159, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⵠᐃ, ᐃⲆ.ᐃⲆⲆΔΔΔΔ, ᐃⲆ.ΔⵠΔΔΔΔⵠ], v2640, v2641, undefined, -61, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ⵠᐃⵠⲆⲆᐃⵠ, ᐃⲆ.ΔⲆⵠⵠΔⲆᐃ, ᐃⲆ.ⵠᐃⲆΔⵠΔΔ], v2640, v2641, vVVUndefined27, 260, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2554);
    }, -320, 470, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2571;
    ΔⵠᐃΔⵠⵠⲆⲆᐃ = v2550;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined27, -29, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVUndefined197, -29, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVUndefined27, -29, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1974, 65, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVUndefined198, 159, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1975, 159, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⵠᐃ, ᐃⲆ.ᐃⲆⲆΔΔΔΔ, ᐃⲆ.ΔⵠΔΔΔΔⵠ], v2640, v2641, undefined, -61, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ⵠᐃⵠⲆⲆᐃⵠ, ᐃⲆ.ΔⲆⵠⵠΔⲆᐃ, ᐃⲆ.ⵠᐃⲆΔⵠΔΔ], v2640, v2641, vVVVUndefined272, 260, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2554);
    }, -320, 470, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2572;
    ᐃⲆⲆⲆⲆⲆⲆᐃΔ = v2550;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVUndefined197, -29, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vUndefined, -29, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined27, 65, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined27, 65, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined28, 159, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined27, 159, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⵠᐃ, ᐃⲆ.ᐃⲆⲆΔΔΔΔ, ᐃⲆ.ΔⵠΔΔΔΔⵠ], v2640, v2641, undefined, -61, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ⵠᐃⵠⲆⲆᐃⵠ, ᐃⲆ.ΔⲆⵠⵠΔⲆᐃ, ᐃⲆ.ⵠᐃⲆΔⵠΔΔ], v2640, v2641, undefined, 260, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2554);
    }, -320, 470, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2569;
    ᐃΔΔΔⲆⲆᐃⲆΔ = v2550;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVUndefined273, -29, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1974, -29, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined28, -29, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined26, 65, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined19, 65, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⵠᐃ, ᐃⲆ.ᐃⲆⲆΔΔΔΔ, ᐃⲆ.ΔⵠΔΔΔΔⵠ], v2640, v2641, undefined, -61, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ⵠᐃⵠⲆⲆᐃⵠ, ᐃⲆ.ΔⲆⵠⵠΔⲆᐃ, ᐃⲆ.ⵠᐃⲆΔⵠΔΔ], v2640, v2641, vVVVVVUndefined197, 260, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2554);
    }, -320, 470, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2570;
    ᐃΔⲆΔᐃΔᐃᐃⲆ = v2550;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, -29, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined27, -29, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 65, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined27, 65, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVVVUndefined1975, 65, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, vVUndefined27, 159, 205, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 300, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(178, 182, 0, [ᐃⲆ.ⲆᐃⲆᐃ, ᐃⲆ.ⵠᐃⲆΔ, ᐃⲆ.ΔᐃⲆᐃ], v2640, v2641, undefined, 159, 395, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ΔⲆᐃⲆᐃⵠᐃ, ᐃⲆ.ᐃⲆⲆΔΔΔΔ, ᐃⲆ.ΔⵠΔΔΔΔⵠ], v2640, v2641, undefined, -61, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(39, 122, 0, [ᐃⲆ.ⵠᐃⵠⲆⲆᐃⵠ, ᐃⲆ.ΔⲆⵠⵠΔⲆᐃ, ᐃⲆ.ⵠᐃⲆΔⵠΔΔ], v2640, v2641, undefined, 260, 315, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2554);
    }, -320, 470, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2568;
    this.buttons[v2550] = f418(260, 260, 0, [ᐃⲆ.ᐃΔⵠⵠᐃⵠⵠ, ᐃⲆ.ⵠᐃⲆΔᐃᐃⵠ, ᐃⲆ.ᐃΔⲆᐃᐃⵠᐃ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f531(3, 50);
      } else {
        f491(v2553);
      }
    }, -65, 197, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2564;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 309, 180, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2564;
    this.buttons[v2550] = f418(260, 260, 0, [ᐃⲆ.ⵠⲆⵠΔᐃⵠⵠ, ᐃⲆ.ⲆⵠΔᐃΔΔⵠ, ᐃⲆ.ᐃΔᐃⵠⲆΔⵠ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f531(0, 100);
      } else {
        f491(v2553);
      }
    }, -65, 197, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2561;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 309, 180, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2561;
    this.buttons[v2550] = f418(260, 260, 0, [ᐃⲆ.ΔΔⵠᐃᐃⲆⵠ, ᐃⲆ.ᐃᐃⵠⵠⵠᐃⲆ, ᐃⲆ.ⵠΔᐃᐃⲆⲆΔ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f531(4, 150);
      } else {
        f491(v2553);
      }
    }, -65, 197, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2562;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 309, 180, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2562;
    this.buttons[v2550] = f418(260, 260, 0, [ᐃⲆ.ⲆΔⵠⲆᐃⲆⵠ, ᐃⲆ.ⵠΔⲆⵠᐃⵠⵠ, ᐃⲆ.ⲆᐃⵠᐃΔⵠᐃ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f531(1, 300);
      } else {
        f491(v2553);
      }
    }, -65, 197, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2565;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 309, 180, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2565;
    this.buttons[v2550] = f418(260, 260, 0, [ᐃⲆ.ⲆᐃⲆᐃᐃⲆᐃ, ᐃⲆ.ⲆΔΔⲆⲆⲆΔ, ᐃⲆ.ⲆⲆⲆⲆⵠΔⵠ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f531(2, 600);
      } else {
        f491(v2553);
      }
    }, -65, 197, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2563;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 309, 180, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2563;
    this.buttons[v2550] = f418(260, 260, 0, [ᐃⲆ.ⲆΔⵠⲆᐃⲆⵠ, ᐃⲆ.ⵠΔⲆⵠᐃⵠⵠ, ᐃⲆ.ⲆᐃⵠᐃΔⵠᐃ], v2640, v2641, function () {
      if (vThis2.ⵠΔᐃⲆᐃ()) {
        f531(5, 300);
      } else {
        f491(v2553);
      }
    }, -65, 197, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2566;
    this.buttons[v2550] = f418(115, 73, 0, [ᐃⲆ.ⲆⵠᐃΔᐃ, ᐃⲆ.ᐃΔΔⲆΔ, ᐃⲆ.ⲆᐃΔⲆⲆ], v2640, v2641, function () {
      f491(v2555);
    }, 309, 180, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2566;
    var vV2550 = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ᐃⲆⵠⵠⲆⵠⲆ, ᐃⲆ.ᐃΔᐃⲆΔΔⲆ, ᐃⲆ.ⵠΔΔᐃⲆⲆⲆ], v2640, v2641, function () {
      f496(undefined, 0);
    }, -305, 132, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25502 = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ⵠⲆⵠⵠⵠⲆᐃ, ᐃⲆ.ⵠΔᐃᐃⲆᐃΔ, ᐃⲆ.ΔᐃΔⵠΔᐃΔ], v2640, v2641, function () {
      f496(undefined, 1);
    }, -273, 132, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25503 = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ⵠΔᐃⲆΔΔΔ, ᐃⲆ.ᐃⵠᐃᐃⲆᐃⲆ, ᐃⲆ.ΔΔⵠⵠΔᐃⲆ], v2640, v2641, function () {
      f496(vVVUndefined273, 2);
    }, -241, 132, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25504 = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ⲆᐃⵠᐃᐃⵠΔ, ᐃⲆ.ΔᐃᐃⵠΔᐃⲆ, ᐃⲆ.ⲆΔⲆⵠⵠᐃΔ], v2640, v2641, function () {
      f496(undefined, 3);
    }, -305, 165, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25505 = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ⲆΔΔⵠⲆᐃⲆ, ᐃⲆ.ΔⵠᐃⲆΔⲆᐃ, ᐃⲆ.ⵠΔⲆΔᐃⵠⲆ], v2640, v2641, function () {
      f496(undefined, 4);
    }, -273, 165, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25506 = v2550;
    this.buttons[v2550] = f418(46, 51, 0, [ᐃⲆ.ᐃΔᐃⲆΔⵠᐃ, ᐃⲆ.ᐃⲆΔΔⵠΔⵠ, ᐃⲆ.ᐃΔⵠⵠΔΔΔ], v2640, v2641, function () {
      f496(undefined, 5);
    }, -241, 165, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25507 = v2550;
    this.buttons[v2550] = f418(460, 73, 0, [ᐃⲆ.ᐃᐃⵠⵠᐃᐃⲆ, ᐃⲆ.ᐃⲆΔⵠⲆΔᐃ, ᐃⲆ.ΔⲆⵠΔᐃΔᐃ], v2640, v2641, function () {
      f496(-1);
    }, -180, 170, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25508 = v2550;
    this.buttons[v2550] = f418(222, 68, 0, [ᐃⲆ.ⵠΔⲆⲆᐃⵠᐃ, ᐃⲆ.ΔᐃⲆⵠⲆⲆⲆ, ᐃⲆ.ⵠⵠᐃΔΔⵠᐃ], v2640, v2641, function () {
      f496(0);
    }, -180, 215, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV25509 = v2550;
    this.buttons[v2550] = f418(222, 68, 0, [ᐃⲆ.ⲆᐃᐃΔΔΔⲆ, ᐃⲆ.ᐃⵠⲆⵠⲆΔΔ, ᐃⲆ.ⵠΔᐃᐃΔΔΔ], v2640, v2641, function () {
      f496(4);
    }, -180, 260, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV255010 = v2550;
    this.buttons[v2550] = f418(222, 68, 0, [ᐃⲆ.ⲆⲆⲆⵠⵠⲆᐃ, ᐃⲆ.ΔⲆΔⲆΔⵠⵠ, ᐃⲆ.ⵠᐃⵠΔΔΔⲆ], v2640, v2641, function () {
      f496(2);
    }, -60, 215, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    var vV255011 = v2550;
    this.buttons[v2550] = f418(222, 68, 0, [ᐃⲆ.ᐃΔⵠᐃⵠⵠᐃ, ᐃⲆ.ᐃᐃⵠΔᐃᐃⲆ, ᐃⲆ.ᐃᐃⵠⵠⵠⲆᐃ], v2640, v2641, function () {
      f496(3);
    }, -60, 260, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2552;
    this.ΔⲆⵠⵠⲆΔⲆ = v2550;
    this.buttons[v2550] = f418(143, 66, 0, [ᐃⲆ.ΔᐃᐃΔΔⲆᐃ, ᐃⲆ.ΔΔΔᐃΔΔⲆ, ᐃⲆ.ⲆⵠΔⲆᐃᐃⲆ], v2640, v2641, function () {
      f533(vVUndefined19, v2812.ΔⲆⵠⵠⲆΔⲆ);
    }, -298, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ΔᐃⵠΔⵠΔΔ = v2550;
    this.buttons[v2550] = f418(104, 66, 0, [ᐃⲆ.ᐃᐃΔᐃᐃΔᐃ, ᐃⲆ.ⵠⵠΔΔⲆΔΔ, ᐃⲆ.ᐃⲆᐃⵠΔΔⵠ], v2640, v2641, function () {
      f533(undefined, v2812.ΔᐃⵠΔⵠΔΔ);
    }, -223, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ΔⵠΔᐃᐃᐃⲆ = v2550;
    this.buttons[v2550] = f418(110, 66, 0, [ᐃⲆ.ᐃΔΔᐃΔⵠΔ, ᐃⲆ.ⵠΔⲆⲆⲆⵠⲆ, ᐃⲆ.ᐃⵠⲆᐃⲆᐃⵠ], v2640, v2641, function () {
      f533(vUndefined, v2812.ΔⵠΔᐃᐃᐃⲆ);
    }, -168, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ⵠᐃΔⲆᐃᐃⲆ = v2550;
    this.buttons[v2550] = f418(88, 66, 0, [ᐃⲆ.ⲆⵠΔⵠⲆᐃΔ, ᐃⲆ.ΔⲆᐃΔᐃΔⲆ, ᐃⲆ.ⵠΔΔⵠⲆⵠⵠ], v2640, v2641, function () {
      f533(vVVUndefined273, v2812.ⵠᐃΔⲆᐃᐃⲆ);
    }, -110, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.ΔⲆⲆⲆⵠⲆΔ = v2550;
    this.buttons[v2550] = f418(88, 66, 0, [ᐃⲆ.ⵠᐃᐃᐃⲆΔⵠ, ᐃⲆ.ⲆΔΔΔⲆΔᐃ, ᐃⲆ.ΔᐃⲆⲆⲆⲆⵠ], v2640, v2641, function () {
      f533(undefined, v2812.ΔⲆⲆⲆⵠⲆΔ);
    }, -63, 110, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2557;
    this.buttons[v2550] = f418(86, 44, 0, [ᐃⲆ.ⲆⲆⵠⵠⵠⲆⵠ, ᐃⲆ.ⲆⵠⲆᐃΔⲆΔ, ᐃⲆ.ᐃΔⵠΔⲆΔⵠ], v2640, v2641, function () {
      vWindow.open("./terms.html", "_blank");
    }, 349, 290, v2638 | v2636, v2642);
    this.buttons[v2550++].view = v2555;
    var v2675 = new g(ⲆΔᐃΔ.ᐃΔⵠⲆⵠ, ΔΔⲆⲆᐃΔⵠ, function (p1676) {
      v2812.ⲆΔᐃⲆ = p1676;
      if (v2812.unlock.ⲆΔᐃⲆ[p1676] === 1) {
        ᐃᐃⲆᐃ.set("starve_skin", "" + p1676, {
          expires: 30
        });
      }
    }, this.ⲆΔᐃⲆ, this.unlock.ⲆΔᐃⲆ);
    var v2676 = new g(ⲆΔᐃΔ.ⲆⵠⲆⲆ, ᐃⲆⲆⲆⲆⲆⲆᐃΔ, function (p1677) {
      v2812.ⵠΔΔΔⲆ = p1677;
      if (v2812.unlock.ⵠΔΔΔⲆ[p1677] === 1) {
        ᐃᐃⲆᐃ.set("starve_bag", "" + p1677, {
          expires: 30
        });
      }
    }, this.ⵠΔΔΔⲆ, this.unlock.ⵠΔΔΔⲆ);
    var v2677 = new g(ⲆΔᐃΔ.ᐃᐃΔⲆⵠ, ᐃΔΔΔⲆⲆᐃⲆΔ, function (p1678) {
      v2812.ⵠⵠΔΔⲆ = p1678;
      if (v2812.unlock.ⵠⵠΔΔⲆ[p1678] === 1) {
        ᐃᐃⲆᐃ.set("starve_book", "" + p1678, {
          expires: 30
        });
      }
    }, this.ⵠⵠΔΔⲆ, this.unlock.ⵠⵠΔΔⲆ);
    var v2678 = new g(ⲆΔᐃΔ.ΔᐃⵠΔⲆ, ᐃΔⲆΔᐃΔᐃᐃⲆ, function (p1679) {
      v2812.ΔΔᐃᐃⲆ = p1679;
      if (v2812.unlock.ΔΔᐃᐃⲆ[p1679] === 1) {
        ᐃᐃⲆᐃ.set("starve_dead", "" + p1679, {
          expires: 30
        });
      }
    }, this.ΔΔᐃᐃⲆ, this.unlock.ΔΔᐃᐃⲆ);
    var v2679 = new g(ⲆΔᐃΔ.ΔᐃⵠΔⲆ, ΔⵠᐃΔⵠⵠⲆⲆᐃ, function (p1680) {
      v2812.ⵠᐃⲆᐃᐃ = p1680;
      if (v2812.unlock.ⵠᐃⲆᐃᐃ[p1680] === 1) {
        ᐃᐃⲆᐃ.set("starve_crate", "" + p1680, {
          expires: 30
        });
      }
    }, this.ⵠᐃⲆᐃᐃ, this.unlock.ⵠᐃⲆᐃᐃ);
    var v2680 = new g(ⲆΔᐃΔ.ⵠΔᐃⲆⲆ, ⵠⵠⵠΔᐃⲆⲆⵠᐃ, function (p1681) {
      v2812.ⵠΔⲆΔΔ = p1681;
      if (v2812.unlock.ⵠΔⲆΔΔ[p1681] === 1) {
        ᐃᐃⲆᐃ.set("starve_accessory", "" + p1681, {
          expires: 30
        });
      }
    }, this.ⵠΔⲆΔΔ, this.unlock.ⵠΔⲆΔΔ);
    this.ᐃⵠⲆⲆΔⲆΔ = function (p1682) {
      v3026.ⵠᐃΔⵠ = f417(vThis2.ⵠⲆ, p1682);
      for (var v2681 = 0; vThis2.buttons.length > v2681; v2681++) {
        if (v2643 === vThis2.buttons[v2681].info.active) {
          vThis2.buttons[v2681].ᐃⵠᐃⲆ(vThis2.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        }
      }
    };
    this.ᐃΔⲆⵠⵠⵠΔ = function (p1683) {
      v3026.ⵠᐃΔⵠ = f417(vThis2.ⵠⲆ, p1683);
      for (var v2682 = 0; v2682 < vThis2.buttons.length; v2682++) {
        var v2683 = vThis2.buttons[v2682];
        if (v2643 === v2683.info.active && v2683.ᐃⵠᐃⲆ(vThis2.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
          v2683.info.callback();
          return;
        }
      }
    };
    this.ⵠⵠᐃⲆⲆΔⲆ = vVV2123;
    this.ᐃΔΔᐃᐃΔⵠ = function (p1684) {
      v3026.ⵠᐃΔⵠ = f417(vThis2.ⵠⲆ, p1684);
      var v2684 = false;
      for (var v2685 = 0; v2685 < vThis2.buttons.length; v2685++) {
        if (v2643 === vThis2.buttons[v2685].info.active) {
          v2684 |= vThis2.buttons[v2685].ᐃⵠᐃⲆ(vThis2.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        }
      }
      if (vThis2.ⵠⵠᐃⲆⲆΔⲆ !== v2684) {
        vThis2.ⵠⵠᐃⲆⲆΔⲆ = v2684;
        p1640.style.cursor = v2684 ? vThis2.ⲆΔᐃᐃΔⲆⲆ : vThis2.ⲆⲆΔⵠᐃᐃΔ;
      }
    };
    this.ⲆⲆⵠΔⲆⲆΔ = function () {
      vWindow.addEventListener("mousedown", this.ᐃⵠⲆⲆΔⲆΔ, vV213);
      vWindow.addEventListener("mouseup", this.ᐃΔⲆⵠⵠⵠΔ, false);
      vWindow.addEventListener("mousemove", this.ᐃΔΔᐃᐃΔⵠ, false);
    };
    this.ⵠⵠΔΔⲆⵠⲆ = function () {
      vWindow.removeEventListener("mousedown", this.ᐃⵠⲆⲆΔⲆΔ, vV213);
      vWindow.removeEventListener("mouseup", this.ᐃΔⲆⵠⵠⵠΔ, false);
      vWindow.removeEventListener("mousemove", this.ᐃΔΔᐃᐃΔⵠ, vVV21);
    };
  }
  function f497(p1685, p1686, p1687, p1688) {
    const v2686 = (1 + (p1685 + 61087) * 22695477) % 4294967296;
    const v2687 = ((p1686 + 50604) * 1103515245 + 12345) % 2147483648;
    const v2688 = ~(p1687 & 40287) & p1687 | ~(p1687 & 40287) & 40287;
    const v2689 = ~(p1688 & 31588) & (p1688 | 31588);
    const vF83 = f83(v2686, v2687, 0, v2689, 0, v2687);
    const vF832 = f83(v2688, v2689, 0, v2687, 0, v2689);
    return (0 << ((vF83 ^ vF832) >> 8 & 255)) + (16 << ((vF83 ^ vF832) >> 24 & 255)) + (24 << ((vF83 ^ vF832) >> 16 & 255)) + (8 << ((vF83 ^ vF832) & 255));
  }
  function f498(p1689, p1690, p1691, p1692, p1693) {
    const v2690 = ~(p1689 & 16217) & p1689 | ~(p1689 & 16217) & 16217;
    const v2691 = ((p1690 + 23901) * 22695477 + 1) % 4294967296;
    const v2692 = (1 + (2146 + p1691) * 22695477) % 4294967296;
    const v2693 = ~(p1692 & 7179) & p1692 | ~(p1692 & 7179) & 7179;
    const v2694 = p1693 ^ 12000;
    const vF60 = f60(v2690, v2691, v2692, v2693, v2694);
    f503(v2690, v2691, v2692, v2693, v2694, v2690);
    return ~(vF60 & 16044) & (vF60 | 16044);
  }
  function f499(p1694, p1695) {
    var vThis4 = this;
    this.ⲆΔᐃᐃΔⵠΔ = vVV243;
    this.ⵠⲆ = p1694;
    var v2695 = 117;
    if (v2695 >= 2) {
      v2695 = 67;
    }
    var v2696 = 11;
    if (v2696 >= 12) {
      v2696 = 130;
    }
    this.ᐃ = p1695;
    if (vWindow.navigator.userAgent.indexOf("Edge") > -1) {
      this.ⲆⲆΔⵠᐃᐃΔ = "default";
      this.ⲆΔᐃᐃΔⲆⲆ = "pointer";
    } else {
      this.ⲆⲆΔⵠᐃᐃΔ = "url('img/cursor0.png'), default";
      this.ⲆΔᐃᐃΔⲆⲆ = "url('img/cursor1.png'), pointer";
    }
    this.ᐃΔᐃᐃᐃᐃⵠ = 1;
    this.ΔⲆᐃᐃᐃΔⵠ = 124;
    this.ⵠΔᐃΔⵠⵠⲆ = 150;
    this.ᐃⵠΔᐃΔⲆᐃ = 205;
    this.ᐃⵠΔᐃΔⲆᐃ;
    this.ⵠΔᐃΔⵠⵠⲆ;
    this.ⵠⲆᐃᐃⲆⲆΔ = 1;
    var v2697 = 19;
    if (v2697 >= 13) {
      v2697 = 76;
    }
    this.ⲆΔⵠⵠⲆΔΔ = 1;
    this.ᐃⲆⵠⵠᐃⵠⲆ = 1;
    this.ⲆᐃⲆᐃⵠⵠⲆ = 252;
    this.ⲆᐃⵠΔⲆⵠⲆⲆᐃ = 99;
    this.ⲆᐃⲆᐃⵠⵠⲆ;
    this.ⲆᐃⵠΔⲆⵠⲆⲆᐃ;
    this.ⵠᐃⵠΔⲆⲆᐃⲆⵠ = {
      id: document.getElementById("team_box"),
      style: document.getElementById("team_box").style,
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 125) + "px";
        this.style.top = "110px";
      }
    };
    this.ⵠΔⲆⵠ = {
      ᐃⵠΔΔⲆⲆⵠ: f418(60, 60, 0, ⲆⲆ[782]),
      ⵠⵠⵠⵠΔⲆΔ: f418(60, 60, 0, ⲆⲆ[783])
    };
    this.sign = {
      open: false,
      ΔᐃᐃⲆⲆᐃⲆⲆⲆ: 0,
      ᐃΔΔⵠᐃᐃⲆ: document.getElementById("sign_object"),
      ΔⵠⵠΔᐃᐃᐃ: 0,
      id: document.getElementById("sign_window"),
      style: document.getElementById("sign_window").style,
      button: f418(60, 60, 0, ⲆⲆ[803]),
      ΔⲆᐃΔⲆᐃⵠ: function () {
        var v2698 = Math.floor(Math.floor((3 + v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ.length) / 4) * (10 + ⲆⲆ[316][0].width) + 35);
        this.button.info.translate.x = v2698;
        this.button.info.translate.y = 22;
      },
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 150) + "px";
        this.style.top = Math.floor(v386 - 115) + "px";
      },
      ΔⵠⵠΔΔ: function () {
        v2993.sign.style.display = "none";
        v2993.sign.open = false;
      },
      select: function () {
        v2993.sign.open = !v2993.sign.open;
        if (v2993.sign.open) {
          v2993.sign.style.display = "inline-block";
        } else {
          v2993.sign.style.display = "none";
        }
      },
      ok: function () {
        v2816.ᐃᐃⲆⲆᐃⵠⵠᐃⵠ(v2814.sign.ᐃΔⵠᐃⲆ, v2993.sign.ΔⵠⵠΔᐃᐃᐃ);
        v2993.sign.select();
      },
      up: function () {
        v2993.sign.ΔⵠⵠΔᐃᐃᐃ = v2993.sign.ΔⵠⵠΔᐃᐃᐃ === 0 ? 3 : v2993.sign.ΔⵠⵠΔᐃᐃᐃ - 1;
        v2993.sign.ᐃΔΔⵠᐃᐃⲆ.src = "./img/sign" + v2993.sign.ΔⵠⵠΔᐃᐃᐃ + ".png";
      },
      down: function () {
        v2993.sign.ΔⵠⵠΔᐃᐃᐃ = (v2993.sign.ΔⵠⵠΔᐃᐃᐃ + 1) % 4;
        v2993.sign.ᐃΔΔⵠᐃᐃⲆ.src = "./img/sign" + v2993.sign.ΔⵠⵠΔᐃᐃᐃ + ".png";
      }
    };
    document.getElementById("quit_sign").addEventListener("mouseup", this.sign.select, false);
    document.getElementById("ok_sign").addEventListener("mouseup", this.sign.ok, false);
    document.getElementById("sign_up").addEventListener("mouseup", this.sign.up, vVV2122);
    document.getElementById("sign_down").addEventListener("mouseup", this.sign.down, vV213);
    this.ᐃΔⲆⵠⵠ = {
      open: vV21,
      id: document.getElementById("shop_market"),
      style: document.getElementById("shop_market").style,
      items: [{
        id: 0,
        name: "wood",
        ΔΔΔⲆⵠ: 1,
        b: 1,
        a: 3,
        ᐃΔⵠⲆⲆ: 316
      }, {
        id: 1,
        name: "stone",
        ΔΔΔⲆⵠ: 1,
        b: 1,
        a: 4,
        ᐃΔⵠⲆⲆ: 315
      }, {
        id: 2,
        name: "gold",
        ΔΔΔⲆⵠ: 1,
        b: 1,
        a: 6,
        ᐃΔⵠⲆⲆ: 297
      }, {
        id: 3,
        name: "diamond",
        ΔΔΔⲆⵠ: 4,
        b: 4,
        a: 1,
        ᐃΔⵠⲆⲆ: 298
      }, {
        id: 4,
        name: "amethyst",
        ΔΔΔⲆⵠ: 8,
        b: 8,
        a: 1,
        ᐃΔⵠⲆⲆ: 418
      }, {
        id: 5,
        name: "reidite",
        ΔΔΔⲆⵠ: 16,
        b: 16,
        a: 1,
        ᐃΔⵠⲆⲆ: 938
      }, {
        id: 6,
        name: "pumpkin_seed",
        ΔΔΔⲆⵠ: 10,
        b: 10,
        a: 1,
        ᐃΔⵠⲆⲆ: 808
      }, {
        id: 7,
        name: "carrot_seed",
        ΔΔΔⲆⵠ: 16,
        b: 16,
        a: 1,
        ᐃΔⵠⲆⲆ: 949
      }, {
        id: 8,
        name: "tomato_seed",
        ΔΔΔⲆⵠ: 20,
        b: 20,
        a: 1,
        ᐃΔⵠⲆⲆ: 959
      }, {
        id: 9,
        name: "thornbush_seed",
        ΔΔΔⲆⵠ: 30,
        b: 30,
        a: 1,
        ᐃΔⵠⲆⲆ: 845
      }, {
        id: 10,
        name: "garlic_seed",
        ΔΔΔⲆⵠ: 40,
        b: 40,
        a: 1,
        ᐃΔⵠⲆⲆ: 834
      }, {
        id: 11,
        name: "watermelon_seed",
        ΔΔΔⲆⵠ: 60,
        b: 60,
        a: 1,
        ᐃΔⵠⲆⲆ: 966
      }],
      button: f418(60, 60, 0, ⲆⲆ[795]),
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 450) + "px";
        this.style.top = Math.floor(v386 - 270) + "px";
      },
      select: function () {
        v2993.ᐃΔⲆⵠⵠ.open = !v2993.ᐃΔⲆⵠⵠ.open;
        if (v2993.ᐃΔⲆⵠⵠ.open) {
          v2993.ᐃΔⲆⵠⵠ.style.display = "inline-block";
        } else {
          v2993.ᐃΔⲆⵠⵠ.style.display = "none";
        }
      },
      ΔⵠⵠΔΔ: function () {
        v2993.ᐃΔⲆⵠⵠ.style.display = "none";
        v2993.ᐃΔⲆⵠⵠ.open = false;
      },
      ᐃᐃΔΔⲆⵠᐃ: function () {
        v2816.ΔⵠⲆΔⵠΔΔΔⵠ(this.ⲆⲆΔⲆⵠⲆᐃ);
      },
      ᐃⲆⲆᐃⲆ: function () {
        this.id;
        if (this.ⲆⲆΔⲆⵠⲆᐃ.a === 1) {
          var v2699 = Math.floor(Number(this.value) * this.ⲆⲆΔⲆⵠⲆᐃ.b);
          this.ⲆⲆΔⲆⵠⲆᐃ.ΔΔΔⲆⵠ = v2699;
          document.getElementById(this.ⲆⲆΔⲆⵠⲆᐃ.name + "_trad_number").innerHTML = v2699 + "";
        } else {
          v2699 = Math.floor(Number(this.value) / this.ⲆⲆΔⲆⵠⲆᐃ.a);
          this.ⲆⲆΔⲆⵠⲆᐃ.ΔΔΔⲆⵠ = v2699;
          document.getElementById(this.ⲆⲆΔⲆⵠⲆᐃ.name + "_trad_number").innerHTML = v2699 + "";
        }
      }
    };
    document.getElementById("quit_market").addEventListener("mouseup", this.ᐃΔⲆⵠⵠ.ΔⵠⵠΔΔ, vVVV21222);
    var v2700 = [["mouseup", this.ᐃΔⲆⵠⵠ.ᐃᐃΔΔⲆⵠᐃ, "buy_"], ["click", this.ᐃΔⲆⵠⵠ.ᐃⲆⲆᐃⲆ, ""], ["change", this.ᐃΔⲆⵠⵠ.ᐃⲆⲆᐃⲆ, ""], ["keypress", this.ᐃΔⲆⵠⵠ.keypress, ""]];
    for (var v2701 = 0; v2701 < this.ᐃΔⲆⵠⵠ.items.length; v2701++) {
      var v2702 = this.ᐃΔⲆⵠⵠ.items[v2701];
      document.getElementById(v2702.name + "_market").src = ⲆⲆ[v2702.ᐃΔⵠⲆⲆ][0].ⲆΔⵠⵠⵠ === undefined ? ⲆⲆ[v2702.ᐃΔⵠⲆⲆ][0].src : ⲆⲆ[v2702.ᐃΔⵠⲆⲆ][0].ⲆΔⵠⵠⵠ;
      if (v2702.a === 1) {
        document.getElementById(v2702.name + "_trad_number").innerHTML = v2702.b;
        document.getElementById(v2702.name + "_number").value = 1;
        document.getElementById(v2702.name + "_number").step = 1;
        document.getElementById(v2702.name + "_number").min = 1;
        document.getElementById(v2702.name + "_number").max = Math.floor(255 / v2702.b);
      } else {
        document.getElementById(v2702.name + "_trad_number").innerHTML = 1;
        document.getElementById(v2702.name + "_number").value = v2702.a;
        document.getElementById(v2702.name + "_number").step = v2702.a;
        document.getElementById(v2702.name + "_number").min = v2702.a;
      }
      document.getElementById("buy_" + v2702.name + "_number").ⲆⲆΔⲆⵠⲆᐃ = v2702;
      document.getElementById(v2702.name + "_number").ⲆⲆΔⲆⵠⲆᐃ = v2702;
      for (var v2703 = 0; v2703 < v2700.length; v2703++) {
        document.getElementById(v2700[v2703][2] + v2702.name + "_number").addEventListener(v2700[v2703][0], v2700[v2703][1], false);
      }
    }
    $("[type='number']").keypress(function (p1696) {
      p1696.preventDefault();
    });
    this.options = {
      open: false,
      id: document.getElementById("option_in_game"),
      style: document.getElementById("option_in_game").style,
      ⲆΔⲆⵠᐃ: document.getElementById("agree_ing").style,
      ⵠⲆΔⲆΔΔᐃ: document.getElementById("cancel_agree_ing").style,
      ⲆᐃⵠⵠⵠⵠⲆ: document.getElementById("quest_agree_ing").style,
      ΔⵠΔΔᐃΔⵠ: document.getElementById("spectator_agree_ing").style,
      ⵠΔᐃⲆᐃⵠⵠ: document.getElementById("auto_feed_agree_ing").style,
      ⲆΔⲆⲆΔⲆⵠ: document.getElementById("info_agree_ing").style,
      ⲆⵠⲆᐃⵠΔᐃ: document.getElementById("pixelated_agree_ing").style,
      button: f418(60, 60, 0, ⲆⲆ[727]),
      ΔⲆⵠⲆⵠⲆⲆⲆᐃ: function () {
        v2993.options.open = !v2993.options.open;
        if (v2993.options.open) {
          v2993.options.style.display = "inline-block";
        } else {
          v2993.options.style.display = "none";
        }
      },
      ᐃⵠⵠΔΔⵠⲆⲆᐃ: function () {
        v2812.ⵠⲆⵠᐃⵠΔⲆ();
      },
      ΔⲆΔᐃᐃⵠⲆΔᐃ: function () {
        v2812.ⲆᐃⲆΔⲆⵠᐃ();
      },
      high: function () {
        v2812.ⲆᐃⲆΔᐃᐃΔΔᐃ();
      },
      low: function () {
        v2812.ⲆᐃⲆΔᐃᐃΔⵠⲆ();
      },
      ⲆⲆⵠΔⵠ: function () {
        v2993.ⲆΔⵠⲆ.ⲆⲆⵠΔⵠ();
      },
      ᐃΔΔⵠΔⵠⲆᐃⲆ: function () {
        v2993.ⲆⲆⲆⵠⲆ.ⲆⲆⵠΔⵠ();
      },
      ΔΔⲆΔᐃᐃᐃΔΔ: function () {
        v2993.ΔᐃⲆⵠ.ⲆⲆⵠΔⵠ();
      },
      ⵠΔᐃⵠΔⵠⵠΔⲆ: function () {
        v2814.ΔΔⲆⵠᐃ.ⲆΔᐃⲆⲆΔⵠ();
      },
      ⲆΔᐃΔⲆᐃⵠΔΔ: function () {
        v2814.ⲆⲆᐃⵠᐃ.ⲆΔᐃⲆⲆΔⵠ();
      },
      ΔⵠⵠΔΔ: function () {
        v2993.options.style.display = "none";
        v2993.options.open = vVVV2122;
      },
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 235) + "px";
        this.style.top = Math.floor(v386 - 170) + "px";
      }
    };
    document.getElementById("azerty_ing").addEventListener("mouseup", this.options.ᐃⵠⵠΔΔⵠⲆⲆᐃ, vV214);
    document.getElementById("qwerty_ing").addEventListener("mouseup", this.options.ΔⲆΔᐃᐃⵠⲆΔᐃ, false);
    document.getElementById("low_ing").addEventListener("mouseup", this.options.low, false);
    document.getElementById("high_ing").addEventListener("mouseup", this.options.high, vVVVV21222);
    document.getElementById("quit_opt").addEventListener("mouseup", this.options.ΔⵠⵠΔΔ, vVV213);
    document.getElementById("case_agree_opt").addEventListener("mouseup", this.options.ⲆⲆⵠΔⵠ, false);
    document.getElementById("quest_case_agree_opt").addEventListener("mouseup", this.options.ΔΔⲆΔᐃᐃᐃΔΔ, vV213);
    document.getElementById("cancel_case_agree_opt").addEventListener("mouseup", this.options.ᐃΔΔⵠΔⵠⲆᐃⲆ, vVVV2122);
    document.getElementById("spectator_case_agree_opt").addEventListener("mouseup", this.options.ⵠΔᐃⵠΔⵠⵠΔⲆ, false);
    document.getElementById("auto_feed_case_agree_opt").addEventListener("mouseup", this.options.ⲆΔᐃΔⲆᐃⵠΔΔ, false);
    this.ⲆⲆⲆⵠⲆ = {
      open: false,
      ⵠΔᐃⲆⵠ: ᐃᐃⲆᐃ.get("starve_cancel") ? ᐃᐃⲆᐃ.get("starve_cancel") === "0" ? 0 : 1 : 1,
      id: document.getElementById("cancel_sure_delete"),
      style: document.getElementById("cancel_sure_delete").style,
      ⲆΔⲆⵠᐃ: document.getElementById("cancel_agree").style,
      button: 0,
      Ⲇⵠ: 0,
      ΔⵠⵠΔΔ: function () {
        v2993.ⲆⲆⲆⵠⲆ.style.display = "none";
        v2993.ⲆⲆⲆⵠⲆ.open = false;
      },
      ΔⵠΔⵠᐃⵠΔ: function () {
        if (v2814.ⲆΔⵠΔ.ᐃⲆⲆΔᐃ) {
          v2816.ⲆᐃⵠΔΔⲆΔᐃᐃ();
        }
        v2993.ⲆⲆⲆⵠⲆ.ΔⵠⵠΔΔ();
      },
      ⲆⲆⵠΔⵠ: function () {
        if (v2993.ⲆⲆⲆⵠⲆ.ⵠΔᐃⲆⵠ) {
          ᐃᐃⲆᐃ.set("starve_cancel", "0");
          v2993.ⲆⲆⲆⵠⲆ.ⲆΔⲆⵠᐃ.display = "inline-block";
          v2993.options.ⵠⲆΔⲆΔΔᐃ.display = "none";
        } else {
          ᐃᐃⲆᐃ.set("starve_cancel", "1");
          v2993.ⲆⲆⲆⵠⲆ.ⲆΔⲆⵠᐃ.display = "none";
          v2993.options.ⵠⲆΔⲆΔΔᐃ.display = "inline-block";
        }
        v2993.ⲆⲆⲆⵠⲆ.ⵠΔᐃⲆⵠ = !v2993.ⲆⲆⲆⵠⲆ.ⵠΔᐃⲆⵠ;
      },
      ⵠⲆΔⲆᐃⵠⲆ: function () {
        if (this.ⵠΔᐃⲆⵠ) {
          this.style.display = "inline-block";
          this.open = vVVV243;
        } else {
          this.ΔⵠΔⵠᐃⵠΔ();
        }
      },
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 235) + "px";
        this.style.top = Math.floor(v386 - 130) + "px";
      }
    };
    this.ⲆⲆⲆⵠⲆ.id.oncontextmenu = function () {
      return false;
    };
    this.ⲆⲆⲆⵠⲆ.ⲆΔⲆⵠᐃ.display = "none";
    if (this.ⲆⲆⲆⵠⲆ.ⵠΔᐃⲆⵠ) {
      this.options.ⵠⲆΔⲆΔΔᐃ.display = "inline-block";
    } else {
      this.options.ⵠⲆΔⲆΔΔᐃ.display = "none";
    }
    document.getElementById("cancel_yes_delete").addEventListener("mouseup", this.ⲆⲆⲆⵠⲆ.ΔⵠΔⵠᐃⵠΔ, false);
    document.getElementById("cancel_no_delete").addEventListener("mouseup", this.ⲆⲆⲆⵠⲆ.ΔⵠⵠΔΔ, vVVVV21);
    document.getElementById("cancel_case_agree").addEventListener("mouseup", this.ⲆⲆⲆⵠⲆ.ⲆⲆⵠΔⵠ, vVVV2132);
    document.addEventListener("cancel_sure_delete", function (p1697) {
      p1697.preventDefault();
    }, false);
    this.ΔⵠⲆⲆⵠᐃⵠ = {
      ⵠΔᐃⲆⵠ: ᐃᐃⲆᐃ.get("starve_aliasing") ? ᐃᐃⲆᐃ.get("starve_aliasing") === "0" ? 0 : 1 : 1,
      ⵠⲆⵠⵠⲆⲆΔ: function (p1698) {
        document.getElementById("game_canvas").style.imageRendering = p1698 ? "pixelated" : "auto";
      },
      ⲆⲆⵠΔⵠ: function () {
        if (v2993.ΔⵠⲆⲆⵠᐃⵠ.ⵠΔᐃⲆⵠ === 0) {
          ᐃᐃⲆᐃ.set("starve_aliasing", "1");
          v2993.ΔⵠⲆⲆⵠᐃⵠ.ⵠⲆⵠⵠⲆⲆΔ(1);
          v2993.options.ⲆⵠⲆᐃⵠΔᐃ.display = "inline-block";
        } else {
          ᐃᐃⲆᐃ.set("starve_aliasing", "0");
          v2993.ΔⵠⲆⲆⵠᐃⵠ.ⵠⲆⵠⵠⲆⲆΔ(0);
          v2993.options.ⲆⵠⲆᐃⵠΔᐃ.display = "none";
        }
        v2993.ΔⵠⲆⲆⵠᐃⵠ.ⵠΔᐃⲆⵠ = (v2993.ΔⵠⲆⲆⵠᐃⵠ.ⵠΔᐃⲆⵠ + 1) % 2;
      }
    };
    if (this.ΔⵠⲆⲆⵠᐃⵠ.ⵠΔᐃⲆⵠ === 1) {
      this.options.ⲆⵠⲆᐃⵠΔᐃ.display = "inline-block";
    } else {
      this.ΔⵠⲆⲆⵠᐃⵠ.ⵠⲆⵠⵠⲆⲆΔ(0);
      this.options.ⲆⵠⲆᐃⵠΔᐃ.display = "none";
    }
    document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.ΔⵠⲆⲆⵠᐃⵠ.ⲆⲆⵠΔⵠ, vVVV2132);
    this.ⵠⲆΔⲆⲆ = {
      ⵠΔᐃⲆⵠ: ᐃᐃⲆᐃ.get("starve_info_box") ? ᐃᐃⲆᐃ.get("starve_info_box") === "0" ? 0 : 1 : 1,
      display: 0,
      x: 0,
      y: 0,
      id: 0,
      ⲆΔⵠΔ: 0,
      ⲆⲆⵠΔⵠ: function () {
        if (v2993.ⵠⲆΔⲆⲆ.ⵠΔᐃⲆⵠ === 0) {
          ᐃᐃⲆᐃ.set("starve_info_box", "1");
          v2993.options.ⲆΔⲆⲆΔⲆⵠ.display = "inline-block";
        } else {
          ᐃᐃⲆᐃ.set("starve_info_box", "0");
          v2993.options.ⲆΔⲆⲆΔⲆⵠ.display = "none";
        }
        v2993.ⵠⲆΔⲆⲆ.ⵠΔᐃⲆⵠ = (v2993.ⵠⲆΔⲆⲆ.ⵠΔᐃⲆⵠ + 1) % 2;
      },
      ᐃⵠᐃⲆ: function (p1699, p1700, p1701) {
        if (p1699 && this.ⵠΔᐃⲆⵠ) {
          this.display = 1;
          this.id = p1701 === 0 ? p1700.id : v669[p1700.id].ⵠᐃΔᐃ;
          this.x = p1700.info.translate.x + 80;
          this.y = p1700.info.translate.y;
          this.ⲆΔⵠΔ = p1701;
        }
        return p1699;
      }
    };
    if (this.ⵠⲆΔⲆⲆ.ⵠΔᐃⲆⵠ === 1) {
      this.options.ⲆΔⲆⲆΔⲆⵠ.display = "inline-block";
    } else {
      this.options.ⲆΔⲆⲆΔⲆⵠ.display = "none";
    }
    document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.ⵠⲆΔⲆⲆ.ⲆⲆⵠΔⵠ, false);
    if (ᐃᐃⲆᐃ.get("starve_scale")) {
      v395 = Number(ᐃᐃⲆᐃ.get("starve_scale"));
      document.getElementById("input_ratio").value = v395;
      v395 *= v457 / v460;
      f51();
    }
    this.ΔⵠΔΔΔᐃᐃ = function () {
      ᐃᐃⲆᐃ.set("starve_scale", "" + document.getElementById("input_ratio").value);
      v395 = document.getElementById("input_ratio").value * (v457 / v460);
      f51();
    };
    document.getElementById("input_ratio").addEventListener("input", this.ΔⵠΔΔΔᐃᐃ, vVV2123);
    this.ⲆΔⵠⲆ = {
      open: vVV21,
      ⵠΔᐃⲆⵠ: ᐃᐃⲆᐃ.get("starve_safe") && ᐃᐃⲆᐃ.get("starve_safe") === "0" ? 0 : 1,
      id: document.getElementById("sure_delete"),
      style: document.getElementById("sure_delete").style,
      ⲆΔⲆⵠᐃ: document.getElementById("agree").style,
      button: 0,
      Ⲇⵠ: 0,
      ΔⵠⵠΔΔ: function () {
        v2993.ⲆΔⵠⲆ.style.display = "none";
        v2993.ⲆΔⵠⲆ.open = vVVV21;
      },
      all: function () {
        if (!v2814.ΔⵠᐃΔⲆ.wait) {
          if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && v2814.ⲆΔⵠΔ.id < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled) {
            v2816.ⵠᐃⵠⵠⲆⵠᐃⵠⲆ(v2993.ⲆΔⵠⲆ.button);
          }
          v2993.ⲆΔⵠⲆ.ΔⵠⵠΔΔ();
        }
      },
      ΔΔⲆΔ: function () {
        if (v2814.ⲆΔⵠΔ.ⵠⲆᐃΔⵠ && !v2814.ΔⵠᐃΔⲆ.wait) {
          if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && v2814.ⲆΔⵠΔ.id < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled) {
            v2816.ᐃⵠⲆⵠⵠᐃΔΔⵠ(v2993.ⲆΔⵠⲆ.button);
          }
          v2993.ⲆΔⵠⲆ.ΔⵠⵠΔΔ();
        }
      },
      ΔΔᐃⵠᐃᐃᐃΔⲆ: function () {
        if (!v2814.ΔⵠᐃΔⲆ.wait) {
          if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && v2814.ⲆΔⵠΔ.id < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled) {
            v2816.ⲆᐃΔⲆⵠᐃⵠᐃⲆ(v2993.ⲆΔⵠⲆ.button);
          }
          v2993.ⲆΔⵠⲆ.ΔⵠⵠΔΔ();
        }
      },
      ⲆⲆⵠΔⵠ: function () {
        if (v2993.ⲆΔⵠⲆ.ⵠΔᐃⲆⵠ) {
          ᐃᐃⲆᐃ.set("starve_safe", "0");
          v2993.ⲆΔⵠⲆ.ⲆΔⲆⵠᐃ.display = "inline-block";
          v2993.options.ⲆΔⲆⵠᐃ.display = "none";
        } else {
          ᐃᐃⲆᐃ.set("starve_safe", "1");
          v2993.ⲆΔⵠⲆ.ⲆΔⲆⵠᐃ.display = "none";
          v2993.options.ⲆΔⲆⵠᐃ.display = "inline-block";
        }
        v2993.ⲆΔⵠⲆ.ⵠΔᐃⲆⵠ = !v2993.ⲆΔⵠⲆ.ⵠΔᐃⲆⵠ;
      },
      ⵠⲆΔⲆᐃⵠⲆ: function (p1702) {
        this.button = p1702;
        document.getElementById("item_to_del").src = ⲆⲆ[v561[p1702].ⵠΔ][0].ⲆΔⵠⵠⵠ === undefined ? ⲆⲆ[v561[p1702].ⵠΔ][0].src : ⲆⲆ[v561[p1702].ⵠΔ][0].ⲆΔⵠⵠⵠ;
        if (v561[p1702].ΔΔⲆΔ && !v2814.ᐃΔᐃΔᐃ && v2814.ⲆΔⵠΔ.ⵠⲆᐃΔⵠ) {
          document.getElementById("recycle_delete").style.display = "inline-block";
        } else {
          document.getElementById("recycle_delete").style.display = "none";
        }
        if (this.ⵠΔᐃⲆⵠ) {
          this.style.display = "inline-block";
          this.open = vVVV242;
        } else {
          this.all();
        }
      },
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 235) + "px";
        this.style.top = Math.floor(v386 - 175) + "px";
      }
    };
    this.ⲆΔⵠⲆ.ⲆΔⲆⵠᐃ.display = "none";
    if (this.ⲆΔⵠⲆ.ⵠΔᐃⲆⵠ) {
      this.options.ⲆΔⲆⵠᐃ.display = "inline-block";
    } else {
      this.options.ⲆΔⲆⵠᐃ.display = "none";
    }
    document.getElementById("one_delete").addEventListener("mouseup", this.ⲆΔⵠⲆ.ΔΔᐃⵠᐃᐃᐃΔⲆ, v21);
    document.getElementById("yes_delete").addEventListener("mouseup", this.ⲆΔⵠⲆ.all, false);
    document.getElementById("recycle_delete").addEventListener("mouseup", this.ⲆΔⵠⲆ.ΔΔⲆΔ, false);
    document.getElementById("no_delete").addEventListener("mouseup", this.ⲆΔⵠⲆ.ΔⵠⵠΔΔ, false);
    document.getElementById("case_agree").addEventListener("mouseup", this.ⲆΔⵠⲆ.ⲆⲆⵠΔⵠ, false);
    this.ⲆⵠⵠΔΔ = {
      open: vVV21,
      ᐃⵠΔⲆᐃ: -1,
      button: f418(60, 60, 0, ⲆⲆ[592]),
      id: document.getElementById("shop_starterkit"),
      style: document.getElementById("shop_starterkit").style,
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 300) + "px";
        this.style.top = Math.floor(v386 - 215) + "px";
      },
      ΔⵠⵠΔΔ: function () {
        v2993.ⲆⵠⵠΔΔ.open = vV213;
        v2993.ⲆⵠⵠΔΔ.style.display = "none";
      },
      select: function () {
        v2993.ⲆⵠⵠΔΔ.open = !v2993.ⲆⵠⵠΔΔ.open;
        if (v2993.ⲆⵠⵠΔΔ.open) {
          v2993.ⲆⵠⵠΔΔ.style.display = "inline-block";
        } else {
          v2993.ⲆⵠⵠΔΔ.style.display = "none";
        }
      },
      ᐃᐃΔΔⲆⵠᐃ: function () {
        if (v2993.ⲆⵠⵠΔΔ.ᐃⵠΔⲆᐃ >= 0) {
          v2816.ᐃⲆᐃⲆⲆⵠⲆᐃⵠ(v2993.ⲆⵠⵠΔΔ.ᐃⵠΔⲆᐃ);
          v2993.ⲆⵠⵠΔΔ.ΔⵠⵠΔΔ();
          if (ga) {
            ga("send", "event", "Game", "kit", "" + v2993.ⲆⵠⵠΔΔ.ᐃⵠΔⲆᐃ);
          }
        }
      },
      ⵠΔⵠⲆⲆ: function () {
        var v2704 = v2814.ⲆⵠⵠΔΔ.value;
        document.getElementById("points_bank").innerHTML = ⲆΔΔ.ᐃᐃⲆⵠΔⲆΔ(v2704) + " points";
        for (var v2705 = 0; v2705 < v2193.length; v2705++) {
          if (v2193[v2705].ⲆΔᐃΔⲆ > v2704) {
            document.getElementById("starter" + (v2705 + 1)).style.opacity = "0.4";
          } else {
            document.getElementById("starter" + (v2705 + 1)).style.opacity = "1";
          }
        }
        for (v2705 = 1; v2705 < 13; v2705++) {
          document.getElementById("inv_shop" + v2705).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2705).innerHTML = "";
        }
        document.getElementById("buy_kit").style.opacity = "0.2";
      },
      ⵠΔⲆΔⲆᐃⵠΔΔ: function () {
        if (this.id.length > 8) {
          var vNumber17 = Number(this.id.charAt(7) + this.id.charAt(8));
        } else {
          vNumber17 = Number(this.id.charAt(7));
        }
        var v2706 = v2193[vNumber17 - 1];
        if (v2814.ⲆⵠⵠΔΔ.value >= v2706.ⲆΔᐃΔⲆ) {
          v2993.ⲆⵠⵠΔΔ.ᐃⵠΔⲆᐃ = vNumber17;
          document.getElementById("buy_kit").style.opacity = "1";
        } else {
          v2993.ⲆⵠⵠΔΔ.ᐃⵠΔⲆᐃ = -1;
          document.getElementById("buy_kit").style.opacity = "0.2";
        }
        v2706 = v2706.items;
        for (var v2707 = 1, v2708 = 1; v2707 < v2706.length + 1; v2707++) {
          if (v2706[v2707 - 1][1] !== 29) {
            document.getElementById("inv_shop" + v2708).style.display = "inline-block";
            document.getElementById("inv_shop" + v2708).src = ⲆⲆ[v561[v2706[v2707 - 1][1]].ⵠΔ][0].ⲆΔⵠⵠⵠ === vVVVVVUndefined197 ? ⲆⲆ[v561[v2706[v2707 - 1][1]].ⵠΔ][0].src : ⲆⲆ[v561[v2706[v2707 - 1][1]].ⵠΔ][0].ⲆΔⵠⵠⵠ;
            document.getElementById("amount_shop" + v2708).innerHTML = "" + v2706[v2707 - 1][0];
            v2708++;
          }
        }
        for (; v2708 < 13; v2708++) {
          document.getElementById("inv_shop" + v2708).src = "./img/empty-shop.png";
          document.getElementById("amount_shop" + v2708).innerHTML = "";
        }
      }
    };
    document.getElementById("quit3").addEventListener("mouseup", this.ⲆⵠⵠΔΔ.ΔⵠⵠΔΔ, false);
    document.getElementById("buy_kit").addEventListener("mouseup", this.ⲆⵠⵠΔΔ.ᐃᐃΔΔⲆⵠᐃ, false);
    for (v2703 = 1; v2703 < 11; v2703++) {
      document.getElementById("starter" + v2703).addEventListener("mouseup", this.ⲆⵠⵠΔΔ.ⵠΔⲆΔⲆᐃⵠΔΔ, vV213);
    }
    this.ΔᐃⲆⵠ = {
      open: false,
      ⵠΔᐃⲆⵠ: ᐃᐃⲆᐃ.get("starve_quests") ? ᐃᐃⲆᐃ.get("starve_quests") === "1" ? 1 : 0 : 0,
      button: f418(60, 60, 0, ⲆⲆ[755]),
      id: document.getElementById("chronoquest"),
      style: document.getElementById("chronoquest").style,
      ᐃΔⵠ: function () {
        this.style.left = Math.floor(v384 - 420) + "px";
        this.style.top = Math.floor(v386 - 270) + "px";
      },
      ΔⵠⵠΔΔ: function () {
        v2993.ΔᐃⲆⵠ.style.display = "none";
        v2993.ΔᐃⲆⵠ.open = false;
      },
      select: function () {
        v2993.ΔᐃⲆⵠ.open = !v2993.ΔᐃⲆⵠ.open;
        if (v2993.ΔᐃⲆⵠ.open) {
          v2993.ΔᐃⲆⵠ.style.display = "inline-block";
        } else {
          v2993.ΔᐃⲆⵠ.style.display = "none";
        }
      },
      list: [],
      reset: function () {
        for (var v2709 = 0; v2709 < v2207.length; v2709++) {
          this.list[v2709] = 1;
          document.getElementById("timeremain_" + v2709).style.display = "inline-block";
          document.getElementById("time_finished_" + v2709).style.display = "none";
          document.getElementById("claim_reward_" + v2709).style.display = "none";
        }
      },
      ᐃⵠΔΔⲆⲆⲆ: 0,
      ⲆⲆⵠΔᐃⵠΔ: 0,
      ᐃᐃᐃᐃⵠⲆᐃⵠⵠ: function () {
        if (v2993.ΔᐃⲆⵠ.open) {
          var v2710 = new Date().getTime();
          if (!(v2710 - this.ᐃⵠΔΔⲆⲆⲆ < 1000)) {
            this.ᐃⵠΔΔⲆⲆⲆ = v2710;
            for (var v2711 = 0; v2711 < v2207.length; v2711++) {
              if (v2993.ΔᐃⲆⵠ.list[v2711]) {
                var v2712 = v2207[v2711].time - (v2710 - v2813.ΔⲆⵠᐃΔ.ⵠΔⵠⲆⲆ + v2993.ΔᐃⲆⵠ.ⲆⲆⵠΔᐃⵠΔ);
                document.getElementById("timeremain_" + v2711).innerHTML = v2712 > 960000 ? Math.floor(v2712 / 480000) + " days" : v2712 > 480000 ? Math.floor(v2712 / 480000) + " day" : v2712 > 60000 ? Math.floor(v2712 / 60000) + " min" : Math.floor(v2712 / 1000) + " sec";
              }
            }
          }
        }
      },
      restore: function (p1703) {
        for (var v2713 = 0; v2713 < p1703.length; v2713++) {
          if (p1703[v2713] != 1) {
            v2993.ΔᐃⲆⵠ.ⲆᐃⵠᐃⲆΔⲆ(v2713, p1703[v2713]);
          }
        }
      },
      ⲆᐃⵠᐃⲆΔⲆ: function (p1704, p1705) {
        if (p1705 === 3 && (p1704 === 11 || p1704 === 12)) {
          v2814.ⲆⲆᐃΔ.ΔⲆⵠⵠᐃᐃᐃ(0, 1);
          v2993.ⲆⲆΔⲆⵠⲆΔ();
        }
        document.getElementById("timeremain_" + p1704).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
        if (p1705 > 1) {
          document.getElementById("time_finished_" + p1704).innerHTML = "SUCCEED";
          document.getElementById("timeremain_" + p1704).style.display = "none";
        } else if (p1705 === 0) {
          document.getElementById("time_finished_" + p1704).innerHTML = "FAILED";
          document.getElementById("timeremain_" + p1704).style.display = "none";
        }
        document.getElementById("claim_reward_" + p1704).style.display = p1705 === 2 ? "inline-block" : "none";
        document.getElementById("time_finished_" + p1704).style.display = "inline";
        v2993.ΔᐃⲆⵠ.list[p1704] = 0;
      },
      modify: function (p1706, p1707) {
        v2993.ΔᐃⲆⵠ.ⲆᐃⵠᐃⲆΔⲆ(p1706, p1707);
        if (v2993.ΔᐃⲆⵠ.ⵠΔᐃⲆⵠ) {
          v2993.ΔᐃⲆⵠ.open = true;
          v2993.ΔᐃⲆⵠ.style.display = "inline-block";
        }
      },
      ⲆⲆⵠΔⵠ: function () {
        if (v2993.ΔᐃⲆⵠ.ⵠΔᐃⲆⵠ) {
          ᐃᐃⲆᐃ.set("starve_quests", "0");
          v2993.options.ⲆᐃⵠⵠⵠⵠⲆ.display = "none";
        } else {
          ᐃᐃⲆᐃ.set("starve_quests", "1");
          v2993.options.ⲆᐃⵠⵠⵠⵠⲆ.display = "inline-block";
        }
        v2993.ΔᐃⲆⵠ.ⵠΔᐃⲆⵠ = !v2993.ΔᐃⲆⵠ.ⵠΔᐃⲆⵠ;
      },
      ⲆⲆΔΔⵠᐃᐃᐃΔ: function () {
        var vNumber18 = Number(this.id.charAt(13));
        var vNumber19 = Number(this.id.charAt(14));
        if (this.id.charAt(14) !== "" && vNumber19 >= 0 && vNumber19 <= 9) {
          vNumber18 = vNumber18 * 10 + vNumber19;
        }
        v2816.ΔΔⵠⲆᐃⲆᐃΔⲆ(vNumber18);
      }
    };
    if (this.ΔᐃⲆⵠ.ⵠΔᐃⲆⵠ) {
      this.options.ⲆᐃⵠⵠⵠⵠⲆ.display = "inline-block";
    } else {
      this.options.ⲆᐃⵠⵠⵠⵠⲆ.display = "none";
    }
    document.getElementById("quit_chronoquest").addEventListener("mouseup", this.ΔᐃⲆⵠ.ΔⵠⵠΔΔ, false);
    for (v2703 = 0; v2703 < v2207.length; v2703++) {
      document.getElementById("claim_reward_" + v2703).addEventListener("mouseup", this.ΔᐃⲆⵠ.ⲆⲆΔΔⵠᐃᐃᐃΔ, vVVV213);
    }
    this.ᐃⲆⲆⲆ = {
      open: false,
      button: f418(60, 60, 0, ⲆⲆ[708]),
      list: {
        id: document.getElementById("recipe_craft"),
        style: document.getElementById("recipe_craft").style,
        ⵠΔⵠᐃΔⵠΔ: [],
        ⲆⲆΔⲆⵠΔⲆ: 0,
        ᐃΔⵠ: function () {
          this.style.left = Math.floor(v384 - 335) + "px";
          this.style.top = Math.floor(v386 - 215) + "px";
        },
        ΔⵠⵠΔΔ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          v2993.ᐃⲆⲆⲆ.open = vVVV2133;
        },
        ΔᐃⵠΔᐃⵠⵠ: function () {
          document.getElementById("recipe_craft").style.display = "none";
          document.getElementById("home_craft").style.display = "inline-block";
        },
        ᐃⲆΔⲆ: function (p1708) {
          if ((v2714 = this.ⵠΔⵠᐃΔⵠΔ[p1708]).ΔⲆⲆ) {
            document.getElementById("watercraft").style.display = "inline-block";
          } else {
            document.getElementById("watercraft").style.display = "none";
          }
          if (v2714.f) {
            document.getElementById("firecraft").style.display = "inline-block";
          } else {
            document.getElementById("firecraft").style.display = "none";
          }
          if (v2714.w) {
            document.getElementById("workcraft").style.display = "inline-block";
          } else {
            document.getElementById("workcraft").style.display = "none";
          }
          if (v2714.e) {
            document.getElementById("wellcraft").style.display = "inline-block";
          } else {
            document.getElementById("wellcraft").style.display = "none";
          }
          for (var v2714 = v2714.r, v2715 = (p1708 = 0, 1); p1708 < v2714.length; p1708++) {
            document.getElementById("inv" + v2715).style.display = "inline-block";
            document.getElementById("inv" + v2715).src = ⲆⲆ[v561[v2714[p1708][0]].ⵠΔ][0].ⲆΔⵠⵠⵠ === vVVVUndefined197 ? ⲆⲆ[v561[v2714[p1708][0]].ⵠΔ][0].src : ⲆⲆ[v561[v2714[p1708][0]].ⵠΔ][0].ⲆΔⵠⵠⵠ;
            document.getElementById("numb" + v2715).innerHTML = "" + v2714[p1708][1];
            v2715++;
          }
          for (; v2715 < 6; v2715++) {
            document.getElementById("inv" + v2715).style.display = "none";
            document.getElementById("numb" + v2715).innerHTML = "";
          }
        },
        select: function (p1709) {
          this.ⲆⲆΔⲆⵠΔⲆ = p1709;
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("workcraft").style.display = "none";
          document.getElementById("firecraft").style.display = "none";
          document.getElementById("watercraft").style.display = "none";
          document.getElementById("wellcraft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "inline-block";
          document.getElementById("inv1").style.display = "none";
          document.getElementById("inv2").style.display = "none";
          document.getElementById("inv3").style.display = "none";
          document.getElementById("inv4").style.display = "none";
          document.getElementById("inv5").style.display = "none";
          document.getElementById("numb1").innerHTML = "";
          document.getElementById("numb2").innerHTML = "";
          document.getElementById("numb3").innerHTML = "";
          document.getElementById("numb4").innerHTML = "";
          document.getElementById("numb5").innerHTML = "";
          for (var v2716 = 0, v2717 = 0; v2716 < v669.length; v2716++) {
            var v2718 = v669[v2716];
            if (p1709 === v2718.Ⲇⵠⵠ) {
              this.ⵠΔⵠᐃΔⵠΔ[v2717] = v2718;
              v2717++;
              document.getElementById("img_" + v2717).style.display = "inline-block";
              document.getElementById("img_" + v2717).src = ⲆⲆ[v561[v2718.ⵠᐃΔᐃ].ⵠΔ][0].ⲆΔⵠⵠⵠ === undefined ? ⲆⲆ[v561[v2718.ⵠᐃΔᐃ].ⵠΔ][0].src : ⲆⲆ[v561[v2718.ⵠᐃΔᐃ].ⵠΔ][0].ⲆΔⵠⵠⵠ;
            }
          }
          for (v2717++; v2717 < 49; v2717++) {
            document.getElementById("img_" + v2717).style.display = "none";
          }
        }
      },
      ᐃΔⲆᐃⵠΔᐃ: {
        id: document.getElementById("home_craft"),
        style: document.getElementById("home_craft").style,
        ᐃΔⵠ: function () {
          this.style.left = Math.floor(v384 - 285) + "px";
          this.style.top = Math.floor(v386 - 170) + "px";
        },
        ΔⵠⵠΔΔ: function () {
          document.getElementById("home_craft").style.display = "none";
          v2993.ᐃⲆⲆⲆ.open = vVVV2132;
        }
      },
      ⵠⲆⵠⲆΔⵠⲆᐃᐃ: function () {
        this.open = !this.open;
        if (this.open) {
          document.getElementById("home_craft").style.display = "inline-block";
        } else {
          document.getElementById("home_craft").style.display = "none";
          document.getElementById("recipe_craft").style.display = "none";
        }
      }
    };
    document.getElementById("quit").addEventListener("mouseup", this.ᐃⲆⲆⲆ.ᐃΔⲆᐃⵠΔᐃ.ΔⵠⵠΔΔ, vVVVV212);
    document.getElementById("quitmenu").addEventListener("mouseup", this.ᐃⲆⲆⲆ.list.ΔⵠⵠΔΔ, vV21);
    document.getElementById("backhome").addEventListener("mouseup", this.ᐃⲆⲆⲆ.list.ΔᐃⵠΔᐃⵠⵠ, vVVV21222);
    document.getElementById("hatcategory").addEventListener("mouseup", function () {
      v2993.ᐃⲆⲆⲆ.list.select(2);
    }, false);
    document.getElementById("weaponcategory").addEventListener("mouseup", function () {
      v2993.ᐃⲆⲆⲆ.list.select(1);
    }, false);
    document.getElementById("toolcategory").addEventListener("mouseup", function () {
      v2993.ᐃⲆⲆⲆ.list.select(0);
    }, false);
    document.getElementById("foodcategory").addEventListener("mouseup", function () {
      v2993.ᐃⲆⲆⲆ.list.select(3);
    }, vVVV2122);
    document.getElementById("placeablecategory").addEventListener("mouseup", function () {
      v2993.ᐃⲆⲆⲆ.list.select(4);
    }, vVVV21222);
    document.getElementById("constructioncategory").addEventListener("mouseup", function () {
      v2993.ᐃⲆⲆⲆ.list.select(5);
    }, false);
    document.getElementById("img_1").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(0);
    }, vVV212);
    document.getElementById("img_2").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(1);
    }, false);
    document.getElementById("img_3").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(2);
    }, v21);
    document.getElementById("img_4").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(3);
    }, false);
    document.getElementById("img_5").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(4);
    }, false);
    document.getElementById("img_6").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(5);
    }, false);
    document.getElementById("img_7").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(6);
    }, false);
    document.getElementById("img_8").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(7);
    }, false);
    document.getElementById("img_9").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(8);
    }, vVV21);
    document.getElementById("img_10").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(9);
    }, false);
    document.getElementById("img_11").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(10);
    }, false);
    document.getElementById("img_12").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(11);
    }, false);
    document.getElementById("img_13").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(12);
    }, false);
    document.getElementById("img_14").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(13);
    }, false);
    document.getElementById("img_15").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(14);
    }, false);
    document.getElementById("img_16").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(15);
    }, false);
    document.getElementById("img_17").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(16);
    }, vVVV213);
    document.getElementById("img_18").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(17);
    }, vVV213);
    document.getElementById("img_19").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(18);
    }, false);
    document.getElementById("img_20").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(19);
    }, vVV2123);
    document.getElementById("img_21").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(20);
    }, vVVV2133);
    document.getElementById("img_22").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(21);
    }, false);
    document.getElementById("img_23").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(22);
    }, false);
    document.getElementById("img_24").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(23);
    }, vVVV213);
    document.getElementById("img_25").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(24);
    }, vVVVV21);
    document.getElementById("img_26").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(25);
    }, false);
    document.getElementById("img_27").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(26);
    }, false);
    document.getElementById("img_28").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(27);
    }, vVVVV21222);
    document.getElementById("img_29").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(28);
    }, vVVV2132);
    document.getElementById("img_30").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(29);
    }, false);
    document.getElementById("img_31").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(30);
    }, vVVVV21);
    document.getElementById("img_32").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(31);
    }, vVVV2132);
    document.getElementById("img_33").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(32);
    }, false);
    document.getElementById("img_34").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(33);
    }, false);
    document.getElementById("img_35").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(34);
    }, vVVV2133);
    document.getElementById("img_36").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(35);
    }, false);
    document.getElementById("img_37").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(36);
    }, vVVVV212);
    document.getElementById("img_38").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(37);
    }, false);
    document.getElementById("img_39").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(38);
    }, false);
    document.getElementById("img_40").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(39);
    }, vV212);
    document.getElementById("img_41").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(40);
    }, false);
    document.getElementById("img_42").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(41);
    }, false);
    document.getElementById("img_43").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(42);
    }, false);
    document.getElementById("img_44").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(43);
    }, vV21);
    document.getElementById("img_45").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(44);
    }, false);
    document.getElementById("img_46").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(45);
    }, false);
    document.getElementById("img_47").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(46);
    }, vVVVV21222);
    document.getElementById("img_48").addEventListener("mousedown", function () {
      v2993.ᐃⲆⲆⲆ.list.ᐃⲆΔⲆ(47);
    }, vVV213);
    this.ΔⵠⲆᐃΔ = {
      translate: {
        x: 0,
        y: 0
      },
      ΔᐃΔΔⲆ: {
        x: -1,
        y: -1
      },
      ᐃΔΔᐃ: [],
      focus: function (p1710) {
        var v2719 = this.translate.y + (v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length > 0 ? -120 : -50);
        if (p1710.x > this.translate.x && p1710.x < this.translate.x + 193 && p1710.y > v2719 && p1710.y < v2719 + 193) {
          this.ΔᐃΔΔⲆ.x = p1710.x - this.translate.x;
          this.ΔᐃΔΔⲆ.y = p1710.y - v2719;
        }
      }
    };
    this.ⵠⲆᐃᐃ = {
      translate: {
        y: 0,
        x: 0
      },
      ⵠΔ: ⲆⲆ[278],
      ⵠⲆ: document.createElement("canvas")
    };
    this.ⵠⲆᐃᐃ.ⵠⲆ.width = this.ⵠⲆᐃᐃ.ⵠΔ.width;
    this.ⵠⲆᐃᐃ.ⵠⲆ.height = this.ⵠⲆᐃᐃ.ⵠΔ.height;
    this.ⵠⲆᐃᐃ.ᐃ = this.ⵠⲆᐃᐃ.ⵠⲆ.getContext("2d");
    this.ⲆⵠⵠΔ = {
      translate: {
        y: 0,
        x: 0
      },
      ⵠΔ: ⲆⲆ[267],
      ΔⵠⵠΔ: f315,
      y: 0
    };
    var v2720 = vWindow.document.createElement("div");
    this.ᐃⲆΔⲆⵠⵠΔ = function () {
      ΔⵠⲆⲆᐃ = document.getElementById("team_box");
      ΔⵠⲆⲆᐃ.innerHTML = "";
      ΔⵠⲆⲆᐃ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2720.innerText = v2813.ᐃΔΔᐃ[v2814.ⲆᐃᐃΔⲆ[0]].ᐃΔᐃⲆⵠ) && v2720.innerHTML) + "</div";
      for (var v2721 = 1; v2721 < v2814.ⲆᐃᐃΔⲆ.length; v2721++) {
        ΔⵠⲆⲆᐃ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2720.innerText = v2813.ᐃΔΔᐃ[v2814.ⲆᐃᐃΔⲆ[v2721]].ᐃΔᐃⲆⵠ) && v2720.innerHTML) + "</div></div>";
      }
      ΔⵠⲆⲆᐃ.innerHTML += "<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>";
      ΔⵠⲆⲆᐃ.style.display = "inline-block";
      document.getElementById("leave").addEventListener("click", v2816.ᐃⲆΔⲆⵠⵠΔ, false);
    };
    this.ΔⲆⲆΔⵠΔΔⵠⵠ = function () {
      ΔⵠⲆⲆᐃ = document.getElementById("team_box");
      ΔⵠⲆⲆᐃ.innerHTML = "";
      ΔⵠⲆⲆᐃ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2720.innerText = v2813.ᐃΔΔᐃ[v2814.ⲆᐃᐃΔⲆ[0]].ᐃΔᐃⲆⵠ) && v2720.innerHTML) + "</div";
      for (var v2722 = 1; v2814.ⲆᐃᐃΔⲆ.length > v2722; v2722++) {
        ΔⵠⲆⲆᐃ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2720.innerText = v2813.ᐃΔΔᐃ[v2814.ⲆᐃᐃΔⲆ[v2722]].ᐃΔᐃⲆⵠ) && v2720.innerHTML) + "</div></div>";
      }
      ΔⵠⲆⲆᐃ.innerHTML += "</div>";
      ΔⵠⲆⲆᐃ.style.display = "inline-block";
    };
    this.ⲆΔⵠᐃⵠⲆΔⵠⲆ = function () {
      ΔⵠⲆⲆᐃ = document.getElementById("team_box");
      ΔⵠⲆⲆᐃ.innerHTML = "";
      ΔⵠⲆⲆᐃ.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-right:5px;\" ></img>" + ((v2720.innerText = v2813.ᐃΔΔᐃ[v2814.ⲆᐃᐃΔⲆ[0]].ᐃΔᐃⲆⵠ) && v2720.innerHTML) + "</div";
      for (var v2723 = 1; v2814.ⲆᐃᐃΔⲆ.length > v2723; v2723++) {
        ΔⵠⲆⲆᐃ.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + ((v2720.innerText = v2813.ᐃΔΔᐃ[v2814.ⲆᐃᐃΔⲆ[v2723]].ᐃΔᐃⲆⵠ) && v2720.innerHTML) + "</div><div class=\"eject_member\" id=\"eject_member" + v2723 + "\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>";
      }
      if (v2814.ⲆΔⵠᐃⵠ.lock === 0) {
        ΔⵠⲆⲆᐃ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>";
      } else {
        ΔⵠⲆⲆᐃ.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>";
      }
      document.getElementById("lock_team").addEventListener("click", v2816.ⵠΔⲆΔᐃⵠᐃⵠᐃ, vVVV212);
      ΔⵠⲆⲆᐃ.style.display = "inline-block";
      for (v2723 = 1; v2814.ⲆᐃᐃΔⲆ.length > v2723; v2723++) {
        switch (v2723) {
          case 1:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(1);
            }, false);
            break;
          case 2:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(2);
            }, vVVVV21);
            break;
          case 3:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(3);
            }, false);
            break;
          case 4:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(4);
            }, v21);
            break;
          case 5:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(5);
            }, false);
            break;
          case 6:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(6);
            }, vVVV21222);
            break;
          case 7:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(7);
            }, false);
            break;
          case 8:
            document.getElementById("eject_member" + v2723).addEventListener("click", function () {
              v2816.ᐃⲆⵠⲆⵠΔⵠ(8);
            }, vVVV2133);
        }
      }
    };
    this.ⵠΔⲆⵠΔ = [];
    this.ⵠΔⲆⵠΔ[2] = {
      button: f418(60, 60, 0, ⲆⲆ[556]),
      action: this.ᐃⲆΔⲆⵠⵠΔ
    };
    this.ⵠΔⲆⵠΔ[3] = {
      button: f418(60, 60, 0, ⲆⲆ[556]),
      action: v2816.ⲆⲆⲆⵠΔΔΔᐃⲆ
    };
    this.ⵠΔⲆⵠΔ[0] = {
      button: f418(60, 60, 0, ⲆⲆ[557]),
      action: this.ⲆΔⵠᐃⵠⲆΔⵠⲆ
    };
    this.ⵠΔⲆⵠΔ[1] = {
      button: f418(60, 60, 0, ⲆⲆ[561]),
      action: this.ΔⲆⲆΔⵠΔΔⵠⵠ
    };
    this.ⵠΔⲆⵠΔ[4] = {
      button: f418(60, 60, 0, ⲆⲆ[560]),
      action: function () {}
    };
    this.ᐃΔΔΔⵠ = -1;
    this.ΔⵠⲆᐃᐃⵠⵠ = f418(60, 60, 0, ⲆⲆ[723]);
    this.ΔᐃⵠⵠᐃΔΔ = f418(60, 60, 0, ⲆⲆ[724]);
    this.ΔⵠⵠᐃᐃⲆⵠ = f418(60, 60, 0, ⲆⲆ[658]);
    this.ᐃⲆᐃⵠΔΔⲆ = f418(60, 60, 0, ⲆⲆ[657]);
    this.ΔⲆᐃⵠⵠᐃᐃ = f418(60, 60, 0, ⲆⲆ[658]);
    this.ᐃΔΔΔᐃⵠΔ = f418(60, 60, 0, ⲆⲆ[316]);
    this.ΔⵠⵠⲆⲆⲆⵠ = f418(60, 60, 0, ⲆⲆ[315]);
    this.ⲆⲆⲆΔᐃᐃΔ = f418(60, 60, 0, ⲆⲆ[297]);
    this.ᐃⲆⵠⲆⵠⲆⲆ = f418(60, 60, 0, ⲆⲆ[298]);
    this.ⵠⵠⵠᐃⲆⲆΔ = f418(60, 60, 0, ⲆⲆ[418]);
    this.ⲆⵠΔΔΔᐃΔ = f418(60, 60, 0, ⲆⲆ[938]);
    this.ᐃΔΔᐃⵠᐃⲆ = f418(60, 60, 0, ⲆⲆ[412]);
    this.ᐃΔᐃΔⵠⵠⵠ = f418(60, 60, 0, ⲆⲆ[536]);
    this.ⵠΔᐃΔΔᐃΔ = f418(60, 60, 0, ⲆⲆ[535]);
    this.ΔⲆΔᐃⲆⲆᐃ = f418(60, 60, 0, ⲆⲆ[538]);
    this.ⲆⵠΔᐃΔ = f418(120, 120, 0, ⲆⲆ[149]);
    this.ⲆⵠΔᐃΔ.info.translate.x = 10;
    this.ⲆⵠΔᐃΔ.info.translate.y = 10;
    this.ⲆⲆᐃ = [];
    this.ⲆⲆᐃ[0] = f418(68, 68, 0, ⲆⲆ[340], 3);
    this.ⲆⲆᐃ[0].id = 0;
    this.ⲆⲆᐃ[1] = f418(68, 68, 0, ⲆⲆ[341], 3);
    this.ⲆⲆᐃ[1].id = 1;
    this.ⲆⲆᐃ[108] = f418(68, 68, 0, ⲆⲆ[342], 3);
    this.ⲆⲆᐃ[108].id = 108;
    this.ⲆⲆᐃ[109] = f418(68, 68, 0, ⲆⲆ[343], 3);
    this.ⲆⲆᐃ[109].id = 109;
    this.ⲆⲆᐃ[110] = f418(68, 68, 0, ⲆⲆ[269], 3);
    this.ⲆⲆᐃ[110].id = 110;
    this.ⲆⲆᐃ[233] = f418(68, 68, 0, ⲆⲆ[1155], 3);
    this.ⲆⲆᐃ[233].id = 233;
    this.ⲆⲆᐃ[111] = f418(68, 68, 0, ⲆⲆ[270], 3);
    this.ⲆⲆᐃ[111].id = 111;
    this.ⲆⲆᐃ[112] = f418(68, 68, 0, ⲆⲆ[271], 3);
    this.ⲆⲆᐃ[112].id = 112;
    this.ⲆⲆᐃ[3] = f418(68, 68, 0, ⲆⲆ[272], 3);
    this.ⲆⲆᐃ[3].id = 3;
    this.ⲆⲆᐃ[4] = f418(68, 68, 0, ⲆⲆ[344], 3);
    this.ⲆⲆᐃ[4].id = 4;
    this.ⲆⲆᐃ[5] = f418(68, 68, 0, ⲆⲆ[345], 3);
    this.ⲆⲆᐃ[5].id = 5;
    this.ⲆⲆᐃ[57] = f418(68, 68, 0, ⲆⲆ[831], 3);
    this.ⲆⲆᐃ[57].id = 57;
    this.ⲆⲆᐃ[6] = f418(68, 68, 0, ⲆⲆ[346], 3);
    this.ⲆⲆᐃ[6].id = 6;
    this.ⲆⲆᐃ[113] = f418(68, 68, 0, ⲆⲆ[273], 3);
    this.ⲆⲆᐃ[113].id = 113;
    this.ⲆⲆᐃ[114] = f418(68, 68, 0, ⲆⲆ[358], 3);
    this.ⲆⲆᐃ[114].id = 114;
    this.ⲆⲆᐃ[115] = f418(68, 68, 0, ⲆⲆ[348], 3);
    this.ⲆⲆᐃ[115].id = 115;
    this.ⲆⲆᐃ[162] = f418(68, 68, 0, ⲆⲆ[349], 3);
    this.ⲆⲆᐃ[162].id = 162;
    this.ⲆⲆᐃ[160] = f418(68, 68, 0, ⲆⲆ[350], 3);
    this.ⲆⲆᐃ[160].id = 160;
    this.ⲆⲆᐃ[8] = f418(68, 68, 0, ⲆⲆ[274], 3);
    this.ⲆⲆᐃ[8].id = 8;
    this.ⲆⲆᐃ[117] = f418(68, 68, 0, ⲆⲆ[351], 3);
    this.ⲆⲆᐃ[117].id = 117;
    this.ⲆⲆᐃ[116] = f418(68, 68, 0, ⲆⲆ[275], 3);
    this.ⲆⲆᐃ[116].id = 116;
    this.ⲆⲆᐃ[118] = f418(68, 68, 0, ⲆⲆ[276], 3);
    this.ⲆⲆᐃ[118].id = 118;
    this.ⲆⲆᐃ[195] = f418(68, 68, 0, ⲆⲆ[352], 3);
    this.ⲆⲆᐃ[195].id = 195;
    this.ⲆⲆᐃ[161] = f418(68, 68, 0, ⲆⲆ[353], 3);
    this.ⲆⲆᐃ[161].id = 161;
    this.ⲆⲆᐃ[163] = f418(68, 68, 0, ⲆⲆ[354], 3);
    this.ⲆⲆᐃ[163].id = 163;
    this.ⲆⲆᐃ[164] = f418(68, 68, 0, ⲆⲆ[355], 3);
    this.ⲆⲆᐃ[164].id = 164;
    this.ⲆⲆᐃ[165] = f418(68, 68, 0, ⲆⲆ[356], 3);
    this.ⲆⲆᐃ[165].id = 165;
    this.ⲆⲆᐃ[166] = f418(68, 68, 0, ⲆⲆ[357], 3);
    this.ⲆⲆᐃ[166].id = 166;
    this.ⲆⲆᐃ[167] = f418(68, 68, 0, ⲆⲆ[359], 3);
    this.ⲆⲆᐃ[167].id = 167;
    this.ⲆⲆᐃ[168] = f418(68, 68, 0, ⲆⲆ[382], 3);
    this.ⲆⲆᐃ[168].id = 168;
    this.ⲆⲆᐃ[169] = f418(68, 68, 0, ⲆⲆ[383], 3);
    this.ⲆⲆᐃ[169].id = 169;
    this.ⲆⲆᐃ[170] = f418(68, 68, 0, ⲆⲆ[384], 3);
    this.ⲆⲆᐃ[170].id = 170;
    this.ⲆⲆᐃ[2] = f418(68, 68, 0, ⲆⲆ[386], 3);
    this.ⲆⲆᐃ[2].id = 2;
    this.ⲆⲆᐃ[237] = f418(68, 68, 0, ⲆⲆ[1163], 3);
    this.ⲆⲆᐃ[237].id = 237;
    this.ⲆⲆᐃ[174] = f418(68, 68, 0, ⲆⲆ[394], 3);
    this.ⲆⲆᐃ[174].id = 174;
    this.ⲆⲆᐃ[222] = f418(68, 68, 0, ⲆⲆ[1036], 3);
    this.ⲆⲆᐃ[222].id = 222;
    this.ⲆⲆᐃ[231] = f418(68, 68, 0, ⲆⲆ[1038], 3);
    this.ⲆⲆᐃ[231].id = 231;
    this.ⲆⲆᐃ[232] = f418(68, 68, 0, ⲆⲆ[1040], 3);
    this.ⲆⲆᐃ[232].id = 232;
    this.ⲆⲆᐃ[234] = f418(68, 68, 0, ⲆⲆ[1157], 3);
    this.ⲆⲆᐃ[234].id = 234;
    this.ⲆⲆᐃ[10] = f418(68, 68, 0, ⲆⲆ[387], 3);
    this.ⲆⲆᐃ[10].id = 10;
    this.ⲆⲆᐃ[171] = f418(68, 68, 0, ⲆⲆ[388], 3);
    this.ⲆⲆᐃ[171].id = 171;
    this.ⲆⲆᐃ[172] = f418(68, 68, 0, ⲆⲆ[389], 3);
    this.ⲆⲆᐃ[172].id = 172;
    this.ⲆⲆᐃ[173] = f418(68, 68, 0, ⲆⲆ[390], 3);
    this.ⲆⲆᐃ[173].id = 173;
    this.ⲆⲆᐃ[11] = f418(68, 68, 0, ⲆⲆ[391], 3);
    this.ⲆⲆᐃ[11].id = 11;
    this.ⲆⲆᐃ[12] = f418(68, 68, 0, ⲆⲆ[403], 3);
    this.ⲆⲆᐃ[12].id = 12;
    this.ⲆⲆᐃ[13] = f418(68, 68, 0, ⲆⲆ[397], 3);
    this.ⲆⲆᐃ[13].id = 13;
    this.ⲆⲆᐃ[14] = f418(68, 68, 0, ⲆⲆ[400], 3);
    this.ⲆⲆᐃ[14].id = 14;
    this.ⲆⲆᐃ[15] = f418(68, 68, 0, ⲆⲆ[406], 3);
    this.ⲆⲆᐃ[15].id = 15;
    this.ⲆⲆᐃ[16] = f418(68, 68, 0, ⲆⲆ[875], 3);
    this.ⲆⲆᐃ[16].id = 16;
    this.ⲆⲆᐃ[119] = f418(68, 68, 0, ⲆⲆ[410], 3);
    this.ⲆⲆᐃ[119].id = 119;
    this.ⲆⲆᐃ[23] = f418(68, 68, 0, ⲆⲆ[422], 3);
    this.ⲆⲆᐃ[23].id = 23;
    this.ⲆⲆᐃ[24] = f418(68, 68, 0, ⲆⲆ[425], 3);
    this.ⲆⲆᐃ[24].id = 24;
    this.ⲆⲆᐃ[87] = f418(68, 68, 0, ⲆⲆ[1229], 3);
    this.ⲆⲆᐃ[87].id = 87;
    this.ⲆⲆᐃ[88] = f418(68, 68, 0, ⲆⲆ[1232], 3);
    this.ⲆⲆᐃ[88].id = 88;
    this.ⲆⲆᐃ[80] = f418(68, 68, 0, ⲆⲆ[1139], 3);
    this.ⲆⲆᐃ[80].id = 80;
    this.ⲆⲆᐃ[81] = f418(68, 68, 0, ⲆⲆ[1142], 3);
    this.ⲆⲆᐃ[81].id = 81;
    this.ⲆⲆᐃ[101] = f418(68, 68, 0, ⲆⲆ[1167], 3);
    this.ⲆⲆᐃ[101].id = 101;
    this.ⲆⲆᐃ[64] = f418(68, 68, 0, ⲆⲆ[571], 3);
    this.ⲆⲆᐃ[64].id = 64;
    this.ⲆⲆᐃ[71] = f418(68, 68, 0, ⲆⲆ[1240], 3);
    this.ⲆⲆᐃ[71].id = 71;
    this.ⲆⲆᐃ[102] = f418(68, 68, 0, ⲆⲆ[1170], 3);
    this.ⲆⲆᐃ[102].id = 102;
    this.ⲆⲆᐃ[65] = f418(68, 68, 0, ⲆⲆ[574], 3);
    this.ⲆⲆᐃ[65].id = 65;
    this.ⲆⲆᐃ[72] = f418(68, 68, 0, ⲆⲆ[1243], 3);
    this.ⲆⲆᐃ[72].id = 72;
    this.ⲆⲆᐃ[103] = f418(68, 68, 0, ⲆⲆ[1173], 3);
    this.ⲆⲆᐃ[103].id = 103;
    this.ⲆⲆᐃ[66] = f418(68, 68, 0, ⲆⲆ[577], 3);
    this.ⲆⲆᐃ[66].id = 66;
    this.ⲆⲆᐃ[73] = f418(68, 68, 0, ⲆⲆ[1246], 3);
    this.ⲆⲆᐃ[73].id = 73;
    this.ⲆⲆᐃ[104] = f418(68, 68, 0, ⲆⲆ[1176], 3);
    this.ⲆⲆᐃ[104].id = 104;
    this.ⲆⲆᐃ[67] = f418(68, 68, 0, ⲆⲆ[580], 3);
    this.ⲆⲆᐃ[67].id = 67;
    this.ⲆⲆᐃ[74] = f418(68, 68, 0, ⲆⲆ[1249], 3);
    this.ⲆⲆᐃ[74].id = 74;
    this.ⲆⲆᐃ[105] = f418(68, 68, 0, ⲆⲆ[1179], 3);
    this.ⲆⲆᐃ[105].id = 105;
    this.ⲆⲆᐃ[68] = f418(68, 68, 0, ⲆⲆ[583], 3);
    this.ⲆⲆᐃ[68].id = 68;
    this.ⲆⲆᐃ[75] = f418(68, 68, 0, ⲆⲆ[1252], 3);
    this.ⲆⲆᐃ[75].id = 75;
    this.ⲆⲆᐃ[106] = f418(68, 68, 0, ⲆⲆ[1182], 3);
    this.ⲆⲆᐃ[106].id = 106;
    this.ⲆⲆᐃ[69] = f418(68, 68, 0, ⲆⲆ[586], 3);
    this.ⲆⲆᐃ[69].id = 69;
    this.ⲆⲆᐃ[76] = f418(68, 68, 0, ⲆⲆ[1255], 3);
    this.ⲆⲆᐃ[76].id = 76;
    this.ⲆⲆᐃ[107] = f418(68, 68, 0, ⲆⲆ[1185], 3);
    this.ⲆⲆᐃ[107].id = 107;
    this.ⲆⲆᐃ[70] = f418(68, 68, 0, ⲆⲆ[589], 3);
    this.ⲆⲆᐃ[70].id = 70;
    this.ⲆⲆᐃ[94] = f418(68, 68, 0, ⲆⲆ[1258], 3);
    this.ⲆⲆᐃ[94].id = 94;
    this.ⲆⲆᐃ[95] = f418(68, 68, 0, ⲆⲆ[1261], 3);
    this.ⲆⲆᐃ[95].id = 95;
    this.ⲆⲆᐃ[96] = f418(68, 68, 0, ⲆⲆ[1264], 3);
    this.ⲆⲆᐃ[96].id = 96;
    this.ⲆⲆᐃ[97] = f418(68, 68, 0, ⲆⲆ[1267], 3);
    this.ⲆⲆᐃ[97].id = 97;
    this.ⲆⲆᐃ[98] = f418(68, 68, 0, ⲆⲆ[1270], 3);
    this.ⲆⲆᐃ[98].id = 98;
    this.ⲆⲆᐃ[99] = f418(68, 68, 0, ⲆⲆ[1273], 3);
    this.ⲆⲆᐃ[99].id = 99;
    this.ⲆⲆᐃ[58] = f418(68, 68, 0, ⲆⲆ[828], 3);
    this.ⲆⲆᐃ[58].id = 58;
    this.ⲆⲆᐃ[25] = f418(68, 68, 0, ⲆⲆ[431], 3);
    this.ⲆⲆᐃ[25].id = 25;
    this.ⲆⲆᐃ[26] = f418(68, 68, 0, ⲆⲆ[434], 3);
    this.ⲆⲆᐃ[26].id = 26;
    this.ⲆⲆᐃ[27] = f418(68, 68, 0, ⲆⲆ[437], 3);
    this.ⲆⲆᐃ[27].id = 27;
    this.ⲆⲆᐃ[28] = f418(68, 68, 0, ⲆⲆ[440], 3);
    this.ⲆⲆᐃ[28].id = 28;
    this.ⲆⲆᐃ[120] = f418(68, 68, 0, ⲆⲆ[443], 3);
    this.ⲆⲆᐃ[120].id = 120;
    this.ⲆⲆᐃ[29] = f418(68, 68, 0, ⲆⲆ[385], 3);
    this.ⲆⲆᐃ[29].id = 29;
    this.ⲆⲆᐃ[121] = f418(68, 68, 0, ⲆⲆ[446], 3);
    this.ⲆⲆᐃ[121].id = 121;
    this.ⲆⲆᐃ[30] = f418(68, 68, 0, ⲆⲆ[457], 3);
    this.ⲆⲆᐃ[30].id = 30;
    this.ⲆⲆᐃ[9] = f418(68, 68, 0, ⲆⲆ[862], 3);
    this.ⲆⲆᐃ[9].id = 9;
    this.ⲆⲆᐃ[31] = f418(68, 68, 0, ⲆⲆ[459], 3);
    this.ⲆⲆᐃ[31].id = 31;
    this.ⲆⲆᐃ[32] = f418(68, 68, 0, ⲆⲆ[1018], 3);
    this.ⲆⲆᐃ[32].id = 32;
    this.ⲆⲆᐃ[33] = f418(68, 68, 0, ⲆⲆ[474], 3);
    this.ⲆⲆᐃ[33].id = 33;
    this.ⲆⲆᐃ[35] = f418(68, 68, 0, ⲆⲆ[479], 3);
    this.ⲆⲆᐃ[35].id = 35;
    this.ⲆⲆᐃ[36] = f418(68, 68, 0, ⲆⲆ[482], 3);
    this.ⲆⲆᐃ[36].id = 36;
    this.ⲆⲆᐃ[37] = f418(68, 68, 0, ⲆⲆ[485], 3);
    this.ⲆⲆᐃ[37].id = 37;
    this.ⲆⲆᐃ[38] = f418(68, 68, 0, ⲆⲆ[488], 3);
    this.ⲆⲆᐃ[38].id = 38;
    this.ⲆⲆᐃ[39] = f418(68, 68, 0, ⲆⲆ[491], 3);
    this.ⲆⲆᐃ[39].id = 39;
    this.ⲆⲆᐃ[122] = f418(68, 68, 0, ⲆⲆ[494], 3);
    this.ⲆⲆᐃ[122].id = 122;
    this.ⲆⲆᐃ[123] = f418(68, 68, 0, ⲆⲆ[497], 3);
    this.ⲆⲆᐃ[123].id = 123;
    this.ⲆⲆᐃ[124] = f418(68, 68, 0, ⲆⲆ[501], 3);
    this.ⲆⲆᐃ[124].id = 124;
    this.ⲆⲆᐃ[40] = f418(68, 68, 0, ⲆⲆ[504], 3);
    this.ⲆⲆᐃ[40].id = 40;
    this.ⲆⲆᐃ[146] = f418(68, 68, 0, ⲆⲆ[506], 3);
    this.ⲆⲆᐃ[146].id = 146;
    this.ⲆⲆᐃ[240] = f418(68, 68, 0, ⲆⲆ[1234], 3);
    this.ⲆⲆᐃ[240].id = 240;
    this.ⲆⲆᐃ[147] = f418(68, 68, 0, ⲆⲆ[514], 3);
    this.ⲆⲆᐃ[147].id = 147;
    this.ⲆⲆᐃ[148] = f418(68, 68, 0, ⲆⲆ[520], 3);
    this.ⲆⲆᐃ[148].id = 148;
    this.ⲆⲆᐃ[149] = f418(68, 68, 0, ⲆⲆ[522], 3);
    this.ⲆⲆᐃ[149].id = 149;
    this.ⲆⲆᐃ[150] = f418(68, 68, 0, ⲆⲆ[524], 3);
    this.ⲆⲆᐃ[150].id = 150;
    this.ⲆⲆᐃ[151] = f418(68, 68, 0, ⲆⲆ[531], 3);
    this.ⲆⲆᐃ[151].id = 151;
    this.ⲆⲆᐃ[158] = f418(68, 68, 0, ⲆⲆ[534], 3);
    this.ⲆⲆᐃ[158].id = 158;
    this.ⲆⲆᐃ[159] = f418(68, 68, 0, ⲆⲆ[554], 3);
    this.ⲆⲆᐃ[159].id = 159;
    this.ⲆⲆᐃ[43] = f418(68, 68, 0, ⲆⲆ[543], 3);
    this.ⲆⲆᐃ[43].id = 43;
    this.ⲆⲆᐃ[45] = f418(68, 68, 0, ⲆⲆ[552], 3);
    this.ⲆⲆᐃ[45].id = 45;
    this.ⲆⲆᐃ[125] = f418(68, 68, 0, ⲆⲆ[606], 3);
    this.ⲆⲆᐃ[125].id = 125;
    this.ⲆⲆᐃ[221] = f418(68, 68, 0, ⲆⲆ[1237], 3);
    this.ⲆⲆᐃ[221].id = 221;
    this.ⲆⲆᐃ[223] = f418(68, 68, 0, ⲆⲆ[1029], 3);
    this.ⲆⲆᐃ[223].id = 223;
    this.ⲆⲆᐃ[224] = f418(68, 68, 0, ⲆⲆ[1032], 3);
    this.ⲆⲆᐃ[224].id = 224;
    this.ⲆⲆᐃ[230] = f418(68, 68, 0, ⲆⲆ[1118], 3);
    this.ⲆⲆᐃ[230].id = 230;
    this.ⲆⲆᐃ[89] = f418(68, 68, 0, ⲆⲆ[1047], 3);
    this.ⲆⲆᐃ[89].id = 89;
    this.ⲆⲆᐃ[225] = f418(68, 68, 0, ⲆⲆ[1050], 3);
    this.ⲆⲆᐃ[225].id = 225;
    this.ⲆⲆᐃ[227] = f418(68, 68, 0, ⲆⲆ[1081], 3);
    this.ⲆⲆᐃ[227].id = 227;
    this.ⲆⲆᐃ[239] = f418(68, 68, 0, ⲆⲆ[1225], 3);
    this.ⲆⲆᐃ[239].id = 239;
    this.ⲆⲆᐃ[228] = f418(68, 68, 0, ⲆⲆ[1096], 3);
    this.ⲆⲆᐃ[228].id = 228;
    this.ⲆⲆᐃ[229] = f418(68, 68, 0, ⲆⲆ[1111], 3);
    this.ⲆⲆᐃ[229].id = 229;
    this.ⲆⲆᐃ[226] = f418(68, 68, 0, ⲆⲆ[1190], 3);
    this.ⲆⲆᐃ[226].id = 226;
    this.ⲆⲆᐃ[126] = f418(68, 68, 0, ⲆⲆ[610], 3);
    this.ⲆⲆᐃ[126].id = 126;
    this.ⲆⲆᐃ[127] = f418(68, 68, 0, ⲆⲆ[615], 3);
    this.ⲆⲆᐃ[127].id = 127;
    this.ⲆⲆᐃ[128] = f418(68, 68, 0, ⲆⲆ[614], 3);
    this.ⲆⲆᐃ[128].id = 128;
    this.ⲆⲆᐃ[46] = f418(68, 68, 0, ⲆⲆ[617], 3);
    this.ⲆⲆᐃ[46].id = 46;
    this.ⲆⲆᐃ[50] = f418(68, 68, 0, ⲆⲆ[701], 3);
    this.ⲆⲆᐃ[50].id = 50;
    this.ⲆⲆᐃ[51] = f418(68, 68, 0, ⲆⲆ[703], 3);
    this.ⲆⲆᐃ[51].id = 51;
    this.ⲆⲆᐃ[52] = f418(68, 68, 0, ⲆⲆ[707], 3);
    this.ⲆⲆᐃ[52].id = 52;
    this.ⲆⲆᐃ[55] = f418(68, 68, 0, ⲆⲆ[710], 3);
    this.ⲆⲆᐃ[55].id = 55;
    this.ⲆⲆᐃ[129] = f418(68, 68, 0, ⲆⲆ[625], 3);
    this.ⲆⲆᐃ[129].id = 129;
    this.ⲆⲆᐃ[130] = f418(68, 68, 0, ⲆⲆ[628], 3);
    this.ⲆⲆᐃ[130].id = 130;
    this.ⲆⲆᐃ[131] = f418(68, 68, 0, ⲆⲆ[630], 3);
    this.ⲆⲆᐃ[131].id = 131;
    this.ⲆⲆᐃ[132] = f418(68, 68, 0, ⲆⲆ[633], 3);
    this.ⲆⲆᐃ[132].id = 132;
    this.ⲆⲆᐃ[133] = f418(68, 68, 0, ⲆⲆ[636], 3);
    this.ⲆⲆᐃ[133].id = 133;
    this.ⲆⲆᐃ[134] = f418(68, 68, 0, ⲆⲆ[640], 3);
    this.ⲆⲆᐃ[134].id = 134;
    this.ⲆⲆᐃ[135] = f418(68, 68, 0, ⲆⲆ[645], 3);
    this.ⲆⲆᐃ[135].id = 135;
    this.ⲆⲆᐃ[47] = f418(68, 68, 0, ⲆⲆ[648], 3);
    this.ⲆⲆᐃ[47].id = 47;
    this.ⲆⲆᐃ[48] = f418(68, 68, 0, ⲆⲆ[651], 3);
    this.ⲆⲆᐃ[48].id = 48;
    this.ⲆⲆᐃ[49] = f418(68, 68, 0, ⲆⲆ[653], 3);
    this.ⲆⲆᐃ[49].id = 49;
    this.ⲆⲆᐃ[136] = f418(68, 68, 0, ⲆⲆ[661], 3);
    this.ⲆⲆᐃ[136].id = 136;
    this.ⲆⲆᐃ[143] = f418(68, 68, 0, ⲆⲆ[689], 3);
    this.ⲆⲆᐃ[143].id = 143;
    this.ⲆⲆᐃ[137] = f418(68, 68, 0, ⲆⲆ[663], 3);
    this.ⲆⲆᐃ[137].id = 137;
    this.ⲆⲆᐃ[138] = f418(68, 68, 0, ⲆⲆ[665], 3);
    this.ⲆⲆᐃ[138].id = 138;
    this.ⲆⲆᐃ[139] = f418(68, 68, 0, ⲆⲆ[675], 3);
    this.ⲆⲆᐃ[139].id = 139;
    this.ⲆⲆᐃ[140] = f418(68, 68, 0, ⲆⲆ[682], 3);
    this.ⲆⲆᐃ[140].id = 140;
    this.ⲆⲆᐃ[141] = f418(68, 68, 0, ⲆⲆ[683], 3);
    this.ⲆⲆᐃ[141].id = 141;
    this.ⲆⲆᐃ[142] = f418(68, 68, 0, ⲆⲆ[686], 3);
    this.ⲆⲆᐃ[142].id = 142;
    this.ⲆⲆᐃ[144] = f418(68, 68, 0, ⲆⲆ[719], 3);
    this.ⲆⲆᐃ[144].id = 144;
    this.ⲆⲆᐃ[145] = f418(68, 68, 0, ⲆⲆ[731], 3);
    this.ⲆⲆᐃ[145].id = 145;
    this.ⲆⲆᐃ[59] = f418(68, 68, 0, ⲆⲆ[733], 3);
    this.ⲆⲆᐃ[59].id = 59;
    this.ⲆⲆᐃ[62] = f418(68, 68, 0, ⲆⲆ[565], 3);
    this.ⲆⲆᐃ[62].id = 62;
    this.ⲆⲆᐃ[185] = f418(68, 68, 0, ⲆⲆ[590], 3);
    this.ⲆⲆᐃ[185].id = 185;
    this.ⲆⲆᐃ[184] = f418(68, 68, 0, ⲆⲆ[752], 3);
    this.ⲆⲆᐃ[184].id = 184;
    this.ⲆⲆᐃ[187] = f418(68, 68, 0, ⲆⲆ[591], 3);
    this.ⲆⲆᐃ[187].id = 187;
    this.ⲆⲆᐃ[186] = f418(68, 68, 0, ⲆⲆ[754], 3);
    this.ⲆⲆᐃ[186].id = 186;
    this.ⲆⲆᐃ[77] = f418(68, 68, 0, ⲆⲆ[757], 3);
    this.ⲆⲆᐃ[77].id = 77;
    this.ⲆⲆᐃ[175] = f418(68, 68, 0, ⲆⲆ[759], 3);
    this.ⲆⲆᐃ[175].id = 175;
    this.ⲆⲆᐃ[176] = f418(68, 68, 0, ⲆⲆ[763], 3);
    this.ⲆⲆᐃ[176].id = 176;
    this.ⲆⲆᐃ[78] = f418(68, 68, 0, ⲆⲆ[761], 3);
    this.ⲆⲆᐃ[78].id = 78;
    this.ⲆⲆᐃ[177] = f418(68, 68, 0, ⲆⲆ[766], 3);
    this.ⲆⲆᐃ[177].id = 177;
    this.ⲆⲆᐃ[79] = f418(68, 68, 0, ⲆⲆ[765], 3);
    this.ⲆⲆᐃ[79].id = 79;
    this.ⲆⲆᐃ[83] = f418(68, 68, 0, ⲆⲆ[769], 3);
    this.ⲆⲆᐃ[83].id = 83;
    this.ⲆⲆᐃ[84] = f418(68, 68, 0, ⲆⲆ[773], 3);
    this.ⲆⲆᐃ[84].id = 84;
    this.ⲆⲆᐃ[178] = f418(68, 68, 0, ⲆⲆ[774], 3);
    this.ⲆⲆᐃ[178].id = 178;
    this.ⲆⲆᐃ[179] = f418(68, 68, 0, ⲆⲆ[775], 3);
    this.ⲆⲆᐃ[179].id = 179;
    this.ⲆⲆᐃ[86] = f418(68, 68, 0, ⲆⲆ[778], 3);
    this.ⲆⲆᐃ[86].id = 86;
    this.ⲆⲆᐃ[85] = f418(68, 68, 0, ⲆⲆ[781], 3);
    this.ⲆⲆᐃ[85].id = 85;
    this.ⲆⲆᐃ[180] = f418(68, 68, 0, ⲆⲆ[786], 3);
    this.ⲆⲆᐃ[180].id = 180;
    this.ⲆⲆᐃ[181] = f418(68, 68, 0, ⲆⲆ[787], 3);
    this.ⲆⲆᐃ[181].id = 181;
    this.ⲆⲆᐃ[182] = f418(68, 68, 0, ⲆⲆ[790], 3);
    this.ⲆⲆᐃ[182].id = 182;
    this.ⲆⲆᐃ[183] = f418(68, 68, 0, ⲆⲆ[801], 3);
    this.ⲆⲆᐃ[183].id = 183;
    this.ⲆⲆᐃ[188] = f418(68, 68, 0, ⲆⲆ[810], 3);
    this.ⲆⲆᐃ[188].id = 188;
    this.ⲆⲆᐃ[189] = f418(68, 68, 0, ⲆⲆ[815], 3);
    this.ⲆⲆᐃ[189].id = 189;
    this.ⲆⲆᐃ[190] = f418(68, 68, 0, ⲆⲆ[844], 3);
    this.ⲆⲆᐃ[190].id = 190;
    this.ⲆⲆᐃ[191] = f418(68, 68, 0, ⲆⲆ[836], 3);
    this.ⲆⲆᐃ[191].id = 191;
    this.ⲆⲆᐃ[192] = f418(68, 68, 0, ⲆⲆ[841], 3);
    this.ⲆⲆᐃ[192].id = 192;
    this.ⲆⲆᐃ[193] = f418(68, 68, 0, ⲆⲆ[847], 3);
    this.ⲆⲆᐃ[193].id = 193;
    this.ⲆⲆᐃ[194] = f418(68, 68, 0, ⲆⲆ[851], 3);
    this.ⲆⲆᐃ[194].id = 194;
    this.ⲆⲆᐃ[206] = f418(68, 68, 0, ⲆⲆ[961], 3);
    this.ⲆⲆᐃ[206].id = 206;
    this.ⲆⲆᐃ[207] = f418(68, 68, 0, ⲆⲆ[974], 3);
    this.ⲆⲆᐃ[207].id = 207;
    this.ⲆⲆᐃ[204] = f418(68, 68, 0, ⲆⲆ[951], 3);
    this.ⲆⲆᐃ[204].id = 204;
    this.ⲆⲆᐃ[205] = f418(68, 68, 0, ⲆⲆ[956], 3);
    this.ⲆⲆᐃ[205].id = 205;
    this.ⲆⲆᐃ[208] = f418(68, 68, 0, ⲆⲆ[968], 3);
    this.ⲆⲆᐃ[208].id = 208;
    this.ⲆⲆᐃ[209] = f418(68, 68, 0, ⲆⲆ[973], 3);
    this.ⲆⲆᐃ[209].id = 209;
    this.ⲆⲆᐃ[210] = f418(68, 68, 0, ⲆⲆ[983], 3);
    this.ⲆⲆᐃ[210].id = 210;
    this.ⲆⲆᐃ[211] = f418(68, 68, 0, ⲆⲆ[988], 3);
    this.ⲆⲆᐃ[211].id = 211;
    this.ⲆⲆᐃ[41] = f418(68, 68, 0, ⲆⲆ[881], 3);
    this.ⲆⲆᐃ[41].id = 41;
    this.ⲆⲆᐃ[42] = f418(68, 68, 0, ⲆⲆ[883], 3);
    this.ⲆⲆᐃ[42].id = 42;
    this.ⲆⲆᐃ[12] = f418(68, 68, 0, ⲆⲆ[403], 3);
    this.ⲆⲆᐃ[12].id = 12;
    this.ⲆⲆᐃ[16] = f418(68, 68, 0, ⲆⲆ[875], 3);
    this.ⲆⲆᐃ[16].id = 16;
    this.ⲆⲆᐃ[196] = f418(68, 68, 0, ⲆⲆ[898], 3);
    this.ⲆⲆᐃ[196].id = 196;
    this.ⲆⲆᐃ[18] = f418(68, 68, 0, ⲆⲆ[899], 3);
    this.ⲆⲆᐃ[18].id = 18;
    this.ⲆⲆᐃ[197] = f418(68, 68, 0, ⲆⲆ[906], 3);
    this.ⲆⲆᐃ[197].id = 197;
    this.ⲆⲆᐃ[198] = f418(68, 68, 0, ⲆⲆ[908], 3);
    this.ⲆⲆᐃ[198].id = 198;
    this.ⲆⲆᐃ[61] = f418(68, 68, 0, ⲆⲆ[911], 3);
    this.ⲆⲆᐃ[61].id = 61;
    this.ⲆⲆᐃ[201] = f418(68, 68, 0, ⲆⲆ[871], 3);
    this.ⲆⲆᐃ[201].id = 201;
    this.ⲆⲆᐃ[199] = f418(68, 68, 0, ⲆⲆ[863], 3);
    this.ⲆⲆᐃ[199].id = 199;
    this.ⲆⲆᐃ[200] = f418(68, 68, 0, ⲆⲆ[868], 3);
    this.ⲆⲆᐃ[200].id = 200;
    this.ΔΔⵠΔⵠ = [];
    for (v2703 = 0; v2703 < 250; v2703++) {
      this.ΔΔⵠΔⵠ[v2703] = f418(0, 0, 0, ⲆⲆ[366]);
    }
    this.ΔⵠⲆ = [];
    this.ΔⵠⲆ[0] = f418(60, 60, 0, ⲆⲆ[261], 3);
    this.ΔⵠⲆ[0].id = 0;
    this.ΔⵠⲆ[1] = f418(60, 60, 0, ⲆⲆ[312], 3);
    this.ΔⵠⲆ[1].id = 1;
    this.ΔⵠⲆ[108] = f418(60, 60, 0, ⲆⲆ[315], 3);
    this.ΔⵠⲆ[108].id = 108;
    this.ΔⵠⲆ[108].info.ⵠΔ[2] = this.ΔⵠⲆ[108].info.ⵠΔ[0];
    this.ΔⵠⲆ[109] = f418(60, 60, 0, ⲆⲆ[316], 3);
    this.ΔⵠⲆ[109].id = 109;
    this.ΔⵠⲆ[109].info.ⵠΔ[2] = this.ΔⵠⲆ[109].info.ⵠΔ[0];
    this.ΔⵠⲆ[110] = f418(60, 60, 0, ⲆⲆ[277], 3);
    this.ΔⵠⲆ[110].id = 110;
    this.ΔⵠⲆ[233] = f418(60, 60, 0, ⲆⲆ[1154], 3);
    this.ΔⵠⲆ[233].id = 233;
    this.ΔⵠⲆ[111] = f418(60, 60, 0, ⲆⲆ[297], 3);
    this.ΔⵠⲆ[111].id = 111;
    this.ΔⵠⲆ[111].info.ⵠΔ[2] = this.ΔⵠⲆ[111].info.ⵠΔ[0];
    this.ΔⵠⲆ[112] = f418(60, 60, 0, ⲆⲆ[298], 3);
    this.ΔⵠⲆ[112].id = 112;
    this.ΔⵠⲆ[112].info.ⵠΔ[2] = this.ΔⵠⲆ[112].info.ⵠΔ[0];
    this.ΔⵠⲆ[3] = f418(60, 60, 0, ⲆⲆ[258], 3);
    this.ΔⵠⲆ[3].id = 3;
    this.ΔⵠⲆ[4] = f418(60, 60, 0, ⲆⲆ[296], 3);
    this.ΔⵠⲆ[4].id = 4;
    this.ΔⵠⲆ[5] = f418(60, 60, 0, ⲆⲆ[292], 3);
    this.ΔⵠⲆ[5].id = 5;
    this.ΔⵠⲆ[57] = f418(60, 60, 0, ⲆⲆ[829], 3);
    this.ΔⵠⲆ[57].id = 57;
    this.ΔⵠⲆ[6] = f418(60, 60, 0, ⲆⲆ[293], 3);
    this.ΔⵠⲆ[6].id = 6;
    this.ΔⵠⲆ[113] = f418(60, 60, 0, ⲆⲆ[309], 3);
    this.ΔⵠⲆ[113].id = 113;
    this.ΔⵠⲆ[114] = f418(60, 60, 0, ⲆⲆ[310], 3);
    this.ΔⵠⲆ[114].id = 114;
    this.ΔⵠⲆ[115] = f418(60, 60, 0, ⲆⲆ[311], 3);
    this.ΔⵠⲆ[115].id = 115;
    this.ΔⵠⲆ[162] = f418(60, 60, 0, ⲆⲆ[317], 3);
    this.ΔⵠⲆ[162].id = 162;
    this.ΔⵠⲆ[160] = f418(60, 60, 0, ⲆⲆ[319], 3);
    this.ΔⵠⲆ[160].id = 160;
    this.ΔⵠⲆ[8] = f418(60, 60, 0, ⲆⲆ[313], 3);
    this.ΔⵠⲆ[8].id = 8;
    this.ΔⵠⲆ[117] = f418(60, 60, 0, ⲆⲆ[323], 3);
    this.ΔⵠⲆ[117].id = 117;
    this.ΔⵠⲆ[116] = f418(60, 60, 0, ⲆⲆ[300], 3);
    this.ΔⵠⲆ[116].id = 116;
    this.ΔⵠⲆ[118] = f418(60, 60, 0, ⲆⲆ[328], 3);
    this.ΔⵠⲆ[118].id = 118;
    this.ΔⵠⲆ[195] = f418(60, 60, 0, ⲆⲆ[303], 3);
    this.ΔⵠⲆ[195].id = 195;
    this.ΔⵠⲆ[161] = f418(60, 60, 0, ⲆⲆ[305], 3);
    this.ΔⵠⲆ[161].id = 161;
    this.ΔⵠⲆ[161].info.ⵠΔ[2] = this.ΔⵠⲆ[161].info.ⵠΔ[0];
    this.ΔⵠⲆ[163] = f418(60, 60, 0, ⲆⲆ[329], 3);
    this.ΔⵠⲆ[163].id = 163;
    this.ΔⵠⲆ[164] = f418(60, 60, 0, ⲆⲆ[330], 3);
    this.ΔⵠⲆ[164].id = 164;
    this.ΔⵠⲆ[165] = f418(60, 60, 0, ⲆⲆ[331], 3);
    this.ΔⵠⲆ[165].id = 165;
    this.ΔⵠⲆ[166] = f418(60, 60, 0, ⲆⲆ[335], 3);
    this.ΔⵠⲆ[166].id = 166;
    this.ΔⵠⲆ[167] = f418(60, 60, 0, ⲆⲆ[337], 3);
    this.ΔⵠⲆ[167].id = 167;
    this.ΔⵠⲆ[168] = f418(60, 60, 0, ⲆⲆ[361], 3);
    this.ΔⵠⲆ[168].id = 168;
    this.ΔⵠⲆ[169] = f418(60, 60, 0, ⲆⲆ[362], 3);
    this.ΔⵠⲆ[169].id = 169;
    this.ΔⵠⲆ[170] = f418(60, 60, 0, ⲆⲆ[364], 3);
    this.ΔⵠⲆ[170].id = 170;
    this.ΔⵠⲆ[29] = f418(60, 60, 0, ⲆⲆ[392], 3);
    this.ΔⵠⲆ[29].id = 29;
    this.ΔⵠⲆ[10] = f418(60, 60, 0, ⲆⲆ[369], 3);
    this.ΔⵠⲆ[10].id = 10;
    this.ΔⵠⲆ[171] = f418(60, 60, 0, ⲆⲆ[372], 3);
    this.ΔⵠⲆ[171].id = 171;
    this.ΔⵠⲆ[172] = f418(60, 60, 0, ⲆⲆ[375], 3);
    this.ΔⵠⲆ[172].id = 172;
    this.ΔⵠⲆ[173] = f418(60, 60, 0, ⲆⲆ[378], 3);
    this.ΔⵠⲆ[173].id = 173;
    this.ΔⵠⲆ[2] = f418(60, 60, 0, ⲆⲆ[368], 3);
    this.ΔⵠⲆ[2].id = 2;
    this.ΔⵠⲆ[2].info.ⵠΔ[2] = this.ΔⵠⲆ[2].info.ⵠΔ[0];
    this.ΔⵠⲆ[237] = f418(60, 60, 0, ⲆⲆ[1162], 3);
    this.ΔⵠⲆ[237].id = 237;
    this.ΔⵠⲆ[237].info.ⵠΔ[2] = this.ΔⵠⲆ[237].info.ⵠΔ[0];
    this.ΔⵠⲆ[174] = f418(60, 60, 0, ⲆⲆ[393], 3);
    this.ΔⵠⲆ[174].id = 174;
    this.ΔⵠⲆ[174].info.ⵠΔ[2] = this.ΔⵠⲆ[174].info.ⵠΔ[0];
    this.ΔⵠⲆ[222] = f418(60, 60, 0, ⲆⲆ[1035], 3);
    this.ΔⵠⲆ[222].id = 222;
    this.ΔⵠⲆ[231] = f418(60, 60, 0, ⲆⲆ[1037], 3);
    this.ΔⵠⲆ[231].id = 231;
    this.ΔⵠⲆ[232] = f418(60, 60, 0, ⲆⲆ[1039], 3);
    this.ΔⵠⲆ[232].id = 232;
    this.ΔⵠⲆ[234] = f418(60, 60, 0, ⲆⲆ[1156], 3);
    this.ΔⵠⲆ[234].id = 234;
    this.ΔⵠⲆ[10] = f418(60, 60, 0, ⲆⲆ[369], 3);
    this.ΔⵠⲆ[10].id = 10;
    this.ΔⵠⲆ[11] = f418(60, 60, 0, ⲆⲆ[381], 3);
    this.ΔⵠⲆ[11].id = 11;
    this.ΔⵠⲆ[12] = f418(60, 60, 0, ⲆⲆ[401], 3);
    this.ΔⵠⲆ[12].id = 12;
    this.ΔⵠⲆ[13] = f418(60, 60, 0, ⲆⲆ[395], 3);
    this.ΔⵠⲆ[13].id = 13;
    this.ΔⵠⲆ[14] = f418(60, 60, 0, ⲆⲆ[398], 3);
    this.ΔⵠⲆ[14].id = 14;
    this.ΔⵠⲆ[15] = f418(60, 60, 0, ⲆⲆ[404], 3);
    this.ΔⵠⲆ[15].id = 15;
    this.ΔⵠⲆ[16] = f418(60, 60, 0, ⲆⲆ[874], 3);
    this.ΔⵠⲆ[16].id = 16;
    this.ΔⵠⲆ[119] = f418(60, 60, 0, ⲆⲆ[408], 3);
    this.ΔⵠⲆ[119].id = 119;
    this.ΔⵠⲆ[23] = f418(60, 60, 0, ⲆⲆ[420], 3);
    this.ΔⵠⲆ[23].id = 23;
    this.ΔⵠⲆ[24] = f418(60, 60, 0, ⲆⲆ[423], 3);
    this.ΔⵠⲆ[24].id = 24;
    this.ΔⵠⲆ[87] = f418(60, 60, 0, ⲆⲆ[1227], 3);
    this.ΔⵠⲆ[87].id = 87;
    this.ΔⵠⲆ[88] = f418(60, 60, 0, ⲆⲆ[1230], 3);
    this.ΔⵠⲆ[88].id = 88;
    this.ΔⵠⲆ[80] = f418(60, 60, 0, ⲆⲆ[1137], 3);
    this.ΔⵠⲆ[80].id = 80;
    this.ΔⵠⲆ[81] = f418(60, 60, 0, ⲆⲆ[1140], 3);
    this.ΔⵠⲆ[81].id = 81;
    this.ΔⵠⲆ[64] = f418(60, 60, 0, ⲆⲆ[569], 3);
    this.ΔⵠⲆ[64].id = 64;
    this.ΔⵠⲆ[101] = f418(60, 60, 0, ⲆⲆ[1166], 3);
    this.ΔⵠⲆ[101].id = 101;
    this.ΔⵠⲆ[71] = f418(60, 60, 0, ⲆⲆ[1239], 3);
    this.ΔⵠⲆ[71].id = 71;
    this.ΔⵠⲆ[65] = f418(60, 60, 0, ⲆⲆ[572], 3);
    this.ΔⵠⲆ[65].id = 65;
    this.ΔⵠⲆ[102] = f418(60, 60, 0, ⲆⲆ[1169], 3);
    this.ΔⵠⲆ[102].id = 102;
    this.ΔⵠⲆ[72] = f418(60, 60, 0, ⲆⲆ[1242], 3);
    this.ΔⵠⲆ[72].id = 72;
    this.ΔⵠⲆ[66] = f418(60, 60, 0, ⲆⲆ[575], 3);
    this.ΔⵠⲆ[66].id = 66;
    this.ΔⵠⲆ[103] = f418(60, 60, 0, ⲆⲆ[1172], 3);
    this.ΔⵠⲆ[103].id = 103;
    this.ΔⵠⲆ[73] = f418(60, 60, 0, ⲆⲆ[1245], 3);
    this.ΔⵠⲆ[73].id = 73;
    this.ΔⵠⲆ[67] = f418(60, 60, 0, ⲆⲆ[578], 3);
    this.ΔⵠⲆ[67].id = 67;
    this.ΔⵠⲆ[104] = f418(60, 60, 0, ⲆⲆ[1175], 3);
    this.ΔⵠⲆ[104].id = 104;
    this.ΔⵠⲆ[74] = f418(60, 60, 0, ⲆⲆ[1248], 3);
    this.ΔⵠⲆ[74].id = 74;
    this.ΔⵠⲆ[68] = f418(60, 60, 0, ⲆⲆ[581], 3);
    this.ΔⵠⲆ[68].id = 68;
    this.ΔⵠⲆ[105] = f418(60, 60, 0, ⲆⲆ[1178], 3);
    this.ΔⵠⲆ[105].id = 105;
    this.ΔⵠⲆ[75] = f418(60, 60, 0, ⲆⲆ[1251], 3);
    this.ΔⵠⲆ[75].id = 75;
    this.ΔⵠⲆ[69] = f418(60, 60, 0, ⲆⲆ[584], 3);
    this.ΔⵠⲆ[69].id = 69;
    this.ΔⵠⲆ[106] = f418(60, 60, 0, ⲆⲆ[1181], 3);
    this.ΔⵠⲆ[106].id = 106;
    this.ΔⵠⲆ[76] = f418(60, 60, 0, ⲆⲆ[1254], 3);
    this.ΔⵠⲆ[76].id = 76;
    this.ΔⵠⲆ[70] = f418(60, 60, 0, ⲆⲆ[587], 3);
    this.ΔⵠⲆ[70].id = 70;
    this.ΔⵠⲆ[107] = f418(60, 60, 0, ⲆⲆ[1184], 3);
    this.ΔⵠⲆ[107].id = 107;
    this.ΔⵠⲆ[94] = f418(60, 60, 0, ⲆⲆ[1257], 3);
    this.ΔⵠⲆ[94].id = 94;
    this.ΔⵠⲆ[95] = f418(60, 60, 0, ⲆⲆ[1260], 3);
    this.ΔⵠⲆ[95].id = 95;
    this.ΔⵠⲆ[96] = f418(60, 60, 0, ⲆⲆ[1263], 3);
    this.ΔⵠⲆ[96].id = 96;
    this.ΔⵠⲆ[97] = f418(60, 60, 0, ⲆⲆ[1266], 3);
    this.ΔⵠⲆ[97].id = 97;
    this.ΔⵠⲆ[98] = f418(60, 60, 0, ⲆⲆ[1269], 3);
    this.ΔⵠⲆ[98].id = 98;
    this.ΔⵠⲆ[99] = f418(60, 60, 0, ⲆⲆ[1272], 3);
    this.ΔⵠⲆ[99].id = 99;
    this.ΔⵠⲆ[58] = f418(60, 60, 0, ⲆⲆ[826], 3);
    this.ΔⵠⲆ[58].id = 58;
    this.ΔⵠⲆ[25] = f418(60, 60, 0, ⲆⲆ[429], 3);
    this.ΔⵠⲆ[25].id = 25;
    this.ΔⵠⲆ[26] = f418(60, 60, 0, ⲆⲆ[432], 3);
    this.ΔⵠⲆ[26].id = 26;
    this.ΔⵠⲆ[27] = f418(60, 60, 0, ⲆⲆ[435], 3);
    this.ΔⵠⲆ[27].id = 27;
    this.ΔⵠⲆ[28] = f418(60, 60, 0, ⲆⲆ[438], 3);
    this.ΔⵠⲆ[28].id = 28;
    this.ΔⵠⲆ[120] = f418(60, 60, 0, ⲆⲆ[441], 3);
    this.ΔⵠⲆ[120].id = 120;
    this.ΔⵠⲆ[120].info.ⵠΔ[2] = this.ΔⵠⲆ[120].info.ⵠΔ[0];
    this.ΔⵠⲆ[29] = f418(60, 60, 0, ⲆⲆ[392], 3);
    this.ΔⵠⲆ[29].id = 29;
    this.ΔⵠⲆ[121] = f418(60, 60, 0, ⲆⲆ[418], 3);
    this.ΔⵠⲆ[121].id = 121;
    this.ΔⵠⲆ[121].info.ⵠΔ[2] = this.ΔⵠⲆ[121].info.ⵠΔ[0];
    this.ΔⵠⲆ[30] = f418(60, 60, 0, ⲆⲆ[455], 3);
    this.ΔⵠⲆ[30].id = 30;
    this.ΔⵠⲆ[9] = f418(60, 60, 0, ⲆⲆ[860], 3);
    this.ΔⵠⲆ[9].id = 9;
    this.ΔⵠⲆ[31] = f418(60, 60, 0, ⲆⲆ[458], 3);
    this.ΔⵠⲆ[31].id = 31;
    this.ΔⵠⲆ[32] = f418(60, 60, 0, ⲆⲆ[1017], 3);
    this.ΔⵠⲆ[32].id = 32;
    this.ΔⵠⲆ[33] = f418(60, 60, 0, ⲆⲆ[472], 3);
    this.ΔⵠⲆ[33].id = 33;
    this.ΔⵠⲆ[35] = f418(60, 60, 0, ⲆⲆ[477], 3);
    this.ΔⵠⲆ[35].id = 35;
    this.ΔⵠⲆ[36] = f418(60, 60, 0, ⲆⲆ[480], 3);
    this.ΔⵠⲆ[36].id = 36;
    this.ΔⵠⲆ[37] = f418(60, 60, 0, ⲆⲆ[483], 3);
    this.ΔⵠⲆ[37].id = 37;
    this.ΔⵠⲆ[38] = f418(60, 60, 0, ⲆⲆ[486], 3);
    this.ΔⵠⲆ[38].id = 38;
    this.ΔⵠⲆ[39] = f418(60, 60, 0, ⲆⲆ[489], 3);
    this.ΔⵠⲆ[39].id = 39;
    this.ΔⵠⲆ[122] = f418(60, 60, 0, ⲆⲆ[492], 3);
    this.ΔⵠⲆ[122].id = 122;
    this.ΔⵠⲆ[123] = f418(60, 60, 0, ⲆⲆ[495], 3);
    this.ΔⵠⲆ[123].id = 123;
    this.ΔⵠⲆ[124] = f418(60, 60, 0, ⲆⲆ[499], 3);
    this.ΔⵠⲆ[124].id = 124;
    this.ΔⵠⲆ[40] = f418(60, 60, 0, ⲆⲆ[502], 3);
    this.ΔⵠⲆ[40].id = 40;
    this.ΔⵠⲆ[146] = f418(60, 60, 0, ⲆⲆ[505], 3);
    this.ΔⵠⲆ[146].id = 146;
    this.ΔⵠⲆ[146].info.ⵠΔ[2] = this.ΔⵠⲆ[146].info.ⵠΔ[0];
    this.ΔⵠⲆ[240] = f418(60, 60, 0, ⲆⲆ[1233], 3);
    this.ΔⵠⲆ[240].id = 240;
    this.ΔⵠⲆ[240].info.ⵠΔ[2] = this.ΔⵠⲆ[240].info.ⵠΔ[0];
    this.ΔⵠⲆ[147] = f418(60, 60, 0, ⲆⲆ[513], 3);
    this.ΔⵠⲆ[147].id = 147;
    this.ΔⵠⲆ[147].info.ⵠΔ[2] = this.ΔⵠⲆ[147].info.ⵠΔ[0];
    this.ΔⵠⲆ[148] = f418(60, 60, 0, ⲆⲆ[518], 3);
    this.ΔⵠⲆ[148].id = 148;
    this.ΔⵠⲆ[148].info.ⵠΔ[2] = this.ΔⵠⲆ[148].info.ⵠΔ[0];
    this.ΔⵠⲆ[149] = f418(60, 60, 0, ⲆⲆ[521], 3);
    this.ΔⵠⲆ[149].id = 149;
    this.ΔⵠⲆ[150] = f418(60, 60, 0, ⲆⲆ[523], 3);
    this.ΔⵠⲆ[150].id = 150;
    this.ΔⵠⲆ[151] = f418(60, 60, 0, ⲆⲆ[529], 3);
    this.ΔⵠⲆ[151].id = 151;
    this.ΔⵠⲆ[158] = f418(60, 60, 0, ⲆⲆ[532], 3);
    this.ΔⵠⲆ[158].id = 158;
    this.ΔⵠⲆ[159] = f418(60, 60, 0, ⲆⲆ[553], 3);
    this.ΔⵠⲆ[159].id = 159;
    this.ΔⵠⲆ[43] = f418(60, 60, 0, ⲆⲆ[541], 3);
    this.ΔⵠⲆ[43].id = 43;
    this.ΔⵠⲆ[45] = f418(60, 60, 0, ⲆⲆ[550], 3);
    this.ΔⵠⲆ[45].id = 45;
    this.ΔⵠⲆ[125] = f418(60, 60, 0, ⲆⲆ[605], 3);
    this.ΔⵠⲆ[125].id = 125;
    this.ΔⵠⲆ[221] = f418(60, 60, 0, ⲆⲆ[1236], 3);
    this.ΔⵠⲆ[221].id = 221;
    this.ΔⵠⲆ[223] = f418(60, 60, 0, ⲆⲆ[1028], 3);
    this.ΔⵠⲆ[223].id = 223;
    this.ΔⵠⲆ[224] = f418(60, 60, 0, ⲆⲆ[1031], 3);
    this.ΔⵠⲆ[224].id = 224;
    this.ΔⵠⲆ[230] = f418(60, 60, 0, ⲆⲆ[1117], 3);
    this.ΔⵠⲆ[230].id = 230;
    this.ΔⵠⲆ[89] = f418(60, 60, 0, ⲆⲆ[1046], 3);
    this.ΔⵠⲆ[89].id = 89;
    this.ΔⵠⲆ[225] = f418(60, 60, 0, ⲆⲆ[1049], 3);
    this.ΔⵠⲆ[225].id = 225;
    this.ΔⵠⲆ[226] = f418(60, 60, 0, ⲆⲆ[1189], 3);
    this.ΔⵠⲆ[226].id = 226;
    this.ΔⵠⲆ[227] = f418(60, 60, 0, ⲆⲆ[1080], 3);
    this.ΔⵠⲆ[227].id = 227;
    this.ΔⵠⲆ[239] = f418(60, 60, 0, ⲆⲆ[1224], 3);
    this.ΔⵠⲆ[239].id = 239;
    this.ΔⵠⲆ[228] = f418(60, 60, 0, ⲆⲆ[1095], 3);
    this.ΔⵠⲆ[228].id = 228;
    this.ΔⵠⲆ[229] = f418(60, 60, 0, ⲆⲆ[1110], 3);
    this.ΔⵠⲆ[229].id = 229;
    this.ΔⵠⲆ[126] = f418(60, 60, 0, ⲆⲆ[609], 3);
    this.ΔⵠⲆ[126].id = 126;
    this.ΔⵠⲆ[126].info.ⵠΔ[2] = this.ΔⵠⲆ[126].info.ⵠΔ[0];
    this.ΔⵠⲆ[127] = f418(60, 60, 0, ⲆⲆ[613], 3);
    this.ΔⵠⲆ[127].id = 127;
    this.ΔⵠⲆ[128] = f418(60, 60, 0, ⲆⲆ[612], 3);
    this.ΔⵠⲆ[128].id = 128;
    this.ΔⵠⲆ[46] = f418(60, 60, 0, ⲆⲆ[616], 3);
    this.ΔⵠⲆ[46].id = 46;
    this.ΔⵠⲆ[50] = f418(60, 60, 0, ⲆⲆ[699], 3);
    this.ΔⵠⲆ[50].id = 50;
    this.ΔⵠⲆ[51] = f418(60, 60, 0, ⲆⲆ[702], 3);
    this.ΔⵠⲆ[51].id = 51;
    this.ΔⵠⲆ[52] = f418(60, 60, 0, ⲆⲆ[705], 3);
    this.ΔⵠⲆ[52].id = 52;
    this.ΔⵠⲆ[55] = f418(60, 60, 0, ⲆⲆ[709], 3);
    this.ΔⵠⲆ[55].id = 55;
    this.ΔⵠⲆ[129] = f418(60, 60, 0, ⲆⲆ[624], 3);
    this.ΔⵠⲆ[129].id = 129;
    this.ΔⵠⲆ[129].info.ⵠΔ[2] = this.ΔⵠⲆ[129].info.ⵠΔ[0];
    this.ΔⵠⲆ[130] = f418(60, 60, 0, ⲆⲆ[626], 3);
    this.ΔⵠⲆ[130].id = 130;
    this.ΔⵠⲆ[131] = f418(60, 60, 0, ⲆⲆ[629], 3);
    this.ΔⵠⲆ[131].id = 131;
    this.ΔⵠⲆ[131].info.ⵠΔ[2] = this.ΔⵠⲆ[131].info.ⵠΔ[0];
    this.ΔⵠⲆ[132] = f418(60, 60, 0, ⲆⲆ[631], 3);
    this.ΔⵠⲆ[132].id = 132;
    this.ΔⵠⲆ[133] = f418(60, 60, 0, ⲆⲆ[634], 3);
    this.ΔⵠⲆ[133].id = 133;
    this.ΔⵠⲆ[134] = f418(60, 60, 0, ⲆⲆ[639], 3);
    this.ΔⵠⲆ[134].id = 134;
    this.ΔⵠⲆ[134].info.ⵠΔ[2] = this.ΔⵠⲆ[134].info.ⵠΔ[0];
    this.ΔⵠⲆ[135] = f418(60, 60, 0, ⲆⲆ[644], 3);
    this.ΔⵠⲆ[135].id = 135;
    this.ΔⵠⲆ[47] = f418(60, 60, 0, ⲆⲆ[646], 3);
    this.ΔⵠⲆ[47].id = 47;
    this.ΔⵠⲆ[48] = f418(60, 60, 0, ⲆⲆ[649], 3);
    this.ΔⵠⲆ[48].id = 48;
    this.ΔⵠⲆ[49] = f418(60, 60, 0, ⲆⲆ[652], 3);
    this.ΔⵠⲆ[49].id = 49;
    this.ΔⵠⲆ[136] = f418(60, 60, 0, ⲆⲆ[659], 3);
    this.ΔⵠⲆ[136].id = 136;
    this.ΔⵠⲆ[143] = f418(60, 60, 0, ⲆⲆ[143], 3);
    this.ΔⵠⲆ[143].id = 143;
    this.ΔⵠⲆ[137] = f418(60, 60, 0, ⲆⲆ[662], 3);
    this.ΔⵠⲆ[137].id = 137;
    this.ΔⵠⲆ[138] = f418(60, 60, 0, ⲆⲆ[664], 3);
    this.ΔⵠⲆ[138].id = 138;
    this.ΔⵠⲆ[139] = f418(60, 60, 0, ⲆⲆ[674], 3);
    this.ΔⵠⲆ[139].id = 139;
    this.ΔⵠⲆ[139].info.ⵠΔ[2] = this.ΔⵠⲆ[139].info.ⵠΔ[0];
    this.ΔⵠⲆ[140] = f418(60, 60, 0, ⲆⲆ[140], 3);
    this.ΔⵠⲆ[140].id = 140;
    this.ΔⵠⲆ[140].info.ⵠΔ[2] = this.ΔⵠⲆ[140].info.ⵠΔ[0];
    this.ΔⵠⲆ[141] = f418(60, 60, 0, ⲆⲆ[685], 3);
    this.ΔⵠⲆ[141].id = 141;
    this.ΔⵠⲆ[142] = f418(60, 60, 0, ⲆⲆ[142], 3);
    this.ΔⵠⲆ[142].id = 142;
    this.ΔⵠⲆ[142].info.ⵠΔ[2] = this.ΔⵠⲆ[142].info.ⵠΔ[0];
    this.ΔⵠⲆ[144] = f418(60, 60, 0, ⲆⲆ[717], 3);
    this.ΔⵠⲆ[144].id = 144;
    this.ΔⵠⲆ[145] = f418(60, 60, 0, ⲆⲆ[145], 3);
    this.ΔⵠⲆ[145].id = 145;
    this.ΔⵠⲆ[59] = f418(60, 60, 0, ⲆⲆ[732], 3);
    this.ΔⵠⲆ[59].id = 59;
    this.ΔⵠⲆ[62] = f418(60, 60, 0, ⲆⲆ[563], 3);
    this.ΔⵠⲆ[62].id = 62;
    this.ΔⵠⲆ[185] = f418(60, 60, 0, ⲆⲆ[252], 3);
    this.ΔⵠⲆ[185].id = 185;
    this.ΔⵠⲆ[185].info.ⵠΔ[2] = this.ΔⵠⲆ[185].info.ⵠΔ[0];
    this.ΔⵠⲆ[184] = f418(60, 60, 0, ⲆⲆ[751], 3);
    this.ΔⵠⲆ[184].id = 184;
    this.ΔⵠⲆ[184].info.ⵠΔ[2] = this.ΔⵠⲆ[184].info.ⵠΔ[0];
    this.ΔⵠⲆ[17] = f418(60, 60, 0, ⲆⲆ[877], 3);
    this.ΔⵠⲆ[17].id = 17;
    this.ΔⵠⲆ[63] = f418(60, 60, 0, ⲆⲆ[566], 3);
    this.ΔⵠⲆ[63].id = 63;
    this.ΔⵠⲆ[187] = f418(60, 60, 0, ⲆⲆ[253], 3);
    this.ΔⵠⲆ[187].id = 187;
    this.ΔⵠⲆ[187].info.ⵠΔ[2] = this.ΔⵠⲆ[187].info.ⵠΔ[0];
    this.ΔⵠⲆ[186] = f418(60, 60, 0, ⲆⲆ[753], 3);
    this.ΔⵠⲆ[186].id = 186;
    this.ΔⵠⲆ[186].info.ⵠΔ[2] = this.ΔⵠⲆ[186].info.ⵠΔ[0];
    this.ΔⵠⲆ[77] = f418(60, 60, 0, ⲆⲆ[756], 3);
    this.ΔⵠⲆ[77].id = 77;
    this.ΔⵠⲆ[175] = f418(60, 60, 0, ⲆⲆ[176], 3);
    this.ΔⵠⲆ[175].id = 175;
    this.ΔⵠⲆ[175].info.ⵠΔ[2] = this.ΔⵠⲆ[175].info.ⵠΔ[0];
    this.ΔⵠⲆ[176] = f418(60, 60, 0, ⲆⲆ[177], 3);
    this.ΔⵠⲆ[176].id = 176;
    this.ΔⵠⲆ[176].info.ⵠΔ[2] = this.ΔⵠⲆ[176].info.ⵠΔ[0];
    this.ΔⵠⲆ[78] = f418(60, 60, 0, ⲆⲆ[760], 3);
    this.ΔⵠⲆ[78].id = 78;
    this.ΔⵠⲆ[177] = f418(60, 60, 0, ⲆⲆ[175], 3);
    this.ΔⵠⲆ[177].id = 177;
    this.ΔⵠⲆ[177].info.ⵠΔ[2] = this.ΔⵠⲆ[177].info.ⵠΔ[0];
    this.ΔⵠⲆ[79] = f418(60, 60, 0, ⲆⲆ[764], 3);
    this.ΔⵠⲆ[79].id = 79;
    this.ΔⵠⲆ[83] = f418(60, 60, 0, ⲆⲆ[767], 3);
    this.ΔⵠⲆ[83].id = 83;
    this.ΔⵠⲆ[84] = f418(60, 60, 0, ⲆⲆ[771], 3);
    this.ΔⵠⲆ[84].id = 84;
    this.ΔⵠⲆ[178] = f418(60, 60, 0, ⲆⲆ[178], 3);
    this.ΔⵠⲆ[178].id = 178;
    this.ΔⵠⲆ[179] = f418(60, 60, 0, ⲆⲆ[179], 3);
    this.ΔⵠⲆ[179].id = 179;
    this.ΔⵠⲆ[86] = f418(60, 60, 0, ⲆⲆ[776], 3);
    this.ΔⵠⲆ[86].id = 86;
    this.ΔⵠⲆ[85] = f418(60, 60, 0, ⲆⲆ[779], 3);
    this.ΔⵠⲆ[85].id = 85;
    this.ΔⵠⲆ[180] = f418(60, 60, 0, ⲆⲆ[180], 3);
    this.ΔⵠⲆ[180].id = 180;
    this.ΔⵠⲆ[181] = f418(60, 60, 0, ⲆⲆ[181], 3);
    this.ΔⵠⲆ[181].id = 181;
    this.ΔⵠⲆ[182] = f418(60, 60, 0, ⲆⲆ[789], 3);
    this.ΔⵠⲆ[182].id = 182;
    this.ΔⵠⲆ[183] = f418(60, 60, 0, ⲆⲆ[800], 3);
    this.ΔⵠⲆ[183].id = 183;
    this.ΔⵠⲆ[188] = f418(60, 60, 0, ⲆⲆ[808], 3);
    this.ΔⵠⲆ[188].id = 188;
    this.ΔⵠⲆ[189] = f418(60, 60, 0, ⲆⲆ[814], 3);
    this.ΔⵠⲆ[189].id = 189;
    this.ΔⵠⲆ[191] = f418(60, 60, 0, ⲆⲆ[834], 3);
    this.ΔⵠⲆ[191].id = 191;
    this.ΔⵠⲆ[192] = f418(60, 60, 0, ⲆⲆ[840], 3);
    this.ΔⵠⲆ[192].id = 192;
    this.ΔⵠⲆ[190] = f418(60, 60, 0, ⲆⲆ[842], 3);
    this.ΔⵠⲆ[190].id = 190;
    this.ΔⵠⲆ[193] = f418(60, 60, 0, ⲆⲆ[845], 3);
    this.ΔⵠⲆ[193].id = 193;
    this.ΔⵠⲆ[194] = f418(60, 60, 0, ⲆⲆ[850], 3);
    this.ΔⵠⲆ[194].id = 194;
    this.ΔⵠⲆ[204] = f418(60, 60, 0, ⲆⲆ[949], 3);
    this.ΔⵠⲆ[204].id = 204;
    this.ΔⵠⲆ[205] = f418(60, 60, 0, ⲆⲆ[955], 3);
    this.ΔⵠⲆ[205].id = 205;
    this.ΔⵠⲆ[206] = f418(60, 60, 0, ⲆⲆ[959], 3);
    this.ΔⵠⲆ[206].id = 206;
    this.ΔⵠⲆ[207] = f418(60, 60, 0, ⲆⲆ[965], 3);
    this.ΔⵠⲆ[207].id = 207;
    this.ΔⵠⲆ[208] = f418(60, 60, 0, ⲆⲆ[966], 3);
    this.ΔⵠⲆ[208].id = 208;
    this.ΔⵠⲆ[209] = f418(60, 60, 0, ⲆⲆ[972], 3);
    this.ΔⵠⲆ[209].id = 209;
    this.ΔⵠⲆ[210] = f418(60, 60, 0, ⲆⲆ[981], 3);
    this.ΔⵠⲆ[210].id = 210;
    this.ΔⵠⲆ[211] = f418(60, 60, 0, ⲆⲆ[987], 3);
    this.ΔⵠⲆ[211].id = 211;
    this.ΔⵠⲆ[41] = f418(60, 60, 0, ⲆⲆ[880], 3);
    this.ΔⵠⲆ[41].id = 41;
    this.ΔⵠⲆ[42] = f418(60, 60, 0, ⲆⲆ[882], 3);
    this.ΔⵠⲆ[42].id = 42;
    this.ΔⵠⲆ[12] = f418(60, 60, 0, ⲆⲆ[401], 3);
    this.ΔⵠⲆ[12].id = 12;
    this.ΔⵠⲆ[16] = f418(60, 60, 0, ⲆⲆ[874], 3);
    this.ΔⵠⲆ[16].id = 16;
    this.ΔⵠⲆ[196] = f418(60, 60, 0, ⲆⲆ[196], 3);
    this.ΔⵠⲆ[196].id = 196;
    this.ΔⵠⲆ[18] = f418(60, 60, 0, ⲆⲆ[901], 3);
    this.ΔⵠⲆ[18].id = 18;
    this.ΔⵠⲆ[197] = f418(60, 60, 0, ⲆⲆ[197], 3);
    this.ΔⵠⲆ[197].id = 197;
    this.ΔⵠⲆ[198] = f418(60, 60, 0, ⲆⲆ[907], 3);
    this.ΔⵠⲆ[198].id = 198;
    this.ΔⵠⲆ[61] = f418(60, 60, 0, ⲆⲆ[910], 3);
    this.ΔⵠⲆ[61].id = 61;
    this.ΔⵠⲆ[201] = f418(60, 60, 0, ⲆⲆ[870], 3);
    this.ΔⵠⲆ[201].id = 201;
    this.ΔⵠⲆ[200] = f418(60, 60, 0, ⲆⲆ[200], 3);
    this.ΔⵠⲆ[200].id = 200;
    this.ΔⵠⲆ[199] = f418(60, 60, 0, ⲆⲆ[865], 3);
    this.ΔⵠⲆ[199].id = 199;
    this.ΔⲆΔ = [];
    this.ΔⲆΔ[35] = f418(60, 60, 0, ⲆⲆ[254], 3);
    this.ΔⲆΔ[35].id = 35;
    this.ΔⲆΔ[5] = f418(60, 60, 0, ⲆⲆ[256], 3);
    this.ΔⲆΔ[5].id = 5;
    this.ΔⲆΔ[0] = f418(60, 60, 0, ⲆⲆ[302], 3);
    this.ΔⲆΔ[0].id = 0;
    this.ΔⲆΔ[3] = f418(60, 60, 0, ⲆⲆ[262], 3);
    this.ΔⲆΔ[3].id = 3;
    this.ΔⲆΔ[55] = f418(60, 60, 0, ⲆⲆ[318], 3);
    this.ΔⲆΔ[55].id = 55;
    this.ΔⲆΔ[67] = f418(60, 60, 0, ⲆⲆ[320], 3);
    this.ΔⲆΔ[67].id = 67;
    this.ΔⲆΔ[40] = f418(60, 60, 0, ⲆⲆ[284], 3);
    this.ΔⲆΔ[40].id = 40;
    this.ΔⲆΔ[6] = f418(60, 60, 0, ⲆⲆ[295], 3);
    this.ΔⲆΔ[6].id = 6;
    this.ΔⲆΔ[7] = f418(60, 60, 0, ⲆⲆ[257], 3);
    this.ΔⲆΔ[7].id = 7;
    this.ΔⲆΔ[36] = f418(60, 60, 0, ⲆⲆ[290], 3);
    this.ΔⲆΔ[36].id = 36;
    this.ΔⲆΔ[34] = f418(60, 60, 0, ⲆⲆ[830], 3);
    this.ΔⲆΔ[34].id = 34;
    this.ΔⲆΔ[37] = f418(60, 60, 0, ⲆⲆ[291], 3);
    this.ΔⲆΔ[37].id = 37;
    this.ΔⲆΔ[4] = f418(60, 60, 0, ⲆⲆ[314], 3);
    this.ΔⲆΔ[4].id = 4;
    this.ΔⲆΔ[49] = f418(60, 60, 0, ⲆⲆ[325], 3);
    this.ΔⲆΔ[49].id = 49;
    this.ΔⲆΔ[1] = f418(60, 60, 0, ⲆⲆ[327], 3);
    this.ΔⲆΔ[1].id = 1;
    this.ΔⲆΔ[54] = f418(60, 60, 0, ⲆⲆ[304], 3);
    this.ΔⲆΔ[54].id = 54;
    this.ΔⲆΔ[56] = f418(60, 60, 0, ⲆⲆ[263], 3);
    this.ΔⲆΔ[56].id = 56;
    this.ΔⲆΔ[57] = f418(60, 60, 0, ⲆⲆ[265], 3);
    this.ΔⲆΔ[57].id = 57;
    this.ΔⲆΔ[58] = f418(60, 60, 0, ⲆⲆ[332], 3);
    this.ΔⲆΔ[58].id = 58;
    this.ΔⲆΔ[61] = f418(60, 60, 0, ⲆⲆ[268], 3);
    this.ΔⲆΔ[61].id = 61;
    this.ΔⲆΔ[79] = f418(60, 60, 0, ⲆⲆ[338], 3);
    this.ΔⲆΔ[79].id = 79;
    this.ΔⲆΔ[68] = f418(60, 60, 0, ⲆⲆ[360], 3);
    this.ΔⲆΔ[68].id = 68;
    this.ΔⲆΔ[69] = f418(60, 60, 0, ⲆⲆ[363], 3);
    this.ΔⲆΔ[69].id = 69;
    this.ΔⲆΔ[70] = f418(60, 60, 0, ⲆⲆ[365], 3);
    this.ΔⲆΔ[70].id = 70;
    this.ΔⲆΔ[100] = f418(60, 60, 0, ⲆⲆ[367], 3);
    this.ΔⲆΔ[100].id = 100;
    this.ΔⲆΔ[83] = f418(60, 60, 0, ⲆⲆ[370], 3);
    this.ΔⲆΔ[83].id = 83;
    this.ΔⲆΔ[62] = f418(60, 60, 0, ⲆⲆ[371], 3);
    this.ΔⲆΔ[62].id = 62;
    this.ΔⲆΔ[63] = f418(60, 60, 0, ⲆⲆ[374], 3);
    this.ΔⲆΔ[63].id = 63;
    this.ΔⲆΔ[64] = f418(60, 60, 0, ⲆⲆ[377], 3);
    this.ΔⲆΔ[64].id = 64;
    this.ΔⲆΔ[83] = f418(60, 60, 0, ⲆⲆ[370], 3);
    this.ΔⲆΔ[83].id = 83;
    this.ΔⲆΔ[84] = f418(60, 60, 0, ⲆⲆ[380], 3);
    this.ΔⲆΔ[84].id = 84;
    this.ΔⲆΔ[25] = f418(60, 60, 0, ⲆⲆ[402], 3);
    this.ΔⲆΔ[25].id = 25;
    this.ΔⲆΔ[26] = f418(60, 60, 0, ⲆⲆ[396], 3);
    this.ΔⲆΔ[26].id = 26;
    this.ΔⲆΔ[27] = f418(60, 60, 0, ⲆⲆ[399], 3);
    this.ΔⲆΔ[27].id = 27;
    this.ΔⲆΔ[28] = f418(60, 60, 0, ⲆⲆ[405], 3);
    this.ΔⲆΔ[28].id = 28;
    this.ΔⲆΔ[31] = f418(60, 60, 0, ⲆⲆ[876], 3);
    this.ΔⲆΔ[31].id = 31;
    this.ΔⲆΔ[2] = f418(60, 60, 0, ⲆⲆ[409], 3);
    this.ΔⲆΔ[2].id = 2;
    this.ΔⲆΔ[80] = f418(60, 60, 0, ⲆⲆ[421], 3);
    this.ΔⲆΔ[80].id = 80;
    this.ΔⲆΔ[81] = f418(60, 60, 0, ⲆⲆ[424], 3);
    this.ΔⲆΔ[81].id = 81;
    this.ΔⲆΔ[v555.ⵠⵠⲆΔΔ] = f418(60, 60, 0, ⲆⲆ[1228], 3);
    this.ΔⲆΔ[v555.ⵠⵠⲆΔΔ].id = v555.ⵠⵠⲆΔΔ;
    this.ΔⲆΔ[86] = f418(60, 60, 0, ⲆⲆ[1231], 3);
    this.ΔⲆΔ[86].id = 86;
    this.ΔⲆΔ[98] = f418(60, 60, 0, ⲆⲆ[1138], 3);
    this.ΔⲆΔ[98].id = 98;
    this.ΔⲆΔ[99] = f418(60, 60, 0, ⲆⲆ[1141], 3);
    this.ΔⲆΔ[99].id = 99;
    this.ΔⲆΔ[131] = f418(60, 60, 0, ⲆⲆ[570], 3);
    this.ΔⲆΔ[131].id = 131;
    this.ΔⲆΔ[132] = f418(60, 60, 0, ⲆⲆ[1168], 3);
    this.ΔⲆΔ[132].id = 132;
    this.ΔⲆΔ[145] = f418(60, 60, 0, ⲆⲆ[1238], 3);
    this.ΔⲆΔ[145].id = 145;
    this.ΔⲆΔ[133] = f418(60, 60, 0, ⲆⲆ[573], 3);
    this.ΔⲆΔ[133].id = 133;
    this.ΔⲆΔ[134] = f418(60, 60, 0, ⲆⲆ[1171], 3);
    this.ΔⲆΔ[134].id = 134;
    this.ΔⲆΔ[146] = f418(60, 60, 0, ⲆⲆ[1241], 3);
    this.ΔⲆΔ[146].id = 146;
    this.ΔⲆΔ[135] = f418(60, 60, 0, ⲆⲆ[576], 3);
    this.ΔⲆΔ[135].id = 135;
    this.ΔⲆΔ[136] = f418(60, 60, 0, ⲆⲆ[1174], 3);
    this.ΔⲆΔ[136].id = 136;
    this.ΔⲆΔ[147] = f418(60, 60, 0, ⲆⲆ[1244], 3);
    this.ΔⲆΔ[147].id = 147;
    this.ΔⲆΔ[137] = f418(60, 60, 0, ⲆⲆ[579], 3);
    this.ΔⲆΔ[137].id = 137;
    this.ΔⲆΔ[138] = f418(60, 60, 0, ⲆⲆ[1177], 3);
    this.ΔⲆΔ[138].id = 138;
    this.ΔⲆΔ[167] = f418(60, 60, 0, ⲆⲆ[1256], 3);
    this.ΔⲆΔ[167].id = 167;
    this.ΔⲆΔ[168] = f418(60, 60, 0, ⲆⲆ[1259], 3);
    this.ΔⲆΔ[168].id = 168;
    this.ΔⲆΔ[169] = f418(60, 60, 0, ⲆⲆ[1262], 3);
    this.ΔⲆΔ[169].id = 169;
    this.ΔⲆΔ[170] = f418(60, 60, 0, ⲆⲆ[1265], 3);
    this.ΔⲆΔ[170].id = 170;
    this.ΔⲆΔ[171] = f418(60, 60, 0, ⲆⲆ[1268], 3);
    this.ΔⲆΔ[171].id = 171;
    this.ΔⲆΔ[172] = f418(60, 60, 0, ⲆⲆ[1271], 3);
    this.ΔⲆΔ[172].id = 172;
    this.ΔⲆΔ[148] = f418(60, 60, 0, ⲆⲆ[1247], 3);
    this.ΔⲆΔ[148].id = 148;
    this.ΔⲆΔ[139] = f418(60, 60, 0, ⲆⲆ[582], 3);
    this.ΔⲆΔ[139].id = 139;
    this.ΔⲆΔ[140] = f418(60, 60, 0, ⲆⲆ[1180], 3);
    this.ΔⲆΔ[140].id = 140;
    this.ΔⲆΔ[149] = f418(60, 60, 0, ⲆⲆ[1250], 3);
    this.ΔⲆΔ[149].id = 149;
    this.ΔⲆΔ[141] = f418(60, 60, 0, ⲆⲆ[585], 3);
    this.ΔⲆΔ[141].id = 141;
    this.ΔⲆΔ[142] = f418(60, 60, 0, ⲆⲆ[1183], 3);
    this.ΔⲆΔ[142].id = 142;
    this.ΔⲆΔ[150] = f418(60, 60, 0, ⲆⲆ[1253], 3);
    this.ΔⲆΔ[150].id = 150;
    this.ΔⲆΔ[143] = f418(60, 60, 0, ⲆⲆ[588], 3);
    this.ΔⲆΔ[143].id = 143;
    this.ΔⲆΔ[144] = f418(60, 60, 0, ⲆⲆ[1186], 3);
    this.ΔⲆΔ[144].id = 144;
    this.ΔⲆΔ[87] = f418(60, 60, 0, ⲆⲆ[827], 3);
    this.ΔⲆΔ[87].id = 87;
    this.ΔⲆΔ[88] = f418(60, 60, 0, ⲆⲆ[430], 3);
    this.ΔⲆΔ[88].id = 88;
    this.ΔⲆΔ[89] = f418(60, 60, 0, ⲆⲆ[433], 3);
    this.ΔⲆΔ[89].id = 89;
    this.ΔⲆΔ[90] = f418(60, 60, 0, ⲆⲆ[436], 3);
    this.ΔⲆΔ[90].id = 90;
    this.ΔⲆΔ[24] = f418(60, 60, 0, ⲆⲆ[439], 3);
    this.ΔⲆΔ[24].id = 24;
    this.ΔⲆΔ[101] = f418(60, 60, 0, ⲆⲆ[442], 3);
    this.ΔⲆΔ[101].id = 101;
    this.ΔⲆΔ[100] = f418(60, 60, 0, ⲆⲆ[367], 3);
    this.ΔⲆΔ[100].id = 100;
    this.ΔⲆΔ[38] = f418(60, 60, 0, ⲆⲆ[456], 3);
    this.ΔⲆΔ[38].id = 38;
    this.ΔⲆΔ[v555.ⵠⲆᐃΔΔ] = f418(60, 60, 0, ⲆⲆ[861], 3);
    this.ΔⲆΔ[v555.ⵠⲆᐃΔΔ].id = v555.ⵠⲆᐃΔΔ;
    this.ΔⲆΔ[8] = f418(60, 60, 0, ⲆⲆ[460], 3);
    this.ΔⲆΔ[8].id = 8;
    this.ΔⲆΔ[9] = f418(60, 60, 0, ⲆⲆ[1019], 3);
    this.ΔⲆΔ[9].id = 9;
    this.ΔⲆΔ[29] = f418(60, 60, 0, ⲆⲆ[473], 3);
    this.ΔⲆΔ[29].id = 29;
    this.ΔⲆΔ[10] = f418(60, 60, 0, ⲆⲆ[478], 3);
    this.ΔⲆΔ[10].id = 10;
    this.ΔⲆΔ[11] = f418(60, 60, 0, ⲆⲆ[481], 3);
    this.ΔⲆΔ[11].id = 11;
    this.ΔⲆΔ[12] = f418(60, 60, 0, ⲆⲆ[484], 3);
    this.ΔⲆΔ[12].id = 12;
    this.ΔⲆΔ[13] = f418(60, 60, 0, ⲆⲆ[487], 3);
    this.ΔⲆΔ[13].id = 13;
    this.ΔⲆΔ[14] = f418(60, 60, 0, ⲆⲆ[490], 3);
    this.ΔⲆΔ[14].id = 14;
    this.ΔⲆΔ[59] = f418(60, 60, 0, ⲆⲆ[493], 3);
    this.ΔⲆΔ[59].id = 59;
    this.ΔⲆΔ[71] = f418(60, 60, 0, ⲆⲆ[496], 3);
    this.ΔⲆΔ[71].id = 71;
    this.ΔⲆΔ[65] = f418(60, 60, 0, ⲆⲆ[498], 3);
    this.ΔⲆΔ[65].id = 65;
    this.ΔⲆΔ[85] = f418(60, 60, 0, ⲆⲆ[503], 3);
    this.ΔⲆΔ[85].id = 85;
    this.ΔⲆΔ[102] = f418(60, 60, 0, ⲆⲆ[515], 3);
    this.ΔⲆΔ[102].id = 102;
    this.ΔⲆΔ[103] = f418(60, 60, 0, ⲆⲆ[519], 3);
    this.ΔⲆΔ[103].id = 103;
    this.ΔⲆΔ[115] = f418(60, 60, 0, ⲆⲆ[530], 3);
    this.ΔⲆΔ[115].id = 115;
    this.ΔⲆΔ[104] = f418(60, 60, 0, ⲆⲆ[533], 3);
    this.ΔⲆΔ[104].id = 104;
    this.ΔⲆΔ[105] = f418(60, 60, 0, ⲆⲆ[555], 3);
    this.ΔⲆΔ[105].id = 105;
    this.ΔⲆΔ[91] = f418(60, 60, 0, ⲆⲆ[542], 3);
    this.ΔⲆΔ[91].id = 91;
    this.ΔⲆΔ[15] = f418(60, 60, 0, ⲆⲆ[551], 3);
    this.ΔⲆΔ[15].id = 15;
    this.ΔⲆΔ[106] = f418(60, 60, 0, ⲆⲆ[604], 3);
    this.ΔⲆΔ[106].id = 106;
    this.ΔⲆΔ[108] = f418(60, 60, 0, ⲆⲆ[1235], 3);
    this.ΔⲆΔ[108].id = 108;
    this.ΔⲆΔ[163] = f418(60, 60, 0, ⲆⲆ[1027], 3);
    this.ΔⲆΔ[163].id = 163;
    this.ΔⲆΔ[164] = f418(60, 60, 0, ⲆⲆ[1030], 3);
    this.ΔⲆΔ[164].id = 164;
    this.ΔⲆΔ[166] = f418(60, 60, 0, ⲆⲆ[1116], 3);
    this.ΔⲆΔ[166].id = 166;
    this.ΔⲆΔ[165] = f418(60, 60, 0, ⲆⲆ[1048], 3);
    this.ΔⲆΔ[165].id = 165;
    this.ΔⲆΔ[v555.ΔΔⵠⲆⵠ] = f418(60, 60, 0, ⲆⲆ[1051], 3);
    this.ΔⲆΔ[v555.ΔΔⵠⲆⵠ].id = v555.ΔΔⵠⲆⵠ;
    this.ΔⲆΔ[v555.ᐃⵠⲆⵠⲆ] = f418(60, 60, 0, ⲆⲆ[1082], 3);
    this.ΔⲆΔ[v555.ᐃⵠⲆⵠⲆ].id = v555.ᐃⵠⲆⵠⲆ;
    this.ΔⲆΔ[v555.ⲆⲆⵠⵠⲆ] = f418(60, 60, 0, ⲆⲆ[1226], 3);
    this.ΔⲆΔ[v555.ⲆⲆⵠⵠⲆ].id = v555.ⲆⲆⵠⵠⲆ;
    this.ΔⲆΔ[v555.ΔΔᐃᐃᐃ] = f418(60, 60, 0, ⲆⲆ[1191], 3);
    this.ΔⲆΔ[v555.ΔΔᐃᐃᐃ].id = v555.ΔΔᐃᐃᐃ;
    this.ΔⲆΔ[110] = f418(60, 60, 0, ⲆⲆ[611], 3);
    this.ΔⲆΔ[110].id = 110;
    this.ΔⲆΔ[111] = f418(60, 60, 0, ⲆⲆ[715], 3);
    this.ΔⲆΔ[111].id = 111;
    this.ΔⲆΔ[112] = f418(60, 60, 0, ⲆⲆ[715], 3);
    this.ΔⲆΔ[112].id = 112;
    this.ΔⲆΔ[113] = f418(60, 60, 0, ⲆⲆ[715], 3);
    this.ΔⲆΔ[113].id = 113;
    this.ΔⲆΔ[16] = f418(60, 60, 0, ⲆⲆ[618], 3);
    this.ΔⲆΔ[16].id = 16;
    this.ΔⲆΔ[17] = f418(60, 60, 0, ⲆⲆ[700], 3);
    this.ΔⲆΔ[17].id = 17;
    this.ΔⲆΔ[18] = f418(60, 60, 0, ⲆⲆ[704], 3);
    this.ΔⲆΔ[18].id = 18;
    this.ΔⲆΔ[19] = f418(60, 60, 0, ⲆⲆ[706], 3);
    this.ΔⲆΔ[19].id = 19;
    this.ΔⲆΔ[122] = f418(60, 60, 0, ⲆⲆ[711], 3);
    this.ΔⲆΔ[122].id = 122;
    this.ΔⲆΔ[20] = f418(60, 60, 0, ⲆⲆ[627], 3);
    this.ΔⲆΔ[20].id = 20;
    this.ΔⲆΔ[41] = f418(60, 60, 0, ⲆⲆ[632], 3);
    this.ΔⲆΔ[41].id = 41;
    this.ΔⲆΔ[52] = f418(60, 60, 0, ⲆⲆ[635], 3);
    this.ΔⲆΔ[52].id = 52;
    this.ΔⲆΔ[114] = f418(60, 60, 0, ⲆⲆ[643], 3);
    this.ΔⲆΔ[114].id = 114;
    this.ΔⲆΔ[94] = f418(60, 60, 0, ⲆⲆ[647], 3);
    this.ΔⲆΔ[94].id = 94;
    this.ΔⲆΔ[93] = f418(60, 60, 0, ⲆⲆ[650], 3);
    this.ΔⲆΔ[93].id = 93;
    this.ΔⲆΔ[21] = f418(60, 60, 0, ⲆⲆ[654], 3);
    this.ΔⲆΔ[21].id = 21;
    this.ΔⲆΔ[53] = f418(60, 60, 0, ⲆⲆ[660], 3);
    this.ΔⲆΔ[53].id = 53;
    this.ΔⲆΔ[51] = f418(60, 60, 0, ⲆⲆ[690], 3);
    this.ΔⲆΔ[51].id = 51;
    this.ΔⲆΔ[50] = f418(60, 60, 0, ⲆⲆ[666], 3);
    this.ΔⲆΔ[50].id = 50;
    this.ΔⲆΔ[109] = f418(60, 60, 0, ⲆⲆ[684], 3);
    this.ΔⲆΔ[109].id = 109;
    this.ΔⲆΔ[124] = f418(60, 60, 0, ⲆⲆ[718], 3);
    this.ΔⲆΔ[124].id = 124;
    this.ΔⲆΔ[125] = f418(60, 60, 0, ⲆⲆ[730], 3);
    this.ΔⲆΔ[125].id = 125;
    this.ΔⲆΔ[126] = f418(60, 60, 0, ⲆⲆ[734], 3);
    this.ΔⲆΔ[126].id = 126;
    this.ΔⲆΔ[129] = f418(60, 60, 0, ⲆⲆ[563], 3);
    this.ΔⲆΔ[129].id = 129;
    this.ΔⲆΔ[151] = f418(60, 60, 0, ⲆⲆ[758], 3);
    this.ΔⲆΔ[151].id = 151;
    this.ΔⲆΔ[152] = f418(60, 60, 0, ⲆⲆ[762], 3);
    this.ΔⲆΔ[152].id = 152;
    this.ΔⲆΔ[153] = f418(60, 60, 0, ⲆⲆ[770], 3);
    this.ΔⲆΔ[153].id = 153;
    this.ΔⲆΔ[154] = f418(60, 60, 0, ⲆⲆ[768], 3);
    this.ΔⲆΔ[154].id = 154;
    this.ΔⲆΔ[155] = f418(60, 60, 0, ⲆⲆ[772], 3);
    this.ΔⲆΔ[155].id = 155;
    this.ΔⲆΔ[157] = f418(60, 60, 0, ⲆⲆ[777], 3);
    this.ΔⲆΔ[157].id = 157;
    this.ΔⲆΔ[156] = f418(60, 60, 0, ⲆⲆ[780], 3);
    this.ΔⲆΔ[156].id = 156;
    this.ΔⲆΔ[158] = f418(60, 60, 0, ⲆⲆ[784], 3);
    this.ΔⲆΔ[158].id = 158;
    this.ΔⲆΔ[159] = f418(60, 60, 0, ⲆⲆ[785], 3);
    this.ΔⲆΔ[159].id = 159;
    this.ΔⲆΔ[160] = f418(60, 60, 0, ⲆⲆ[791], 3);
    this.ΔⲆΔ[160].id = 160;
    this.ΔⲆΔ[161] = f418(60, 60, 0, ⲆⲆ[799], 3);
    this.ΔⲆΔ[161].id = 161;
    this.ΔⲆΔ[42] = f418(60, 60, 0, ⲆⲆ[809], 3);
    this.ΔⲆΔ[42].id = 42;
    this.ΔⲆΔ[43] = f418(60, 60, 0, ⲆⲆ[835], 3);
    this.ΔⲆΔ[43].id = 43;
    this.ΔⲆΔ[107] = f418(60, 60, 0, ⲆⲆ[843], 3);
    this.ΔⲆΔ[107].id = 107;
    this.ΔⲆΔ[44] = f418(60, 60, 0, ⲆⲆ[846], 3);
    this.ΔⲆΔ[44].id = 44;
    this.ΔⲆΔ[46] = f418(60, 60, 0, ⲆⲆ[960], 3);
    this.ΔⲆΔ[46].id = 46;
    this.ΔⲆΔ[45] = f418(60, 60, 0, ⲆⲆ[950], 3);
    this.ΔⲆΔ[45].id = 45;
    this.ΔⲆΔ[47] = f418(60, 60, 0, ⲆⲆ[967], 3);
    this.ΔⲆΔ[47].id = 47;
    this.ΔⲆΔ[48] = f418(60, 60, 0, ⲆⲆ[982], 3);
    this.ΔⲆΔ[48].id = 48;
    this.ΔⲆΔ[25] = f418(60, 60, 0, ⲆⲆ[402], 3);
    this.ΔⲆΔ[25].id = 25;
    this.ΔⲆΔ[31] = f418(60, 60, 0, ⲆⲆ[876], 3);
    this.ΔⲆΔ[31].id = 31;
    this.ΔⲆΔ[33] = f418(60, 60, 0, ⲆⲆ[900], 3);
    this.ΔⲆΔ[33].id = 33;
    this.ΔⲆΔ[162] = f418(60, 60, 0, ⲆⲆ[909], 3);
    this.ΔⲆΔ[162].id = 162;
    this.ΔⲆΔ[128] = f418(60, 60, 0, ⲆⲆ[912], 3);
    this.ΔⲆΔ[128].id = 128;
    this.ⲆⲆᐃ[53] = f418(68, 68, 0, ⲆⲆ[976], 3);
    this.ⲆⲆᐃ[53].id = 53;
    this.ΔⵠⲆ[53] = f418(60, 60, 0, ⲆⲆ[975], 3);
    this.ΔⵠⲆ[53].id = 53;
    this.ΔⲆΔ[22] = f418(60, 60, 0, ⲆⲆ[977], 3);
    this.ΔⲆΔ[22].id = 22;
    this.ⲆⲆᐃ[54] = f418(68, 68, 0, ⲆⲆ[979], 3);
    this.ⲆⲆᐃ[54].id = 54;
    this.ΔⵠⲆ[54] = f418(60, 60, 0, ⲆⲆ[978], 3);
    this.ΔⵠⲆ[54].id = 54;
    this.ΔⲆΔ[23] = f418(60, 60, 0, ⲆⲆ[980], 3);
    this.ΔⲆΔ[23].id = 23;
    this.ⲆⲆᐃ[56] = f418(68, 68, 0, ⲆⲆ[713], 3);
    this.ⲆⲆᐃ[56].id = 56;
    this.ΔⵠⲆ[56] = f418(60, 60, 0, ⲆⲆ[712], 3);
    this.ΔⵠⲆ[56].id = 56;
    this.ΔⲆΔ[123] = f418(60, 60, 0, ⲆⲆ[714], 3);
    this.ΔⲆΔ[123].id = 123;
    this.ⲆⲆᐃ[82] = f418(68, 68, 0, ⲆⲆ[428], 3);
    this.ⲆⲆᐃ[82].id = 82;
    this.ΔⵠⲆ[82] = f418(60, 60, 0, ⲆⲆ[426], 3);
    this.ΔⵠⲆ[82].id = 82;
    this.ΔⲆΔ[82] = f418(60, 60, 0, ⲆⲆ[427], 3);
    this.ΔⲆΔ[82].id = 82;
    this.ⲆⲆᐃ[235] = f418(68, 68, 0, ⲆⲆ[1159], 3);
    this.ⲆⲆᐃ[235].id = 235;
    this.ΔⵠⲆ[235] = f418(60, 60, 0, ⲆⲆ[1158], 3);
    this.ΔⵠⲆ[235].id = 235;
    this.ⲆⲆᐃ[238] = f418(68, 68, 0, ⲆⲆ[1188], 3);
    this.ⲆⲆᐃ[238].id = 238;
    this.ΔⵠⲆ[238] = f418(60, 60, 0, ⲆⲆ[1187], 3);
    this.ΔⵠⲆ[238].id = 238;
    this.ⲆⲆᐃ[236] = f418(68, 68, 0, ⲆⲆ[1161], 3);
    this.ⲆⲆᐃ[236].id = 236;
    this.ΔⵠⲆ[236] = f418(60, 60, 0, ⲆⲆ[1160], 3);
    this.ΔⵠⲆ[236].id = 236;
    this.ⲆⲆᐃ[152] = f418(68, 68, 0, ⲆⲆ[1197], 3);
    this.ⲆⲆᐃ[152].id = 152;
    this.ΔⵠⲆ[152] = f418(60, 60, 0, ⲆⲆ[1195], 3);
    this.ΔⵠⲆ[152].id = 152;
    this.ΔⲆΔ[116] = f418(60, 60, 0, ⲆⲆ[1196], 3);
    this.ΔⲆΔ[116].id = 116;
    this.ⲆⲆᐃ[212] = f418(68, 68, 0, ⲆⲆ[992], 3);
    this.ⲆⲆᐃ[212].id = 212;
    this.ΔⵠⲆ[212] = f418(60, 60, 0, ⲆⲆ[991], 3);
    this.ΔⵠⲆ[212].id = 212;
    this.ΔⲆΔ[73] = f418(60, 60, 0, ⲆⲆ[990], 3);
    this.ΔⲆΔ[73].id = 73;
    this.ⲆⲆᐃ[213] = f418(68, 68, 0, ⲆⲆ[995], 3);
    this.ⲆⲆᐃ[213].id = 213;
    this.ΔⵠⲆ[213] = f418(60, 60, 0, ⲆⲆ[994], 3);
    this.ΔⵠⲆ[213].id = 213;
    this.ΔⲆΔ[74] = f418(60, 60, 0, ⲆⲆ[993], 3);
    this.ΔⲆΔ[74].id = 74;
    this.ⲆⲆᐃ[214] = f418(68, 68, 0, ⲆⲆ[998], 3);
    this.ⲆⲆᐃ[214].id = 214;
    this.ΔⵠⲆ[214] = f418(60, 60, 0, ⲆⲆ[997], 3);
    this.ΔⵠⲆ[214].id = 214;
    this.ΔⲆΔ[75] = f418(60, 60, 0, ⲆⲆ[996], 3);
    this.ΔⲆΔ[75].id = 75;
    this.ⲆⲆᐃ[215] = f418(68, 68, 0, ⲆⲆ[1001], 3);
    this.ⲆⲆᐃ[215].id = 215;
    this.ΔⵠⲆ[215] = f418(60, 60, 0, ⲆⲆ[1000], 3);
    this.ΔⵠⲆ[215].id = 215;
    this.ΔⲆΔ[76] = f418(60, 60, 0, ⲆⲆ[999], 3);
    this.ΔⲆΔ[76].id = 76;
    this.ⲆⲆᐃ[216] = f418(68, 68, 0, ⲆⲆ[1004], 3);
    this.ⲆⲆᐃ[216].id = 216;
    this.ΔⵠⲆ[216] = f418(60, 60, 0, ⲆⲆ[1003], 3);
    this.ΔⵠⲆ[216].id = 216;
    this.ΔⲆΔ[77] = f418(60, 60, 0, ⲆⲆ[1002], 3);
    this.ΔⲆΔ[77].id = 77;
    this.ⲆⲆᐃ[220] = f418(68, 68, 0, ⲆⲆ[1007], 3);
    this.ⲆⲆᐃ[220].id = 220;
    this.ΔⵠⲆ[220] = f418(60, 60, 0, ⲆⲆ[1006], 3);
    this.ΔⵠⲆ[220].id = 220;
    this.ΔⲆΔ[78] = f418(60, 60, 0, ⲆⲆ[1005], 3);
    this.ΔⲆΔ[78].id = 78;
    this.ⲆⲆᐃ[217] = f418(68, 68, 0, ⲆⲆ[1016], 3);
    this.ⲆⲆᐃ[217].id = 217;
    this.ΔⵠⲆ[217] = f418(60, 60, 0, ⲆⲆ[1015], 3);
    this.ΔⵠⲆ[217].id = 217;
    this.ΔⲆΔ[60] = f418(60, 60, 0, ⲆⲆ[1014], 3);
    this.ΔⲆΔ[60].id = 60;
    this.ⲆⲆᐃ[219] = f418(68, 68, 0, ⲆⲆ[1013], 3);
    this.ⲆⲆᐃ[219].id = 219;
    this.ΔⵠⲆ[219] = f418(60, 60, 0, ⲆⲆ[1012], 3);
    this.ΔⵠⲆ[219].id = 219;
    this.ΔⲆΔ[72] = f418(60, 60, 0, ⲆⲆ[1011], 3);
    this.ΔⲆΔ[72].id = 72;
    this.ⲆⲆᐃ[218] = f418(68, 68, 0, ⲆⲆ[1010], 3);
    this.ⲆⲆᐃ[218].id = 218;
    this.ΔⵠⲆ[218] = f418(60, 60, 0, ⲆⲆ[1009], 3);
    this.ΔⵠⲆ[218].id = 218;
    this.ΔⲆΔ[66] = f418(60, 60, 0, ⲆⲆ[1008], 3);
    this.ΔⲆΔ[66].id = 66;
    this.ⲆⲆᐃ[153] = f418(68, 68, 0, ⲆⲆ[1201], 3);
    this.ⲆⲆᐃ[153].id = 153;
    this.ΔⵠⲆ[153] = f418(60, 60, 0, ⲆⲆ[1199], 3);
    this.ΔⵠⲆ[153].id = 153;
    this.ΔⲆΔ[117] = f418(60, 60, 0, ⲆⲆ[1200], 3);
    this.ΔⲆΔ[117].id = 117;
    this.ⲆⲆᐃ[154] = f418(68, 68, 0, ⲆⲆ[1205], 3);
    this.ⲆⲆᐃ[154].id = 154;
    this.ΔⵠⲆ[154] = f418(60, 60, 0, ⲆⲆ[1203], 3);
    this.ΔⵠⲆ[154].id = 154;
    this.ΔⲆΔ[118] = f418(60, 60, 0, ⲆⲆ[1204], 3);
    this.ΔⲆΔ[118].id = 118;
    this.ⲆⲆᐃ[155] = f418(68, 68, 0, ⲆⲆ[1209], 3);
    this.ⲆⲆᐃ[155].id = 155;
    this.ΔⵠⲆ[155] = f418(60, 60, 0, ⲆⲆ[1207], 3);
    this.ΔⵠⲆ[155].id = 155;
    this.ΔⲆΔ[119] = f418(60, 60, 0, ⲆⲆ[1208], 3);
    this.ΔⲆΔ[119].id = 119;
    this.ⲆⲆᐃ[156] = f418(68, 68, 0, ⲆⲆ[1213], 3);
    this.ⲆⲆᐃ[156].id = 156;
    this.ΔⵠⲆ[156] = f418(60, 60, 0, ⲆⲆ[1211], 3);
    this.ΔⵠⲆ[156].id = 156;
    this.ΔⲆΔ[120] = f418(60, 60, 0, ⲆⲆ[1212], 3);
    this.ΔⲆΔ[120].id = 120;
    this.ⲆⲆᐃ[157] = f418(68, 68, 0, ⲆⲆ[1217], 3);
    this.ⲆⲆᐃ[157].id = 157;
    this.ΔⵠⲆ[157] = f418(60, 60, 0, ⲆⲆ[1215], 3);
    this.ΔⵠⲆ[157].id = 157;
    this.ΔⲆΔ[121] = f418(60, 60, 0, ⲆⲆ[1216], 3);
    this.ΔⲆΔ[121].id = 121;
    this.ⲆⲆᐃ[203] = f418(68, 68, 0, ⲆⲆ[937], 3);
    this.ⲆⲆᐃ[203].id = 203;
    this.ΔⵠⲆ[203] = f418(60, 60, 0, ⲆⲆ[936], 3);
    this.ΔⵠⲆ[203].id = 203;
    this.ΔⵠⲆ[203].info.ⵠΔ[2] = this.ΔⵠⲆ[203].info.ⵠΔ[0];
    this.ⲆⲆᐃ[150] = f418(68, 68, 0, ⲆⲆ[524], 3);
    this.ⲆⲆᐃ[150].id = 150;
    this.ΔⵠⲆ[150] = f418(60, 60, 0, ⲆⲆ[523], 3);
    this.ΔⵠⲆ[150].id = 150;
    this.ΔⵠⲆ[150].info.ⵠΔ[2] = this.ΔⵠⲆ[150].info.ⵠΔ[0];
    this.ⲆⲆᐃ[202] = f418(68, 68, 0, ⲆⲆ[939], 3);
    this.ⲆⲆᐃ[202].id = 202;
    this.ΔⵠⲆ[202] = f418(60, 60, 0, ⲆⲆ[938], 3);
    this.ΔⵠⲆ[202].id = 202;
    this.ΔⵠⲆ[202].info.ⵠΔ[2] = this.ΔⵠⲆ[202].info.ⵠΔ[0];
    this.ⲆⲆᐃ[19] = f418(68, 68, 0, ⲆⲆ[934], 3);
    this.ⲆⲆᐃ[19].id = 19;
    this.ΔⵠⲆ[19] = f418(60, 60, 0, ⲆⲆ[932], 3);
    this.ΔⵠⲆ[19].id = 19;
    this.ΔⲆΔ[39] = f418(60, 60, 0, ⲆⲆ[933], 3);
    this.ΔⲆΔ[39].id = 39;
    this.ⲆⲆᐃ[20] = f418(68, 68, 0, ⲆⲆ[923], 3);
    this.ⲆⲆᐃ[20].id = 20;
    this.ΔⵠⲆ[20] = f418(60, 60, 0, ⲆⲆ[921], 3);
    this.ΔⵠⲆ[20].id = 20;
    this.ΔⲆΔ[95] = f418(60, 60, 0, ⲆⲆ[922], 3);
    this.ΔⲆΔ[95].id = 95;
    this.ⲆⲆᐃ[21] = f418(68, 68, 0, ⲆⲆ[927], 3);
    this.ⲆⲆᐃ[21].id = 21;
    this.ΔⵠⲆ[21] = f418(60, 60, 0, ⲆⲆ[925], 3);
    this.ΔⵠⲆ[21].id = 21;
    this.ΔⲆΔ[96] = f418(60, 60, 0, ⲆⲆ[926], 3);
    this.ΔⲆΔ[96].id = 96;
    this.ⲆⲆᐃ[22] = f418(68, 68, 0, ⲆⲆ[931], 3);
    this.ⲆⲆᐃ[22].id = 22;
    this.ΔⵠⲆ[22] = f418(60, 60, 0, ⲆⲆ[929], 3);
    this.ΔⵠⲆ[22].id = 22;
    this.ΔⲆΔ[97] = f418(60, 60, 0, ⲆⲆ[930], 3);
    this.ΔⲆΔ[97].id = 97;
    this.ⲆⲆᐃ[60] = f418(68, 68, 0, ⲆⲆ[736], 3);
    this.ⲆⲆᐃ[60].id = 60;
    this.ΔⵠⲆ[60] = f418(60, 60, 0, ⲆⲆ[735], 3);
    this.ΔⵠⲆ[60].id = 60;
    this.ΔⲆΔ[127] = f418(60, 60, 0, ⲆⲆ[737], 3);
    this.ΔⲆΔ[127].id = 127;
    this.ⲆⲆᐃ[90] = f418(68, 68, 0, ⲆⲆ[739], 3);
    this.ⲆⲆᐃ[90].id = 90;
    this.ΔⵠⲆ[90] = f418(60, 60, 0, ⲆⲆ[738], 3);
    this.ΔⵠⲆ[90].id = 90;
    this.ΔⲆΔ[173] = f418(60, 60, 0, ⲆⲆ[740], 3);
    this.ΔⲆΔ[173].id = 173;
    this.ⲆⲆᐃ[92] = f418(68, 68, 0, ⲆⲆ[745], 3);
    this.ⲆⲆᐃ[92].id = 92;
    this.ΔⵠⲆ[92] = f418(60, 60, 0, ⲆⲆ[744], 3);
    this.ΔⵠⲆ[92].id = 92;
    this.ΔⲆΔ[174] = f418(60, 60, 0, ⲆⲆ[746], 3);
    this.ΔⲆΔ[174].id = 174;
    this.ⲆⲆᐃ[93] = f418(68, 68, 0, ⲆⲆ[748], 3);
    this.ⲆⲆᐃ[93].id = 93;
    this.ΔⵠⲆ[93] = f418(60, 60, 0, ⲆⲆ[747], 3);
    this.ΔⵠⲆ[93].id = 93;
    this.ΔⲆΔ[175] = f418(60, 60, 0, ⲆⲆ[749], 3);
    this.ΔⲆΔ[175].id = 175;
    this.ⲆⲆᐃ[91] = f418(68, 68, 0, ⲆⲆ[742], 3);
    this.ⲆⲆᐃ[91].id = 91;
    this.ΔⵠⲆ[91] = f418(60, 60, 0, ⲆⲆ[741], 3);
    this.ΔⵠⲆ[91].id = 91;
    this.ΔⲆΔ[176] = f418(60, 60, 0, ⲆⲆ[743], 3);
    this.ΔⲆΔ[176].id = 176;
    this.ⲆⲆᐃ[100] = f418(68, 68, 0, ⲆⲆ[1165], 3);
    this.ⲆⲆᐃ[100].id = 100;
    this.ΔⵠⲆ[100] = f418(60, 60, 0, ⲆⲆ[1164], 3);
    this.ΔⵠⲆ[100].id = 100;
    this.ΔⲆΔ[v555.ⲆⲆⵠⲆⲆ] = f418(60, 60, 0, ⲆⲆ[v554.ⵠⵠⵠᐃΔⵠΔⲆⵠ], 3);
    this.ΔⲆΔ[v555.ⲆⲆⵠⲆⲆ].id = v555.ⲆⲆⵠⲆⲆ;
    this.ⲆⲆᐃ[34] = f418(68, 68, 0, ⲆⲆ[945], 3);
    this.ⲆⲆᐃ[34].id = 34;
    this.ΔⵠⲆ[34] = f418(60, 60, 0, ⲆⲆ[943], 3);
    this.ΔⵠⲆ[34].id = 34;
    this.ΔⲆΔ[30] = f418(60, 60, 0, ⲆⲆ[944], 3);
    this.ΔⲆΔ[30].id = 30;
    this.ⲆⲆᐃ[44] = f418(68, 68, 0, ⲆⲆ[948], 3);
    this.ⲆⲆᐃ[44].id = 44;
    this.ΔⵠⲆ[44] = f418(60, 60, 0, ⲆⲆ[946], 3);
    this.ΔⵠⲆ[44].id = 44;
    this.ΔⲆΔ[92] = f418(60, 60, 0, ⲆⲆ[947], 3);
    this.ΔⲆΔ[92].id = 92;
    this.ⲆⲆᐃ[17] = f418(68, 68, 0, ⲆⲆ[878], 3);
    this.ⲆⲆᐃ[17].id = 17;
    this.ΔⵠⲆ[17] = f418(60, 60, 0, ⲆⲆ[877], 3);
    this.ΔⵠⲆ[17].id = 17;
    this.ΔⲆΔ[32] = f418(60, 60, 0, ⲆⲆ[879], 3);
    this.ΔⲆΔ[32].id = 32;
    this.ⲆⲆᐃ[63] = f418(68, 68, 0, ⲆⲆ[568], 3);
    this.ⲆⲆᐃ[63].id = 63;
    this.ΔⵠⲆ[63] = f418(60, 60, 0, ⲆⲆ[566], 3);
    this.ΔⵠⲆ[63].id = 63;
    this.ΔⲆΔ[130] = f418(60, 60, 0, ⲆⲆ[567], 3);
    this.ΔⲆΔ[130].id = 130;
    this.ⲆⲆᐃ[187] = f418(68, 68, 0, ⲆⲆ[591], 3);
    this.ⲆⲆᐃ[187].id = 187;
    this.ΔⵠⲆ[187] = f418(60, 60, 0, ⲆⲆ[253], 3);
    this.ΔⵠⲆ[187].id = 187;
    this.ⲆⲆᐃ[v559.ᐃⵠᐃᐃᐃᐃᐃ] = f418(68, 68, 0, ⲆⲆ[v554.ᐃΔⵠⵠΔᐃⲆᐃΔ], 3);
    this.ⲆⲆᐃ[v559.ᐃⵠᐃᐃᐃᐃᐃ].id = v559.ᐃⵠᐃᐃᐃᐃᐃ;
    this.ΔⵠⲆ[v559.ᐃⵠᐃᐃᐃᐃᐃ] = f418(60, 60, 0, ⲆⲆ[v554.ⵠⵠⲆⵠᐃⵠⲆⲆᐃ], 3);
    this.ΔⵠⲆ[v559.ᐃⵠᐃᐃᐃᐃᐃ].id = v559.ᐃⵠᐃᐃᐃᐃᐃ;
    this.ⲆⲆᐃ[v559.ᐃᐃⵠΔᐃΔΔ] = f418(68, 68, 0, ⲆⲆ[v554.ᐃⲆΔΔⲆⵠⲆᐃΔ], 3);
    this.ⲆⲆᐃ[v559.ᐃᐃⵠΔᐃΔΔ].id = v559.ᐃᐃⵠΔᐃΔΔ;
    this.ΔⵠⲆ[v559.ᐃᐃⵠΔᐃΔΔ] = f418(60, 60, 0, ⲆⲆ[v554.ⵠΔⵠⲆⲆΔⲆᐃⲆ], 3);
    this.ΔⵠⲆ[v559.ᐃᐃⵠΔᐃΔΔ].id = v559.ᐃᐃⵠΔᐃΔΔ;
    this.ⲆⲆᐃ[v559.ⲆⵠΔᐃᐃΔⵠ] = f418(68, 68, 0, ⲆⲆ[v554.ⵠⲆΔᐃᐃᐃⵠⲆΔ], 3);
    this.ⲆⲆᐃ[v559.ⲆⵠΔᐃᐃΔⵠ].id = v559.ⲆⵠΔᐃᐃΔⵠ;
    this.ΔⵠⲆ[v559.ⲆⵠΔᐃᐃΔⵠ] = f418(60, 60, 0, ⲆⲆ[v554.ΔΔⲆⵠⲆⲆⲆⵠⲆ], 3);
    this.ΔⵠⲆ[v559.ⲆⵠΔᐃᐃΔⵠ].id = v559.ⲆⵠΔᐃᐃΔⵠ;
    this.ⲆⲆᐃ[v559.ΔⲆΔΔᐃᐃⵠ] = f418(68, 68, 0, ⲆⲆ[v554.ⵠᐃΔΔⵠΔⲆᐃᐃ], 3);
    this.ⲆⲆᐃ[v559.ΔⲆΔΔᐃᐃⵠ].id = v559.ΔⲆΔΔᐃᐃⵠ;
    this.ΔⵠⲆ[v559.ΔⲆΔΔᐃᐃⵠ] = f418(60, 60, 0, ⲆⲆ[v554.ᐃΔΔⵠⵠΔΔⲆⵠ], 3);
    this.ΔⵠⲆ[v559.ΔⲆΔΔᐃᐃⵠ].id = v559.ΔⲆΔΔᐃᐃⵠ;
    this.ⲆⲆᐃ[v559.ΔⵠⵠⵠⲆⵠⲆ] = f418(68, 68, 0, ⲆⲆ[v554.ᐃⲆⵠΔΔᐃΔⵠᐃ], 3);
    this.ⲆⲆᐃ[v559.ΔⵠⵠⵠⲆⵠⲆ].id = v559.ΔⵠⵠⵠⲆⵠⲆ;
    this.ΔⵠⲆ[v559.ΔⵠⵠⵠⲆⵠⲆ] = f418(60, 60, 0, ⲆⲆ[v554.ΔΔⵠᐃⵠᐃΔᐃᐃ], 3);
    this.ΔⵠⲆ[v559.ΔⵠⵠⵠⲆⵠⲆ].id = v559.ΔⵠⵠⵠⲆⵠⲆ;
    this.ⲆΔᐃⲆΔⲆᐃ = function () {
      for (var v2724 = v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ, v2725 = 10, v2726 = 10, v2727 = 0; v2727 < v2724.length; v2727++) {
        if (v2727 > 0 && !(v2727 % 4)) {
          v2725 += v2724[0].info.width + 10;
          v2726 = 10;
        }
        v2724[v2727].info.translate.x = v2725;
        v2724[v2727].info.translate.y = v2726;
        v2726 += 10 + v2724[v2727].info.height;
      }
    };
    this.ⲆΔⲆΔⲆⵠⵠ = function () {
      var v2728 = Math.floor(Math.floor((3 + v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ.length) / 4) * (10 + this.ⲆⲆᐃ[0].info.ⵠΔ[0].width) + 35);
      for (var v2729 = 0; v2729 < this.ⲆⲆᐃ.length; v2729++) {
        if (this.ⲆⲆᐃ[v2729]) {
          this.ⲆⲆᐃ[v2729].info.translate.x = v2728;
          this.ⲆⲆᐃ[v2729].info.translate.y = 22;
        }
      }
      this.ⵠΔᐃΔΔᐃΔ.info.translate.x = v2728 + 17;
      this.ⵠΔᐃΔΔᐃΔ.info.translate.y = 22 + ⲆⲆ[339].height;
      this.ΔⲆΔᐃⲆⲆᐃ.info.translate.x = v2728 + 17;
      this.ΔⲆΔᐃⲆⲆᐃ.info.translate.y = 30;
      this.ᐃΔᐃΔⵠⵠⵠ.info.translate.x = v2728 + 17;
      this.ᐃΔᐃΔⵠⵠⵠ.info.translate.y = 22 + ⲆⲆ[339].height;
    };
    this.ᐃΔΔⲆⵠᐃΔⵠⲆ = function () {
      var v2730 = Math.floor((v381 - ⲆⲆ[556][0].width) / 2);
      for (var v2731 = 0; v2731 < this.ⵠΔⲆⵠΔ.length; v2731++) {
        this.ⵠΔⲆⵠΔ[v2731].button.info.translate.x = v2730;
        this.ⵠΔⲆⵠΔ[v2731].button.info.translate.y = -13;
      }
    };
    this.ΔΔⵠⲆΔΔΔ = function () {
      var v2732 = 12 + Math.floor(Math.floor((3 + v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ.length) / 4) * (10 + this.ΔⵠⲆᐃᐃⵠⵠ.info.ⵠΔ[0].width) + 35);
      this.ΔⵠⲆᐃᐃⵠⵠ.info.translate.x = v2732;
      this.ΔⵠⲆᐃᐃⵠⵠ.info.translate.y = 33;
      this.ΔⵠⵠᐃᐃⲆⵠ.info.translate.x = this.ΔⵠⲆᐃᐃⵠⵠ.info.translate.x;
      this.ΔⵠⵠᐃᐃⲆⵠ.info.translate.y = 137;
      this.ΔᐃⵠⵠᐃΔΔ.info.translate.x = this.ΔⵠⲆᐃᐃⵠⵠ.info.translate.x;
      this.ΔᐃⵠⵠᐃΔΔ.info.translate.y = 240;
    };
    this.ⵠⲆᐃΔⵠⲆᐃ = function () {
      var v2733 = 12 + Math.floor((10 + this.ᐃΔΔΔᐃⵠΔ.info.ⵠΔ[0].width) * Math.floor((3 + v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ.length) / 4) + 35);
      this.ᐃΔΔΔᐃⵠΔ.info.translate.x = v2733;
      this.ᐃΔΔΔᐃⵠΔ.info.translate.y = 36;
      v2733 += 83;
      this.ΔⵠⵠⲆⲆⲆⵠ.info.translate.x = v2733;
      this.ΔⵠⵠⲆⲆⲆⵠ.info.translate.y = 36;
      this.ⲆⲆⲆΔᐃᐃΔ.info.translate.x = v2733;
      this.ⲆⲆⲆΔᐃᐃΔ.info.translate.y = 36;
      this.ᐃⲆⵠⲆⵠⲆⲆ.info.translate.x = v2733;
      this.ᐃⲆⵠⲆⵠⲆⲆ.info.translate.y = 36;
      this.ⵠⵠⵠᐃⲆⲆΔ.info.translate.x = v2733;
      this.ⵠⵠⵠᐃⲆⲆΔ.info.translate.y = 36;
      this.ⲆⵠΔΔΔᐃΔ.info.translate.x = v2733;
      this.ⲆⵠΔΔΔᐃΔ.info.translate.y = 36;
    };
    this.ΔᐃᐃⲆΔᐃᐃ = function () {
      var v2734 = 12 + Math.floor(Math.floor((3 + v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ.length) / 4) * (10 + this.ᐃⲆᐃⵠΔΔⲆ.info.ⵠΔ[0].width) + 35);
      this.ᐃⲆᐃⵠΔΔⲆ.info.translate.x = v2734;
      this.ᐃⲆᐃⵠΔΔⲆ.info.translate.y = 36;
      v2734 += 83;
      this.ΔⲆᐃⵠⵠᐃᐃ.info.translate.x = v2734;
      this.ΔⲆᐃⵠⵠᐃᐃ.info.translate.y = 36;
    };
    this.ΔⲆⵠΔᐃᐃΔ = function () {
      var v2735 = Math.floor((10 + this.ᐃΔΔᐃⵠᐃⲆ.info.ⵠΔ[0].width) * Math.floor((3 + v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ.length) / 4) + 35);
      this.ᐃΔΔᐃⵠᐃⲆ.info.translate.x = v2735;
      this.ᐃΔΔᐃⵠᐃⲆ.info.translate.y = 22;
    };
    this.ⲆⲆΔⲆⵠⲆΔ = function () {
      var v2736 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ;
      if (v2736.length > 0) {
        var v2737 = Math.floor((v381 - (v2736[0].info.width + 5) * v2814.ⲆⲆᐃΔ.max) / 2);
      }
      for (var v2738 = 0; v2736.length > v2738; v2738++) {
        v2736[v2738].info.translate.x = v2737 + (v2736[v2738].info.width + 5) * v2738;
        v2736[v2738].info.translate.y = v382 - v2736[v2738].info.width - 10;
        this.ΔΔⵠΔⵠ[v2736[v2738].id].info.translate.x = v2736[v2738].info.translate.x + 13;
        this.ΔΔⵠΔⵠ[v2736[v2738].id].info.translate.y = v2736[v2738].info.translate.y - this.ΔΔⵠΔⵠ[v2736[v2738].id].info.ⵠΔ[0].height - 6;
      }
    };
    var v2739;
    var v2740 = 0;
    function f500() {
      vThis4.ᐃΔⵠ();
      if (++v2740 == 30) {
        vThis4.ⲆⲆⵠΔⲆⲆΔ();
        vThis4.ᐃΔⵠ();
        return;
      }
      vWindow.setTimeout(f500, 33);
    }
    this.ΔⵠⵠΔΔ = function (p1711) {
      if (v2814.ⲆⵠᐃᐃΔ.open) {
        v2814.ⲆⵠᐃᐃΔ.ΔⵠⵠΔΔ();
      }
      if (v2814.ⵠⵠⵠᐃᐃ.open) {
        v2814.ⵠⵠⵠᐃᐃ.ΔⵠⵠΔΔ();
      }
      document.getElementById("team_box").style.display = "none";
      vThis4.ᐃΔⲆⵠⵠ.style.display = "none";
      vThis4.ᐃΔⲆⵠⵠ.open = vVVV2133;
      vThis4.sign.style.display = "none";
      vThis4.sign.open = vVV2123;
      document.getElementById("shop_starterkit").style.display = "none";
      document.getElementById("home_craft").style.display = "none";
      document.getElementById("recipe_craft").style.display = "none";
      vThis4.ᐃⲆⲆⲆ.open = false;
      document.getElementById("option_in_game").style.display = "none";
      vThis4.options.open = vVVV2122;
      document.getElementById("sure_delete").style.display = "none";
      vThis4.ⲆΔⵠⲆ.open = vVVVV21;
      document.getElementById("cancel_sure_delete").style.display = "none";
      vThis4.ⲆⲆⲆⵠⲆ.open = false;
      document.getElementById("chronoquest").style.display = "none";
      vThis4.ΔᐃⲆⵠ.open = vV212;
      v2739 = p1711;
      vThis4.ⵠⵠΔΔⲆⵠⲆ();
      vThis4.ⵠⲆ.style.cursor = vThis4.ⲆⲆΔⵠᐃᐃΔ;
      v2994.ΔⵠⵠΔΔ();
      v2741 = -1;
      f501();
      f518();
    };
    var v2741 = -1;
    function f501() {
      vThis4.ᐃΔⵠ();
      if (++v2741 == 30) {
        vThis4.stop();
        v2739();
        return;
      }
      vWindow.setTimeout(f501, 33);
    }
    this.ⵠⲆⵠᐃⲆ = false;
    this.stop = function () {
      this.ⵠⲆⵠᐃⲆ = false;
    };
    this.ΔⲆⲆΔⵠ = function () {
      v2816.ΔⲆⲆⵠⵠΔΔΔᐃ();
      vThis4.ⵠⲆⵠᐃⲆ = true;
      v2741 = -1;
      v2740 = 0;
      f500();
    };
    this.ᐃΔⵠ = function () {
      this.ⵠⲆᐃᐃ.translate.x = v381 - this.ⵠⲆᐃᐃ.ⵠΔ.width - 10;
      this.ⵠⲆᐃᐃ.translate.y = 5;
      v2813.ΔⲆⵠᐃΔ.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[725][0].width - 85;
      v2813.ΔⲆⵠᐃΔ.translate.y = 10;
      this.ᐃⲆⲆⲆ.button.info.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[708][0].width - 10;
      this.ᐃⲆⲆⲆ.button.info.translate.y = 10;
      this.ΔᐃⲆⵠ.button.info.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[755][0].width - 20;
      this.ΔᐃⲆⵠ.button.info.translate.y = this.ᐃⲆⲆⲆ.button.info.translate.y + ⲆⲆ[708][0].height + 5;
      this.options.button.info.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[727][0].width - 20;
      this.options.button.info.translate.y = this.ΔᐃⲆⵠ.button.info.translate.y + ⲆⲆ[727][0].height + 18;
      this.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.info.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[727][0].width - 20;
      this.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.info.translate.y = this.options.button.info.translate.y + ⲆⲆ[783][0].height;
      this.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.info.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[727][0].width - 20;
      this.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.info.translate.y = this.options.button.info.translate.y + ⲆⲆ[783][0].height;
      this.ᐃΔⲆⵠⵠ.button.info.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[795][0].width - 20;
      this.ᐃΔⲆⵠⵠ.button.info.translate.y = this.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.info.translate.y + ⲆⲆ[795][0].height;
      v2814.ⲆⲆᐃⵠᐃ.translate.x = this.ⵠⲆᐃᐃ.translate.x - 63 - 85;
      v2814.ⲆⲆᐃⵠᐃ.translate.y = 100;
      v2814.ΔΔⲆⵠᐃ.translate.x = this.ⵠⲆᐃᐃ.translate.x - ⲆⲆ[517].width - 85;
      v2814.ΔΔⲆⵠᐃ.translate.y = v2814.ⲆⲆᐃⵠᐃ.translate.y + 10 + ⲆⲆ[546].height;
      this.ΔⵠⲆᐃΔ.translate.y = v382 - 3 - 193;
      this.ΔⵠⲆᐃΔ.translate.x = v381 - 3 - 193;
      this.ⲆⵠⵠΔ.translate.x = 5;
      this.ⲆⵠⵠΔ.translate.y = v382 - this.ⲆⵠⵠΔ.ⵠΔ.height - 5;
      this.ⲆⵠⵠΔΔ.button.info.translate.x = v384 - 45.5;
      this.ⲆⵠⵠΔΔ.button.info.translate.y = 50;
      this.ⲆΔᐃⲆΔⲆᐃ();
      this.ⲆⲆΔⲆⵠⲆΔ();
      this.ⲆΔⲆΔⲆⵠⵠ();
      this.ΔⲆⵠΔᐃᐃΔ();
      this.ΔᐃᐃⲆΔᐃᐃ();
      this.ⵠⲆᐃΔⵠⲆᐃ();
      this.ΔΔⵠⲆΔΔΔ();
      this.ᐃΔΔⲆⵠᐃΔⵠⲆ();
      this.sign.ΔⲆᐃΔⲆᐃⵠ();
      f297();
      v2814.ⲆⵠᐃᐃΔ.ᐃΔⵠ();
      v2814.ⵠⵠⵠᐃᐃ.ᐃΔⵠ();
      this.ⵠᐃⵠΔⲆⲆᐃⲆⵠ.ᐃΔⵠ();
      this.ᐃⲆⲆⲆ.ᐃΔⲆᐃⵠΔᐃ.ᐃΔⵠ();
      this.ᐃⲆⲆⲆ.list.ᐃΔⵠ();
      this.ⲆΔⵠⲆ.ᐃΔⵠ();
      this.ⲆⲆⲆⵠⲆ.ᐃΔⵠ();
      this.ΔᐃⲆⵠ.ᐃΔⵠ();
      this.ⲆⵠⵠΔΔ.ᐃΔⵠ();
      this.options.ᐃΔⵠ();
      this.ᐃΔⲆⵠⵠ.ᐃΔⵠ();
      this.sign.ᐃΔⵠ();
      var v2742 = 0;
      if (v2740 != 30) {
        v2742 = 1500 / (v2740 + 1) - 50;
      }
      if (v2741 != -1) {
        v2742 = -(1500 / (30 - v2741 + 1) - 48);
      }
      this.ⲆⵠⵠΔΔ.button.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ⵠⲆᐃᐃ.translate.y -= v2742 > 0 ? v2742 : -v2742;
      v2814.ⲆⲆᐃⵠᐃ.translate.y -= v2742 > 0 ? v2742 : -v2742;
      v2814.ΔΔⲆⵠᐃ.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ᐃⲆⲆⲆ.button.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ΔᐃⲆⵠ.button.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.options.button.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ᐃΔⲆⵠⵠ.button.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.info.translate.y -= v2742 > 0 ? v2742 : -v2742;
      v2813.ΔⲆⵠᐃΔ.translate.y -= v2742 > 0 ? v2742 : -v2742;
      this.ⲆⵠⵠΔ.translate.y -= v2742 < 0 ? v2742 : -v2742;
      this.ΔⵠⲆᐃΔ.translate.y -= v2742 < 0 ? v2742 : -v2742;
    };
    this.ΔΔᐃΔⲆⲆⲆ = function () {
      if (!v2814.ⵠⲆⵠᐃΔ.enabled && this.ᐃΔᐃᐃᐃᐃⵠ && !v2814.ᐃΔᐃΔᐃ) {
        f309();
      }
      f324();
      (function () {
        var v2743 = v2813.ⲆΔᐃ[0];
        if (v2813.mode === 0 || v2813.mode === 7 || v2813.mode === 2 || v2813.mode === 4 || v2813.mode === 5 || v2813.mode === 6 || v2813.mode === 3) {
          for (var v2744 = 0; v2743.length > v2744; v2744++) {
            v2743[v2744].ⵠⵠᐃΔⵠᐃᐃ();
          }
        } else if (v2813.mode === 1) {
          for (v2744 = 0; v2743.length > v2744; v2744++) {
            if (v2814.ⵠⵠⵠⲆᐃᐃΔ || v2814.ΔΔⲆⵠᐃ.enabled || v2743[v2744].ᐃᐃⵠⵠ.ᐃΔᐃⲆⵠ !== "spectator") {
              v2743[v2744].ⵠⵠᐃΔⵠᐃᐃ();
            }
          }
        }
      })();
      vF29.ΔⲆΔᐃΔᐃᐃ();
      if (this.ᐃΔᐃᐃᐃᐃⵠ) {
        f300();
        if (this.ⲆΔⵠⵠⲆΔΔ === 1) {
          this.ᐃⲆⲆⲆ.button.ΔⵠⵠΔ(p1695);
        }
        if (v2813.mode !== 2 && v2813.mode !== 4 && v2813.mode !== 5 && this.ᐃⲆⵠⵠᐃⵠⲆ === 1) {
          this.ΔᐃⲆⵠ.button.ΔⵠⵠΔ(p1695);
        }
        this.options.button.ΔⵠⵠΔ(p1695);
        if (this.ⲆᐃⵠⲆᐃⵠΔ === 1) {
          this.ᐃΔⲆⵠⵠ.button.ΔⵠⵠΔ(p1695);
        }
        if (v2994.ΔⲆⲆΔⵠ) {
          this.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.ΔⵠⵠΔ(p1695);
        } else {
          this.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.ΔⵠⵠΔ(p1695);
        }
        f323();
        f307();
        this.ⲆⵠⵠΔ.ΔⵠⵠΔ();
        f322();
        f308();
        f311();
        f327();
        f316();
        f293();
        f291();
        (function () {
          if (!v2814.ΔᐃⵠΔ.open && !v2814.ᐃⵠⵠᐃΔ.open && !v2814.ΔⵠᐃⲆ.open && !v2814.ᐃⲆⵠΔ.open && !v2814.ⵠⵠΔⲆ.open) {
            v2814.ⵠⵠᐃᐃⵠ.open = vVVV2133;
            var v2745 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
            var v2746 = 100;
            if (v2745) {
              for (var v2747 = 0; v2747 < v2813.ⲆΔᐃ[35].length; v2747++) {
                var v2748 = v2813.ⲆΔᐃ[35][v2747];
                var v2749 = ⲆΔΔ.ΔΔᐃΔ(v2748, v2745);
                if (v2746 > v2749) {
                  v2746 = v2749;
                  v2814.ⵠⵠᐃᐃⵠ.open = true;
                  v2814.ⵠⵠᐃᐃⵠ.ΔᐃᐃⲆ = v2748.ΔᐃᐃⲆ;
                  v2814.ⵠⵠᐃᐃⵠ.ᐃΔⵠᐃⲆ = v2748.id;
                }
              }
            }
          }
        })();
        f295();
        f298();
        f302();
        f304();
        f297();
        f299();
      }
      if (v2814.ⵠⲆⵠᐃΔ.enabled) {
        f292();
      }
      f301();
      if (this.ᐃΔᐃᐃᐃᐃⵠ && this.ⵠⲆᐃᐃⲆⲆΔ === 1) {
        f314();
      }
      v2814.ᐃΔᐃΔⵠᐃᐃ.ΔⵠⵠΔ();
      v2814.alert.ΔⵠⵠΔ("#FFF", "#000");
      if (this.ᐃΔᐃᐃᐃᐃⵠ) {
        v2814.ⵠⲆⵠᐃΔ.ΔⵠⵠΔ();
        v2814.ⲆⵠⵠΔΔ.ΔⵠⵠΔ();
        v2814.ⲆⲆᐃΔ.ⵠᐃΔᐃΔΔⵠ.ΔⵠⵠΔ(v3026.ⵠᐃΔⵠ.x, v3026.ⵠᐃΔⵠ.y);
      }
      f290();
    };
    this.ⲆΔⲆΔⵠᐃᐃΔᐃ = function () {
      v2814.ᐃⲆⲆ.ᐃΔⵠ();
      v2814.ⲆⵠⵠΔ.ᐃΔⵠ();
      if (!v2814.reconnect.enabled && v2814.ᐃⲆᐃⲆⵠ) {
        v2814.control.ᐃΔⵠ();
        v2814.ⲆⲆᐃⵠᐃ.ᐃΔⵠ();
      }
      v2813.ᐃΔⵠ();
      this.ΔᐃⲆⵠ.ᐃᐃᐃᐃⵠⲆᐃⵠⵠ();
    };
    this.ΔⲆⵠᐃⵠⵠⲆᐃΔ = function () {
      f399();
    };
    this.ΔⲆᐃᐃⵠⵠᐃⲆⲆ = function () {
      v2816.ΔⲆⵠΔΔᐃᐃᐃⲆ();
      v2816.ΔⲆᐃᐃΔᐃⵠᐃⵠ();
      v2816.ᐃⵠⲆΔΔⵠΔᐃⲆ();
      v2816.ᐃⵠⲆⵠⲆⲆᐃΔΔ();
    };
    this.ΔⵠⵠΔ = function () {
      if (!v2814.reconnect.enabled && v2814.ᐃⲆᐃⲆⵠ) {
        this.ΔⲆᐃᐃⵠⵠᐃⲆⲆ();
      }
      v2994.ΔⲆⲆⵠΔⵠᐃⵠΔ();
      this.ⲆΔⲆΔⵠᐃᐃΔᐃ();
      if (v2812.ΔⲆΔⲆΔΔⵠ !== 1) {
        this.ΔⲆⵠᐃⵠⵠⲆᐃΔ();
        this.ΔΔᐃΔⲆⲆⲆ();
      } else {
        var v2750 = ᐃⲆ.ⲆΔⲆΔΔⲆΔ;
        f294(p1695, v2750, v384 - v2750.width / 4, v386 - v2750.height / 4, v2750.width / 2, v2750.height / 2);
      }
    };
    this.ⵠᐃⵠⵠⲆⵠΔ = function (p1712) {
      if (v2814.ⲆⵠᐃᐃΔ.open && p1712.keyCode === 27) {
        v2814.ⲆⵠᐃᐃΔ.ΔⵠⵠΔΔ();
      } else if (v2814.ⵠⵠⵠᐃᐃ.open && p1712.keyCode === 27) {
        v2814.ⵠⵠⵠᐃᐃ.ΔⵠⵠΔΔ();
      } else if (v2814.ⲆⵠᐃᐃΔ.open || v2814.ⵠⵠⵠᐃᐃ.open || p1712.keyCode != 79 || v2741 != -1) {
        if (p1712.keyCode == 13 && v2741 == -1) {
          if (v2814.ⵠⵠⵠᐃᐃ.open) {
            v2814.ⵠⵠⵠᐃᐃ.ⲆᐃΔⲆΔⲆⵠ();
          } else {
            v2814.ⲆⵠᐃᐃΔ.ΔⲆⲆΔⵠ();
          }
        } else if (!v2814.ⲆⵠᐃᐃΔ.open && !v2814.ⵠⵠⵠᐃᐃ.open) {
          if (p1712.keyCode === 82) {
            v2814.ⲆⲆᐃⵠᐃ.ⲆΔᐃⲆⲆΔⵠ();
          } else if (p1712.keyCode !== 80 || v2813.mode !== 1 || v2814.ⵠⵠⵠⲆᐃᐃΔ) {
            if (p1712.keyCode >= 49 && p1712.keyCode <= 57) {
              if (v2814.ⲆΔⵠΔ.id < 0) {
                var v2751 = p1712.keyCode - 49;
                var v2752 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ[v2751];
                if (v2752) {
                  v2816.ᐃᐃΔⵠⲆ(v2752.id, v2751);
                }
              }
            } else if (p1712.keyCode == 89) {
              v2814.ΔᐃⲆⲆΔⲆᐃ = !v2814.ΔᐃⲆⲆΔⲆᐃ;
            } else if (p1712.keyCode == 71) {
              v2814.ⲆΔⵠΔ.ᐃΔΔⵠᐃᐃΔᐃᐃ();
            }
          } else {
            v2814.ΔΔⲆⵠᐃ.ⲆΔᐃⲆⲆΔⵠ();
          }
        }
      } else {
        v2814.ⵠⵠⵠᐃᐃ.ⵠΔⵠⵠΔⵠᐃⵠΔ();
      }
      v3022.up(p1712);
    };
    this.ΔΔⲆᐃⲆᐃⲆ = function (p1713) {
      v3022.down(p1713);
      if (p1713.keyCode == 8 && !v2814.ⲆⵠᐃᐃΔ.open && !v2814.ⵠⵠⵠᐃᐃ.open) {
        p1713.preventDefault();
      }
    };
    this.ᐃⵠⲆⲆΔⲆΔ = function (p1714) {
      v3026.ⵠᐃΔⵠ = f417(vThis4.ⵠⲆ, p1714);
      var v2753 = false;
      if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
        vThis4.ΔⵠⲆᐃΔ.focus(v3026.ⵠᐃΔⵠ);
      }
      var v2754 = v2814.ΔᐃⵠΔ;
      if (v2814.ⲆΔⵠΔ.id < 0 && v2754.id >= 0 && (!v2814.ΔᐃⵠΔ.lock || v2814.id === v2814.ΔᐃⵠΔ.ΔᐃᐃⲆ)) {
        v2753 |= vThis4.ⲆⲆᐃ[v2814.ΔᐃⵠΔ.id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      var v2755 = v2814.ΔⵠᐃⲆ;
      if (v2755.open && v2755.ΔᐃⲆΔⵠ > 0) {
        v2753 |= vThis4.ΔⲆᐃⵠⵠᐃᐃ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      var v2756 = v2814.ⵠⵠΔⲆ;
      if (v2756.open && v2756.ⲆⲆⲆⲆᐃΔⲆ > 0) {
        v2753 |= vThis4.ΔⵠⵠⲆⲆⲆⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        v2753 |= vThis4.ⲆⲆⲆΔᐃᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        v2753 |= vThis4.ᐃⲆⵠⲆⵠⲆⲆ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        v2753 |= vThis4.ⵠⵠⵠᐃⲆⲆΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        v2753 |= vThis4.ⲆⵠΔΔΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      var v2757 = v2814.ᐃⲆⵠΔ;
      if (v2757.open && v2757.ΔΔΔⵠⵠⲆⵠ > 0) {
        v2753 |= vThis4.ΔᐃⵠⵠᐃΔΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (v2814.sign.open) {
        v2753 |= vThis4.sign.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (!v2814.ΔᐃⵠΔ.lock) {
        if (v2814.ΔᐃⵠΔ.ⲆⵠΔΔⵠⲆΔ) {
          v2753 |= vThis4.ᐃΔᐃΔⵠⵠⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        }
      }
      if (v2814.ΔᐃⵠΔ.ⵠⲆᐃᐃᐃΔⲆ) {
        v2753 |= vThis4.ⵠΔᐃΔΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (v2814.ⲆΔⵠΔ.id < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        for (var v2758 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ, v2759 = 0; v2759 < v2758.length; v2759++) {
          var v2760 = v2758[v2759].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
          v2753 |= v2760;
          if (v2760) {
            v2814.ⲆⲆᐃΔ.ⵠᐃΔᐃΔΔⵠ.start(v2759, v3026.ⵠᐃΔⵠ);
          }
          if (v2754.open && (v2754.id < 0 || v2758[v2759].id == v2754.id) || v2814.ᐃⵠⵠᐃΔ.open && v2758[v2759].id === 109 || v2814.ⵠⵠᐃᐃⵠ.open && v2758[v2759].id === 180 || v2814.ᐃⲆⵠΔ.open && (v2758[v2759].id === 109 || v2758[v2759].id === 131) || v2814.ΔⵠᐃⲆ.open && v2758[v2759].id === 134 || v2814.ⵠⵠΔⲆ.open && v2758[v2759].id === 109) {
            v2753 |= vThis4.ΔΔⵠΔⵠ[v2758[v2759].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
          }
        }
      }
      if (v2814.ⲆⵠΔᐃΔ.open) {
        v2753 |= vThis4.ⲆⵠΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (vThis4.ᐃΔΔΔⵠ != -1) {
        if (v2753 |= vThis4.ⵠΔⲆⵠΔ[vThis4.ᐃΔΔΔⵠ].button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1)) {
          var v2761 = true;
        }
      } else {
        v2761 = vVVVV212;
      }
      if (!!(v2814.ⲆΔⵠΔ.id < 0) && !!(v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) && !v2761 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ᐃΔⲆⵠⵠ.open && !v2814.ᐃΔᐃΔᐃ) {
        v2758 = v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ;
        v2759 = 0;
        for (; v2758.length > v2759; v2759++) {
          v2753 |= v2758[v2759].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        }
      }
      if (v2814.ⲆΔⵠΔ.id < 0 && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && v2814.ⲆⵠⵠΔΔ.open && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        v2753 |= vThis4.ⲆⵠⵠΔΔ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (!!(v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        v2753 |= vThis4.ᐃⲆⲆⲆ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        v2753 |= vThis4.options.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open) {
        v2753 |= vThis4.ᐃΔⲆⵠⵠ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (!!(v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        if (v2994.ΔⲆⲆΔⵠ) {
          v2753 |= vThis4.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        } else {
          v2753 |= vThis4.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
        }
      }
      if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ᐃΔⲆⵠⵠ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && v2813.mode !== 2 && v2813.mode !== 4 && v2813.mode !== 5) {
        v2753 |= vThis4.ΔᐃⲆⵠ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 1);
      }
      if (!v2753 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open && !vThis4.sign.open) {
        if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ >= 0) {
          v2816.ΔⲆᐃⵠⲆⵠⲆᐃΔ();
        } else if (!v2761) {
          v3026.down();
        }
      }
    };
    this.ᐃΔⲆⵠⵠⵠΔ = function (p1715) {
      v3026.ⵠᐃΔⵠ = f417(vThis4.ⵠⲆ, p1715);
      v3026.up();
      if (!v2814.ⲆⲆᐃΔ.ⵠᐃΔᐃΔΔⵠ.release()) {
        var v2762 = v2814.ΔᐃⵠΔ;
        var v2763 = v2814.ᐃⵠⵠᐃΔ;
        var v2764 = v2814.ⵠⵠᐃᐃⵠ;
        var v2765 = v2814.ΔⵠᐃⲆ;
        var v2766 = v2814.ⵠⵠΔⲆ;
        var v2767 = v2814.ᐃⲆⵠΔ;
        if (v2814.control.attack) {
          v2814.control.attack = 0;
          v2816.ⲆⲆᐃΔⲆᐃΔⲆⵠ();
        }
        if (vThis4.ᐃΔΔΔⵠ != -1) {
          var v2768 = vThis4.ⵠΔⲆⵠΔ[vThis4.ᐃΔΔΔⵠ].button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164);
          var v2769 = document.getElementById("team_box").style;
          if (v2768 && v2769.display == "inline-block") {
            v2769.display = "none";
            return;
          }
          if (v2768) {
            vThis4.ⵠΔⲆⵠΔ[vThis4.ᐃΔΔΔⵠ].action();
          }
        }
        if (v2814.ⲆΔⵠΔ.id < 0 && v2762.id >= 0 && !vThis4.ⲆΔⵠⲆ.open) {
          if (!v2814.ΔᐃⵠΔ.lock || v2814.id === v2814.ΔᐃⵠΔ.ΔᐃᐃⲆ) {
            if (v2768 = vThis4.ⲆⲆᐃ[v2814.ΔᐃⵠΔ.id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
              v2816.ΔΔᐃⲆⲆⲆΔᐃⲆ(v2762);
            }
          }
        }
        if ((v2765 = v2814.ΔⵠᐃⲆ).open && v2765.ΔᐃⲆΔⵠ > 0 && !vThis4.ⲆΔⵠⲆ.open) {
          if (v2768 = vThis4.ΔⲆᐃⵠⵠᐃᐃ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            v2816.ᐃΔⵠⲆΔⲆᐃⲆⲆ(v2765);
          }
        }
        if ((v2766 = v2814.ⵠⵠΔⲆ).open && v2766.ⲆⲆⲆⲆᐃΔⲆ > 0 && !vThis4.ⲆΔⵠⲆ.open) {
          switch (v2766.type) {
            case 24:
              if (v2768 = vThis4.ΔⵠⵠⲆⲆⲆⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
                v2816.ⵠΔΔᐃΔᐃᐃ(v2766);
              }
              break;
            case 25:
              if (v2768 = vThis4.ⲆⲆⲆΔᐃᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
                v2816.ⵠΔΔᐃΔᐃᐃ(v2766);
              }
              break;
            case 26:
              if (v2768 = vThis4.ᐃⲆⵠⲆⵠⲆⲆ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
                v2816.ⵠΔΔᐃΔᐃᐃ(v2766);
              }
              break;
            case 27:
              if (v2768 = vThis4.ⵠⵠⵠᐃⲆⲆΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
                v2816.ⵠΔΔᐃΔᐃᐃ(v2766);
              }
              break;
            case 28:
              if (v2768 = vThis4.ⲆⵠΔΔΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
                v2816.ⵠΔΔᐃΔᐃᐃ(v2766);
              }
          }
        }
        if ((v2767 = v2814.ᐃⲆⵠΔ).open && v2767.ΔΔΔⵠⵠⲆⵠ > 0 && !vThis4.ⲆΔⵠⲆ.open) {
          if (v2768 = vThis4.ΔᐃⵠⵠᐃΔΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            v2816.ⲆΔⵠΔΔⵠⵠⵠΔ(v2767);
          }
        }
        if (v2814.sign.open && !vThis4.ⲆΔⵠⲆ.open) {
          if (v2768 = vThis4.sign.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            vThis4.sign.select();
          }
        }
        if (!v2814.ΔᐃⵠΔ.lock && !vThis4.ⲆΔⵠⲆ.open) {
          if (v2814.ΔᐃⵠΔ.ⲆⵠΔΔⵠⲆΔ && (v2768 = vThis4.ᐃΔᐃΔⵠⵠⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164))) {
            v2816.ᐃⵠⲆΔᐃⲆΔⵠⵠ(v2762);
          }
        }
        if (v2814.ΔᐃⵠΔ.ⵠⲆᐃᐃᐃΔⲆ && !vThis4.ⲆΔⵠⲆ.open && (v2768 = vThis4.ⵠΔᐃΔΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164))) {
          v2816.ᐃᐃΔⵠⵠⲆΔᐃᐃ(v2762);
          if (ga) {
            ga("send", "event", "Game", "lockpick");
          }
        }
        if (v2814.ⲆⵠΔᐃΔ.open) {
          if (v2768 = vThis4.ⲆⵠΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            v2816.ⲆⵠΔᐃΔ();
            if (ga) {
              ga("send", "event", "Game", "resurrection");
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.id < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled && !vThis4.ⲆΔⵠⲆ.open) {
          for (var v2770 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ, v2771 = 0; v2771 < v2770.length; v2771++) {
            if (v2768 = v2770[v2771].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
              if (p1715.which != 1 || p1715.shiftKey) {
                if ((p1715.which == 1 && p1715.shiftKey || p1715.which == 3) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                  vThis4.ⲆΔⵠⲆ.ⵠⲆΔⲆᐃⵠⲆ(v2770[v2771].id);
                }
              } else {
                v2816.ᐃᐃΔⵠⲆ(v2770[v2771].id, v2771);
              }
            } else if (v2762.open && (v2762.id < 0 || v2762.id === v2770[v2771].id)) {
              if ((v2768 = vThis4.ΔΔⵠΔⵠ[v2770[v2771].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                v2816.ΔⵠᐃⲆΔⵠᐃⲆᐃ(v2762, v2770[v2771].id, p1715.shiftKey ? 10 : 1);
              }
            } else if (v2764.open && v2770[v2771].id === 180) {
              if ((v2768 = vThis4.ΔΔⵠΔⵠ[v2770[v2771].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                v2816.ⲆⲆⲆΔⵠΔⲆΔᐃ(v2764);
              }
            } else if (v2763.open && v2770[v2771].id === 109) {
              if ((v2768 = vThis4.ΔΔⵠΔⵠ[v2770[v2771].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                v2816.ⲆⲆΔⵠᐃⵠΔΔᐃ(v2763, p1715.shiftKey ? 10 : 1);
              }
            } else if (v2765.open && v2770[v2771].id === 134) {
              if ((v2768 = vThis4.ΔΔⵠΔⵠ[v2770[v2771].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                v2816.ᐃΔΔⲆⵠⵠⵠΔⲆ(v2765, p1715.shiftKey ? 10 : 1);
              }
            } else if (v2766.open && v2770[v2771].id === 109) {
              if ((v2768 = vThis4.ΔΔⵠΔⵠ[v2770[v2771].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                v2816.ᐃⵠⲆⵠᐃⲆⵠΔΔ(v2766, p1715.shiftKey ? 10 : 1);
              }
            } else if (v2767.open && (v2770[v2771].id === 109 || v2770[v2771].id === 131)) {
              if ((v2768 = vThis4.ΔΔⵠΔⵠ[v2770[v2771].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) {
                if (v2770[v2771].id === 109) {
                  v2816.ⲆⲆΔΔⲆⵠᐃ(v2767, p1715.shiftKey ? 10 : 1, 0);
                } else {
                  v2816.ⲆⲆΔΔⲆⵠᐃ(v2767, 0, p1715.shiftKey ? 10 : 1);
                }
              }
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.id < 0 && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled && !vThis4.ⲆΔⵠⲆ.open && !v2814.ᐃΔᐃΔᐃ) {
          v2770 = v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ;
          v2771 = 0;
          for (; v2770.length > v2771; v2771++) {
            if (v2768 = v2770[v2771].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
              ⵠΔⲆⵠⵠ = v2816.ⲆⵠⲆᐃᐃΔⵠⲆⲆ(v2770[v2771].id);
              if (ⵠΔⲆⵠⵠ && ga) {
                ga("send", "event", "Game", "craft", v561[v669[v2770[v2771].id].ⵠᐃΔᐃ].name);
              }
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.id < 0 && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && v2814.ⲆⵠⵠΔΔ.open && !vThis4.ᐃΔⲆⵠⵠ.open && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open) {
          if (v2768 = vThis4.ⲆⵠⵠΔΔ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0)) {
            v2993.ⲆⵠⵠΔΔ.select();
          }
        }
        if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ᐃΔⲆⵠⵠ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open) {
          if (v2994.ΔⲆⲆΔⵠ) {
            if (v2768 = vThis4.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
              v2994.select();
              if (ga) {
                ga("send", "event", "Game", "sound on");
              }
            }
          } else if (v2768 = vThis4.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            v2994.select();
            if (ga) {
              ga("send", "event", "Game", "sound off");
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
          if (v2768 = vThis4.options.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            vThis4.options.ΔⲆⵠⲆⵠⲆⲆⲆᐃ();
            if (ga) {
              ga("send", "event", "Game", "options");
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open && vThis4.ⲆᐃⵠⲆᐃⵠΔ === 1) {
          if (v2768 = vThis4.ᐃΔⲆⵠⵠ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            vThis4.ᐃΔⲆⵠⵠ.select();
            if (ga) {
              ga("send", "event", "Game", "market");
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ᐃΔⲆⵠⵠ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && vThis4.ⲆΔⵠⵠⲆΔΔ === 1) {
          if (v2768 = vThis4.ᐃⲆⲆⲆ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            vThis4.ᐃⲆⲆⲆ.ⵠⲆⵠⲆΔⵠⲆᐃᐃ();
            if (ga) {
              ga("send", "event", "Game", "recipe");
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ᐃΔⲆⵠⵠ.open && v2813.mode !== 2 && v2813.mode !== 4 && v2813.mode !== 5 && vThis4.ᐃⲆⵠⵠᐃⵠⲆ === 1) {
          if (v2768 = vThis4.ΔᐃⲆⵠ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, v2164)) {
            vThis4.ΔᐃⲆⵠ.select();
            if (ga) {
              ga("send", "event", "Game", "quests");
            }
          }
        }
        if (v2814.ⲆΔⵠΔ.ᐃⲆⲆΔᐃ && p1715.which == 3) {
          vThis4.ⲆⲆⲆⵠⲆ.ⵠⲆΔⲆᐃⵠⲆ();
        }
      }
    };
    this.ⵠⵠᐃⲆⲆΔⲆ = false;
    this.ᐃΔΔᐃᐃΔⵠ = function (p1716) {
      v3026.ⵠᐃΔⵠ = f417(vThis4.ⵠⲆ, p1716);
      var v2772 = false;
      v2993.ⵠⲆΔⲆⲆ.display = 0;
      v2814.ⲆⲆᐃΔ.ⵠᐃΔᐃΔΔⵠ.ⲆⲆⵠⵠΔ(v3026.ⵠᐃΔⵠ);
      if (vThis4.ᐃΔΔΔⵠ != -1) {
        v2772 |= vThis4.ⵠΔⲆⵠΔ[vThis4.ᐃΔΔΔⵠ].button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      var v2773 = v2814.ΔⵠᐃⲆ;
      if (v2773.open && v2773.ΔᐃⲆΔⵠ > 0) {
        v2772 |= vThis4.ΔⲆᐃⵠⵠᐃᐃ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      var v2774 = v2814.ⵠⵠΔⲆ;
      if (v2774.open && v2774.ⲆⲆⲆⲆᐃΔⲆ > 0) {
        v2772 |= vThis4.ΔⵠⵠⲆⲆⲆⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        v2772 |= vThis4.ⲆⲆⲆΔᐃᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        v2772 |= vThis4.ᐃⲆⵠⲆⵠⲆⲆ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        v2772 |= vThis4.ⵠⵠⵠᐃⲆⲆΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        v2772 |= vThis4.ⲆⵠΔΔΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      var v2775 = v2814.ᐃⲆⵠΔ;
      if (v2775.open && v2775.ΔΔΔⵠⵠⲆⵠ > 0) {
        v2772 |= vThis4.ΔᐃⵠⵠᐃΔΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (v2814.sign.open) {
        v2772 |= vThis4.sign.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      var v2776 = v2814.ΔᐃⵠΔ;
      if (v2814.ⲆΔⵠΔ.id < 0 && v2776.id >= 0 && !v2814.ⵠⲆⵠᐃΔ.enabled) {
        if (!v2814.ΔᐃⵠΔ.lock || v2814.ΔᐃⵠΔ.ΔᐃᐃⲆ === v2814.id) {
          v2772 |= vThis4.ⲆⲆᐃ[v2776.id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        }
      }
      if (v2814.ⲆⵠΔᐃΔ.open) {
        v2772 |= vThis4.ⲆⵠΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (!v2814.ΔᐃⵠΔ.lock && !v2814.ⵠⲆⵠᐃΔ.enabled) {
        if (v2814.ΔᐃⵠΔ.ⲆⵠΔΔⵠⲆΔ) {
          v2772 |= vThis4.ᐃΔᐃΔⵠⵠⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        }
      }
      if (v2814.ΔᐃⵠΔ.ⵠⲆᐃᐃᐃΔⲆ && !v2814.ⵠⲆⵠᐃΔ.enabled) {
        v2772 |= vThis4.ⵠΔᐃΔΔᐃΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (v2814.ⲆΔⵠΔ.id < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled) {
        for (var v2777 = v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ, v2778 = 0; v2778 < v2777.length; v2778++) {
          var v2779 = v2777[v2778].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
          v2772 |= v2993.ⵠⲆΔⲆⲆ.ᐃⵠᐃⲆ(v2779, v2777[v2778], 0);
          if (v2776.open && (v2776.id < 0 || v2776.id == v2777[v2778].id) || v2814.ᐃⵠⵠᐃΔ.open && v2777[v2778].id == 109 || v2814.ⵠⵠᐃᐃⵠ.open && v2777[v2778].id === 180 || v2814.ᐃⲆⵠΔ.open && (v2777[v2778].id == 109 || v2777[v2778].id == 131) || v2814.ΔⵠᐃⲆ.open && v2777[v2778].id == 134 || v2814.ⵠⵠΔⲆ.open && v2777[v2778].id == 109) {
            v2772 |= vThis4.ΔΔⵠΔⵠ[v2777[v2778].id].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
          }
        }
      }
      if (v2814.ⲆΔⵠΔ.id < 0 && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !v2814.ⵠⲆⵠᐃΔ.enabled && !v2814.ᐃΔᐃΔᐃ) {
        v2777 = v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ;
        v2778 = 0;
        for (; v2778 < v2777.length; v2778++) {
          v2779 = vV214;
          v2779 = v2777[v2778].ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
          v2772 |= v2993.ⵠⲆΔⲆⲆ.ᐃⵠᐃⲆ(v2779, v2777[v2778], 1);
        }
      }
      if (v2814.ⲆΔⵠΔ.id < 0 && v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && v2814.ⲆⵠⵠΔΔ.open && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        v2772 |= vThis4.ⲆⵠⵠΔΔ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open && vThis4.ⲆΔⵠⵠⲆΔΔ === 1) {
        v2772 |= vThis4.ᐃⲆⲆⲆ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (!!(v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        v2772 |= vThis4.options.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0 && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open && vThis4.ⲆᐃⵠⲆᐃⵠΔ === 1) {
        v2772 |= vThis4.ᐃΔⲆⵠⵠ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (!!(v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ΔᐃⲆⵠ.open && !vThis4.options.open && !vThis4.ᐃΔⲆⵠⵠ.open) {
        if (v2994.ΔⲆⲆΔⵠ) {
          v2772 |= vThis4.ⵠΔⲆⵠ.ᐃⵠΔΔⲆⲆⵠ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        } else {
          v2772 |= vThis4.ⵠΔⲆⵠ.ⵠⵠⵠⵠΔⲆΔ.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
        }
      }
      if (!!(v2814.ⲆΔⵠΔ.ⵠΔΔᐃ < 0) && !vThis4.ᐃⲆⲆⲆ.open && !vThis4.ⲆΔⵠⲆ.open && !vThis4.options.open && !vThis4.ⲆⲆⲆⵠⲆ.open && !vThis4.ᐃΔⲆⵠⵠ.open && v2813.mode !== 2 && v2813.mode !== 4 && v2205.ᐃΔᐃⲆⵠΔⵠΔⵠ !== v2813.mode && vThis4.ᐃⲆⵠⵠᐃⵠⲆ === 1) {
        v2772 |= vThis4.ΔᐃⲆⵠ.button.ᐃⵠᐃⲆ(vThis4.ⵠⲆ, v3026.ⵠᐃΔⵠ, 0);
      }
      if (v2772 !== vThis4.ⵠⵠᐃⲆⲆΔⲆ) {
        vThis4.ⵠⵠᐃⲆⲆΔⲆ = v2772;
        p1694.style.cursor = v2772 ? vThis4.ⲆΔᐃᐃΔⲆⲆ : vThis4.ⲆⲆΔⵠᐃᐃΔ;
      }
    };
    this.ⲆⲆⵠΔⲆⲆΔ = function () {
      vWindow.addEventListener("mousedown", this.ᐃⵠⲆⲆΔⲆΔ, false);
      vWindow.addEventListener("mouseup", this.ᐃΔⲆⵠⵠⵠΔ, vV21);
      vWindow.addEventListener("mousemove", this.ᐃΔΔᐃᐃΔⵠ, vV213);
      vWindow.addEventListener("keyup", this.ⵠᐃⵠⵠⲆⵠΔ, false);
      vWindow.addEventListener("keydown", this.ΔΔⲆᐃⲆᐃⲆ, false);
    };
    this.ⵠⵠΔΔⲆⵠⲆ = function () {
      vWindow.removeEventListener("mousedown", this.ᐃⵠⲆⲆΔⲆΔ, false);
      vWindow.removeEventListener("mouseup", this.ᐃΔⲆⵠⵠⵠΔ, false);
      vWindow.removeEventListener("mousemove", this.ᐃΔΔᐃᐃΔⵠ, false);
      vWindow.removeEventListener("keyup", this.ⵠᐃⵠⵠⲆⵠΔ, vV21);
      vWindow.removeEventListener("keydown", this.ΔΔⲆᐃⲆᐃⲆ, false);
    };
  }
  var v2780 = 1;
  var v2781 = 1;
  var v2782 = {
    ⵠΔⵠ: 6,
    ⵠΔⵠⵠᐃ: 2,
    ⲆᐃΔⲆᐃⵠᐃΔⵠ: 12,
    ΔᐃΔᐃ: 8,
    ᐃᐃΔᐃⵠ: 1,
    ⲆⵠⲆΔᐃ: 3,
    ⵠΔΔⲆᐃᐃΔ: 3000,
    ᐃⲆⲆᐃⲆⵠΔ: 12,
    ᐃΔⵠⲆⲆᐃΔⲆΔ: 5000,
    ⵠΔᐃᐃⲆⵠΔΔⲆ: 5000,
    ⲆΔⲆΔΔⲆⵠ: 460000,
    ΔⲆⵠⵠⲆᐃⲆⲆᐃ: 5000,
    ⵠⲆⲆᐃᐃⲆⲆᐃᐃ: 12
  };
  var v2783 = [];
  v2783[-1] = 1;
  v2783[28] = 1;
  v2783[49] = 1;
  v2783[v559.ΔᐃΔⲆᐃⵠᐃᐃⲆ] = 2;
  v2783[8] = 2;
  v2783[1] = 2;
  v2783[3] = 2;
  function f502(p1717) {
    return vWindow.String.fromCharCode(p1717);
  }
  (function () {
    const v2784 = {
      ΔⵠᐃⵠⵠᐃⲆ: 1556244,
      ΔⲆΔΔⲆⵠᐃ: 16405417,
      ΔΔΔᐃⲆΔⵠⵠᐃ: 9467832,
      ᐃⵠⵠᐃⵠⲆⵠ: 8865107
    };
  })();
  v2783[4] = 2;
  v2783[31] = 2;
  v2783[32] = 2;
  v2783[9] = 2;
  v2783[57] = 2;
  v2783[0] = 2;
  v2783[63] = 2;
  v2783[17] = 2;
  v2783[5] = 2;
  v2783[6] = 2;
  v2783[30] = 2;
  v2783[v559.ᐃⲆⲆⲆΔⵠⲆΔΔ] = 2;
  v2783[18] = 2;
  v2783[12] = 2;
  v2783[13] = 2;
  v2783[14] = 2;
  v2783[15] = 2;
  v2783[16] = 2;
  v2783[33] = 2;
  v2783[v559.ⲆᐃᐃⵠᐃⲆⲆⵠⵠ] = 2;
  v2783[35] = 2;
  v2783[36] = 2;
  v2783[37] = 2;
  v2783[38] = 2;
  v2783[39] = 2;
  v2783[45] = 2;
  v2783[62] = 2;
  v2783[54] = 2;
  v2783[53] = 2;
  v2783[46] = 3;
  v2783[50] = 3;
  v2783[51] = 3;
  v2783[52] = 3;
  ᐃᐃⲆΔ = [];
  ᐃᐃⲆΔ[0] = 0;
  ᐃᐃⲆΔ[1] = 1;
  ᐃᐃⲆΔ[2] = 1;
  ᐃᐃⲆΔ[3] = 1;
  ᐃᐃⲆΔ[4] = 0;
  ᐃᐃⲆΔ[5] = 0;
  ᐃᐃⲆΔ[6] = 0;
  ᐃᐃⲆΔ[7] = 0;
  ᐃᐃⲆΔ[8] = 0;
  ᐃᐃⲆΔ[9] = 0;
  ᐃᐃⲆΔ[10] = 1;
  ᐃᐃⲆΔ[11] = 1;
  ᐃᐃⲆΔ[12] = 1;
  ᐃᐃⲆΔ[13] = 1;
  ᐃᐃⲆΔ[14] = 1;
  ᐃᐃⲆΔ[15] = 1;
  ᐃᐃⲆΔ[16] = 0;
  ᐃᐃⲆΔ[17] = 0;
  ᐃᐃⲆΔ[18] = 0;
  ᐃᐃⲆΔ[19] = 0;
  ᐃᐃⲆΔ[20] = 0;
  ᐃᐃⲆΔ[21] = 0;
  ᐃᐃⲆΔ[22] = 0;
  ᐃᐃⲆΔ[23] = 1;
  ᐃᐃⲆΔ[24] = 1;
  ᐃᐃⲆΔ[25] = 1;
  ᐃᐃⲆΔ[26] = 1;
  ᐃᐃⲆΔ[27] = 1;
  ᐃᐃⲆΔ[28] = 1;
  ᐃᐃⲆΔ[29] = 1;
  ᐃᐃⲆΔ[30] = 1;
  ᐃᐃⲆΔ[31] = 1;
  ᐃᐃⲆΔ[32] = 1;
  ᐃᐃⲆΔ[33] = 1;
  ᐃᐃⲆΔ[34] = 1;
  ᐃᐃⲆΔ[35] = 1;
  ᐃᐃⲆΔ[36] = 1;
  ᐃᐃⲆΔ[37] = 1;
  ᐃᐃⲆΔ[38] = 1;
  ᐃᐃⲆΔ[40] = 0;
  ᐃᐃⲆΔ[41] = 0;
  ᐃᐃⲆΔ[42] = 0;
  ᐃᐃⲆΔ[50] = 1;
  ᐃᐃⲆΔ[51] = 1;
  ᐃᐃⲆΔ[52] = 1;
  ᐃᐃⲆΔ[55] = 0;
  ᐃᐃⲆΔ[56] = 0;
  ᐃᐃⲆΔ[57] = 0;
  ᐃᐃⲆΔ[58] = 0;
  ΔⵠᐃΔᐃ = [];
  ΔⵠᐃΔᐃ[v2208.ΔⲆᐃᐃΔ] = 0;
  ΔⵠᐃΔᐃ[1] = 0;
  ΔⵠᐃΔᐃ[29] = 0;
  ΔⵠᐃΔᐃ[6] = 0;
  ΔⵠᐃΔᐃ[3] = -1;
  ΔⵠᐃΔᐃ[31] = -1;
  ΔⵠᐃΔᐃ[2] = 0;
  ΔⵠᐃΔᐃ[4] = 0;
  ΔⵠᐃΔᐃ[30] = 0;
  ΔⵠᐃΔᐃ[33] = 0;
  ΔⵠᐃΔᐃ[32] = 1;
  ΔⵠᐃΔᐃ[35] = 1;
  ΔⵠᐃΔᐃ[7] = 1;
  ΔⵠᐃΔᐃ[8] = 1;
  ΔⵠᐃΔᐃ[9] = 1;
  ΔⵠᐃΔᐃ[19] = 1;
  ΔⵠᐃΔᐃ[50] = 1;
  ΔⵠᐃΔᐃ[5] = 0;
  ΔⵠᐃΔᐃ[12] = 1;
  ΔⵠᐃΔᐃ[13] = 1;
  ΔⵠᐃΔᐃ[14] = 1;
  ΔⵠᐃΔᐃ[20] = 1;
  ΔⵠᐃΔᐃ[52] = 1;
  ΔⵠᐃΔᐃ[10] = 0;
  ΔⵠᐃΔᐃ[15] = 1;
  ΔⵠᐃΔᐃ[16] = 1;
  ΔⵠᐃΔᐃ[17] = 1;
  ΔⵠᐃΔᐃ[21] = 1;
  const v2785 = {};
  v2785.get = function (p1718, p1719) {
    if (p1719 !== "ⵠⲆⲆⵠⲆᐃⲆ") {
      const v2786 = Math.random;
      const v2787 = [];
      const vF53 = function () {
        for (let v2788 = 0; v2788 < 9795; v2788++) {
          v2787.push(v2788);
        }
        return v2786();
      };
      Math.random = vF53;
    }
    return vWindow.Reflect.get(...arguments);
  };
  ΔⵠᐃΔᐃ[51] = 1;
  ΔⵠᐃΔᐃ[45] = 0;
  ΔⵠᐃΔᐃ[46] = 1;
  ΔⵠᐃΔᐃ[47] = 1;
  ΔⵠᐃΔᐃ[48] = 1;
  ΔⵠᐃΔᐃ[49] = 1;
  ΔⵠᐃΔᐃ[53] = 1;
  ΔⵠᐃΔᐃ[18] = 1;
  ΔⵠᐃΔᐃ[22] = 1;
  ΔⵠᐃΔᐃ[23] = 1;
  ΔⵠᐃΔᐃ[11] = 0;
  ΔⵠᐃΔᐃ[34] = 1;
  var v2789 = {
    ⲆⵠⵠᐃΔΔΔ: {
      ⵠⲆⲆΔᐃ: null,
      path: ["audio/ambience.mp3"],
      ⲆⲆ: {
        d1: [90391, 300, false],
        d2: [90684, 300, vVVV212],
        d0: [90086, 300, vVVV21222]
      },
      sample: {
        d0: 8,
        d1: 8,
        d2: 8
      }
    },
    ⵠΔᐃΔᐃΔⲆ: {
      ⵠⲆⲆΔᐃ: null,
      path: ["audio/ambience.mp3"],
      ⲆⲆ: {
        p2: [89815, 300, false],
        p0: [89303, 300, false],
        p1: [89549, 300, false]
      },
      sample: {
        p0: 8,
        p1: 8,
        p2: 8
      }
    },
    ⵠᐃᐃᐃΔⲆᐃ: {
      ⵠⲆⲆΔᐃ: null,
      path: ["audio/ambience.mp3"],
      ⲆⲆ: {
        w0: [88195, 300, false],
        w2: [88751, 300, vVV2122],
        w1: [88473, 300, false],
        w3: [89025, 300, vVV21]
      },
      sample: {
        w0: 8,
        w1: 8,
        w2: 8,
        w3: 8
      }
    },
    ⵠᐃᐃⲆⲆΔⵠ: {
      ⵠⲆⲆΔᐃ: null,
      path: ["audio/ambience.mp3"],
      ⲆⲆ: {
        ⵠⵠⵠⵠⵠⲆΔⲆⲆ: [100, 2800, true],
        ᐃᐃᐃΔΔᐃᐃ: [19882, 8301, vVVVV242],
        ΔⲆᐃⵠⲆ: [12356, 6965, true],
        ᐃⵠᐃⵠᐃⲆΔ: [92249, 500, false],
        ᐃΔⲆⵠⲆⲆΔ: [66014, 925, true],
        ⵠⵠᐃⲆⵠΔⲆ: [91022, 400, false],
        ΔⲆΔᐃΔⲆⲆ: [30562, 655, vVVV24],
        ΔΔᐃⵠⵠⲆⵠ: [31658, 813, true],
        ΔⲆΔⵠⵠᐃⲆ: [32604, 21890, true],
        ⵠⵠΔⵠⲆᐃᐃ: [3100, 8800, vVVV2432],
        ᐃᐃΔΔᐃⵠΔ: [54524, 11393, true],
        ᐃⲆⵠⵠⵠ: [28380, 1797, vVVV243],
        ΔⲆΔᐃΔ: [91431, 400, false],
        ΔΔⵠⲆⲆΔΔ: [66961, 21223, true],
        ΔⵠᐃⲆⵠΔΔ: [66961, 21223, vVV2422]
      },
      sample: {
        ⵠⵠⵠⵠⵠⲆΔⲆⲆ: 1,
        ⵠⵠΔⵠⲆᐃᐃ: 1,
        ᐃᐃᐃΔΔᐃᐃ: 1,
        ΔⲆΔⵠⵠᐃⲆ: 1,
        ᐃᐃΔΔᐃⵠΔ: 1,
        ΔΔⵠⲆⲆΔΔ: 1,
        ΔⵠᐃⲆⵠΔΔ: 1,
        ΔⲆᐃⵠⲆ: 8,
        ᐃⲆⵠⵠⵠ: 8,
        ΔⲆΔᐃΔⲆⲆ: 8,
        ΔΔᐃⵠⵠⲆⵠ: 8,
        ᐃΔⲆⵠⲆⲆΔ: 8,
        ⵠⵠᐃⲆⵠΔⲆ: 6,
        ΔⲆΔᐃΔ: 6,
        ᐃⵠᐃⵠᐃⲆΔ: 6
      }
    }
  };
  function f503(p1720, p1721, p1722, p1723, p1724, p1725) {
    const v2790 = (p1722 | 5263) & ~(p1722 & 5263);
    const v2791 = (12345 + (p1723 + 3038) * 1103515245) % 2147483648;
    return (12345 + (29036 + (f414((8 << (p1720 >> 24 & 255)) + (16 << (p1720 & 255)) + (0 << (p1720 >> 8 & 255)) + (24 << (p1720 >> 16 & 255)), (2531011 + (p1721 + 8141) * 214013) % 4294967296) ^ f414(v2790, v2791))) * 1103515245) % 2147483648;
  }
  function f504(p1726, p1727, p1728, p1729, p1730, p1731, p1732, p1733, p1734, p1735, p1736) {
    this.r = 1;
    this.ⲆΔᐃⲆⵠ = p1726;
    this.ᐃΔⵠΔᐃΔᐃ = p1726;
    this.ⲆⵠⲆ = p1727;
    this.ᐃᐃᐃ = p1728;
    this.fade = p1729;
    this.ⲆᐃΔⲆⵠᐃΔ = p1730;
    this.ΔⵠᐃⲆⵠⵠⵠ = p1731;
    this.ᐃᐃⵠⵠ = p1732;
    this.ⵠⲆⵠⲆΔΔᐃ = p1733;
    this.source = p1734;
    this.source.ΔᐃⵠᐃⲆΔⵠ = p1734.x + p1734.w;
    this.source.ⲆⲆⲆⲆΔ = p1734.y + p1734.ⵠⵠⲆ;
    this.ⲆΔⵠΔⵠΔᐃⲆΔ = p1735;
    this.ᐃⲆΔⲆΔⲆⵠ = p1736;
    this.ᐃᐃΔⵠᐃⵠⲆ = 0;
    this.ᐃᐃⵠⵠΔᐃΔ = {
      ⵠᐃⵠΔ: 5,
      d: 5
    };
    this.ᐃⵠⵠⵠⵠ = function () {
      this.ⲆΔᐃⲆⵠ -= v3027;
      if (this.ⲆΔᐃⲆⵠ < 0) {
        this.ⲆΔᐃⲆⵠ = this.ᐃΔⵠΔᐃΔᐃ;
        var v2792 = v2789.ⵠᐃᐃⲆⲆΔⵠ.ⵠⲆⲆΔᐃ.playing(this.ⲆⵠⲆ);
        var v2793 = v2789.ⵠᐃᐃⲆⲆΔⵠ.ⵠⲆⲆΔᐃ.playing(this.ᐃᐃᐃ);
        if (v2792 && !v2793) {
          var v2794 = v2780 * this.ᐃᐃⵠⵠ.volume(this.ⲆⵠⲆ);
          var v2795 = v2780 * (Math.random() * this.ΔⵠᐃⲆⵠⵠⵠ + this.ⲆᐃΔⲆⵠᐃΔ);
          this.ᐃᐃⵠⵠ.fade(v2794, v2795, this.fade, this.ⲆⵠⲆ);
        } else if (!v2792 && v2793) {
          v2794 = v2780 * this.ᐃᐃⵠⵠ.volume(this.ᐃᐃᐃ);
          v2795 = v2780 * (this.ΔⵠᐃⲆⵠⵠⵠ * Math.random() + this.ⲆᐃΔⲆⵠᐃΔ);
          this.ᐃᐃⵠⵠ.fade(v2794, v2795, this.fade, this.ᐃᐃᐃ);
        }
      }
    };
    this.transition = function () {
      this.ⲆΔᐃⲆⵠ = this.ᐃΔⵠΔᐃΔᐃ;
      this.ᐃᐃⵠⵠΔᐃΔ.d = this.ᐃᐃⵠⵠΔᐃΔ.ⵠᐃⵠΔ;
      if (v2813.time) {
        this.ᐃᐃⵠⵠ.fade(0, v2780 * this.ⲆᐃΔⲆⵠᐃΔ, this.ⵠⲆⵠⲆΔΔᐃ, this.ⲆⵠⲆ);
        this.ᐃᐃⵠⵠ.play(this.ⲆⵠⲆ);
        if (this.ᐃᐃⵠⵠ.playing(this.ᐃᐃᐃ)) {
          var v2796 = this.ᐃᐃⵠⵠ.volume(this.ᐃᐃᐃ) * v2780;
          this.ᐃᐃⵠⵠ.fade(v2796, 0, this.ⵠⲆⵠⲆΔΔᐃ, this.ᐃᐃᐃ);
        }
      } else {
        this.ᐃᐃⵠⵠ.fade(0, v2780 * this.ⲆᐃΔⲆⵠᐃΔ, this.ⵠⲆⵠⲆΔΔᐃ, this.ᐃᐃᐃ);
        this.ᐃᐃⵠⵠ.play(this.ᐃᐃᐃ);
        if (this.ᐃᐃⵠⵠ.playing(this.ⲆⵠⲆ)) {
          v2796 = v2780 * this.ᐃᐃⵠⵠ.volume(this.ⲆⵠⲆ);
          this.ᐃᐃⵠⵠ.fade(v2796, 0, this.ⵠⲆⵠⲆΔΔᐃ, this.ⲆⵠⲆ);
        }
      }
    };
    this.check = function (p1737) {
      if (this.ᐃᐃΔⵠᐃⵠⲆ) {
        if (ⲆΔΔ.ᐃⲆΔⲆΔⲆⵠ(p1737, this.ⲆΔⵠΔⵠΔᐃⲆΔ)) {
          if (!v2994.transition && v2813.ΔⲆⵠᐃΔ.now < 460000) {
            if (v2813.time) {
              if (!this.ᐃᐃⵠⵠ.playing(this.ⲆⵠⲆ)) {
                this.ᐃᐃⵠⵠΔᐃΔ.d -= v3027;
                if (this.ᐃᐃⵠⵠΔᐃΔ.d < 0) {
                  this.transition();
                }
              }
            } else if (!this.ᐃᐃⵠⵠ.playing(this.ᐃᐃᐃ)) {
              this.ᐃᐃⵠⵠΔᐃΔ.d -= v3027;
              if (this.ᐃᐃⵠⵠΔᐃΔ.d < 0) {
                this.transition();
              }
            }
          }
        } else {
          this.ᐃᐃΔⵠᐃⵠⲆ = 0;
          if (this.ᐃᐃⵠⵠ.playing(this.ⲆⵠⲆ)) {
            var v2797 = v2780 * this.ᐃᐃⵠⵠ.volume(this.ⲆⵠⲆ);
            this.ᐃᐃⵠⵠ.fade(v2797, 0, this.ⵠⲆⵠⲆΔΔᐃ, this.ⲆⵠⲆ);
          }
          if (this.ᐃᐃⵠⵠ.playing(this.ᐃᐃᐃ)) {
            v2797 = this.ᐃᐃⵠⵠ.volume(this.ᐃᐃᐃ) * v2780;
            this.ᐃᐃⵠⵠ.fade(v2797, 0, this.ⵠⲆⵠⲆΔΔᐃ, this.ᐃᐃᐃ);
          }
        }
      } else if (ⲆΔΔ.ᐃⲆΔⲆΔⲆⵠ(p1737, this.ᐃⲆΔⲆΔⲆⵠ)) {
        this.ᐃᐃΔⵠᐃⵠⲆ = 1;
        if (!v2994.transition && v2813.ΔⲆⵠᐃΔ.now < 460000) {
          this.transition();
        }
      }
    };
    this.ᐃΔⵠ = function (p1738, p1739) {
      var v2798;
      var v2799;
      v2798 = p1738.x < this.source.x ? v2994.ᐃᐃᐃᐃΔΔΔ(this.source.x) : this.source.ΔᐃⵠᐃⲆΔⵠ < p1738.x ? v2994.ᐃᐃᐃᐃΔΔΔ(this.source.ΔᐃⵠᐃⲆΔⵠ) : p1739.x;
      v2799 = this.source.y > p1738.y ? v2994.ⵠⵠᐃⵠΔⲆᐃ(this.source.y) : this.source.ⲆⲆⲆⲆΔ < p1738.y ? v2994.ⵠⵠᐃⵠΔⲆᐃ(this.source.ⲆⲆⲆⲆΔ) : p1739.y;
      this.ᐃᐃⵠⵠ.pos(v2798, v2799, -0.5, this.ⲆⵠⲆ);
      this.ᐃᐃⵠⵠ.pos(v2798, v2799, -0.5, this.ᐃᐃᐃ);
    };
  }
  Δⵠⵠᐃⵠ = {
    ᐃᐃⵠΔⲆⲆᐃ: 4,
    ⵠⲆᐃⲆΔⵠⵠ: 2,
    ⲆΔΔᐃΔⲆᐃ: 100,
    ᐃⵠᐃⲆᐃΔⲆ: 3,
    ᐃΔΔΔⲆᐃⲆ: 300,
    ⲆⲆΔⵠⲆⲆⵠ: 1,
    ⲆⵠᐃⵠΔⲆⵠΔᐃ: 0.2,
    ΔⲆΔΔᐃΔⵠⲆΔ: 0.2,
    ᐃⵠⲆΔᐃΔΔΔⲆ: 0.2,
    ᐃⵠⵠᐃⵠⵠⲆᐃΔ: 0.4,
    ⵠᐃΔΔΔΔⵠ: 100,
    ⵠⲆᐃⵠⵠ: 2,
    ᐃΔⵠᐃᐃᐃⲆ: 0,
    ⵠΔΔⵠⵠΔᐃ: 100
  };
  function f505(p1740, p1741, p1742) {
    this.ᐃΔⵠΔⵠᐃΔ = p1740;
    this.c = 0;
    this.ᐃᐃⵠⵠ = p1741;
    this.ᐃΔⵠᐃΔ = p1742;
    this.max = p1742.length;
    this.play = function () {
      this.c = (this.c + 1) % this.max;
      var v2800 = this.ᐃΔⵠᐃΔ[this.c];
      this.ᐃΔⵠΔⵠᐃΔ.ⵠⲆᐃⵠⲆΔᐃ(this.ᐃᐃⵠⵠ, v2800);
      this.ᐃᐃⵠⵠ.play(v2800);
    };
  }
  function f506(p1743) {
    this.ΔⲆⵠΔΔᐃⵠ = 1;
    this.ΔⲆᐃΔ = 0;
    this.mode = -1;
    this.ᐃⲆⵠⵠⵠ = v2994.sample.ᐃⲆⵠⵠⵠ[p1743];
    this.ΔⲆΔᐃΔⲆⲆ = v2994.sample.ΔⲆΔᐃΔⲆⲆ[p1743];
    this.ΔΔᐃⵠⵠⲆⵠ = v2994.sample.ΔΔᐃⵠⵠⲆⵠ[p1743];
    this.ᐃΔⲆⵠⲆⲆΔ = v2994.sample.ᐃΔⲆⵠⲆⲆΔ[p1743];
    this.ⵠⵠΔⵠⵠᐃⵠ = new f505(this, v2789.ⵠΔᐃΔᐃΔⲆ.ⵠⲆⲆΔᐃ, v2994.ⲆΔⵠⲆⲆ.ⵠⵠΔⵠⵠᐃⵠ[p1743]);
    this.ᐃΔⵠⲆΔ = new f505(this, v2789.ⵠᐃᐃᐃΔⲆᐃ.ⵠⲆⲆΔᐃ, v2994.ⲆΔⵠⲆⲆ.ᐃΔⵠⲆΔ[p1743]);
    this.ⲆⵠΔᐃᐃ = new f505(this, v2789.ⲆⵠⵠᐃΔΔΔ.ⵠⲆⲆΔᐃ, v2994.ⲆΔⵠⲆⲆ.ⲆⵠΔᐃᐃ[p1743]);
    this.ΔΔⲆΔᐃ = p1743;
    this.x = 0;
    this.y = 0;
    this.ⲆⲆⵠⵠΔ = 0;
    this.ⲆΔᐃⲆⵠ = Δⵠⵠᐃⵠ.ΔⵠⵠⲆⲆⵠᐃᐃΔ;
    this.ⵠᐃΔⵠ = {
      x: 0,
      y: 0
    };
    this.ΔⵠᐃᐃΔ = v2789.ⵠᐃᐃⲆⲆΔⵠ.ⵠⲆⲆΔᐃ;
    this.ⲆᐃΔᐃᐃΔⵠⲆⲆ = function (p1744) {
      if (p1744 === 1) {
        this.ⵠⵠΔⵠⵠᐃⵠ.play();
      } else if (p1744 === 2) {
        this.ᐃΔⵠⲆΔ.play();
      } else if (p1744 === 3) {
        this.ⲆⵠΔᐃᐃ.play();
      }
    };
    this.ΔⲆΔⵠᐃⲆᐃ = function (p1745) {
      if (p1745.ⲆᐃⵠⵠΔⵠⲆ > 0) {
        return Δⵠⵠᐃⵠ.ⵠⲆᐃⵠⵠ;
      } else if (p1745.ⲆΔⵠⲆⲆⲆᐃ > 0) {
        return Δⵠⵠᐃⵠ.ⲆⲆΔⵠⲆⲆⵠ;
      } else if (p1745.ᐃⲆΔⵠⵠ > 0 || p1745.ⵠΔΔᐃᐃ > 0) {
        return Δⵠⵠᐃⵠ.ᐃⵠᐃⲆᐃΔⲆ;
      } else {
        return Δⵠⵠᐃⵠ.ᐃΔⵠᐃᐃᐃⲆ;
      }
    };
    this.ⵠΔⵠⲆⲆ = function (p1746) {
      this.ΔⲆⵠΔΔᐃⵠ = 0;
      this.ΔⲆᐃΔ = p1746;
      var v2801 = v2813.ᐃᐃⲆⵠ[p1746];
      v2801.ΔΔⲆΔᐃ = this.ΔΔⲆΔᐃ;
      this.mode = this.ΔⲆΔⵠᐃⲆᐃ(v2801);
      this.ⵠᐃΔⵠ.x = v2801.x;
      this.ⵠᐃΔⵠ.y = v2801.y;
    };
    this.ΔΔⵠⵠΔΔⲆ = function () {
      this.ΔⲆⵠΔΔᐃⵠ = 1;
      this.mode = -1;
      this.ΔⵠᐃᐃΔ.stop(this.ᐃⲆⵠⵠⵠ);
      this.ΔⵠᐃᐃΔ.stop(this.ΔⲆΔᐃΔⲆⲆ);
      this.ΔⵠᐃᐃΔ.stop(this.ΔΔᐃⵠⵠⲆⵠ);
      this.ΔⵠᐃᐃΔ.stop(this.ᐃΔⲆⵠⲆⲆΔ);
    };
    this.fade = function (p1747, p1748) {
      var v2802 = v2781 * this.ΔⵠᐃᐃΔ.volume(p1747);
      this.ΔⵠᐃᐃΔ.fade(v2802, 0, p1748, p1747);
    };
    this.ⵠⲆᐃⵠⲆΔᐃ = function (p1749, p1750) {
      if (this.ⲆⲆⵠⵠΔ && this.ΔΔⲆΔᐃ) {
        p1749.pos(this.x, this.y, -0.5, p1750);
      }
    };
    this.ᐃⵠⵠⵠⵠ = function (p1751, p1752, p1753, p1754, p1755, p1756, p1757) {
      this.ⲆΔᐃⲆⵠ = p1756;
      if (p1754 && this.mode === p1755) {
        var v2803 = this.ΔⵠᐃᐃΔ.volume(p1751) * v2781;
        if (this.ⲆⲆⵠⵠΔ) {
          var v2804 = (p1753 * Math.random() + p1752) * v2781;
          this.ΔⵠᐃᐃΔ.fade(v2803, v2804, p1757, p1751);
        } else {
          this.ΔⵠᐃᐃΔ.fade(v2803, 0, p1757, p1751);
        }
      } else if (this.mode != p1755 && this.ⲆⲆⵠⵠΔ) {
        this.ΔⵠᐃᐃΔ.fade(0, v2781 * (p1752 + p1753), p1757, p1751);
      } else if (this.ⲆⲆⵠⵠΔ) {
        v2803 = v2781 * this.ΔⵠᐃᐃΔ.volume(p1751);
        v2804 = (Math.random() * p1753 + p1752) * v2781;
        this.ΔⵠᐃᐃΔ.fade(v2803, v2804, p1757, p1751);
      }
      this.ⵠⲆᐃⵠⲆΔᐃ(this.ΔⵠᐃᐃΔ, p1751);
      this.ΔⵠᐃᐃΔ.play(p1751);
    };
    this.ᐃΔⵠ = function () {
      var v2805 = v2813.ᐃᐃⲆⵠ[this.ΔⲆᐃΔ];
      this.ⲆΔᐃⲆⵠ -= v3027;
      if (!(this.ⲆΔᐃⲆⵠ > 0)) {
        var v2806 = 0;
        if (v2805.x != this.ⵠᐃΔⵠ.x || v2805.y != this.ⵠᐃΔⵠ.y) {
          if (!this.ⲆⲆⵠⵠΔ) {
            v2806 = 1;
            this.ⲆⲆⵠⵠΔ = 1;
          }
          this.x = v2994.ⲆⵠΔⵠΔⲆⲆ(v2805.x, Δⵠⵠᐃⵠ.ⵠⲆᐃⲆΔⵠⵠ);
          this.y = v2994.ⵠⵠΔⲆᐃⲆᐃ(v2805.y, Δⵠⵠᐃⵠ.ⵠⲆᐃⲆΔⵠⵠ);
        } else if (this.ⲆⲆⵠⵠΔ) {
          v2806 = 1;
          this.ⲆⲆⵠⵠΔ = 0;
        }
        this.ⵠᐃΔⵠ.x = v2805.x;
        this.ⵠᐃΔⵠ.y = v2805.y;
        Ⲇᐃⵠᐃ = this.ΔⲆΔⵠᐃⲆᐃ(v2805);
        if (Ⲇᐃⵠᐃ != this.mode) {
          if (Δⵠⵠᐃⵠ.ⲆⲆΔⵠⲆⲆⵠ === this.mode) {
            this.fade(this.ᐃⲆⵠⵠⵠ, Δⵠⵠᐃⵠ.ᐃΔΔΔⲆᐃⲆ);
          } else if (Δⵠⵠᐃⵠ.ⵠⲆᐃⵠⵠ === this.mode) {
            this.fade(this.ΔⲆΔᐃΔⲆⲆ, Δⵠⵠᐃⵠ.ⵠΔΔⵠⵠΔᐃ);
          } else if (this.mode === Δⵠⵠᐃⵠ.ᐃΔⵠᐃᐃᐃⲆ) {
            this.fade(this.ΔΔᐃⵠⵠⲆⵠ, Δⵠⵠᐃⵠ.ⵠᐃΔΔΔΔⵠ);
          } else if (this.mode === Δⵠⵠᐃⵠ.ᐃⵠᐃⲆᐃΔⲆ) {
            this.fade(this.ᐃΔⲆⵠⲆⲆΔ, Δⵠⵠᐃⵠ.ⲆΔΔᐃΔⲆᐃ);
          }
        }
        if (Δⵠⵠᐃⵠ.ⲆⲆΔⵠⲆⲆⵠ === Ⲇᐃⵠᐃ) {
          this.ᐃⵠⵠⵠⵠ(this.ᐃⲆⵠⵠⵠ, 0.08, 0.3, v2806, Ⲇᐃⵠᐃ, Δⵠⵠᐃⵠ.ᐃⵠⵠᐃⵠⵠⲆᐃΔ, Δⵠⵠᐃⵠ.ᐃΔΔΔⲆᐃⲆ);
        } else if (Δⵠⵠᐃⵠ.ⵠⲆᐃⵠⵠ === Ⲇᐃⵠᐃ) {
          this.ᐃⵠⵠⵠⵠ(this.ΔⲆΔᐃΔⲆⲆ, 0.2, 0.3, v2806, Ⲇᐃⵠᐃ, Δⵠⵠᐃⵠ.ΔⲆΔΔᐃΔⵠⲆΔ, Δⵠⵠᐃⵠ.ⵠΔΔⵠⵠΔᐃ);
        } else if (Ⲇᐃⵠᐃ === Δⵠⵠᐃⵠ.ᐃΔⵠᐃᐃᐃⲆ) {
          this.ᐃⵠⵠⵠⵠ(this.ΔΔᐃⵠⵠⲆⵠ, 0.3, 0.6, v2806, Ⲇᐃⵠᐃ, Δⵠⵠᐃⵠ.ⲆⵠᐃⵠΔⲆⵠΔᐃ, Δⵠⵠᐃⵠ.ⵠᐃΔΔΔΔⵠ);
        } else if (Δⵠⵠᐃⵠ.ᐃⵠᐃⲆᐃΔⲆ === Ⲇᐃⵠᐃ) {
          this.ᐃⵠⵠⵠⵠ(this.ᐃΔⲆⵠⲆⲆΔ, 0.1, 0.25, v2806, Ⲇᐃⵠᐃ, Δⵠⵠᐃⵠ.ᐃⵠⲆΔᐃΔΔΔⲆ, Δⵠⵠᐃⵠ.ⲆΔΔᐃΔⲆᐃ);
        }
        this.mode = Ⲇᐃⵠᐃ;
      }
    };
    this.check = function () {
      var v2807 = v2813.ᐃᐃⲆⵠ[this.ΔⲆᐃΔ];
      if (v2807) {
        return vVVV243;
      } else {
        this.ΔΔⵠⵠΔΔⲆ(v2807);
        return vVV212;
      }
    };
  }
  const v2808 = String.fromCharCode;
  const vV2808 = v2808(101);
  const vV28082 = v2808(118);
  const vV28083 = v2808(97);
  const vV28084 = v2808(108);
  ⲆⵠⲆᐃⲆⵠⵠ = 0;
  document.getElementById("version").innerHTML = "52.3";
  var v2809 = 1 + Math.random();
  var v2810 = [];
  var v2811 = {
    time: Math.floor(Math.random() * 2),
    items: []
  };
  document.getElementById("game_body").style.backgroundColor = v554.ΔΔⵠΔⲆ[v2811.time];
  v2811.items.push(new f444(1, 0, 0, 0, 0, Math.random() * Math.PI * 2, 2, 1));
  v2811.items.push(new f444(100, 0, 0, 0, 0, 0, 0, 5));
  v2811.items.push(new f444(2, 0, 0, 0, 0, Math.PI / 4, 0, 0));
  v2811.items.push(new f444(100, 0, 0, 0, 0, 0, 0, 5));
  var v2812;
  var v2813;
  var v2814;
  var v2815;
  var v2816 = new function () {
    var vThis5 = this;
    function i(p1758) {
      let v2817 = p1758.name || p1758.a;
      if (p1758.auto) {
        return v2817;
      } else {
        return v2817 + " [" + p1758.nu + " " + v702[324] + "]";
      }
    }
    this.ⵠⲆᐃΔ = null;
    this.ⵠⲆᐃⲆᐃ = 0;
    this.ΔⵠⲆΔᐃ = [];
    this.ⲆⵠⲆⵠΔᐃΔ = {};
    this.ⲆᐃᐃⲆⲆⵠΔ = {};
    this.ⵠᐃⲆᐃⵠ = [[], [], [], [], [], [], [], [], []];
    this.ᐃΔΔⵠᐃⲆⲆ = [-1, -1, -1, -1, -1, -1, -1, -1, -1];
    this.ΔⲆᐃᐃⲆ = 0;
    this.ⲆΔᐃᐃΔΔⲆ = 0;
    this.ΔΔᐃⲆᐃⲆⲆ = function (p1759) {
      if (v2187 !== undefined) {
        vThis5.ΔⵠⲆΔᐃ.push({
          a: v2187.name,
          gm: v2187.mode,
          idx: 0,
          m: 100,
          nu: 0,
          id: 0
        });
        p1759();
        return;
      }
      fetch(v2191 + "/list", {
        method: "GET"
      }).then(function (p1760) {
        if (p1760.ok) {
          p1760.json().then(function (p1761) {
            vThis5.ΔⵠⲆΔᐃ = [];
            vThis5.ⲆᐃᐃⲆⲆⵠΔ = {};
            for (let v2818 in v2205.ⵠⵠⲆΔᐃᐃΔ) {
              const v2819 = v2205.ⵠⵠⲆΔᐃᐃΔ[v2818];
              vThis5.ΔⵠⲆΔᐃ.push({
                a: "Auto Select",
                gm: v2819,
                m: 100,
                nu: 0,
                auto: true
              });
            }
            var v2820 = 0;
            for (let v2821 = 0; p1761.length > v2821; v2821++) {
              const v2822 = p1761[v2821];
              const v2823 = v2822.n;
              const v2824 = v2822.l;
              const v2825 = v2822.p;
              const v2826 = [];
              vThis5.ⲆⵠⲆⵠΔᐃΔ[v2823] = v2826;
              const v2827 = [];
              for (let v2828 = 0; v2825.length > v2828; v2828++) {
                const v2829 = v2823 + v2825[v2828][v2820];
                v2827.push(v2829);
                v2826.push(v2829);
              }
              for (let v2830 = 0; v2824.length > v2830; v2830++) {
                const v2831 = v2824[v2830];
                let v2832;
                let v2833 = v2205.ⵠⵠⲆΔᐃᐃΔ[v2831[2]];
                let v2834 = v2833 + v2831[1];
                v2832 = v2833 in vThis5.ⲆᐃᐃⲆⲆⵠΔ ? ++vThis5.ⲆᐃᐃⲆⲆⵠΔ[v2833] : vThis5.ⲆᐃᐃⲆⲆⵠΔ[v2833] = 1;
                if (v2834 in vThis5.ⲆᐃᐃⲆⲆⵠΔ) {
                  ᐃⲆΔᐃⲆᐃΔ = ++vThis5.ⲆᐃᐃⲆⲆⵠΔ[v2834];
                } else {
                  ᐃⲆΔᐃⲆᐃΔ = vThis5.ⲆᐃᐃⲆⲆⵠΔ[v2834] = 1;
                }
                vThis5.ΔⵠⲆΔᐃ.push({
                  name: v2831[4],
                  a: v2205.ⵠᐃᐃⲆᐃΔΔΔⲆ[v2831[1]] + " " + ᐃⲆΔᐃⲆᐃΔ,
                  r: v2831[1],
                  gm: v2205.ⵠⵠⲆΔᐃᐃΔ[v2831[2]],
                  idx: v2832,
                  m: 100,
                  nu: v2831[3],
                  id: v2831[1] + v2831[v2820],
                  p: v2827
                });
              }
            }
            const v2835 = [];
            const v2836 = [];
            const v2837 = [];
            for (let v2838 = 0; vThis5.ΔⵠⲆΔᐃ.length > v2838; v2838++) {
              const v2839 = vThis5.ΔⵠⲆΔᐃ[v2838];
              if (!v2839.auto) {
                if (v2839.gm === v2205.ⵠⵠⲆΔᐃᐃΔ[6]) {
                  if (typeof v2839.name === "string" && (v2839.name.indexOf("Private Server") !== -1 || v2839.nu > 95)) {
                    v2835.push(v2839);
                  } else {
                    v2837.push(v2839);
                  }
                  v2836.push(v2838);
                }
              }
            }
            const v2840 = [];
            v2840.push(...v2837.sort(function (p1762, p1763) {
              return p1763.nu - p1762.nu;
            }));
            v2840.push(...v2835.sort(function (p1764, p1765) {
              return (p1765.nu < 95 ? p1765.nu : 0) - (p1764.nu < 95 ? p1764.nu : 0);
            }));
            for (let v2841 = 0; v2841 < v2836.length; v2841++) {
              const v2842 = v2836[v2841];
              const v2843 = v2840[v2841];
              v2843.idx = v2841 + 1;
              vThis5.ΔⵠⲆΔᐃ[v2842] = v2843;
            }
            p1759();
          });
        } else {
          vWindow.setTimeout(function () {
            vThis5.ΔΔᐃⲆᐃⲆⲆ(p1759);
          }, 3000);
        }
      });
    };
    this.ᐃⵠΔᐃΔΔⲆΔⵠ = function (p1766) {
      var v2844 = [];
      for (var v2845 = 0; p1766.length > v2845; v2845++) {
        if (p1766[v2845].a.indexOf(vV529) !== -1) {
          v2844.push(v2845);
        }
      }
      if (v2844.length === 0) {
        return 0;
      } else {
        return v2844[Math.floor(Math.random() * v2844.length)];
      }
    };
    this.ⲆᐃⵠΔⵠᐃᐃ = function (p1767) {
      var v2846 = 0;
      for (var v2847 = 0; v2847 < p1767.length; v2847++) {
        v2846 += p1767[v2847].nu;
      }
      var v2848 = document.getElementById("servselect");
      if (v2816.ᐃΔΔⵠᐃⲆⲆ[v2816.ΔⲆᐃᐃⲆ] === -1) {
        v2816.ᐃΔΔⵠᐃⲆⲆ[v2816.ΔⲆᐃᐃⲆ] = v2848.selectedIndex = v2816.ᐃⵠΔᐃΔΔⲆΔⵠ(p1767);
      } else {
        v2848.selectedIndex = v2816.ᐃΔΔⵠᐃⲆⲆ[v2816.ΔⲆᐃᐃⲆ];
      }
      var v2849 = "<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">" + p1767[v2848.selectedIndex].a + (p1767[v2848.selectedIndex].nu > 0 ? " [" + p1767[v2848.selectedIndex].nu + " " + v702[324] + "]" : "") + "</button></label><ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\"><li role=\"option\" id=\"selectDisabled\">" + v702[323] + " (" + this.ⵠⲆᐃᐃⵠᐃᐃ + ") " + v702[325] + "</li>";
      for (v2847 = 0; p1767.length > v2847; v2847++) {
        v2849 += "<li role=\"option\">" + i(p1767[v2847]) + "</li>\n";
      }
      v2849 += "<li role=\"option\" id=\"selectDisabled\">(" + v2846 + ") " + v702[326] + "</li>";
      v2849 += "</div>";
      v2848.innerHTML = v2849;
      $(".md-select").on("click", function () {
        $(this).toggleClass("active");
      });
      $(".md-select ul li").on("click", function () {
        var v2850 = $(this).text();
        var v2851 = -1;
        for (var v2852 = v2816.ⵠᐃⲆᐃⵠ[v2816.ΔⲆᐃᐃⲆ], v2853 = 0; v2853 < v2852.length; v2853++) {
          if (i(v2852[v2853]) === v2850) {
            v2851 = v2853;
            break;
          }
        }
        if (v2851 !== -1) {
          document.getElementById("servselect").selectedIndex = v2851;
          v2816.ᐃΔΔⵠᐃⲆⲆ[v2816.ΔⲆᐃᐃⲆ] = v2851;
          $(".md-select ul li").removeClass("active");
          $(this).addClass("active");
          $(".md-select label button").text(v2850);
        }
      });
    };
    this.ⵠⲆᐃᐃⵠᐃᐃ = 0;
    this.ⲆⵠⵠᐃΔⲆΔⲆᐃ = function () {
      this.ⵠⲆᐃᐃⵠᐃᐃ = 0;
      for (var v2854 = 0; v2854 < v2816.ΔⵠⲆΔᐃ.length; v2854++) {
        if (this.ΔⵠⲆΔᐃ[v2854].gm == "experimental") {
          this.ⵠᐃⲆᐃⵠ[7].push(this.ΔⵠⲆΔᐃ[v2854]);
        } else if (this.ΔⵠⲆΔᐃ[v2854].gm == "zombies") {
          this.ⵠᐃⲆᐃⵠ[2].push(this.ΔⵠⲆΔᐃ[v2854]);
        } else if (this.ΔⵠⲆΔᐃ[v2854].gm == "community") {
          this.ⵠᐃⲆᐃⵠ[6].push(this.ΔⵠⲆΔᐃ[v2854]);
        } else if (this.ΔⵠⲆΔᐃ[v2854].gm == "forest") {
          this.ⵠᐃⲆᐃⵠ[4].push(this.ΔⵠⲆΔᐃ[v2854]);
        } else if (this.ΔⵠⲆΔᐃ[v2854].gm == "battle-royale") {
          this.ⵠᐃⲆᐃⵠ[5].push(this.ΔⵠⲆΔᐃ[v2854]);
        } else if (this.ΔⵠⲆΔᐃ[v2854].gm == "vampires") {
          this.ⵠᐃⲆᐃⵠ[3].push(this.ΔⵠⲆΔᐃ[v2854]);
        } else {
          this.ⵠᐃⲆᐃⵠ[0].push(this.ΔⵠⲆΔᐃ[v2854]);
        }
        this.ⵠⲆᐃᐃⵠᐃᐃ += this.ΔⵠⲆΔᐃ[v2854].nu;
      }
      for (v2854 = 0; v2854 < this.ⵠᐃⲆᐃⵠ.length; v2854++) {
        if (this.ⵠᐃⲆᐃⵠ[v2854].length === 0) {
          this.ⵠᐃⲆᐃⵠ[v2854].push({
            a: v702[327],
            ᐃⵠᐃⵠⵠⵠΔⲆᐃ: 0,
            Ⲇⵠ: "127.0.0.1",
            ᐃⵠΔ: 80
          });
        }
      }
      this.ⲆᐃⵠΔⵠᐃᐃ(this.ⵠᐃⲆᐃⵠ[0]);
      this.ⲆΔⲆᐃⵠ = function (p1768) {
        v2816.ΔⲆᐃᐃⲆ = p1768;
        v2816.ⲆᐃⵠΔⵠᐃᐃ(v2816.ⵠᐃⲆᐃⵠ[v2816.ΔⲆᐃᐃⲆ]);
        v2816.ⲆᐃⵠΔⵠᐃᐃ(v2816.ⵠᐃⲆᐃⵠ[v2816.ΔⲆᐃᐃⲆ]);
        document.getElementById("servselect").selectedIndex = v2816.ΔⲆᐃᐃⲆ;
      };
    };
    this.ⵠᐃΔΔΔᐃⵠ = 0;
    this.ⲆⵠⵠⵠᐃⲆᐃ = 0;
    this.ΔΔⲆⵠΔ = null;
    this.timeout = function () {
      vThis5.ⲆⵠⵠⵠᐃⲆᐃ++;
      vThis5.ⵠⲆᐃΔ.close();
      if (vThis5.ⲆⵠⵠⵠᐃⲆᐃ > 3) {
        v3052 = 1;
        v2812.ᐃⲆⵠᐃⵠᐃΔⵠⵠ = v2196.ⵠⲆΔΔᐃΔⲆⲆᐃ;
        vThis5.ΔΔᐃΔⲆ(v702[300]);
        v2812.waiting = false;
        if (v2814.reconnect.enabled) {
          v2993.ΔⵠⵠΔΔ(v2812.ΔⲆⲆΔⵠ);
        }
      } else if (v2814.ⲆᐃΔΔⵠᐃᐃ === undefined || v2814.ⵠΔΔⲆⵠᐃᐃ === undefined || v2814.ⵠᐃΔᐃᐃⲆⵠ === undefined || vUndefined === v2814.ⲆΔⵠⵠᐃⲆᐃ) {
        v2812.ΔΔᐃⲆⲆⵠΔ(function () {
          vThis5.ⵠⲆΔⲆᐃΔⵠ();
        }, 1);
      } else {
        vThis5.ⵠⲆΔⲆᐃΔⵠ();
      }
    };
    this.ⲆⲆΔᐃᐃᐃⵠ = function (p1769) {
      if (this.ⵠⲆᐃΔ.ⵠⲆᐃⲆᐃ == this.ⵠⲆᐃⲆᐃ) {
        this.ⵠⲆᐃⲆᐃ++;
        this.ΔΔᐃΔⲆ(v702[301] + p1769);
        v2993.ΔⵠⵠΔΔ(v2812.ΔⲆⲆΔⵠ);
      }
    };
    this.ΔᐃᐃⵠΔⵠᐃᐃⲆ = function () {
      this.ΔΔᐃΔⲆ("You speak too much");
    };
    this.ΔΔΔⲆΔⲆⲆᐃⵠ = function () {
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ(v702[302]);
      v2812.waiting = vV213;
    };
    this.ᐃΔⲆⲆᐃⵠⵠⲆᐃ = function () {
      v2814.ⲆⵠⵠΔΔ.open = vVVV2122;
    };
    this.ⲆⲆΔΔΔⲆᐃᐃⵠ = function () {
      v2993.ⲆΔⵠⵠⲆΔΔ = 0;
    };
    this.ΔⵠⲆⲆᐃⵠᐃⵠΔ = function () {
      v2993.ⵠⲆᐃᐃⲆⲆΔ = 0;
    };
    this.ⲆⵠᐃⲆᐃᐃᐃᐃⵠ = function (p1770) {
      v2814.ΔᐃⵠᐃΔ.ᐃⲆᐃⵠⲆ = p1770;
      if (v2813.ΔᐃⵠΔᐃ > -300) {
        if (p1770 === 0) {
          this.ΔΔᐃΔⲆ(v702[340]);
        } else {
          this.ΔΔᐃΔⲆ(v702[341]);
        }
      }
    };
    this.ⵠᐃⲆⵠΔ = function (p1771) {
      v2814.ⵠᐃⲆⵠΔ = p1771;
    };
    this.ⵠⵠⵠΔᐃⲆⲆᐃⵠ = function (p1772) {
      v2814.ⵠΔΔⲆⵠΔⵠ = p1772;
    };
    this.ⵠΔΔⲆⵠΔⵠ = function (p1773) {
      v2814.ⵠⲆⲆⲆⵠ.ᐃⲆᐃⵠⲆ = p1773;
      if (v2813.ᐃⲆΔⵠⵠ > -300) {
        if (p1773 === 0) {
          this.ΔΔᐃΔⲆ(v702[342]);
        } else {
          this.ΔΔᐃΔⲆ(v702[343]);
        }
      }
    };
    this.ᐃⲆⲆᐃΔΔᐃⲆⵠ = function (p1774) {
      if (p1774 === 0) {
        document.getElementById("exploreForest").src = "img/forest-leaf-ok.png";
      } else if (p1774 === 1) {
        document.getElementById("exploreWinter").src = "img/winter-flake-ok.png";
      } else if (p1774 === 2) {
        document.getElementById("exploreLava").src = "img/lava-volcano-ok.png";
      } else if (p1774 === 3) {
        document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png";
      }
    };
    this.ᐃⲆⵠⵠⵠΔΔᐃΔ = function () {
      v2993.ⲆᐃⵠⲆᐃⵠΔ = 0;
    };
    this.ⲆΔΔᐃᐃⵠⵠⵠΔ = function () {
      v2993.ᐃⲆⵠⵠᐃⵠⲆ = 0;
    };
    this.ΔᐃΔΔⵠΔᐃⲆⵠ = function () {
      v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ = [];
      v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ = [];
      v2814.ⲆⲆᐃΔ.id = -1;
      v2814.ⲆⲆᐃΔ.ⵠᐃΔᐃΔΔⵠ.stop();
      v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ = [];
      v2814.ⲆΔⵠΔ.ᐃⲆⲆΔᐃ = false;
      v2814.ⲆΔⵠΔ.ⵠΔᐃΔΔⵠΔᐃⵠ = vVVV212;
      v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
      v2814.ⲆΔⵠΔ.id = -1;
      v2814.ⲆΔⵠΔ.ⵠⲆᐃΔⵠ = vV212;
      v2814.ⲆΔⵠΔ.ⵠⵠᐃᐃⵠ = false;
      v2814.ⲆΔⵠΔ.ΔⲆᐃⵠⲆ = false;
      v2814.ⲆΔⵠΔ.ΔΔⲆᐃⵠⲆⲆ = vVVVV21222;
      v2814.ⲆΔⵠΔ.timeout = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 1, 0, 1, 1);
    };
    this.ᐃᐃⵠᐃⵠᐃⵠⲆⵠ = function () {
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ();
      v2812.waiting = v21;
    };
    this.ᐃΔᐃⵠⵠⲆⵠ = function (p1775) {
      for (var v2855 = 0; p1775.length > v2855; v2855++) {
        if (typeof p1775[v2855] === "string") {
          p1775[v2855] = ⲆΔΔ.ΔⲆⵠⲆΔᐃⲆ(p1775[v2855]);
        }
      }
      v2814.ⵠⵠⵠᐃᐃ.ᐃΔΔⲆⲆ(p1775[1], p1775[2], p1775[3], p1775[4]);
    };
    this.message = function (p1776) {
      this.ΔΔᐃΔⲆ(p1776);
    };
    this.ᐃᐃΔⵠⲆⲆΔΔΔ = function () {
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ(v702[339]);
      v2812.waiting = false;
    };
    this.ΔⵠΔᐃⵠⵠᐃⲆᐃ = function () {
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ(v702[338]);
      v2812.waiting = vVVVV21;
    };
    this.ΔⲆⲆΔᐃⲆⲆΔⵠ = function () {
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ(v702[304]);
      v2812.waiting = false;
    };
    this.ΔⲆⵠΔᐃⲆΔᐃⲆ = function () {
      v2814.ⲆⲆᐃΔ.ΔⲆⵠⵠᐃᐃᐃ(1, 0);
      v2993.ⲆⲆΔⲆⵠⲆΔ();
    };
    this.ⵠΔᐃΔⲆⵠⵠᐃⵠ = function (p1777) {
      var v2856 = p1777[1];
      var v2857 = v2813.ᐃΔΔᐃ[v2856];
      v2857.ⲆΔᐃⲆ = p1777[2];
      v2857.ⵠΔⲆΔΔ = p1777[3];
      v2857.ⵠΔⲆⵠⲆᐃΔ = p1777[4];
      v2857.ⵠⵠΔΔⲆ = p1777[5];
      v2857.ⵠᐃⲆᐃᐃ = p1777[6];
      v2857.ΔΔᐃᐃⲆ = p1777[7];
      v2857.level = p1777[8];
      var v2858 = v2813.ᐃᐃⲆⵠ[v2856 * v2813.ⵠⵠⲆⵠⵠᐃᐃ];
      if (v2858) {
        v2858.ⲆΔᐃⲆ = p1777[2];
        v2858.ⵠΔⲆΔΔ = p1777[3];
        v2858.ⵠΔⲆⵠⲆᐃΔ = p1777[4];
        v2858.ⵠⵠΔΔⲆ = p1777[5];
      }
    };
    this.ΔⵠⲆΔᐃᐃⵠⵠΔ = function (p1778) {
      if (p1778 === 29) {
        v2814.ⲆⲆᐃΔ.ΔⲆⵠⵠᐃᐃᐃ(1, 0);
        v2993.ⲆⲆΔⲆⵠⲆΔ();
      } else {
        this.ᐃⲆΔⵠΔΔΔ([0, p1778, 1]);
      }
      v2814.ⲆΔⵠΔ.ΔⲆᐃᐃΔΔᐃ();
    };
    this.ᐃⵠⲆⲆⵠᐃΔᐃⲆ = function (p1779) {
      v2814.ⲆⲆᐃⵠᐃ.ⲆΔᐃⲆⵠ = 0;
      v2814.ⲆΔⵠΔ.ΔΔᐃⵠⲆᐃᐃΔΔ(p1779);
    };
    this.ᐃⲆΔⵠⲆΔΔᐃⵠ = function (p1780) {
      for (var v2859 = v669[p1780].r, v2860 = 0; v2859.length > v2860; v2860++) {
        if (v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length < v2814.ⲆⲆᐃΔ.max || v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[v2859[v2860][0]] > 0) {
          var v2861 = Math.floor(v2859[v2860][1] * 0.8);
          if (!v2861) {
            continue;
          }
          this.ᐃⲆΔⵠΔΔΔ([0, v2859[v2860][0], v2861]);
        }
      }
      v2814.ⲆΔⵠΔ.ΔⲆᐃᐃΔΔᐃ();
    };
    this.ⲆⲆⵠΔⲆΔⲆΔΔ = function (p1781) {
      v2814.ⲆⲆᐃⵠᐃ.ⲆΔᐃⲆⵠ = 0;
      v2814.ⲆΔⵠΔ.ΔᐃΔⵠΔᐃⲆⲆΔ(p1781);
    };
    this.ΔΔᐃΔⲆ = function (p1782) {
      if (v2814.alert.text) {
        if (v2814.alert.text !== p1782 && v2814.alert.list[v2814.alert.list.length - 1] !== p1782) {
          v2814.alert.list.push(p1782);
        }
      } else {
        v2814.alert.text = p1782;
      }
    };
    this.ᐃⵠΔΔⲆΔⲆᐃⲆ = function () {
      this.ΔΔᐃΔⲆ(v702[305]);
    };
    this.ΔⵠΔΔΔⵠⵠⵠⲆ = function () {
      var v2862;
      v2862 = v2814.ᐃᐃᐃ == 0 ? v702[306] : v702[307] + (v2814.ᐃᐃᐃ + 1) + v702[308];
      this.ΔΔᐃΔⲆ(v2862);
      v2814.ᐃᐃᐃ++;
    };
    this.ΔΔⵠΔᐃᐃΔⵠⵠ = function () {
      clearTimeout(vThis5.ΔΔⲆⵠΔ);
      v2814.reconnect.enabled = false;
      v2814.ᐃⲆᐃⲆⵠ = vVVV2133;
      this.ΔΔᐃΔⲆ(v702[309]);
      v2993.ΔⵠⵠΔΔ(v2812.ΔⲆⲆΔⵠ);
      this.ⵠⲆᐃΔ.close();
    };
    this.ΔⲆᐃⲆⵠᐃⵠᐃⵠ = function () {
      v3052 = 1;
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ(v702[310]);
      v2812.waiting = vVVVV21;
    };
    this.ⵠⲆᐃⵠᐃⵠΔΔΔ = function () {
      v3052 = 1;
      clearTimeout(this.ΔΔⲆⵠΔ);
      this.ΔΔᐃΔⲆ(v702[311]);
      v2812.waiting = vV212;
    };
    this.ΔΔᐃΔⵠⵠΔΔⵠ = function (p1783) {
      var v2863 = p1783[1];
      var v2864 = v2813.ᐃΔΔᐃ;
      v2864[v2863].ᐃΔᐃⲆⵠ = p1783[2];
      v2864[v2863].ⲆΔᐃⲆ = p1783[3];
      v2864[v2863].ⵠΔⲆΔΔ = p1783[4];
      v2864[v2863].ⵠΔⲆⵠⲆᐃΔ = p1783[5];
      v2864[v2863].ⵠⵠΔΔⲆ = p1783[6];
      v2864[v2863].ⵠᐃⲆᐃᐃ = p1783[7];
      v2864[v2863].ΔΔᐃᐃⲆ = p1783[8];
      v2864[v2863].level = p1783[9];
      v2864[v2863].ⵠⵠᐃΔᐃ = 0;
      v2864[v2863].ⲆⵠΔⲆΔΔΔ = null;
      v2864[v2863].label = null;
      v2864[v2863].ⵠΔⵠⲆⲆΔᐃ = null;
      v2864[v2863].ᐃⲆᐃⲆⵠ = true;
      if (v2185 === 1) {
        v2864[v2863].ᐃΔᐃⲆⵠ += "|" + v2863;
      }
    };
    this.ΔΔⵠⵠΔᐃᐃΔᐃ = function () {
      this.ⵠⲆᐃΔ[v2184](vVWindow[v408].stringify([9]));
    };
    this.ⵠᐃⵠΔΔⵠⲆᐃⲆ = function () {
      this.ΔΔᐃΔⲆ(v702[312]);
    };
    this.ⲆᐃᐃⵠᐃⲆᐃ = function () {
      this.ΔΔᐃΔⲆ(v702[313]);
    };
    this.ᐃⲆᐃⲆⲆⵠⲆᐃⵠ = function (p1784) {
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v432].stringify([38, p1784]));
      v2814.ⲆⵠⵠΔΔ.open = vV213;
    };
    this.ΔᐃᐃⵠⲆⲆⵠΔⲆ = function (p1785) {
      for (var v2865 = v2193[p1785 - 1].items, v2866 = 0; v2866 < v2865.length && v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length < v2814.ⲆⲆᐃΔ.max; v2866++) {
        var v2867 = v2865[v2866][1];
        var v2868 = v2865[v2866][0];
        if (v2865[v2866][1] === 29) {
          v2814.ⲆⲆᐃΔ.ΔⲆⵠⵠᐃᐃᐃ(1, 0);
        } else {
          this.ᐃⲆΔⵠΔΔΔ([0, v2867, v2868]);
        }
      }
    };
    this.ᐃⲆΔⵠΔΔΔ = function (p1786) {
      for (var v2869 = p1786.length, v2870 = v2814.ⲆⲆᐃΔ, v2871 = 1; v2869 > v2871; v2871 += 2) {
        var v2872 = p1786[v2871];
        var v2873 = p1786[v2871 + 1];
        for (var v2874 = 0; v2874 < v2870.ⵠΔⵠⵠⵠ.length; v2874++) {
          if (v2870.ⵠΔⵠⵠⵠ[v2874].id == v2872) {
            v2870.ᐃᐃᐃΔ[v2872] += v2873;
            break;
          }
        }
        if (v2874 == v2870.ⵠΔⵠⵠⵠ.length) {
          v2870.ᐃᐃᐃΔ[v2872] = v2873;
          v2870.ⵠΔⵠⵠⵠ.push(v2993.ΔⵠⲆ[v2872]);
          v2993.ⲆⲆΔⲆⵠⲆΔ();
        }
      }
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ⲆⵠⵠΔ = function (p1787, p1788, p1789, p1790, p1791, p1792, p1793) {
      v2814.ⲆⵠⵠΔ.ⲆⵠΔΔ = p1787 / 100;
      v2814.ⲆⵠⵠΔ.ⵠⵠⲆ = p1788 / 100;
      v2814.ⲆⵠⵠΔ.c = p1789 / 100;
      v2814.ⲆⵠⵠΔ.Ⲇⵠⵠ = p1790 / 100;
      v2814.ⲆⵠⵠΔ.ΔⲆⲆ = p1791 / 100;
      v2814.ⲆⵠⵠΔ.Δⵠⵠᐃⵠᐃⵠ = p1792 / 100;
      v2814.ⵠᐃⲆⵠΔ = p1793;
    };
    this.ⵠΔΔⲆΔᐃⵠᐃᐃ = function (p1794) {
      v2993.ΔᐃⲆⵠ.modify(p1794, 2);
    };
    this.ᐃⵠⵠⵠᐃⲆⲆⲆΔ = function (p1795) {
      v2993.ΔᐃⲆⵠ.modify(p1795, 0);
    };
    this.ⵠΔⲆᐃᐃⲆⵠⲆⲆ = function (p1796) {
      v2993.ΔᐃⲆⵠ.modify(p1796, 3);
    };
    this.ⵠⵠⲆⵠⲆⵠⵠⵠⲆ = function (p1797, p1798) {
      v2814.ⲆⵠⵠΔ.ⲆⵠΔΔ = p1797 / 100;
      v2814.ⵠᐃⲆⵠΔ = p1798;
    };
    this.ⵠⲆᐃⲆⵠⲆᐃⵠΔ = function (p1799) {
      v2814.ⲆⵠⵠΔ.Ⲇⵠⵠ = p1799 / 100;
    };
    this.ᐃⲆᐃⵠΔΔⵠⲆⵠ = function (p1800) {
      v2814.ⲆⵠⵠΔ.ⵠⵠⲆ = p1800 / 100;
    };
    this.ⲆΔⵠⵠⵠᐃΔΔΔ = function (p1801) {
      v2814.ⲆⵠⵠΔ.Δⵠⵠᐃⵠᐃⵠ = p1801 / 100;
    };
    this.ΔⵠᐃⵠⵠⲆⲆᐃⵠ = function (p1802) {
      v2814.ⲆⵠⵠΔ.c = p1802 / 100;
    };
    this.ᐃᐃᐃΔⲆΔⲆⲆΔ = function (p1803) {
      v2813.time = p1803;
      v2813.transition = true;
      v2994.transition = 1;
    };
    this.ΔⲆⲆⵠⵠΔΔΔᐃ = function () {
      document.getElementById("game_body").style.backgroundColor = v554.ΔΔⵠΔⲆ[v2813.time];
    };
    this.ⲆΔΔΔⵠᐃⲆⵠⲆ = function (p1804) {
      if (v2813.mode == 1 && v2813.ᐃΔΔᐃ[p1804].ᐃΔᐃⲆⵠ !== "spectator") {
        this.ΔΔᐃΔⲆ(v2813.ᐃΔΔᐃ[p1804].ᐃΔᐃⲆⵠ + v702[314]);
      }
      v2813.ᐃΔΔᐃ[p1804].ᐃⲆᐃⲆⵠ = vVV2122;
    };
    this.ᐃΔⲆⵠᐃⵠΔΔⵠ = function (p1805) {
      var v2875 = new Uint16Array(p1805);
      ᐃᐃⵠⵠ.ᐃⲆⲆ.ᐃⲆⲆᐃⲆ(v2875[1], v2875[2]);
    };
    this.ⲆⵠⲆⵠΔᐃⵠⲆΔ = function (p1806) {
      var v2876 = new Uint16Array(p1806);
      v2814.ᐃⲆⲆ.ᐃⲆⲆᐃⲆ(v2876[1], v2876[2]);
    };
    this.ΔⲆᐃΔᐃⵠΔᐃΔ = function (p1807, p1808) {
      var v2877 = new Uint16Array(p1808);
      for (var v2878 = (p1807.length - 2) / 4, v2879 = 0; v2878 > v2879; v2879++) {
        var v2880 = v2877[1 + v2879 * 2];
        var v2881 = p1807[4 + v2879 * 4];
        var v2882 = Math.PI * ((p1807[5 + v2879 * 4] >> 1) / 127) * 2;
        var v2883 = v2813.ᐃᐃⲆⵠ[v2881 * v2813.ⵠⵠⲆⵠⵠᐃᐃ + v2880];
        if (v2883 && v2883.ᐃⲆᐃ) {
          if (v2994.loaded && v2994.ΔⲆⲆΔⵠ) {
            v2994.ᐃⲆᐃ(p1807[5 + v2879 * 4] & 1, ΔⵠᐃΔᐃ[v2883.type], v2883.x, v2883.y);
          }
          v2883.ᐃⲆᐃ.angle = v2882;
          v2883.ᐃⲆᐃ.ᐃΔⵠ = v2882;
        }
      }
    };
    this.ⵠⵠⲆΔΔᐃᐃⲆⵠ = function (p1809) {
      var v2884 = new Uint16Array(p1809);
      for (var v2885 = (v2884.length - 1) / 4, v2886 = 0; v2885 > v2886; v2886++) {
        var v2887;
        var v2888 = v2886 * 4;
        var v2889 = v2884[1 + v2888];
        var v2890 = v2884[2 + v2888];
        var v2891 = Math.PI * ((v2884[3 + v2888] >> 1) / 127) * 2;
        var v2892 = v2884[4 + v2888];
        var v2893 = v2810.ⲆⲆᐃⲆ[v2890][v2889];
        switch (v2892) {
          case 0:
            (v2887 = v2893.p[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV244;
            break;
          case 1:
            (v2887 = v2893.s[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV24;
            break;
          case 2:
            (v2887 = v2893.s[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 3:
            (v2887 = v2893.s[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 4:
            (v2887 = v2893.t[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 5:
            (v2887 = v2893.t[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVVVV2432;
            break;
          case 6:
            (v2887 = v2893.t[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 7:
            (v2887 = v2893.t[3][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV243;
            break;
          case 8:
            (v2887 = v2893.t[4][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVVV243;
            break;
          case 9:
            (v2887 = v2893.t[5][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 10:
            (v2887 = v2893.g[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV24;
            break;
          case 11:
            (v2887 = v2893.g[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 12:
            (v2887 = v2893.g[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = v24;
            break;
          case 13:
            (v2887 = v2893.d[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 14:
            (v2887 = v2893.d[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 15:
            (v2887 = v2893.d[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 16:
            (v2887 = v2893.b[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 17:
            (v2887 = v2893.b[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 18:
            (v2887 = v2893.b[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV246;
            break;
          case 19:
            (v2887 = v2893.b[3][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV244;
            break;
          case 20:
            (v2887 = v2893.f[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV24;
            break;
          case 21:
            (v2887 = v2893.f[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 22:
            (v2887 = v2893.f[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV242;
            break;
          case 23:
            (v2887 = v2893.sw[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 24:
            (v2887 = v2893.sw[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 25:
            (v2887 = v2893.sw[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV24;
            break;
          case 26:
            (v2887 = v2893.gw[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVVV2432;
            break;
          case 27:
            (v2887 = v2893.gw[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV24;
            break;
          case 28:
            (v2887 = v2893.gw[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 29:
            (v2887 = v2893.dw[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 30:
            (v2887 = v2893.dw[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV243;
            break;
          case 31:
            (v2887 = v2893.dw[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV24;
            break;
          case 32:
            (v2887 = v2893.a[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV244;
            break;
          case 33:
            (v2887 = v2893.a[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 34:
            (v2887 = v2893.a[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 35:
            (v2887 = v2893.cs[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 36:
            (v2887 = v2893.cs[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = vV246;
            break;
          case 37:
            (v2887 = v2893.cs[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV2422;
            break;
          case 38:
            (v2887 = v2893.cs[3][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 40:
            (v2887 = v2893.plm[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 41:
            (v2887 = v2893.plm[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 42:
            (v2887 = v2893.plm[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 50:
            (v2887 = v2893.re[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 51:
            (v2887 = v2893.re[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVV243;
            break;
          case 52:
            (v2887 = v2893.re[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 55:
            (v2887 = v2893.c[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = true;
            break;
          case 56:
            (v2887 = v2893.m[0][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVVV242;
            break;
          case 57:
            (v2887 = v2893.m[1][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVVV243;
            break;
          case 58:
            (v2887 = v2893.m[2][0]).angle = v2891;
            v2887.ᐃΔⵠ = vVVVV242;
        }
        if (v2994.loaded && v2994.ΔⲆⲆΔⵠ && v2887) {
          v2994.ᐃⲆᐃ(v2884[3 + v2888] & 1, ᐃᐃⲆΔ[v2892], v2887.x, v2887.y);
        }
      }
    };
    this.ⲆⵠΔᐃΔ = function () {
      this.ⵠⲆᐃΔ[v2184](vVVWindow[v402].stringify([35, v2814.ⲆⵠΔᐃΔ.ΔᐃᐃⲆ, v2814.ⲆⵠΔᐃΔ.ᐃΔⵠᐃⲆ]));
    };
    this.ᐃΔΔⲆⵠⵠⵠΔⲆ = function (p1810, p1811) {
      this.ⵠⲆᐃΔ[v2184](vVVWindow[v419].stringify([30, p1811, p1810.ΔᐃᐃⲆ, p1810.ᐃΔⵠᐃⲆ]));
    };
    this.ⲆⲆΔΔⲆⵠᐃ = function (p1812, p1813, p1814) {
      if (p1813) {
        this.ⵠⲆᐃΔ[v2184](vVVWindow[v419].stringify([14, p1813, p1812.ΔᐃᐃⲆ, p1812.ᐃΔⵠᐃⲆ]));
      } else {
        this.ⵠⲆᐃΔ[v2184](vVVWindow[v411].stringify([25, p1814, p1812.ΔᐃᐃⲆ, p1812.ᐃΔⵠᐃⲆ]));
      }
    };
    this.ⲆΔⵠΔΔⵠⵠⵠΔ = function (p1815) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([13, p1815.ΔᐃᐃⲆ, p1815.ᐃΔⵠᐃⲆ]));
    };
    this.ΔΔⵠⲆᐃⲆᐃΔⲆ = function (p1816) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v435].stringify([32, p1816]));
    };
    this.ⲆⲆⲆΔⵠΔⲆΔᐃ = function (p1817) {
      this.ⵠⲆᐃΔ[v2184](vVVVVWindow[v402].stringify([29, p1817.ΔᐃᐃⲆ, p1817.ᐃΔⵠᐃⲆ]));
    };
    this.ᐃⵠⲆⵠᐃⲆⵠΔΔ = function (p1818, p1819) {
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v425].stringify([27, p1819, p1818.ΔᐃᐃⲆ, p1818.ᐃΔⵠᐃⲆ, p1818.type]));
    };
    this.ⲆⲆΔⵠᐃⵠΔΔᐃ = function (p1820, p1821) {
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v425].stringify([7, p1821, p1820.ΔᐃᐃⲆ, p1820.ᐃΔⵠᐃⲆ]));
    };
    this.ΔⵠᐃⲆΔⵠᐃⲆᐃ = function (p1822, p1823, p1824) {
      this.ⵠⲆᐃΔ[v2184](vVVVVWindow[v419].stringify([1, p1823, p1824, p1822.ΔᐃᐃⲆ, p1822.ᐃΔⵠᐃⲆ]));
    };
    this.ⵠΔΔᐃΔᐃᐃ = function (p1825) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([37, p1825.ΔᐃᐃⲆ, p1825.ᐃΔⵠᐃⲆ, p1825.type]));
    };
    this.ᐃΔⵠⲆΔⲆᐃⲆⲆ = function (p1826) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([4, p1826.ΔᐃᐃⲆ, p1826.ᐃΔⵠᐃⲆ]));
    };
    this.ΔΔᐃⲆⲆⲆΔᐃⲆ = function (p1827) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([8, p1827.ΔᐃᐃⲆ, p1827.ᐃΔⵠᐃⲆ]));
    };
    this.ᐃᐃΔⵠⵠⲆΔᐃᐃ = function (p1828) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVVWindow[v428].stringify([20, p1828.ΔᐃᐃⲆ, p1828.ᐃΔⵠᐃⲆ]));
    };
    this.ᐃⵠⲆΔᐃⲆΔⵠⵠ = function (p1829) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVVVWindow[v432].stringify([3, p1829.ᐃΔⵠᐃⲆ]));
    };
    this.ᐃⲆⵠⲆⵠΔⵠ = function (p1830) {
      vThis5.ⵠⲆᐃΔ[v2184](vVVVVVVVVWindow[v435].stringify([23, v2814.ⲆΔⵠᐃⵠ.id, v2814.ⲆᐃᐃΔⲆ[p1830]]));
    };
    this.ⲆⲆⲆⵠΔΔΔᐃⲆ = function () {
      vThis5.ⵠⲆᐃΔ[v2184](v441[v440].stringify([17, v2814.ⲆΔⵠᐃⵠ.ΔᐃᐃⲆ, v2814.ⲆΔⵠᐃⵠ.id]));
    };
    this.ᐃⲆΔⲆⵠⵠΔ = function () {
      vThis5.ⵠⲆᐃΔ[v2184](vV441[v443].stringify([12]));
    };
    this.ⵠΔⲆΔᐃⵠᐃⵠᐃ = function () {
      vThis5.ⵠⲆᐃΔ[v2184](vV441[v435].stringify([19, v2814.ⲆΔⵠᐃⵠ.id]));
      if (document.getElementById("lock_team").innerHTML == "LOCK") {
        v2814.ⲆΔⵠᐃⵠ.lock = 1;
        document.getElementById("lock_team").innerHTML = "UNLOCK";
      } else {
        v2814.ⲆΔⵠᐃⵠ.lock = 0;
        document.getElementById("lock_team").innerHTML = "LOCK";
      }
    };
    this.ⲆΔᐃ = function (p1831, p1832, p1833) {
      var v2894 = new Uint16Array(p1831);
      if (p1833) {
        v2813.ΔΔᐃΔⲆᐃᐃⵠΔ();
      }
      for (var v2895 = (p1832.length - 2) / 18, v2896 = 0; v2895 > v2896; v2896++) {
        var v2897 = 2 + v2896 * 18;
        var v2898 = 1 + v2896 * 9;
        var v2899 = p1832[v2897];
        var v2900 = v2894[v2898 + 1];
        var v2901 = v2894[v2898 + 5];
        var v2902 = v2899 * v2813.ⵠⵠⲆⵠⵠᐃᐃ + v2901;
        if (v2900 & 1) {
          v2813.ⲆΔΔΔᐃⵠⲆΔⲆ(v2902);
        } else {
          var v2903 = v2894[v2898 + 2];
          var v2904 = v2894[v2898 + 3];
          var v2905 = v2894[v2898 + 4];
          var v2906 = v2894[v2898 + 6];
          var v2907 = v2894[v2898 + 7];
          var v2908 = v2894[v2898 + 8];
          var v2909 = p1832[v2897 + 1] / 255 * Math.PI * 2;
          if (v2813.ᐃᐃⲆⵠ[v2902]) {
            var v2910 = v2813.ᐃᐃⲆⵠ[v2902];
            v2910.r.x = v2904;
            v2910.r.y = v2905;
            if (v2899 != 0 && ⲆΔΔ.ΔΔᐃΔ(v2910, v2910.r) > 200) {
              v2910.x = v2904;
              v2910.y = v2905;
            }
            if (v2910.id !== v2814.id || v2899 === 0) {
              v2910.ⵠⲆΔⲆΔⵠⵠ = v2909;
            }
            v2910.action |= v2900;
            v2910.info = v2906;
            v2910.ⲆΔᐃⲆⲆ = v2907;
            v2910.ⵠᐃᐃⵠᐃ = v2908;
            if (v2910.ᐃΔⵠ) {
              v2910.ᐃΔⵠ(v2900);
            }
          } else {
            var v2911 = new f444(v2903, v2899, v2901, v2904, v2905, v2909, v2900, v2906, v2907, v2908);
            v2813.ᐃᐃⲆⵠ[v2902] = v2911;
            v2813.ⲆΔᐃ[v2903].push(v2911);
          }
        }
      }
    };
    this.ⵠⲆᐃᐃ = function (p1834) {
      this.ⵠᐃΔΔΔᐃⵠ = v3028;
      var v2912 = new Uint16Array(p1834);
      v2814.ⵠΔⲆΔⲆ.ⵠΔⵠⲆⲆ(v2912);
    };
    this.ᐃΔⲆⵠᐃⵠⲆᐃΔ = function (p1835) {
      if (vUndefined2 !== vVVVUndefined272) {
        v669 = vUndefined2;
      }
      if (p1835.length > 0) {
        vUndefined2 = JSON.parse(JSON.stringify(v669));
        for (var v2913 = 0; v2913 < p1835.length; v2913++) {
          var v2914 = p1835[v2913];
          var v2915 = v669[v2914.item];
          if (v2915 !== vVVVVUndefined1972) {
            v2915.r = v2914.recipe;
            v2915.w = v2914.workbench;
            v2915.f = v2914.fire;
            v2915.ΔⲆⲆ = v2914.water;
            v2915.e = v2914.well;
            v2915.time = 1 / v2914.time;
          }
        }
      }
    };
    this.ᐃΔᐃΔⵠᐃᐃ = function (p1836) {
      if (p1836 && p1836.length !== 0) {
        v2814.ᐃΔᐃΔⵠᐃᐃ.message = function (p1837) {
          var v2916 = document.createElement("canvas");
          var v2917 = v2916.getContext("2d");
          for (v2917.lineJoin = "round"; p1837.indexOf("\\n") !== -1;) {
            p1837 = p1837.replace("\\n", "\n");
          }
          p1837 = p1837.split("\n");
          ⵠᐃ = [];
          var v2918 = p1837.length * 18 + 10;
          var v2919 = 0;
          v2917.font = "14px Baloo Paaji";
          for (var v2920 = 0; p1837.length > v2920; v2920++) {
            if (p1837[v2920].charAt(0) === "#") {
              ⵠᐃ[v2920] = p1837[v2920].substring(0, 7);
              p1837[v2920] = p1837[v2920].substring(8);
            } else {
              ⵠᐃ[v2920] = "#FFFFFF";
            }
            v2919 = Math.max(v2917.measureText(p1837[v2920]).width + 16, v2919);
          }
          v2916.height = v2918;
          v2916.width = v2919;
          v2920 = 0;
          for (; p1837.length > v2920; v2920++) {
            var vF1533 = f153(1, p1837[v2920], 14, ⵠᐃ[v2920], null, null, null, null, null, "#000", 6);
            v2917.drawImage(vF1533, 8, v2920 * 18 + 5);
          }
          return v2916;
        }(p1836);
      } else {
        v2814.ᐃΔᐃΔⵠᐃᐃ.message = vVVVVUndefined197;
      }
    };
    this.ⲆⵠᐃᐃΔ = function (p1838) {
      var v2921 = v2813.ᐃᐃⲆⵠ[p1838[1] * v2813.ⵠⵠⲆⵠⵠᐃᐃ];
      if (v2921) {
        if (v2813.mode === 2 && v2921.ⲆΔᐃⲆ === 0) {
          if (v2814.ᐃΔᐃΔᐃ) {
            if (Math.random() > 0.5) {
              v2921.text.push(p1838[2] + " ..." + ⲆⲆᐃⲆΔ);
            } else {
              v2921.text.push(ⲆⲆᐃⲆΔ + "... " + p1838[2]);
            }
          } else {
            v2921.text.push(ⵠᐃⵠⵠΔⲆⵠ[Math.floor(Math.random() * ⵠᐃⵠⵠΔⲆⵠ.length)]);
          }
        } else {
          v2921.text.push(p1838[2]);
        }
      }
    };
    this.ⲆⵠⲆᐃᐃΔⵠⲆⲆ = function (p1839) {
      if (v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ.length !== v2814.ⲆⲆᐃΔ.max || v669[p1839].ⵠᐃΔᐃ === 29 || v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(v669[p1839].ⵠᐃΔᐃ) != -1 || v2814.ⲆⲆᐃΔ.ΔⲆᐃⲆⵠᐃⲆᐃᐃ(v669[p1839].r)) {
        this.ⵠⲆᐃΔ[v2184](vVWindow[v408].stringify([26, p1839]));
        return 1;
      } else {
        this.ⲆᐃᐃⵠᐃⲆᐃ();
        return 0;
      }
    };
    this.ⵠⲆᐃΔⵠ = function (p1840) {
      v2814.ⲆΔⵠΔ.ΔΔⲆⵠⵠⵠᐃΔΔ(p1840);
    };
    this.ⵠⵠᐃᐃⵠ = function (p1841) {
      v2814.ⲆΔⵠΔ.ⵠⵠᐃᐃⵠ = p1841;
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ΔⲆᐃⵠⲆ = function (p1842) {
      v2814.ⲆΔⵠΔ.ΔⲆᐃⵠⲆ = p1842;
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ΔΔⲆᐃⵠⲆⲆ = function (p1843) {
      v2814.ⲆΔⵠΔ.ΔΔⲆᐃⵠⲆⲆ = p1843;
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ᐃⲆΔⵠⲆᐃⲆⵠⲆ = function (p1844) {
      this.ΔΔᐃΔⲆ(v702[315]);
    };
    this.ᐃΔᐃⵠΔΔⵠⵠᐃ = function () {
      v2814.ⲆΔⵠΔ.ΔⲆᐃᐃΔΔᐃ();
    };
    this.ΔⵠⲆᐃΔ = function (p1845) {
      v2993.ΔⵠⲆᐃΔ.ᐃΔΔᐃ = [];
      var v2922 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      var v2923 = 0;
      for (var v2924 = 1; p1845.length > v2924; v2924 += 2) {
        var v2925 = {
          x: Math.floor(p1845[v2924] * v2813.w / 250),
          y: Math.floor(p1845[v2924 + 1] * v2813.ⵠⵠⲆ / 250)
        };
        if (v2922 && !v2923 && !v2814.ⵠⵠⵠⲆᐃᐃΔ && ⲆΔΔ.ΔΔᐃΔ(v2925, v2922) < 250) {
          v2923 += 1;
        } else {
          v2993.ΔⵠⲆᐃΔ.ᐃΔΔᐃ.push(v2925);
        }
      }
    };
    this.ΔᐃⲆΔΔΔᐃΔⵠ = function () {
      v2814.ⲆⵠΔᐃΔ.open = vVVV21;
      v2814.ⵠⲆⵠᐃΔ.enabled = vVVV21;
      v2814.ⵠⲆⵠᐃΔ.ⲆΔᐃⲆⵠ = -1;
      v2814.ⵠⲆⵠᐃΔ.label = null;
      v2814.ⵠⲆⵠᐃΔ.ⲆⵠⵠⲆΔΔⵠ = null;
      v2814.ⵠⲆⵠᐃΔ.now = -1;
    };
    this.ⵠⲆⵠᐃΔ = function (p1846) {
      v2205.ⵠⵠⵠᐃᐃⵠᐃ = p1846;
      v2814.ⵠⲆⵠᐃΔ.enabled = vVV2432;
      v2814.ⵠⲆⵠᐃΔ.ⲆΔᐃⲆⵠ = new Date().getTime();
      v2814.ⵠⲆⵠᐃΔ.label = null;
      v2814.ⵠⲆⵠᐃΔ.now = -1;
      for (var v2926 = [39, 45, 149, 57, 0, 5, 6, 30, 19, 62, 63, 9, 13, 12, 14, 15, 33, 34, 16, 17, 18, 94, 95, 96, 97, 98, 99, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 93, 8, 1, 3, 4, 31, 32, 55, 53, 54], v2927 = 0; v2926.length > v2927; v2927++) {
        var v2928 = v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(v2926[v2927]);
        if (v2928 != -1) {
          v2814.ⲆⲆᐃΔ.ᐃΔⵠΔᐃⲆΔ(v2926.length[v2927], v2928);
        }
      }
      v2814.ⲆΔⵠΔ.ΔⲆᐃᐃΔΔᐃ();
    };
    this.ΔⵠΔΔⲆⲆΔⵠᐃ = function (p1847, p1848, p1849) {
      this.ⲆⲆⲆⲆⵠᐃΔ(p1847, p1848 * 256 + p1849);
    };
    this.ⲆⲆⲆⲆⵠᐃΔ = function (p1850, p1851) {
      v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
      v2814.ⲆⲆᐃΔ.ⲆᐃᐃᐃⵠΔᐃ(p1850, p1851, v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(p1850));
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ⲆⵠⲆⲆΔⲆᐃⵠᐃ = function (p1852) {
      v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
      v2814.ΔⵠᐃΔⲆ.wait = vVV244;
      var v2929 = v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(p1852);
      v2814.ⲆⲆᐃΔ.ⲆᐃᐃᐃⵠΔᐃ(p1852, 1, v2929);
      if (v2929 >= 0 && !v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ[p1852]) {
        v2814.ⲆΔⵠΔ.ᐃΔⵠ();
      }
      if (p1852 == 159) {
        v2814.ⲆᐃᐃΔⲆ = [v2814.id];
      }
    };
    this.ⲆᐃⵠΔΔⲆΔᐃᐃ = function () {
      this.ⵠⲆᐃΔ[v2184](vVVWindow[v402].stringify([6]));
    };
    this.ΔⵠⲆΔⵠΔΔΔⵠ = function (p1853) {
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v411].stringify([2, p1853.ΔΔΔⲆⵠ, p1853.id]));
    };
    this.ᐃᐃⲆⲆᐃⵠⵠᐃⵠ = function (p1854, p1855) {
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v425].stringify([10, p1854, p1855]));
    };
    this.ΔⲆᐃⵠⲆⵠⲆᐃΔ = function () {
      var v2930 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      if (v2930) {
        var v2931 = Math.PI * 2;
        this.ⵠⲆᐃΔ[v2184](vVVVWindow[v411].stringify([22, v2814.ⲆΔⵠΔ.ⵠΔΔᐃ, Math.floor((v2930.angle + v2931) % v2931 * 255 / v2931), v2814.ⲆΔⵠΔ.mode]));
      }
    };
    this.ᐃᐃΔⵠⲆ = function (p1856, p1857) {
      switch (p1856) {
        case 195:
        case 110:
        case 116:
        case 117:
        case 145:
        case 127:
        case 133:
        case 136:
        case 142:
        case 143:
        case 189:
        case 207:
        case 233:
        case 205:
        case 209:
        case 211:
        case 192:
        case 137:
        case 138:
        case 196:
        case 197:
        case 200:
        case 199:
          v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
          this.ⵠⲆᐃΔ[v2184](vVVVVWindow[v419].stringify([34, p1856]));
          break;
        case 114:
        case 160:
        case 115:
        case 132:
        case 188:
        case 206:
        case 204:
        case 191:
        case 193:
        case 208:
        case 210:
        case 113:
        case 162:
        case 163:
        case 164:
        case 165:
        case 118:
        case 167:
        case 151:
        case 152:
        case 166:
        case 171:
        case 172:
        case 173:
        case 124:
        case 218:
        case 212:
        case 213:
        case 214:
        case 215:
        case 216:
        case 220:
        case 168:
        case 169:
        case 170:
        case 119:
        case 122:
        case 123:
        case 217:
        case 219:
        case 125:
        case 190:
        case 141:
        case 135:
        case 153:
        case 154:
        case 155:
        case 156:
        case 157:
        case 198:
        case 201:
        case 182:
        case 183:
        case 144:
        case 159:
        case 221:
          if (!v2814.ᐃΔᐃΔᐃ) {
            if (p1856 === v2814.ⲆΔⵠΔ.ⵠΔΔᐃ) {
              v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
            } else {
              v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = p1856;
            }
          }
          break;
        case 0:
        case 57:
        case 5:
        case 6:
        case 30:
        case 19:
        case 9:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 92:
        case 93:
        case 12:
        case 13:
        case 14:
        case 15:
        case 33:
        case v559.ⲆᐃᐃⵠᐃⲆⲆⵠⵠ:
        case 16:
        case 17:
        case 34:
        case 18:
        case 94:
        case 95:
        case 96:
        case 97:
        case 98:
        case 99:
          if (!v2814.ᐃΔᐃΔᐃ) {
            v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
            if ((v2932 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ]) && p1856 === v2932.right) {
              this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([34, 7]));
            } else {
              v2814.ᐃΔⵠⲆΔ.wait = vVVVV2432;
              this.ⵠⲆᐃΔ[v2184](vVVVVVVWindow[v428].stringify([34, p1856]));
            }
          }
          break;
        case 1:
        case 8:
        case 3:
        case 4:
        case 35:
        case 36:
        case 37:
        case 28:
        case 38:
        case 39:
        case 31:
        case 32:
        case 45:
        case 46:
        case 50:
        case 51:
        case 52:
        case 55:
        case 56:
        case 53:
        case 54:
        case 89:
        case 49:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
          if (!v2814.ᐃΔᐃΔᐃ) {
            v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
            if ((v2932 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ]) && v2932.right === p1856) {
              this.ⵠⲆᐃΔ[v2184](vVVVVVVVWindow[v432].stringify([34, 7]));
            } else {
              this.ⵠⲆᐃΔ[v2184](vVVVVVVVVWindow[v435].stringify([34, p1856]));
            }
          }
          break;
        case 223:
        case 224:
        case 225:
        case 239:
        case 226:
        case 227:
        case 228:
        case 229:
        case 230:
        case 91:
          if (!v2814.ᐃΔᐃΔᐃ) {
            v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
            var v2932 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
            this.ⵠⲆᐃΔ[v2184](vVVVVVVVVWindow[v435].stringify([34, p1856]));
          }
          break;
        case 77:
        case 78:
        case 79:
        case 58:
        case 25:
        case 26:
        case 27:
        case 43:
        case 44:
        case 20:
        case 21:
        case 22:
        case 59:
        case 60:
        case 90:
        case 61:
        case 47:
          if ((v2932 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ]) && p1856 !== v2932.ΔⲆⵠⲆⵠ) {
            v2814.ⵠⲆᐃⵠᐃ.wait = vVV245;
          }
          this.ⵠⲆᐃΔ[v2184](vVVVVWindow[v425].stringify([34, p1856]));
          break;
        case 10:
        case 83:
        case 84:
        case 86:
        case 11:
        case 40:
        case 88:
        case 82:
        case 80:
        case 81:
        case 41:
        case 42:
        case 85:
        case 23:
        case 24:
        case 48:
          this.ⵠⲆᐃΔ[v2184](v441[v440].stringify([34, p1856]));
      }
    };
    this.ⵠᐃⵠⵠⲆⵠᐃⵠⲆ = function (p1858) {
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v408].stringify([31, p1858]));
    };
    this.ⵠΔΔᐃΔⲆᐃᐃΔ = function (p1859) {
      v2814.ΔⵠᐃΔⲆ.wait = true;
      var v2933 = v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(p1859);
      v2814.ⲆⲆᐃΔ.ᐃΔⵠΔᐃⲆΔ(p1859, v2933);
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ᐃⵠⲆⵠⵠᐃΔΔⵠ = function (p1860, p1861) {
      this.ⵠⲆᐃΔ[v2184](vVWindow[v432].stringify([18, p1860]));
    };
    this.ⲆᐃΔⲆⵠᐃⵠᐃⲆ = function (p1862, p1863) {
      this.ⵠⲆᐃΔ[v2184](vVVWindow[v402].stringify([24, p1862]));
    };
    this.ΔΔⵠᐃⲆΔⵠᐃⲆ = function (p1864) {
      v2814.ΔⵠᐃΔⲆ.wait = vVV245;
      var v2934 = v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(p1864);
      v2814.ⲆⲆᐃΔ.ⲆᐃᐃᐃⵠΔᐃ(p1864, 1, v2934);
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ⵠⲆⲆⵠᐃⲆΔⲆⲆ = function (p1865) {
      var v2935 = p1865[1];
      var v2936 = p1865[2];
      v2814.ΔⵠᐃΔⲆ.wait = true;
      var v2937 = v2814.ⲆⲆᐃΔ.ⲆⵠⲆᐃⵠ(v2935);
      v2814.ⲆⲆᐃΔ.ⲆᐃᐃᐃⵠΔᐃ(v2935, v2936, v2937);
      v2814.ⲆΔⵠΔ.ᐃΔⵠ();
    };
    this.ⲆⲆᐃΔⲆᐃΔⲆⵠ = function () {
      this.ⵠⲆᐃΔ[v2184](vVVWindow[v402].stringify([16]));
    };
    this.ⲆⵠⵠᐃᐃΔⲆᐃΔ = function (p1866) {
      var v2938 = Math.PI * 2;
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v411].stringify([36, Math.floor((p1866 + v2938) % v2938 * 255 / v2938)]));
    };
    this.ⲆⲆᐃᐃᐃⵠΔⵠΔ = function (p1867) {
      var v2939 = Math.PI * 2;
      this.ⵠⲆᐃΔ[v2184](vVVVWindow[v411].stringify([0, Math.floor((p1867 + v2939) % v2939 * 255 / v2939)]));
    };
    this.ᐃⲆⵠᐃⲆΔΔⲆⲆ = function (p1868) {
      this.ⵠⲆᐃΔ[v2184](ⲆΔⵠⲆᐃⲆΔ[0].stringify([11, p1868]));
    };
    this.ᐃⵠⵠⲆΔⲆΔⵠΔ = function (p1869) {
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([33, p1869]));
    };
    this.ⵠΔⵠⲆΔΔⵠⵠΔ = function (p1870) {
      var v2940 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
      if (v2814.ᐃΔᐃΔᐃ) {
        if (Math.random() > 0.5) {
          v2940.text.push(p1870.substring(0, 25) + " ..." + ⲆⲆᐃⲆΔ);
        } else {
          v2940.text.push(ⲆⲆᐃⲆΔ + "... " + p1870.substring(0, 25));
        }
      } else {
        v2940.text.push(p1870);
      }
      this.ⵠⲆᐃΔ[v2184](vVVVVVWindow[v425].stringify([15, p1870]));
    };
    this.ⵠᐃᐃᐃⵠ = function (p1871) {
      var v2941 = ᐃᐃⵠⵠ.select.ⲆΔᐃ;
      if (v2941.length != 0) {
        var v2942 = [11];
        var v2943 = [];
        ⲆΔΔ.ⲆⵠⵠᐃⵠΔⵠ(p1871, {
          x: ᐃᐃⵠⵠ.ᐃⲆⲆ.rx,
          y: ᐃᐃⵠⵠ.ᐃⲆⲆ.ry
        });
        v2942.push(p1871.x);
        v2942.push(p1871.y);
        for (var v2944 = 0; v2944 < v2941.length; v2944++) {
          v2943.push(v2941[v2944].ⵠⲆᐃⵠⵠΔⲆⲆᐃ);
        }
        v2942.push(v2943);
        this.ⵠⲆᐃΔ[v2184](vVVVVVVWindow[v428].stringify(v2942));
      }
    };
    this.ΔΔᐃⵠⵠᐃⵠ = 0;
    this.ΔΔⵠⲆⲆΔⲆ = {
      Ⲇⵠ: 0,
      ΔᐃΔⲆ: 0
    };
    this.ᐃⵠⲆⵠⲆⲆᐃΔΔ = function () {
      if (v3028 - this.ΔΔᐃⵠⵠᐃⵠ > 50) {
        this.ΔΔᐃⵠⵠᐃⵠ = v3028;
        var v2945 = v2814.ᐃⲆⲆ;
        var v2946 = Math.floor(v2945.x / 100);
        var v2947 = Math.floor(v2945.y / 100);
        if (this.ΔΔⵠⲆⲆΔⲆ.Ⲇⵠ != v2946 || this.ΔΔⵠⲆⲆΔⲆ.ΔᐃΔⲆ != v2947) {
          this.ⵠⲆᐃΔ[v2184](vVVVVVVVVWindow[v432].stringify([28, Math.floor(-v2945.x), Math.floor(-v2945.y)]));
          this.ΔΔⵠⲆⲆΔⲆ.Ⲇⵠ = v2946;
          this.ΔΔⵠⲆⲆΔⲆ.ΔᐃΔⲆ = v2947;
        }
      }
    };
    this.ᐃⲆⲆΔᐃⵠΔ = 0;
    this.ᐃⵠⲆΔΔⵠΔᐃⲆ = function () {
      if (v3028 - this.ᐃⲆⲆΔᐃⵠΔ > 60000) {
        this.ᐃⲆⲆΔᐃⵠΔ = v3028;
        this.ping();
      }
    };
    this.ⵠΔⵠⵠⵠⲆᐃⵠⵠ = function () {
      v2814.reconnect.enabled = vVV242;
      if (vThis5.ⵠⲆᐃⲆᐃ == vThis5.ⵠⲆᐃΔ.ⵠⲆᐃⲆᐃ) {
        vThis5.ⵠⲆᐃⲆᐃ++;
        vThis5.ⵠⲆᐃΔ.close();
        v2816.connect();
      }
    };
    this.ΔΔⲆΔⵠΔΔⲆΔ = function (p1872) {
      this.ΔΔᐃΔⲆ(v702[316]);
      for (var v2948 = 1; p1872.length > v2948; v2948++) {
        v2814.ⲆᐃᐃΔⲆ.push(p1872[v2948]);
      }
    };
    this.ᐃΔⲆⲆΔⵠᐃⵠΔ = function (p1873) {
      this.ΔΔᐃΔⲆ(v2813.ᐃΔΔᐃ[p1873].ᐃΔᐃⲆⵠ + v702[318]);
      v2814.ⲆᐃᐃΔⲆ.push(p1873);
      var v2949 = document.getElementById("team_box");
      if (v2993.ᐃΔΔΔⵠ != -1 && v2949.style.display == "inline-block") {
        v2993.ⵠΔⲆⵠΔ[v2993.ᐃΔΔΔⵠ].action();
      }
    };
    this.ⲆⲆⲆⲆΔΔⲆᐃⲆ = function () {
      this.ΔΔᐃΔⲆ(v702[319]);
      v2814.ⲆΔⵠᐃⵠ.wait = vVVVV2432;
      v2814.ⲆᐃᐃΔⲆ = [];
      document.getElementById("team_box").style.display = "none";
    };
    this.ΔⲆⲆⵠⵠΔΔⲆΔ = function (p1874) {
      if (p1874 == v2814.id) {
        this.ΔΔᐃΔⲆ(v702[320]);
        v2814.ⲆΔⵠᐃⵠ.wait = vVV245;
        v2814.ⲆᐃᐃΔⲆ = [];
        document.getElementById("team_box").style.display = "none";
      } else {
        this.ΔΔᐃΔⲆ(v2813.ᐃΔΔᐃ[p1874].ᐃΔᐃⲆⵠ + v702[321]);
        for (var v2950 = 0; v2814.ⲆᐃᐃΔⲆ.length > v2950; v2950++) {
          if (v2814.ⲆᐃᐃΔⲆ[v2950] == p1874) {
            v2814.ⲆᐃᐃΔⲆ.splice(v2950, 1);
            break;
          }
        }
        var v2951 = document.getElementById("team_box");
        if (v2993.ᐃΔΔΔⵠ != -1 && v2951.style.display == "inline-block") {
          v2993.ⵠΔⲆⵠΔ[v2993.ᐃΔΔΔⵠ].action();
        }
      }
    };
    this.ⲆⵠΔᐃΔΔᐃⵠⲆ = function (p1875) {
      v2814.ᐃⲆᐃⲆⵠ = vVV213;
      this.ΔΔᐃΔⲆ(v702[322]);
      if (this.ⵠⲆᐃⲆᐃ == this.ⵠⲆᐃΔ.ⵠⲆᐃⲆᐃ) {
        this.ⵠⲆᐃⲆᐃ++;
        v2993.ΔⵠⵠΔΔ(v2812.ΔⲆⲆΔⵠ);
        this.ⵠⲆᐃΔ.close();
      }
    };
    this.ΔΔⵠⵠⲆᐃᐃΔⵠ = function (p1876, p1877) {
      v2814.ᐃⲆᐃⲆⵠ = vVV2123;
      var v2952 = new Uint16Array(p1877);
      var v2953 = new Uint32Array(p1877);
      v2814.ᐃΔⵠΔⵠⲆΔ.ᐃᐃᐃᐃΔᐃΔ = v706[p1876][Math.floor(Math.random() * v706[p1876].length)];
      v2814.ᐃΔⵠΔⵠⲆΔ.ⵠⵠᐃΔᐃ = ⲆΔΔ.ᐃᐃⲆⵠΔⲆΔ(v2813.ᐃΔΔᐃ[v2814.id].ⵠⵠᐃΔᐃ);
      v2814.ᐃΔⵠΔⵠⲆΔ.ⵠᐃⲆⵠᐃⵠⵠ = ⲆΔΔ.ᐃᐃⲆⵠΔⲆΔ(v2953[1]);
      v2814.ᐃΔⵠΔⵠⲆΔ.ᐃᐃⵠⲆᐃ = v2952[1];
      this.ΔΔᐃΔⲆ(v702[317]);
      if (this.ⵠⲆᐃΔ.ⵠⲆᐃⲆᐃ == this.ⵠⲆᐃⲆᐃ) {
        this.ⵠⲆᐃⲆᐃ++;
        v2993.ΔⵠⵠΔΔ(v2815.ΔⲆⲆΔⵠ);
        this.ⵠⲆᐃΔ.close();
        try {
          vWindow.Widget.adsRefresh();
        } catch (e) {}
      }
    };
    this.ping = function () {
      this.ⵠⲆᐃΔ[v2184]("[21]");
    };
    this.ΔⲆⵠΔΔᐃᐃᐃⲆ = function () {
      if (this.ⵠⲆᐃΔ.readyState == 3) {
        this.ⵠᐃΔΔΔᐃⵠ -= 600000;
      }
    };
    this.ΔⲆᐃᐃΔᐃⵠᐃⵠ = function () {
      if (v3027 > 5) {
        this.ⵠᐃΔΔΔᐃⵠ = v3028;
      }
      if (v3028 - this.ⵠᐃΔΔΔᐃⵠ > 600000) {
        this.ⵠᐃΔΔΔᐃⵠ = v3028;
        this.ⵠΔⵠⵠⵠⲆᐃⵠⵠ();
      }
    };
    this.ΔⲆⲆᐃⲆᐃΔᐃⵠ = function (p1878) {
      v3052++;
      clearTimeout(this.ΔΔⲆⵠΔ);
      document.getElementById("commandMainBoxName").innerHTML = this.ⵠᐃⲆᐃⵠ[this.ΔⲆᐃᐃⲆ][this.ᐃΔΔⵠᐃⲆⲆ[this.ΔⲆᐃᐃⲆ]].a;
      document.getElementById("exploreForest").src = "img/forest-leaf.png";
      document.getElementById("exploreWinter").src = "img/winter-flake.png";
      document.getElementById("exploreDesert").src = "img/desert-cactus.png";
      document.getElementById("exploreLava").src = "img/lava-volcano.png";
      this.ⵠᐃΔΔΔᐃⵠ = v3028;
      v2814.ⲆⵠⵠΔ.ΔᐃᐃⲆⵠ.ⲆᐃⲆΔᐃ = v2814.ⲆⵠⵠΔ.ΔᐃᐃⲆⵠ.ᐃⲆⲆⵠᐃ;
      v2814.ⲆⵠⵠΔ.ΔᐃⵠⲆⲆΔⲆ.ⲆᐃⲆΔᐃ = v2814.ⲆⵠⵠΔ.ΔᐃⵠⲆⲆΔⲆ.ᐃⲆⲆⵠᐃ;
      v2814.ⲆⵠⵠΔ.ΔᐃⲆΔᐃᐃΔ.ⲆᐃⲆΔᐃ = v2814.ⲆⵠⵠΔ.ΔᐃⲆΔᐃᐃΔ.ᐃⲆⲆⵠᐃ;
      v2814.ⲆⵠⵠΔ.ⲆⵠⵠⵠΔⲆΔ.ⲆᐃⲆΔᐃ = v2814.ⲆⵠⵠΔ.ⲆⵠⵠⵠΔⲆΔ.ᐃⲆⲆⵠᐃ;
      v2814.ⲆⵠⵠΔ.ΔΔⵠᐃᐃ.ⲆᐃⲆΔᐃ = v2814.ⲆⵠⵠΔ.ΔΔⵠᐃᐃ.ᐃⲆⲆⵠᐃ;
      v2814.ⲆⵠⵠΔ.ⲆⵠΔΔ = 1;
      v2814.ⲆⵠⵠΔ.c = 1;
      v2814.ⲆⵠⵠΔ.ⵠⵠⲆ = 1;
      v2814.ⲆⵠⵠΔ.Ⲇⵠⵠ = 1;
      v2814.ⲆⵠⵠΔ.ΔⲆⲆ = 1;
      v2814.ⲆⵠⵠΔ.Δⵠⵠᐃⵠᐃⵠ = 1;
      v2814.ΔᐃⲆⲆΔⲆᐃ = vVVV2133;
      v2993.ⵠⲆΔⲆⲆ.display = 0;
      v2814.ⲆⲆᐃΔ.ⵠΔⵠⵠⵠ = [];
      v2814.ⲆⲆᐃΔ.ᐃᐃᐃΔ = [];
      v2814.ⲆⲆᐃΔ.max = 10;
      v2814.ⲆⲆᐃΔ.ⵠⲆᐃΔᐃⵠᐃ = 0;
      v2814.ⲆⲆᐃΔ.ⵠΔΔΔⲆ = 0;
      v2814.ⲆⲆᐃΔ.id = -1;
      v2993.ⲆΔⵠⵠⲆΔΔ = 1;
      v2993.ⵠⲆᐃᐃⲆⲆΔ = 1;
      v2993.ᐃⲆⵠⵠᐃⵠⲆ = 1;
      v2993.ⲆᐃⵠⲆᐃⵠΔ = 1;
      v2814.ᐃⲆᐃⲆⵠ = vV244;
      v2814.ⲆⲆᐃΔ.ⵠᐃΔᐃΔΔⵠ.stop();
      v2814.ⲆΔⵠΔ.ΔᐃⵠΔⵠ = [];
      v2814.ⲆΔⵠΔ.ᐃⲆⲆΔᐃ = false;
      v2814.ⲆΔⵠΔ.ⵠΔᐃΔΔⵠΔᐃⵠ = false;
      v2814.ⲆΔⵠΔ.ⵠΔΔᐃ = -1;
      v2814.ⲆΔⵠΔ.id = -1;
      v2814.ⲆΔⵠΔ.ⵠⲆᐃΔⵠ = vVV212;
      v2814.ⲆΔⵠΔ.ⵠⵠᐃᐃⵠ = false;
      v2814.ⲆΔⵠΔ.ΔⲆᐃⵠⲆ = false;
      v2814.ⲆΔⵠΔ.ΔΔⲆᐃⵠⲆⲆ = false;
      v2814.ⲆΔⵠΔ.timeout = new ⲆΔΔ.ⵠᐃΔΔ(vV213, 0, 1, 0, 1, 1);
      v2814.ᐃΔⵠⲆΔ.timeout = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 1, 0, 1 / 10, 1);
      v2814.ᐃΔⵠⲆΔ.wait = vVVV212;
      v2814.ⵠⲆᐃⵠᐃ.timeout = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 1, 0, 0.2, 1);
      v2814.ⵠⲆᐃⵠᐃ.wait = vVV212;
      v2814.ΔⵠᐃΔⲆ.timeout = new ⲆΔΔ.ⵠᐃΔΔ(false, 0, 1, 0, 1, 1);
      v2814.ΔⵠᐃΔⲆ.wait = false;
      v2814.ⲆΔⵠᐃⵠ.id = -1;
      v2814.ⲆΔⵠᐃⵠ.ΔᐃᐃⲆ = -1;
      v2814.ⲆΔⵠᐃⵠ.wait = vVVV21;
      v2814.ⲆΔⵠᐃⵠ.timeout = new ⲆΔΔ.ⵠᐃΔΔ(vVVV212, 0, 1, 0, 1 / 30, 1);
      v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.x = -1;
      v2993.ΔⵠⲆᐃΔ.ΔᐃΔΔⲆ.y = -1;
      v2993.ᐃⲆⲆⲆ.open = false;
      v2993.ΔⵠⲆᐃΔ.ᐃΔΔᐃ = [];
      v2814.ΔΔⲆⵠᐃ.enabled = false;
      v2813.mode = p1878[1];
      if (p1878[20] !== vVVUndefined272 && p1878[21] !== undefined) {
        v2813.ᐃᐃᐃᐃΔ = p1878[20];
        v2813.ΔⵠⲆⲆΔ = p1878[21];
        v2813.w = v2813.ᐃᐃᐃᐃΔ * v2813.ⵠⵠΔⲆΔΔⲆ;
        v2813.ⵠⵠⲆ = v2813.ⲆⵠΔΔⲆⵠΔ * v2813.ΔⵠⲆⲆΔ;
      }
      v2813.ᐃΔⲆΔᐃᐃⲆ = p1878[22];
      v2813.ᐃⵠⵠⲆᐃ = p1878[23];
      vThis5.ᐃΔᐃΔⵠᐃᐃ(p1878[24]);
      vThis5.ᐃΔⲆⵠᐃⵠⲆᐃΔ(p1878[25]);
      v2814.ΔᐃⵠᐃΔ.ᐃⲆᐃⵠⲆ = p1878[26];
      v2814.ⵠΔΔⲆⵠΔⵠ = 0;
      v2814.ⵠⲆⲆⲆⵠ.ᐃⲆᐃⵠⲆ = p1878[27];
      v2813.ⲆᐃᐃᐃⲆⲆⲆⵠΔ(p1878[19]);
      v2813.time = p1878[5];
      v2813.ΔⲆⵠᐃΔ.ᐃΔΔᐃᐃ = p1878[15];
      v2813.ΔⲆⵠᐃΔ.ⵠΔⵠⲆⲆ = new Date().getTime();
      v2993.ΔᐃⲆⵠ.ⲆⲆⵠΔᐃⵠΔ = p1878[16];
      v2813.transition = vVVV212;
      v2814.ᐃᐃᐃ = p1878[2];
      v2993.ΔᐃⲆⵠ.reset();
      v2814.ⲆᐃᐃΔⲆ = p1878[8];
      v2813.ⲆΔᐃ[0] = [];
      v2813.ⲆΔᐃ[100] = [];
      v2813.ⲆΔᐃ[2] = [];
      v2813.ⲆΔᐃ[1] = [];
      v2813.ⲆΔᐃ[6] = [];
      v2813.ⲆΔᐃ[3] = [];
      v2813.ⲆΔᐃ[31] = [];
      v2813.ⲆΔᐃ[37] = [];
      v2813.ⲆΔᐃ[43] = [];
      v2813.ⲆΔᐃ[44] = [];
      v2813.ⲆΔᐃ[39] = [];
      v2813.ⲆΔᐃ[40] = [];
      v2813.ⲆΔᐃ[54] = [];
      v2813.ⲆΔᐃ[55] = [];
      v2813.ⲆΔᐃ[4] = [];
      v2813.ⲆΔᐃ[7] = [];
      v2813.ⲆΔᐃ[8] = [];
      v2813.ⲆΔᐃ[9] = [];
      v2813.ⲆΔᐃ[10] = [];
      v2813.ⲆΔᐃ[15] = [];
      v2813.ⲆΔᐃ[16] = [];
      v2813.ⲆΔᐃ[17] = [];
      v2813.ⲆΔᐃ[45] = [];
      v2813.ⲆΔᐃ[46] = [];
      v2813.ⲆΔᐃ[47] = [];
      v2813.ⲆΔᐃ[48] = [];
      v2813.ⲆΔᐃ[49] = [];
      v2813.ⲆΔᐃ[53] = [];
      v2813.ⲆΔᐃ[11] = [];
      v2813.ⲆΔᐃ[22] = [];
      v2813.ⲆΔᐃ[23] = [];
      v2813.ⲆΔᐃ[5] = [];
      v2813.ⲆΔᐃ[12] = [];
      v2813.ⲆΔᐃ[13] = [];
      v2813.ⲆΔᐃ[14] = [];
      v2813.ⲆΔᐃ[60] = [];
      v2813.ⲆΔᐃ[70] = [];
      v2813.ⲆΔᐃ[71] = [];
      v2813.ⲆΔᐃ[72] = [];
      v2813.ⲆΔᐃ[73] = [];
      v2813.ⲆΔᐃ[74] = [];
      v2813.ⲆΔᐃ[81] = [];
      v2813.ⲆΔᐃ[82] = [];
      v2813.ⲆΔᐃ[87] = [];
      v2813.ⲆΔᐃ[86] = [];
      v2813.ⲆΔᐃ[34] = [];
      v2813.ⲆΔᐃ[65] = [];
      v2813.ⲆΔᐃ[66] = [];
      v2813.ⲆΔᐃ[67] = [];
      v2813.ⲆΔᐃ[62] = [];
      v2813.ⲆΔᐃ[63] = [];
      v2813.ⲆΔᐃ[78] = [];
      v2813.ⲆΔᐃ[77] = [];
      v2813.ⲆΔᐃ[75] = [];
      v2813.ⲆΔᐃ[76] = [];
      v2813.ⲆΔᐃ[64] = [];
      v2813.ⲆΔᐃ[69] = [];
      v2813.ⲆΔᐃ[68] = [];
      v2813.ⲆΔᐃ[79] = [];
      v2813.ⲆΔᐃ[89] = [];
      v2813.ⲆΔᐃ[83] = [];
      v2813.ⲆΔᐃ[84] = [];
      v2813.ⲆΔᐃ[85] = [];
      v2813.ⲆΔᐃ[80] = [];
      v2813.ⲆΔᐃ[88] = [];
      v2813.ⲆΔᐃ[91] = [];
      v2813.ⲆΔᐃ[90] = [];
      v2813.ⲆΔᐃ[61] = [];
      v2813.ⲆΔᐃ[18] = [];
      v2813.ⲆΔᐃ[19] = [];
      v2813.ⲆΔᐃ[20] = [];
      v2813.ⲆΔᐃ[21] = [];
      v2813.ⲆΔᐃ[50] = [];
      v2813.ⲆΔᐃ[52] = [];
      v2813.ⲆΔᐃ[51] = [];
      v2813.ⲆΔᐃ[29] = [];
      v2813.ⲆΔᐃ[56] = [];
      v2813.ⲆΔᐃ[30] = [];
      v2813.ⲆΔᐃ[38] = [];
      v2813.ⲆΔᐃ[33] = [];
      v2813.ⲆΔᐃ[32] = [];
      v2813.ⲆΔᐃ[24] = [];
      v2813.ⲆΔᐃ[25] = [];
      v2813.ⲆΔᐃ[26] = [];
      v2813.ⲆΔᐃ[27] = [];
      v2813.ⲆΔᐃ[28] = [];
      v2813.ⲆΔᐃ[42] = [];
      v2813.ⲆΔᐃ[41] = [];
      v2813.ⲆΔᐃ[35] = [];
      v2813.ⲆΔᐃ[36] = [];
      v2813.ᐃᐃⲆⵠ = [];
      v2813.ⵠⵠⲆⵠⵠᐃᐃ = p1878[7];
      v2814.id = p1878[9];
      v2814.ΔⲆᐃΔ = v2814.id * v2813.ⵠⵠⲆⵠⵠᐃᐃ;
      if (v2994.loaded) {
        v2994.ᐃΔΔᐃ[0].ΔⲆᐃΔ = v2814.ΔⲆᐃΔ;
        v2994.ᐃΔΔᐃ[0].ΔⲆⵠΔΔᐃⵠ = 0;
      }
      v3022.ΔⵠᐃⲆΔⵠⲆ();
      v2814.ᐃⲆⲆ.ᐃⲆⲆᐃⲆ(p1878[3], p1878[10]);
      v2813.ᐃΔΔᐃ = [];
      var v2954 = v2813.ᐃΔΔᐃ;
      for (var v2955 = 0; v2955 < p1878[11]; v2955++) {
        v2954.push(new f445());
      }
      v2955 = 0;
      for (var v2956 = p1878[4]; v2956.length > v2955; v2955++) {
        var v2957 = v2954[v2956[v2955].i];
        v2957.ᐃΔᐃⲆⵠ = v2956[v2955].n;
        v2957.ⲆΔᐃⲆ = v2956[v2955].s;
        v2957.ⵠΔⲆΔΔ = v2956[v2955].a;
        v2957.ⵠᐃⲆᐃᐃ = v2956[v2955].c;
        v2957.ⵠⵠΔΔⲆ = v2956[v2955].b;
        v2957.ΔΔᐃᐃⲆ = v2956[v2955].d;
        v2957.ⵠΔⲆⵠⲆᐃΔ = v2956[v2955].g;
        v2957.level = v2956[v2955].l;
        v2957.ⵠⵠᐃΔᐃ = ⲆΔΔ.ΔⵠΔᐃᐃⵠⵠ(v2956[v2955].p);
        v2957.ᐃⲆᐃⲆⵠ = vVVVV242;
        if (v2185 === 1) {
          v2957.ᐃΔᐃⲆⵠ += "|" + v2956[v2955].i;
        }
      }
      v2814.ⵠΔⲆΔⲆ.sort();
      if (v2813.mode === 1 && v2813.ᐃΔΔᐃ[v2814.id].ᐃΔᐃⲆⵠ === "spectator") {
        v2814.ⵠⵠⵠⲆᐃᐃΔ = true;
      } else {
        v2814.ⵠⵠⵠⲆᐃᐃΔ = vV213;
      }
      if (v2813.mode === 2 && v2813.ᐃΔΔᐃ[v2814.id].ⲆΔᐃⲆ === 0) {
        v2814.ᐃΔᐃΔᐃ = vVVV243;
      } else {
        v2814.ᐃΔᐃΔᐃ = false;
      }
      if (v2813.mode === 3 && v2813.ᐃΔΔᐃ[v2814.id].ⲆΔᐃⲆ === 0) {
        v2814.ᐃᐃΔΔΔⲆᐃ = vV24;
      } else {
        v2814.ᐃᐃΔΔΔⲆᐃ = vVV212;
      }
      ᐃᐃⲆᐃ.set("starve_token", v2814.ⵠᐃⲆⲆΔ);
      if (p1878[12] === 0) {
        v2814.ⲆⵠⵠΔΔ.ⲆΔᐃⲆⵠ = 0;
        v2993.ΔᐃⲆⵠ.restore(p1878[17]);
        var v2958 = p1878[14];
        if (v2958[29]) {
          v2814.ⲆⲆᐃΔ.ΔⲆⵠⵠᐃᐃᐃ(1, 0);
        }
        for (v2955 = 0; v2955 < v2958.length; v2955++) {
          if (v2958[v2955]) {
            if (v2955 == 29) {
              continue;
            }
            if (v2955 == 7) {
              continue;
            }
            this.ᐃⲆΔⵠΔΔΔ([0, v2955, v2958[v2955]]);
          }
        }
        v2814.ⲆⵠⵠΔΔ.open = false;
      } else {
        if (v2813.mode === 4) {
          this.ᐃⲆΔⵠΔΔΔ([0, 238, 1]);
        } else if (v2813.mode === 3) {
          if (v2814.ᐃᐃΔΔΔⲆᐃ) {
            this.ᐃⲆΔⵠΔΔΔ([0, 190, 4]);
          } else {
            this.ᐃⲆΔⵠΔΔΔ([0, 191, 3]);
          }
        }
        if (v2813.mode === 0 || v2813.mode === 3 || v2813.mode === 7 || v2813.mode === 4) {
          v2814.ⲆⵠⵠΔΔ.ⲆΔᐃⲆⵠ = new Date().getTime();
          v2814.ⲆⵠⵠΔΔ.open = true;
          v2814.ⲆⵠⵠΔΔ.value = p1878[13];
          v2993.ⲆⵠⵠΔΔ.ⵠΔⵠⲆⲆ();
        } else {
          v2814.ⲆⵠⵠΔΔ.ⲆΔᐃⲆⵠ = 0;
          v2814.ⲆⵠⵠΔΔ.open = vVVVV21;
          v2814.ⲆⵠⵠΔΔ.value = 0;
        }
        v2814.ⲆⲆᐃⲆⵠⵠΔ = p1878[12].toString();
      }
      v2814.ⵠⲆⵠᐃΔ.enabled = p1878[6];
      v2814.ⵠⲆⵠᐃΔ.ⲆΔᐃⲆⵠ = -1;
      v2814.ⵠⲆⵠᐃΔ.label = null;
      v2814.ⵠⲆⵠᐃΔ.now = -1;
      ᐃᐃⲆᐃ.set("starve_token_id", v2814.ⲆⲆᐃⲆⵠⵠΔ);
      if (v2814.reconnect.enabled) {
        v2814.reconnect.rotate = 0;
        v2814.reconnect.enabled = vVVVV21;
      } else {
        v2812.ΔⵠⵠΔΔ(v2993.ΔⲆⲆΔⵠ);
        if (ga) {
          ga("send", "event", "Game", "play", "S" + v2812.ⲆΔᐃⲆ + "A" + v2812.ⵠΔⲆΔΔ);
        }
      }
    };
    this.connect = function () {
      vThis5.ⲆⵠⵠⵠᐃⲆᐃ = 0;
      vThis5.ⵠⲆΔⲆᐃΔⵠ();
    };
    this.ⵠᐃⵠΔⵠΔΔ = [];
    this.ⵠΔᐃᐃⲆⵠᐃᐃΔ = function (p1879) {
      const v2959 = vThis5.ΔⵠⲆΔᐃ.filter(p1880 => p1880.gm === p1879);
      const v2960 = {};
      for (let v2961 = 0; v2961 < v2959.length; v2961++) {
        const v2962 = v2959[v2961];
        const v2963 = v2962.r;
        if (v2963 !== undefined) {
          if (v2960[v2963] === undefined) {
            v2960[v2963] = [];
          }
          v2960[v2963].push(v2962);
        }
      }
      function a(p1881) {
        vThis5.ⵠᐃⵠΔⵠΔΔ[p1879] = p1881;
        const v2964 = v2960[p1881];
        const v2965 = v2964[Math.floor(Math.random() * v2964.length)];
        vThis5.ΔᐃⵠΔⲆΔⲆ({
          domain: v2190,
          is_tls: 1,
          id: v2965.id,
          p: v2965.p
        });
      }
      if (vThis5.ⵠᐃⵠΔⵠΔΔ[p1879] !== vVUndefined26) {
        a(vThis5.ⵠᐃⵠΔⵠΔΔ[p1879]);
        return;
      }
      let v2966 = 1;
      function s(p1882) {
        const v2967 = new vWindow.XMLHttpRequest();
        const v2968 = p1882[0];
        const v2969 = v2968.p;
        const v2970 = v2968.r;
        const v2971 = v2969[Math.floor(Math.random() * v2969.length)];
        v2967.open("GET", "https://" + v2971 + "." + v2190 + "/", true);
        v2967.onreadystatechange = function () {
          if (v2967.readyState === 4) {
            if (v2966 === 0) {
              return;
            }
            v2966 = 0;
            a(v2970);
          }
        };
        v2967.send();
      }
      for (let v2972 in v2960) {
        s(v2960[v2972]);
      }
      vWindow.setTimeout(function () {
        if (v2966 === 0) {
          return;
        }
        v2966 = 0;
        const v2973 = vWindow.Object.keys(v2960);
        a(v2973[Math.floor(Math.random() * v2973.length)]);
      }, 5000);
    };
    this.ΔΔΔΔⵠᐃⵠⲆᐃ = function () {
      let v2974 = v2205.ⵠⵠⲆΔᐃᐃΔ[vThis5.ΔⲆᐃᐃⲆ];
      console.log(undefined, undefined, undefined);
      let v2975 = vThis5.ᐃΔΔⵠᐃⲆⲆ[vThis5.ΔⲆᐃᐃⲆ];
      let v2976 = vThis5.ΔⵠⲆΔᐃ.find(p1883 => p1883.gm == v2974 && p1883.idx == v2975);
      if (v2976 === undefined) {
        vThis5.ⵠΔᐃᐃⲆⵠᐃᐃΔ(v2974);
      } else {
        vThis5.ΔᐃⵠΔⲆΔⲆ({
          domain: v2190,
          is_tls: 1,
          id: v2976.id,
          p: v2976.p
        });
      }
    };
    this.ⵠⲆΔⲆᐃΔⵠ = function () {
      console.log(vVUndefined27);
      if (vVVUndefined198 !== v2188 && vVVUndefined272 !== v2189) {
        console.log(vVUndefined28, vVUndefined27, vVVVUndefined1972);
        vThis5.ΔᐃⵠΔⲆΔⲆ({
          domain: v2190,
          is_tls: 1,
          id: v2189 + v2188,
          p: vThis5.ⲆⵠⲆⵠΔᐃΔ[v2189]
        });
        return;
      }
      if (v2187 === undefined) {
        vThis5.ΔΔΔΔⵠᐃⵠⲆᐃ();
      } else {
        vThis5.ΔᐃⵠΔⲆΔⲆ({
          domain: v2187.domain,
          is_tls: v2187.ssl,
          id: v2187.id,
          p: [v2187.p]
        });
      }
    };
    this.ΔᐃⵠΔⲆΔⲆ = function (p1884) {
      let v2977 = p1884.domain;
      let v2978 = p1884.is_tls;
      let v2979 = p1884.id;
      let v2980 = p1884.p;
      let v2981 = v2980[Math.floor(Math.random() * v2980.length)];
      let v2982 = v2978 ? "wss://" + v2981 + "." + v2977 + "/" + v2979 + "?" + v2814.ⲆΔⵠⵠᐃⲆᐃ : "ws://" + v2977;
      console.log(undefined, vVVUndefined198);
      vThis5.ⵠⲆᐃΔ = new vWindow.WebSocket(v2982);
      vThis5.ⵠⲆᐃΔ.binaryType = "arraybuffer";
      vThis5.ⵠⲆᐃΔ.ⵠⲆᐃⲆᐃ = vThis5.ⵠⲆᐃⲆᐃ;
      vThis5.ⵠⲆᐃΔ.onmessage = function (p1885) {
        if (vThis5.ⵠⲆᐃⲆᐃ == vThis5.ⵠⲆᐃⲆᐃ) {
          if (typeof p1885.data == "string") {
            var v2983 = JSON.parse(p1885.data);
            switch (v2983[0]) {
              case 0:
                vThis5.ⲆⵠᐃᐃΔ(v2983);
                break;
              case 1:
                vThis5.ⲆⲆΔᐃᐃᐃⵠ(v2983[1]);
                break;
              case 2:
                vThis5.ΔΔᐃΔⵠⵠΔΔⵠ(v2983);
                break;
              case 3:
                vThis5.ΔⲆⲆᐃⲆᐃΔᐃⵠ(v2983);
                break;
              case 4:
                vThis5.message(v2983[1]);
                break;
              case 5:
                vThis5.ᐃΔᐃⵠⵠⲆⵠ(v2983);
                break;
              case 6:
                vThis5.ᐃΔᐃΔⵠᐃᐃ(v2983[1]);
            }
          } else {
            var vF54 = function (p1886, p1887, p1888) {
              const v2984 = new Uint8Array(p1886);
              const v2985 = v2984.length;
              let v2986;
              let v2987 = v2195[v2985];
              let vVVVVVUndefined1972 = vVVVVUndefined1972;
              if (v2987 === vVUndefined28) {
                v2194 += v2985 * 2;
                if (v2194 < 65535) {
                  v2986 = vVUndefined5(vVUndefined22(v2985));
                } else {
                  v2194 = v2985;
                  for (let v2988 = 0; v2988 < v2195.length; v2988++) {
                    if (v2195[v2988] !== undefined) {
                      const v2989 = v2195[v2988][0];
                      v2195[v2988] = undefined;
                      vVUndefined4(v2989);
                    }
                  }
                  v2986 = vVUndefined5(vVUndefined22(v2985));
                  vVUndefined6();
                }
                vVVVVVUndefined1972 = f4(v2986);
                v2195[v2985] = [v2986, vVVVVVUndefined1972];
              } else {
                v2986 = v2987[0];
                vVVVVVUndefined1972 = v2987[1];
              }
              for (let v2990 = 0; v2990 < v2984.length; v2990++) {
                vVVVVVUndefined1972[v2990] = v2984[v2990];
              }
              v78(v2986, p1887, p1888);
              for (let v2991 = 0; v2984.length > v2991; v2991++) {
                v2984[v2991] = vVVVVVUndefined1972[v2991];
              }
              return v2984;
            }(p1885.data, v2814.ΔΔΔΔⲆᐃᐃ, v2814.ⲆΔᐃⲆⵠᐃⵠᐃᐃ);
            var v2992 = vF54.buffer;
            switch (vF54[0]) {
              case 0:
                vThis5.ⲆΔᐃ(v2992, vF54, false);
                break;
              case 1:
                vThis5.ⲆΔᐃ(v2992, vF54, vV245);
                break;
              case 2:
                vThis5.ᐃΔᐃⵠΔΔⵠⵠᐃ();
                break;
              case 3:
                vThis5.ᐃⲆΔⵠΔΔΔ(new Uint16Array(v2992));
                break;
              case 4:
                vThis5.ΔⲆⲆΔᐃⲆⲆΔⵠ();
                break;
              case 5:
                vThis5.ⵠⲆᐃⵠᐃⵠΔΔΔ();
                break;
              case 6:
                vThis5.ᐃⲆΔⵠⲆᐃⲆⵠⲆ();
                break;
              case 7:
                vThis5.ⵠⵠⲆΔΔᐃᐃⲆⵠ(v2992);
                break;
              case 8:
                vThis5.ΔⵠⲆΔᐃᐃⵠⵠΔ(vF54[1]);
                break;
              case 9:
                vThis5.ⲆⲆⵠΔⲆΔⲆΔΔ(vF54[1]);
                break;
              case 10:
                vThis5.ⲆᐃᐃⵠᐃⲆᐃ();
                break;
              case 11:
                vThis5.ⲆⲆⲆⲆⵠᐃΔ(vF54[1], vF54[2]);
                break;
              case 12:
                vThis5.ⵠⲆᐃΔⵠ(vF54[1]);
                break;
              case 13:
                vThis5.ΔⲆᐃΔᐃⵠΔᐃΔ(vF54, v2992);
                break;
              case 14:
                vThis5.ΔᐃᐃⵠΔⵠᐃᐃⲆ();
                break;
              case 15:
                vThis5.ⲆΔΔΔⵠᐃⲆⵠⲆ(vF54[1]);
                break;
              case 16:
                vThis5.ⲆⵠⵠΔ(vF54[1], vF54[2], vF54[3], vF54[4], vF54[5], vF54[6], vF54[7]);
                break;
              case 17:
                vThis5.ⲆⵠⲆⵠΔᐃⵠⲆΔ(v2992);
                break;
              case 18:
                vThis5.ⵠᐃⵠΔΔⵠⲆᐃⲆ();
                break;
              case 19:
                vThis5.ΔⲆᐃⵠⲆ(vF54[1]);
                break;
              case 20:
                vThis5.ΔⵠΔΔΔⵠⵠⵠⲆ();
                break;
              case 21:
                vThis5.ⵠⲆᐃᐃ(v2992);
                break;
              case 22:
                vThis5.ᐃᐃᐃΔⲆΔⲆⲆΔ(vF54[1]);
                break;
              case 23:
                vThis5.ᐃΔⲆⵠᐃⵠΔΔⵠ(v2992);
                break;
              case 24:
                vThis5.ⲆⵠⲆⲆΔⲆᐃⵠᐃ(vF54[1]);
                break;
              case 25:
                vThis5.ΔΔⵠⵠⲆᐃᐃΔⵠ(vF54[1], v2992);
                break;
              case 26:
                vThis5.ΔⵠⲆᐃΔ(vF54);
                break;
              case 27:
                vThis5.ΔΔⵠΔᐃᐃΔⵠⵠ();
                break;
              case 28:
                vThis5.ⵠⲆⵠᐃΔ(vF54[1]);
                break;
              case 29:
                vThis5.ΔᐃⲆΔΔΔᐃΔⵠ();
                break;
              case 30:
                vThis5.ⲆⵠΔᐃΔΔᐃⵠⲆ();
                break;
              case 31:
                vThis5.ΔΔⲆΔⵠΔΔⲆΔ(vF54);
                break;
              case 32:
                vThis5.ΔⲆⲆⵠⵠΔΔⲆΔ(vF54[1]);
                break;
              case 33:
                vThis5.ᐃΔⲆⲆΔⵠᐃⵠΔ(vF54[1]);
                break;
              case 34:
                vThis5.ⲆⲆⲆⲆΔΔⲆᐃⲆ();
                break;
              case 35:
                vThis5.ΔᐃᐃⵠⲆⲆⵠΔⲆ(vF54[1]);
                break;
              case 36:
                vThis5.ΔΔⲆᐃⵠⲆⲆ(vF54[1]);
                break;
              case 37:
                vThis5.ⵠⵠⲆⵠⲆⵠⵠⵠⲆ(vF54[1], vF54[2]);
                break;
              case 38:
                vThis5.ᐃⲆᐃⵠΔΔⵠⲆⵠ(vF54[1]);
                break;
              case 39:
                vThis5.ⵠⲆᐃⲆⵠⲆᐃⵠΔ(vF54[1]);
                break;
              case 40:
                vThis5.ΔⲆⵠΔᐃⲆΔᐃⲆ();
                break;
              case 41:
                vThis5.ⵠΔᐃΔⲆⵠⵠᐃⵠ(vF54);
                break;
              case 42:
                vThis5.ⵠΔΔⲆΔᐃⵠᐃᐃ(vF54[1]);
                break;
              case 43:
                vThis5.ᐃⵠⵠⵠᐃⲆⲆⲆΔ(vF54[1]);
                break;
              case 44:
                vThis5.ⵠΔⲆᐃᐃⲆⵠⲆⲆ(vF54[1]);
                break;
              case 45:
                vThis5.ᐃⵠⲆⲆⵠᐃΔᐃⲆ(vF54[1]);
                break;
              case 46:
                vThis5.ᐃⲆΔⵠⲆΔΔᐃⵠ(vF54[1]);
                break;
              case 47:
                vThis5.ⵠⵠᐃᐃⵠ(vF54[1]);
                break;
              case 48:
                vThis5.ᐃⵠΔΔⲆΔⲆᐃⲆ();
                break;
              case 50:
                vThis5.ΔⵠΔΔⲆⲆΔⵠᐃ(vF54[1], vF54[2], vF54[3]);
                break;
              case 51:
                vThis5.ΔⲆᐃⲆⵠᐃⵠᐃⵠ();
                break;
              case 52:
                vThis5.ⵠΔΔᐃΔⲆᐃᐃΔ(vF54[1]);
                break;
              case 53:
                vThis5.ΔΔⵠᐃⲆΔⵠᐃⲆ(vF54[1]);
                break;
              case 54:
                vThis5.ΔᐃⲆᐃⲆᐃᐃᐃⵠ();
                break;
              case 55:
                vThis5.ⲆΔⵠⵠⵠᐃΔΔΔ(vF54[1]);
                break;
              case 56:
                vThis5.ΔⵠᐃⵠⵠⲆⲆᐃⵠ(vF54[1]);
                break;
              case 57:
                vThis5.ΔⵠΔᐃⵠⵠᐃⲆᐃ();
                break;
              case 58:
                vThis5.ᐃᐃΔⵠⲆⲆΔΔΔ();
                break;
              case 59:
                vThis5.ΔᐃΔΔⵠΔᐃⲆⵠ();
                break;
              case 60:
                vThis5.ᐃΔⲆⲆᐃⵠⵠⲆᐃ();
                break;
              case 61:
                v2814.ᐃⲆⲆ.ⲆⵠⵠΔᐃⵠⲆ = 0.2;
                v2814.ᐃⲆⲆ.ⲆΔᐃⲆⵠ = 3;
                break;
              case 62:
                vThis5.ⵠⲆⲆⵠᐃⲆΔⲆⲆ(new Uint16Array(v2992));
                break;
              case 63:
                vThis5.ΔⵠⲆⲆᐃⵠᐃⵠΔ();
                break;
              case 64:
                vThis5.ⲆⲆΔΔΔⲆᐃᐃⵠ();
                break;
              case 65:
                vThis5.ⲆΔΔᐃᐃⵠⵠⵠΔ();
                break;
              case 66:
                vThis5.ᐃⲆⵠⵠⵠΔΔᐃΔ();
                break;
              case 67:
                vThis5.ᐃⲆⲆᐃΔΔᐃⲆⵠ(vF54[1]);
                break;
              case 68:
                vThis5.ⲆⵠᐃⲆᐃᐃᐃᐃⵠ(vF54[1]);
                break;
              case 69:
                vThis5.ⵠΔΔⲆⵠΔⵠ(vF54[1]);
                break;
              case 70:
                vThis5.ⵠⵠⵠΔᐃⲆⲆᐃⵠ(vF54[1]);
                break;
              case 71:
                vThis5.ⵠᐃⲆⵠΔ(vF54[1]);
            }
          }
        }
      };
      vThis5.ⵠⲆᐃΔ.onerror = function () {
        if (v2814.reconnect.enabled) {
          vWindow.setTimeout(vThis5.timeout, 2500);
        }
      };
      this.ⵠⲆᐃΔ.onopen = function () {
        clearTimeout(vThis5.ΔΔⲆⵠΔ);
        v2814.ⲆᐃΔΔⵠᐃᐃ = v2814.ⲆᐃΔΔⵠᐃᐃ || ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("token");
        ⲆΔΔ.ᐃΔΔⵠⲆⲆΔ().then(p1889 => {
          vThis5.ⵠⲆᐃΔ[v2184](vV441[v440].stringify([v2812.ᐃΔᐃⲆⵠ.input.value, screen.width + 200, screen.height + 200, 52, v2814.ⵠᐃⲆⲆΔ, v2814.ⲆⲆᐃⲆⵠⵠΔ, v2814.reconnect.enabled ? 1 : 0, v2812.ⲆΔᐃⲆ, v2812.ⵠΔⲆΔΔ, v2812.ⵠΔΔΔⲆ, v2812.ⵠⵠΔΔⲆ, v2812.ⵠᐃⲆᐃᐃ, v2812.ΔΔᐃᐃⲆ, vUndefined5 === undefined ? 0 : vUndefined5, vUndefined4 === vVVVVUndefined1972 ? 0 : vUndefined4.substring(vUndefined4.length - 50), v2186, v2814.ⲆᐃΔΔⵠᐃᐃ, p1889, v2814.ⵠΔΔⲆⵠᐃᐃ, v2814.ⵠᐃΔᐃᐃⲆⵠ]));
          v2814.ⲆᐃΔΔⵠᐃᐃ = undefined;
          v2814.ⵠΔΔⲆⵠᐃᐃ = vVVVUndefined27;
          v2814.ⵠᐃΔᐃᐃⲆⵠ = vVVVUndefined27;
          v2814.ⲆΔⵠⵠᐃⲆᐃ = undefined;
          vThis5.ΔΔⲆⵠΔ = setTimeout(vThis5.timeout, 2000);
        });
      };
    };
  }();
  var v2993 = {
    ⵠⲆⵠᐃⲆ: vV21
  };
  var v2994 = new function () {
    this.ΔⲆⲆΔⵠ = 0;
    this.loaded = 0;
    this.transition = 0;
    this.ᐃᐃᐃᐃΔΔΔ = function (p1890) {
      return p1890 / v2813.w * 100;
    };
    this.ⵠⵠᐃⵠΔⲆᐃ = function (p1891) {
      return p1891 / v2813.ⵠⵠⲆ * 100;
    };
    this.ⲆⵠΔⵠΔⲆⲆ = function (p1892, p1893) {
      p1892 = this.ᐃᐃᐃᐃΔΔΔ(p1892) - this.ⲆᐃᐃΔᐃ.x;
      return this.ⲆᐃᐃΔᐃ.x + p1893 * p1892;
    };
    this.ⵠⵠΔⲆᐃⲆᐃ = function (p1894, p1895) {
      p1894 = Math.abs(this.ⵠⵠᐃⵠΔⲆᐃ(p1894) - this.ⲆᐃᐃΔᐃ.y);
      return this.ⲆᐃᐃΔᐃ.y + p1895 * p1894;
    };
    this.sample = {};
    this.ⲆΔⵠⲆⲆ = {};
    this.ᐃᐃⵠⵠ = {};
    this.ΔⵠⲆΔΔᐃΔ = function (p1896, p1897, p1898, p1899) {
      for (var v2995 = 0; v2995 < p1897.length; v2995++) {
        var v2996 = p1897[v2995];
        if (!p1896.playing(v2996)) {
          p1896.pos(p1898, p1899, -0.5, v2996);
          p1896.play(v2996);
          return v24;
        }
      }
      return false;
    };
    this.ᐃⲆᐃ = function (p1900, p1901, p1902, p1903) {
      p1902 = this.ⲆⵠΔⵠΔⲆⲆ(p1902, Δⵠⵠᐃⵠ.ᐃᐃⵠΔⲆⲆᐃ);
      p1903 = this.ⵠⵠΔⲆᐃⲆᐃ(p1903, Δⵠⵠᐃⵠ.ᐃᐃⵠΔⲆⲆᐃ);
      console.log("HIT", p1900, p1901, p1902, p1903, Δⵠⵠᐃⵠ.ᐃᐃⵠΔⲆⲆᐃ);
      if (p1900) {
        if (p1901 === 1) {
          this.ΔⵠⲆΔΔᐃΔ(this.ᐃᐃⵠⵠ.ᐃⵠᐃⵠᐃⲆΔ, this.sample.ᐃⵠᐃⵠᐃⲆΔ, p1902, p1903);
        } else if (p1901 === 0) {
          this.ΔⵠⲆΔΔᐃΔ(this.ᐃᐃⵠⵠ.ⵠⵠᐃⲆⵠΔⲆ, this.sample.ⵠⵠᐃⲆⵠΔⲆ, p1902, p1903);
        }
      } else {
        this.ΔⵠⲆΔΔᐃΔ(this.ᐃᐃⵠⵠ.ΔⲆΔᐃΔ, this.sample.ΔⲆΔᐃΔ, p1902, p1903);
      }
    };
    this.ⲆᐃᐃΔᐃ = {
      y: 0,
      x: 0
    };
    this.ⵠΔΔᐃⵠⵠᐃ = {
      x: 0,
      y: 0
    };
    this.ΔⲆΔⲆⲆ = {};
    this.ᐃΔΔᐃ = [];
    this.ΔⵠᐃᐃΔ = function (p1904, p1905) {
      for (var v2997 in this.ΔⲆΔⲆⲆ) {
        var v2998 = this.ΔⲆΔⲆⲆ[v2997];
        v2998.check(p1904);
        if (v2998.ᐃᐃΔⵠᐃⵠⲆ) {
          if (v2813.ΔⲆⵠᐃΔ.now < 460000) {
            v2998.ᐃⵠⵠⵠⵠ();
          }
          if (p1905) {
            v2998.ᐃΔⵠ(p1904, this.ⲆᐃᐃΔᐃ);
          }
          if (this.transition) {
            v2998.transition();
          }
        }
      }
      this.transition &&= 0;
    };
    this.ᐃⵠΔΔⵠⲆᐃΔᐃ = function () {
      var v2999 = [];
      for (var v3000 = 0; this.ᐃΔΔᐃ.length > v3000; v3000++) {
        if ((v3003 = this.ᐃΔΔᐃ[v3000]).ΔⲆⵠΔΔᐃⵠ) {
          v2999.push(v3000);
        } else if (!v3003.ΔⲆⵠΔΔᐃⵠ && !v2813.ᐃᐃⲆⵠ[v3003.ΔⲆᐃΔ]) {
          v3003.ΔΔⵠⵠΔΔⲆ();
          v2999.push(v3000);
        }
      }
      for (var v3001 = v2813.ⲆΔᐃ[0], v3002 = (v3000 = 0, 0); v3001.length > v3000 && v3002 < v2999.length; v3000++) {
        var v3003 = v3001[v3000];
        if ((v2813.mode != 1 || v2813.ᐃΔΔᐃ[v3003.id].ᐃΔᐃⲆⵠ !== "spectator") && v3003.ΔΔⲆΔᐃ === -1 && v3003.ΔⲆᐃΔ !== v2814.ΔⲆᐃΔ) {
          this.ᐃΔΔᐃ[v2999[v3002]].ⵠΔⵠⲆⲆ(v3003.ΔⲆᐃΔ);
          v3002++;
        }
      }
    };
    this.ⲆⲆⲆᐃⵠᐃᐃⲆⵠ = function () {
      this.ᐃⵠΔΔⵠⲆᐃΔᐃ();
      for (var v3004 = 0; this.ᐃΔΔᐃ.length > v3004; v3004++) {
        var v3005 = this.ᐃΔΔᐃ[v3004];
        if (!v3005.ΔⲆⵠΔΔᐃⵠ && v3005.check()) {
          v3005.ᐃΔⵠ();
        }
      }
    };
    this.ΔΔⵠᐃᐃΔᐃΔΔ = function (p1906) {
      if (p1906.x === this.ⵠΔΔᐃⵠⵠᐃ.x && this.ⵠΔΔᐃⵠⵠᐃ.y === p1906.y) {
        return 0;
      } else {
        this.ⵠΔΔᐃⵠⵠᐃ.x = p1906.x;
        this.ⵠΔΔᐃⵠⵠᐃ.y = p1906.y;
        this.ⲆᐃᐃΔᐃ.x = this.ᐃᐃᐃᐃΔΔΔ(p1906.x);
        this.ⲆᐃᐃΔᐃ.y = this.ⵠⵠᐃⵠΔⲆᐃ(p1906.y);
        Howler.pos(this.ⲆᐃᐃΔᐃ.x, this.ⲆᐃᐃΔᐃ.y, 0);
        return 1;
      }
    };
    this.ΔⲆⲆⵠΔⵠᐃⵠΔ = function () {
      if (this.ΔⲆⲆΔⵠ && this.loaded) {
        var v3006 = v2813.ᐃᐃⲆⵠ[v2814.ΔⲆᐃΔ];
        if (v3006) {
          v3006.ΔΔⲆΔᐃ = 0;
          var v3007 = this.ΔΔⵠᐃᐃΔᐃΔΔ(v3006);
          if (v2813.mode !== 2 && v2813.mode !== 4 && v2813.mode !== 5) {
            this.ΔⵠᐃᐃΔ(v3006, v3007);
          }
          this.ⲆⲆⲆᐃⵠᐃᐃⲆⵠ();
        }
      }
    };
    this.ⲆΔⵠΔⲆᐃΔᐃⲆ = function () {
      for (var v3008 in v2789) {
        var v3009 = v2789[v3008];
        if (typeof v3009 === "object" && v3009.path) {
          v3009.ⵠⲆⲆΔᐃ = new Howl({
            src: v3009.path,
            volume: 0,
            sprite: v3009.ⲆⲆ
          });
        }
        for (var v3010 in v3009.sample) {
          var v3011 = v3009.sample[v3010];
          var v3012 = [];
          console.log(undefined);
          for (var v3013 = 0; v3013 < v3011; v3013++) {
            var v3014 = v3009.ⵠⲆⲆΔᐃ.play(v3010);
            v3009.ⵠⲆⲆΔᐃ.stop(v3014);
            v3009.ⵠⲆⲆΔᐃ.on("fade", function (p1907) {
              if (!this.volume(p1907)) {
                console.log(undefined, vVVVVUndefined1972);
                this.stop(p1907);
              }
            }, v3014);
            v3012.push(v3014);
          }
          if (v3012.length > 1) {
            v2994.sample[v3010] = v3012;
          } else {
            v2994.sample[v3010] = v3012[0];
          }
          v2994.ᐃᐃⵠⵠ[v3010] = v3009.ⵠⲆⲆΔᐃ;
        }
      }
    };
    this.ⲆⲆᐃΔⲆᐃⵠ = function (p1908, p1909, p1910) {
      for (var v3015 = 0; p1908.length > v3015; v3015++) {
        p1909.volume(p1910, p1908[v3015]);
      }
    };
    this.ΔΔΔᐃᐃᐃⲆ = function (p1911, p1912, p1913, p1914, p1915, p1916) {
      var vP1911 = p1911;
      for (var v3016 = 0; p1913 > v3016; v3016++) {
        var v3017 = vP1911[v3016] = [];
        for (ΔᐃΔⲆ = 0; ΔᐃΔⲆ < p1914; ΔᐃΔⲆ++) {
          v3017[ΔᐃΔⲆ] = v2994.sample[p1915 + ΔᐃΔⲆ][v3016];
          p1912.ⵠⲆⲆΔᐃ.volume(p1916, v3017[ΔᐃΔⲆ]);
        }
      }
    };
    this.ⵠΔⵠⲆⲆ = function () {
      v2994.ⲆΔⵠΔⲆᐃΔᐃⲆ();
      v2994.ⲆΔⵠⲆⲆ.ⵠⵠΔⵠⵠᐃⵠ = [];
      v2994.ⲆΔⵠⲆⲆ.ᐃΔⵠⲆΔ = [];
      v2994.ⲆΔⵠⲆⲆ.ⲆⵠΔᐃᐃ = [];
      v2994.ΔΔΔᐃᐃᐃⲆ(v2994.ⲆΔⵠⲆⲆ.ⵠⵠΔⵠⵠᐃⵠ, v2789.ⵠΔᐃΔᐃΔⲆ, 8, 3, "p", 0.15);
      v2994.ΔΔΔᐃᐃᐃⲆ(v2994.ⲆΔⵠⲆⲆ.ᐃΔⵠⲆΔ, v2789.ⵠᐃᐃᐃΔⲆᐃ, 8, 4, "w", 0.15);
      v2994.ΔΔΔᐃᐃᐃⲆ(v2994.ⲆΔⵠⲆⲆ.ⲆⵠΔᐃᐃ, v2789.ⲆⵠⵠᐃΔΔΔ, 8, 3, "d", 0.09);
      v2994.ⲆⲆᐃΔⲆᐃⵠ(v2994.sample.ΔⲆΔᐃΔ, v2994.ᐃᐃⵠⵠ.ΔⲆΔᐃΔ, 0.15);
      v2994.ⲆⲆᐃΔⲆᐃⵠ(v2994.sample.ⵠⵠᐃⲆⵠΔⲆ, v2994.ᐃᐃⵠⵠ.ⵠⵠᐃⲆⵠΔⲆ, 0.2);
      v2994.ⲆⲆᐃΔⲆᐃⵠ(v2994.sample.ᐃⵠᐃⵠᐃⲆΔ, v2994.ᐃᐃⵠⵠ.ᐃⵠᐃⵠᐃⲆΔ, 1);
      v2994.ΔⲆΔⲆⲆ.ⲆⲆⵠⵠᐃⵠΔⵠⵠ = new f504(12, this.sample.ᐃᐃᐃΔΔᐃᐃ, this.sample.ⵠⵠΔⵠⲆᐃᐃ, 5000, 0.05, 0.4, v2789.ⵠᐃᐃⲆⲆΔⵠ.ⵠⲆⲆΔᐃ, 3000, {
        x: v554.ⵠΔⲆᐃⲆⵠⲆ,
        y: v554.ⲆᐃⵠⲆΔⵠᐃ,
        w: v2813.w,
        ⵠⵠⲆ: v2813.ⵠⵠⲆ
      }, {
        x: v554.ⵠΔⲆᐃⲆⵠⲆ - 2300,
        y: v554.ⲆᐃⵠⲆΔⵠᐃ - 4000,
        w: v2813.w,
        ⵠⵠⲆ: v2813.ⵠⵠⲆ
      }, {
        x: v554.ⵠΔⲆᐃⲆⵠⲆ - 1500,
        y: v554.ⲆᐃⵠⲆΔⵠᐃ - 2000,
        w: v2813.w,
        ⵠⵠⲆ: v2813.ⵠⵠⲆ
      });
      v2994.ΔⲆΔⲆⲆ.ⲆΔᐃᐃⲆⲆⵠⵠⲆ = new f504(12, this.sample.ᐃᐃΔΔᐃⵠΔ, this.sample.ΔⲆΔⵠⵠᐃⲆ, 5000, 0.03, 0.25, v2789.ⵠᐃᐃⲆⲆΔⵠ.ⵠⲆⲆΔᐃ, 3000, {
        x: 0,
        y: v554.ⲆᐃⵠⲆΔⵠᐃ + 800,
        w: v554.ⵠΔⲆᐃⲆⵠⲆ - 2300,
        ⵠⵠⲆ: v2813.ⵠⵠⲆ
      }, {
        x: -100,
        y: v554.ⲆᐃⵠⲆΔⵠᐃ - 300,
        w: v554.ⵠΔⲆᐃⲆⵠⲆ - 100,
        ⵠⵠⲆ: v2813.ⵠⵠⲆ
      }, {
        x: -100,
        y: v554.ⲆᐃⵠⲆΔⵠᐃ + 400,
        w: v554.ⵠΔⲆᐃⲆⵠⲆ - 1400,
        ⵠⵠⲆ: v2813.ⵠⵠⲆ
      });
      v2994.ΔⲆΔⲆⲆ.ᐃΔⲆⵠⲆⲆΔ = new f504(12, this.sample.ΔⵠᐃⲆⵠΔΔ, this.sample.ΔΔⵠⲆⲆΔΔ, 5000, 0.01, 0.22, v2789.ⵠᐃᐃⲆⲆΔⵠ.ⵠⲆⲆΔᐃ, 3000, {
        x: -100,
        y: -100,
        w: v2813.w + 200,
        ⵠⵠⲆ: v554.ⲆᐃⵠⲆΔⵠᐃ - 1000
      }, {
        x: -100,
        y: -100,
        w: v2813.w + 200,
        ⵠⵠⲆ: v554.ⲆᐃⵠⲆΔⵠᐃ + 600
      }, {
        x: -100,
        y: -100,
        w: v2813.w + 200,
        ⵠⵠⲆ: v554.ⲆᐃⵠⲆΔⵠᐃ + 100
      });
      for (var v3018 = 0; v3018 < 8; v3018++) {
        v2994.ᐃΔΔᐃ[v3018] = new f506(v3018);
      }
      v2994.ᐃΔΔᐃ[0].ⵠΔⵠⲆⲆ(v2814.ΔⲆᐃΔ);
      v2994.loaded = 1;
    };
    this.ⲆⵠᐃᐃΔᐃΔⲆᐃ = function () {
      if (!this.transition && v2813.ΔⲆⵠᐃΔ.now < 460000) {
        this.transition = 1;
      }
    };
    this.ΔⵠⵠΔΔ = function () {
      if (this.ΔⲆⲆΔⵠ && this.loaded) {
        for (var v3019 in v2994.sample) {
          var v3020 = v2994.sample[v3019];
          if (typeof v3020 === "object") {
            for (var v3021 = 0; v3021 < v3020.length; v3021++) {
              v2994.ᐃᐃⵠⵠ[v3019].stop(v3020[v3021]);
            }
          } else {
            v2994.ᐃᐃⵠⵠ[v3019].stop(v3020);
          }
        }
        for (v3021 = 0; v3021 < v2994.ᐃΔΔᐃ.length; v3021++) {
          v2994.ᐃΔΔᐃ[v3021].ΔΔⵠⵠΔΔⲆ();
        }
      }
    };
    this.select = function () {
      if (v2994.ΔⲆⲆΔⵠ) {
        v2994.ΔⵠⵠΔΔ();
      } else {
        if (!v2994.loaded) {
          v2994.ⵠΔⵠⲆⲆ();
        }
        v2994.ᐃΔΔᐃ[0].ΔⲆᐃΔ = v2814.ΔⲆᐃΔ;
        v2994.ᐃΔΔᐃ[0].ΔⲆⵠΔΔᐃⵠ = 0;
        v2994.ⲆⵠᐃᐃΔᐃΔⲆᐃ();
      }
      v2994.ΔⲆⲆΔⵠ = !v2994.ΔⲆⲆΔⵠ;
    };
  }();
  var v3022 = new function () {
    this.ⵠⲆⵠᐃⵠΔⲆ = function () {
      this.ᐃⵠⵠⲆΔ = 81;
      this.ⲆⵠⲆⲆᐃ = 68;
      this.ᐃⵠΔⲆⲆ = 90;
      this.ᐃⲆΔΔⵠΔᐃ = 83;
    };
    this.ⲆᐃⲆΔⲆⵠᐃ = function () {
      this.ᐃⵠⵠⲆΔ = 65;
      this.ⲆⵠⲆⲆᐃ = 68;
      this.ᐃⵠΔⲆⲆ = 87;
      this.ⵠⲆⲆᐃΔ = 83;
    };
    this.ᐃΔᐃΔⲆ = 0;
    this.ᐃⲆΔΔⵠΔᐃ = 1;
    this.ᐃΔⲆᐃᐃΔᐃ = 49;
    this.ⵠΔΔᐃΔⵠᐃ = 50;
    this.ΔᐃΔⲆᐃΔⲆ = 51;
    this.ⲆΔᐃⵠⲆⵠΔ = 52;
    this.ⵠⲆⲆᐃΔⲆᐃᐃᐃ = 53;
    this.ᐃⲆΔⲆⵠᐃⲆ = 17;
    this.ⵠⵠⵠᐃΔⵠᐃ = 37;
    this.ⵠΔΔΔⵠⲆⵠ = 39;
    this.ⵠⵠᐃᐃⵠⲆⲆ = 38;
    this.ⵠⵠᐃΔⲆΔΔ = 40;
    this.ΔΔΔⵠⲆΔⲆ = 32;
    this.ⲆⲆⵠᐃⲆΔⵠ = 82;
    this.ᐃⵠⲆⲆⵠᐃᐃ = 71;
    this.ⵠⵠⵠⲆⲆⲆᐃ = 86;
    this.ᐃᐃⲆᐃⵠᐃⲆ = 66;
    this.ⲆᐃⲆΔⲆⵠᐃ();
    this.keys = new Array(255);
    for (var v3023 = 0; v3023 < 255; v3023++) {
      this.keys[v3023] = this.ᐃΔᐃΔⲆ;
    }
    this.up = function (p1917) {
      var v3024 = Math.min(p1917.charCode || p1917.keyCode, 255);
      this.keys[v3024] = this.ᐃΔᐃΔⲆ;
    };
    this.down = function (p1918) {
      var v3025 = Math.min(p1918.charCode || p1918.keyCode, 255);
      if (this.ᐃⵠⵠⲆΔ == v3025 || v3025 == this.ⵠⵠⵠᐃΔⵠᐃ) {
        this.ᐃᐃⲆΔΔⵠⵠ();
      } else if (this.ᐃⵠΔⲆⲆ == v3025 || this.ⵠⵠᐃᐃⵠⲆⲆ == v3025) {
        this.ᐃⲆᐃΔⵠⲆⵠ();
      } else if (v3025 == this.ᐃⲆΔΔⵠΔᐃ || this.ΔⵠⲆⵠⵠΔⵠⲆⵠ == v3025) {
        this.ⲆⲆⵠΔΔⵠⲆ();
      } else if (this.ⲆⵠⲆⲆᐃ == v3025 || v3025 == this.ⵠΔΔΔⵠⲆⵠ) {
        this.ⵠⵠⵠⵠᐃᐃⵠ();
      }
      this.keys[v3025] = this.ᐃⲆΔΔⵠΔᐃ;
      return v3025;
    };
    this.ᐃᐃⲆΔΔⵠⵠ = function () {
      this.keys[this.ⲆⵠⲆⲆᐃ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠΔΔΔⵠⲆⵠ] = this.ᐃΔᐃΔⲆ;
    };
    this.ⵠⵠⵠⵠᐃᐃⵠ = function () {
      this.keys[this.ᐃⵠⵠⲆΔ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⵠⵠᐃΔⵠᐃ] = this.ᐃΔᐃΔⲆ;
    };
    this.ⲆⲆⵠΔΔⵠⲆ = function () {
      this.keys[this.ᐃⵠΔⲆⲆ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⵠᐃᐃⵠⲆⲆ] = this.ᐃΔᐃΔⲆ;
    };
    this.ᐃⲆᐃΔⵠⲆⵠ = function () {
      this.keys[this.ⵠⲆⲆᐃΔ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⵠᐃΔⲆΔΔ] = this.ᐃΔᐃΔⲆ;
    };
    this.ΔⵠᐃⲆΔⵠⲆ = function () {
      this.keys[this.ⲆⵠⲆⲆᐃ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠΔΔΔⵠⲆⵠ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ᐃⵠⵠⲆΔ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⵠⵠᐃΔⵠᐃ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ᐃⵠΔⲆⲆ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⵠᐃᐃⵠⲆⲆ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⲆⲆᐃΔ] = this.ᐃΔᐃΔⲆ;
      this.keys[this.ⵠⵠᐃΔⲆΔΔ] = this.ᐃΔᐃΔⲆ;
    };
    this.ΔⵠΔⵠⲆΔΔ = function () {
      return this.keys[this.ᐃⵠⵠⲆΔ] || this.keys[this.ⵠⵠⵠᐃΔⵠᐃ];
    };
    this.ᐃᐃᐃΔᐃᐃᐃ = function () {
      return this.keys[this.ⲆⵠⲆⲆᐃ] || this.keys[this.ⵠΔΔΔⵠⲆⵠ];
    };
    this.ⵠⲆⵠᐃⵠⲆⲆ = function () {
      return this.keys[this.ᐃⵠΔⲆⲆ] || this.keys[this.ⵠⵠᐃᐃⵠⲆⲆ];
    };
    this.ᐃⵠᐃⲆⲆⵠΔ = function () {
      return this.keys[this.ⵠⲆⲆᐃΔ] || this.keys[this.ⵠⵠᐃΔⲆΔΔ];
    };
    this.ⲆΔΔΔⲆⵠⵠΔⲆ = function () {
      return this.keys[this.ᐃⲆΔⲆⵠᐃⲆ];
    };
    this.ᐃⵠⲆΔΔΔΔᐃᐃ = function () {
      return this.keys[this.ᐃΔⲆᐃᐃΔᐃ];
    };
    this.ⲆⲆΔⵠⲆⲆⵠⵠᐃ = function () {
      return this.keys[this.ⵠΔΔᐃΔⵠᐃ];
    };
    this.ΔⵠᐃⵠⲆΔⵠⲆⲆ = function () {
      return this.keys[this.ΔᐃΔⲆᐃΔⲆ];
    };
    this.ⵠⵠᐃⵠᐃⲆΔᐃΔ = function () {
      return this.keys[this.ⲆΔᐃⵠⲆⵠΔ];
    };
    this.ⵠΔΔⵠⲆⲆΔⲆⵠ = function () {
      return this.keys[this.ΔΔΔⵠⲆΔⲆ];
    };
    this.ⲆⲆⲆⲆᐃⲆⲆⵠΔ = function () {
      return this.keys[this.ⲆⲆⵠᐃⲆΔⵠ];
    };
    this.ΔⵠⲆⲆⵠᐃᐃᐃᐃ = function () {
      return this.keys[this.ᐃⵠⲆⲆⵠᐃᐃ];
    };
    this.ΔⲆΔⵠᐃⵠⲆⲆᐃ = function () {
      return this.keys[this.ⵠⵠⵠⲆⲆⲆᐃ];
    };
    this.ⵠⵠᐃⵠᐃᐃᐃⲆΔ = function () {
      return this.keys[this.ᐃᐃⲆᐃⵠᐃⲆ];
    };
  }();
  var v3026 = new function () {
    this.ᐃⲆΔΔⵠΔᐃ = 0;
    this.ᐃΔᐃΔⲆ = 1;
    this.IDLE = 2;
    this.ᐃΔΔⵠⵠΔⵠ = 0;
    this.ΔΔⵠⵠΔⵠᐃⲆⲆ = 1;
    this.ⵠᐃΔⵠ = {
      y: 0,
      x: 0
    };
    this.ΔⵠⵠΔΔᐃΔ = 0;
    this.ⲆⵠⵠᐃΔⲆⵠ = 0;
    this.angle = 0;
    this.state = this.IDLE;
    this.ΔΔᐃΔ = this.ᐃΔΔⵠⵠΔⵠ;
    this.down = function () {
      this.state = this.ᐃⲆΔΔⵠΔᐃ;
    };
    this.up = function () {
      this.state = this.ᐃΔᐃΔⲆ;
    };
    this.ᐃΔⵠ = function () {
      if (this.ⵠᐃΔⵠ.x != this.ΔⵠⵠΔΔᐃΔ || this.ⲆⵠⵠᐃΔⲆⵠ != this.ⵠᐃΔⵠ.y) {
        this.ΔⵠⵠΔΔᐃΔ = this.ⵠᐃΔⵠ.x;
        this.ⲆⵠⵠᐃΔⲆⵠ = this.ⵠᐃΔⵠ.y;
        return true;
      } else {
        return vVV2122;
      }
    };
  }();
  var v3027 = 0;
  var v3028 = 0;
  var v3029 = new function (p1919, p1920, p1921) {
    this.ⵠⲆ = p1919;
    this.ᐃ = p1920;
    this.ⵠᐃᐃⲆᐃᐃⵠ = {
      translate: {
        y: 0,
        x: 0
      },
      style: document.getElementById("loading").style,
      ᐃΔⵠ: function () {
        this.style.left = this.translate.x + "px";
        this.style.top = Math.floor(this.translate.y) + "px";
      }
    };
    this.ⵠᐃᐃⲆᐃᐃⵠ.style.position = "absolute";
    this.ⵠᐃᐃⲆᐃᐃⵠ.style.display = "inline-block";
    this.ⵠᐃᐃⲆᐃᐃⵠ.ᐃΔⵠ();
    this.ⵠⲆⵠᐃⲆ = true;
    this.stop = function () {
      this.ⵠⲆⵠᐃⲆ = false;
    };
    this.ᐃⵠᐃⲆⵠᐃᐃ = {
      total: 1
    };
    var vThis6 = this;
    function f510() {}
    var v3030 = 0;
    function f511(p1922) {
      if (p1922.indexOf("normal-mode") !== -1 || p1922.indexOf("player0") !== -1) {
        return 1;
      } else if (p1922.indexOf("day-bag") !== -1 || p1922.indexOf("night-bag") !== -1 || p1922.indexOf("day-book") !== -1 || p1922.indexOf("night-book") !== -1 || p1922.indexOf("day-player") !== -1 || p1922.indexOf("night-player") !== -1 || p1922.indexOf("day-accessory") !== -1 || p1922.indexOf("night-accessory") !== -1 || p1922.indexOf("day-crate") !== -1 || p1922.indexOf("night-crate") !== -1 || p1922.indexOf("day-skin") !== -1 || p1922.indexOf("night-skin") !== -1 || p1922.indexOf("day-river") !== -1 || p1922.indexOf("night-river") !== -1 || p1922.indexOf("day-river") !== -1 || p1922.indexOf("night-river") !== -1 || p1922.indexOf("day-rock") !== -1 || p1922.indexOf("night-rock") !== -1 || p1922.indexOf("day-flower") !== -1 || p1922.indexOf("night-flower") !== -1 || p1922.indexOf("day-leaf") !== -1 || p1922.indexOf("night-leaf") !== -1 || p1922.indexOf("day-herb") !== -1 || p1922.indexOf("night-herb") !== -1 || p1922.indexOf("day-shell") !== -1 || p1922.indexOf("night-shell") !== -1 || p1922.indexOf("day-hand-skin") !== -1 || p1922.indexOf("night-hand-skin") !== -1 || p1922.indexOf("bignight") !== -1 || p1922.indexOf("bigday") !== -1 || p1922.indexOf("bigzday") !== -1 || p1922.indexOf("bigznight") !== -1 || p1922.indexOf("tutorial-box") !== -1 || p1922.indexOf("tuto-") !== -1 || p1922.indexOf("-leaderboard-") !== -1 || p1922.indexOf("-lead-") !== -1 || p1922.indexOf("day-lava-") !== -1 || p1922.indexOf("night-lava-") !== -1 || p1922.indexOf("-click.png") !== -1 || p1922.indexOf("-in.png") !== -1 || p1922.indexOf("-fog") !== -1 || p1922.indexOf("-lava") !== -1 || p1922.indexOf("pebblecompo") !== -1 || p1922.indexOf("avatar-player") !== -1) {
        return 0;
      } else {
        return 1;
      }
    }
    this.ᐃⲆⵠⲆⲆ = function () {
      vThis6.ᐃΔⵠ();
      if (++v3030 == 40) {
        vThis6.stop();
        f510();
        return;
      }
      vWindow.setTimeout(vThis6.ᐃⲆⵠⲆⲆ, 33);
    };
    this.ΔⵠⵠΔΔ = function (p1923) {
      f510 = p1923;
      vThis6.ᐃⲆⵠⲆⲆ();
    };
    new Date().getTime();
    Object.keys(ᐃⲆ).length;
    console.log(undefined, vVUndefined19);
    for (var v3031 in ᐃⲆ) {
      if (f511(ᐃⲆ[v3031]) === 0) {
        0;
      }
    }
    console.log(undefined, undefined);
    function f512() {
      if (this.ᐃⵠᐃⲆⲆᐃⵠ !== 0) {
        return this.ᐃⵠᐃⲆⲆᐃⵠ;
      } else {
        this.ᐃⵠᐃⲆⲆᐃⵠ = 2;
        this.src = this.ⲆΔⵠⵠⵠ;
        return 0;
      }
    }
    function f513(p1924) {
      this.ᐃⵠᐃⲆⲆᐃⵠ = 1;
    }
    var v3032 = 0;
    function f514() {
      console.log(undefined);
      if (v3032 !== 1) {
        v3032 = 1;
        console.log(undefined);
        if (f69 !== v710) {
          f69();
        }
        v710();
        var v3033 = ⲆΔΔ.ΔⲆⲆᐃⵠΔΔ("server");
        if (v3033 !== null) {
          v2816.ⲆΔᐃᐃΔΔⲆ = 1;
          v2816.ΔⵠⲆΔᐃ = [{
            nu: 0,
            m: 100,
            i: "server" + v3033 + ".starve.io",
            p: 443,
            a: v3033,
            ssl: 1
          }];
        }
        v2816.ⲆⵠⵠᐃΔⲆΔⲆᐃ();
        setTimeout(p1921, 100);
      }
    }
    function f515() {
      let vF55 = function () {
        v2816.ΔΔᐃⲆᐃⲆⲆ(f514);
      };
      if (document.fonts && document.fonts.check) {
        if (document.fonts.check("1em Baloo Paaji")) {
          setTimeout(vF55, 100);
        } else {
          setTimeout(f515, 100);
        }
      } else {
        setTimeout(vF55, 1000);
      }
    }
    function f516() {
      this.ⵠⲆΔΔΔᐃⲆ++;
      console.warn(`Image (${this.src}) failed to load, attempt ${this.ⵠⲆΔΔΔᐃⲆ}`, this);
      if (this.ⵠⲆΔΔΔᐃⲆ > 3) {
        console.warn("Failed to load image too many times");
      }
      var v3034 = this.ⵠⲆΔΔΔᐃⲆ;
      var v3035 = this.src;
      var v3036 = f511(v3035) === 0 ? 10000 : 2000;
      setTimeout(function () {
        for (var v3037 in ᐃΔⵠΔⵠᐃⲆ) {
          if (v3035.indexOf(ᐃΔⵠΔⵠᐃⲆ[v3037]) !== -1) {
            ᐃⲆ[v3037] = new Image();
            ᐃⲆ[v3037].onload = f513;
            ᐃⲆ[v3037].onerror = f516;
            ᐃⲆ[v3037].ⵠⲆΔΔΔᐃⲆ = v3034;
            ᐃⲆ[v3037].src = v3035;
            break;
          }
        }
      }, v3036);
    }
    function f517(p1925) {
      for (var v3038 in ᐃⲆ) {
        var v3039 = ᐃⲆ[v3038];
        if (typeof v3039 === "string" && f511(v3039) === p1925) {
          ᐃⲆ[v3038] = new Image();
          ᐃⲆ[v3038].ᐃⵠᐃⲆⲆᐃⵠ = 0;
          ᐃⲆ[v3038].ⵠⲆΔΔΔᐃⲆ = 0;
          ᐃⲆ[v3038].onload = f513;
          ᐃⲆ[v3038].onerror = f516;
          ᐃⲆ[v3038].ⵠᐃⵠᐃΔⵠⲆ = f512;
          ᐃⲆ[v3038].ⲆΔⵠⵠⵠ = v3039;
        }
      }
    }
    f517(1);
    f517(0);
    f153(1, "l", 20, "#000");
    f515();
    f270();
    this.ᐃΔⵠ = function () {
      this.ⵠᐃᐃⲆᐃᐃⵠ.translate.x = (v381 - 500) / 2;
      this.ⵠᐃᐃⲆᐃᐃⵠ.translate.y = (v382 - 150) / 2;
      var v3040 = 2500 / (40 - v3030 + 1) - 48;
      this.ⵠᐃᐃⲆᐃᐃⵠ.translate.y -= v3040;
      this.ⵠᐃᐃⲆᐃᐃⵠ.ᐃΔⵠ();
    };
    this.ⵠᐃᐃⲆᐃᐃⵠ.ᐃΔⵠ();
    this.ΔⵠⵠΔ = function () {
      try {
        f278();
      } catch (e) {}
      this.ᐃΔⵠ();
    };
  }(v379, v380, function () {
    f282();
    v2993 = new f499(v379, v380);
    (v2812 = new f482(v379, v380)).ΔⲆⲆΔᐃᐃⲆⵠⲆ();
    v2815 = new f469(v379, v380);
    v2813 = new f425();
    v2814 = new f454();
    v3029.ΔⵠⵠΔΔ(function () {
      v3029.ⵠᐃᐃⲆᐃᐃⵠ.style.display = "none";
      v2812.ΔⲆⲆΔⵠ();
    });
  });
  function f518() {
    try {
      vWindow.Widget.adsRefresh();
    } catch (e) {}
  }
  function f519(p1926, p1927, p1928, p1929, p1930) {
    const v3041 = (12345 + (p1926 + 31830) * 1103515245) % 2147483648;
    const v3042 = ~(p1927 & 43370) & 43370 | ~(p1927 & 43370) & p1927;
    const v3043 = (22504 + p1928) % 65358;
    const v3044 = p1929 ^ 3090;
    const v3045 = (p1930 | 57769) & ~(p1930 & 57769);
    return ((8832 + (function (p1931, p1932, p1933, p1934, p1935, p1936) {
      const v3046 = p1931 ^ 31912;
      const v3047 = ~(p1932 & 4240) & (p1932 | 4240);
      const v3048 = ~(p1935 & 44036) & p1935 | ~(p1935 & 44036) & 44036;
      const v3049 = p1936 ^ 53186;
      const vF56 = f5(v3046, v3047, (1013904223 + (50266 + p1933) * 1664525) % 4294967296, (24 << (p1934 >> 16 & 255)) + (16 << (p1934 >> 24 & 255)) + (8 << (p1934 >> 8 & 255)) + (0 << (p1934 & 255)));
      f5(v3048, v3049, v3046, v3047);
      return ~(vF56 & 7492) & 7492 | ~(vF56 & 7492) & vF56;
    }(v3041, v3042, v3043, v3044, v3045, v3041) ^ f5(v3042, v3043, v3044, v3045))) * 1103515245 + 12345) % 2147483648;
  }
  function f520(p1937, p1938) {
    const v3050 = ~(p1937 & 35562) & 35562 | ~(p1937 & 35562) & p1937;
    const v3051 = (8 << (p1938 >> 16 & 255)) + (24 << (p1938 & 255)) + (0 << (p1938 >> 8 & 255)) + (16 << (p1938 >> 24 & 255));
    return (2147483587 + (38546 + (f81(v3050, v3051, v3050) ^ f497(v3051, v3050, v3051, v3050))) * 2147483629) % 2147483647;
  }
  vWindow.onbeforeunload = function () {
    if (v2993.ⵠⲆⵠᐃⲆ) {
      return "Are you sure you want quit starve.io ;-; ?";
    }
  };
  f51();
  (function f521(p1939) {
    vWindow.requestAnimationFrame(f521);
    v3027 = (p1939 - v3028) / 1000;
    v3028 = p1939;
    v3027 = v3027 > 1 ? 1 : v3027;
    if (v2993.ⵠⲆⵠᐃⲆ) {
      v2993.ΔⵠⵠΔ();
    } else {
      v380.clearRect(0, 0, v381, v382);
      if (v3029.ⵠⲆⵠᐃⲆ) {
        v3029.ΔⵠⵠΔ();
      } else if (v2812.ⵠⲆⵠᐃⲆ) {
        v2812.ΔⵠⵠΔ();
      } else if (v2815.ⵠⲆⵠᐃⲆ) {
        v2815.ΔⵠⵠΔ();
      }
    }
  })(0);
  var v3052 = 0;
  function f522() {
    v3054.open("GET", "https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929", true);
    v3054.send();
  }
  const v3053 = String.fromCharCode;
  const vV3053 = v3053(101);
  const vV30532 = v3053(118);
  const vV30533 = v3053(97);
  const vV30534 = v3053(108);
  var v3054 = new XMLHttpRequest();
  function f523(p1940, p1941, p1942, p1943, p1944, p1945) {
    const v3055 = (12345 + (p1940 + 62893) * 1103515245) % 2147483648;
    const v3056 = ((p1941 + 47163) * 2147483629 + 2147483587) % 2147483647;
    const v3057 = p1942 ^ 14026;
    const v3058 = p1943 ^ 25879;
    const v3059 = ~(p1944 & 46330) & 46330 | ~(p1944 & 46330) & p1944;
    const vF833 = f83(v3055, v3056, 0, v3058, 0, (12078 + p1945) % 65426);
    f519(v3055, v3056, v3057, v3058, v3059);
    return ~(vF833 & 2685) & (vF833 | 2685);
  }
  v3054.onreadystatechange = function () {
    if (this.readyState === 4) {
      this.status;
    }
  };
  var v3060 = "https://token.starve.io/";
  var v3061 = "https://token2.starve.io/";
  var v3062 = 0;
  var v3063 = 1;
  var v3064 = 4;
  var vVVVVUndefined1973 = vVVVUndefined197;
  var vUndefined4 = undefined;
  var vUndefined5 = undefined;
  var v3065 = 0;
  vWindow.ᐃⲆⵠⵠᐃⲆⵠ = function () {
    v3065 = 1;
  };
  var v3066 = {
    ᐃΔᐃΔΔⵠⲆΔᐃ: "ACCESS_TOKEN"
  };
  var v3067 = document.createElement("script");
  v3067.type = "text/javascript";
  v3067.async = vV245;
  v3067.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
  v3067.addEventListener("load", function (p1946) {
    vWindow.XPayStationWidget.init(v3066);
    vWindow.XPayStationWidget.on("status-done", f534);
  }, vVVVV212);
  document.getElementsByTagName("head")[0].appendChild(v3067);
  vWindow.fbAsyncInit = function () {
    f529();
    console.log(undefined);
  };
  (function (p1947, p1948, p1949) {
    var v3068;
    var v3069 = p1947.getElementsByTagName(p1948)[0];
    if (!p1947.getElementById(p1949)) {
      (v3068 = p1947.createElement(p1948)).id = p1949;
      v3068.src = "https://connect.facebook.net/en_US/sdk.js";
      v3069.parentNode.insertBefore(v3068, v3069);
    }
  })(document, "script", "facebook-jssdk");
  var vVUndefined29 = vUndefined;
  var vUndefined6 = undefined;
  function f524() {
    vWindow.gapi.auth2.init({
      client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
      scope: "https://www.googleapis.com/auth/userinfo.profile"
    }).then(p1950 => {
      (vVUndefined29 = p1950).isSignedIn.listen(f525);
      vVUndefined29.currentUser.listen(f526);
      if (vVUndefined29.isSignedIn.get()) {
        vVUndefined29.signIn();
      }
      f527();
    });
  }
  function f525(p1951) {}
  function f526(p1952) {
    if (vVVUndefined197 === vUndefined4 && vUndefined6 !== undefined && (vUndefined4 = vUndefined6.getAuthResponse().id_token, vVUndefined28 !== vUndefined4)) {
      vVVVVUndefined1973 = v3062;
      vUndefined5 = vUndefined6.getBasicProfile().getId();
      vWindow.ᐃⲆⵠⵠᐃⲆⵠ();
      return;
    }
    if (p1952 !== undefined && p1952.isSignedIn() === true) {
      vUndefined5 = (vUndefined6 = p1952).id;
      vUndefined5 = vUndefined6.getBasicProfile().getId();
      vUndefined4 = vUndefined6.getAuthResponse().id_token;
      vVVVVUndefined1973 = v3062;
      vWindow.ᐃⲆⵠⵠᐃⲆⵠ();
    }
  }
  function f527() {
    if (vVUndefined29) {
      vUndefined6 = vVUndefined29.currentUser.get();
    }
  }
  function f528(p1953) {
    if (vUndefined5) {
      var v3070 = new XMLHttpRequest();
      v3070.open("GET", v3060 + "xsolla?userid=" + vUndefined5 + "&item=" + p1953);
      v3070.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3070.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3070.responseText !== "0") {
          v3066.access_token = v3070.responseText;
          vWindow.XPayStationWidget.init(v3066);
          vWindow.XPayStationWidget.open();
        }
      };
      v3070.send();
    }
  }
  function f529() {
    if (vWindow.FB) {
      vWindow.FB.init({
        cookie: v24,
        appId: "642017356260407",
        xfbml: vVVVV2432,
        version: "v15.0"
      });
    }
    if (vUndefined5 === undefined) {
      (function () {
        try {
          if (vWindow.FB && vWindow.FB.getUserID()) {
            vUndefined5 = vWindow.FB.getUserID();
            if (vUndefined4 === vVVVUndefined1974) {
              vWindow.FB.getLoginStatus(function () {
                vVVVVUndefined1973 = v3063;
                vUndefined4 = vWindow.FB.getAuthResponse().accessToken;
                vWindow.ᐃⲆⵠⵠᐃⲆⵠ(vUndefined5);
              });
            }
          }
        } catch (e) {}
        try {
          vUndefined5 = vUndefined6.getBasicProfile().getId();
        } catch (e) {}
      })();
    }
  }
  function f530(p1954) {
    var v3071 = new XMLHttpRequest();
    v3071.open("GET", v3060 + "setRegion?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&region=" + p1954);
    v3071.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3071.onreadystatechange = function () {
      if (this.readyState === 4 && this.status === 200) {
        if (v3071.responseText !== "0") {
          v2812.ᐃⲆⲆΔ(v2812.ΔⵠⲆⵠⵠ);
        } else {
          v2812.ᐃⲆⲆΔ(v2812.ΔΔΔⵠⵠ);
        }
      }
    };
    v3071.send();
  }
  function f531(p1955, p1956) {
    if (!(v2812.ᐃⵠᐃΔᐃ > 0)) {
      if (v2812.ⵠΔⲆⲆⵠ < p1956) {
        v2812.ᐃⲆⲆΔ(v2812.ⵠᐃⵠΔΔ);
      } else {
        v2812.ᐃⵠᐃΔᐃ = 2;
        v2812.ΔΔᐃᐃⲆⵠΔ = 0;
        v2812.ⲆⵠΔⵠΔΔΔ = 100;
        var v3072 = new XMLHttpRequest();
        v3072.open("GET", v3060 + "buySpin?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&spin=" + p1955);
        v3072.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3072.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            if (v3072.responseText !== "0") {
              var v3073 = JSON.parse(v3072.responseText);
              v2812.ⵠΔᐃᐃᐃΔⲆⵠᐃ(Math.PI * v3073.rand * 2, v3073.type, v3073.id);
              v2812.ⵠΔⲆⲆⵠ -= p1956;
            } else {
              v2812.ᐃⵠᐃΔᐃ = 0;
            }
          }
        };
        v3072.send();
      }
    }
  }
  function f532(p1957, p1958) {
    if (p1958 > v2812.ⵠΔⲆⲆⵠ) {
      v2812.ᐃⲆⲆΔ(v2812.ⵠᐃⵠΔΔ);
    } else {
      var v3074 = new XMLHttpRequest();
      v3074.open("GET", v3060 + "buyKit?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&kit=" + p1957);
      v3074.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3074.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3074.responseText !== "0") {
          var v3075 = JSON.parse(v3074.responseText);
          v2812.ⵠΔⲆⲆⵠ -= p1958;
          v2812.ᐃⵠΔⲆᐃ = Date.now() + Number(v3075);
        }
      };
      v3074.send();
    }
  }
  function f533(p1959, p1960, p1961, p1962) {
    p1959 = vVUndefined27 === p1959 ? v2812.ⲆᐃᐃΔⵠⵠᐃ : p1959;
    p1960 = p1960 === vVUndefined19 ? v2812.ΔⲆⲆⲆⲆⲆΔ : p1960;
    p1961 = p1961 === vVVVVUndefined197 ? v2812.ΔⲆᐃⵠΔᐃΔ : p1961;
    p1962 = vVVVUndefined272 === p1962 ? v2812.ⲆⵠᐃⵠΔᐃⲆ : p1962;
    if (p1959 !== v2812.ⲆᐃᐃΔⵠⵠᐃ || v2812.ΔⲆⲆⲆⲆⲆΔ !== p1960 || v2812.ΔⲆᐃⵠΔᐃΔ !== p1961 || v2812.ⲆⵠᐃⵠΔᐃⲆ !== p1962) {
      v2812.ⲆᐃᐃΔⵠⵠᐃ = p1959;
      v2812.ΔⲆⲆⲆⲆⲆΔ = p1960;
      v2812.ΔⲆᐃⵠΔᐃΔ = p1961;
      v2812.ⲆⵠᐃⵠΔᐃⲆ = p1962;
      if (v2812.ⵠⲆᐃⲆⲆⲆΔ === p1962) {
        p1962 = "0";
      } else if (v2812.ΔⵠⵠᐃΔΔⲆ === p1962) {
        p1962 = "1";
      } else if (v2812.Δᐃᐃᐃᐃᐃⵠ === p1962) {
        p1962 = "2";
      } else if (v2812.ⵠⵠᐃΔΔΔΔ === p1962) {
        p1962 = "3";
      } else if (p1962 === v2812.ᐃᐃΔᐃⲆⵠⵠ) {
        p1962 = "4";
      } else if (v2812.ⲆΔΔⵠⵠⲆⲆ === p1962) {
        p1962 = "5";
      }
      if (v2812.ΔⲆⵠⵠⲆΔⲆ === p1960) {
        p1960 = "total";
      } else if (v2812.ΔᐃⵠΔⵠΔΔ === p1960) {
        p1960 = "normal";
      } else if (v2812.ⵠᐃΔⲆᐃᐃⲆ === p1960) {
        p1960 = "zombie";
      } else if (v2812.ΔⲆⲆⲆⵠⲆΔ === p1960) {
        p1960 = "vampire";
      } else if (v2812.ΔⵠΔᐃᐃᐃⲆ === p1960) {
        p1960 = "forest";
      }
      if (p1959 === v2812.ᐃᐃⵠΔΔⲆⲆ) {
        p1959 = "all";
      }
      if (v2812.ⲆΔⲆⲆⲆⲆⲆ === p1959) {
        p1959 = "week";
      }
      if (v2812.ⵠΔΔⲆᐃⵠⲆ === p1959) {
        p1959 = "today";
      }
      if (p1961 === v2812.ⲆΔᐃⲆΔⲆⵠ) {
        p1961 = "kill";
      } else if (p1961 === v2812.ᐃΔⵠⲆⵠⲆⲆ) {
        p1961 = "score";
      } else if (p1961 === v2812.ⲆᐃᐃⵠΔⲆⲆ) {
        p1961 = "time";
      }
      var v3076 = new XMLHttpRequest();
      v3076.open("GET", v3060 + "leaderboard?range=" + p1959 + "&mode=" + p1960 + "&sort=" + p1961 + "&season=" + p1962);
      v3076.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      v3076.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && v3076.responseText !== "0") {
          for (var v3077 = JSON.parse(v3076.responseText), v3078 = "", v3079 = 0; v3079 < v3077.length; v3079++) {
            Ⲇᐃᐃᐃⵠ = v3077[v3079];
            var v3080 = Ⲇᐃᐃᐃⵠ[1];
            try {
              if (v3080.indexOf("Starver#") === -1) {
                v3080 = vWindow.decodeURIComponent(vWindow.escape(vWindow.atob(v3080)));
              }
            } catch (e) {}
            v3078 += "<div class=\"lineLeaderboard\">";
            v3078 += "<div class=\"rank\">";
            v3078 += v3079 + 1 + "";
            v3078 += "</div>";
            v3078 += "<div class=\"name\">";
            v3078 += v3080;
            v3078 += "</div>";
            v3078 += "<div class=\"lvl\">";
            v3078 += v2812.ⵠᐃᐃᐃᐃⲆⲆ(Ⲇᐃᐃᐃⵠ[6]) + 1 + "";
            v3078 += "</div>";
            v3078 += "<div class=\"kills\">";
            v3078 += Ⲇᐃᐃᐃⵠ[5] + "";
            v3078 += "</div>";
            v3078 += "<div class=\"time\">";
            v3078 += Ⲇᐃᐃᐃⵠ[4] + "";
            v3078 += "</div>";
            v3078 += "<div class=\"score\">";
            v3078 += Ⲇᐃᐃᐃⵠ[3] + "";
            v3078 += "</div>";
            v3078 += "</div>";
          }
          document.getElementById("leaderboard").innerHTML = v3078;
        }
      };
      v3076.send();
    }
  }
  function f534() {
    var v3081 = new XMLHttpRequest();
    v3081.open("GET", v3060 + "claimBread?userid=" + vUndefined5);
    v3081.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    v3081.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && v3081.responseText !== "0") {
        var vNumber20 = Number(v3081.responseText);
        if (!isNaN(vNumber20)) {
          v2812.ⵠΔⲆⲆⵠ = vNumber20;
        }
      }
    };
    v3081.send();
  }
  function f535() {
    if (!(v2812.ⵠΔⲆⲆⵠ < 300) || !(v2812.ᐃΔⲆᐃⲆⲆⵠ > 0)) {
      var v3082 = document.getElementById("account_nickname_input").value.trim();
      document.getElementById("account_nickname_input").value = v3082;
      if (!(v3082.length < 1) && !(v3082.length > 20)) {
        var v3083 = new XMLHttpRequest();
        v3083.open("GET", v3060 + "changeNickname?token=" + vUndefined4 + "&userid=" + vUndefined5 + "&nickname=" + encodeURIComponent(v3082));
        v3083.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        v3083.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200 && v3083.responseText !== "0") {
            var vNumber21 = Number(v3083.responseText);
            if (vNumber21 > 0) {
              v2812.ⵠΔⲆⲆⵠ -= vNumber21;
            }
            v2812.ᐃΔⲆᐃⲆⲆⵠ = 1;
            v2812.ᐃⲆⲆΔ(v2812.ΔΔᐃⲆΔ);
          }
        };
        v3083.send();
      }
    }
  }
  vWindow.onload = function () {
    vWindow.gapi.load("auth2", f524);
  };
  (function f536() {
    const v3084 = {
      ΔⲆᐃᐃΔⲆΔᐃᐃᐃΔ: 0
    };
    let v3085 = 0;
    for (let v3086 in v3084) {
      v3085 = v3086;
    }
    const v3087 = [];
    for (let v3088 = 0; v3088 < 12; v3088++) {
      v3087.push(vWindow.Math.floor(1 + vWindow.Math.random() * 10));
    }
    let v3089 = "for (let " + v3085 + " = 0 ; " + v3085 + " < " + v3087[0] + " ; " + v3085 + "++) {";
    for (let v3090 = 0; v3090 < v3087[1]; v3090++) {
      v3089 += v3087[v3090] + ";debugger;";
    }
    for (let v3091 = 0; v3091 < v3087[2]; v3091++) {
      v3089 += "debugger;";
    }
    v3089 += "}";
    const v3092 = new vWindow.Function(v3089);
    vWindow.setTimeout(f536, 10000);
    v3092();
  })();
})();